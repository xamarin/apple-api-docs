<Overview>
  <Assemblies>
    <Assembly Name="Xamarin.iOS" Version="0.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 11 00 00 00 43 8a c2 a5 ac fb f1 6c bd 2b 2b 47 a6 27 62 f2 73 df 9c b2 79 5c ec cd f7 7d 10 bf 50 8e 69 e7 a3 62 ea 7a 45 45 5b bf 3a c9 55 e1 f2 e2 81 4f 14 4e 5d 81 7e fc 4c 65 02 cc 01 2d f3 10 78 33 48 30 4e 3a e3 85 73 c6 d6 58 c2 34 02 58 21 fd a8 7a 0b e8 a0 d5 04 df 56 4e 2c 93 b2 b8 78 92 5f 42 50 3e 9d 54 df ef 9f 95 86 d9 e6 f3 8a 30 57 69 58 7b 1d e0 1f 6c 04 10 32 8b 2c 97 33 db ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Xamarin Inc.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyInformationalVersion("10.99.8.54; git-rev-head:27b15fae5325986988360dd22c5d25d246b1d617; git-branch:xcode9")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Xamarin.iOS")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Xamarin.iOS")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.InternalsVisibleTo("System.Net.Http, PublicKey=002400000480000094000000060200000024000052534131000400000100010007d1fa57c4aed9f0a32e84aa0faefd0de9e8fd6aec8f87fb03766c834c99921eb23be79ad9d5dcc1dd9ad236132102900b723cf980957fc4e177108fc607774f29e8320e92ea05ece4e821c0a5efe8f1645c4c0c93c1ab99285d622caa652c1dfad63d745d6f2de5f17e5eaf0fc4963d261c8a12436518206dc093344d5ad293")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="OpenTK-1.0" Version="0.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 11 00 00 00 43 8a c2 a5 ac fb f1 6c bd 2b 2b 47 a6 27 62 f2 73 df 9c b2 79 5c ec cd f7 7d 10 bf 50 8e 69 e7 a3 62 ea 7a 45 45 5b bf 3a c9 55 e1 f2 e2 81 4f 14 4e 5d 81 7e fc 4c 65 02 cc 01 2d f3 10 78 33 48 30 4e 3a e3 85 73 c6 d6 58 c2 34 02 58 21 fd a8 7a 0b e8 a0 d5 04 df 56 4e 2c 93 b2 b8 78 92 5f 42 50 3e 9d 54 df ef 9f 95 86 d9 e6 f3 8a 30 57 69 58 7b 1d e0 1f 6c 04 10 32 8b 2c 97 33 db ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="MonoTouch.Dialog-1" Version="0.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 11 00 00 00 43 8a c2 a5 ac fb f1 6c bd 2b 2b 47 a6 27 62 f2 73 df 9c b2 79 5c ec cd f7 7d 10 bf 50 8e 69 e7 a3 62 ea 7a 45 45 5b bf 3a c9 55 e1 f2 e2 81 4f 14 4e 5d 81 7e fc 4c 65 02 cc 01 2d f3 10 78 33 48 30 4e 3a e3 85 73 c6 d6 58 c2 34 02 58 21 fd a8 7a 0b e8 a0 d5 04 df 56 4e 2c 93 b2 b8 78 92 5f 42 50 3e 9d 54 df ef 9f 95 86 d9 e6 f3 8a 30 57 69 58 7b 1d e0 1f 6c 04 10 32 8b 2c 97 33 db ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="MonoTouch.NUnitLite" Version="1.0.0.0">
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("NUnit Software")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyConfiguration(".NET 4.5")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("Copyright 2013, Charlie Poole")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyDescription("NUnitLite unit-testing framework")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("1.0.0.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("NUnitLite")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("NUnitLite")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTrademark("NUnitLite")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.CompilationRelaxations(8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.Guid("0be367fd-d825-4039-a70b-54a3557170ec")</AttributeName>
        </Attribute>
      </Attributes>
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 11 00 00 00 43 8a c2 a5 ac fb f1 6c bd 2b 2b 47 a6 27 62 f2 73 df 9c b2 79 5c ec cd f7 7d 10 bf 50 8e 69 e7 a3 62 ea 7a 45 45 5b bf 3a c9 55 e1 f2 e2 81 4f 14 4e 5d 81 7e fc 4c 65 02 cc 01 2d f3 10 78 33 48 30 4e 3a e3 85 73 c6 d6 58 c2 34 02 58 21 fd a8 7a 0b e8 a0 d5 04 df 56 4e 2c 93 b2 b8 78 92 5f 42 50 3e 9d 54 df ef 9f 95 86 d9 e6 f3 8a 30 57 69 58 7b 1d e0 1f 6c 04 10 32 8b 2c 97 33 db ]</AssemblyPublicKey>
    </Assembly>
  </Assemblies>
  <Remarks>To be added.</Remarks>
  <Copyright>To be added.</Copyright>
  <Types>
    <Namespace Name="CoreVideo">
      <Type Name="CVOpenGLESTexture" Kind="Class" />
      <Type Name="CVOpenGLESTextureCache" Kind="Class" />
    </Namespace>
    <Namespace Name="Mono.Options">
      <Type Name="OptionException" Kind="Class" />
      <Type Name="OptionValueCollection" Kind="Class" />
      <Type Name="OptionValueType" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.Accelerate">
      <Type Name="Pixel8888" Kind="Structure" />
      <Type Name="PixelARGB16S" Kind="Structure" />
      <Type Name="PixelARGB16U" Kind="Structure" />
      <Type Name="PixelFFFF" Kind="Structure" />
      <Type Name="vImage" Kind="Class" />
      <Type Name="vImageAffineTransformDouble" Kind="Structure" />
      <Type Name="vImageAffineTransformFloat" Kind="Structure" />
      <Type Name="vImageBuffer" Kind="Structure" />
      <Type Name="vImageError" Kind="Enumeration" />
      <Type Name="vImageFlags" Kind="Enumeration" />
      <Type Name="vImageGamma" Kind="Enumeration" />
      <Type Name="vImageInterpolationMethod" Kind="Enumeration" />
      <Type Name="vImageMDTableUsageHint" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.Accounts">
      <Type Name="ACAccount" Kind="Class" />
      <Type Name="ACAccountCredential" Kind="Class" />
      <Type Name="ACAccountCredentialRenewResult" Kind="Enumeration" />
      <Type Name="ACAccountStore" Kind="Class" />
      <Type Name="ACAccountStore+Notifications" Kind="Class" />
      <Type Name="ACAccountStoreRemoveCompletionHandler" Kind="Delegate" />
      <Type Name="ACAccountStoreSaveCompletionHandler" Kind="Delegate" />
      <Type Name="ACAccountType" Kind="Class" />
      <Type Name="AccountStoreOptions" Kind="Class" />
      <Type Name="ACErrorCode" Kind="Enumeration" />
      <Type Name="ACErrorCodeExtensions" Kind="Class" />
      <Type Name="ACFacebookAudience" Kind="Enumeration" />
      <Type Name="ACFacebookAudienceValue" Kind="Class" />
      <Type Name="ACFacebookKey" Kind="Class" />
      <Type Name="ACRequestCompletionHandler" Kind="Delegate" />
      <Type Name="ACTencentWeiboKey" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.AddressBook">
      <Type Name="ABAddressBook" Kind="Class" />
      <Type Name="ABAddressBookError" Kind="Enumeration" />
      <Type Name="ABAddressBookErrorExtensions" Kind="Class" />
      <Type Name="ABAuthorizationStatus" Kind="Enumeration" />
      <Type Name="ABGroup" Kind="Class" />
      <Type Name="ABLabel" Kind="Class" />
      <Type Name="ABMultiValue`1" DisplayName="ABMultiValue&lt;T&gt;" Kind="Class" />
      <Type Name="ABMultiValueEntry`1" DisplayName="ABMultiValueEntry&lt;T&gt;" Kind="Structure" />
      <Type Name="ABMutableDateMultiValue" Kind="Class" />
      <Type Name="ABMutableDictionaryMultiValue" Kind="Class" />
      <Type Name="ABMutableMultiValue`1" DisplayName="ABMutableMultiValue&lt;T&gt;" Kind="Class" />
      <Type Name="ABMutableStringMultiValue" Kind="Class" />
      <Type Name="ABPerson" Kind="Class" />
      <Type Name="ABPersonAddressKey" Kind="Class" />
      <Type Name="ABPersonCompositeNameFormat" Kind="Enumeration" />
      <Type Name="ABPersonDateLabel" Kind="Class" />
      <Type Name="ABPersonImageFormat" Kind="Enumeration" />
      <Type Name="ABPersonInstantMessageKey" Kind="Class" />
      <Type Name="ABPersonInstantMessageService" Kind="Class" />
      <Type Name="ABPersonKind" Kind="Enumeration" />
      <Type Name="ABPersonPhoneLabel" Kind="Class" />
      <Type Name="ABPersonProperty" Kind="Enumeration" />
      <Type Name="ABPersonRelatedNamesLabel" Kind="Class" />
      <Type Name="ABPersonSocialProfileService" Kind="Class" />
      <Type Name="ABPersonSortBy" Kind="Enumeration" />
      <Type Name="ABPersonUrlLabel" Kind="Class" />
      <Type Name="ABPropertyType" Kind="Enumeration" />
      <Type Name="ABRecord" Kind="Class" />
      <Type Name="ABRecordType" Kind="Enumeration" />
      <Type Name="ABSource" Kind="Class" />
      <Type Name="ABSourceProperty" Kind="Enumeration" />
      <Type Name="ABSourceType" Kind="Enumeration" />
      <Type Name="ExternalChangeEventArgs" Kind="Class" />
      <Type Name="InstantMessageService" Kind="Class" />
      <Type Name="PersonAddress" Kind="Class" />
      <Type Name="SocialProfile" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.AddressBookUI">
      <Type Name="ABAddressFormatting" Kind="Class" />
      <Type Name="ABNewPersonCompleteEventArgs" Kind="Class" />
      <Type Name="ABNewPersonViewController" Kind="Class" />
      <Type Name="ABNewPersonViewControllerDelegate" Kind="Class" />
      <Type Name="ABPeoplePickerNavigationController" Kind="Class" />
      <Type Name="ABPeoplePickerNavigationController+ABPeoplePickerNavigationControllerAppearance" Kind="Class" />
      <Type Name="ABPeoplePickerNavigationControllerDelegate" Kind="Class" />
      <Type Name="ABPeoplePickerNavigationControllerDelegate_Extensions" Kind="Class" />
      <Type Name="ABPeoplePickerPerformAction2EventArgs" Kind="Class" />
      <Type Name="ABPeoplePickerPerformActionEventArgs" Kind="Class" />
      <Type Name="ABPeoplePickerSelectPerson2EventArgs" Kind="Class" />
      <Type Name="ABPeoplePickerSelectPersonEventArgs" Kind="Class" />
      <Type Name="ABPersonPredicateKey" Kind="Class" />
      <Type Name="ABPersonViewController" Kind="Class" />
      <Type Name="ABPersonViewControllerDelegate" Kind="Class" />
      <Type Name="ABPersonViewPerformDefaultActionEventArgs" Kind="Class" />
      <Type Name="ABUnknownPersonCreatedEventArgs" Kind="Class" />
      <Type Name="ABUnknownPersonViewController" Kind="Class" />
      <Type Name="ABUnknownPersonViewControllerDelegate" Kind="Class" />
      <Type Name="ABUnknownPersonViewControllerDelegate_Extensions" Kind="Class" />
      <Type Name="DisplayedPropertiesCollection" Kind="Class" />
      <Type Name="IABNewPersonViewControllerDelegate" Kind="Interface" />
      <Type Name="IABPeoplePickerNavigationControllerDelegate" Kind="Interface" />
      <Type Name="IABPersonViewControllerDelegate" Kind="Interface" />
      <Type Name="IABUnknownPersonViewControllerDelegate" Kind="Interface" />
    </Namespace>
    <Namespace Name="MonoTouch.AdSupport">
      <Type Name="ASIdentifierManager" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.ARKit">
      <Type Name="ARAnchor" Kind="Class" />
      <Type Name="ARCamera" Kind="Class" />
      <Type Name="ARConfiguration" Kind="Class" />
      <Type Name="ARErrorCode" Kind="Enumeration" />
      <Type Name="ARErrorCodeExtensions" Kind="Class" />
      <Type Name="ARFrame" Kind="Class" />
      <Type Name="ARHitTestResult" Kind="Class" />
      <Type Name="ARHitTestResultType" Kind="Enumeration" />
      <Type Name="ARLightEstimate" Kind="Class" />
      <Type Name="AROrientationTrackingConfiguration" Kind="Class" />
      <Type Name="ARPlaneAnchor" Kind="Class" />
      <Type Name="ARPlaneAnchorAlignment" Kind="Enumeration" />
      <Type Name="ARPlaneDetection" Kind="Enumeration" />
      <Type Name="ARPointCloud" Kind="Class" />
      <Type Name="ARSCNDebugOptions" Kind="Class" />
      <Type Name="ARSCNView" Kind="Class" />
      <Type Name="ARSCNView+ARSCNViewAppearance" Kind="Class" />
      <Type Name="ARSCNViewDelegate" Kind="Class" />
      <Type Name="ARSCNViewDelegate_Extensions" Kind="Class" />
      <Type Name="ARSession" Kind="Class" />
      <Type Name="ARSessionDelegate" Kind="Class" />
      <Type Name="ARSessionDelegate_Extensions" Kind="Class" />
      <Type Name="ARSessionObserver_Extensions" Kind="Class" />
      <Type Name="ARSessionRunOptions" Kind="Enumeration" />
      <Type Name="ARSKView" Kind="Class" />
      <Type Name="ARSKView+ARSKViewAppearance" Kind="Class" />
      <Type Name="ARSKViewDelegate" Kind="Class" />
      <Type Name="ARSKViewDelegate_Extensions" Kind="Class" />
      <Type Name="ARTrackingState" Kind="Enumeration" />
      <Type Name="ARTrackingStateReason" Kind="Enumeration" />
      <Type Name="ARWorldAlignment" Kind="Enumeration" />
      <Type Name="ARWorldTrackingConfiguration" Kind="Class" />
      <Type Name="IARSCNViewDelegate" Kind="Interface" />
      <Type Name="IARSessionDelegate" Kind="Interface" />
      <Type Name="IARSessionObserver" Kind="Interface" />
      <Type Name="IARSKViewDelegate" Kind="Interface" />
    </Namespace>
    <Namespace Name="MonoTouch.AssetsLibrary">
      <Type Name="ALAsset" Kind="Class" />
      <Type Name="ALAssetLibraryChangedEventArgs" Kind="Class" />
      <Type Name="ALAssetOrientation" Kind="Enumeration" />
      <Type Name="ALAssetRepresentation" Kind="Class" />
      <Type Name="ALAssetsEnumerator" Kind="Delegate" />
      <Type Name="ALAssetsError" Kind="Enumeration" />
      <Type Name="ALAssetsErrorExtensions" Kind="Class" />
      <Type Name="ALAssetsFilter" Kind="Class" />
      <Type Name="ALAssetsGroup" Kind="Class" />
      <Type Name="ALAssetsGroupType" Kind="Enumeration" />
      <Type Name="ALAssetsLibrary" Kind="Class" />
      <Type Name="ALAssetsLibrary+Notifications" Kind="Class" />
      <Type Name="ALAssetsLibraryGroupsEnumerationResultsDelegate" Kind="Delegate" />
      <Type Name="ALAssetType" Kind="Enumeration" />
      <Type Name="ALAuthorizationStatus" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.AudioToolbox">
      <Type Name="_MidiData" Kind="Class" />
      <Type Name="AccessoryInfo" Kind="Class" />
      <Type Name="AudioBalanceFade" Kind="Class" />
      <Type Name="AudioBalanceFadeType" Kind="Enumeration" />
      <Type Name="AudioBuffer" Kind="Structure" />
      <Type Name="AudioBuffers" Kind="Class" />
      <Type Name="AudioChannelBit" Kind="Enumeration" />
      <Type Name="AudioChannelDescription" Kind="Structure" />
      <Type Name="AudioChannelFlags" Kind="Enumeration" />
      <Type Name="AudioChannelLabel" Kind="Enumeration" />
      <Type Name="AudioChannelLayout" Kind="Class" />
      <Type Name="AudioChannelLayoutTag" Kind="Enumeration" />
      <Type Name="AudioChannelLayoutTagExtensions" Kind="Class" />
      <Type Name="AudioClassDescription" Kind="Structure" />
      <Type Name="AudioCodecComponentType" Kind="Enumeration" />
      <Type Name="AudioConverter" Kind="Class" />
      <Type Name="AudioConverterComplexInputData" Kind="Delegate" />
      <Type Name="AudioConverterError" Kind="Enumeration" />
      <Type Name="AudioConverterPrimeInfo" Kind="Structure" />
      <Type Name="AudioConverterPrimeMethod" Kind="Enumeration" />
      <Type Name="AudioConverterQuality" Kind="Enumeration" />
      <Type Name="AudioConverterSampleRateConverterComplexity" Kind="Enumeration" />
      <Type Name="AudioFile" Kind="Class" />
      <Type Name="AudioFileChunkType" Kind="Enumeration" />
      <Type Name="AudioFileError" Kind="Enumeration" />
      <Type Name="AudioFileFlags" Kind="Enumeration" />
      <Type Name="AudioFileGlobalInfo" Kind="Class" />
      <Type Name="AudioFileInfoDictionary" Kind="Class" />
      <Type Name="AudioFileLoopDirection" Kind="Enumeration" />
      <Type Name="AudioFileMarker" Kind="Structure" />
      <Type Name="AudioFileMarkerList" Kind="Class" />
      <Type Name="AudioFileMarkerType" Kind="Enumeration" />
      <Type Name="AudioFilePacketTableInfo" Kind="Structure" />
      <Type Name="AudioFilePermission" Kind="Enumeration" />
      <Type Name="AudioFileProperty" Kind="Enumeration" />
      <Type Name="AudioFileRegion" Kind="Structure" />
      <Type Name="AudioFileRegionFlags" Kind="Enumeration" />
      <Type Name="AudioFileRegionList" Kind="Class" />
      <Type Name="AudioFileSmpteTime" Kind="Structure" />
      <Type Name="AudioFileStream" Kind="Class" />
      <Type Name="AudioFileStreamProperty" Kind="Enumeration" />
      <Type Name="AudioFileStreamPropertyFlag" Kind="Enumeration" />
      <Type Name="AudioFileStreamStatus" Kind="Enumeration" />
      <Type Name="AudioFileType" Kind="Enumeration" />
      <Type Name="AudioFormat" Kind="Structure" />
      <Type Name="AudioFormatAvailability" Kind="Class" />
      <Type Name="AudioFormatError" Kind="Enumeration" />
      <Type Name="AudioFormatFlags" Kind="Enumeration" />
      <Type Name="AudioFormatType" Kind="Enumeration" />
      <Type Name="AudioPanningInfo" Kind="Class" />
      <Type Name="AudioQueue" Kind="Class" />
      <Type Name="AudioQueue+AudioQueuePropertyChanged" Kind="Delegate" />
      <Type Name="AudioQueueBuffer" Kind="Structure" />
      <Type Name="AudioQueueChannelAssignment" Kind="Structure" />
      <Type Name="AudioQueueDeviceProperty" Kind="Enumeration" />
      <Type Name="AudioQueueException" Kind="Class" />
      <Type Name="AudioQueueHardwareCodecPolicy" Kind="Enumeration" />
      <Type Name="AudioQueueLevelMeterState" Kind="Structure" />
      <Type Name="AudioQueueParameter" Kind="Enumeration" />
      <Type Name="AudioQueueParameterEvent" Kind="Structure" />
      <Type Name="AudioQueueProcessingTap" Kind="Class" />
      <Type Name="AudioQueueProcessingTapDelegate" Kind="Delegate" />
      <Type Name="AudioQueueProcessingTapFlags" Kind="Enumeration" />
      <Type Name="AudioQueueProperty" Kind="Enumeration" />
      <Type Name="AudioQueueStatus" Kind="Enumeration" />
      <Type Name="AudioQueueTimeline" Kind="Class" />
      <Type Name="AudioQueueTimePitchAlgorithm" Kind="Enumeration" />
      <Type Name="AudioServicesError" Kind="Enumeration" />
      <Type Name="AudioSession" Kind="Class" />
      <Type Name="AudioSession+PropertyListener" Kind="Delegate" />
      <Type Name="AudioSessionActiveFlags" Kind="Enumeration" />
      <Type Name="AudioSessionCategory" Kind="Enumeration" />
      <Type Name="AudioSessionErrors" Kind="Enumeration" />
      <Type Name="AudioSessionException" Kind="Class" />
      <Type Name="AudioSessionInputRouteKind" Kind="Enumeration" />
      <Type Name="AudioSessionInterruptionState" Kind="Enumeration" />
      <Type Name="AudioSessionInterruptionType" Kind="Enumeration" />
      <Type Name="AudioSessionMode" Kind="Enumeration" />
      <Type Name="AudioSessionOutputRouteKind" Kind="Enumeration" />
      <Type Name="AudioSessionProperty" Kind="Enumeration" />
      <Type Name="AudioSessionPropertyEventArgs" Kind="Class" />
      <Type Name="AudioSessionRouteChangeEventArgs" Kind="Class" />
      <Type Name="AudioSessionRouteChangeReason" Kind="Enumeration" />
      <Type Name="AudioSessionRoutingOverride" Kind="Enumeration" />
      <Type Name="AudioSource" Kind="Class" />
      <Type Name="AudioStreamBasicDescription" Kind="Structure" />
      <Type Name="AudioStreamPacketDescription" Kind="Structure" />
      <Type Name="AudioTimeStamp" Kind="Structure" />
      <Type Name="AudioTimeStamp+AtsFlags" Kind="Enumeration" />
      <Type Name="AudioValueRange" Kind="Structure" />
      <Type Name="BufferCompletedEventArgs" Kind="Class" />
      <Type Name="CABarBeatTime" Kind="Structure" />
      <Type Name="ExtendedNoteOnEvent" Kind="Structure" />
      <Type Name="InputAudioQueue" Kind="Class" />
      <Type Name="InputCompletedEventArgs" Kind="Class" />
      <Type Name="InputSourceInfo" Kind="Class" />
      <Type Name="InstrumentInfo" Kind="Class" />
      <Type Name="MidiChannelMessage" Kind="Structure" />
      <Type Name="MidiMetaEvent" Kind="Class" />
      <Type Name="MidiNoteMessage" Kind="Structure" />
      <Type Name="MidiRawData" Kind="Class" />
      <Type Name="MPEG4ObjectID" Kind="Enumeration" />
      <Type Name="MusicEventType" Kind="Enumeration" />
      <Type Name="MusicEventUserData" Kind="Class" />
      <Type Name="MusicPlayer" Kind="Class" />
      <Type Name="MusicPlayerStatus" Kind="Enumeration" />
      <Type Name="MusicSequence" Kind="Class" />
      <Type Name="MusicSequenceFileFlags" Kind="Enumeration" />
      <Type Name="MusicSequenceFileTypeID" Kind="Enumeration" />
      <Type Name="MusicSequenceLoadFlags" Kind="Enumeration" />
      <Type Name="MusicSequenceType" Kind="Enumeration" />
      <Type Name="MusicSequenceUserCallback" Kind="Delegate" />
      <Type Name="MusicTrack" Kind="Class" />
      <Type Name="OutputAudioQueue" Kind="Class" />
      <Type Name="PacketReceivedEventArgs" Kind="Class" />
      <Type Name="PanningMode" Kind="Enumeration" />
      <Type Name="PropertyFoundEventArgs" Kind="Class" />
      <Type Name="SmpteTime" Kind="Structure" />
      <Type Name="SmpteTimeFlags" Kind="Enumeration" />
      <Type Name="SmpteTimeType" Kind="Enumeration" />
      <Type Name="SoundBank" Kind="Class" />
      <Type Name="SystemSound" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.AudioUnit">
      <Type Name="_AUImplementorStringFromValueCallback" Kind="Delegate" />
      <Type Name="AU3DMixerAttenuationCurve" Kind="Enumeration" />
      <Type Name="AU3DMixerRenderingFlags" Kind="Enumeration" />
      <Type Name="AUAudioUnit" Kind="Class" />
      <Type Name="AUAudioUnit_AUAudioInputOutputUnit" Kind="Class" />
      <Type Name="AUAudioUnit+Notifications" Kind="Class" />
      <Type Name="AUAudioUnitBus" Kind="Class" />
      <Type Name="AUAudioUnitBusArray" Kind="Class" />
      <Type Name="AUAudioUnitBusType" Kind="Enumeration" />
      <Type Name="AUAudioUnitPreset" Kind="Class" />
      <Type Name="AudioCodecManufacturer" Kind="Enumeration" />
      <Type Name="AudioComponent" Kind="Class" />
      <Type Name="AudioComponentConfigurationInfo" Kind="Class" />
      <Type Name="AudioComponentDescription" Kind="Structure" />
      <Type Name="AudioComponentFlag" Kind="Enumeration" />
      <Type Name="AudioComponentInfo" Kind="Class" />
      <Type Name="AudioComponentInstantiationOptions" Kind="Enumeration" />
      <Type Name="AudioComponentManufacturerType" Kind="Enumeration" />
      <Type Name="AudioComponentStatus" Kind="Enumeration" />
      <Type Name="AudioComponentType" Kind="Enumeration" />
      <Type Name="AudioComponentValidationParameter" Kind="Class" />
      <Type Name="AudioComponentValidationResult" Kind="Enumeration" />
      <Type Name="AudioObjectPropertyElement" Kind="Enumeration" />
      <Type Name="AudioObjectPropertyScope" Kind="Enumeration" />
      <Type Name="AudioObjectPropertySelector" Kind="Enumeration" />
      <Type Name="AudioTypeConverter" Kind="Enumeration" />
      <Type Name="AudioTypeEffect" Kind="Enumeration" />
      <Type Name="AudioTypeGenerator" Kind="Enumeration" />
      <Type Name="AudioTypeMixer" Kind="Enumeration" />
      <Type Name="AudioTypeMusicDevice" Kind="Enumeration" />
      <Type Name="AudioTypeOutput" Kind="Enumeration" />
      <Type Name="AudioTypePanner" Kind="Enumeration" />
      <Type Name="AudioUnit" Kind="Class" />
      <Type Name="AudioUnitBusType" Kind="Enumeration" />
      <Type Name="AudioUnitClumpID" Kind="Enumeration" />
      <Type Name="AudioUnitConfigurationInfo" Kind="Class" />
      <Type Name="AudioUnitException" Kind="Class" />
      <Type Name="AudioUnitParameterEvent" Kind="Structure" />
      <Type Name="AudioUnitParameterEvent+EventValuesStruct" Kind="Structure" />
      <Type Name="AudioUnitParameterEvent+EventValuesStruct+ImmediateStruct" Kind="Structure" />
      <Type Name="AudioUnitParameterEvent+EventValuesStruct+RampStruct" Kind="Structure" />
      <Type Name="AudioUnitParameterFlag" Kind="Enumeration" />
      <Type Name="AudioUnitParameterInfo" Kind="Class" />
      <Type Name="AudioUnitParameterOptions" Kind="Enumeration" />
      <Type Name="AudioUnitParameterType" Kind="Enumeration" />
      <Type Name="AudioUnitParameterUnit" Kind="Enumeration" />
      <Type Name="AudioUnitPropertyIDType" Kind="Enumeration" />
      <Type Name="AudioUnitRemoteControlEvent" Kind="Enumeration" />
      <Type Name="AudioUnitRenderActionFlags" Kind="Enumeration" />
      <Type Name="AudioUnitScopeType" Kind="Enumeration" />
      <Type Name="AudioUnitStatus" Kind="Enumeration" />
      <Type Name="AudioUnitSubType" Kind="Enumeration" />
      <Type Name="AudioUnitUtils" Kind="Class" />
      <Type Name="AUEventSampleTime" Kind="Enumeration" />
      <Type Name="AUGraph" Kind="Class" />
      <Type Name="AUGraphError" Kind="Enumeration" />
      <Type Name="AUHostTransportStateBlock" Kind="Delegate" />
      <Type Name="AUHostTransportStateFlags" Kind="Enumeration" />
      <Type Name="AUImplementorDisplayNameWithLengthCallback" Kind="Delegate" />
      <Type Name="AUImplementorStringFromValueCallback" Kind="Delegate" />
      <Type Name="AUImplementorValueFromStringCallback" Kind="Delegate" />
      <Type Name="AUImplementorValueObserver" Kind="Delegate" />
      <Type Name="AUImplementorValueProvider" Kind="Delegate" />
      <Type Name="AUInputHandler" Kind="Delegate" />
      <Type Name="AUInternalRenderBlock" Kind="Delegate" />
      <Type Name="AUMidiOutputEventBlock" Kind="Delegate" />
      <Type Name="AUParameter" Kind="Class" />
      <Type Name="AUParameterAutomationEvent" Kind="Structure" />
      <Type Name="AUParameterAutomationEventType" Kind="Enumeration" />
      <Type Name="AUParameterAutomationObserver" Kind="Delegate" />
      <Type Name="AUParameterEvent" Kind="Structure" />
      <Type Name="AUParameterEventType" Kind="Enumeration" />
      <Type Name="AUParameterGroup" Kind="Class" />
      <Type Name="AUParameterNode" Kind="Class" />
      <Type Name="AUParameterObserver" Kind="Delegate" />
      <Type Name="AUParameterObserverToken" Kind="Structure" />
      <Type Name="AUParameterRecordingObserver" Kind="Delegate" />
      <Type Name="AUParameterTree" Kind="Class" />
      <Type Name="AURecordedParameterEvent" Kind="Structure" />
      <Type Name="AURenderBlock" Kind="Delegate" />
      <Type Name="AURenderEvent" Kind="Structure" />
      <Type Name="AURenderEventEnumerator" Kind="Class" />
      <Type Name="AURenderEventHeader" Kind="Structure" />
      <Type Name="AURenderEventType" Kind="Enumeration" />
      <Type Name="AURenderPullInputBlock" Kind="Delegate" />
      <Type Name="AUReverbRoomType" Kind="Enumeration" />
      <Type Name="AUScheduledAudioFileRegion" Kind="Class" />
      <Type Name="AUScheduledAudioFileRegionCompletionHandler" Kind="Delegate" />
      <Type Name="AUScheduledAudioSliceFlags" Kind="Enumeration" />
      <Type Name="AUScheduleParameterBlock" Kind="Delegate" />
      <Type Name="AUSpatializationAlgorithm" Kind="Enumeration" />
      <Type Name="AUSpatialMixerAttenuationCurve" Kind="Enumeration" />
      <Type Name="AUSpatialMixerRenderingFlags" Kind="Enumeration" />
      <Type Name="ClassInfoDictionary" Kind="Class" />
      <Type Name="ExtAudioFile" Kind="Class" />
      <Type Name="ExtAudioFileError" Kind="Enumeration" />
      <Type Name="IAUAudioUnitFactory" Kind="Interface" />
      <Type Name="InputDelegate" Kind="Delegate" />
      <Type Name="InstrumentType" Kind="Enumeration" />
      <Type Name="RenderDelegate" Kind="Delegate" />
      <Type Name="ResourceUsageInfo" Kind="Class" />
      <Type Name="SamplerInstrumentData" Kind="Class" />
      <Type Name="ScheduledAudioSliceFlag" Kind="Enumeration" />
      <Type Name="SpatialMixerAttenuation" Kind="Enumeration" />
      <Type Name="SpatialMixerRenderingFlags" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.AVFoundation">
      <Type Name="AudioSettings" Kind="Class" />
      <Type Name="AVAggregateAssetDownloadTask" Kind="Class" />
      <Type Name="AVAsset" Kind="Class" />
      <Type Name="AVAsset+Notifications" Kind="Class" />
      <Type Name="AVAssetCache" Kind="Class" />
      <Type Name="AVAssetDownloadDelegate" Kind="Class" />
      <Type Name="AVAssetDownloadDelegate_Extensions" Kind="Class" />
      <Type Name="AVAssetDownloadOptions" Kind="Class" />
      <Type Name="AVAssetDownloadStorageManagementPolicy" Kind="Class" />
      <Type Name="AVAssetDownloadStorageManager" Kind="Class" />
      <Type Name="AVAssetDownloadTask" Kind="Class" />
      <Type Name="AVAssetDownloadUrlSession" Kind="Class" />
      <Type Name="AVAssetExportSession" Kind="Class" />
      <Type Name="AVAssetExportSessionPreset" Kind="Enumeration" />
      <Type Name="AVAssetExportSessionPresetExtensions" Kind="Class" />
      <Type Name="AVAssetExportSessionStatus" Kind="Enumeration" />
      <Type Name="AVAssetImageGenerator" Kind="Class" />
      <Type Name="AVAssetImageGeneratorCompletionHandler" Kind="Delegate" />
      <Type Name="AVAssetImageGeneratorResult" Kind="Enumeration" />
      <Type Name="AVAssetReader" Kind="Class" />
      <Type Name="AVAssetReaderAudioMixOutput" Kind="Class" />
      <Type Name="AVAssetReaderOutput" Kind="Class" />
      <Type Name="AVAssetReaderOutputMetadataAdaptor" Kind="Class" />
      <Type Name="AVAssetReaderSampleReferenceOutput" Kind="Class" />
      <Type Name="AVAssetReaderStatus" Kind="Enumeration" />
      <Type Name="AVAssetReaderTrackOutput" Kind="Class" />
      <Type Name="AVAssetReaderVideoCompositionOutput" Kind="Class" />
      <Type Name="AVAssetReferenceRestrictions" Kind="Enumeration" />
      <Type Name="AVAssetResourceLoader" Kind="Class" />
      <Type Name="AVAssetResourceLoaderDelegate" Kind="Class" />
      <Type Name="AVAssetResourceLoaderDelegate_Extensions" Kind="Class" />
      <Type Name="AVAssetResourceLoadingContentInformationRequest" Kind="Class" />
      <Type Name="AVAssetResourceLoadingDataRequest" Kind="Class" />
      <Type Name="AVAssetResourceLoadingRequest" Kind="Class" />
      <Type Name="AVAssetResourceRenewalRequest" Kind="Class" />
      <Type Name="AVAssetTrack" Kind="Class" />
      <Type Name="AVAssetTrack+Notifications" Kind="Class" />
      <Type Name="AVAssetTrackGroup" Kind="Class" />
      <Type Name="AVAssetTrackSegment" Kind="Class" />
      <Type Name="AVAssetTrackTrackAssociation" Kind="Class" />
      <Type Name="AVAssetWriter" Kind="Class" />
      <Type Name="AVAssetWriterInput" Kind="Class" />
      <Type Name="AVAssetWriterInputGroup" Kind="Class" />
      <Type Name="AVAssetWriterInputMediaDataLocation" Kind="Enumeration" />
      <Type Name="AVAssetWriterInputMediaDataLocationExtensions" Kind="Class" />
      <Type Name="AVAssetWriterInputMetadataAdaptor" Kind="Class" />
      <Type Name="AVAssetWriterInputPassDescription" Kind="Class" />
      <Type Name="AVAssetWriterInputPixelBufferAdaptor" Kind="Class" />
      <Type Name="AVAssetWriterStatus" Kind="Enumeration" />
      <Type Name="AVAsynchronousCIImageFilteringRequest" Kind="Class" />
      <Type Name="AVAsynchronousKeyValueLoading" Kind="Class" />
      <Type Name="AVAsynchronousVideoCompositionRequest" Kind="Class" />
      <Type Name="AVAudio3DAngularOrientation" Kind="Structure" />
      <Type Name="AVAudio3DMixing" Kind="Class" />
      <Type Name="AVAudio3DMixingRenderingAlgorithm" Kind="Enumeration" />
      <Type Name="AVAudio3DVectorOrientation" Kind="Structure" />
      <Type Name="AVAudioBitRateStrategy" Kind="Enumeration" />
      <Type Name="AVAudioBuffer" Kind="Class" />
      <Type Name="AVAudioChannelLayout" Kind="Class" />
      <Type Name="AVAudioCommonFormat" Kind="Enumeration" />
      <Type Name="AVAudioCompressedBuffer" Kind="Class" />
      <Type Name="AVAudioConnectionPoint" Kind="Class" />
      <Type Name="AVAudioConverter" Kind="Class" />
      <Type Name="AVAudioConverterInputHandler" Kind="Delegate" />
      <Type Name="AVAudioConverterInputStatus" Kind="Enumeration" />
      <Type Name="AVAudioConverterOutputStatus" Kind="Enumeration" />
      <Type Name="AVAudioConverterPrimeInfo" Kind="Structure" />
      <Type Name="AVAudioConverterPrimeMethod" Kind="Enumeration" />
      <Type Name="AVAudioDataSourceLocation" Kind="Enumeration" />
      <Type Name="AVAudioDataSourceOrientation" Kind="Enumeration" />
      <Type Name="AVAudioDataSourcePolarPattern" Kind="Enumeration" />
      <Type Name="AVAudioEngine" Kind="Class" />
      <Type Name="AVAudioEngine+Notifications" Kind="Class" />
      <Type Name="AVAudioEngineManualRenderingBlock" Kind="Delegate" />
      <Type Name="AVAudioEngineManualRenderingError" Kind="Enumeration" />
      <Type Name="AVAudioEngineManualRenderingMode" Kind="Enumeration" />
      <Type Name="AVAudioEngineManualRenderingStatus" Kind="Enumeration" />
      <Type Name="AVAudioEnvironmentDistanceAttenuationModel" Kind="Enumeration" />
      <Type Name="AVAudioEnvironmentDistanceAttenuationParameters" Kind="Class" />
      <Type Name="AVAudioEnvironmentNode" Kind="Class" />
      <Type Name="AVAudioEnvironmentReverbParameters" Kind="Class" />
      <Type Name="AVAudioFile" Kind="Class" />
      <Type Name="AVAudioFormat" Kind="Class" />
      <Type Name="AVAudioInputNode" Kind="Class" />
      <Type Name="AVAudioIONode" Kind="Class" />
      <Type Name="AVAudioIONodeInputBlock" Kind="Delegate" />
      <Type Name="AVAudioMix" Kind="Class" />
      <Type Name="AVAudioMixerNode" Kind="Class" />
      <Type Name="AVAudioMixing_Extensions" Kind="Class" />
      <Type Name="AVAudioMixingDestination" Kind="Class" />
      <Type Name="AVAudioMixInputParameters" Kind="Class" />
      <Type Name="AVAudioNode" Kind="Class" />
      <Type Name="AVAudioNodeTapBlock" Kind="Delegate" />
      <Type Name="AVAudioOutputNode" Kind="Class" />
      <Type Name="AVAudioPcmBuffer" Kind="Class" />
      <Type Name="AVAudioPlayer" Kind="Class" />
      <Type Name="AVAudioPlayerDelegate" Kind="Class" />
      <Type Name="AVAudioPlayerDelegate_Extensions" Kind="Class" />
      <Type Name="AVAudioPlayerNode" Kind="Class" />
      <Type Name="AVAudioPlayerNodeBufferOptions" Kind="Enumeration" />
      <Type Name="AVAudioPlayerNodeCompletionCallbackType" Kind="Enumeration" />
      <Type Name="AVAudioQuality" Kind="Enumeration" />
      <Type Name="AVAudioRecorder" Kind="Class" />
      <Type Name="AVAudioRecorderDelegate" Kind="Class" />
      <Type Name="AVAudioRecorderDelegate_Extensions" Kind="Class" />
      <Type Name="AVAudioSequencer" Kind="Class" />
      <Type Name="AVAudioSession" Kind="Class" />
      <Type Name="AVAudioSession+Notifications" Kind="Class" />
      <Type Name="AVAudioSessionCategory" Kind="Enumeration" />
      <Type Name="AVAudioSessionCategoryOptions" Kind="Enumeration" />
      <Type Name="AVAudioSessionChannelDescription" Kind="Class" />
      <Type Name="AVAudioSessionDataSourceDescription" Kind="Class" />
      <Type Name="AVAudioSessionDelegate" Kind="Class" />
      <Type Name="AVAudioSessionDelegate_Extensions" Kind="Class" />
      <Type Name="AVAudioSessionErrorCode" Kind="Enumeration" />
      <Type Name="AVAudioSessionFlags" Kind="Enumeration" />
      <Type Name="AVAudioSessionInterruptionEventArgs" Kind="Class" />
      <Type Name="AVAudioSessionInterruptionFlags" Kind="Enumeration" />
      <Type Name="AVAudioSessionInterruptionOptions" Kind="Enumeration" />
      <Type Name="AVAudioSessionInterruptionType" Kind="Enumeration" />
      <Type Name="AVAudioSessionIOType" Kind="Enumeration" />
      <Type Name="AVAudioSessionPortDescription" Kind="Class" />
      <Type Name="AVAudioSessionPortOverride" Kind="Enumeration" />
      <Type Name="AVAudioSessionRecordPermission" Kind="Enumeration" />
      <Type Name="AVAudioSessionRouteChangeEventArgs" Kind="Class" />
      <Type Name="AVAudioSessionRouteChangeReason" Kind="Enumeration" />
      <Type Name="AVAudioSessionRouteDescription" Kind="Class" />
      <Type Name="AVAudioSessionRouteSharingPolicy" Kind="Enumeration" />
      <Type Name="AVAudioSessionSecondaryAudioHintEventArgs" Kind="Class" />
      <Type Name="AVAudioSessionSetActiveOptions" Kind="Enumeration" />
      <Type Name="AVAudioSessionSilenceSecondaryAudioHintType" Kind="Enumeration" />
      <Type Name="AVAudioSettings" Kind="Class" />
      <Type Name="AVAudioStereoMixing" Kind="Class" />
      <Type Name="AVAudioTime" Kind="Class" />
      <Type Name="AVAudioTimePitchAlgorithm" Kind="Class" />
      <Type Name="AVAudioUnit" Kind="Class" />
      <Type Name="AVAudioUnitComponent" Kind="Class" />
      <Type Name="AVAudioUnitComponent+Notifications" Kind="Class" />
      <Type Name="AVAudioUnitComponentFilter" Kind="Delegate" />
      <Type Name="AVAudioUnitComponentManager" Kind="Class" />
      <Type Name="AVAudioUnitDelay" Kind="Class" />
      <Type Name="AVAudioUnitDistortion" Kind="Class" />
      <Type Name="AVAudioUnitDistortionPreset" Kind="Enumeration" />
      <Type Name="AVAudioUnitEffect" Kind="Class" />
      <Type Name="AVAudioUnitEQ" Kind="Class" />
      <Type Name="AVAudioUnitEQFilterParameters" Kind="Class" />
      <Type Name="AVAudioUnitEQFilterType" Kind="Enumeration" />
      <Type Name="AVAudioUnitGenerator" Kind="Class" />
      <Type Name="AVAudioUnitManufacturerName" Kind="Class" />
      <Type Name="AVAudioUnitMidiInstrument" Kind="Class" />
      <Type Name="AVAudioUnitReverb" Kind="Class" />
      <Type Name="AVAudioUnitReverbPreset" Kind="Enumeration" />
      <Type Name="AVAudioUnitSampler" Kind="Class" />
      <Type Name="AVAudioUnitTimeEffect" Kind="Class" />
      <Type Name="AVAudioUnitTimePitch" Kind="Class" />
      <Type Name="AVAudioUnitType" Kind="Class" />
      <Type Name="AVAudioUnitVarispeed" Kind="Class" />
      <Type Name="AVAuthorizationStatus" Kind="Enumeration" />
      <Type Name="AVBeatRange" Kind="Structure" />
      <Type Name="AVCameraCalibrationData" Kind="Class" />
      <Type Name="AVCaptureAudioChannel" Kind="Class" />
      <Type Name="AVCaptureAudioDataOutput" Kind="Class" />
      <Type Name="AVCaptureAudioDataOutputSampleBufferDelegate" Kind="Class" />
      <Type Name="AVCaptureAudioDataOutputSampleBufferDelegate_Extensions" Kind="Class" />
      <Type Name="AVCaptureAutoExposureBracketedStillImageSettings" Kind="Class" />
      <Type Name="AVCaptureAutoFocusRangeRestriction" Kind="Enumeration" />
      <Type Name="AVCaptureAutoFocusSystem" Kind="Enumeration" />
      <Type Name="AVCaptureBracketedStillImageSettings" Kind="Class" />
      <Type Name="AVCaptureColorSpace" Kind="Enumeration" />
      <Type Name="AVCaptureCompletionHandler" Kind="Delegate" />
      <Type Name="AVCaptureConnection" Kind="Class" />
      <Type Name="AVCaptureDataOutputSynchronizer" Kind="Class" />
      <Type Name="AVCaptureDataOutputSynchronizerDelegate" Kind="Class" />
      <Type Name="AVCaptureDepthDataOutput" Kind="Class" />
      <Type Name="AVCaptureDepthDataOutputDelegate" Kind="Class" />
      <Type Name="AVCaptureDepthDataOutputDelegate_Extensions" Kind="Class" />
      <Type Name="AVCaptureDevice" Kind="Class" />
      <Type Name="AVCaptureDevice+Notifications" Kind="Class" />
      <Type Name="AVCaptureDeviceDiscoverySession" Kind="Class" />
      <Type Name="AVCaptureDeviceFormat" Kind="Class" />
      <Type Name="AVCaptureDeviceInput" Kind="Class" />
      <Type Name="AVCaptureDevicePosition" Kind="Enumeration" />
      <Type Name="AVCaptureDeviceTransportControlsPlaybackMode" Kind="Enumeration" />
      <Type Name="AVCaptureDeviceType" Kind="Enumeration" />
      <Type Name="AVCaptureDeviceTypeExtensions" Kind="Class" />
      <Type Name="AVCaptureExposureMode" Kind="Enumeration" />
      <Type Name="AVCaptureFileOutput" Kind="Class" />
      <Type Name="AVCaptureFileOutputRecordingDelegate" Kind="Class" />
      <Type Name="AVCaptureFileOutputRecordingDelegate_Extensions" Kind="Class" />
      <Type Name="AVCaptureFlashMode" Kind="Enumeration" />
      <Type Name="AVCaptureFocusMode" Kind="Enumeration" />
      <Type Name="AVCaptureInput" Kind="Class" />
      <Type Name="AVCaptureInput+Notifications" Kind="Class" />
      <Type Name="AVCaptureInputPort" Kind="Class" />
      <Type Name="AVCaptureLensStabilizationStatus" Kind="Enumeration" />
      <Type Name="AVCaptureManualExposureBracketedStillImageSettings" Kind="Class" />
      <Type Name="AVCaptureMetadataInput" Kind="Class" />
      <Type Name="AVCaptureMetadataOutput" Kind="Class" />
      <Type Name="AVCaptureMetadataOutputObjectsDelegate" Kind="Class" />
      <Type Name="AVCaptureMetadataOutputObjectsDelegate_Extensions" Kind="Class" />
      <Type Name="AVCaptureMovieFileOutput" Kind="Class" />
      <Type Name="AVCaptureOutput" Kind="Class" />
      <Type Name="AVCaptureOutputDataDroppedReason" Kind="Enumeration" />
      <Type Name="AVCapturePhoto" Kind="Class" />
      <Type Name="AVCapturePhotoBracketSettings" Kind="Class" />
      <Type Name="AVCapturePhotoCaptureDelegate" Kind="Class" />
      <Type Name="AVCapturePhotoCaptureDelegate_Extensions" Kind="Class" />
      <Type Name="AVCapturePhotoOutput" Kind="Class" />
      <Type Name="AVCapturePhotoSettings" Kind="Class" />
      <Type Name="AVCaptureResolvedPhotoSettings" Kind="Class" />
      <Type Name="AVCaptureSession" Kind="Class" />
      <Type Name="AVCaptureSession+Notifications" Kind="Class" />
      <Type Name="AVCaptureSessionInterruptionReason" Kind="Enumeration" />
      <Type Name="AVCaptureSessionRuntimeErrorEventArgs" Kind="Class" />
      <Type Name="AVCaptureStillImageOutput" Kind="Class" />
      <Type Name="AVCaptureSynchronizedData" Kind="Class" />
      <Type Name="AVCaptureSynchronizedDataCollection" Kind="Class" />
      <Type Name="AVCaptureSynchronizedDepthData" Kind="Class" />
      <Type Name="AVCaptureSynchronizedMetadataObjectData" Kind="Class" />
      <Type Name="AVCaptureSynchronizedSampleBufferData" Kind="Class" />
      <Type Name="AVCaptureTorchMode" Kind="Enumeration" />
      <Type Name="AVCaptureVideoDataOutput" Kind="Class" />
      <Type Name="AVCaptureVideoDataOutputSampleBufferDelegate" Kind="Class" />
      <Type Name="AVCaptureVideoDataOutputSampleBufferDelegate_Extensions" Kind="Class" />
      <Type Name="AVCaptureVideoOrientation" Kind="Enumeration" />
      <Type Name="AVCaptureVideoPreviewLayer" Kind="Class" />
      <Type Name="AVCaptureVideoPreviewLayer+InitMode" Kind="Enumeration" />
      <Type Name="AVCaptureVideoStabilizationMode" Kind="Enumeration" />
      <Type Name="AVCaptureWhiteBalanceChromaticityValues" Kind="Structure" />
      <Type Name="AVCaptureWhiteBalanceGains" Kind="Structure" />
      <Type Name="AVCaptureWhiteBalanceMode" Kind="Enumeration" />
      <Type Name="AVCaptureWhiteBalanceTemperatureAndTintValues" Kind="Structure" />
      <Type Name="AVCategoryEventArgs" Kind="Class" />
      <Type Name="AVChannelsEventArgs" Kind="Class" />
      <Type Name="AVCleanApertureProperties" Kind="Class" />
      <Type Name="AVColorProperties" Kind="Class" />
      <Type Name="AVCompletion" Kind="Delegate" />
      <Type Name="AVComposition" Kind="Class" />
      <Type Name="AVComposition_AVCompositionTrackInspection" Kind="Class" />
      <Type Name="AVCompositionTrack" Kind="Class" />
      <Type Name="AVCompositionTrackSegment" Kind="Class" />
      <Type Name="AVCompressionProperties" Kind="Class" />
      <Type Name="AVContentKeyRequest" Kind="Class" />
      <Type Name="AVContentKeyRequest_AVContentKeyRequestRenewal" Kind="Class" />
      <Type Name="AVContentKeyRequestRetryReason" Kind="Enumeration" />
      <Type Name="AVContentKeyRequestRetryReasonExtensions" Kind="Class" />
      <Type Name="AVContentKeyRequestStatus" Kind="Enumeration" />
      <Type Name="AVContentKeyResponse" Kind="Class" />
      <Type Name="AVContentKeySession" Kind="Class" />
      <Type Name="AVContentKeySession_AVContentKeyRecipients" Kind="Class" />
      <Type Name="AVContentKeySessionDelegate" Kind="Class" />
      <Type Name="AVContentKeySessionDelegate_Extensions" Kind="Class" />
      <Type Name="AVContentKeySystem" Kind="Enumeration" />
      <Type Name="AVContentKeySystemExtensions" Kind="Class" />
      <Type Name="AVDateRangeMetadataGroup" Kind="Class" />
      <Type Name="AVDepthData" Kind="Class" />
      <Type Name="AVDepthDataAccuracy" Kind="Enumeration" />
      <Type Name="AVDepthDataQuality" Kind="Enumeration" />
      <Type Name="AVEdgeWidths" Kind="Structure" />
      <Type Name="AVError" Kind="Enumeration" />
      <Type Name="AVErrorEventArgs" Kind="Class" />
      <Type Name="AVErrorKeys" Kind="Class" />
      <Type Name="AVFileType" Kind="Class" />
      <Type Name="AVFileTypes" Kind="Enumeration" />
      <Type Name="AVFileTypesExtensions" Kind="Class" />
      <Type Name="AVFrameRateRange" Kind="Class" />
      <Type Name="AVKeyValueStatus" Kind="Enumeration" />
      <Type Name="AVLayerVideoGravity" Kind="Enumeration" />
      <Type Name="AVMediaCharacteristic" Kind="Class" />
      <Type Name="AVMediaCharacteristics" Kind="Enumeration" />
      <Type Name="AVMediaCharacteristicsExtensions" Kind="Class" />
      <Type Name="AVMediaSelection" Kind="Class" />
      <Type Name="AVMediaSelectionGroup" Kind="Class" />
      <Type Name="AVMediaSelectionOption" Kind="Class" />
      <Type Name="AVMediaType" Kind="Class" />
      <Type Name="AVMediaTypes" Kind="Enumeration" />
      <Type Name="AVMediaTypesExtensions" Kind="Class" />
      <Type Name="AVMetadata" Kind="Class" />
      <Type Name="AVMetadataExtraAttribute" Kind="Class" />
      <Type Name="AVMetadataFaceObject" Kind="Class" />
      <Type Name="AVMetadataFormat" Kind="Enumeration" />
      <Type Name="AVMetadataFormatExtensions" Kind="Class" />
      <Type Name="AVMetadataGroup" Kind="Class" />
      <Type Name="AVMetadataIdentifiers" Kind="Class" />
      <Type Name="AVMetadataIdentifiers+CommonIdentifier" Kind="Class" />
      <Type Name="AVMetadataIdentifiers+IcyMetadata" Kind="Class" />
      <Type Name="AVMetadataIdentifiers+ID3Metadata" Kind="Class" />
      <Type Name="AVMetadataIdentifiers+Iso" Kind="Class" />
      <Type Name="AVMetadataIdentifiers+iTunesMetadata" Kind="Class" />
      <Type Name="AVMetadataIdentifiers+QuickTime" Kind="Class" />
      <Type Name="AVMetadataIdentifiers+QuickTimeMetadata" Kind="Class" />
      <Type Name="AVMetadataIdentifiers+ThreeGP" Kind="Class" />
      <Type Name="AVMetadataItem" Kind="Class" />
      <Type Name="AVMetadataItemFilter" Kind="Class" />
      <Type Name="AVMetadataItemValueRequest" Kind="Class" />
      <Type Name="AVMetadataMachineReadableCodeObject" Kind="Class" />
      <Type Name="AVMetadataObject" Kind="Class" />
      <Type Name="AVMetadataObjectType" Kind="Enumeration" />
      <Type Name="AVMidiPlayer" Kind="Class" />
      <Type Name="AVMusicSequenceLoadOptions" Kind="Enumeration" />
      <Type Name="AVMusicTrack" Kind="Class" />
      <Type Name="AVMusicTrackLoopCount" Kind="Enumeration" />
      <Type Name="AVMutableAssetDownloadStorageManagementPolicy" Kind="Class" />
      <Type Name="AVMutableAudioMix" Kind="Class" />
      <Type Name="AVMutableAudioMixInputParameters" Kind="Class" />
      <Type Name="AVMutableComposition" Kind="Class" />
      <Type Name="AVMutableComposition_AVMutableCompositionTrackInspection" Kind="Class" />
      <Type Name="AVMutableCompositionTrack" Kind="Class" />
      <Type Name="AVMutableDateRangeMetadataGroup" Kind="Class" />
      <Type Name="AVMutableMediaSelection" Kind="Class" />
      <Type Name="AVMutableMetadataItem" Kind="Class" />
      <Type Name="AVMutableTimedMetadataGroup" Kind="Class" />
      <Type Name="AVMutableVideoComposition" Kind="Class" />
      <Type Name="AVMutableVideoCompositionInstruction" Kind="Class" />
      <Type Name="AVMutableVideoCompositionLayerInstruction" Kind="Class" />
      <Type Name="AVOutputSettingsAssistant" Kind="Class" />
      <Type Name="AVPermissionGranted" Kind="Delegate" />
      <Type Name="AVPersistableContentKeyRequest" Kind="Class" />
      <Type Name="AVPixelAspectRatio" Kind="Structure" />
      <Type Name="AVPixelAspectRatioProperties" Kind="Class" />
      <Type Name="AVPlayer" Kind="Class" />
      <Type Name="AVPlayerActionAtItemEnd" Kind="Enumeration" />
      <Type Name="AVPlayerItem" Kind="Class" />
      <Type Name="AVPlayerItem+Notifications" Kind="Class" />
      <Type Name="AVPlayerItemAccessLog" Kind="Class" />
      <Type Name="AVPlayerItemAccessLogEvent" Kind="Class" />
      <Type Name="AVPlayerItemErrorEventArgs" Kind="Class" />
      <Type Name="AVPlayerItemErrorLog" Kind="Class" />
      <Type Name="AVPlayerItemErrorLogEvent" Kind="Class" />
      <Type Name="AVPlayerItemLegibleOutput" Kind="Class" />
      <Type Name="AVPlayerItemLegibleOutputPushDelegate" Kind="Class" />
      <Type Name="AVPlayerItemLegibleOutputPushDelegate_Extensions" Kind="Class" />
      <Type Name="AVPlayerItemMediaDataCollector" Kind="Class" />
      <Type Name="AVPlayerItemMetadataCollector" Kind="Class" />
      <Type Name="AVPlayerItemMetadataCollectorPushDelegate" Kind="Class" />
      <Type Name="AVPlayerItemMetadataOutput" Kind="Class" />
      <Type Name="AVPlayerItemMetadataOutputPushDelegate" Kind="Class" />
      <Type Name="AVPlayerItemMetadataOutputPushDelegate_Extensions" Kind="Class" />
      <Type Name="AVPlayerItemOutput" Kind="Class" />
      <Type Name="AVPlayerItemOutputPullDelegate" Kind="Class" />
      <Type Name="AVPlayerItemOutputPullDelegate_Extensions" Kind="Class" />
      <Type Name="AVPlayerItemOutputPushDelegate" Kind="Class" />
      <Type Name="AVPlayerItemOutputPushDelegate_Extensions" Kind="Class" />
      <Type Name="AVPlayerItemStatus" Kind="Enumeration" />
      <Type Name="AVPlayerItemTrack" Kind="Class" />
      <Type Name="AVPlayerItemVideoOutput" Kind="Class" />
      <Type Name="AVPlayerItemVideoOutputSettings" Kind="Class" />
      <Type Name="AVPlayerLayer" Kind="Class" />
      <Type Name="AVPlayerLooper" Kind="Class" />
      <Type Name="AVPlayerLooperStatus" Kind="Enumeration" />
      <Type Name="AVPlayerMediaSelectionCriteria" Kind="Class" />
      <Type Name="AVPlayerStatus" Kind="Enumeration" />
      <Type Name="AVPlayerTimeControlStatus" Kind="Enumeration" />
      <Type Name="AVQueuedSampleBufferRenderingStatus" Kind="Enumeration" />
      <Type Name="AVQueuePlayer" Kind="Class" />
      <Type Name="AVRequestAccessStatus" Kind="Delegate" />
      <Type Name="AVRouteDetector" Kind="Class" />
      <Type Name="AVRouteDetector+Notifications" Kind="Class" />
      <Type Name="AVSampleBufferDisplayLayer" Kind="Class" />
      <Type Name="AVSampleBufferDisplayLayer+Notifications" Kind="Class" />
      <Type Name="AVSampleCursorChunkInfo" Kind="Structure" />
      <Type Name="AVSampleCursorDependencyInfo" Kind="Structure" />
      <Type Name="AVSampleCursorStorageRange" Kind="Structure" />
      <Type Name="AVSampleCursorSyncInfo" Kind="Structure" />
      <Type Name="AVSampleRateConverterAlgorithm" Kind="Enumeration" />
      <Type Name="AVSampleRateEventArgs" Kind="Class" />
      <Type Name="AVSpeechBoundary" Kind="Enumeration" />
      <Type Name="AVSpeechSynthesisVoice" Kind="Class" />
      <Type Name="AVSpeechSynthesisVoiceQuality" Kind="Enumeration" />
      <Type Name="AVSpeechSynthesizer" Kind="Class" />
      <Type Name="AVSpeechSynthesizerDelegate" Kind="Class" />
      <Type Name="AVSpeechSynthesizerDelegate_Extensions" Kind="Class" />
      <Type Name="AVSpeechSynthesizerUteranceEventArgs" Kind="Class" />
      <Type Name="AVSpeechSynthesizerWillSpeakEventArgs" Kind="Class" />
      <Type Name="AVSpeechUtterance" Kind="Class" />
      <Type Name="AVStatusEventArgs" Kind="Class" />
      <Type Name="AVStreamingKeyDelivery" Kind="Class" />
      <Type Name="AVSynchronizedLayer" Kind="Class" />
      <Type Name="AVTextStyleRule" Kind="Class" />
      <Type Name="AVTimedMetadataGroup" Kind="Class" />
      <Type Name="AVUrlAsset" Kind="Class" />
      <Type Name="AVUrlAssetOptions" Kind="Class" />
      <Type Name="AVUtilities" Kind="Class" />
      <Type Name="AVVideo" Kind="Class" />
      <Type Name="AVVideoApertureMode" Kind="Enumeration" />
      <Type Name="AVVideoApertureModeExtensions" Kind="Class" />
      <Type Name="AVVideoCleanApertureSettings" Kind="Class" />
      <Type Name="AVVideoCodec" Kind="Enumeration" />
      <Type Name="AVVideoCodecSettings" Kind="Class" />
      <Type Name="AVVideoCodecType" Kind="Enumeration" />
      <Type Name="AVVideoCodecTypeExtensions" Kind="Class" />
      <Type Name="AVVideoColorPrimaries" Kind="Class" />
      <Type Name="AVVideoCompositing" Kind="Class" />
      <Type Name="AVVideoCompositing_Extensions" Kind="Class" />
      <Type Name="AVVideoComposition" Kind="Class" />
      <Type Name="AVVideoCompositionCoreAnimationTool" Kind="Class" />
      <Type Name="AVVideoCompositionInstruction" Kind="Class" />
      <Type Name="AVVideoCompositionLayerInstruction" Kind="Class" />
      <Type Name="AVVideoCompositionRenderContext" Kind="Class" />
      <Type Name="AVVideoCompositionValidationHandling" Kind="Class" />
      <Type Name="AVVideoCompositionValidationHandling_Extensions" Kind="Class" />
      <Type Name="AVVideoFieldMode" Kind="Enumeration" />
      <Type Name="AVVideoH264EntropyMode" Kind="Enumeration" />
      <Type Name="AVVideoPixelAspectRatioSettings" Kind="Class" />
      <Type Name="AVVideoProfileLevelH264" Kind="Enumeration" />
      <Type Name="AVVideoScalingMode" Kind="Enumeration" />
      <Type Name="AVVideoScalingModeKey" Kind="Class" />
      <Type Name="AVVideoSettingsCompressed" Kind="Class" />
      <Type Name="AVVideoSettingsUncompressed" Kind="Class" />
      <Type Name="AVVideoTransferFunction" Kind="Class" />
      <Type Name="AVVideoYCbCrMatrix" Kind="Class" />
      <Type Name="IAVAssetDownloadDelegate" Kind="Interface" />
      <Type Name="IAVAssetResourceLoaderDelegate" Kind="Interface" />
      <Type Name="IAVAsynchronousKeyValueLoading" Kind="Interface" />
      <Type Name="IAVAudio3DMixing" Kind="Interface" />
      <Type Name="IAVAudioMixing" Kind="Interface" />
      <Type Name="IAVAudioPlayerDelegate" Kind="Interface" />
      <Type Name="IAVAudioRecorderDelegate" Kind="Interface" />
      <Type Name="IAVAudioSessionDelegate" Kind="Interface" />
      <Type Name="IAVAudioStereoMixing" Kind="Interface" />
      <Type Name="IAVCaptureAudioDataOutputSampleBufferDelegate" Kind="Interface" />
      <Type Name="IAVCaptureDataOutputSynchronizerDelegate" Kind="Interface" />
      <Type Name="IAVCaptureDepthDataOutputDelegate" Kind="Interface" />
      <Type Name="IAVCaptureFileOutputRecordingDelegate" Kind="Interface" />
      <Type Name="IAVCaptureMetadataOutputObjectsDelegate" Kind="Interface" />
      <Type Name="IAVCapturePhotoCaptureDelegate" Kind="Interface" />
      <Type Name="IAVCaptureVideoDataOutputSampleBufferDelegate" Kind="Interface" />
      <Type Name="IAVContentKeyRecipient" Kind="Interface" />
      <Type Name="IAVContentKeySessionDelegate" Kind="Interface" />
      <Type Name="IAVPlayerItemLegibleOutputPushDelegate" Kind="Interface" />
      <Type Name="IAVPlayerItemMetadataCollectorPushDelegate" Kind="Interface" />
      <Type Name="IAVPlayerItemMetadataOutputPushDelegate" Kind="Interface" />
      <Type Name="IAVPlayerItemOutputPullDelegate" Kind="Interface" />
      <Type Name="IAVPlayerItemOutputPushDelegate" Kind="Interface" />
      <Type Name="IAVSpeechSynthesizerDelegate" Kind="Interface" />
      <Type Name="IAVVideoCompositing" Kind="Interface" />
      <Type Name="IAVVideoCompositionValidationHandling" Kind="Interface" />
    </Namespace>
    <Namespace Name="MonoTouch.AVKit">
      <Type Name="AVKitError" Kind="Enumeration" />
      <Type Name="AVKitErrorExtensions" Kind="Class" />
      <Type Name="AVPictureInPictureController" Kind="Class" />
      <Type Name="AVPictureInPictureControllerDelegate" Kind="Class" />
      <Type Name="AVPictureInPictureControllerDelegate_Extensions" Kind="Class" />
      <Type Name="AVPlayerViewController" Kind="Class" />
      <Type Name="AVPlayerViewControllerDelegate" Kind="Class" />
      <Type Name="AVPlayerViewControllerDelegate_Extensions" Kind="Class" />
      <Type Name="AVPlayerViewControlsStyle" Kind="Enumeration" />
      <Type Name="AVRoutePickerView" Kind="Class" />
      <Type Name="AVRoutePickerView+AVRoutePickerViewAppearance" Kind="Class" />
      <Type Name="AVRoutePickerViewDelegate" Kind="Class" />
      <Type Name="AVRoutePickerViewDelegate_Extensions" Kind="Class" />
      <Type Name="IAVPictureInPictureControllerDelegate" Kind="Interface" />
      <Type Name="IAVPlayerViewControllerDelegate" Kind="Interface" />
      <Type Name="IAVRoutePickerViewDelegate" Kind="Interface" />
    </Namespace>
    <Namespace Name="MonoTouch.CallKit">
      <Type Name="CXAction" Kind="Class" />
      <Type Name="CXAnswerCallAction" Kind="Class" />
      <Type Name="CXCall" Kind="Class" />
      <Type Name="CXCallAction" Kind="Class" />
      <Type Name="CXCallController" Kind="Class" />
      <Type Name="CXCallDirectoryEnabledStatus" Kind="Enumeration" />
      <Type Name="CXCallDirectoryExtensionContext" Kind="Class" />
      <Type Name="CXCallDirectoryExtensionContextDelegate" Kind="Class" />
      <Type Name="CXCallDirectoryManager" Kind="Class" />
      <Type Name="CXCallDirectoryProvider" Kind="Class" />
      <Type Name="CXCallEndedReason" Kind="Enumeration" />
      <Type Name="CXCallObserver" Kind="Class" />
      <Type Name="CXCallObserverDelegate" Kind="Class" />
      <Type Name="CXCallUpdate" Kind="Class" />
      <Type Name="CXEndCallAction" Kind="Class" />
      <Type Name="CXErrorCode" Kind="Enumeration" />
      <Type Name="CXErrorCodeCallDirectoryManagerError" Kind="Enumeration" />
      <Type Name="CXErrorCodeCallDirectoryManagerErrorExtensions" Kind="Class" />
      <Type Name="CXErrorCodeExtensions" Kind="Class" />
      <Type Name="CXErrorCodeIncomingCallError" Kind="Enumeration" />
      <Type Name="CXErrorCodeIncomingCallErrorExtensions" Kind="Class" />
      <Type Name="CXErrorCodeRequestTransactionError" Kind="Enumeration" />
      <Type Name="CXErrorCodeRequestTransactionErrorExtensions" Kind="Class" />
      <Type Name="CXHandle" Kind="Class" />
      <Type Name="CXHandleType" Kind="Enumeration" />
      <Type Name="CXPlayDtmfCallAction" Kind="Class" />
      <Type Name="CXPlayDtmfCallActionType" Kind="Enumeration" />
      <Type Name="CXProvider" Kind="Class" />
      <Type Name="CXProviderConfiguration" Kind="Class" />
      <Type Name="CXProviderDelegate" Kind="Class" />
      <Type Name="CXProviderDelegate_Extensions" Kind="Class" />
      <Type Name="CXSetGroupCallAction" Kind="Class" />
      <Type Name="CXSetHeldCallAction" Kind="Class" />
      <Type Name="CXSetMutedCallAction" Kind="Class" />
      <Type Name="CXStartCallAction" Kind="Class" />
      <Type Name="CXTransaction" Kind="Class" />
      <Type Name="ICXCallDirectoryExtensionContextDelegate" Kind="Interface" />
      <Type Name="ICXCallObserverDelegate" Kind="Interface" />
      <Type Name="ICXProviderDelegate" Kind="Interface" />
    </Namespace>
    <Namespace Name="MonoTouch.CloudKit">
      <Type Name="CKAcceptPerShareCompletionHandler" Kind="Delegate" />
      <Type Name="CKAcceptSharesOperation" Kind="Class" />
      <Type Name="CKAccountStatus" Kind="Enumeration" />
      <Type Name="CKApplicationPermissions" Kind="Enumeration" />
      <Type Name="CKApplicationPermissionStatus" Kind="Enumeration" />
      <Type Name="CKAsset" Kind="Class" />
      <Type Name="CKContainer" Kind="Class" />
      <Type Name="CKContainer+Notifications" Kind="Class" />
      <Type Name="CKDatabase" Kind="Class" />
      <Type Name="CKDatabaseDeleteSubscriptionHandler" Kind="Delegate" />
      <Type Name="CKDatabaseNotification" Kind="Class" />
      <Type Name="CKDatabaseOperation" Kind="Class" />
      <Type Name="CKDatabaseScope" Kind="Enumeration" />
      <Type Name="CKDatabaseSubscription" Kind="Class" />
      <Type Name="CKDiscoverAllContactsOperation" Kind="Class" />
      <Type Name="CKDiscoverAllUserIdentitiesOperation" Kind="Class" />
      <Type Name="CKDiscoveredUserInfo" Kind="Class" />
      <Type Name="CKDiscoverUserIdentitiesOperation" Kind="Class" />
      <Type Name="CKDiscoverUserInfosCompletionHandler" Kind="Delegate" />
      <Type Name="CKDiscoverUserInfosOperation" Kind="Class" />
      <Type Name="CKErrorCode" Kind="Enumeration" />
      <Type Name="CKErrorCodeExtensions" Kind="Class" />
      <Type Name="CKErrorFields" Kind="Class" />
      <Type Name="CKFetchDatabaseChangesCompletionHandler" Kind="Delegate" />
      <Type Name="CKFetchDatabaseChangesOperation" Kind="Class" />
      <Type Name="CKFetchNotificationChangesOperation" Kind="Class" />
      <Type Name="CKFetchPerShareMetadataHandler" Kind="Delegate" />
      <Type Name="CKFetchRecordChangesHandler" Kind="Delegate" />
      <Type Name="CKFetchRecordChangesOperation" Kind="Class" />
      <Type Name="CKFetchRecordsCompletedHandler" Kind="Delegate" />
      <Type Name="CKFetchRecordsOperation" Kind="Class" />
      <Type Name="CKFetchRecordZoneChangesFetchCompletedHandler" Kind="Delegate" />
      <Type Name="CKFetchRecordZoneChangesOperation" Kind="Class" />
      <Type Name="CKFetchRecordZoneChangesOptions" Kind="Class" />
      <Type Name="CKFetchRecordZoneChangesTokensUpdatedHandler" Kind="Delegate" />
      <Type Name="CKFetchRecordZoneChangesWithIDWasDeletedHandler" Kind="Delegate" />
      <Type Name="CKFetchRecordZonesOperation" Kind="Class" />
      <Type Name="CKFetchShareMetadataOperation" Kind="Class" />
      <Type Name="CKFetchShareParticipantsOperation" Kind="Class" />
      <Type Name="CKFetchSubscriptionsCompleteHandler" Kind="Delegate" />
      <Type Name="CKFetchSubscriptionsOperation" Kind="Class" />
      <Type Name="CKFetchWebAuthTokenOperation" Kind="Class" />
      <Type Name="CKFetchWebAuthTokenOperationHandler" Kind="Delegate" />
      <Type Name="CKLocationSortDescriptor" Kind="Class" />
      <Type Name="CKMarkNotificationsReadHandler" Kind="Delegate" />
      <Type Name="CKMarkNotificationsReadOperation" Kind="Class" />
      <Type Name="CKModifyBadgeOperation" Kind="Class" />
      <Type Name="CKModifyRecordsOperation" Kind="Class" />
      <Type Name="CKModifyRecordsOperationHandler" Kind="Delegate" />
      <Type Name="CKModifyRecordZonesHandler" Kind="Delegate" />
      <Type Name="CKModifyRecordZonesOperation" Kind="Class" />
      <Type Name="CKModifySubscriptionsHandler" Kind="Delegate" />
      <Type Name="CKModifySubscriptionsOperation" Kind="Class" />
      <Type Name="CKNotification" Kind="Class" />
      <Type Name="CKNotificationID" Kind="Class" />
      <Type Name="CKNotificationInfo" Kind="Class" />
      <Type Name="CKNotificationType" Kind="Enumeration" />
      <Type Name="CKOperation" Kind="Class" />
      <Type Name="CKOperationConfiguration" Kind="Class" />
      <Type Name="CKOperationGroup" Kind="Class" />
      <Type Name="CKOperationGroupTransferSize" Kind="Enumeration" />
      <Type Name="CKQuery" Kind="Class" />
      <Type Name="CKQueryCursor" Kind="Class" />
      <Type Name="CKQueryNotification" Kind="Class" />
      <Type Name="CKQueryNotificationReason" Kind="Enumeration" />
      <Type Name="CKQueryOperation" Kind="Class" />
      <Type Name="CKQuerySubscription" Kind="Class" />
      <Type Name="CKQuerySubscriptionOptions" Kind="Enumeration" />
      <Type Name="CKRecord" Kind="Class" />
      <Type Name="CKRecordID" Kind="Class" />
      <Type Name="CKRecordSavePolicy" Kind="Enumeration" />
      <Type Name="CKRecordValue" Kind="Class" />
      <Type Name="CKRecordZone" Kind="Class" />
      <Type Name="CKRecordZoneCapabilities" Kind="Enumeration" />
      <Type Name="CKRecordZoneCompleteHandler" Kind="Delegate" />
      <Type Name="CKRecordZoneID" Kind="Class" />
      <Type Name="CKRecordZoneNotification" Kind="Class" />
      <Type Name="CKRecordZoneSubscription" Kind="Class" />
      <Type Name="CKReference" Kind="Class" />
      <Type Name="CKReferenceAction" Kind="Enumeration" />
      <Type Name="CKServerChangeToken" Kind="Class" />
      <Type Name="CKShare" Kind="Class" />
      <Type Name="CKShareKeys" Kind="Class" />
      <Type Name="CKShareMetadata" Kind="Class" />
      <Type Name="CKShareParticipant" Kind="Class" />
      <Type Name="CKShareParticipantAcceptanceStatus" Kind="Enumeration" />
      <Type Name="CKShareParticipantPermission" Kind="Enumeration" />
      <Type Name="CKShareParticipantType" Kind="Enumeration" />
      <Type Name="CKSubscription" Kind="Class" />
      <Type Name="CKSubscriptionOptions" Kind="Enumeration" />
      <Type Name="CKSubscriptionType" Kind="Enumeration" />
      <Type Name="CKUserIdentity" Kind="Class" />
      <Type Name="CKUserIdentityLookupInfo" Kind="Class" />
      <Type Name="ICKRecordValue" Kind="Interface" />
    </Namespace>
    <Namespace Name="MonoTouch.Contacts">
      <Type Name="CNAuthorizationStatus" Kind="Enumeration" />
      <Type Name="CNContact" Kind="Class" />
      <Type Name="CNContactDisplayNameOrder" Kind="Enumeration" />
      <Type Name="CNContactFetchRequest" Kind="Class" />
      <Type Name="CNContactFormatter" Kind="Class" />
      <Type Name="CNContactFormatterStyle" Kind="Enumeration" />
      <Type Name="CNContactKey" Kind="Class" />
      <Type Name="CNContactOptions" Kind="Enumeration" />
      <Type Name="CNContactProperty" Kind="Class" />
      <Type Name="CNContactRelation" Kind="Class" />
      <Type Name="CNContactSortOrder" Kind="Enumeration" />
      <Type Name="CNContactStore" Kind="Class" />
      <Type Name="CNContactStore+Notifications" Kind="Class" />
      <Type Name="CNContactStoreEnumerateContactsHandler" Kind="Delegate" />
      <Type Name="CNContactStoreListContactsHandler" Kind="Delegate" />
      <Type Name="CNContactStoreRequestAccessHandler" Kind="Delegate" />
      <Type Name="CNContactsUserDefaults" Kind="Class" />
      <Type Name="CNContactType" Kind="Enumeration" />
      <Type Name="CNContactVCardSerialization" Kind="Class" />
      <Type Name="CNContainer" Kind="Class" />
      <Type Name="CNContainer_PredicatesExtension" Kind="Class" />
      <Type Name="CNContainerKey" Kind="Class" />
      <Type Name="CNContainerType" Kind="Enumeration" />
      <Type Name="CNEntityType" Kind="Enumeration" />
      <Type Name="CNErrorCode" Kind="Enumeration" />
      <Type Name="CNErrorCodeExtensions" Kind="Class" />
      <Type Name="CNErrorUserInfoKey" Kind="Class" />
      <Type Name="CNGroup" Kind="Class" />
      <Type Name="CNGroup_PredicatesExtension" Kind="Class" />
      <Type Name="CNGroupKey" Kind="Class" />
      <Type Name="CNInstantMessageAddress" Kind="Class" />
      <Type Name="CNInstantMessageAddressKey" Kind="Class" />
      <Type Name="CNInstantMessageAddressOption" Kind="Enumeration" />
      <Type Name="CNInstantMessageServiceKey" Kind="Class" />
      <Type Name="CNInstantMessageServiceOption" Kind="Enumeration" />
      <Type Name="CNLabelContactRelationKey" Kind="Class" />
      <Type Name="CNLabeledValue`1" DisplayName="CNLabeledValue&lt;ValueType&gt;" Kind="Class" />
      <Type Name="CNLabelKey" Kind="Class" />
      <Type Name="CNLabelPhoneNumberKey" Kind="Class" />
      <Type Name="CNMutableContact" Kind="Class" />
      <Type Name="CNMutableGroup" Kind="Class" />
      <Type Name="CNMutablePostalAddress" Kind="Class" />
      <Type Name="CNPhoneNumber" Kind="Class" />
      <Type Name="CNPostalAddress" Kind="Class" />
      <Type Name="CNPostalAddressFormatter" Kind="Class" />
      <Type Name="CNPostalAddressFormatterStyle" Kind="Enumeration" />
      <Type Name="CNPostalAddressKey" Kind="Class" />
      <Type Name="CNPostalAddressKeyOption" Kind="Enumeration" />
      <Type Name="CNPostalAddressKeyOptionExtensions" Kind="Class" />
      <Type Name="CNSaveRequest" Kind="Class" />
      <Type Name="CNSocialProfile" Kind="Class" />
      <Type Name="CNSocialProfileKey" Kind="Class" />
      <Type Name="CNSocialProfileOption" Kind="Enumeration" />
      <Type Name="CNSocialProfileServiceKey" Kind="Class" />
      <Type Name="CNSocialProfileServiceOption" Kind="Enumeration" />
      <Type Name="ICNKeyDescriptor" Kind="Interface" />
    </Namespace>
    <Namespace Name="MonoTouch.ContactsUI">
      <Type Name="CNContactPickerDelegate" Kind="Class" />
      <Type Name="CNContactPickerDelegate_Extensions" Kind="Class" />
      <Type Name="CNContactPickerViewController" Kind="Class" />
      <Type Name="CNContactViewController" Kind="Class" />
      <Type Name="CNContactViewControllerDelegate" Kind="Class" />
      <Type Name="CNContactViewControllerDelegate_Extensions" Kind="Class" />
      <Type Name="ICNContactPickerDelegate" Kind="Interface" />
      <Type Name="ICNContactViewControllerDelegate" Kind="Interface" />
    </Namespace>
    <Namespace Name="MonoTouch.CoreAnimation">
      <Type Name="CAAction" Kind="Class" />
      <Type Name="CAAnimation" Kind="Class" />
      <Type Name="CAAnimationDelegate" Kind="Class" />
      <Type Name="CAAnimationGroup" Kind="Class" />
      <Type Name="CAAnimationStateEventArgs" Kind="Class" />
      <Type Name="CABasicAnimation" Kind="Class" />
      <Type Name="CAContentsFormat" Kind="Enumeration" />
      <Type Name="CAContentsFormatExtensions" Kind="Class" />
      <Type Name="CACornerMask" Kind="Enumeration" />
      <Type Name="CADisplayLink" Kind="Class" />
      <Type Name="CAEAGLLayer" Kind="Class" />
      <Type Name="CAEdgeAntialiasingMask" Kind="Enumeration" />
      <Type Name="CAEmitterBehavior" Kind="Class" />
      <Type Name="CAEmitterCell" Kind="Class" />
      <Type Name="CAEmitterLayer" Kind="Class" />
      <Type Name="CAFillMode" Kind="Class" />
      <Type Name="CAGradientLayer" Kind="Class" />
      <Type Name="CAKeyFrameAnimation" Kind="Class" />
      <Type Name="CALayer" Kind="Class" />
      <Type Name="CALayerDelegate" Kind="Class" />
      <Type Name="CALayerDelegate_Extensions" Kind="Class" />
      <Type Name="CAMediaTiming" Kind="Class" />
      <Type Name="CAMediaTimingFunction" Kind="Class" />
      <Type Name="CAMetalLayer" Kind="Class" />
      <Type Name="CAPropertyAnimation" Kind="Class" />
      <Type Name="CAReplicatorLayer" Kind="Class" />
      <Type Name="CAScroll" Kind="Enumeration" />
      <Type Name="CAScrollExtensions" Kind="Class" />
      <Type Name="CAScrollLayer" Kind="Class" />
      <Type Name="CAShapeLayer" Kind="Class" />
      <Type Name="CASpringAnimation" Kind="Class" />
      <Type Name="CATextLayer" Kind="Class" />
      <Type Name="CATiledLayer" Kind="Class" />
      <Type Name="CATransaction" Kind="Class" />
      <Type Name="CATransform3D" Kind="Structure" />
      <Type Name="CATransformLayer" Kind="Class" />
      <Type Name="CATransition" Kind="Class" />
      <Type Name="CAValueFunction" Kind="Class" />
      <Type Name="ICAAction" Kind="Interface" />
      <Type Name="ICALayerDelegate" Kind="Interface" />
      <Type Name="ICAMediaTiming" Kind="Interface" />
      <Type Name="ICAMetalDrawable" Kind="Interface" />
    </Namespace>
    <Namespace Name="MonoTouch.CoreAudioKit">
      <Type Name="AUAudioUnitViewConfiguration" Kind="Class" />
      <Type Name="AUAudioUnitViewControllerExtensions" Kind="Class" />
      <Type Name="AUViewController" Kind="Class" />
      <Type Name="CABTMidiCentralViewController" Kind="Class" />
      <Type Name="CABTMidiLocalPeripheralViewController" Kind="Class" />
      <Type Name="CAInterAppAudioSwitcherView" Kind="Class" />
      <Type Name="CAInterAppAudioSwitcherView+CAInterAppAudioSwitcherViewAppearance" Kind="Class" />
      <Type Name="CAInterAppAudioTransportView" Kind="Class" />
      <Type Name="CAInterAppAudioTransportView+CAInterAppAudioTransportViewAppearance" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.CoreBluetooth">
      <Type Name="AdvertisementData" Kind="Class" />
      <Type Name="CBAdvertisement" Kind="Class" />
      <Type Name="CBATTError" Kind="Enumeration" />
      <Type Name="CBATTErrorExtensions" Kind="Class" />
      <Type Name="CBATTRequest" Kind="Class" />
      <Type Name="CBATTRequestEventArgs" Kind="Class" />
      <Type Name="CBATTRequestsEventArgs" Kind="Class" />
      <Type Name="CBAttribute" Kind="Class" />
      <Type Name="CBAttributePermissions" Kind="Enumeration" />
      <Type Name="CBCentral" Kind="Class" />
      <Type Name="CBCentralInitOptions" Kind="Class" />
      <Type Name="CBCentralManager" Kind="Class" />
      <Type Name="CBCentralManagerDelegate" Kind="Class" />
      <Type Name="CBCentralManagerDelegate_Extensions" Kind="Class" />
      <Type Name="CBCentralManagerState" Kind="Enumeration" />
      <Type Name="CBCharacteristic" Kind="Class" />
      <Type Name="CBCharacteristicEventArgs" Kind="Class" />
      <Type Name="CBCharacteristicProperties" Kind="Enumeration" />
      <Type Name="CBCharacteristicWriteType" Kind="Enumeration" />
      <Type Name="CBDescriptor" Kind="Class" />
      <Type Name="CBDescriptorEventArgs" Kind="Class" />
      <Type Name="CBDiscoveredPeripheralEventArgs" Kind="Class" />
      <Type Name="CBError" Kind="Enumeration" />
      <Type Name="CBErrorExtensions" Kind="Class" />
      <Type Name="CBL2CapChannel" Kind="Class" />
      <Type Name="CBManager" Kind="Class" />
      <Type Name="CBManagerState" Kind="Enumeration" />
      <Type Name="CBMutableCharacteristic" Kind="Class" />
      <Type Name="CBMutableDescriptor" Kind="Class" />
      <Type Name="CBMutableService" Kind="Class" />
      <Type Name="CBPeer" Kind="Class" />
      <Type Name="CBPeripheral" Kind="Class" />
      <Type Name="CBPeripheralDelegate" Kind="Class" />
      <Type Name="CBPeripheralDelegate_Extensions" Kind="Class" />
      <Type Name="CBPeripheralErrorEventArgs" Kind="Class" />
      <Type Name="CBPeripheralEventArgs" Kind="Class" />
      <Type Name="CBPeripheralManager" Kind="Class" />
      <Type Name="CBPeripheralManagerAuthorizationStatus" Kind="Enumeration" />
      <Type Name="CBPeripheralManagerConnectionLatency" Kind="Enumeration" />
      <Type Name="CBPeripheralManagerDelegate" Kind="Class" />
      <Type Name="CBPeripheralManagerDelegate_Extensions" Kind="Class" />
      <Type Name="CBPeripheralManagerL2CapChannelOperationEventArgs" Kind="Class" />
      <Type Name="CBPeripheralManagerOpenL2CapChannelEventArgs" Kind="Class" />
      <Type Name="CBPeripheralManagerServiceEventArgs" Kind="Class" />
      <Type Name="CBPeripheralManagerState" Kind="Enumeration" />
      <Type Name="CBPeripheralManagerSubscriptionEventArgs" Kind="Class" />
      <Type Name="CBPeripheralOpenL2CapChannelEventArgs" Kind="Class" />
      <Type Name="CBPeripheralServicesEventArgs" Kind="Class" />
      <Type Name="CBPeripheralsEventArgs" Kind="Class" />
      <Type Name="CBPeripheralState" Kind="Enumeration" />
      <Type Name="CBRssiEventArgs" Kind="Class" />
      <Type Name="CBService" Kind="Class" />
      <Type Name="CBServiceEventArgs" Kind="Class" />
      <Type Name="CBUUID" Kind="Class" />
      <Type Name="CBWillRestoreEventArgs" Kind="Class" />
      <Type Name="ICBCentralManagerDelegate" Kind="Interface" />
      <Type Name="ICBPeripheralDelegate" Kind="Interface" />
      <Type Name="ICBPeripheralManagerDelegate" Kind="Interface" />
      <Type Name="PeripheralConnectionOptions" Kind="Class" />
      <Type Name="PeripheralScanningOptions" Kind="Class" />
      <Type Name="RestoredState" Kind="Class" />
      <Type Name="StartAdvertisingOptions" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.CoreData">
      <Type Name="INSFetchedResultsControllerDelegate" Kind="Interface" />
      <Type Name="INSFetchedResultsSectionInfo" Kind="Interface" />
      <Type Name="INSFetchRequestResult" Kind="Interface" />
      <Type Name="MigrationErrorType" Kind="Enumeration" />
      <Type Name="NSAsynchronousFetchRequest" Kind="Class" />
      <Type Name="NSAsynchronousFetchResult" Kind="Class" />
      <Type Name="NSAtomicStore" Kind="Class" />
      <Type Name="NSAtomicStoreCacheNode" Kind="Class" />
      <Type Name="NSAttributeDescription" Kind="Class" />
      <Type Name="NSAttributeType" Kind="Enumeration" />
      <Type Name="NSBatchDeleteRequest" Kind="Class" />
      <Type Name="NSBatchDeleteRequestResultType" Kind="Enumeration" />
      <Type Name="NSBatchDeleteResult" Kind="Class" />
      <Type Name="NSBatchUpdateRequest" Kind="Class" />
      <Type Name="NSBatchUpdateRequestResultType" Kind="Enumeration" />
      <Type Name="NSBatchUpdateResult" Kind="Class" />
      <Type Name="NSConstraintConflict" Kind="Class" />
      <Type Name="NSCoreDataCoreSpotlightDelegate" Kind="Class" />
      <Type Name="NSDeleteRule" Kind="Enumeration" />
      <Type Name="NSEntityDescription" Kind="Class" />
      <Type Name="NSEntityMapping" Kind="Class" />
      <Type Name="NSEntityMappingType" Kind="Enumeration" />
      <Type Name="NSEntityMigrationPolicy" Kind="Class" />
      <Type Name="NSExpressionDescription" Kind="Class" />
      <Type Name="NSFetchedPropertyDescription" Kind="Class" />
      <Type Name="NSFetchedResultsChangeType" Kind="Enumeration" />
      <Type Name="NSFetchedResultsController" Kind="Class" />
      <Type Name="NSFetchedResultsControllerDelegate" Kind="Class" />
      <Type Name="NSFetchedResultsControllerDelegate_Extensions" Kind="Class" />
      <Type Name="NSFetchedResultsSectionInfo" Kind="Class" />
      <Type Name="NSFetchIndexDescription" Kind="Class" />
      <Type Name="NSFetchIndexElementDescription" Kind="Class" />
      <Type Name="NSFetchIndexElementType" Kind="Enumeration" />
      <Type Name="NSFetchRequest" Kind="Class" />
      <Type Name="NSFetchRequestExpression" Kind="Class" />
      <Type Name="NSFetchRequestResultType" Kind="Enumeration" />
      <Type Name="NSIncrementalStore" Kind="Class" />
      <Type Name="NSIncrementalStoreNode" Kind="Class" />
      <Type Name="NSManagedObject" Kind="Class" />
      <Type Name="NSManagedObjectChangeEventArgs" Kind="Class" />
      <Type Name="NSManagedObjectContext" Kind="Class" />
      <Type Name="NSManagedObjectContext+Notifications" Kind="Class" />
      <Type Name="NSManagedObjectContextConcurrencyType" Kind="Enumeration" />
      <Type Name="NSManagedObjectID" Kind="Class" />
      <Type Name="NSManagedObjectModel" Kind="Class" />
      <Type Name="NSMappingModel" Kind="Class" />
      <Type Name="NSMergeConflict" Kind="Class" />
      <Type Name="NSMergePolicy" Kind="Class" />
      <Type Name="NSMergePolicyType" Kind="Enumeration" />
      <Type Name="NSMigrationManager" Kind="Class" />
      <Type Name="NSPersistentContainer" Kind="Class" />
      <Type Name="NSPersistentHistoryChange" Kind="Class" />
      <Type Name="NSPersistentHistoryChangeRequest" Kind="Class" />
      <Type Name="NSPersistentHistoryChangeType" Kind="Enumeration" />
      <Type Name="NSPersistentHistoryResult" Kind="Class" />
      <Type Name="NSPersistentHistoryResultType" Kind="Enumeration" />
      <Type Name="NSPersistentHistoryToken" Kind="Class" />
      <Type Name="NSPersistentHistoryTransaction" Kind="Class" />
      <Type Name="NSPersistentStore" Kind="Class" />
      <Type Name="NSPersistentStoreAsynchronousResult" Kind="Class" />
      <Type Name="NSPersistentStoreCoordinator" Kind="Class" />
      <Type Name="NSPersistentStoreCoordinator+Notifications" Kind="Class" />
      <Type Name="NSPersistentStoreCoordinatorStoreChangeEventArgs" Kind="Class" />
      <Type Name="NSPersistentStoreDescription" Kind="Class" />
      <Type Name="NSPersistentStoreRequest" Kind="Class" />
      <Type Name="NSPersistentStoreRequestType" Kind="Enumeration" />
      <Type Name="NSPersistentStoreResult" Kind="Class" />
      <Type Name="NSPersistentStoreUbiquitousTransitionType" Kind="Enumeration" />
      <Type Name="NSPropertyDescription" Kind="Class" />
      <Type Name="NSPropertyMapping" Kind="Class" />
      <Type Name="NSQueryGenerationToken" Kind="Class" />
      <Type Name="NSRelationshipDescription" Kind="Class" />
      <Type Name="NSSaveChangesRequest" Kind="Class" />
      <Type Name="NSSnapshotEventType" Kind="Enumeration" />
      <Type Name="ObjectGraphManagementErrorType" Kind="Enumeration" />
      <Type Name="PersistentStoreErrorType" Kind="Enumeration" />
      <Type Name="UserInfo" Kind="Class" />
      <Type Name="UserInfoKeys" Kind="Class" />
      <Type Name="ValidationErrorType" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.CoreFoundation">
      <Type Name="CFAllocator" Kind="Class" />
      <Type Name="CFBundle" Kind="Class" />
      <Type Name="CFBundle+Architecture" Kind="Enumeration" />
      <Type Name="CFBundle+PackageInfo" Kind="Structure" />
      <Type Name="CFBundle+PackageType" Kind="Enumeration" />
      <Type Name="CFErrorDomain" Kind="Class" />
      <Type Name="CFException" Kind="Class" />
      <Type Name="CFExceptionDataKey" Kind="Class" />
      <Type Name="CFMachPort" Kind="Class" />
      <Type Name="CFMessagePort" Kind="Class" />
      <Type Name="CFMessagePort+CFMessagePortCallBack" Kind="Delegate" />
      <Type Name="CFMessagePortSendRequestStatus" Kind="Enumeration" />
      <Type Name="CFNetwork" Kind="Class" />
      <Type Name="CFNetworkErrors" Kind="Enumeration" />
      <Type Name="CFNotificationCenter" Kind="Class" />
      <Type Name="CFNotificationObserverToken" Kind="Class" />
      <Type Name="CFNotificationSuspensionBehavior" Kind="Enumeration" />
      <Type Name="CFObject" Kind="Class" />
      <Type Name="CFPreferences" Kind="Class" />
      <Type Name="CFProxy" Kind="Class" />
      <Type Name="CFProxySettings" Kind="Class" />
      <Type Name="CFProxyType" Kind="Enumeration" />
      <Type Name="CFRange" Kind="Structure" />
      <Type Name="CFReadStream" Kind="Class" />
      <Type Name="CFRunLoop" Kind="Class" />
      <Type Name="CFRunLoopExitReason" Kind="Enumeration" />
      <Type Name="CFRunLoopSource" Kind="Class" />
      <Type Name="CFRunLoopSourceCustom" Kind="Class" />
      <Type Name="CFSocket" Kind="Class" />
      <Type Name="CFSocket+CFSocketAcceptEventArgs" Kind="Class" />
      <Type Name="CFSocket+CFSocketConnectEventArgs" Kind="Class" />
      <Type Name="CFSocket+CFSocketDataEventArgs" Kind="Class" />
      <Type Name="CFSocket+CFSocketReadEventArgs" Kind="Class" />
      <Type Name="CFSocket+CFSocketWriteEventArgs" Kind="Class" />
      <Type Name="CFSocketCallBackType" Kind="Enumeration" />
      <Type Name="CFSocketError" Kind="Enumeration" />
      <Type Name="CFSocketException" Kind="Class" />
      <Type Name="CFSocketFlags" Kind="Enumeration" />
      <Type Name="CFSocketNativeHandle" Kind="Structure" />
      <Type Name="CFStream" Kind="Class" />
      <Type Name="CFStream+CFStreamCallback" Kind="Delegate" />
      <Type Name="CFStream+StreamEventArgs" Kind="Class" />
      <Type Name="CFStreamClientContext" Kind="Structure" />
      <Type Name="CFStreamEventType" Kind="Enumeration" />
      <Type Name="CFStreamStatus" Kind="Enumeration" />
      <Type Name="CFString" Kind="Class" />
      <Type Name="CFType" Kind="Class" />
      <Type Name="CFUrl" Kind="Class" />
      <Type Name="CFUrlPathStyle" Kind="Enumeration" />
      <Type Name="CFWriteStream" Kind="Class" />
      <Type Name="DispatchGroup" Kind="Class" />
      <Type Name="DispatchObject" Kind="Class" />
      <Type Name="DispatchQueue" Kind="Class" />
      <Type Name="DispatchQueuePriority" Kind="Enumeration" />
      <Type Name="DispatchSource" Kind="Class" />
      <Type Name="DispatchSource+Data" Kind="Class" />
      <Type Name="DispatchSource+DataAdd" Kind="Class" />
      <Type Name="DispatchSource+DataOr" Kind="Class" />
      <Type Name="DispatchSource+Mach" Kind="Class" />
      <Type Name="DispatchSource+MachReceive" Kind="Class" />
      <Type Name="DispatchSource+MachSend" Kind="Class" />
      <Type Name="DispatchSource+MemoryPressure" Kind="Class" />
      <Type Name="DispatchSource+ProcessMonitor" Kind="Class" />
      <Type Name="DispatchSource+ReadMonitor" Kind="Class" />
      <Type Name="DispatchSource+SignalMonitor" Kind="Class" />
      <Type Name="DispatchSource+Timer" Kind="Class" />
      <Type Name="DispatchSource+VnodeMonitor" Kind="Class" />
      <Type Name="DispatchSource+WriteMonitor" Kind="Class" />
      <Type Name="DispatchTime" Kind="Structure" />
      <Type Name="ICFType" Kind="Interface" />
      <Type Name="MemoryPressureFlags" Kind="Enumeration" />
      <Type Name="ProcessMonitorFlags" Kind="Enumeration" />
      <Type Name="VnodeMonitorKind" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.CoreGraphics">
      <Type Name="CGAffineTransform" Kind="Structure" />
      <Type Name="CGBitmapContext" Kind="Class" />
      <Type Name="CGBitmapFlags" Kind="Enumeration" />
      <Type Name="CGBlendMode" Kind="Enumeration" />
      <Type Name="CGColor" Kind="Class" />
      <Type Name="CGColorConversionInfo" Kind="Class" />
      <Type Name="CGColorConversionInfoTransformType" Kind="Enumeration" />
      <Type Name="CGColorConversionOptions" Kind="Class" />
      <Type Name="CGColorConverter" Kind="Class" />
      <Type Name="CGColorConverterTransformType" Kind="Enumeration" />
      <Type Name="CGColorConverterTriple" Kind="Structure" />
      <Type Name="CGColorRenderingIntent" Kind="Enumeration" />
      <Type Name="CGColorSpace" Kind="Class" />
      <Type Name="CGColorSpaceModel" Kind="Enumeration" />
      <Type Name="CGColorSpaceNames" Kind="Class" />
      <Type Name="CGContext" Kind="Class" />
      <Type Name="CGContextPDF" Kind="Class" />
      <Type Name="CGDataConsumer" Kind="Class" />
      <Type Name="CGDataProvider" Kind="Class" />
      <Type Name="CGFont" Kind="Class" />
      <Type Name="CGFunction" Kind="Class" />
      <Type Name="CGFunction+CGFunctionEvaluate" Kind="Delegate" />
      <Type Name="CGGradient" Kind="Class" />
      <Type Name="CGGradientDrawingOptions" Kind="Enumeration" />
      <Type Name="CGImage" Kind="Class" />
      <Type Name="CGImageAlphaInfo" Kind="Enumeration" />
      <Type Name="CGImageColorModel" Kind="Enumeration" />
      <Type Name="CGImageProperties" Kind="Class" />
      <Type Name="CGImagePropertiesExif" Kind="Class" />
      <Type Name="CGImagePropertiesGps" Kind="Class" />
      <Type Name="CGImagePropertiesIptc" Kind="Class" />
      <Type Name="CGImagePropertiesJfif" Kind="Class" />
      <Type Name="CGImagePropertiesPng" Kind="Class" />
      <Type Name="CGImagePropertiesTiff" Kind="Class" />
      <Type Name="CGInterpolationQuality" Kind="Enumeration" />
      <Type Name="CGLayer" Kind="Class" />
      <Type Name="CGLineCap" Kind="Enumeration" />
      <Type Name="CGLineJoin" Kind="Enumeration" />
      <Type Name="CGPath" Kind="Class" />
      <Type Name="CGPath+ApplierFunction" Kind="Delegate" />
      <Type Name="CGPathDrawingMode" Kind="Enumeration" />
      <Type Name="CGPathElement" Kind="Structure" />
      <Type Name="CGPathElementType" Kind="Enumeration" />
      <Type Name="CGPattern" Kind="Class" />
      <Type Name="CGPattern+DrawPattern" Kind="Delegate" />
      <Type Name="CGPatternTiling" Kind="Enumeration" />
      <Type Name="CGPDFArray" Kind="Class" />
      <Type Name="CGPDFBox" Kind="Enumeration" />
      <Type Name="CGPDFContentStream" Kind="Class" />
      <Type Name="CGPDFDataFormat" Kind="Enumeration" />
      <Type Name="CGPDFDictionary" Kind="Class" />
      <Type Name="CGPDFDocument" Kind="Class" />
      <Type Name="CGPDFInfo" Kind="Class" />
      <Type Name="CGPDFObject" Kind="Class" />
      <Type Name="CGPDFObjectType" Kind="Enumeration" />
      <Type Name="CGPDFOperatorTable" Kind="Class" />
      <Type Name="CGPDFPage" Kind="Class" />
      <Type Name="CGPDFPageInfo" Kind="Class" />
      <Type Name="CGPDFScanner" Kind="Class" />
      <Type Name="CGPDFStream" Kind="Class" />
      <Type Name="CGPoint" Kind="Structure" />
      <Type Name="CGRect" Kind="Structure" />
      <Type Name="CGRectEdge" Kind="Enumeration" />
      <Type Name="CGShading" Kind="Class" />
      <Type Name="CGSize" Kind="Structure" />
      <Type Name="CGTextDrawingMode" Kind="Enumeration" />
      <Type Name="CGTextEncoding" Kind="Enumeration" />
      <Type Name="CGVector" Kind="Structure" />
      <Type Name="GColorConversionInfoTriple" Kind="Structure" />
      <Type Name="RectangleFExtensions" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.CoreImage">
      <Type Name="CIAccordionFoldTransition" Kind="Class" />
      <Type Name="CIAdditionCompositing" Kind="Class" />
      <Type Name="CIAffineClamp" Kind="Class" />
      <Type Name="CIAffineFilter" Kind="Class" />
      <Type Name="CIAffineTile" Kind="Class" />
      <Type Name="CIAffineTransform" Kind="Class" />
      <Type Name="CIAreaAverage" Kind="Class" />
      <Type Name="CIAreaHistogram" Kind="Class" />
      <Type Name="CIAreaMaximum" Kind="Class" />
      <Type Name="CIAreaMaximumAlpha" Kind="Class" />
      <Type Name="CIAreaMinimum" Kind="Class" />
      <Type Name="CIAreaMinimumAlpha" Kind="Class" />
      <Type Name="CIAreaMinMaxRed" Kind="Class" />
      <Type Name="CIAttributedTextImageGenerator" Kind="Class" />
      <Type Name="CIAutoAdjustmentFilterOptions" Kind="Class" />
      <Type Name="CIAztecCodeDescriptor" Kind="Class" />
      <Type Name="CIAztecCodeGenerator" Kind="Class" />
      <Type Name="CIBarcodeDescriptor" Kind="Class" />
      <Type Name="CIBarcodeGenerator" Kind="Class" />
      <Type Name="CIBarsSwipeTransition" Kind="Class" />
      <Type Name="CIBicubicScaleTransform" Kind="Class" />
      <Type Name="CIBlendFilter" Kind="Class" />
      <Type Name="CIBlendKernel" Kind="Class" />
      <Type Name="CIBlendWithAlphaMask" Kind="Class" />
      <Type Name="CIBlendWithBlueMask" Kind="Class" />
      <Type Name="CIBlendWithMask" Kind="Class" />
      <Type Name="CIBlendWithRedMask" Kind="Class" />
      <Type Name="CIBloom" Kind="Class" />
      <Type Name="CIBokehBlur" Kind="Class" />
      <Type Name="CIBoxBlur" Kind="Class" />
      <Type Name="CIBumpDistortion" Kind="Class" />
      <Type Name="CIBumpDistortionLinear" Kind="Class" />
      <Type Name="CICheckerboardGenerator" Kind="Class" />
      <Type Name="CICircleSplashDistortion" Kind="Class" />
      <Type Name="CICircularScreen" Kind="Class" />
      <Type Name="CICircularWrap" Kind="Class" />
      <Type Name="CIClamp" Kind="Class" />
      <Type Name="CICmykHalftone" Kind="Class" />
      <Type Name="CICode128BarcodeGenerator" Kind="Class" />
      <Type Name="CICodeGenerator" Kind="Class" />
      <Type Name="CIColor" Kind="Class" />
      <Type Name="CIColorBlendMode" Kind="Class" />
      <Type Name="CIColorBurnBlendMode" Kind="Class" />
      <Type Name="CIColorClamp" Kind="Class" />
      <Type Name="CIColorControls" Kind="Class" />
      <Type Name="CIColorCrossPolynomial" Kind="Class" />
      <Type Name="CIColorCube" Kind="Class" />
      <Type Name="CIColorCubesMixedWithMask" Kind="Class" />
      <Type Name="CIColorCubeWithColorSpace" Kind="Class" />
      <Type Name="CIColorCurves" Kind="Class" />
      <Type Name="CIColorDodgeBlendMode" Kind="Class" />
      <Type Name="CIColorInvert" Kind="Class" />
      <Type Name="CIColorKernel" Kind="Class" />
      <Type Name="CIColorMap" Kind="Class" />
      <Type Name="CIColorMatrix" Kind="Class" />
      <Type Name="CIColorMonochrome" Kind="Class" />
      <Type Name="CIColorPolynomial" Kind="Class" />
      <Type Name="CIColorPosterize" Kind="Class" />
      <Type Name="CIColumnAverage" Kind="Class" />
      <Type Name="CIComicEffect" Kind="Class" />
      <Type Name="CICompositingFilter" Kind="Class" />
      <Type Name="CIConstantColorGenerator" Kind="Class" />
      <Type Name="CIContext" Kind="Class" />
      <Type Name="CIContext_CIRenderDestination" Kind="Class" />
      <Type Name="CIContext_ImageRepresentation" Kind="Class" />
      <Type Name="CIContextOptions" Kind="Class" />
      <Type Name="CIConvolution3X3" Kind="Class" />
      <Type Name="CIConvolution5X5" Kind="Class" />
      <Type Name="CIConvolution7X7" Kind="Class" />
      <Type Name="CIConvolution9Horizontal" Kind="Class" />
      <Type Name="CIConvolution9Vertical" Kind="Class" />
      <Type Name="CIConvolutionCore" Kind="Class" />
      <Type Name="CICopyMachineTransition" Kind="Class" />
      <Type Name="CICrop" Kind="Class" />
      <Type Name="CICrystallize" Kind="Class" />
      <Type Name="CIDarkenBlendMode" Kind="Class" />
      <Type Name="CIDataMatrixCodeDescriptor" Kind="Class" />
      <Type Name="CIDataMatrixCodeEccVersion" Kind="Enumeration" />
      <Type Name="CIDepthBlurEffect" Kind="Class" />
      <Type Name="CIDepthOfField" Kind="Class" />
      <Type Name="CIDepthToDisparity" Kind="Class" />
      <Type Name="CIDetector" Kind="Class" />
      <Type Name="CIDetectorOptions" Kind="Class" />
      <Type Name="CIDifferenceBlendMode" Kind="Class" />
      <Type Name="CIDiscBlur" Kind="Class" />
      <Type Name="CIDisintegrateWithMaskTransition" Kind="Class" />
      <Type Name="CIDisparityToDepth" Kind="Class" />
      <Type Name="CIDisplacementDistortion" Kind="Class" />
      <Type Name="CIDissolveTransition" Kind="Class" />
      <Type Name="CIDistortionFilter" Kind="Class" />
      <Type Name="CIDivideBlendMode" Kind="Class" />
      <Type Name="CIDotScreen" Kind="Class" />
      <Type Name="CIDroste" Kind="Class" />
      <Type Name="CIEdgePreserveUpsampleFilter" Kind="Class" />
      <Type Name="CIEdges" Kind="Class" />
      <Type Name="CIEdgeWork" Kind="Class" />
      <Type Name="CIEightfoldReflectedTile" Kind="Class" />
      <Type Name="CIExclusionBlendMode" Kind="Class" />
      <Type Name="CIExposureAdjust" Kind="Class" />
      <Type Name="CIFaceBalance" Kind="Class" />
      <Type Name="CIFaceFeature" Kind="Class" />
      <Type Name="CIFalseColor" Kind="Class" />
      <Type Name="CIFeature" Kind="Class" />
      <Type Name="CIFilter" Kind="Class" />
      <Type Name="CIFilterAttributes" Kind="Class" />
      <Type Name="CIFilterCategory" Kind="Class" />
      <Type Name="CIFilterInputKey" Kind="Class" />
      <Type Name="CIFilterMode" Kind="Enumeration" />
      <Type Name="CIFilterOutputKey" Kind="Class" />
      <Type Name="CIFilterShape" Kind="Class" />
      <Type Name="CIFlashTransition" Kind="Class" />
      <Type Name="CIFormat" Kind="Enumeration" />
      <Type Name="CIFourfoldReflectedTile" Kind="Class" />
      <Type Name="CIFourfoldRotatedTile" Kind="Class" />
      <Type Name="CIFourfoldTranslatedTile" Kind="Class" />
      <Type Name="CIGammaAdjust" Kind="Class" />
      <Type Name="CIGaussianBlur" Kind="Class" />
      <Type Name="CIGaussianGradient" Kind="Class" />
      <Type Name="CIGlassDistortion" Kind="Class" />
      <Type Name="CIGlassLozenge" Kind="Class" />
      <Type Name="CIGlideReflectedTile" Kind="Class" />
      <Type Name="CIGloom" Kind="Class" />
      <Type Name="CIHardLightBlendMode" Kind="Class" />
      <Type Name="CIHatchedScreen" Kind="Class" />
      <Type Name="CIHeightFieldFromMask" Kind="Class" />
      <Type Name="CIHexagonalPixellate" Kind="Class" />
      <Type Name="CIHighlightShadowAdjust" Kind="Class" />
      <Type Name="CIHistogramDisplayFilter" Kind="Class" />
      <Type Name="CIHoleDistortion" Kind="Class" />
      <Type Name="CIHueAdjust" Kind="Class" />
      <Type Name="CIHueBlendMode" Kind="Class" />
      <Type Name="CIHueSaturationValueGradient" Kind="Class" />
      <Type Name="CIImage" Kind="Class" />
      <Type Name="CIImageAccumulator" Kind="Class" />
      <Type Name="CIImageInitializationOptions" Kind="Class" />
      <Type Name="CIImageInitializationOptionsWithMetadata" Kind="Class" />
      <Type Name="CIImageOrientation" Kind="Enumeration" />
      <Type Name="CIImageProcessorInput_Extensions" Kind="Class" />
      <Type Name="CIImageProcessorKernel" Kind="Class" />
      <Type Name="CIImageProcessorOutput_Extensions" Kind="Class" />
      <Type Name="CIImageProviderOptions" Kind="Class" />
      <Type Name="CIImageRepresentationOptions" Kind="Class" />
      <Type Name="CIKaleidoscope" Kind="Class" />
      <Type Name="CIKernel" Kind="Class" />
      <Type Name="CIKernelRoiCallback" Kind="Delegate" />
      <Type Name="CILabDeltaE" Kind="Class" />
      <Type Name="CILanczosScaleTransform" Kind="Class" />
      <Type Name="CILenticularHaloGenerator" Kind="Class" />
      <Type Name="CILightenBlendMode" Kind="Class" />
      <Type Name="CILightTunnel" Kind="Class" />
      <Type Name="CILinearBurnBlendMode" Kind="Class" />
      <Type Name="CILinearDodgeBlendMode" Kind="Class" />
      <Type Name="CILinearGradient" Kind="Class" />
      <Type Name="CILinearToSRGBToneCurve" Kind="Class" />
      <Type Name="CILineOverlay" Kind="Class" />
      <Type Name="CILineScreen" Kind="Class" />
      <Type Name="CILuminosityBlendMode" Kind="Class" />
      <Type Name="CIMaskedVariableBlur" Kind="Class" />
      <Type Name="CIMaskToAlpha" Kind="Class" />
      <Type Name="CIMaximumComponent" Kind="Class" />
      <Type Name="CIMaximumCompositing" Kind="Class" />
      <Type Name="CIMedianFilter" Kind="Class" />
      <Type Name="CIMinimumComponent" Kind="Class" />
      <Type Name="CIMinimumCompositing" Kind="Class" />
      <Type Name="CIModTransition" Kind="Class" />
      <Type Name="CIMorphologyGradient" Kind="Class" />
      <Type Name="CIMorphologyMaximum" Kind="Class" />
      <Type Name="CIMorphologyMinimum" Kind="Class" />
      <Type Name="CIMotionBlur" Kind="Class" />
      <Type Name="CIMultiplyBlendMode" Kind="Class" />
      <Type Name="CIMultiplyCompositing" Kind="Class" />
      <Type Name="CINinePartStretched" Kind="Class" />
      <Type Name="CINinePartTiled" Kind="Class" />
      <Type Name="CINoiseReduction" Kind="Class" />
      <Type Name="CIOpTile" Kind="Class" />
      <Type Name="CIOverlayBlendMode" Kind="Class" />
      <Type Name="CIPageCurlTransition" Kind="Class" />
      <Type Name="CIPageCurlWithShadowTransition" Kind="Class" />
      <Type Name="CIParallelogramTile" Kind="Class" />
      <Type Name="CIPdf417BarcodeGenerator" Kind="Class" />
      <Type Name="CIPdf417CodeDescriptor" Kind="Class" />
      <Type Name="CIPerspectiveCorrection" Kind="Class" />
      <Type Name="CIPerspectiveTile" Kind="Class" />
      <Type Name="CIPerspectiveTransform" Kind="Class" />
      <Type Name="CIPerspectiveTransformWithExtent" Kind="Class" />
      <Type Name="CIPhotoEffect" Kind="Class" />
      <Type Name="CIPhotoEffectChrome" Kind="Class" />
      <Type Name="CIPhotoEffectFade" Kind="Class" />
      <Type Name="CIPhotoEffectInstant" Kind="Class" />
      <Type Name="CIPhotoEffectMono" Kind="Class" />
      <Type Name="CIPhotoEffectNoir" Kind="Class" />
      <Type Name="CIPhotoEffectProcess" Kind="Class" />
      <Type Name="CIPhotoEffectTonal" Kind="Class" />
      <Type Name="CIPhotoEffectTransfer" Kind="Class" />
      <Type Name="CIPinchDistortion" Kind="Class" />
      <Type Name="CIPinLightBlendMode" Kind="Class" />
      <Type Name="CIPixellate" Kind="Class" />
      <Type Name="CIPointillize" Kind="Class" />
      <Type Name="CIQRCodeDescriptor" Kind="Class" />
      <Type Name="CIQRCodeErrorCorrectionLevel" Kind="Enumeration" />
      <Type Name="CIQRCodeFeature" Kind="Class" />
      <Type Name="CIQRCodeGenerator" Kind="Class" />
      <Type Name="CIRadialGradient" Kind="Class" />
      <Type Name="CIRandomGenerator" Kind="Class" />
      <Type Name="CIRawFilterOptions" Kind="Class" />
      <Type Name="CIRectangleFeature" Kind="Class" />
      <Type Name="CIRenderDestination" Kind="Class" />
      <Type Name="CIRenderDestinationAlphaMode" Kind="Enumeration" />
      <Type Name="CIRenderInfo" Kind="Class" />
      <Type Name="CIRenderTask" Kind="Class" />
      <Type Name="CIRippleTransition" Kind="Class" />
      <Type Name="CIRowAverage" Kind="Class" />
      <Type Name="CISampler" Kind="Class" />
      <Type Name="CISamplerOptions" Kind="Class" />
      <Type Name="CISaturationBlendMode" Kind="Class" />
      <Type Name="CIScreenBlendMode" Kind="Class" />
      <Type Name="CIScreenFilter" Kind="Class" />
      <Type Name="CISepiaTone" Kind="Class" />
      <Type Name="CIShadedMaterial" Kind="Class" />
      <Type Name="CISharpenLuminance" Kind="Class" />
      <Type Name="CISixfoldReflectedTile" Kind="Class" />
      <Type Name="CISixfoldRotatedTile" Kind="Class" />
      <Type Name="CISmoothLinearGradient" Kind="Class" />
      <Type Name="CISoftLightBlendMode" Kind="Class" />
      <Type Name="CISourceAtopCompositing" Kind="Class" />
      <Type Name="CISourceInCompositing" Kind="Class" />
      <Type Name="CISourceOutCompositing" Kind="Class" />
      <Type Name="CISourceOverCompositing" Kind="Class" />
      <Type Name="CISpotColor" Kind="Class" />
      <Type Name="CISpotLight" Kind="Class" />
      <Type Name="CISRGBToneCurveToLinear" Kind="Class" />
      <Type Name="CIStarShineGenerator" Kind="Class" />
      <Type Name="CIStraightenFilter" Kind="Class" />
      <Type Name="CIStretchCrop" Kind="Class" />
      <Type Name="CIStripesGenerator" Kind="Class" />
      <Type Name="CISubtractBlendMode" Kind="Class" />
      <Type Name="CISunbeamsGenerator" Kind="Class" />
      <Type Name="CISwipeTransition" Kind="Class" />
      <Type Name="CITemperatureAndTint" Kind="Class" />
      <Type Name="CITextFeature" Kind="Class" />
      <Type Name="CITextImageGenerator" Kind="Class" />
      <Type Name="CIThermal" Kind="Class" />
      <Type Name="CITileFilter" Kind="Class" />
      <Type Name="CIToneCurve" Kind="Class" />
      <Type Name="CITorusLensDistortion" Kind="Class" />
      <Type Name="CITransitionFilter" Kind="Class" />
      <Type Name="CITriangleKaleidoscope" Kind="Class" />
      <Type Name="CITriangleTile" Kind="Class" />
      <Type Name="CITwelvefoldReflectedTile" Kind="Class" />
      <Type Name="CITwirlDistortion" Kind="Class" />
      <Type Name="CIUIParameterSet" Kind="Class" />
      <Type Name="CIUnsharpMask" Kind="Class" />
      <Type Name="CIVector" Kind="Class" />
      <Type Name="CIVibrance" Kind="Class" />
      <Type Name="CIVignette" Kind="Class" />
      <Type Name="CIVignetteEffect" Kind="Class" />
      <Type Name="CIVortexDistortion" Kind="Class" />
      <Type Name="CIWarpKernel" Kind="Class" />
      <Type Name="CIWhitePointAdjust" Kind="Class" />
      <Type Name="CIWrapMode" Kind="Enumeration" />
      <Type Name="CIXRay" Kind="Class" />
      <Type Name="CIZoomBlur" Kind="Class" />
      <Type Name="FaceDetectorAccuracy" Kind="Enumeration" />
      <Type Name="ICIFilterConstructor" Kind="Interface" />
      <Type Name="ICIImageProcessorInput" Kind="Interface" />
      <Type Name="ICIImageProcessorOutput" Kind="Interface" />
      <Type Name="ICIImageProvider" Kind="Interface" />
    </Namespace>
    <Namespace Name="MonoTouch.CoreLocation">
      <Type Name="CLActivityType" Kind="Enumeration" />
      <Type Name="CLAuthorizationChangedEventArgs" Kind="Class" />
      <Type Name="CLAuthorizationStatus" Kind="Enumeration" />
      <Type Name="CLBeacon" Kind="Class" />
      <Type Name="CLBeaconRegion" Kind="Class" />
      <Type Name="CLCircularRegion" Kind="Class" />
      <Type Name="CLDeviceOrientation" Kind="Enumeration" />
      <Type Name="CLError" Kind="Enumeration" />
      <Type Name="CLFloor" Kind="Class" />
      <Type Name="CLGeocodeCompletionHandler" Kind="Delegate" />
      <Type Name="CLGeocoder" Kind="Class" />
      <Type Name="CLHeading" Kind="Class" />
      <Type Name="CLHeadingUpdatedEventArgs" Kind="Class" />
      <Type Name="CLLocation" Kind="Class" />
      <Type Name="CLLocationCoordinate2D" Kind="Structure" />
      <Type Name="CLLocationDistance" Kind="Class" />
      <Type Name="CLLocationManager" Kind="Class" />
      <Type Name="CLLocationManagerDelegate" Kind="Class" />
      <Type Name="CLLocationManagerDelegate_Extensions" Kind="Class" />
      <Type Name="CLLocationManagerEventArgs" Kind="Delegate" />
      <Type Name="CLLocationsUpdatedEventArgs" Kind="Class" />
      <Type Name="CLLocationUpdatedEventArgs" Kind="Class" />
      <Type Name="CLPlacemark" Kind="Class" />
      <Type Name="CLProximity" Kind="Enumeration" />
      <Type Name="CLRegion" Kind="Class" />
      <Type Name="CLRegionBeaconsFailedEventArgs" Kind="Class" />
      <Type Name="CLRegionBeaconsRangedEventArgs" Kind="Class" />
      <Type Name="CLRegionErrorEventArgs" Kind="Class" />
      <Type Name="CLRegionEventArgs" Kind="Class" />
      <Type Name="CLRegionState" Kind="Enumeration" />
      <Type Name="CLRegionStateDeterminedEventArgs" Kind="Class" />
      <Type Name="CLVisit" Kind="Class" />
      <Type Name="CLVisitedEventArgs" Kind="Class" />
      <Type Name="ICLLocationManagerDelegate" Kind="Interface" />
    </Namespace>
    <Namespace Name="MonoTouch.CoreMedia">
      <Type Name="CMAttachmentBearer" Kind="Class" />
      <Type Name="CMAttachmentMode" Kind="Enumeration" />
      <Type Name="CMAudioFormatDescription" Kind="Class" />
      <Type Name="CMBlockBuffer" Kind="Class" />
      <Type Name="CMBlockBufferError" Kind="Enumeration" />
      <Type Name="CMBlockBufferFlags" Kind="Enumeration" />
      <Type Name="CMBufferCompare" Kind="Delegate" />
      <Type Name="CMBufferGetBool" Kind="Delegate" />
      <Type Name="CMBufferGetSize" Kind="Delegate" />
      <Type Name="CMBufferGetTime" Kind="Delegate" />
      <Type Name="CMBufferQueue" Kind="Class" />
      <Type Name="CMBufferQueue+TriggerCondition" Kind="Enumeration" />
      <Type Name="CMClock" Kind="Class" />
      <Type Name="CMClockError" Kind="Enumeration" />
      <Type Name="CMClockOrTimebase" Kind="Class" />
      <Type Name="CMClosedCaptionFormatType" Kind="Enumeration" />
      <Type Name="CMCustomBlockAllocator" Kind="Class" />
      <Type Name="CMFormatDescription" Kind="Class" />
      <Type Name="CMFormatDescriptionError" Kind="Enumeration" />
      <Type Name="CMMediaType" Kind="Enumeration" />
      <Type Name="CMMemoryPool" Kind="Class" />
      <Type Name="CMMetadataFormatType" Kind="Enumeration" />
      <Type Name="CMMuxedStreamType" Kind="Enumeration" />
      <Type Name="CMPixelFormat" Kind="Enumeration" />
      <Type Name="CMSampleBuffer" Kind="Class" />
      <Type Name="CMSampleBufferAttachmentSettings" Kind="Class" />
      <Type Name="CMSampleBufferError" Kind="Enumeration" />
      <Type Name="CMSampleTimingInfo" Kind="Structure" />
      <Type Name="CMSubtitleFormatType" Kind="Enumeration" />
      <Type Name="CMSyncError" Kind="Enumeration" />
      <Type Name="CMTextMarkupAttributes" Kind="Class" />
      <Type Name="CMTime" Kind="Structure" />
      <Type Name="CMTime+Flags" Kind="Enumeration" />
      <Type Name="CMTimebase" Kind="Class" />
      <Type Name="CMTimebaseError" Kind="Enumeration" />
      <Type Name="CMTimeCodeFormatType" Kind="Enumeration" />
      <Type Name="CMTimeMapping" Kind="Structure" />
      <Type Name="CMTimeRange" Kind="Structure" />
      <Type Name="CMTimeRoundingMethod" Kind="Enumeration" />
      <Type Name="CMTimeScale" Kind="Structure" />
      <Type Name="CMVideoCodecType" Kind="Enumeration" />
      <Type Name="CMVideoDimensions" Kind="Structure" />
      <Type Name="CMVideoFormatDescription" Kind="Class" />
      <Type Name="ICMAttachmentBearer" Kind="Interface" />
      <Type Name="LensStabilizationStatus" Kind="Enumeration" />
      <Type Name="TextMarkupColor" Kind="Structure" />
    </Namespace>
    <Namespace Name="MonoTouch.CoreMidi">
      <Type Name="IOErrorEventArgs" Kind="Class" />
      <Type Name="Midi" Kind="Class" />
      <Type Name="Midi+Notifications" Kind="Class" />
      <Type Name="MidiClient" Kind="Class" />
      <Type Name="MidiControlTransform" Kind="Structure" />
      <Type Name="MidiDevice" Kind="Class" />
      <Type Name="MidiEndpoint" Kind="Class" />
      <Type Name="MidiEntity" Kind="Class" />
      <Type Name="MidiError" Kind="Enumeration" />
      <Type Name="MidiException" Kind="Class" />
      <Type Name="MidiNetworkConnection" Kind="Class" />
      <Type Name="MidiNetworkConnectionPolicy" Kind="Enumeration" />
      <Type Name="MidiNetworkHost" Kind="Class" />
      <Type Name="MidiNetworkSession" Kind="Class" />
      <Type Name="MidiObject" Kind="Class" />
      <Type Name="MidiPacket" Kind="Class" />
      <Type Name="MidiPacketsEventArgs" Kind="Class" />
      <Type Name="MidiPort" Kind="Class" />
      <Type Name="MidiThruConnection" Kind="Class" />
      <Type Name="MidiThruConnectionEndpoint" Kind="Structure" />
      <Type Name="MidiThruConnectionParams" Kind="Class" />
      <Type Name="MidiTransform" Kind="Structure" />
      <Type Name="MidiTransformControlType" Kind="Enumeration" />
      <Type Name="MidiTransformType" Kind="Enumeration" />
      <Type Name="MidiValueMap" Kind="Structure" />
      <Type Name="ObjectAddedOrRemovedEventArgs" Kind="Class" />
      <Type Name="ObjectPropertyChangedEventArgs" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.CoreML">
      <Type Name="IMLFeatureProvider" Kind="Interface" />
      <Type Name="MLDictionaryConstraint" Kind="Class" />
      <Type Name="MLDictionaryFeatureProvider" Kind="Class" />
      <Type Name="MLFeatureDescription" Kind="Class" />
      <Type Name="MLFeatureType" Kind="Enumeration" />
      <Type Name="MLFeatureValue" Kind="Class" />
      <Type Name="MLImageConstraint" Kind="Class" />
      <Type Name="MLModel" Kind="Class" />
      <Type Name="MLModelDescription" Kind="Class" />
      <Type Name="MLModelError" Kind="Enumeration" />
      <Type Name="MLModelErrorExtensions" Kind="Class" />
      <Type Name="MLModelMetadata" Kind="Class" />
      <Type Name="MLMultiArray" Kind="Class" />
      <Type Name="MLMultiArrayConstraint" Kind="Class" />
      <Type Name="MLMultiArrayDataType" Kind="Enumeration" />
      <Type Name="MLPredictionOptions" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.CoreMotion">
      <Type Name="CMAcceleration" Kind="Structure" />
      <Type Name="CMAccelerometerData" Kind="Class" />
      <Type Name="CMAccelerometerHandler" Kind="Delegate" />
      <Type Name="CMAltimeter" Kind="Class" />
      <Type Name="CMAltitudeData" Kind="Class" />
      <Type Name="CMAttitude" Kind="Class" />
      <Type Name="CMAttitudeReferenceFrame" Kind="Enumeration" />
      <Type Name="CMAuthorizationStatus" Kind="Enumeration" />
      <Type Name="CMCalibratedMagneticField" Kind="Structure" />
      <Type Name="CMDeviceMotion" Kind="Class" />
      <Type Name="CMDeviceMotionHandler" Kind="Delegate" />
      <Type Name="CMError" Kind="Enumeration" />
      <Type Name="CMGyroData" Kind="Class" />
      <Type Name="CMGyroHandler" Kind="Delegate" />
      <Type Name="CMLogItem" Kind="Class" />
      <Type Name="CMMagneticField" Kind="Structure" />
      <Type Name="CMMagneticFieldCalibrationAccuracy" Kind="Enumeration" />
      <Type Name="CMMagnetometerData" Kind="Class" />
      <Type Name="CMMagnetometerHandler" Kind="Delegate" />
      <Type Name="CMMotionActivity" Kind="Class" />
      <Type Name="CMMotionActivityConfidence" Kind="Enumeration" />
      <Type Name="CMMotionActivityHandler" Kind="Delegate" />
      <Type Name="CMMotionActivityManager" Kind="Class" />
      <Type Name="CMMotionActivityQueryHandler" Kind="Delegate" />
      <Type Name="CMMotionManager" Kind="Class" />
      <Type Name="CMPedometer" Kind="Class" />
      <Type Name="CMPedometerData" Kind="Class" />
      <Type Name="CMPedometerEvent" Kind="Class" />
      <Type Name="CMPedometerEventType" Kind="Enumeration" />
      <Type Name="CMQuaternion" Kind="Structure" />
      <Type Name="CMRecordedAccelerometerData" Kind="Class" />
      <Type Name="CMRotationMatrix" Kind="Structure" />
      <Type Name="CMRotationRate" Kind="Structure" />
      <Type Name="CMSensorDataList" Kind="Class" />
      <Type Name="CMSensorRecorder" Kind="Class" />
      <Type Name="CMStepCounter" Kind="Class" />
      <Type Name="CMStepQueryHandler" Kind="Delegate" />
      <Type Name="CMStepUpdateHandler" Kind="Delegate" />
    </Namespace>
    <Namespace Name="MonoTouch.CoreNFC">
      <Type Name="INFCIso15693Tag" Kind="Interface" />
      <Type Name="INFCNdefReaderSessionDelegate" Kind="Interface" />
      <Type Name="INFCReaderSessionContract" Kind="Interface" />
      <Type Name="INFCReaderSessionDelegate" Kind="Interface" />
      <Type Name="INFCTag" Kind="Interface" />
      <Type Name="NFCIso15693CustomCommandConfiguration" Kind="Class" />
      <Type Name="NFCIso15693ReaderSession" Kind="Class" />
      <Type Name="NFCIso15693ReadMultipleBlocksConfiguration" Kind="Class" />
      <Type Name="NFCNdefMessage" Kind="Class" />
      <Type Name="NFCNdefPayload" Kind="Class" />
      <Type Name="NFCNdefReaderSession" Kind="Class" />
      <Type Name="NFCNdefReaderSessionDelegate" Kind="Class" />
      <Type Name="NFCReaderError" Kind="Enumeration" />
      <Type Name="NFCReaderErrorExtensions" Kind="Class" />
      <Type Name="NFCReaderSession" Kind="Class" />
      <Type Name="NFCReaderSessionDelegate" Kind="Class" />
      <Type Name="NFCTagCommandConfiguration" Kind="Class" />
      <Type Name="NFCTagType" Kind="Enumeration" />
      <Type Name="NFCTypeNameFormat" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.CoreServices">
      <Type Name="CFHTTPAuthentication" Kind="Class" />
      <Type Name="CFHTTPMessage" Kind="Class" />
      <Type Name="CFHTTPMessage+AuthenticationScheme" Kind="Enumeration" />
      <Type Name="CFHTTPStream" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.CoreSpotlight">
      <Type Name="CSCustomAttributeKey" Kind="Class" />
      <Type Name="CSFileProtection" Kind="Enumeration" />
      <Type Name="CSIndexErrorCode" Kind="Enumeration" />
      <Type Name="CSIndexErrorCodeExtensions" Kind="Class" />
      <Type Name="CSIndexExtensionRequestHandler" Kind="Class" />
      <Type Name="CSLocalizedString" Kind="Class" />
      <Type Name="CSMailboxKey" Kind="Class" />
      <Type Name="CSPerson" Kind="Class" />
      <Type Name="CSSearchableIndex" Kind="Class" />
      <Type Name="CSSearchableIndex_CSOptionalBatchingExtension" Kind="Class" />
      <Type Name="CSSearchableIndexDelegate" Kind="Class" />
      <Type Name="CSSearchableIndexDelegate_Extensions" Kind="Class" />
      <Type Name="CSSearchableIndexFetchHandler" Kind="Delegate" />
      <Type Name="CSSearchableItem" Kind="Class" />
      <Type Name="CSSearchableItemAttributeSet" Kind="Class" />
      <Type Name="CSSearchQuery" Kind="Class" />
      <Type Name="CSSearchQueryErrorCode" Kind="Enumeration" />
      <Type Name="CSSearchQueryErrorCodeExtensions" Kind="Class" />
      <Type Name="ICSSearchableIndexDelegate" Kind="Interface" />
    </Namespace>
    <Namespace Name="MonoTouch.CoreTelephony">
      <Type Name="CTCall" Kind="Class" />
      <Type Name="CTCallCenter" Kind="Class" />
      <Type Name="CTCarrier" Kind="Class" />
      <Type Name="CTCellularData" Kind="Class" />
      <Type Name="CTCellularDataRestrictedState" Kind="Enumeration" />
      <Type Name="CTErrorDomain" Kind="Enumeration" />
      <Type Name="CTRadioAccessTechnology" Kind="Class" />
      <Type Name="CTSubscriber" Kind="Class" />
      <Type Name="CTSubscriberInfo" Kind="Class" />
      <Type Name="CTTelephonyNetworkInfo" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.CoreText">
      <Type Name="CTBaselineClass" Kind="Enumeration" />
      <Type Name="CTBaselineFont" Kind="Enumeration" />
      <Type Name="CTCharacterCollection" Kind="Enumeration" />
      <Type Name="CTFont" Kind="Class" />
      <Type Name="CTFontCollection" Kind="Class" />
      <Type Name="CTFontCollectionOptionKey" Kind="Class" />
      <Type Name="CTFontCollectionOptions" Kind="Class" />
      <Type Name="CTFontDescriptor" Kind="Class" />
      <Type Name="CTFontDescriptorAttributeKey" Kind="Class" />
      <Type Name="CTFontDescriptorAttributes" Kind="Class" />
      <Type Name="CTFontDescriptorMatchingState" Kind="Enumeration" />
      <Type Name="CTFontFeatureAllTypographicFeatures" Kind="Class" />
      <Type Name="CTFontFeatureAllTypographicFeatures+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureAlternateKana" Kind="Class" />
      <Type Name="CTFontFeatureAlternateKana+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureAnnotation" Kind="Class" />
      <Type Name="CTFontFeatureAnnotation+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureCaseSensitiveLayout" Kind="Class" />
      <Type Name="CTFontFeatureCaseSensitiveLayout+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureCharacterAlternatives" Kind="Class" />
      <Type Name="CTFontFeatureCharacterAlternatives+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureCharacterShape" Kind="Class" />
      <Type Name="CTFontFeatureCharacterShape+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureCJKRomanSpacing" Kind="Class" />
      <Type Name="CTFontFeatureCJKRomanSpacing+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureCJKSymbolAlternatives" Kind="Class" />
      <Type Name="CTFontFeatureCJKSymbolAlternatives+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureCJKVerticalRomanPlacement" Kind="Class" />
      <Type Name="CTFontFeatureCJKVerticalRomanPlacement+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureContextualAlternates" Kind="Class" />
      <Type Name="CTFontFeatureContextualAlternates+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureCursiveConnection" Kind="Class" />
      <Type Name="CTFontFeatureCursiveConnection+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureDesignComplexity" Kind="Class" />
      <Type Name="CTFontFeatureDesignComplexity+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureDiacritics" Kind="Class" />
      <Type Name="CTFontFeatureDiacritics+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureFractions" Kind="Class" />
      <Type Name="CTFontFeatureFractions+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureIdeographicAlternatives" Kind="Class" />
      <Type Name="CTFontFeatureIdeographicAlternatives+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureIdeographicSpacing" Kind="Class" />
      <Type Name="CTFontFeatureIdeographicSpacing+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureItalicCJKRoman" Kind="Class" />
      <Type Name="CTFontFeatureItalicCJKRoman+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureKanaSpacing" Kind="Class" />
      <Type Name="CTFontFeatureKanaSpacing+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureKey" Kind="Class" />
      <Type Name="CTFontFeatureLetterCase" Kind="Class" />
      <Type Name="CTFontFeatureLetterCase+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureLigatures" Kind="Class" />
      <Type Name="CTFontFeatureLigatures+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureLinguisticRearrangementConnection" Kind="Class" />
      <Type Name="CTFontFeatureLinguisticRearrangementConnection+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureLowerCase" Kind="Class" />
      <Type Name="CTFontFeatureLowerCase+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureMathematicalExtras" Kind="Class" />
      <Type Name="CTFontFeatureMathematicalExtras+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureNumberCase" Kind="Class" />
      <Type Name="CTFontFeatureNumberCase+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureNumberSpacing" Kind="Class" />
      <Type Name="CTFontFeatureNumberSpacing+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureOrnamentSets" Kind="Class" />
      <Type Name="CTFontFeatureOrnamentSets+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureOverlappingCharacters" Kind="Class" />
      <Type Name="CTFontFeatureOverlappingCharacters+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureRubyKana" Kind="Class" />
      <Type Name="CTFontFeatureRubyKana+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatures" Kind="Class" />
      <Type Name="CTFontFeatureSelectorKey" Kind="Class" />
      <Type Name="CTFontFeatureSelectors" Kind="Class" />
      <Type Name="CTFontFeatureSettings" Kind="Class" />
      <Type Name="CTFontFeatureSmartSwash" Kind="Class" />
      <Type Name="CTFontFeatureSmartSwash+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureStyleOptions" Kind="Class" />
      <Type Name="CTFontFeatureStyleOptions+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureStylisticAlternatives" Kind="Class" />
      <Type Name="CTFontFeatureStylisticAlternatives+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureTextSpacing" Kind="Class" />
      <Type Name="CTFontFeatureTextSpacing+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureTransliteration" Kind="Class" />
      <Type Name="CTFontFeatureTransliteration+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureTypographicExtras" Kind="Class" />
      <Type Name="CTFontFeatureTypographicExtras+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureUnicodeDecomposition" Kind="Class" />
      <Type Name="CTFontFeatureUnicodeDecomposition+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureUpperCase" Kind="Class" />
      <Type Name="CTFontFeatureUpperCase+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureVerticalPosition" Kind="Class" />
      <Type Name="CTFontFeatureVerticalPosition+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureVerticalSubstitutionConnection" Kind="Class" />
      <Type Name="CTFontFeatureVerticalSubstitutionConnection+Selector" Kind="Enumeration" />
      <Type Name="CTFontFormat" Kind="Enumeration" />
      <Type Name="CTFontManager" Kind="Class" />
      <Type Name="CTFontManager+Notifications" Kind="Class" />
      <Type Name="CTFontManagerAutoActivation" Kind="Enumeration" />
      <Type Name="CTFontManagerError" Kind="Enumeration" />
      <Type Name="CTFontManagerErrorExtensions" Kind="Class" />
      <Type Name="CTFontManagerScope" Kind="Enumeration" />
      <Type Name="CTFontNameKey" Kind="Enumeration" />
      <Type Name="CTFontOptions" Kind="Enumeration" />
      <Type Name="CTFontOrientation" Kind="Enumeration" />
      <Type Name="CTFontPriority" Kind="Enumeration" />
      <Type Name="CTFontStylisticClass" Kind="Enumeration" />
      <Type Name="CTFontSymbolicTraits" Kind="Enumeration" />
      <Type Name="CTFontTable" Kind="Enumeration" />
      <Type Name="CTFontTableOptions" Kind="Enumeration" />
      <Type Name="CTFontTraitKey" Kind="Class" />
      <Type Name="CTFontTraits" Kind="Class" />
      <Type Name="CTFontUIFontType" Kind="Enumeration" />
      <Type Name="CTFontVariation" Kind="Class" />
      <Type Name="CTFontVariationAxes" Kind="Class" />
      <Type Name="CTFontVariationAxisKey" Kind="Class" />
      <Type Name="CTFrame" Kind="Class" />
      <Type Name="CTFrameAttributeKey" Kind="Class" />
      <Type Name="CTFrameAttributes" Kind="Class" />
      <Type Name="CTFramePathFillRule" Kind="Enumeration" />
      <Type Name="CTFrameProgression" Kind="Enumeration" />
      <Type Name="CTFramesetter" Kind="Class" />
      <Type Name="CTGlyphInfo" Kind="Class" />
      <Type Name="CTLigatureFormation" Kind="Enumeration" />
      <Type Name="CTLine" Kind="Class" />
      <Type Name="CTLine+CaretEdgeEnumerator" Kind="Delegate" />
      <Type Name="CTLineBoundsOptions" Kind="Enumeration" />
      <Type Name="CTLineBreakMode" Kind="Enumeration" />
      <Type Name="CTLineTruncation" Kind="Enumeration" />
      <Type Name="CTParagraphStyle" Kind="Class" />
      <Type Name="CTParagraphStyleSettings" Kind="Class" />
      <Type Name="CTRun" Kind="Class" />
      <Type Name="CTRunDelegate" Kind="Class" />
      <Type Name="CTRunDelegateOperations" Kind="Class" />
      <Type Name="CTRunStatus" Kind="Enumeration" />
      <Type Name="CTStringAttributeKey" Kind="Class" />
      <Type Name="CTStringAttributes" Kind="Class" />
      <Type Name="CTSuperscriptStyle" Kind="Enumeration" />
      <Type Name="CTTextAlignment" Kind="Enumeration" />
      <Type Name="CTTextTab" Kind="Class" />
      <Type Name="CTTextTabOptionKey" Kind="Class" />
      <Type Name="CTTextTabOptions" Kind="Class" />
      <Type Name="CTTypesetter" Kind="Class" />
      <Type Name="CTTypesetterOptionKey" Kind="Class" />
      <Type Name="CTTypesetterOptions" Kind="Class" />
      <Type Name="CTUnderlineStyle" Kind="Enumeration" />
      <Type Name="CTUnderlineStyleModifiers" Kind="Enumeration" />
      <Type Name="CTWritingDirection" Kind="Enumeration" />
      <Type Name="FontFeatureGroup" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.CoreVideo">
      <Type Name="CVAttachmentMode" Kind="Enumeration" />
      <Type Name="CVBuffer" Kind="Class" />
      <Type Name="CVFillExtendedPixelsCallBack" Kind="Delegate" />
      <Type Name="CVFillExtendedPixelsCallBackData" Kind="Structure" />
      <Type Name="CVImageBuffer" Kind="Class" />
      <Type Name="CVMetalTexture" Kind="Class" />
      <Type Name="CVMetalTextureCache" Kind="Class" />
      <Type Name="CVOptionFlags" Kind="Enumeration" />
      <Type Name="CVPixelBuffer" Kind="Class" />
      <Type Name="CVPixelBufferAttributes" Kind="Class" />
      <Type Name="CVPixelBufferLock" Kind="Enumeration" />
      <Type Name="CVPixelBufferPool" Kind="Class" />
      <Type Name="CVPixelBufferPoolAllocationSettings" Kind="Class" />
      <Type Name="CVPixelBufferPoolFlushFlags" Kind="Enumeration" />
      <Type Name="CVPixelBufferPoolSettings" Kind="Class" />
      <Type Name="CVPixelFormatDescription" Kind="Class" />
      <Type Name="CVPixelFormatType" Kind="Enumeration" />
      <Type Name="CVPlanarComponentInfo" Kind="Structure" />
      <Type Name="CVPlanarPixelBufferInfo" Kind="Structure" />
      <Type Name="CVPlanarPixelBufferInfo_YCbCrBiPlanar" Kind="Structure" />
      <Type Name="CVPlanarPixelBufferInfo_YCbCrPlanar" Kind="Structure" />
      <Type Name="CVReturn" Kind="Enumeration" />
      <Type Name="CVSMPTETime" Kind="Structure" />
      <Type Name="CVSMPTETimeFlags" Kind="Enumeration" />
      <Type Name="CVSMPTETimeType" Kind="Enumeration" />
      <Type Name="CVTime" Kind="Structure" />
      <Type Name="CVTimeFlags" Kind="Enumeration" />
      <Type Name="CVTimeStamp" Kind="Structure" />
      <Type Name="CVTimeStampFlags" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.DeviceCheck">
      <Type Name="DCDevice" Kind="Class" />
      <Type Name="DCDeviceGenerateTokenCompletionHandler" Kind="Delegate" />
      <Type Name="DCError" Kind="Enumeration" />
      <Type Name="DCErrorExtensions" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.Dialog">
      <Type Name="ActivityElement" Kind="Class" />
      <Type Name="AlignmentAttribute" Kind="Class" />
      <Type Name="BadgeElement" Kind="Class" />
      <Type Name="BaseBooleanImageElement" Kind="Class" />
      <Type Name="BaseBooleanImageElement+TextWithImageCellView" Kind="Class" />
      <Type Name="BindingContext" Kind="Class" />
      <Type Name="BooleanElement" Kind="Class" />
      <Type Name="BooleanImageElement" Kind="Class" />
      <Type Name="BoolElement" Kind="Class" />
      <Type Name="CaptionAttribute" Kind="Class" />
      <Type Name="CheckboxAttribute" Kind="Class" />
      <Type Name="CheckboxElement" Kind="Class" />
      <Type Name="DateAttribute" Kind="Class" />
      <Type Name="DateElement" Kind="Class" />
      <Type Name="DateTimeElement" Kind="Class" />
      <Type Name="DialogViewController" Kind="Class" />
      <Type Name="DialogViewController+SearchTextEventHandler" Kind="Delegate" />
      <Type Name="DialogViewController+SizingSource" Kind="Class" />
      <Type Name="DialogViewController+Source" Kind="Class" />
      <Type Name="Element" Kind="Class" />
      <Type Name="EntryAttribute" Kind="Class" />
      <Type Name="EntryElement" Kind="Class" />
      <Type Name="FloatElement" Kind="Class" />
      <Type Name="GlassButton" Kind="Class" />
      <Type Name="GraphicsUtil" Kind="Class" />
      <Type Name="Group" Kind="Class" />
      <Type Name="HtmlAttribute" Kind="Class" />
      <Type Name="HtmlElement" Kind="Class" />
      <Type Name="IColorizeBackground" Kind="Interface" />
      <Type Name="IElementSizing" Kind="Interface" />
      <Type Name="ImageElement" Kind="Class" />
      <Type Name="ImageStringElement" Kind="Class" />
      <Type Name="JsonElement" Kind="Class" />
      <Type Name="LoadMoreElement" Kind="Class" />
      <Type Name="MessageElement" Kind="Class" />
      <Type Name="MessageSummaryView" Kind="Class" />
      <Type Name="MultilineAttribute" Kind="Class" />
      <Type Name="MultilineElement" Kind="Class" />
      <Type Name="OnTapAttribute" Kind="Class" />
      <Type Name="OwnerDrawnElement" Kind="Class" />
      <Type Name="PasswordAttribute" Kind="Class" />
      <Type Name="RadioElement" Kind="Class" />
      <Type Name="RadioGroup" Kind="Class" />
      <Type Name="RadioSelectionAttribute" Kind="Class" />
      <Type Name="RangeAttribute" Kind="Class" />
      <Type Name="RefreshTableHeaderView" Kind="Class" />
      <Type Name="RefreshViewStatus" Kind="Enumeration" />
      <Type Name="RootElement" Kind="Class" />
      <Type Name="SearchChangedEventArgs" Kind="Class" />
      <Type Name="Section" Kind="Class" />
      <Type Name="SectionAttribute" Kind="Class" />
      <Type Name="SkipAttribute" Kind="Class" />
      <Type Name="StringElement" Kind="Class" />
      <Type Name="StyledMultilineElement" Kind="Class" />
      <Type Name="StyledStringElement" Kind="Class" />
      <Type Name="TimeAttribute" Kind="Class" />
      <Type Name="TimeElement" Kind="Class" />
      <Type Name="UIViewElement" Kind="Class" />
      <Type Name="UIViewElement+CellFlags" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.Dialog.Utilities">
      <Type Name="IImageUpdated" Kind="Interface" />
      <Type Name="ImageLoader" Kind="Class" />
      <Type Name="LRUCache`2" DisplayName="LRUCache&lt;TKey,TValue&gt;" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.EventKit">
      <Type Name="EKAlarm" Kind="Class" />
      <Type Name="EKAlarmProximity" Kind="Enumeration" />
      <Type Name="EKAuthorizationStatus" Kind="Enumeration" />
      <Type Name="EKCalendar" Kind="Class" />
      <Type Name="EKCalendarEventAvailability" Kind="Enumeration" />
      <Type Name="EKCalendarItem" Kind="Class" />
      <Type Name="EKCalendarType" Kind="Enumeration" />
      <Type Name="EKDay" Kind="Enumeration" />
      <Type Name="EKEntityMask" Kind="Enumeration" />
      <Type Name="EKEntityType" Kind="Enumeration" />
      <Type Name="EKErrorCode" Kind="Enumeration" />
      <Type Name="EKErrorCodeExtensions" Kind="Class" />
      <Type Name="EKEvent" Kind="Class" />
      <Type Name="EKEventAvailability" Kind="Enumeration" />
      <Type Name="EKEventSearchCallback" Kind="Delegate" />
      <Type Name="EKEventStatus" Kind="Enumeration" />
      <Type Name="EKEventStore" Kind="Class" />
      <Type Name="EKEventStore+Notifications" Kind="Class" />
      <Type Name="EKObject" Kind="Class" />
      <Type Name="EKParticipant" Kind="Class" />
      <Type Name="EKParticipantRole" Kind="Enumeration" />
      <Type Name="EKParticipantScheduleStatus" Kind="Enumeration" />
      <Type Name="EKParticipantStatus" Kind="Enumeration" />
      <Type Name="EKParticipantType" Kind="Enumeration" />
      <Type Name="EKRecurrenceDayOfWeek" Kind="Class" />
      <Type Name="EKRecurrenceEnd" Kind="Class" />
      <Type Name="EKRecurrenceFrequency" Kind="Enumeration" />
      <Type Name="EKRecurrenceRule" Kind="Class" />
      <Type Name="EKReminder" Kind="Class" />
      <Type Name="EKReminderPriority" Kind="Enumeration" />
      <Type Name="EKSource" Kind="Class" />
      <Type Name="EKSourceType" Kind="Enumeration" />
      <Type Name="EKSpan" Kind="Enumeration" />
      <Type Name="EKStructuredLocation" Kind="Class" />
      <Type Name="EKWeekday" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.EventKitUI">
      <Type Name="EKCalendarChooser" Kind="Class" />
      <Type Name="EKCalendarChooserDelegate" Kind="Class" />
      <Type Name="EKCalendarChooserDelegate_Extensions" Kind="Class" />
      <Type Name="EKCalendarChooserDisplayStyle" Kind="Enumeration" />
      <Type Name="EKCalendarChooserSelectionStyle" Kind="Enumeration" />
      <Type Name="EKEventEditController" Kind="Delegate" />
      <Type Name="EKEventEditEventArgs" Kind="Class" />
      <Type Name="EKEventEditViewAction" Kind="Enumeration" />
      <Type Name="EKEventEditViewController" Kind="Class" />
      <Type Name="EKEventEditViewController+EKEventEditViewControllerAppearance" Kind="Class" />
      <Type Name="EKEventEditViewDelegate" Kind="Class" />
      <Type Name="EKEventEditViewDelegate_Extensions" Kind="Class" />
      <Type Name="EKEventViewAction" Kind="Enumeration" />
      <Type Name="EKEventViewController" Kind="Class" />
      <Type Name="EKEventViewDelegate" Kind="Class" />
      <Type Name="EKEventViewEventArgs" Kind="Class" />
      <Type Name="EKUIBundle" Kind="Class" />
      <Type Name="IEKCalendarChooserDelegate" Kind="Interface" />
      <Type Name="IEKEventEditViewDelegate" Kind="Interface" />
      <Type Name="IEKEventViewDelegate" Kind="Interface" />
    </Namespace>
    <Namespace Name="MonoTouch.ExternalAccessory">
      <Type Name="EAAccessory" Kind="Class" />
      <Type Name="EAAccessoryDelegate" Kind="Class" />
      <Type Name="EAAccessoryDelegate_Extensions" Kind="Class" />
      <Type Name="EAAccessoryEventArgs" Kind="Class" />
      <Type Name="EAAccessoryManager" Kind="Class" />
      <Type Name="EAAccessoryManager+Notifications" Kind="Class" />
      <Type Name="EABluetoothAccessoryPickerError" Kind="Enumeration" />
      <Type Name="EABluetoothAccessoryPickerErrorExtensions" Kind="Class" />
      <Type Name="EASession" Kind="Class" />
      <Type Name="EAWiFiUnconfiguredAccessory" Kind="Class" />
      <Type Name="EAWiFiUnconfiguredAccessoryBrowser" Kind="Class" />
      <Type Name="EAWiFiUnconfiguredAccessoryBrowserDelegate" Kind="Class" />
      <Type Name="EAWiFiUnconfiguredAccessoryBrowserEventArgs" Kind="Class" />
      <Type Name="EAWiFiUnconfiguredAccessoryBrowserState" Kind="Enumeration" />
      <Type Name="EAWiFiUnconfiguredAccessoryConfigurationStatus" Kind="Enumeration" />
      <Type Name="EAWiFiUnconfiguredAccessoryDidFinishEventArgs" Kind="Class" />
      <Type Name="EAWiFiUnconfiguredAccessoryEventArgs" Kind="Class" />
      <Type Name="EAWiFiUnconfiguredAccessoryProperties" Kind="Enumeration" />
      <Type Name="IEAAccessoryDelegate" Kind="Interface" />
      <Type Name="IEAWiFiUnconfiguredAccessoryBrowserDelegate" Kind="Interface" />
    </Namespace>
    <Namespace Name="MonoTouch.FileProvider">
      <Type Name="INSFileProviderChangeObserver" Kind="Interface" />
      <Type Name="INSFileProviderEnumerationObserver" Kind="Interface" />
      <Type Name="INSFileProviderEnumerator" Kind="Interface" />
      <Type Name="INSFileProviderItem" Kind="Interface" />
      <Type Name="INSFileProviderServiceSource" Kind="Interface" />
      <Type Name="NSFileProviderDomain" Kind="Class" />
      <Type Name="NSFileProviderEnumerator_Extensions" Kind="Class" />
      <Type Name="NSFileProviderError" Kind="Enumeration" />
      <Type Name="NSFileProviderErrorExtensions" Kind="Class" />
      <Type Name="NSFileProviderErrorKeys" Kind="Class" />
      <Type Name="NSFileProviderFavoriteRank" Kind="Class" />
      <Type Name="NSFileProviderItem_Extensions" Kind="Class" />
      <Type Name="NSFileProviderItemCapabilities" Kind="Enumeration" />
      <Type Name="NSFileProviderItemIdentifier" Kind="Class" />
      <Type Name="NSFileProviderManager" Kind="Class" />
      <Type Name="NSFileProviderPage" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.FileProviderUI">
      <Type Name="FPUIActionExtensionContext" Kind="Class" />
      <Type Name="FPUIActionExtensionViewController" Kind="Class" />
      <Type Name="FPUIExtensionErrorCode" Kind="Enumeration" />
      <Type Name="FPUIExtensionErrorCodeExtensions" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.Foundation">
      <Type Name="ActionAttribute" Kind="Class" />
      <Type Name="AdviceAttribute" Kind="Class" />
      <Type Name="ConnectAttribute" Kind="Class" />
      <Type Name="DictionaryContainer" Kind="Class" />
      <Type Name="EncodingDetectionOptions" Kind="Class" />
      <Type Name="EnumerateDatesCallback" Kind="Delegate" />
      <Type Name="EnumerateIndexSetCallback" Kind="Delegate" />
      <Type Name="ExportAttribute" Kind="Class" />
      <Type Name="FieldAttribute" Kind="Class" />
      <Type Name="INSCacheDelegate" Kind="Interface" />
      <Type Name="INSCoding" Kind="Interface" />
      <Type Name="INSCopying" Kind="Interface" />
      <Type Name="INSDiscardableContent" Kind="Interface" />
      <Type Name="INSExtensionRequestHandling" Kind="Interface" />
      <Type Name="INSFileManagerDelegate" Kind="Interface" />
      <Type Name="INSFilePresenter" Kind="Interface" />
      <Type Name="INSItemProviderReading" Kind="Interface" />
      <Type Name="INSItemProviderWriting" Kind="Interface" />
      <Type Name="INSKeyedArchiverDelegate" Kind="Interface" />
      <Type Name="INSKeyedUnarchiverDelegate" Kind="Interface" />
      <Type Name="INSLocking" Kind="Interface" />
      <Type Name="INSMachPortDelegate" Kind="Interface" />
      <Type Name="INSMetadataQueryDelegate" Kind="Interface" />
      <Type Name="INSMutableCopying" Kind="Interface" />
      <Type Name="INSNetServiceBrowserDelegate" Kind="Interface" />
      <Type Name="INSNetServiceDelegate" Kind="Interface" />
      <Type Name="INSObjectProtocol" Kind="Interface" />
      <Type Name="INSPortDelegate" Kind="Interface" />
      <Type Name="INSProgressReporting" Kind="Interface" />
      <Type Name="INSSecureCoding" Kind="Interface" />
      <Type Name="INSStreamDelegate" Kind="Interface" />
      <Type Name="INSURLAuthenticationChallengeSender" Kind="Interface" />
      <Type Name="INSUrlConnectionDataDelegate" Kind="Interface" />
      <Type Name="INSUrlConnectionDelegate" Kind="Interface" />
      <Type Name="INSUrlConnectionDownloadDelegate" Kind="Interface" />
      <Type Name="INSUrlProtocolClient" Kind="Interface" />
      <Type Name="INSUrlSessionDataDelegate" Kind="Interface" />
      <Type Name="INSUrlSessionDelegate" Kind="Interface" />
      <Type Name="INSUrlSessionDownloadDelegate" Kind="Interface" />
      <Type Name="INSUrlSessionStreamDelegate" Kind="Interface" />
      <Type Name="INSUrlSessionTaskDelegate" Kind="Interface" />
      <Type Name="INSUserActivityDelegate" Kind="Interface" />
      <Type Name="ItemProviderDataCompletionHandler" Kind="Delegate" />
      <Type Name="LinguisticTagEnumerator" Kind="Delegate" />
      <Type Name="LinkerSafeAttribute" Kind="Class" />
      <Type Name="LoadInPlaceFileRepresentationHandler" Kind="Delegate" />
      <Type Name="LoadInPlaceResult" Kind="Class" />
      <Type Name="ModelAttribute" Kind="Class" />
      <Type Name="ModelNotImplementedException" Kind="Class" />
      <Type Name="MonoTouchException" Kind="Class" />
      <Type Name="NotImplementedAttribute" Kind="Class" />
      <Type Name="NSActivityOptions" Kind="Enumeration" />
      <Type Name="NSAlignmentOptions" Kind="Enumeration" />
      <Type Name="NSArchiveReplaceEventArgs" Kind="Class" />
      <Type Name="NSArray" Kind="Class" />
      <Type Name="NSArray`1" DisplayName="NSArray&lt;TKey&gt;" Kind="Class" />
      <Type Name="NSAttributedRangeCallback" Kind="Delegate" />
      <Type Name="NSAttributedString" Kind="Class" />
      <Type Name="NSAttributedStringCallback" Kind="Delegate" />
      <Type Name="NSAttributedStringDocumentAttributes" Kind="Class" />
      <Type Name="NSAttributedStringEnumeration" Kind="Enumeration" />
      <Type Name="NSAutoreleasePool" Kind="Class" />
      <Type Name="NSBlockOperation" Kind="Class" />
      <Type Name="NSBundle" Kind="Class" />
      <Type Name="NSBundleExecutableArchitecture" Kind="Enumeration" />
      <Type Name="NSBundleResourceRequest" Kind="Class" />
      <Type Name="NSBundleResourceRequest+Notifications" Kind="Class" />
      <Type Name="NSByteCountFormatter" Kind="Class" />
      <Type Name="NSByteCountFormatterCountStyle" Kind="Enumeration" />
      <Type Name="NSByteCountFormatterUnits" Kind="Enumeration" />
      <Type Name="NSCache" Kind="Class" />
      <Type Name="NSCacheDelegate" Kind="Class" />
      <Type Name="NSCacheDelegate_Extensions" Kind="Class" />
      <Type Name="NSCachedUrlResponse" Kind="Class" />
      <Type Name="NSCalculationError" Kind="Enumeration" />
      <Type Name="NSCalendar" Kind="Class" />
      <Type Name="NSCalendar+Notifications" Kind="Class" />
      <Type Name="NSCalendarOptions" Kind="Enumeration" />
      <Type Name="NSCalendarType" Kind="Enumeration" />
      <Type Name="NSCalendarUnit" Kind="Enumeration" />
      <Type Name="NSCharacterSet" Kind="Class" />
      <Type Name="NSCocoaError" Kind="Enumeration" />
      <Type Name="NSCoder" Kind="Class" />
      <Type Name="NSCoding" Kind="Class" />
      <Type Name="NSComparator" Kind="Delegate" />
      <Type Name="NSComparisonPredicate" Kind="Class" />
      <Type Name="NSComparisonPredicateModifier" Kind="Enumeration" />
      <Type Name="NSComparisonPredicateOptions" Kind="Enumeration" />
      <Type Name="NSComparisonResult" Kind="Enumeration" />
      <Type Name="NSCompoundPredicate" Kind="Class" />
      <Type Name="NSCompoundPredicateType" Kind="Enumeration" />
      <Type Name="NSCondition" Kind="Class" />
      <Type Name="NSConditionLock" Kind="Class" />
      <Type Name="NSCopying" Kind="Class" />
      <Type Name="NSData" Kind="Class" />
      <Type Name="NSDataBase64DecodingOptions" Kind="Enumeration" />
      <Type Name="NSDataBase64EncodingOptions" Kind="Enumeration" />
      <Type Name="NSDataByteRangeEnumerator" Kind="Delegate" />
      <Type Name="NSDataDetector" Kind="Class" />
      <Type Name="NSDataReadingOptions" Kind="Enumeration" />
      <Type Name="NSDataSearchOptions" Kind="Enumeration" />
      <Type Name="NSDataWritingOptions" Kind="Enumeration" />
      <Type Name="NSDate" Kind="Class" />
      <Type Name="NSDateComponents" Kind="Class" />
      <Type Name="NSDateComponentsFormatter" Kind="Class" />
      <Type Name="NSDateComponentsFormatterUnitsStyle" Kind="Enumeration" />
      <Type Name="NSDateComponentsFormatterZeroFormattingBehavior" Kind="Enumeration" />
      <Type Name="NSDateComponentsWrappingBehavior" Kind="Enumeration" />
      <Type Name="NSDateFormatter" Kind="Class" />
      <Type Name="NSDateFormatterBehavior" Kind="Enumeration" />
      <Type Name="NSDateFormatterStyle" Kind="Enumeration" />
      <Type Name="NSDateInterval" Kind="Class" />
      <Type Name="NSDateIntervalFormatter" Kind="Class" />
      <Type Name="NSDateIntervalFormatterStyle" Kind="Enumeration" />
      <Type Name="NSDecimal" Kind="Structure" />
      <Type Name="NSDecimalNumber" Kind="Class" />
      <Type Name="NSDecoderCallback" Kind="Delegate" />
      <Type Name="NSDecoderHandler" Kind="Delegate" />
      <Type Name="NSDecodingFailurePolicy" Kind="Enumeration" />
      <Type Name="NSDictionary" Kind="Class" />
      <Type Name="NSDictionary`2" DisplayName="NSDictionary&lt;TKey,TValue&gt;" Kind="Class" />
      <Type Name="NSDimension" Kind="Class" />
      <Type Name="NSDirectoryEnumerationOptions" Kind="Enumeration" />
      <Type Name="NSDirectoryEnumerator" Kind="Class" />
      <Type Name="NSDistributedNotificationCenter" Kind="Class" />
      <Type Name="NSDocumentType" Kind="Enumeration" />
      <Type Name="NSDocumentViewMode" Kind="Enumeration" />
      <Type Name="NSEncodeHook" Kind="Delegate" />
      <Type Name="NSEnergyFormatter" Kind="Class" />
      <Type Name="NSEnergyFormatterUnit" Kind="Enumeration" />
      <Type Name="NSEnumerateErrorHandler" Kind="Delegate" />
      <Type Name="NSEnumerationOptions" Kind="Enumeration" />
      <Type Name="NSEnumerator" Kind="Class" />
      <Type Name="NSError" Kind="Class" />
      <Type Name="NSErrorEventArgs" Kind="Class" />
      <Type Name="NSErrorException" Kind="Class" />
      <Type Name="NSErrorUserInfoValueProvider" Kind="Delegate" />
      <Type Name="NSException" Kind="Class" />
      <Type Name="NSExpression" Kind="Class" />
      <Type Name="NSExpressionCallbackHandler" Kind="Delegate" />
      <Type Name="NSExpressionHandler" Kind="Delegate" />
      <Type Name="NSExpressionType" Kind="Enumeration" />
      <Type Name="NSExtensionContext" Kind="Class" />
      <Type Name="NSExtensionContext+Notifications" Kind="Class" />
      <Type Name="NSExtensionItem" Kind="Class" />
      <Type Name="NSExtensionRequestHandling" Kind="Class" />
      <Type Name="NSFileAccessIntent" Kind="Class" />
      <Type Name="NSFileAttributes" Kind="Class" />
      <Type Name="NSFileCoordinator" Kind="Class" />
      <Type Name="NSFileCoordinatorReadingOptions" Kind="Enumeration" />
      <Type Name="NSFileCoordinatorWorkerRW" Kind="Delegate" />
      <Type Name="NSFileCoordinatorWritingOptions" Kind="Enumeration" />
      <Type Name="NSFileHandle" Kind="Class" />
      <Type Name="NSFileHandle+Notifications" Kind="Class" />
      <Type Name="NSFileHandleConnectionAcceptedEventArgs" Kind="Class" />
      <Type Name="NSFileHandleReadEventArgs" Kind="Class" />
      <Type Name="NSFileManager" Kind="Class" />
      <Type Name="NSFileManager_NSUserInformation" Kind="Class" />
      <Type Name="NSFileManager+Notifications" Kind="Class" />
      <Type Name="NSFileManagerDelegate" Kind="Class" />
      <Type Name="NSFileManagerDelegate_Extensions" Kind="Class" />
      <Type Name="NSFileManagerItemReplacementOptions" Kind="Enumeration" />
      <Type Name="NSFilePresenter" Kind="Class" />
      <Type Name="NSFilePresenter_Extensions" Kind="Class" />
      <Type Name="NSFilePresenterReacquirer" Kind="Delegate" />
      <Type Name="NSFileProtection" Kind="Enumeration" />
      <Type Name="NSFileProviderService" Kind="Class" />
      <Type Name="NSFileSystemAttributes" Kind="Class" />
      <Type Name="NSFileType" Kind="Enumeration" />
      <Type Name="NSFileVersion" Kind="Class" />
      <Type Name="NSFileVersionAddingOptions" Kind="Enumeration" />
      <Type Name="NSFileVersionNonlocalVersionsCompletionHandler" Kind="Delegate" />
      <Type Name="NSFileVersionReplacingOptions" Kind="Enumeration" />
      <Type Name="NSFileWrapper" Kind="Class" />
      <Type Name="NSFileWrapperReadingOptions" Kind="Enumeration" />
      <Type Name="NSFileWrapperWritingOptions" Kind="Enumeration" />
      <Type Name="NSFormatter" Kind="Class" />
      <Type Name="NSFormattingContext" Kind="Enumeration" />
      <Type Name="NSFormattingUnitStyle" Kind="Enumeration" />
      <Type Name="NSHttpCookie" Kind="Class" />
      <Type Name="NSHttpCookieAcceptPolicy" Kind="Enumeration" />
      <Type Name="NSHttpCookieStorage" Kind="Class" />
      <Type Name="NSHttpCookieStorage+Notifications" Kind="Class" />
      <Type Name="NSHttpUrlResponse" Kind="Class" />
      <Type Name="NSIndexPath" Kind="Class" />
      <Type Name="NSIndexSet" Kind="Class" />
      <Type Name="NSInputStream" Kind="Class" />
      <Type Name="NSInvocation" Kind="Class" />
      <Type Name="NSIso8601DateFormatOptions" Kind="Enumeration" />
      <Type Name="NSIso8601DateFormatter" Kind="Class" />
      <Type Name="NSItemDownloadingStatus" Kind="Enumeration" />
      <Type Name="NSItemDownloadingStatusExtensions" Kind="Class" />
      <Type Name="NSItemProvider" Kind="Class" />
      <Type Name="NSItemProviderCompletionHandler" Kind="Delegate" />
      <Type Name="NSItemProviderErrorCode" Kind="Enumeration" />
      <Type Name="NSItemProviderFileOptions" Kind="Enumeration" />
      <Type Name="NSItemProviderLoadHandler" Kind="Delegate" />
      <Type Name="NSItemProviderRepresentationVisibility" Kind="Enumeration" />
      <Type Name="NSItemProviderWriting_Extensions" Kind="Class" />
      <Type Name="NSJavaScriptExtension" Kind="Class" />
      <Type Name="NSJsonReadingOptions" Kind="Enumeration" />
      <Type Name="NSJsonSerialization" Kind="Class" />
      <Type Name="NSJsonWritingOptions" Kind="Enumeration" />
      <Type Name="NSKeyedArchiver" Kind="Class" />
      <Type Name="NSKeyedArchiverDelegate" Kind="Class" />
      <Type Name="NSKeyedArchiverDelegate_Extensions" Kind="Class" />
      <Type Name="NSKeyedUnarchiver" Kind="Class" />
      <Type Name="NSKeyedUnarchiverDelegate" Kind="Class" />
      <Type Name="NSKeyedUnarchiverDelegate_Extensions" Kind="Class" />
      <Type Name="NSKeyValueChange" Kind="Enumeration" />
      <Type Name="NSKeyValueObservingOptions" Kind="Enumeration" />
      <Type Name="NSKeyValueSetMutationKind" Kind="Enumeration" />
      <Type Name="NSKeyValueSorting_NSMutableOrderedSet" Kind="Class" />
      <Type Name="NSKeyValueSorting_NSOrderedSet" Kind="Class" />
      <Type Name="NSLengthFormatter" Kind="Class" />
      <Type Name="NSLengthFormatterUnit" Kind="Enumeration" />
      <Type Name="NSLigatureType" Kind="Enumeration" />
      <Type Name="NSLinguisticTag" Kind="Class" />
      <Type Name="NSLinguisticTagger" Kind="Class" />
      <Type Name="NSLinguisticTaggerOptions" Kind="Enumeration" />
      <Type Name="NSLinguisticTaggerUnit" Kind="Enumeration" />
      <Type Name="NSLingusticEnumerator" Kind="Delegate" />
      <Type Name="NSLocale" Kind="Class" />
      <Type Name="NSLocale+Notifications" Kind="Class" />
      <Type Name="NSLocaleLanguageDirection" Kind="Enumeration" />
      <Type Name="NSLock" Kind="Class" />
      <Type Name="NSMachPort" Kind="Class" />
      <Type Name="NSMachPortDelegate" Kind="Class" />
      <Type Name="NSMachPortDelegate_Extensions" Kind="Class" />
      <Type Name="NSMachPortRights" Kind="Enumeration" />
      <Type Name="NSMassFormatter" Kind="Class" />
      <Type Name="NSMassFormatterUnit" Kind="Enumeration" />
      <Type Name="NSMatchEnumerator" Kind="Delegate" />
      <Type Name="NSMatchingFlags" Kind="Enumeration" />
      <Type Name="NSMatchingOptions" Kind="Enumeration" />
      <Type Name="NSMeasurement`1" DisplayName="NSMeasurement&lt;UnitType&gt;" Kind="Class" />
      <Type Name="NSMeasurementFormatter" Kind="Class" />
      <Type Name="NSMeasurementFormatterUnitOptions" Kind="Enumeration" />
      <Type Name="NSMetadataItem" Kind="Class" />
      <Type Name="NSMetadataQuery" Kind="Class" />
      <Type Name="NSMetadataQuery+Notifications" Kind="Class" />
      <Type Name="NSMetadataQueryAttributeValueTuple" Kind="Class" />
      <Type Name="NSMetadataQueryDelegate" Kind="Class" />
      <Type Name="NSMetadataQueryDelegate_Extensions" Kind="Class" />
      <Type Name="NSMetadataQueryEnumerationCallback" Kind="Delegate" />
      <Type Name="NSMetadataQueryObject" Kind="Delegate" />
      <Type Name="NSMetadataQueryResultGroup" Kind="Class" />
      <Type Name="NSMetadataQueryValue" Kind="Delegate" />
      <Type Name="NSMethodSignature" Kind="Class" />
      <Type Name="NSMutableArray" Kind="Class" />
      <Type Name="NSMutableArray`1" DisplayName="NSMutableArray&lt;TValue&gt;" Kind="Class" />
      <Type Name="NSMutableAttributedString" Kind="Class" />
      <Type Name="NSMutableCharacterSet" Kind="Class" />
      <Type Name="NSMutableCopying" Kind="Class" />
      <Type Name="NSMutableData" Kind="Class" />
      <Type Name="NSMutableDictionary" Kind="Class" />
      <Type Name="NSMutableDictionary`2" DisplayName="NSMutableDictionary&lt;TKey,TValue&gt;" Kind="Class" />
      <Type Name="NSMutableIndexSet" Kind="Class" />
      <Type Name="NSMutableOrderedSet" Kind="Class" />
      <Type Name="NSMutableOrderedSet`1" DisplayName="NSMutableOrderedSet&lt;TKey&gt;" Kind="Class" />
      <Type Name="NSMutableSet" Kind="Class" />
      <Type Name="NSMutableSet`1" DisplayName="NSMutableSet&lt;TKey&gt;" Kind="Class" />
      <Type Name="NSMutableString" Kind="Class" />
      <Type Name="NSMutableUrlRequest" Kind="Class" />
      <Type Name="NSNetDomainEventArgs" Kind="Class" />
      <Type Name="NSNetService" Kind="Class" />
      <Type Name="NSNetServiceBrowser" Kind="Class" />
      <Type Name="NSNetServiceBrowserDelegate" Kind="Class" />
      <Type Name="NSNetServiceBrowserDelegate_Extensions" Kind="Class" />
      <Type Name="NSNetServiceConnectionEventArgs" Kind="Class" />
      <Type Name="NSNetServiceDataEventArgs" Kind="Class" />
      <Type Name="NSNetServiceDelegate" Kind="Class" />
      <Type Name="NSNetServiceDelegate_Extensions" Kind="Class" />
      <Type Name="NSNetServiceErrorEventArgs" Kind="Class" />
      <Type Name="NSNetServiceEventArgs" Kind="Class" />
      <Type Name="NSNetServiceOptions" Kind="Enumeration" />
      <Type Name="NSNetServicesStatus" Kind="Enumeration" />
      <Type Name="NSNotification" Kind="Class" />
      <Type Name="NSNotificationCenter" Kind="Class" />
      <Type Name="NSNotificationCoalescing" Kind="Enumeration" />
      <Type Name="NSNotificationEventArgs" Kind="Class" />
      <Type Name="NSNotificationQueue" Kind="Class" />
      <Type Name="NSNull" Kind="Class" />
      <Type Name="NSNumber" Kind="Class" />
      <Type Name="NSNumberFormatter" Kind="Class" />
      <Type Name="NSNumberFormatterBehavior" Kind="Enumeration" />
      <Type Name="NSNumberFormatterPadPosition" Kind="Enumeration" />
      <Type Name="NSNumberFormatterRoundingMode" Kind="Enumeration" />
      <Type Name="NSNumberFormatterStyle" Kind="Enumeration" />
      <Type Name="NSObject" Kind="Class" />
      <Type Name="NSObjectEventArgs" Kind="Class" />
      <Type Name="NSObjectFlag" Kind="Class" />
      <Type Name="NSObjectProtocol_Extensions" Kind="Class" />
      <Type Name="NSObservedChange" Kind="Class" />
      <Type Name="NSOperatingSystemVersion" Kind="Structure" />
      <Type Name="NSOperation" Kind="Class" />
      <Type Name="NSOperationQueue" Kind="Class" />
      <Type Name="NSOperationQueuePriority" Kind="Enumeration" />
      <Type Name="NSOrderedSet" Kind="Class" />
      <Type Name="NSOrderedSet`1" DisplayName="NSOrderedSet&lt;TKey&gt;" Kind="Class" />
      <Type Name="NSOrthography" Kind="Class" />
      <Type Name="NSOutputStream" Kind="Class" />
      <Type Name="NSPersonNameComponent" Kind="Class" />
      <Type Name="NSPersonNameComponents" Kind="Class" />
      <Type Name="NSPersonNameComponentsFormatter" Kind="Class" />
      <Type Name="NSPersonNameComponentsFormatterOptions" Kind="Enumeration" />
      <Type Name="NSPersonNameComponentsFormatterStyle" Kind="Enumeration" />
      <Type Name="NSPipe" Kind="Class" />
      <Type Name="NSPort" Kind="Class" />
      <Type Name="NSPortDelegate" Kind="Class" />
      <Type Name="NSPortDelegate_Extensions" Kind="Class" />
      <Type Name="NSPortMessage" Kind="Class" />
      <Type Name="NSPostingStyle" Kind="Enumeration" />
      <Type Name="NSPredicate" Kind="Class" />
      <Type Name="NSPredicateEvaluator" Kind="Delegate" />
      <Type Name="NSPredicateOperatorType" Kind="Enumeration" />
      <Type Name="NSPredicateSupport_NSArray" Kind="Class" />
      <Type Name="NSPredicateSupport_NSMutableArray" Kind="Class" />
      <Type Name="NSPredicateSupport_NSMutableOrderedSet" Kind="Class" />
      <Type Name="NSPredicateSupport_NSMutableSet" Kind="Class" />
      <Type Name="NSPredicateSupport_NSOrderedSet" Kind="Class" />
      <Type Name="NSPredicateSupport_NSSet" Kind="Class" />
      <Type Name="NSProcessInfo" Kind="Class" />
      <Type Name="NSProcessInfo+Notifications" Kind="Class" />
      <Type Name="NSProcessInfoThermalState" Kind="Enumeration" />
      <Type Name="NSProgress" Kind="Class" />
      <Type Name="NSProgressReporting_Extensions" Kind="Class" />
      <Type Name="NSPropertyListFormat" Kind="Enumeration" />
      <Type Name="NSPropertyListMutabilityOptions" Kind="Enumeration" />
      <Type Name="NSPropertyListReadOptions" Kind="Enumeration" />
      <Type Name="NSPropertyListSerialization" Kind="Class" />
      <Type Name="NSPropertyListWriteOptions" Kind="Enumeration" />
      <Type Name="NSPurgeableData" Kind="Class" />
      <Type Name="NSQualityOfService" Kind="Enumeration" />
      <Type Name="NSRange" Kind="Structure" />
      <Type Name="NSRangeIterator" Kind="Delegate" />
      <Type Name="NSRecursiveLock" Kind="Class" />
      <Type Name="NSRegularExpression" Kind="Class" />
      <Type Name="NSRegularExpressionOptions" Kind="Enumeration" />
      <Type Name="NSRoundingMode" Kind="Enumeration" />
      <Type Name="NSRunLoop" Kind="Class" />
      <Type Name="NSRunLoopMode" Kind="Enumeration" />
      <Type Name="NSRunLoopModeExtensions" Kind="Class" />
      <Type Name="NSSearchPath" Kind="Class" />
      <Type Name="NSSearchPathDirectory" Kind="Enumeration" />
      <Type Name="NSSearchPathDomain" Kind="Enumeration" />
      <Type Name="NSSecureCoding" Kind="Class" />
      <Type Name="NSSet" Kind="Class" />
      <Type Name="NSSet`1" DisplayName="NSSet&lt;TKey&gt;" Kind="Class" />
      <Type Name="NSSetEnumerator" Kind="Delegate" />
      <Type Name="NSSortDescriptor" Kind="Class" />
      <Type Name="NSSortDescriptorSorting_NSMutableArray" Kind="Class" />
      <Type Name="NSSortOptions" Kind="Enumeration" />
      <Type Name="NSStream" Kind="Class" />
      <Type Name="NSStreamDelegate" Kind="Class" />
      <Type Name="NSStreamDelegate_Extensions" Kind="Class" />
      <Type Name="NSStreamEvent" Kind="Enumeration" />
      <Type Name="NSStreamEventArgs" Kind="Class" />
      <Type Name="NSStreamServiceType" Kind="Enumeration" />
      <Type Name="NSStreamSocketSecurityLevel" Kind="Enumeration" />
      <Type Name="NSStreamSocksOptions" Kind="Class" />
      <Type Name="NSStreamStatus" Kind="Enumeration" />
      <Type Name="NSString" Kind="Class" />
      <Type Name="NSStringCompareOptions" Kind="Enumeration" />
      <Type Name="NSStringDrawingContext" Kind="Class" />
      <Type Name="NSStringDrawingOptions" Kind="Enumeration" />
      <Type Name="NSStringEncoding" Kind="Enumeration" />
      <Type Name="NSStringTransform" Kind="Enumeration" />
      <Type Name="NSStringTransformExtensions" Kind="Class" />
      <Type Name="NSTextChecking" Kind="Class" />
      <Type Name="NSTextCheckingAddressComponents" Kind="Class" />
      <Type Name="NSTextCheckingResult" Kind="Class" />
      <Type Name="NSTextCheckingTransitComponents" Kind="Class" />
      <Type Name="NSTextCheckingType" Kind="Enumeration" />
      <Type Name="NSTextCheckingTypes" Kind="Enumeration" />
      <Type Name="NSTextWritingDirection" Kind="Enumeration" />
      <Type Name="NSThread" Kind="Class" />
      <Type Name="NSTimer" Kind="Class" />
      <Type Name="NSTimeZone" Kind="Class" />
      <Type Name="NSTimeZoneNameStyle" Kind="Enumeration" />
      <Type Name="NSUbiquitousKeyValueStore" Kind="Class" />
      <Type Name="NSUbiquitousKeyValueStore+Notifications" Kind="Class" />
      <Type Name="NSUbiquitousKeyValueStoreChangeEventArgs" Kind="Class" />
      <Type Name="NSUbiquitousKeyValueStoreChangeReason" Kind="Enumeration" />
      <Type Name="NSUnderlineStyle" Kind="Enumeration" />
      <Type Name="NSUndoManager" Kind="Class" />
      <Type Name="NSUndoManager+Notifications" Kind="Class" />
      <Type Name="NSUndoManagerCloseUndoGroupEventArgs" Kind="Class" />
      <Type Name="NSUnit" Kind="Class" />
      <Type Name="NSUnitAcceleration" Kind="Class" />
      <Type Name="NSUnitAngle" Kind="Class" />
      <Type Name="NSUnitArea" Kind="Class" />
      <Type Name="NSUnitConcentrationMass" Kind="Class" />
      <Type Name="NSUnitConverter" Kind="Class" />
      <Type Name="NSUnitConverterLinear" Kind="Class" />
      <Type Name="NSUnitDispersion" Kind="Class" />
      <Type Name="NSUnitDuration" Kind="Class" />
      <Type Name="NSUnitElectricCharge" Kind="Class" />
      <Type Name="NSUnitElectricCurrent" Kind="Class" />
      <Type Name="NSUnitElectricPotentialDifference" Kind="Class" />
      <Type Name="NSUnitElectricResistance" Kind="Class" />
      <Type Name="NSUnitEnergy" Kind="Class" />
      <Type Name="NSUnitFrequency" Kind="Class" />
      <Type Name="NSUnitFuelEfficiency" Kind="Class" />
      <Type Name="NSUnitIlluminance" Kind="Class" />
      <Type Name="NSUnitLength" Kind="Class" />
      <Type Name="NSUnitMass" Kind="Class" />
      <Type Name="NSUnitPower" Kind="Class" />
      <Type Name="NSUnitPressure" Kind="Class" />
      <Type Name="NSUnitSpeed" Kind="Class" />
      <Type Name="NSUnitTemperature" Kind="Class" />
      <Type Name="NSUnitVolume" Kind="Class" />
      <Type Name="NSUrl" Kind="Class" />
      <Type Name="NSUrl_PromisedItems" Kind="Class" />
      <Type Name="NSUrlAsyncResult" Kind="Class" />
      <Type Name="NSUrlAuthenticationChallenge" Kind="Class" />
      <Type Name="NSURLAuthenticationChallengeSender" Kind="Class" />
      <Type Name="NSURLAuthenticationChallengeSender_Extensions" Kind="Class" />
      <Type Name="NSUrlBookmarkCreationOptions" Kind="Enumeration" />
      <Type Name="NSUrlBookmarkResolutionOptions" Kind="Enumeration" />
      <Type Name="NSUrlCache" Kind="Class" />
      <Type Name="NSUrlCacheStoragePolicy" Kind="Enumeration" />
      <Type Name="NSUrlComponents" Kind="Class" />
      <Type Name="NSUrlConnection" Kind="Class" />
      <Type Name="NSUrlConnectionDataDelegate" Kind="Class" />
      <Type Name="NSUrlConnectionDataDelegate_Extensions" Kind="Class" />
      <Type Name="NSUrlConnectionDataResponse" Kind="Delegate" />
      <Type Name="NSUrlConnectionDelegate" Kind="Class" />
      <Type Name="NSUrlConnectionDelegate_Extensions" Kind="Class" />
      <Type Name="NSUrlConnectionDownloadDelegate" Kind="Class" />
      <Type Name="NSUrlConnectionDownloadDelegate_Extensions" Kind="Class" />
      <Type Name="NSUrlCredential" Kind="Class" />
      <Type Name="NSUrlCredentialPersistence" Kind="Enumeration" />
      <Type Name="NSUrlCredentialStorage" Kind="Class" />
      <Type Name="NSUrlCredentialStorage+Notifications" Kind="Class" />
      <Type Name="NSUrlDownloadSessionResponse" Kind="Delegate" />
      <Type Name="NSUrlError" Kind="Enumeration" />
      <Type Name="NSUrlErrorCancelledReason" Kind="Enumeration" />
      <Type Name="NSUrlProtectionSpace" Kind="Class" />
      <Type Name="NSUrlProtocol" Kind="Class" />
      <Type Name="NSUrlQueryItem" Kind="Class" />
      <Type Name="NSUrlRelationship" Kind="Enumeration" />
      <Type Name="NSUrlRequest" Kind="Class" />
      <Type Name="NSUrlRequestCachePolicy" Kind="Enumeration" />
      <Type Name="NSUrlRequestNetworkServiceType" Kind="Enumeration" />
      <Type Name="NSUrlResponse" Kind="Class" />
      <Type Name="NSUrlSession" Kind="Class" />
      <Type Name="NSUrlSessionActiveTasks" Kind="Class" />
      <Type Name="NSUrlSessionActiveTasks2" Kind="Class" />
      <Type Name="NSUrlSessionAllPendingTasks" Kind="Delegate" />
      <Type Name="NSUrlSessionAuthChallengeDisposition" Kind="Enumeration" />
      <Type Name="NSUrlSessionCombinedTasks" Kind="Class" />
      <Type Name="NSUrlSessionConfiguration" Kind="Class" />
      <Type Name="NSUrlSessionDataDelegate" Kind="Class" />
      <Type Name="NSUrlSessionDataDelegate_Extensions" Kind="Class" />
      <Type Name="NSUrlSessionDataRead" Kind="Delegate" />
      <Type Name="NSUrlSessionDataTask" Kind="Class" />
      <Type Name="NSUrlSessionDataTaskRequest" Kind="Class" />
      <Type Name="NSUrlSessionDelayedRequestDisposition" Kind="Enumeration" />
      <Type Name="NSUrlSessionDelegate" Kind="Class" />
      <Type Name="NSUrlSessionDelegate_Extensions" Kind="Class" />
      <Type Name="NSUrlSessionDownloadDelegate" Kind="Class" />
      <Type Name="NSUrlSessionDownloadDelegate_Extensions" Kind="Class" />
      <Type Name="NSUrlSessionDownloadTask" Kind="Class" />
      <Type Name="NSUrlSessionDownloadTaskRequest" Kind="Class" />
      <Type Name="NSUrlSessionMultipathServiceType" Kind="Enumeration" />
      <Type Name="NSUrlSessionPendingTasks" Kind="Delegate" />
      <Type Name="NSUrlSessionPendingTasks2" Kind="Delegate" />
      <Type Name="NSUrlSessionResponse" Kind="Delegate" />
      <Type Name="NSUrlSessionResponseDisposition" Kind="Enumeration" />
      <Type Name="NSUrlSessionStreamDataRead" Kind="Class" />
      <Type Name="NSUrlSessionStreamDelegate" Kind="Class" />
      <Type Name="NSUrlSessionStreamDelegate_Extensions" Kind="Class" />
      <Type Name="NSUrlSessionStreamTask" Kind="Class" />
      <Type Name="NSUrlSessionTask" Kind="Class" />
      <Type Name="NSUrlSessionTaskDelegate" Kind="Class" />
      <Type Name="NSUrlSessionTaskDelegate_Extensions" Kind="Class" />
      <Type Name="NSUrlSessionTaskMetrics" Kind="Class" />
      <Type Name="NSUrlSessionTaskMetricsResourceFetchType" Kind="Enumeration" />
      <Type Name="NSUrlSessionTaskPriority" Kind="Class" />
      <Type Name="NSUrlSessionTaskState" Kind="Enumeration" />
      <Type Name="NSUrlSessionTaskTransactionMetrics" Kind="Class" />
      <Type Name="NSUrlSessionUploadTask" Kind="Class" />
      <Type Name="NSUrlUtilities_NSCharacterSet" Kind="Class" />
      <Type Name="NSUrlUtilities_NSString" Kind="Class" />
      <Type Name="NSUserActivity" Kind="Class" />
      <Type Name="NSUserActivityContinuation" Kind="Class" />
      <Type Name="NSUserActivityDelegate" Kind="Class" />
      <Type Name="NSUserActivityDelegate_Extensions" Kind="Class" />
      <Type Name="NSUserActivityType" Kind="Class" />
      <Type Name="NSUserDefaults" Kind="Class" />
      <Type Name="NSUserDefaults+Notifications" Kind="Class" />
      <Type Name="NSUserDefaultsType" Kind="Enumeration" />
      <Type Name="NSUuid" Kind="Class" />
      <Type Name="NSValue" Kind="Class" />
      <Type Name="NSValueTransformer" Kind="Class" />
      <Type Name="NSValueTransformer+Notifications" Kind="Class" />
      <Type Name="NSVolumeEnumerationOptions" Kind="Enumeration" />
      <Type Name="NSWritingDirection" Kind="Enumeration" />
      <Type Name="NSXpcListenerEndpoint" Kind="Class" />
      <Type Name="NSZone" Kind="Class" />
      <Type Name="OutletAttribute" Kind="Class" />
      <Type Name="PreserveAttribute" Kind="Class" />
      <Type Name="ProtocolAttribute" Kind="Class" />
      <Type Name="ProtocolMemberAttribute" Kind="Class" />
      <Type Name="RegisterAttribute" Kind="Class" />
      <Type Name="RegisterDataRepresentationLoadHandler" Kind="Delegate" />
      <Type Name="RegisterFileRepresentationCompletionHandler" Kind="Delegate" />
      <Type Name="RegisterFileRepresentationLoadHandler" Kind="Delegate" />
      <Type Name="RegisterObjectRepresentationCompletionHandler" Kind="Delegate" />
      <Type Name="RegisterObjectRepresentationLoadHandler" Kind="Delegate" />
      <Type Name="You_Should_Not_Call_base_In_This_Method" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.GameController">
      <Type Name="GCController" Kind="Class" />
      <Type Name="GCController+Notifications" Kind="Class" />
      <Type Name="GCControllerAxisInput" Kind="Class" />
      <Type Name="GCControllerAxisValueChangedHandler" Kind="Delegate" />
      <Type Name="GCControllerButtonInput" Kind="Class" />
      <Type Name="GCControllerButtonValueChanged" Kind="Delegate" />
      <Type Name="GCControllerDirectionPad" Kind="Class" />
      <Type Name="GCControllerDirectionPadValueChangedHandler" Kind="Delegate" />
      <Type Name="GCControllerElement" Kind="Class" />
      <Type Name="GCControllerPlayerIndex" Kind="Enumeration" />
      <Type Name="GCEventViewController" Kind="Class" />
      <Type Name="GCExtendedGamepad" Kind="Class" />
      <Type Name="GCExtendedGamepadSnapshot" Kind="Class" />
      <Type Name="GCExtendedGamepadSnapShotDataV100" Kind="Structure" />
      <Type Name="GCExtendedGamepadValueChangedHandler" Kind="Delegate" />
      <Type Name="GCGamepad" Kind="Class" />
      <Type Name="GCGamepadSnapshot" Kind="Class" />
      <Type Name="GCGamepadSnapShotDataV100" Kind="Structure" />
      <Type Name="GCGamepadValueChangedHandler" Kind="Delegate" />
      <Type Name="GCMicroGamepad" Kind="Class" />
      <Type Name="GCMicroGamepadSnapshot" Kind="Class" />
      <Type Name="GCMicroGamepadSnapShotDataV100" Kind="Structure" />
      <Type Name="GCMicroGamepadValueChangedHandler" Kind="Delegate" />
      <Type Name="GCMotion" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.GameKit">
      <Type Name="GKAchievement" Kind="Class" />
      <Type Name="GKAchievementChallenge" Kind="Class" />
      <Type Name="GKAchievementDescription" Kind="Class" />
      <Type Name="GKAchievementDescriptionHandler" Kind="Delegate" />
      <Type Name="GKAchievementViewController" Kind="Class" />
      <Type Name="GKAchievementViewController+GKAchievementViewControllerAppearance" Kind="Class" />
      <Type Name="GKAchievementViewControllerDelegate" Kind="Class" />
      <Type Name="GKBasePlayer" Kind="Class" />
      <Type Name="GKCategoryHandler" Kind="Delegate" />
      <Type Name="GKCategoryResult" Kind="Class" />
      <Type Name="GKChallenge" Kind="Class" />
      <Type Name="GKChallengeComposeHandler" Kind="Delegate" />
      <Type Name="GKChallengeComposeResult" Kind="Class" />
      <Type Name="GKChallengeEventHandler" Kind="Class" />
      <Type Name="GKChallengeEventHandlerDelegate" Kind="Class" />
      <Type Name="GKChallengeEventHandlerDelegate_Extensions" Kind="Class" />
      <Type Name="GKChallengeListener" Kind="Class" />
      <Type Name="GKChallengeListener_Extensions" Kind="Class" />
      <Type Name="GKChallengePredicate" Kind="Delegate" />
      <Type Name="GKChallengeState" Kind="Enumeration" />
      <Type Name="GKCloudPlayer" Kind="Class" />
      <Type Name="GKCompletionHandler" Kind="Delegate" />
      <Type Name="GKConnectionState" Kind="Enumeration" />
      <Type Name="GKDataEventArgs" Kind="Class" />
      <Type Name="GKDataReceivedEventArgs" Kind="Class" />
      <Type Name="GKDataReceivedForRecipientEventArgs" Kind="Class" />
      <Type Name="GKError" Kind="Enumeration" />
      <Type Name="GKErrorEventArgs" Kind="Class" />
      <Type Name="GKErrorExtensions" Kind="Class" />
      <Type Name="GKFriendRequestComposeViewController" Kind="Class" />
      <Type Name="GKFriendRequestComposeViewController+GKFriendRequestComposeViewControllerAppearance" Kind="Class" />
      <Type Name="GKFriendRequestComposeViewControllerDelegate" Kind="Class" />
      <Type Name="GKFriendsHandler" Kind="Delegate" />
      <Type Name="GKGameCenterControllerDelegate" Kind="Class" />
      <Type Name="GKGameCenterViewController" Kind="Class" />
      <Type Name="GKGameCenterViewControllerState" Kind="Enumeration" />
      <Type Name="GKGameSession" Kind="Class" />
      <Type Name="GKGameSessionErrorCode" Kind="Enumeration" />
      <Type Name="GKGameSessionErrorCodeExtensions" Kind="Class" />
      <Type Name="GKGameSessionEventListener_Extensions" Kind="Class" />
      <Type Name="GKIdentityVerificationSignatureHandler" Kind="Delegate" />
      <Type Name="GKIdentityVerificationSignatureResult" Kind="Class" />
      <Type Name="GKImageLoadedHandler" Kind="Delegate" />
      <Type Name="GKInvite" Kind="Class" />
      <Type Name="GKInviteeResponse" Kind="Enumeration" />
      <Type Name="GKInviteEventListener" Kind="Class" />
      <Type Name="GKInviteEventListener_Extensions" Kind="Class" />
      <Type Name="GKInviteHandler" Kind="Delegate" />
      <Type Name="GKInviteRecipientResponse" Kind="Enumeration" />
      <Type Name="GKLeaderboard" Kind="Class" />
      <Type Name="GKLeaderboardPlayerScope" Kind="Enumeration" />
      <Type Name="GKLeaderboardSet" Kind="Class" />
      <Type Name="GKLeaderboardSetsHandler" Kind="Delegate" />
      <Type Name="GKLeaderboardsHandler" Kind="Delegate" />
      <Type Name="GKLeaderboardTimeScope" Kind="Enumeration" />
      <Type Name="GKLeaderboardViewController" Kind="Class" />
      <Type Name="GKLeaderboardViewController+GKLeaderboardViewControllerAppearance" Kind="Class" />
      <Type Name="GKLeaderboardViewControllerDelegate" Kind="Class" />
      <Type Name="GKLocalPlayer" Kind="Class" />
      <Type Name="GKLocalPlayer+Notifications" Kind="Class" />
      <Type Name="GKLocalPlayerListener" Kind="Class" />
      <Type Name="GKMatch" Kind="Class" />
      <Type Name="GKMatchConnectionChangedEventArgs" Kind="Class" />
      <Type Name="GKMatchDelegate" Kind="Class" />
      <Type Name="GKMatchDelegate_Extensions" Kind="Class" />
      <Type Name="GKMatchEventArgs" Kind="Class" />
      <Type Name="GKMatchmaker" Kind="Class" />
      <Type Name="GKMatchmakerViewController" Kind="Class" />
      <Type Name="GKMatchmakerViewControllerDelegate" Kind="Class" />
      <Type Name="GKMatchmakerViewControllerDelegate_Extensions" Kind="Class" />
      <Type Name="GKMatchmakingPlayerEventArgs" Kind="Class" />
      <Type Name="GKMatchmakingPlayersEventArgs" Kind="Class" />
      <Type Name="GKMatchReceivedDataFromRemotePlayerEventArgs" Kind="Class" />
      <Type Name="GKMatchReinvitation" Kind="Delegate" />
      <Type Name="GKMatchReinvitationForDisconnectedPlayer" Kind="Delegate" />
      <Type Name="GKMatchRequest" Kind="Class" />
      <Type Name="GKMatchSendDataMode" Kind="Enumeration" />
      <Type Name="GKMatchType" Kind="Enumeration" />
      <Type Name="GKNotificationBanner" Kind="Class" />
      <Type Name="GKNotificationMatch" Kind="Delegate" />
      <Type Name="GKPeerChangedStateEventArgs" Kind="Class" />
      <Type Name="GKPeerConnectionEventArgs" Kind="Class" />
      <Type Name="GKPeerConnectionState" Kind="Enumeration" />
      <Type Name="GKPeerPickerConnectionType" Kind="Enumeration" />
      <Type Name="GKPeerPickerController" Kind="Class" />
      <Type Name="GKPeerPickerControllerDelegate" Kind="Class" />
      <Type Name="GKPeerPickerControllerDelegate_Extensions" Kind="Class" />
      <Type Name="GKPhotoSize" Kind="Enumeration" />
      <Type Name="GKPlayer" Kind="Class" />
      <Type Name="GKPlayer+Notifications" Kind="Class" />
      <Type Name="GKPlayerConnectionState" Kind="Enumeration" />
      <Type Name="GKPlayerEventArgs" Kind="Class" />
      <Type Name="GKPlayerPhotoLoaded" Kind="Delegate" />
      <Type Name="GKPlayersEventArgs" Kind="Class" />
      <Type Name="GKPlayersHandler" Kind="Delegate" />
      <Type Name="GKPlayerStateUpdateHandler" Kind="Delegate" />
      <Type Name="GKQueryHandler" Kind="Delegate" />
      <Type Name="GKSavedGame" Kind="Class" />
      <Type Name="GKSavedGameListener" Kind="Class" />
      <Type Name="GKSavedGameListener_Extensions" Kind="Class" />
      <Type Name="GKScore" Kind="Class" />
      <Type Name="GKScoreChallenge" Kind="Class" />
      <Type Name="GKScoresLoadedHandler" Kind="Delegate" />
      <Type Name="GKSendDataMode" Kind="Enumeration" />
      <Type Name="GKSession" Kind="Class" />
      <Type Name="GKSessionDelegate" Kind="Class" />
      <Type Name="GKSessionDelegate_Extensions" Kind="Class" />
      <Type Name="GKSessionMode" Kind="Enumeration" />
      <Type Name="GKStateEventArgs" Kind="Class" />
      <Type Name="GKTransportType" Kind="Enumeration" />
      <Type Name="GKTurnBasedEventHandler" Kind="Class" />
      <Type Name="GKTurnBasedEventHandlerDelegate" Kind="Class" />
      <Type Name="GKTurnBasedEventHandlerDelegate_Extensions" Kind="Class" />
      <Type Name="GKTurnBasedEventListener" Kind="Class" />
      <Type Name="GKTurnBasedEventListener_Extensions" Kind="Class" />
      <Type Name="GKTurnBasedExchange" Kind="Class" />
      <Type Name="GKTurnBasedExchangeReply" Kind="Class" />
      <Type Name="GKTurnBasedExchangeStatus" Kind="Enumeration" />
      <Type Name="GKTurnBasedMatch" Kind="Class" />
      <Type Name="GKTurnBasedMatchData" Kind="Delegate" />
      <Type Name="GKTurnBasedMatchesRequest" Kind="Delegate" />
      <Type Name="GKTurnBasedMatchmakerViewController" Kind="Class" />
      <Type Name="GKTurnBasedMatchmakerViewController+GKTurnBasedMatchmakerViewControllerAppearance" Kind="Class" />
      <Type Name="GKTurnBasedMatchmakerViewControllerDelegate" Kind="Class" />
      <Type Name="GKTurnBasedMatchOutcome" Kind="Enumeration" />
      <Type Name="GKTurnBasedMatchRequest" Kind="Delegate" />
      <Type Name="GKTurnBasedMatchStatus" Kind="Enumeration" />
      <Type Name="GKTurnBasedParticipant" Kind="Class" />
      <Type Name="GKTurnBasedParticipantStatus" Kind="Enumeration" />
      <Type Name="GKVoiceChat" Kind="Class" />
      <Type Name="GKVoiceChatClient" Kind="Class" />
      <Type Name="GKVoiceChatClient_Extensions" Kind="Class" />
      <Type Name="GKVoiceChatPlayerState" Kind="Enumeration" />
      <Type Name="GKVoiceChatService" Kind="Class" />
      <Type Name="GKVoiceChatServiceError" Kind="Enumeration" />
      <Type Name="GKVoiceChatServiceErrorExtensions" Kind="Class" />
      <Type Name="IGKAchievementViewControllerDelegate" Kind="Interface" />
      <Type Name="IGKChallengeEventHandlerDelegate" Kind="Interface" />
      <Type Name="IGKChallengeListener" Kind="Interface" />
      <Type Name="IGKFriendRequestComposeViewControllerDelegate" Kind="Interface" />
      <Type Name="IGKGameCenterControllerDelegate" Kind="Interface" />
      <Type Name="IGKGameSessionEventListener" Kind="Interface" />
      <Type Name="IGKInviteEventListener" Kind="Interface" />
      <Type Name="IGKLeaderboardViewControllerDelegate" Kind="Interface" />
      <Type Name="IGKLocalPlayerListener" Kind="Interface" />
      <Type Name="IGKMatchDelegate" Kind="Interface" />
      <Type Name="IGKMatchmakerViewControllerDelegate" Kind="Interface" />
      <Type Name="IGKPeerPickerControllerDelegate" Kind="Interface" />
      <Type Name="IGKSavedGameListener" Kind="Interface" />
      <Type Name="IGKSessionDelegate" Kind="Interface" />
      <Type Name="IGKTurnBasedEventHandlerDelegate" Kind="Interface" />
      <Type Name="IGKTurnBasedEventListener" Kind="Interface" />
      <Type Name="IGKTurnBasedMatchmakerViewControllerDelegate" Kind="Interface" />
      <Type Name="IGKVoiceChatClient" Kind="Interface" />
    </Namespace>
    <Namespace Name="MonoTouch.GameplayKit">
      <Type Name="GKAgent" Kind="Class" />
      <Type Name="GKAgent2D" Kind="Class" />
      <Type Name="GKAgent3D" Kind="Class" />
      <Type Name="GKAgentDelegate" Kind="Class" />
      <Type Name="GKAgentDelegate_Extensions" Kind="Class" />
      <Type Name="GKARC4RandomSource" Kind="Class" />
      <Type Name="GKBehavior" Kind="Class" />
      <Type Name="GKBillowNoiseSource" Kind="Class" />
      <Type Name="GKBox" Kind="Structure" />
      <Type Name="GKCheckerboardNoiseSource" Kind="Class" />
      <Type Name="GKCircleObstacle" Kind="Class" />
      <Type Name="GKCoherentNoiseSource" Kind="Class" />
      <Type Name="GKComponent" Kind="Class" />
      <Type Name="GKComponentSystem`1" DisplayName="GKComponentSystem&lt;TComponent&gt;" Kind="Class" />
      <Type Name="GKCompositeBehavior" Kind="Class" />
      <Type Name="GKConstantNoiseSource" Kind="Class" />
      <Type Name="GKCylindersNoiseSource" Kind="Class" />
      <Type Name="GKDecisionNode" Kind="Class" />
      <Type Name="GKDecisionTree" Kind="Class" />
      <Type Name="GKEntity" Kind="Class" />
      <Type Name="GKGameModel" Kind="Class" />
      <Type Name="GKGameModel_Extensions" Kind="Class" />
      <Type Name="GKGameModelPlayer_Extensions" Kind="Class" />
      <Type Name="GKGaussianDistribution" Kind="Class" />
      <Type Name="GKGoal" Kind="Class" />
      <Type Name="GKGraph" Kind="Class" />
      <Type Name="GKGraphNode" Kind="Class" />
      <Type Name="GKGraphNode2D" Kind="Class" />
      <Type Name="GKGraphNode3D" Kind="Class" />
      <Type Name="GKGridGraph" Kind="Class" />
      <Type Name="GKGridGraphNode" Kind="Class" />
      <Type Name="GKHybridStrategist" Kind="Class" />
      <Type Name="GKLinearCongruentialRandomSource" Kind="Class" />
      <Type Name="GKMersenneTwisterRandomSource" Kind="Class" />
      <Type Name="GKMeshGraph`1" DisplayName="GKMeshGraph&lt;NodeType&gt;" Kind="Class" />
      <Type Name="GKMeshGraphTriangulationMode" Kind="Enumeration" />
      <Type Name="GKMinMaxStrategist" Kind="Class" />
      <Type Name="GKMonteCarloStrategist" Kind="Class" />
      <Type Name="GKNoise" Kind="Class" />
      <Type Name="GKNoiseMap" Kind="Class" />
      <Type Name="GKNoiseSource" Kind="Class" />
      <Type Name="GKNSPredicateRule" Kind="Class" />
      <Type Name="GKObstacle" Kind="Class" />
      <Type Name="GKObstacleGraph" Kind="Class" />
      <Type Name="GKObstacleGraph`1" DisplayName="GKObstacleGraph&lt;NodeType&gt;" Kind="Class" />
      <Type Name="GKOctree`1" DisplayName="GKOctree&lt;ElementType&gt;" Kind="Class" />
      <Type Name="GKOctreeNode" Kind="Class" />
      <Type Name="GKPath" Kind="Class" />
      <Type Name="GKPerlinNoiseSource" Kind="Class" />
      <Type Name="GKPolygonObstacle" Kind="Class" />
      <Type Name="GKQuad" Kind="Structure" />
      <Type Name="GKQuadTree" Kind="Class" />
      <Type Name="GKQuadTreeNode" Kind="Class" />
      <Type Name="GKRandomDistribution" Kind="Class" />
      <Type Name="GKRandomSource" Kind="Class" />
      <Type Name="GKRidgedNoiseSource" Kind="Class" />
      <Type Name="GKRTree`1" DisplayName="GKRTree&lt;ElementType&gt;" Kind="Class" />
      <Type Name="GKRTreeSplitStrategy" Kind="Enumeration" />
      <Type Name="GKRule" Kind="Class" />
      <Type Name="GKRuleSystem" Kind="Class" />
      <Type Name="GKScene" Kind="Class" />
      <Type Name="GKShuffledDistribution" Kind="Class" />
      <Type Name="GKSKNodeComponent" Kind="Class" />
      <Type Name="GKSphereObstacle" Kind="Class" />
      <Type Name="GKSpheresNoiseSource" Kind="Class" />
      <Type Name="GKState" Kind="Class" />
      <Type Name="GKStateMachine" Kind="Class" />
      <Type Name="GKTriangle" Kind="Structure" />
      <Type Name="GKVoronoiNoiseSource" Kind="Class" />
      <Type Name="IGKAgentDelegate" Kind="Interface" />
      <Type Name="IGKGameModel" Kind="Interface" />
      <Type Name="IGKGameModelPlayer" Kind="Interface" />
      <Type Name="IGKGameModelUpdate" Kind="Interface" />
      <Type Name="IGKRandom" Kind="Interface" />
      <Type Name="IGKSceneRootNodeType" Kind="Interface" />
      <Type Name="IGKStrategist" Kind="Interface" />
      <Type Name="NSArray_GameplayKit" Kind="Class" />
      <Type Name="SKNode_GameplayKit" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.GLKit">
      <Type Name="GLKBaseEffect" Kind="Class" />
      <Type Name="GLKEffectProperty" Kind="Class" />
      <Type Name="GLKEffectPropertyFog" Kind="Class" />
      <Type Name="GLKEffectPropertyLight" Kind="Class" />
      <Type Name="GLKEffectPropertyMaterial" Kind="Class" />
      <Type Name="GLKEffectPropertyTexture" Kind="Class" />
      <Type Name="GLKEffectPropertyTransform" Kind="Class" />
      <Type Name="GLKFogMode" Kind="Enumeration" />
      <Type Name="GLKLightingType" Kind="Enumeration" />
      <Type Name="GLKMesh" Kind="Class" />
      <Type Name="GLKMeshBuffer" Kind="Class" />
      <Type Name="GLKMeshBufferAllocator" Kind="Class" />
      <Type Name="GLKModelError" Kind="Class" />
      <Type Name="GLKNamedEffect" Kind="Class" />
      <Type Name="GLKReflectionMapEffect" Kind="Class" />
      <Type Name="GLKSkyboxEffect" Kind="Class" />
      <Type Name="GLKSubmesh" Kind="Class" />
      <Type Name="GLKTextureEnvMode" Kind="Enumeration" />
      <Type Name="GLKTextureInfo" Kind="Class" />
      <Type Name="GLKTextureInfoAlphaState" Kind="Enumeration" />
      <Type Name="GLKTextureInfoOrigin" Kind="Enumeration" />
      <Type Name="GLKTextureLoader" Kind="Class" />
      <Type Name="GLKTextureLoaderCallback" Kind="Delegate" />
      <Type Name="GLKTextureLoaderError" Kind="Enumeration" />
      <Type Name="GLKTextureOperations" Kind="Class" />
      <Type Name="GLKTextureTarget" Kind="Enumeration" />
      <Type Name="GLKVertexAttrib" Kind="Enumeration" />
      <Type Name="GLKVertexAttributeParameters" Kind="Structure" />
      <Type Name="GLKView" Kind="Class" />
      <Type Name="GLKView+GLKViewAppearance" Kind="Class" />
      <Type Name="GLKViewController" Kind="Class" />
      <Type Name="GLKViewControllerDelegate" Kind="Class" />
      <Type Name="GLKViewControllerDelegate_Extensions" Kind="Class" />
      <Type Name="GLKViewDelegate" Kind="Class" />
      <Type Name="GLKViewDrawableColorFormat" Kind="Enumeration" />
      <Type Name="GLKViewDrawableDepthFormat" Kind="Enumeration" />
      <Type Name="GLKViewDrawableMultisample" Kind="Enumeration" />
      <Type Name="GLKViewDrawableStencilFormat" Kind="Enumeration" />
      <Type Name="GLKViewDrawEventArgs" Kind="Class" />
      <Type Name="IGLKNamedEffect" Kind="Interface" />
      <Type Name="IGLKViewControllerDelegate" Kind="Interface" />
      <Type Name="IGLKViewDelegate" Kind="Interface" />
    </Namespace>
    <Namespace Name="MonoTouch.HealthKit">
      <Type Name="HKActivitySummary" Kind="Class" />
      <Type Name="HKActivitySummaryQuery" Kind="Class" />
      <Type Name="HKActivitySummaryType" Kind="Class" />
      <Type Name="HKAnchoredObjectQuery" Kind="Class" />
      <Type Name="HKAnchoredObjectResultHandler" Kind="Delegate" />
      <Type Name="HKAnchoredObjectResultHandler2" Kind="Delegate" />
      <Type Name="HKAnchoredObjectUpdateHandler" Kind="Delegate" />
      <Type Name="HKAuthorizationStatus" Kind="Enumeration" />
      <Type Name="HKBiologicalSex" Kind="Enumeration" />
      <Type Name="HKBiologicalSexObject" Kind="Class" />
      <Type Name="HKBloodType" Kind="Enumeration" />
      <Type Name="HKBloodTypeObject" Kind="Class" />
      <Type Name="HKBodyTemperatureSensorLocation" Kind="Enumeration" />
      <Type Name="HKCategorySample" Kind="Class" />
      <Type Name="HKCategoryType" Kind="Class" />
      <Type Name="HKCategoryTypeIdentifier" Kind="Enumeration" />
      <Type Name="HKCategoryTypeIdentifierKey" Kind="Class" />
      <Type Name="HKCategoryValue" Kind="Enumeration" />
      <Type Name="HKCategoryValueAppleStandHour" Kind="Enumeration" />
      <Type Name="HKCategoryValueCervicalMucusQuality" Kind="Enumeration" />
      <Type Name="HKCategoryValueMenstrualFlow" Kind="Enumeration" />
      <Type Name="HKCategoryValueOvulationTestResult" Kind="Enumeration" />
      <Type Name="HKCategoryValueSleepAnalysis" Kind="Enumeration" />
      <Type Name="HKCdaDocument" Kind="Class" />
      <Type Name="HKCdaDocumentSample" Kind="Class" />
      <Type Name="HKCharacteristicType" Kind="Class" />
      <Type Name="HKCharacteristicTypeIdentifier" Kind="Enumeration" />
      <Type Name="HKCharacteristicTypeIdentifierKey" Kind="Class" />
      <Type Name="HKCorrelation" Kind="Class" />
      <Type Name="HKCorrelationQuery" Kind="Class" />
      <Type Name="HKCorrelationQueryResultHandler" Kind="Delegate" />
      <Type Name="HKCorrelationType" Kind="Class" />
      <Type Name="HKCorrelationTypeIdentifier" Kind="Enumeration" />
      <Type Name="HKCorrelationTypeKey" Kind="Class" />
      <Type Name="HKDeletedObject" Kind="Class" />
      <Type Name="HKDetailedCdaErrors" Kind="Class" />
      <Type Name="HKDevice" Kind="Class" />
      <Type Name="HKDevicePropertyKey" Kind="Class" />
      <Type Name="HKDocumentQuery" Kind="Class" />
      <Type Name="HKDocumentSample" Kind="Class" />
      <Type Name="HKDocumentType" Kind="Class" />
      <Type Name="HKDocumentTypeIdentifier" Kind="Enumeration" />
      <Type Name="HKDocumentTypeIdentifierExtensions" Kind="Class" />
      <Type Name="HKErrorCode" Kind="Enumeration" />
      <Type Name="HKErrorCodeExtensions" Kind="Class" />
      <Type Name="HKFitzpatrickSkinType" Kind="Enumeration" />
      <Type Name="HKFitzpatrickSkinTypeObject" Kind="Class" />
      <Type Name="HKHealthStore" Kind="Class" />
      <Type Name="HKHealthStore+Notifications" Kind="Class" />
      <Type Name="HKHeartRateSensorLocation" Kind="Enumeration" />
      <Type Name="HKMetadata" Kind="Class" />
      <Type Name="HKMetadataKey" Kind="Class" />
      <Type Name="HKMetricPrefix" Kind="Enumeration" />
      <Type Name="HKObject" Kind="Class" />
      <Type Name="HKObjectType" Kind="Class" />
      <Type Name="HKObserverQuery" Kind="Class" />
      <Type Name="HKObserverQueryUpdateHandler" Kind="Delegate" />
      <Type Name="HKPredicateKeyPath" Kind="Class" />
      <Type Name="HKQuantity" Kind="Class" />
      <Type Name="HKQuantityAggregationStyle" Kind="Enumeration" />
      <Type Name="HKQuantitySample" Kind="Class" />
      <Type Name="HKQuantityType" Kind="Class" />
      <Type Name="HKQuantityTypeIdentifier" Kind="Enumeration" />
      <Type Name="HKQuantityTypeIdentifierKey" Kind="Class" />
      <Type Name="HKQuery" Kind="Class" />
      <Type Name="HKQueryAnchor" Kind="Class" />
      <Type Name="HKQueryOptions" Kind="Enumeration" />
      <Type Name="HKSample" Kind="Class" />
      <Type Name="HKSampleQuery" Kind="Class" />
      <Type Name="HKSampleQueryResultsHandler" Kind="Delegate" />
      <Type Name="HKSampleType" Kind="Class" />
      <Type Name="HKSource" Kind="Class" />
      <Type Name="HKSourceQuery" Kind="Class" />
      <Type Name="HKSourceQueryCompletionHandler" Kind="Delegate" />
      <Type Name="HKSourceRevision" Kind="Class" />
      <Type Name="HKStatistics" Kind="Class" />
      <Type Name="HKStatisticsCollection" Kind="Class" />
      <Type Name="HKStatisticsCollectionEnumerator" Kind="Delegate" />
      <Type Name="HKStatisticsCollectionQuery" Kind="Class" />
      <Type Name="HKStatisticsCollectionQueryInitialResultsHandler" Kind="Delegate" />
      <Type Name="HKStatisticsCollectionQueryStatisticsUpdateHandler" Kind="Delegate" />
      <Type Name="HKStatisticsOptions" Kind="Enumeration" />
      <Type Name="HKStatisticsQuery" Kind="Class" />
      <Type Name="HKStatisticsQueryHandler" Kind="Delegate" />
      <Type Name="HKStoreSampleAddedCallback" Kind="Delegate" />
      <Type Name="HKSwimmingStrokeStyle" Kind="Enumeration" />
      <Type Name="HKUnit" Kind="Class" />
      <Type Name="HKUpdateFrequency" Kind="Enumeration" />
      <Type Name="HKWeatherCondition" Kind="Enumeration" />
      <Type Name="HKWheelchairUse" Kind="Enumeration" />
      <Type Name="HKWheelchairUseObject" Kind="Class" />
      <Type Name="HKWorkout" Kind="Class" />
      <Type Name="HKWorkoutActivityType" Kind="Enumeration" />
      <Type Name="HKWorkoutConfiguration" Kind="Class" />
      <Type Name="HKWorkoutEvent" Kind="Class" />
      <Type Name="HKWorkoutEventType" Kind="Enumeration" />
      <Type Name="HKWorkoutSessionLocationType" Kind="Enumeration" />
      <Type Name="HKWorkoutSwimmingLocationType" Kind="Enumeration" />
      <Type Name="HKWorkoutType" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.HealthKitUI">
      <Type Name="HKActivityRingView" Kind="Class" />
      <Type Name="HKActivityRingView+HKActivityRingViewAppearance" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.HomeKit">
      <Type Name="HMAccessory" Kind="Class" />
      <Type Name="HMAccessoryBrowser" Kind="Class" />
      <Type Name="HMAccessoryBrowserDelegate" Kind="Class" />
      <Type Name="HMAccessoryBrowserDelegate_Extensions" Kind="Class" />
      <Type Name="HMAccessoryBrowserEventArgs" Kind="Class" />
      <Type Name="HMAccessoryCategory" Kind="Class" />
      <Type Name="HMAccessoryCategoryType" Kind="Enumeration" />
      <Type Name="HMAccessoryCategoryTypeExtensions" Kind="Class" />
      <Type Name="HMAccessoryDelegate" Kind="Class" />
      <Type Name="HMAccessoryDelegate_Extensions" Kind="Class" />
      <Type Name="HMAccessoryFirmwareVersionEventArgs" Kind="Class" />
      <Type Name="HMAccessoryProfile" Kind="Class" />
      <Type Name="HMAccessoryProfileEventArgs" Kind="Class" />
      <Type Name="HMAccessoryServiceUpdateCharacteristicEventArgs" Kind="Class" />
      <Type Name="HMAccessoryUpdateEventArgs" Kind="Class" />
      <Type Name="HMAction" Kind="Class" />
      <Type Name="HMActionSet" Kind="Class" />
      <Type Name="HMActionSetType" Kind="Enumeration" />
      <Type Name="HMCalendarEvent" Kind="Class" />
      <Type Name="HMCameraAudioControl" Kind="Class" />
      <Type Name="HMCameraAudioStreamSetting" Kind="Enumeration" />
      <Type Name="HMCameraControl" Kind="Class" />
      <Type Name="HMCameraProfile" Kind="Class" />
      <Type Name="HMCameraSettingsControl" Kind="Class" />
      <Type Name="HMCameraSnapshot" Kind="Class" />
      <Type Name="HMCameraSnapshotControl" Kind="Class" />
      <Type Name="HMCameraSnapshotControlDelegate" Kind="Class" />
      <Type Name="HMCameraSnapshotControlDelegate_Extensions" Kind="Class" />
      <Type Name="HMCameraSource" Kind="Class" />
      <Type Name="HMCameraStream" Kind="Class" />
      <Type Name="HMCameraStreamControl" Kind="Class" />
      <Type Name="HMCameraStreamControlDelegate" Kind="Class" />
      <Type Name="HMCameraStreamControlDelegate_Extensions" Kind="Class" />
      <Type Name="HMCameraStreamState" Kind="Enumeration" />
      <Type Name="HMCameraView" Kind="Class" />
      <Type Name="HMCameraView+HMCameraViewAppearance" Kind="Class" />
      <Type Name="HMCharacteristic" Kind="Class" />
      <Type Name="HMCharacteristicEvent" Kind="Class" />
      <Type Name="HMCharacteristicMetadata" Kind="Class" />
      <Type Name="HMCharacteristicMetadataFormat" Kind="Enumeration" />
      <Type Name="HMCharacteristicMetadataUnits" Kind="Enumeration" />
      <Type Name="HMCharacteristicProperties" Kind="Class" />
      <Type Name="HMCharacteristicThresholdRangeEvent" Kind="Class" />
      <Type Name="HMCharacteristicType" Kind="Enumeration" />
      <Type Name="HMCharacteristicTypeExtensions" Kind="Class" />
      <Type Name="HMCharacteristicValueActivationState" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueAirParticulate" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueAirQuality" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueBatteryStatus" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueCarbonDioxideDetectionStatus" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueCarbonMonoxideDetectionStatus" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueChargingState" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueContactState" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueCurrentAirPurifierState" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueCurrentFanState" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueCurrentHeaterCoolerState" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueCurrentHumidifierDehumidifierState" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueCurrentSecuritySystemState" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueCurrentSlatState" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueDoorState" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueFilterChange" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueHeatingCooling" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueInputEvent" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueJammedStatus" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueLabelNamespace" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueLeakStatus" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueLockMechanism" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueLockMechanismState" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueLockPhysicalControlsState" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueOccupancyStatus" Kind="Enumeration" />
      <Type Name="HMCharacteristicValuePositionState" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueRotationDirection" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueSecuritySystemAlarmType" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueSlatType" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueSmokeDetectionStatus" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueStatusFault" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueSwingMode" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueTamperedStatus" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueTargetAirPurifierState" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueTargetFanState" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueTargetHeaterCoolerState" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueTargetHumidifierDehumidifierState" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueTargetSecuritySystemState" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueTemperatureUnit" Kind="Enumeration" />
      <Type Name="HMCharacteristicWriteAction" Kind="Class" />
      <Type Name="HMDurationEvent" Kind="Class" />
      <Type Name="HMError" Kind="Enumeration" />
      <Type Name="HMErrors" Kind="Class" />
      <Type Name="HMEvent" Kind="Class" />
      <Type Name="HMEventTrigger" Kind="Class" />
      <Type Name="HMEventTriggerActivationState" Kind="Enumeration" />
      <Type Name="HMHome" Kind="Class" />
      <Type Name="HMHomeAccessControl" Kind="Class" />
      <Type Name="HMHomeAccessoryEventArgs" Kind="Class" />
      <Type Name="HMHomeActionSetEventArgs" Kind="Class" />
      <Type Name="HMHomeDelegate" Kind="Class" />
      <Type Name="HMHomeDelegate_Extensions" Kind="Class" />
      <Type Name="HMHomeErrorAccessoryEventArgs" Kind="Class" />
      <Type Name="HMHomeHubState" Kind="Enumeration" />
      <Type Name="HMHomeHubStateEventArgs" Kind="Class" />
      <Type Name="HMHomeManager" Kind="Class" />
      <Type Name="HMHomeManagerDelegate" Kind="Class" />
      <Type Name="HMHomeManagerDelegate_Extensions" Kind="Class" />
      <Type Name="HMHomeManagerEventArgs" Kind="Class" />
      <Type Name="HMHomeRoomAccessoryEventArgs" Kind="Class" />
      <Type Name="HMHomeRoomEventArgs" Kind="Class" />
      <Type Name="HMHomeRoomZoneEventArgs" Kind="Class" />
      <Type Name="HMHomeServiceGroupEventArgs" Kind="Class" />
      <Type Name="HMHomeServiceServiceGroupEventArgs" Kind="Class" />
      <Type Name="HMHomeTriggerEventArgs" Kind="Class" />
      <Type Name="HMHomeUserEventArgs" Kind="Class" />
      <Type Name="HMHomeZoneEventArgs" Kind="Class" />
      <Type Name="HMLocationEvent" Kind="Class" />
      <Type Name="HMMutableCalendarEvent" Kind="Class" />
      <Type Name="HMMutableCharacteristicEvent" Kind="Class" />
      <Type Name="HMMutableCharacteristicThresholdRangeEvent" Kind="Class" />
      <Type Name="HMMutableDurationEvent" Kind="Class" />
      <Type Name="HMMutableLocationEvent" Kind="Class" />
      <Type Name="HMMutablePresenceEvent" Kind="Class" />
      <Type Name="HMMutableSignificantTimeEvent" Kind="Class" />
      <Type Name="HMNumberRange" Kind="Class" />
      <Type Name="HMPresenceEvent" Kind="Class" />
      <Type Name="HMPresenceEventType" Kind="Enumeration" />
      <Type Name="HMPresenceEventUserType" Kind="Enumeration" />
      <Type Name="HMRoom" Kind="Class" />
      <Type Name="HMService" Kind="Class" />
      <Type Name="HMServiceGroup" Kind="Class" />
      <Type Name="HMServiceType" Kind="Enumeration" />
      <Type Name="HMServiceTypeExtensions" Kind="Class" />
      <Type Name="HMSignificantEvent" Kind="Enumeration" />
      <Type Name="HMSignificantEventExtensions" Kind="Class" />
      <Type Name="HMSignificantTimeEvent" Kind="Class" />
      <Type Name="HMTimeEvent" Kind="Class" />
      <Type Name="HMTimerTrigger" Kind="Class" />
      <Type Name="HMTrigger" Kind="Class" />
      <Type Name="HMUser" Kind="Class" />
      <Type Name="HMZone" Kind="Class" />
      <Type Name="IHMAccessoryBrowserDelegate" Kind="Interface" />
      <Type Name="IHMAccessoryDelegate" Kind="Interface" />
      <Type Name="IHMCameraSnapshotControlDelegate" Kind="Interface" />
      <Type Name="IHMCameraStreamControlDelegate" Kind="Interface" />
      <Type Name="IHMHomeDelegate" Kind="Interface" />
      <Type Name="IHMHomeManagerDelegate" Kind="Interface" />
    </Namespace>
    <Namespace Name="MonoTouch.iAd">
      <Type Name="AdAction" Kind="Delegate" />
      <Type Name="ADAdType" Kind="Enumeration" />
      <Type Name="ADBannerView" Kind="Class" />
      <Type Name="ADBannerView+ADBannerViewAppearance" Kind="Class" />
      <Type Name="ADBannerViewDelegate" Kind="Class" />
      <Type Name="ADBannerViewDelegate_Extensions" Kind="Class" />
      <Type Name="ADClient" Kind="Class" />
      <Type Name="ADClientConversionDetailsResult" Kind="Class" />
      <Type Name="ADClientError" Kind="Enumeration" />
      <Type Name="ADClientErrorExtensions" Kind="Class" />
      <Type Name="ADConversionDetails" Kind="Delegate" />
      <Type Name="ADError" Kind="Enumeration" />
      <Type Name="AdErrorEventArgs" Kind="Class" />
      <Type Name="ADErrorEventArgs" Kind="Class" />
      <Type Name="ADErrorExtensions" Kind="Class" />
      <Type Name="ADInterstitialAd" Kind="Class" />
      <Type Name="ADInterstitialAdDelegate" Kind="Class" />
      <Type Name="ADInterstitialAdDelegate_Extensions" Kind="Class" />
      <Type Name="ADInterstitialPresentationPolicy" Kind="Enumeration" />
      <Type Name="ADPredicate" Kind="Delegate" />
      <Type Name="AttributedToiAdCompletionHandler" Kind="Delegate" />
      <Type Name="IAdAdditions" Kind="Class" />
      <Type Name="IADBannerViewDelegate" Kind="Interface" />
      <Type Name="IADInterstitialAdDelegate" Kind="Interface" />
      <Type Name="IAdPreroll" Kind="Class" />
      <Type Name="iAdPreroll_AVPlayerViewController" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.IdentityLookup">
      <Type Name="IILMessageFilterQueryHandling" Kind="Interface" />
      <Type Name="ILMessageFilterAction" Kind="Enumeration" />
      <Type Name="ILMessageFilterError" Kind="Enumeration" />
      <Type Name="ILMessageFilterErrorExtensions" Kind="Class" />
      <Type Name="ILMessageFilterExtension" Kind="Class" />
      <Type Name="ILMessageFilterExtensionContext" Kind="Class" />
      <Type Name="ILMessageFilterQueryRequest" Kind="Class" />
      <Type Name="ILMessageFilterQueryResponse" Kind="Class" />
      <Type Name="ILNetworkResponse" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.ImageIO">
      <Type Name="CGCopyImageSourceOptions" Kind="Class" />
      <Type Name="CGImageAuxiliaryDataInfo" Kind="Class" />
      <Type Name="CGImageAuxiliaryDataType" Kind="Enumeration" />
      <Type Name="CGImageAuxiliaryDataTypeExtensions" Kind="Class" />
      <Type Name="CGImageDestination" Kind="Class" />
      <Type Name="CGImageDestinationOptions" Kind="Class" />
      <Type Name="CGImageDestinationOptionsKeys" Kind="Class" />
      <Type Name="CGImageMetadata" Kind="Class" />
      <Type Name="CGImageMetadataEnumerateOptions" Kind="Class" />
      <Type Name="CGImageMetadataErrors" Kind="Enumeration" />
      <Type Name="CGImageMetadataErrorsExtensions" Kind="Class" />
      <Type Name="CGImageMetadataTag" Kind="Class" />
      <Type Name="CGImageMetadataTagBlock" Kind="Delegate" />
      <Type Name="CGImageMetadataTagNamespaces" Kind="Class" />
      <Type Name="CGImageMetadataTagPrefixes" Kind="Class" />
      <Type Name="CGImageMetadataType" Kind="Enumeration" />
      <Type Name="CGImageOptions" Kind="Class" />
      <Type Name="CGImageProperties" Kind="Class" />
      <Type Name="CGImagePropertyOrientation" Kind="Enumeration" />
      <Type Name="CGImagePropertyPngFilters" Kind="Enumeration" />
      <Type Name="CGImageSource" Kind="Class" />
      <Type Name="CGImageSourceStatus" Kind="Enumeration" />
      <Type Name="CGImageThumbnailOptions" Kind="Class" />
      <Type Name="CGMutableImageMetadata" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.Intents">
      <Type Name="IINActivateCarSignalIntentHandling" Kind="Interface" />
      <Type Name="IINAddTasksIntentHandling" Kind="Interface" />
      <Type Name="IINAppendToNoteIntentHandling" Kind="Interface" />
      <Type Name="IINBookRestaurantReservationIntentHandling" Kind="Interface" />
      <Type Name="IINCallsDomainHandling" Kind="Interface" />
      <Type Name="IINCancelRideIntentHandling" Kind="Interface" />
      <Type Name="IINCancelWorkoutIntentHandling" Kind="Interface" />
      <Type Name="IINCarCommandsDomainHandling" Kind="Interface" />
      <Type Name="IINCarPlayDomainHandling" Kind="Interface" />
      <Type Name="IINCreateNoteIntentHandling" Kind="Interface" />
      <Type Name="IINCreateTaskListIntentHandling" Kind="Interface" />
      <Type Name="IINEndWorkoutIntentHandling" Kind="Interface" />
      <Type Name="IINGetAvailableRestaurantReservationBookingDefaultsIntentHandling" Kind="Interface" />
      <Type Name="IINGetAvailableRestaurantReservationBookingsIntentHandling" Kind="Interface" />
      <Type Name="IINGetCarLockStatusIntentHandling" Kind="Interface" />
      <Type Name="IINGetCarPowerLevelStatusIntentHandling" Kind="Interface" />
      <Type Name="IINGetRestaurantGuestIntentHandling" Kind="Interface" />
      <Type Name="IINGetRideStatusIntentHandling" Kind="Interface" />
      <Type Name="IINGetRideStatusIntentResponseObserver" Kind="Interface" />
      <Type Name="IINGetUserCurrentRestaurantReservationBookingsIntentHandling" Kind="Interface" />
      <Type Name="IINGetVisualCodeIntentHandling" Kind="Interface" />
      <Type Name="IINIntentHandlerProviding" Kind="Interface" />
      <Type Name="IINListRideOptionsIntentHandling" Kind="Interface" />
      <Type Name="IINMessagesDomainHandling" Kind="Interface" />
      <Type Name="IINNotebookDomainHandling" Kind="Interface" />
      <Type Name="IINPauseWorkoutIntentHandling" Kind="Interface" />
      <Type Name="IINPayBillIntentHandling" Kind="Interface" />
      <Type Name="IINPaymentsDomainHandling" Kind="Interface" />
      <Type Name="IINPhotosDomainHandling" Kind="Interface" />
      <Type Name="IINRadioDomainHandling" Kind="Interface" />
      <Type Name="IINRequestPaymentIntentHandling" Kind="Interface" />
      <Type Name="IINRequestRideIntentHandling" Kind="Interface" />
      <Type Name="IINResumeWorkoutIntentHandling" Kind="Interface" />
      <Type Name="IINRidesharingDomainHandling" Kind="Interface" />
      <Type Name="IINSaveProfileInCarIntentHandling" Kind="Interface" />
      <Type Name="IINSearchCallHistoryIntentHandling" Kind="Interface" />
      <Type Name="IINSearchForAccountsIntentHandling" Kind="Interface" />
      <Type Name="IINSearchForBillsIntentHandling" Kind="Interface" />
      <Type Name="IINSearchForMessagesIntentHandling" Kind="Interface" />
      <Type Name="IINSearchForNotebookItemsIntentHandling" Kind="Interface" />
      <Type Name="IINSearchForPhotosIntentHandling" Kind="Interface" />
      <Type Name="IINSendMessageIntentHandling" Kind="Interface" />
      <Type Name="IINSendPaymentIntentHandling" Kind="Interface" />
      <Type Name="IINSendRideFeedbackIntentHandling" Kind="Interface" />
      <Type Name="IINSetAudioSourceInCarIntentHandling" Kind="Interface" />
      <Type Name="IINSetCarLockStatusIntentHandling" Kind="Interface" />
      <Type Name="IINSetClimateSettingsInCarIntentHandling" Kind="Interface" />
      <Type Name="IINSetDefrosterSettingsInCarIntentHandling" Kind="Interface" />
      <Type Name="IINSetMessageAttributeIntentHandling" Kind="Interface" />
      <Type Name="IINSetProfileInCarIntentHandling" Kind="Interface" />
      <Type Name="IINSetRadioStationIntentHandling" Kind="Interface" />
      <Type Name="IINSetSeatSettingsInCarIntentHandling" Kind="Interface" />
      <Type Name="IINSetTaskAttributeIntentHandling" Kind="Interface" />
      <Type Name="IINSpeakable" Kind="Interface" />
      <Type Name="IINStartAudioCallIntentHandling" Kind="Interface" />
      <Type Name="IINStartPhotoPlaybackIntentHandling" Kind="Interface" />
      <Type Name="IINStartVideoCallIntentHandling" Kind="Interface" />
      <Type Name="IINStartWorkoutIntentHandling" Kind="Interface" />
      <Type Name="IINTransferMoneyIntentHandling" Kind="Interface" />
      <Type Name="IINVisualCodeDomainHandling" Kind="Interface" />
      <Type Name="IINWorkoutsDomainHandling" Kind="Interface" />
      <Type Name="INAccountType" Kind="Enumeration" />
      <Type Name="INAccountTypeResolutionResult" Kind="Class" />
      <Type Name="INActivateCarSignalIntent" Kind="Class" />
      <Type Name="INActivateCarSignalIntentHandling_Extensions" Kind="Class" />
      <Type Name="INActivateCarSignalIntentResponse" Kind="Class" />
      <Type Name="INActivateCarSignalIntentResponseCode" Kind="Enumeration" />
      <Type Name="INAddTasksIntent" Kind="Class" />
      <Type Name="INAddTasksIntentHandling_Extensions" Kind="Class" />
      <Type Name="INAddTasksIntentResponse" Kind="Class" />
      <Type Name="INAddTasksIntentResponseCode" Kind="Enumeration" />
      <Type Name="INAmountType" Kind="Enumeration" />
      <Type Name="INAppendToNoteIntent" Kind="Class" />
      <Type Name="INAppendToNoteIntentHandling_Extensions" Kind="Class" />
      <Type Name="INAppendToNoteIntentResponse" Kind="Class" />
      <Type Name="INAppendToNoteIntentResponseCode" Kind="Enumeration" />
      <Type Name="INBalanceAmount" Kind="Class" />
      <Type Name="INBalanceType" Kind="Enumeration" />
      <Type Name="INBalanceTypeResolutionResult" Kind="Class" />
      <Type Name="INBillDetails" Kind="Class" />
      <Type Name="INBillPayee" Kind="Class" />
      <Type Name="INBillPayeeResolutionResult" Kind="Class" />
      <Type Name="INBillType" Kind="Enumeration" />
      <Type Name="INBillTypeResolutionResult" Kind="Class" />
      <Type Name="INBookRestaurantReservationIntent" Kind="Class" />
      <Type Name="INBookRestaurantReservationIntentCode" Kind="Enumeration" />
      <Type Name="INBookRestaurantReservationIntentHandling_Extensions" Kind="Class" />
      <Type Name="INBookRestaurantReservationIntentResponse" Kind="Class" />
      <Type Name="INBooleanResolutionResult" Kind="Class" />
      <Type Name="INCallCapability" Kind="Enumeration" />
      <Type Name="INCallCapabilityOptions" Kind="Enumeration" />
      <Type Name="INCallDestinationType" Kind="Enumeration" />
      <Type Name="INCallDestinationTypeResolutionResult" Kind="Class" />
      <Type Name="INCallRecord" Kind="Class" />
      <Type Name="INCallRecordType" Kind="Enumeration" />
      <Type Name="INCallRecordTypeOptions" Kind="Enumeration" />
      <Type Name="INCallRecordTypeOptionsResolutionResult" Kind="Class" />
      <Type Name="INCallRecordTypeResolutionResult" Kind="Class" />
      <Type Name="INCancelRideIntent" Kind="Class" />
      <Type Name="INCancelRideIntentHandling_Extensions" Kind="Class" />
      <Type Name="INCancelRideIntentResponse" Kind="Class" />
      <Type Name="INCancelRideIntentResponseCode" Kind="Enumeration" />
      <Type Name="INCancelWorkoutIntent" Kind="Class" />
      <Type Name="INCancelWorkoutIntentHandling_Extensions" Kind="Class" />
      <Type Name="INCancelWorkoutIntentResponse" Kind="Class" />
      <Type Name="INCancelWorkoutIntentResponseCode" Kind="Enumeration" />
      <Type Name="INCarAirCirculationMode" Kind="Enumeration" />
      <Type Name="INCarAirCirculationModeResolutionResult" Kind="Class" />
      <Type Name="INCarAudioSource" Kind="Enumeration" />
      <Type Name="INCarAudioSourceResolutionResult" Kind="Class" />
      <Type Name="INCarDefroster" Kind="Enumeration" />
      <Type Name="INCarDefrosterResolutionResult" Kind="Class" />
      <Type Name="INCarSeat" Kind="Enumeration" />
      <Type Name="INCarSeatResolutionResult" Kind="Class" />
      <Type Name="INCarSignalOptions" Kind="Enumeration" />
      <Type Name="INCarSignalOptionsResolutionResult" Kind="Class" />
      <Type Name="INConditionalOperator" Kind="Enumeration" />
      <Type Name="INCreateNoteIntent" Kind="Class" />
      <Type Name="INCreateNoteIntentHandling_Extensions" Kind="Class" />
      <Type Name="INCreateNoteIntentResponse" Kind="Class" />
      <Type Name="INCreateNoteIntentResponseCode" Kind="Enumeration" />
      <Type Name="INCreateTaskListIntent" Kind="Class" />
      <Type Name="INCreateTaskListIntentHandling_Extensions" Kind="Class" />
      <Type Name="INCreateTaskListIntentResponse" Kind="Class" />
      <Type Name="INCreateTaskListIntentResponseCode" Kind="Enumeration" />
      <Type Name="INCurrencyAmount" Kind="Class" />
      <Type Name="INCurrencyAmountResolutionResult" Kind="Class" />
      <Type Name="INDateComponentsRange" Kind="Class" />
      <Type Name="INDateComponentsRangeResolutionResult" Kind="Class" />
      <Type Name="INDateComponentsResolutionResult" Kind="Class" />
      <Type Name="INDateSearchType" Kind="Enumeration" />
      <Type Name="INDateSearchTypeResolutionResult" Kind="Class" />
      <Type Name="INDoubleResolutionResult" Kind="Class" />
      <Type Name="INEndWorkoutIntent" Kind="Class" />
      <Type Name="INEndWorkoutIntentHandling_Extensions" Kind="Class" />
      <Type Name="INEndWorkoutIntentResponse" Kind="Class" />
      <Type Name="INEndWorkoutIntentResponseCode" Kind="Enumeration" />
      <Type Name="INExtension" Kind="Class" />
      <Type Name="INGetAvailableRestaurantReservationBookingDefaultsIntent" Kind="Class" />
      <Type Name="INGetAvailableRestaurantReservationBookingDefaultsIntentHandling_Extensions" Kind="Class" />
      <Type Name="INGetAvailableRestaurantReservationBookingDefaultsIntentResponse" Kind="Class" />
      <Type Name="INGetAvailableRestaurantReservationBookingDefaultsIntentResponseCode" Kind="Enumeration" />
      <Type Name="INGetAvailableRestaurantReservationBookingsIntent" Kind="Class" />
      <Type Name="INGetAvailableRestaurantReservationBookingsIntentCode" Kind="Enumeration" />
      <Type Name="INGetAvailableRestaurantReservationBookingsIntentHandling_Extensions" Kind="Class" />
      <Type Name="INGetAvailableRestaurantReservationBookingsIntentResponse" Kind="Class" />
      <Type Name="INGetCarLockStatusIntent" Kind="Class" />
      <Type Name="INGetCarLockStatusIntentHandling_Extensions" Kind="Class" />
      <Type Name="INGetCarLockStatusIntentResponse" Kind="Class" />
      <Type Name="INGetCarLockStatusIntentResponseCode" Kind="Enumeration" />
      <Type Name="INGetCarPowerLevelStatusIntent" Kind="Class" />
      <Type Name="INGetCarPowerLevelStatusIntentHandling_Extensions" Kind="Class" />
      <Type Name="INGetCarPowerLevelStatusIntentResponse" Kind="Class" />
      <Type Name="INGetCarPowerLevelStatusIntentResponseCode" Kind="Enumeration" />
      <Type Name="INGetRestaurantGuestIntent" Kind="Class" />
      <Type Name="INGetRestaurantGuestIntentHandling_Extensions" Kind="Class" />
      <Type Name="INGetRestaurantGuestIntentResponse" Kind="Class" />
      <Type Name="INGetRestaurantGuestIntentResponseCode" Kind="Enumeration" />
      <Type Name="INGetRideStatusIntent" Kind="Class" />
      <Type Name="INGetRideStatusIntentHandling_Extensions" Kind="Class" />
      <Type Name="INGetRideStatusIntentResponse" Kind="Class" />
      <Type Name="INGetRideStatusIntentResponseCode" Kind="Enumeration" />
      <Type Name="INGetUserCurrentRestaurantReservationBookingsIntent" Kind="Class" />
      <Type Name="INGetUserCurrentRestaurantReservationBookingsIntentHandling_Extensions" Kind="Class" />
      <Type Name="INGetUserCurrentRestaurantReservationBookingsIntentResponse" Kind="Class" />
      <Type Name="INGetUserCurrentRestaurantReservationBookingsIntentResponseCode" Kind="Enumeration" />
      <Type Name="INGetVisualCodeIntent" Kind="Class" />
      <Type Name="INGetVisualCodeIntentHandling_Extensions" Kind="Class" />
      <Type Name="INGetVisualCodeIntentResponse" Kind="Class" />
      <Type Name="INGetVisualCodeIntentResponseCode" Kind="Enumeration" />
      <Type Name="INImage" Kind="Class" />
      <Type Name="INImageNoteContent" Kind="Class" />
      <Type Name="INIntegerResolutionResult" Kind="Class" />
      <Type Name="INIntent" Kind="Class" />
      <Type Name="INIntentErrorCode" Kind="Enumeration" />
      <Type Name="INIntentErrorCodeExtensions" Kind="Class" />
      <Type Name="INIntentHandlingStatus" Kind="Enumeration" />
      <Type Name="INIntentIdentifier" Kind="Enumeration" />
      <Type Name="INIntentIdentifierExtensions" Kind="Class" />
      <Type Name="INIntentResolutionResult" Kind="Class" />
      <Type Name="INIntentResolutionResult`1" DisplayName="INIntentResolutionResult&lt;ObjectType&gt;" Kind="Class" />
      <Type Name="INIntentResponse" Kind="Class" />
      <Type Name="INInteraction" Kind="Class" />
      <Type Name="INInteractionDirection" Kind="Enumeration" />
      <Type Name="INListRideOptionsIntent" Kind="Class" />
      <Type Name="INListRideOptionsIntentHandling_Extensions" Kind="Class" />
      <Type Name="INListRideOptionsIntentResponse" Kind="Class" />
      <Type Name="INListRideOptionsIntentResponseCode" Kind="Enumeration" />
      <Type Name="INLocationSearchType" Kind="Enumeration" />
      <Type Name="INLocationSearchTypeResolutionResult" Kind="Class" />
      <Type Name="INMessage" Kind="Class" />
      <Type Name="INMessageAttribute" Kind="Enumeration" />
      <Type Name="INMessageAttributeOptions" Kind="Enumeration" />
      <Type Name="INMessageAttributeOptionsResolutionResult" Kind="Class" />
      <Type Name="INMessageAttributeResolutionResult" Kind="Class" />
      <Type Name="INMessageType" Kind="Enumeration" />
      <Type Name="INNote" Kind="Class" />
      <Type Name="INNotebookItemType" Kind="Enumeration" />
      <Type Name="INNotebookItemTypeResolutionResult" Kind="Class" />
      <Type Name="INNoteContent" Kind="Class" />
      <Type Name="INNoteContentResolutionResult" Kind="Class" />
      <Type Name="INNoteContentType" Kind="Enumeration" />
      <Type Name="INNoteContentTypeResolutionResult" Kind="Class" />
      <Type Name="INNoteResolutionResult" Kind="Class" />
      <Type Name="INParameter" Kind="Class" />
      <Type Name="INPauseWorkoutIntent" Kind="Class" />
      <Type Name="INPauseWorkoutIntentHandling_Extensions" Kind="Class" />
      <Type Name="INPauseWorkoutIntentResponse" Kind="Class" />
      <Type Name="INPauseWorkoutIntentResponseCode" Kind="Enumeration" />
      <Type Name="INPayBillIntent" Kind="Class" />
      <Type Name="INPayBillIntentHandling_Extensions" Kind="Class" />
      <Type Name="INPayBillIntentResponse" Kind="Class" />
      <Type Name="INPayBillIntentResponseCode" Kind="Enumeration" />
      <Type Name="INPaymentAccount" Kind="Class" />
      <Type Name="INPaymentAccountResolutionResult" Kind="Class" />
      <Type Name="INPaymentAmount" Kind="Class" />
      <Type Name="INPaymentAmountResolutionResult" Kind="Class" />
      <Type Name="INPaymentMethod" Kind="Class" />
      <Type Name="INPaymentMethodType" Kind="Enumeration" />
      <Type Name="INPaymentRecord" Kind="Class" />
      <Type Name="INPaymentStatus" Kind="Enumeration" />
      <Type Name="INPaymentStatusResolutionResult" Kind="Class" />
      <Type Name="INPerson" Kind="Class" />
      <Type Name="INPersonHandle" Kind="Class" />
      <Type Name="INPersonHandleLabel" Kind="Enumeration" />
      <Type Name="INPersonHandleLabelExtensions" Kind="Class" />
      <Type Name="INPersonHandleType" Kind="Enumeration" />
      <Type Name="INPersonRelationship" Kind="Enumeration" />
      <Type Name="INPersonRelationshipExtensions" Kind="Class" />
      <Type Name="INPersonResolutionResult" Kind="Class" />
      <Type Name="INPersonSuggestionType" Kind="Enumeration" />
      <Type Name="INPhotoAttributeOptions" Kind="Enumeration" />
      <Type Name="INPlacemarkResolutionResult" Kind="Class" />
      <Type Name="INPreferences" Kind="Class" />
      <Type Name="INPriceRange" Kind="Class" />
      <Type Name="INPriceRangeOption" Kind="Enumeration" />
      <Type Name="INRadioType" Kind="Enumeration" />
      <Type Name="INRadioTypeResolutionResult" Kind="Class" />
      <Type Name="INRecurrenceFrequency" Kind="Enumeration" />
      <Type Name="INRecurrenceRule" Kind="Class" />
      <Type Name="INRelativeReference" Kind="Enumeration" />
      <Type Name="INRelativeReferenceResolutionResult" Kind="Class" />
      <Type Name="INRelativeSetting" Kind="Enumeration" />
      <Type Name="INRelativeSettingResolutionResult" Kind="Class" />
      <Type Name="INRequestPaymentCurrencyAmountResolutionResult" Kind="Class" />
      <Type Name="INRequestPaymentCurrencyAmountUnsupportedReason" Kind="Enumeration" />
      <Type Name="INRequestPaymentIntent" Kind="Class" />
      <Type Name="INRequestPaymentIntentHandling_Extensions" Kind="Class" />
      <Type Name="INRequestPaymentIntentResponse" Kind="Class" />
      <Type Name="INRequestPaymentIntentResponseCode" Kind="Enumeration" />
      <Type Name="INRequestPaymentPayerResolutionResult" Kind="Class" />
      <Type Name="INRequestPaymentPayerUnsupportedReason" Kind="Enumeration" />
      <Type Name="INRequestRideIntent" Kind="Class" />
      <Type Name="INRequestRideIntentHandling_Extensions" Kind="Class" />
      <Type Name="INRequestRideIntentResponse" Kind="Class" />
      <Type Name="INRequestRideIntentResponseCode" Kind="Enumeration" />
      <Type Name="INRestaurant" Kind="Class" />
      <Type Name="INRestaurantGuest" Kind="Class" />
      <Type Name="INRestaurantGuestDisplayPreferences" Kind="Class" />
      <Type Name="INRestaurantGuestResolutionResult" Kind="Class" />
      <Type Name="INRestaurantOffer" Kind="Class" />
      <Type Name="INRestaurantReservationBooking" Kind="Class" />
      <Type Name="INRestaurantReservationUserBooking" Kind="Class" />
      <Type Name="INRestaurantReservationUserBookingStatus" Kind="Enumeration" />
      <Type Name="INRestaurantResolutionResult" Kind="Class" />
      <Type Name="INResumeWorkoutIntent" Kind="Class" />
      <Type Name="INResumeWorkoutIntentHandling_Extensions" Kind="Class" />
      <Type Name="INResumeWorkoutIntentResponse" Kind="Class" />
      <Type Name="INResumeWorkoutIntentResponseCode" Kind="Enumeration" />
      <Type Name="INRideCompletionStatus" Kind="Class" />
      <Type Name="INRideDriver" Kind="Class" />
      <Type Name="INRideFareLineItem" Kind="Class" />
      <Type Name="INRideFeedbackTypeOptions" Kind="Enumeration" />
      <Type Name="INRideOption" Kind="Class" />
      <Type Name="INRidePartySizeOption" Kind="Class" />
      <Type Name="INRidePhase" Kind="Enumeration" />
      <Type Name="INRideStatus" Kind="Class" />
      <Type Name="INRideVehicle" Kind="Class" />
      <Type Name="INSaveProfileInCarIntent" Kind="Class" />
      <Type Name="INSaveProfileInCarIntentHandling_Extensions" Kind="Class" />
      <Type Name="INSaveProfileInCarIntentResponse" Kind="Class" />
      <Type Name="INSaveProfileInCarIntentResponseCode" Kind="Enumeration" />
      <Type Name="INSearchCallHistoryIntent" Kind="Class" />
      <Type Name="INSearchCallHistoryIntentHandling_Extensions" Kind="Class" />
      <Type Name="INSearchCallHistoryIntentResponse" Kind="Class" />
      <Type Name="INSearchCallHistoryIntentResponseCode" Kind="Enumeration" />
      <Type Name="INSearchForAccountsIntent" Kind="Class" />
      <Type Name="INSearchForAccountsIntentHandling_Extensions" Kind="Class" />
      <Type Name="INSearchForAccountsIntentResponse" Kind="Class" />
      <Type Name="INSearchForAccountsIntentResponseCode" Kind="Enumeration" />
      <Type Name="INSearchForBillsIntent" Kind="Class" />
      <Type Name="INSearchForBillsIntentHandling_Extensions" Kind="Class" />
      <Type Name="INSearchForBillsIntentResponse" Kind="Class" />
      <Type Name="INSearchForBillsIntentResponseCode" Kind="Enumeration" />
      <Type Name="INSearchForMessagesIntent" Kind="Class" />
      <Type Name="INSearchForMessagesIntentHandling_Extensions" Kind="Class" />
      <Type Name="INSearchForMessagesIntentResponse" Kind="Class" />
      <Type Name="INSearchForMessagesIntentResponseCode" Kind="Enumeration" />
      <Type Name="INSearchForNotebookItemsIntent" Kind="Class" />
      <Type Name="INSearchForNotebookItemsIntentHandling_Extensions" Kind="Class" />
      <Type Name="INSearchForNotebookItemsIntentResponse" Kind="Class" />
      <Type Name="INSearchForNotebookItemsIntentResponseCode" Kind="Enumeration" />
      <Type Name="INSearchForPhotosIntent" Kind="Class" />
      <Type Name="INSearchForPhotosIntentHandling_Extensions" Kind="Class" />
      <Type Name="INSearchForPhotosIntentResponse" Kind="Class" />
      <Type Name="INSearchForPhotosIntentResponseCode" Kind="Enumeration" />
      <Type Name="INSendMessageIntent" Kind="Class" />
      <Type Name="INSendMessageIntentHandling_Extensions" Kind="Class" />
      <Type Name="INSendMessageIntentResponse" Kind="Class" />
      <Type Name="INSendMessageIntentResponseCode" Kind="Enumeration" />
      <Type Name="INSendMessageRecipientResolutionResult" Kind="Class" />
      <Type Name="INSendMessageRecipientUnsupportedReason" Kind="Enumeration" />
      <Type Name="INSendPaymentCurrencyAmountResolutionResult" Kind="Class" />
      <Type Name="INSendPaymentCurrencyAmountUnsupportedReason" Kind="Enumeration" />
      <Type Name="INSendPaymentIntent" Kind="Class" />
      <Type Name="INSendPaymentIntentHandling_Extensions" Kind="Class" />
      <Type Name="INSendPaymentIntentResponse" Kind="Class" />
      <Type Name="INSendPaymentIntentResponseCode" Kind="Enumeration" />
      <Type Name="INSendPaymentPayeeResolutionResult" Kind="Class" />
      <Type Name="INSendPaymentPayeeUnsupportedReason" Kind="Enumeration" />
      <Type Name="INSendRideFeedbackIntent" Kind="Class" />
      <Type Name="INSendRideFeedbackIntentHandling_Extensions" Kind="Class" />
      <Type Name="INSendRideFeedbackIntentResponse" Kind="Class" />
      <Type Name="INSendRideFeedbackIntentResponseCode" Kind="Enumeration" />
      <Type Name="INSetAudioSourceInCarIntent" Kind="Class" />
      <Type Name="INSetAudioSourceInCarIntentHandling_Extensions" Kind="Class" />
      <Type Name="INSetAudioSourceInCarIntentResponse" Kind="Class" />
      <Type Name="INSetAudioSourceInCarIntentResponseCode" Kind="Enumeration" />
      <Type Name="INSetCarLockStatusIntent" Kind="Class" />
      <Type Name="INSetCarLockStatusIntentHandling_Extensions" Kind="Class" />
      <Type Name="INSetCarLockStatusIntentResponse" Kind="Class" />
      <Type Name="INSetCarLockStatusIntentResponseCode" Kind="Enumeration" />
      <Type Name="INSetClimateSettingsInCarIntent" Kind="Class" />
      <Type Name="INSetClimateSettingsInCarIntentHandling_Extensions" Kind="Class" />
      <Type Name="INSetClimateSettingsInCarIntentResponse" Kind="Class" />
      <Type Name="INSetClimateSettingsInCarIntentResponseCode" Kind="Enumeration" />
      <Type Name="INSetDefrosterSettingsInCarIntent" Kind="Class" />
      <Type Name="INSetDefrosterSettingsInCarIntentHandling_Extensions" Kind="Class" />
      <Type Name="INSetDefrosterSettingsInCarIntentResponse" Kind="Class" />
      <Type Name="INSetDefrosterSettingsInCarIntentResponseCode" Kind="Enumeration" />
      <Type Name="INSetMessageAttributeIntent" Kind="Class" />
      <Type Name="INSetMessageAttributeIntentHandling_Extensions" Kind="Class" />
      <Type Name="INSetMessageAttributeIntentResponse" Kind="Class" />
      <Type Name="INSetMessageAttributeIntentResponseCode" Kind="Enumeration" />
      <Type Name="INSetProfileInCarIntent" Kind="Class" />
      <Type Name="INSetProfileInCarIntentHandling_Extensions" Kind="Class" />
      <Type Name="INSetProfileInCarIntentResponse" Kind="Class" />
      <Type Name="INSetProfileInCarIntentResponseCode" Kind="Enumeration" />
      <Type Name="INSetRadioStationIntent" Kind="Class" />
      <Type Name="INSetRadioStationIntentHandling_Extensions" Kind="Class" />
      <Type Name="INSetRadioStationIntentResponse" Kind="Class" />
      <Type Name="INSetRadioStationIntentResponseCode" Kind="Enumeration" />
      <Type Name="INSetSeatSettingsInCarIntent" Kind="Class" />
      <Type Name="INSetSeatSettingsInCarIntentHandling_Extensions" Kind="Class" />
      <Type Name="INSetSeatSettingsInCarIntentResponse" Kind="Class" />
      <Type Name="INSetSeatSettingsInCarIntentResponseCode" Kind="Enumeration" />
      <Type Name="INSetTaskAttributeIntent" Kind="Class" />
      <Type Name="INSetTaskAttributeIntentHandling_Extensions" Kind="Class" />
      <Type Name="INSetTaskAttributeIntentResponse" Kind="Class" />
      <Type Name="INSetTaskAttributeIntentResponseCode" Kind="Enumeration" />
      <Type Name="INSiriAuthorizationStatus" Kind="Enumeration" />
      <Type Name="INSortType" Kind="Enumeration" />
      <Type Name="INSpatialEvent" Kind="Enumeration" />
      <Type Name="INSpatialEventTrigger" Kind="Class" />
      <Type Name="INSpatialEventTriggerResolutionResult" Kind="Class" />
      <Type Name="INSpeakable_Extensions" Kind="Class" />
      <Type Name="INSpeakableString" Kind="Class" />
      <Type Name="INSpeakableStringResolutionResult" Kind="Class" />
      <Type Name="INStartAudioCallIntent" Kind="Class" />
      <Type Name="INStartAudioCallIntentHandling_Extensions" Kind="Class" />
      <Type Name="INStartAudioCallIntentResponse" Kind="Class" />
      <Type Name="INStartAudioCallIntentResponseCode" Kind="Enumeration" />
      <Type Name="INStartPhotoPlaybackIntent" Kind="Class" />
      <Type Name="INStartPhotoPlaybackIntentHandling_Extensions" Kind="Class" />
      <Type Name="INStartPhotoPlaybackIntentResponse" Kind="Class" />
      <Type Name="INStartPhotoPlaybackIntentResponseCode" Kind="Enumeration" />
      <Type Name="INStartVideoCallIntent" Kind="Class" />
      <Type Name="INStartVideoCallIntentHandling_Extensions" Kind="Class" />
      <Type Name="INStartVideoCallIntentResponse" Kind="Class" />
      <Type Name="INStartVideoCallIntentResponseCode" Kind="Enumeration" />
      <Type Name="INStartWorkoutIntent" Kind="Class" />
      <Type Name="INStartWorkoutIntentHandling_Extensions" Kind="Class" />
      <Type Name="INStartWorkoutIntentResponse" Kind="Class" />
      <Type Name="INStartWorkoutIntentResponseCode" Kind="Enumeration" />
      <Type Name="INStringResolutionResult" Kind="Class" />
      <Type Name="INTask" Kind="Class" />
      <Type Name="INTaskList" Kind="Class" />
      <Type Name="INTaskListResolutionResult" Kind="Class" />
      <Type Name="INTaskResolutionResult" Kind="Class" />
      <Type Name="INTaskStatus" Kind="Enumeration" />
      <Type Name="INTaskStatusResolutionResult" Kind="Class" />
      <Type Name="INTaskType" Kind="Enumeration" />
      <Type Name="INTemperatureResolutionResult" Kind="Class" />
      <Type Name="INTemporalEventTrigger" Kind="Class" />
      <Type Name="INTemporalEventTriggerResolutionResult" Kind="Class" />
      <Type Name="INTermsAndConditions" Kind="Class" />
      <Type Name="INTextNoteContent" Kind="Class" />
      <Type Name="INTransferMoneyIntent" Kind="Class" />
      <Type Name="INTransferMoneyIntentHandling_Extensions" Kind="Class" />
      <Type Name="INTransferMoneyIntentResponse" Kind="Class" />
      <Type Name="INTransferMoneyIntentResponseCode" Kind="Enumeration" />
      <Type Name="INVisualCodeType" Kind="Enumeration" />
      <Type Name="INVisualCodeTypeResolutionResult" Kind="Class" />
      <Type Name="INVocabulary" Kind="Class" />
      <Type Name="INVocabularyStringType" Kind="Enumeration" />
      <Type Name="INWorkoutGoalUnitType" Kind="Enumeration" />
      <Type Name="INWorkoutGoalUnitTypeResolutionResult" Kind="Class" />
      <Type Name="INWorkoutLocationType" Kind="Enumeration" />
      <Type Name="INWorkoutLocationTypeResolutionResult" Kind="Class" />
      <Type Name="INWorkoutNameIdentifier" Kind="Enumeration" />
      <Type Name="INWorkoutNameIdentifierExtensions" Kind="Class" />
      <Type Name="NSUserActivity_IntentsAdditions" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.IntentsUI">
      <Type Name="IINUIHostedViewControlling" Kind="Interface" />
      <Type Name="IINUIHostedViewSiriProviding" Kind="Interface" />
      <Type Name="INUIHostedViewContext" Kind="Enumeration" />
      <Type Name="INUIHostedViewControlling_Extensions" Kind="Class" />
      <Type Name="INUIHostedViewControllingConfigureViewHandler" Kind="Delegate" />
      <Type Name="INUIHostedViewSiriProviding_Extensions" Kind="Class" />
      <Type Name="INUIInteractiveBehavior" Kind="Enumeration" />
      <Type Name="NSExtensionContext_INUIHostedViewControlling" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.IOSurface">
      <Type Name="IOSurface" Kind="Class" />
      <Type Name="IOSurfaceLockOptions" Kind="Enumeration" />
      <Type Name="IOSurfaceMemoryMap" Kind="Enumeration" />
      <Type Name="IOSurfaceOptions" Kind="Class" />
      <Type Name="IOSurfacePurgeabilityState" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.JavaScriptCore">
      <Type Name="IJSExport" Kind="Interface" />
      <Type Name="JSClassAttributes" Kind="Enumeration" />
      <Type Name="JSContext" Kind="Class" />
      <Type Name="JSContextExceptionHandler" Kind="Delegate" />
      <Type Name="JSExport" Kind="Class" />
      <Type Name="JSManagedValue" Kind="Class" />
      <Type Name="JSPropertyAttributes" Kind="Enumeration" />
      <Type Name="JSPropertyDescriptorKeys" Kind="Class" />
      <Type Name="JSType" Kind="Enumeration" />
      <Type Name="JSValue" Kind="Class" />
      <Type Name="JSVirtualMachine" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.LocalAuthentication">
      <Type Name="LAAccessControlOperation" Kind="Enumeration" />
      <Type Name="LABiometryType" Kind="Enumeration" />
      <Type Name="LAContext" Kind="Class" />
      <Type Name="LAContextReplyHandler" Kind="Delegate" />
      <Type Name="LACredentialType" Kind="Enumeration" />
      <Type Name="LAPolicy" Kind="Enumeration" />
      <Type Name="LAStatus" Kind="Enumeration" />
      <Type Name="LAStatusExtensions" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.MapKit">
      <Type Name="IMKAnnotation" Kind="Interface" />
      <Type Name="IMKLocalSearchCompleterDelegate" Kind="Interface" />
      <Type Name="IMKMapViewDelegate" Kind="Interface" />
      <Type Name="IMKOverlay" Kind="Interface" />
      <Type Name="IMKReverseGeocoderDelegate" Kind="Interface" />
      <Type Name="MKAnnotation" Kind="Class" />
      <Type Name="MKAnnotation_Extensions" Kind="Class" />
      <Type Name="MKAnnotationView" Kind="Class" />
      <Type Name="MKAnnotationView+MKAnnotationViewAppearance" Kind="Class" />
      <Type Name="MKAnnotationViewCollisionMode" Kind="Enumeration" />
      <Type Name="MKAnnotationViewDragState" Kind="Enumeration" />
      <Type Name="MKAnnotationViewEventArgs" Kind="Class" />
      <Type Name="MKCircle" Kind="Class" />
      <Type Name="MKCircleRenderer" Kind="Class" />
      <Type Name="MKCircleView" Kind="Class" />
      <Type Name="MKCircleView+MKCircleViewAppearance" Kind="Class" />
      <Type Name="MKClusterAnnotation" Kind="Class" />
      <Type Name="MKCompassButton" Kind="Class" />
      <Type Name="MKCompassButton+MKCompassButtonAppearance" Kind="Class" />
      <Type Name="MKCoordinateRegion" Kind="Structure" />
      <Type Name="MKCoordinateSpan" Kind="Structure" />
      <Type Name="MKCreateClusterAnnotation" Kind="Delegate" />
      <Type Name="MKDidAddOverlayRenderersEventArgs" Kind="Class" />
      <Type Name="MKDidFinishRenderingMapEventArgs" Kind="Class" />
      <Type Name="MKDirections" Kind="Class" />
      <Type Name="MKDirectionsHandler" Kind="Delegate" />
      <Type Name="MKDirectionsMode" Kind="Enumeration" />
      <Type Name="MKDirectionsRequest" Kind="Class" />
      <Type Name="MKDirectionsResponse" Kind="Class" />
      <Type Name="MKDirectionsTransportType" Kind="Enumeration" />
      <Type Name="MKDistanceFormatter" Kind="Class" />
      <Type Name="MKDistanceFormatterUnits" Kind="Enumeration" />
      <Type Name="MKDistanceFormatterUnitStyle" Kind="Enumeration" />
      <Type Name="MKErrorCode" Kind="Enumeration" />
      <Type Name="MKErrorCodeExtensions" Kind="Class" />
      <Type Name="MKETAHandler" Kind="Delegate" />
      <Type Name="MKETAResponse" Kind="Class" />
      <Type Name="MKFeatureDisplayPriority" Kind="Class" />
      <Type Name="MKFeatureVisibility" Kind="Enumeration" />
      <Type Name="MKGeodesicPolyline" Kind="Class" />
      <Type Name="MKGeometry" Kind="Class" />
      <Type Name="MKLaunchOptions" Kind="Class" />
      <Type Name="MKLocalSearch" Kind="Class" />
      <Type Name="MKLocalSearchCompleter" Kind="Class" />
      <Type Name="MKLocalSearchCompleterDelegate" Kind="Class" />
      <Type Name="MKLocalSearchCompleterDelegate_Extensions" Kind="Class" />
      <Type Name="MKLocalSearchCompletion" Kind="Class" />
      <Type Name="MKLocalSearchCompletionHandler" Kind="Delegate" />
      <Type Name="MKLocalSearchRequest" Kind="Class" />
      <Type Name="MKLocalSearchResponse" Kind="Class" />
      <Type Name="MKMapCamera" Kind="Class" />
      <Type Name="MKMapItem" Kind="Class" />
      <Type Name="MKMapPoint" Kind="Structure" />
      <Type Name="MKMapRect" Kind="Structure" />
      <Type Name="MKMapSize" Kind="Structure" />
      <Type Name="MKMapSnapshot" Kind="Class" />
      <Type Name="MKMapSnapshotCompletionHandler" Kind="Delegate" />
      <Type Name="MKMapSnapshotOptions" Kind="Class" />
      <Type Name="MKMapSnapshotter" Kind="Class" />
      <Type Name="MKMapType" Kind="Enumeration" />
      <Type Name="MKMapView" Kind="Class" />
      <Type Name="MKMapView+MKMapViewAppearance" Kind="Class" />
      <Type Name="MKMapViewAccessoryTappedEventArgs" Kind="Class" />
      <Type Name="MKMapViewAnnotation" Kind="Delegate" />
      <Type Name="MKMapViewAnnotationEventArgs" Kind="Class" />
      <Type Name="MKMapViewChangeEventArgs" Kind="Class" />
      <Type Name="MKMapViewDefault" Kind="Class" />
      <Type Name="MKMapViewDelegate" Kind="Class" />
      <Type Name="MKMapViewDelegate_Extensions" Kind="Class" />
      <Type Name="MKMapViewDragStateEventArgs" Kind="Class" />
      <Type Name="MKMapViewOverlay" Kind="Delegate" />
      <Type Name="MKMarkerAnnotationView" Kind="Class" />
      <Type Name="MKMarkerAnnotationView+MKMarkerAnnotationViewAppearance" Kind="Class" />
      <Type Name="MKMultiPoint" Kind="Class" />
      <Type Name="MKOverlay" Kind="Class" />
      <Type Name="MKOverlay_Extensions" Kind="Class" />
      <Type Name="MKOverlayLevel" Kind="Enumeration" />
      <Type Name="MKOverlayPathRenderer" Kind="Class" />
      <Type Name="MKOverlayPathView" Kind="Class" />
      <Type Name="MKOverlayPathView+MKOverlayPathViewAppearance" Kind="Class" />
      <Type Name="MKOverlayRenderer" Kind="Class" />
      <Type Name="MKOverlayView" Kind="Class" />
      <Type Name="MKOverlayView+MKOverlayViewAppearance" Kind="Class" />
      <Type Name="MKOverlayViewsEventArgs" Kind="Class" />
      <Type Name="MKPinAnnotationColor" Kind="Enumeration" />
      <Type Name="MKPinAnnotationView" Kind="Class" />
      <Type Name="MKPinAnnotationView+MKPinAnnotationViewAppearance" Kind="Class" />
      <Type Name="MKPlacemark" Kind="Class" />
      <Type Name="MKPlacemarkAddress" Kind="Class" />
      <Type Name="MKPointAnnotation" Kind="Class" />
      <Type Name="MKPolygon" Kind="Class" />
      <Type Name="MKPolygonRenderer" Kind="Class" />
      <Type Name="MKPolygonView" Kind="Class" />
      <Type Name="MKPolygonView+MKPolygonViewAppearance" Kind="Class" />
      <Type Name="MKPolyline" Kind="Class" />
      <Type Name="MKPolylineRenderer" Kind="Class" />
      <Type Name="MKPolylineView" Kind="Class" />
      <Type Name="MKPolylineView+MKPolylineViewAppearance" Kind="Class" />
      <Type Name="MKRendererForOverlayDelegate" Kind="Delegate" />
      <Type Name="MKReverseGeocoder" Kind="Class" />
      <Type Name="MKReverseGeocoderDelegate" Kind="Class" />
      <Type Name="MKRoute" Kind="Class" />
      <Type Name="MKRouteStep" Kind="Class" />
      <Type Name="MKScaleView" Kind="Class" />
      <Type Name="MKScaleView+MKScaleViewAppearance" Kind="Class" />
      <Type Name="MKScaleViewAlignment" Kind="Enumeration" />
      <Type Name="MKSearchCompletionFilterType" Kind="Enumeration" />
      <Type Name="MKShape" Kind="Class" />
      <Type Name="MKTileOverlay" Kind="Class" />
      <Type Name="MKTileOverlayLoadTileCompletionHandler" Kind="Delegate" />
      <Type Name="MKTileOverlayPath" Kind="Structure" />
      <Type Name="MKTileOverlayRenderer" Kind="Class" />
      <Type Name="MKUserLocation" Kind="Class" />
      <Type Name="MKUserLocationEventArgs" Kind="Class" />
      <Type Name="MKUserTrackingBarButtonItem" Kind="Class" />
      <Type Name="MKUserTrackingBarButtonItem+MKUserTrackingBarButtonItemAppearance" Kind="Class" />
      <Type Name="MKUserTrackingButton" Kind="Class" />
      <Type Name="MKUserTrackingButton+MKUserTrackingButtonAppearance" Kind="Class" />
      <Type Name="MKUserTrackingMode" Kind="Enumeration" />
      <Type Name="MMapViewUserTrackingEventArgs" Kind="Class" />
      <Type Name="NSUserActivity_MKMapItem" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.MediaAccessibility">
      <Type Name="MAAudibleMedia" Kind="Class" />
      <Type Name="MAAudibleMedia+Notifications" Kind="Class" />
      <Type Name="MACaptionAppearance" Kind="Class" />
      <Type Name="MACaptionAppearanceBehavior" Kind="Enumeration" />
      <Type Name="MACaptionAppearanceDisplayType" Kind="Enumeration" />
      <Type Name="MACaptionAppearanceDomain" Kind="Enumeration" />
      <Type Name="MACaptionAppearanceFontStyle" Kind="Enumeration" />
      <Type Name="MACaptionAppearanceTextEdgeStyle" Kind="Enumeration" />
      <Type Name="MAMediaCharacteristic" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.MediaPlayer">
      <Type Name="IMPMediaPickerControllerDelegate" Kind="Interface" />
      <Type Name="IMPMediaPlayback" Kind="Interface" />
      <Type Name="IMPPlayableContentDataSource" Kind="Interface" />
      <Type Name="IMPPlayableContentDelegate" Kind="Interface" />
      <Type Name="IMPSystemMusicPlayerController" Kind="Interface" />
      <Type Name="ItemsPickedEventArgs" Kind="Class" />
      <Type Name="MPChangeLanguageOptionCommandEvent" Kind="Class" />
      <Type Name="MPChangeLanguageOptionSetting" Kind="Enumeration" />
      <Type Name="MPChangePlaybackPositionCommand" Kind="Class" />
      <Type Name="MPChangePlaybackPositionCommandEvent" Kind="Class" />
      <Type Name="MPChangePlaybackRateCommand" Kind="Class" />
      <Type Name="MPChangePlaybackRateCommandEvent" Kind="Class" />
      <Type Name="MPChangeRepeatModeCommand" Kind="Class" />
      <Type Name="MPChangeRepeatModeCommandEvent" Kind="Class" />
      <Type Name="MPChangeShuffleModeCommand" Kind="Class" />
      <Type Name="MPChangeShuffleModeCommandEvent" Kind="Class" />
      <Type Name="MPContentItem" Kind="Class" />
      <Type Name="MPErrorCode" Kind="Enumeration" />
      <Type Name="MPErrorCodeExtensions" Kind="Class" />
      <Type Name="MPFeedbackCommand" Kind="Class" />
      <Type Name="MPFeedbackCommandEvent" Kind="Class" />
      <Type Name="MPLanguageOptionCharacteristics" Kind="Class" />
      <Type Name="MPMediaEntity" Kind="Class" />
      <Type Name="MPMediaGrouping" Kind="Enumeration" />
      <Type Name="MPMediaItem" Kind="Class" />
      <Type Name="MPMediaItemArtwork" Kind="Class" />
      <Type Name="MPMediaItemCollection" Kind="Class" />
      <Type Name="MPMediaItemEnumerator" Kind="Delegate" />
      <Type Name="MPMediaLibrary" Kind="Class" />
      <Type Name="MPMediaLibrary+Notifications" Kind="Class" />
      <Type Name="MPMediaLibraryAuthorizationStatus" Kind="Enumeration" />
      <Type Name="MPMediaPickerController" Kind="Class" />
      <Type Name="MPMediaPickerControllerDelegate" Kind="Class" />
      <Type Name="MPMediaPickerControllerDelegate_Extensions" Kind="Class" />
      <Type Name="MPMediaPlaylist" Kind="Class" />
      <Type Name="MPMediaPlaylistAttribute" Kind="Enumeration" />
      <Type Name="MPMediaPlaylistCreationMetadata" Kind="Class" />
      <Type Name="MPMediaPlaylistProperty" Kind="Class" />
      <Type Name="MPMediaPredicate" Kind="Class" />
      <Type Name="MPMediaPredicateComparison" Kind="Enumeration" />
      <Type Name="MPMediaPropertyPredicate" Kind="Class" />
      <Type Name="MPMediaQuery" Kind="Class" />
      <Type Name="MPMediaQuerySection" Kind="Class" />
      <Type Name="MPMediaType" Kind="Enumeration" />
      <Type Name="MPMovieAccessLog" Kind="Class" />
      <Type Name="MPMovieAccessLogEvent" Kind="Class" />
      <Type Name="MPMovieControlMode" Kind="Enumeration" />
      <Type Name="MPMovieControlStyle" Kind="Enumeration" />
      <Type Name="MPMovieErrorLog" Kind="Class" />
      <Type Name="MPMovieErrorLogEvent" Kind="Class" />
      <Type Name="MPMovieFinishReason" Kind="Enumeration" />
      <Type Name="MPMovieLoadState" Kind="Enumeration" />
      <Type Name="MPMovieMediaType" Kind="Enumeration" />
      <Type Name="MPMoviePlaybackState" Kind="Enumeration" />
      <Type Name="MPMoviePlayerController" Kind="Class" />
      <Type Name="MPMoviePlayerController+Notifications" Kind="Class" />
      <Type Name="MPMoviePlayerFinishedEventArgs" Kind="Class" />
      <Type Name="MPMoviePlayerFullScreenEventArgs" Kind="Class" />
      <Type Name="MPMoviePlayerThumbnailEventArgs" Kind="Class" />
      <Type Name="MPMoviePlayerTimedMetadataEventArgs" Kind="Class" />
      <Type Name="MPMoviePlayerViewController" Kind="Class" />
      <Type Name="MPMovieRepeatMode" Kind="Enumeration" />
      <Type Name="MPMovieScalingMode" Kind="Enumeration" />
      <Type Name="MPMovieSourceType" Kind="Enumeration" />
      <Type Name="MPMovieTimeOption" Kind="Enumeration" />
      <Type Name="MPMusicPlaybackState" Kind="Enumeration" />
      <Type Name="MPMusicPlayerApplicationController" Kind="Class" />
      <Type Name="MPMusicPlayerController" Kind="Class" />
      <Type Name="MPMusicPlayerController+Notifications" Kind="Class" />
      <Type Name="MPMusicPlayerControllerMutableQueue" Kind="Class" />
      <Type Name="MPMusicPlayerControllerQueue" Kind="Class" />
      <Type Name="MPMusicPlayerControllerQueue+Notifications" Kind="Class" />
      <Type Name="MPMusicPlayerMediaItemQueueDescriptor" Kind="Class" />
      <Type Name="MPMusicPlayerPlayParameters" Kind="Class" />
      <Type Name="MPMusicPlayerPlayParametersQueueDescriptor" Kind="Class" />
      <Type Name="MPMusicPlayerQueueDescriptor" Kind="Class" />
      <Type Name="MPMusicPlayerStoreQueueDescriptor" Kind="Class" />
      <Type Name="MPMusicRepeatMode" Kind="Enumeration" />
      <Type Name="MPMusicShuffleMode" Kind="Enumeration" />
      <Type Name="MPNowPlayingInfo" Kind="Class" />
      <Type Name="MPNowPlayingInfoCenter" Kind="Class" />
      <Type Name="MPNowPlayingInfoLanguageOption" Kind="Class" />
      <Type Name="MPNowPlayingInfoLanguageOptionGroup" Kind="Class" />
      <Type Name="MPNowPlayingInfoLanguageOptionType" Kind="Enumeration" />
      <Type Name="MPNowPlayingInfoMediaType" Kind="Enumeration" />
      <Type Name="MPPlayableContentDataSource" Kind="Class" />
      <Type Name="MPPlayableContentDataSource_Extensions" Kind="Class" />
      <Type Name="MPPlayableContentDelegate" Kind="Class" />
      <Type Name="MPPlayableContentDelegate_Extensions" Kind="Class" />
      <Type Name="MPPlayableContentManager" Kind="Class" />
      <Type Name="MPPlayableContentManagerContext" Kind="Class" />
      <Type Name="MPRatingCommand" Kind="Class" />
      <Type Name="MPRatingCommandEvent" Kind="Class" />
      <Type Name="MPRemoteCommand" Kind="Class" />
      <Type Name="MPRemoteCommandCenter" Kind="Class" />
      <Type Name="MPRemoteCommandEvent" Kind="Class" />
      <Type Name="MPRemoteCommandHandlerStatus" Kind="Enumeration" />
      <Type Name="MPRepeatType" Kind="Enumeration" />
      <Type Name="MPSeekCommandEvent" Kind="Class" />
      <Type Name="MPSeekCommandEventType" Kind="Enumeration" />
      <Type Name="MPShuffleType" Kind="Enumeration" />
      <Type Name="MPSkipIntervalCommand" Kind="Class" />
      <Type Name="MPSkipIntervalCommandEvent" Kind="Class" />
      <Type Name="MPTimedMetadata" Kind="Class" />
      <Type Name="MPVolumeSettings" Kind="Class" />
      <Type Name="MPVolumeView" Kind="Class" />
      <Type Name="MPVolumeView+MPVolumeViewAppearance" Kind="Class" />
      <Type Name="MPVolumeView+Notifications" Kind="Class" />
      <Type Name="NSUserActivity_MediaPlayerAdditions" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.MediaToolbox">
      <Type Name="MTAudioProcessingTap" Kind="Class" />
      <Type Name="MTAudioProcessingTapCallbacks" Kind="Class" />
      <Type Name="MTAudioProcessingTapCreationFlags" Kind="Enumeration" />
      <Type Name="MTAudioProcessingTapError" Kind="Enumeration" />
      <Type Name="MTAudioProcessingTapFlags" Kind="Enumeration" />
      <Type Name="MTAudioProcessingTapInitCallback" Kind="Delegate" />
      <Type Name="MTAudioProcessingTapPrepareCallback" Kind="Delegate" />
      <Type Name="MTAudioProcessingTapProcessDelegate" Kind="Delegate" />
      <Type Name="MTFormatNames" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.Messages">
      <Type Name="IMSMessagesAppTranscriptPresentation" Kind="Interface" />
      <Type Name="IMSStickerBrowserViewDataSource" Kind="Interface" />
      <Type Name="MSConversation" Kind="Class" />
      <Type Name="MSMessage" Kind="Class" />
      <Type Name="MSMessageErrorCode" Kind="Enumeration" />
      <Type Name="MSMessageErrorCodeExtensions" Kind="Class" />
      <Type Name="MSMessageLayout" Kind="Class" />
      <Type Name="MSMessageLiveLayout" Kind="Class" />
      <Type Name="MSMessagesAppPresentationStyle" Kind="Enumeration" />
      <Type Name="MSMessagesAppViewController" Kind="Class" />
      <Type Name="MSMessageTemplateLayout" Kind="Class" />
      <Type Name="MSSession" Kind="Class" />
      <Type Name="MSSticker" Kind="Class" />
      <Type Name="MSStickerBrowserView" Kind="Class" />
      <Type Name="MSStickerBrowserView+MSStickerBrowserViewAppearance" Kind="Class" />
      <Type Name="MSStickerBrowserViewController" Kind="Class" />
      <Type Name="MSStickerBrowserViewDataSource" Kind="Class" />
      <Type Name="MSStickerSize" Kind="Enumeration" />
      <Type Name="MSStickerView" Kind="Class" />
      <Type Name="MSStickerView+MSStickerViewAppearance" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.MessageUI">
      <Type Name="IMFMailComposeViewControllerDelegate" Kind="Interface" />
      <Type Name="IMFMessageComposeViewControllerDelegate" Kind="Interface" />
      <Type Name="MessageComposeResult" Kind="Enumeration" />
      <Type Name="MFComposeResultEventArgs" Kind="Class" />
      <Type Name="MFMailComposeErrorCode" Kind="Enumeration" />
      <Type Name="MFMailComposeErrorCodeExtensions" Kind="Class" />
      <Type Name="MFMailComposeResult" Kind="Enumeration" />
      <Type Name="MFMailComposeViewController" Kind="Class" />
      <Type Name="MFMailComposeViewController+MFMailComposeViewControllerAppearance" Kind="Class" />
      <Type Name="MFMailComposeViewControllerDelegate" Kind="Class" />
      <Type Name="MFMailComposeViewControllerDelegate_Extensions" Kind="Class" />
      <Type Name="MFMessageAvailabilityChangedEventArgs" Kind="Class" />
      <Type Name="MFMessageComposeResultEventArgs" Kind="Class" />
      <Type Name="MFMessageComposeViewController" Kind="Class" />
      <Type Name="MFMessageComposeViewController+MFMessageComposeViewControllerAppearance" Kind="Class" />
      <Type Name="MFMessageComposeViewController+Notifications" Kind="Class" />
      <Type Name="MFMessageComposeViewControllerDelegate" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.Metal">
      <Type Name="IMTLArgumentEncoder" Kind="Interface" />
      <Type Name="IMTLBlitCommandEncoder" Kind="Interface" />
      <Type Name="IMTLBuffer" Kind="Interface" />
      <Type Name="IMTLCaptureScope" Kind="Interface" />
      <Type Name="IMTLCommandBuffer" Kind="Interface" />
      <Type Name="IMTLCommandEncoder" Kind="Interface" />
      <Type Name="IMTLCommandQueue" Kind="Interface" />
      <Type Name="IMTLComputeCommandEncoder" Kind="Interface" />
      <Type Name="IMTLComputePipelineState" Kind="Interface" />
      <Type Name="IMTLDepthStencilState" Kind="Interface" />
      <Type Name="IMTLDevice" Kind="Interface" />
      <Type Name="IMTLDrawable" Kind="Interface" />
      <Type Name="IMTLFence" Kind="Interface" />
      <Type Name="IMTLFunction" Kind="Interface" />
      <Type Name="IMTLHeap" Kind="Interface" />
      <Type Name="IMTLLibrary" Kind="Interface" />
      <Type Name="IMTLParallelRenderCommandEncoder" Kind="Interface" />
      <Type Name="IMTLRenderCommandEncoder" Kind="Interface" />
      <Type Name="IMTLRenderPipelineState" Kind="Interface" />
      <Type Name="IMTLResource" Kind="Interface" />
      <Type Name="IMTLSamplerState" Kind="Interface" />
      <Type Name="IMTLTexture" Kind="Interface" />
      <Type Name="MTLArgument" Kind="Class" />
      <Type Name="MTLArgumentAccess" Kind="Enumeration" />
      <Type Name="MTLArgumentBuffersTier" Kind="Enumeration" />
      <Type Name="MTLArgumentDescriptor" Kind="Class" />
      <Type Name="MTLArgumentEncoder_Extensions" Kind="Class" />
      <Type Name="MTLArgumentType" Kind="Enumeration" />
      <Type Name="MTLArrayType" Kind="Class" />
      <Type Name="MTLAttribute" Kind="Class" />
      <Type Name="MTLAttributeDescriptor" Kind="Class" />
      <Type Name="MTLAttributeDescriptorArray" Kind="Class" />
      <Type Name="MTLAttributeFormat" Kind="Enumeration" />
      <Type Name="MTLBlendFactor" Kind="Enumeration" />
      <Type Name="MTLBlendOperation" Kind="Enumeration" />
      <Type Name="MTLBlitCommandEncoder_Extensions" Kind="Class" />
      <Type Name="MTLBlitOption" Kind="Enumeration" />
      <Type Name="MTLBuffer_Extensions" Kind="Class" />
      <Type Name="MTLBufferLayoutDescriptor" Kind="Class" />
      <Type Name="MTLBufferLayoutDescriptorArray" Kind="Class" />
      <Type Name="MTLCaptureManager" Kind="Class" />
      <Type Name="MTLCaptureScope" Kind="Class" />
      <Type Name="MTLClearColor" Kind="Structure" />
      <Type Name="MTLClearValue" Kind="Structure" />
      <Type Name="MTLColorWriteMask" Kind="Enumeration" />
      <Type Name="MTLCommandBuffer_Extensions" Kind="Class" />
      <Type Name="MTLCommandBufferError" Kind="Enumeration" />
      <Type Name="MTLCommandBufferErrorExtensions" Kind="Class" />
      <Type Name="MTLCommandBufferStatus" Kind="Enumeration" />
      <Type Name="MTLCompareFunction" Kind="Enumeration" />
      <Type Name="MTLCompileOptions" Kind="Class" />
      <Type Name="MTLComputeCommandEncoder_Extensions" Kind="Class" />
      <Type Name="MTLComputePipelineDescriptor" Kind="Class" />
      <Type Name="MTLComputePipelineReflection" Kind="Class" />
      <Type Name="MTLComputePipelineState_Extensions" Kind="Class" />
      <Type Name="MTLCpuCacheMode" Kind="Enumeration" />
      <Type Name="MTLCullMode" Kind="Enumeration" />
      <Type Name="MTLDataType" Kind="Enumeration" />
      <Type Name="MTLDeallocator" Kind="Delegate" />
      <Type Name="MTLDepthClipMode" Kind="Enumeration" />
      <Type Name="MTLDepthStencilDescriptor" Kind="Class" />
      <Type Name="MTLDevice" Kind="Class" />
      <Type Name="MTLDevice_Extensions" Kind="Class" />
      <Type Name="MTLDispatchThreadgroupsIndirectArguments" Kind="Structure" />
      <Type Name="MTLDrawable" Kind="Class" />
      <Type Name="MTLDrawable_Extensions" Kind="Class" />
      <Type Name="MTLDrawIndexedPrimitivesIndirectArguments" Kind="Structure" />
      <Type Name="MTLDrawPatchIndirectArguments" Kind="Structure" />
      <Type Name="MTLDrawPrimitivesIndirectArguments" Kind="Structure" />
      <Type Name="MTLFeatureSet" Kind="Enumeration" />
      <Type Name="MTLFunction_Extensions" Kind="Class" />
      <Type Name="MTLFunctionConstant" Kind="Class" />
      <Type Name="MTLFunctionConstantValues" Kind="Class" />
      <Type Name="MTLFunctionType" Kind="Enumeration" />
      <Type Name="MTLHeap_Extensions" Kind="Class" />
      <Type Name="MTLHeapDescriptor" Kind="Class" />
      <Type Name="MTLIndexType" Kind="Enumeration" />
      <Type Name="MTLLanguageVersion" Kind="Enumeration" />
      <Type Name="MTLLibrary_Extensions" Kind="Class" />
      <Type Name="MTLLibraryError" Kind="Enumeration" />
      <Type Name="MTLLibraryErrorExtensions" Kind="Class" />
      <Type Name="MTLLoadAction" Kind="Enumeration" />
      <Type Name="MTLMultisampleDepthResolveFilter" Kind="Enumeration" />
      <Type Name="MTLMutability" Kind="Enumeration" />
      <Type Name="MTLNewComputePipelineStateWithReflectionCompletionHandler" Kind="Delegate" />
      <Type Name="MTLOrigin" Kind="Structure" />
      <Type Name="MTLParallelRenderCommandEncoder_Extensions" Kind="Class" />
      <Type Name="MTLPatchType" Kind="Enumeration" />
      <Type Name="MTLPipelineBufferDescriptor" Kind="Class" />
      <Type Name="MTLPipelineBufferDescriptorArray" Kind="Class" />
      <Type Name="MTLPipelineOption" Kind="Enumeration" />
      <Type Name="MTLPixelFormat" Kind="Enumeration" />
      <Type Name="MTLPointerType" Kind="Class" />
      <Type Name="MTLPrimitiveType" Kind="Enumeration" />
      <Type Name="MTLPurgeableState" Kind="Enumeration" />
      <Type Name="MTLQuadTessellationFactorsHalf" Kind="Structure" />
      <Type Name="MTLReadWriteTextureTier" Kind="Enumeration" />
      <Type Name="MTLRegion" Kind="Structure" />
      <Type Name="MTLRenderCommandEncoder_Extensions" Kind="Class" />
      <Type Name="MTLRenderPassAttachmentDescriptor" Kind="Class" />
      <Type Name="MTLRenderPassColorAttachmentDescriptor" Kind="Class" />
      <Type Name="MTLRenderPassColorAttachmentDescriptorArray" Kind="Class" />
      <Type Name="MTLRenderPassDepthAttachmentDescriptor" Kind="Class" />
      <Type Name="MTLRenderPassDescriptor" Kind="Class" />
      <Type Name="MTLRenderPassStencilAttachmentDescriptor" Kind="Class" />
      <Type Name="MTLRenderPipelineColorAttachmentDescriptor" Kind="Class" />
      <Type Name="MTLRenderPipelineColorAttachmentDescriptorArray" Kind="Class" />
      <Type Name="MTLRenderPipelineDescriptor" Kind="Class" />
      <Type Name="MTLRenderPipelineError" Kind="Enumeration" />
      <Type Name="MTLRenderPipelineErrorExtensions" Kind="Class" />
      <Type Name="MTLRenderPipelineReflection" Kind="Class" />
      <Type Name="MTLRenderStages" Kind="Enumeration" />
      <Type Name="MTLResource_Extensions" Kind="Class" />
      <Type Name="MTLResourceOptions" Kind="Enumeration" />
      <Type Name="MTLResourceUsage" Kind="Enumeration" />
      <Type Name="MTLSamplePosition" Kind="Structure" />
      <Type Name="MTLSamplerAddressMode" Kind="Enumeration" />
      <Type Name="MTLSamplerBorderColor" Kind="Enumeration" />
      <Type Name="MTLSamplerDescriptor" Kind="Class" />
      <Type Name="MTLSamplerMinMagFilter" Kind="Enumeration" />
      <Type Name="MTLSamplerMipFilter" Kind="Enumeration" />
      <Type Name="MTLScissorRect" Kind="Structure" />
      <Type Name="MTLSize" Kind="Structure" />
      <Type Name="MTLSizeAndAlign" Kind="Structure" />
      <Type Name="MTLStageInputOutputDescriptor" Kind="Class" />
      <Type Name="MTLStencilDescriptor" Kind="Class" />
      <Type Name="MTLStencilOperation" Kind="Enumeration" />
      <Type Name="MTLStepFunction" Kind="Enumeration" />
      <Type Name="MTLStorageMode" Kind="Enumeration" />
      <Type Name="MTLStoreAction" Kind="Enumeration" />
      <Type Name="MTLStoreActionOptions" Kind="Enumeration" />
      <Type Name="MTLStructMember" Kind="Class" />
      <Type Name="MTLStructType" Kind="Class" />
      <Type Name="MTLTessellationControlPointIndexType" Kind="Enumeration" />
      <Type Name="MTLTessellationFactorFormat" Kind="Enumeration" />
      <Type Name="MTLTessellationFactorStepFunction" Kind="Enumeration" />
      <Type Name="MTLTessellationPartitionMode" Kind="Enumeration" />
      <Type Name="MTLTexture_Extensions" Kind="Class" />
      <Type Name="MTLTextureDescriptor" Kind="Class" />
      <Type Name="MTLTextureReferenceType" Kind="Class" />
      <Type Name="MTLTextureType" Kind="Enumeration" />
      <Type Name="MTLTextureUsage" Kind="Enumeration" />
      <Type Name="MTLTriangleFillMode" Kind="Enumeration" />
      <Type Name="MTLTriangleTessellationFactorsHalf" Kind="Structure" />
      <Type Name="MTLType" Kind="Class" />
      <Type Name="MTLVertexAttribute" Kind="Class" />
      <Type Name="MTLVertexAttributeDescriptor" Kind="Class" />
      <Type Name="MTLVertexAttributeDescriptorArray" Kind="Class" />
      <Type Name="MTLVertexBufferLayoutDescriptor" Kind="Class" />
      <Type Name="MTLVertexBufferLayoutDescriptorArray" Kind="Class" />
      <Type Name="MTLVertexDescriptor" Kind="Class" />
      <Type Name="MTLVertexFormat" Kind="Enumeration" />
      <Type Name="MTLVertexFormatExtensions" Kind="Class" />
      <Type Name="MTLVertexStepFunction" Kind="Enumeration" />
      <Type Name="MTLViewport" Kind="Structure" />
      <Type Name="MTLVisibilityResultMode" Kind="Enumeration" />
      <Type Name="MTLWinding" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.MetalKit">
      <Type Name="IMTKViewDelegate" Kind="Interface" />
      <Type Name="MTKMesh" Kind="Class" />
      <Type Name="MTKMeshBuffer" Kind="Class" />
      <Type Name="MTKMeshBufferAllocator" Kind="Class" />
      <Type Name="MTKModel" Kind="Class" />
      <Type Name="MTKSubmesh" Kind="Class" />
      <Type Name="MTKTextureLoader" Kind="Class" />
      <Type Name="MTKTextureLoaderArrayCallback" Kind="Delegate" />
      <Type Name="MTKTextureLoaderCallback" Kind="Delegate" />
      <Type Name="MTKTextureLoaderCubeLayout" Kind="Enumeration" />
      <Type Name="MTKTextureLoaderCubeLayoutExtensions" Kind="Class" />
      <Type Name="MTKTextureLoaderError" Kind="Class" />
      <Type Name="MTKTextureLoaderOptions" Kind="Class" />
      <Type Name="MTKTextureLoaderOrigin" Kind="Enumeration" />
      <Type Name="MTKTextureLoaderOriginExtensions" Kind="Class" />
      <Type Name="MTKView" Kind="Class" />
      <Type Name="MTKView+MTKViewAppearance" Kind="Class" />
      <Type Name="MTKViewDelegate" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.MetalPerformanceShaders">
      <Type Name="MPSAlphaType" Kind="Enumeration" />
      <Type Name="MPSBinaryImageKernel" Kind="Class" />
      <Type Name="MPSCnnConvolution" Kind="Class" />
      <Type Name="MPSCnnConvolutionDescriptor" Kind="Class" />
      <Type Name="MPSCnnConvolutionFlags" Kind="Enumeration" />
      <Type Name="MPSCnnCrossChannelNormalization" Kind="Class" />
      <Type Name="MPSCnnFullyConnected" Kind="Class" />
      <Type Name="MPSCnnKernel" Kind="Class" />
      <Type Name="MPSCnnLocalContrastNormalization" Kind="Class" />
      <Type Name="MPSCnnLogSoftMax" Kind="Class" />
      <Type Name="MPSCnnNeuron" Kind="Class" />
      <Type Name="MPSCnnNeuronAbsolute" Kind="Class" />
      <Type Name="MPSCnnNeuronLinear" Kind="Class" />
      <Type Name="MPSCnnNeuronReLU" Kind="Class" />
      <Type Name="MPSCnnNeuronSigmoid" Kind="Class" />
      <Type Name="MPSCnnNeuronTanH" Kind="Class" />
      <Type Name="MPSCnnPooling" Kind="Class" />
      <Type Name="MPSCnnPoolingAverage" Kind="Class" />
      <Type Name="MPSCnnPoolingMax" Kind="Class" />
      <Type Name="MPSCnnSoftMax" Kind="Class" />
      <Type Name="MPSCnnSpatialNormalization" Kind="Class" />
      <Type Name="MPSCopyAllocator" Kind="Delegate" />
      <Type Name="MPSDataType" Kind="Enumeration" />
      <Type Name="MPSImage" Kind="Class" />
      <Type Name="MPSImageAreaMax" Kind="Class" />
      <Type Name="MPSImageAreaMin" Kind="Class" />
      <Type Name="MPSImageBox" Kind="Class" />
      <Type Name="MPSImageConversion" Kind="Class" />
      <Type Name="MPSImageConvolution" Kind="Class" />
      <Type Name="MPSImageDescriptor" Kind="Class" />
      <Type Name="MPSImageDilate" Kind="Class" />
      <Type Name="MPSImageEdgeMode" Kind="Enumeration" />
      <Type Name="MPSImageErode" Kind="Class" />
      <Type Name="MPSImageFeatureChannelFormat" Kind="Enumeration" />
      <Type Name="MPSImageGaussianBlur" Kind="Class" />
      <Type Name="MPSImageGaussianPyramid" Kind="Class" />
      <Type Name="MPSImageHistogram" Kind="Class" />
      <Type Name="MPSImageHistogramEqualization" Kind="Class" />
      <Type Name="MPSImageHistogramInfo" Kind="Structure" />
      <Type Name="MPSImageHistogramSpecification" Kind="Class" />
      <Type Name="MPSImageIntegral" Kind="Class" />
      <Type Name="MPSImageIntegralOfSquares" Kind="Class" />
      <Type Name="MPSImageLanczosScale" Kind="Class" />
      <Type Name="MPSImageLaplacian" Kind="Class" />
      <Type Name="MPSImageMedian" Kind="Class" />
      <Type Name="MPSImagePyramid" Kind="Class" />
      <Type Name="MPSImageSobel" Kind="Class" />
      <Type Name="MPSImageTent" Kind="Class" />
      <Type Name="MPSImageThresholdBinary" Kind="Class" />
      <Type Name="MPSImageThresholdBinaryInverse" Kind="Class" />
      <Type Name="MPSImageThresholdToZero" Kind="Class" />
      <Type Name="MPSImageThresholdToZeroInverse" Kind="Class" />
      <Type Name="MPSImageThresholdTruncate" Kind="Class" />
      <Type Name="MPSImageTranspose" Kind="Class" />
      <Type Name="MPSKernel" Kind="Class" />
      <Type Name="MPSKernelOptions" Kind="Enumeration" />
      <Type Name="MPSMatrix" Kind="Class" />
      <Type Name="MPSMatrixDescriptor" Kind="Class" />
      <Type Name="MPSMatrixMultiplication" Kind="Class" />
      <Type Name="MPSOffset" Kind="Structure" />
      <Type Name="MPSOrigin" Kind="Structure" />
      <Type Name="MPSPurgeableState" Kind="Enumeration" />
      <Type Name="MPSRegion" Kind="Structure" />
      <Type Name="MPSScaleTransform" Kind="Structure" />
      <Type Name="MPSSize" Kind="Structure" />
      <Type Name="MPSTemporaryImage" Kind="Class" />
      <Type Name="MPSUnaryImageKernel" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.MobileCoreServices">
      <Type Name="UTType" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.ModelIO">
      <Type Name="IMDLComponent" Kind="Interface" />
      <Type Name="IMDLLightProbeIrradianceDataSource" Kind="Interface" />
      <Type Name="IMDLMeshBuffer" Kind="Interface" />
      <Type Name="IMDLMeshBufferAllocator" Kind="Interface" />
      <Type Name="IMDLMeshBufferZone" Kind="Interface" />
      <Type Name="IMDLNamed" Kind="Interface" />
      <Type Name="IMDLObjectContainerComponent" Kind="Interface" />
      <Type Name="IMDLTransformComponent" Kind="Interface" />
      <Type Name="MDLAreaLight" Kind="Class" />
      <Type Name="MDLAsset" Kind="Class" />
      <Type Name="MDLAxisAlignedBoundingBox" Kind="Structure" />
      <Type Name="MDLCamera" Kind="Class" />
      <Type Name="MDLCameraProjection" Kind="Enumeration" />
      <Type Name="MDLCheckerboardTexture" Kind="Class" />
      <Type Name="MDLColorSwatchTexture" Kind="Class" />
      <Type Name="MDLGeometryType" Kind="Enumeration" />
      <Type Name="MDLIndexBitDepth" Kind="Enumeration" />
      <Type Name="MDLLight" Kind="Class" />
      <Type Name="MDLLightProbe" Kind="Class" />
      <Type Name="MDLLightProbeIrradianceDataSource" Kind="Class" />
      <Type Name="MDLLightProbeIrradianceDataSource_Extensions" Kind="Class" />
      <Type Name="MDLLightType" Kind="Enumeration" />
      <Type Name="MDLMaterial" Kind="Class" />
      <Type Name="MDLMaterialFace" Kind="Enumeration" />
      <Type Name="MDLMaterialMipMapFilterMode" Kind="Enumeration" />
      <Type Name="MDLMaterialProperty" Kind="Class" />
      <Type Name="MDLMaterialPropertyConnection" Kind="Class" />
      <Type Name="MDLMaterialPropertyGraph" Kind="Class" />
      <Type Name="MDLMaterialPropertyNode" Kind="Class" />
      <Type Name="MDLMaterialPropertyType" Kind="Enumeration" />
      <Type Name="MDLMaterialSemantic" Kind="Enumeration" />
      <Type Name="MDLMaterialTextureFilterMode" Kind="Enumeration" />
      <Type Name="MDLMaterialTextureWrapMode" Kind="Enumeration" />
      <Type Name="MDLMesh" Kind="Class" />
      <Type Name="MDLMesh+MDLMeshVectorType" Kind="Enumeration" />
      <Type Name="MDLMeshBuffer_Extensions" Kind="Class" />
      <Type Name="MDLMeshBufferData" Kind="Class" />
      <Type Name="MDLMeshBufferDataAllocator" Kind="Class" />
      <Type Name="MDLMeshBufferMap" Kind="Class" />
      <Type Name="MDLMeshBufferType" Kind="Enumeration" />
      <Type Name="MDLMeshBufferZone_Extensions" Kind="Class" />
      <Type Name="MDLMeshBufferZoneDefault" Kind="Class" />
      <Type Name="MDLNoiseTexture" Kind="Class" />
      <Type Name="MDLNoiseTextureType" Kind="Enumeration" />
      <Type Name="MDLNormalMapTexture" Kind="Class" />
      <Type Name="MDLObject" Kind="Class" />
      <Type Name="MDLObjectContainer" Kind="Class" />
      <Type Name="MDLObjectContainerComponent_Extensions" Kind="Class" />
      <Type Name="MDLObjectHandler" Kind="Delegate" />
      <Type Name="MDLPhotometricLight" Kind="Class" />
      <Type Name="MDLPhysicallyPlausibleLight" Kind="Class" />
      <Type Name="MDLPhysicallyPlausibleScatteringFunction" Kind="Class" />
      <Type Name="MDLProbePlacement" Kind="Enumeration" />
      <Type Name="MDLScatteringFunction" Kind="Class" />
      <Type Name="MDLSkyCubeTexture" Kind="Class" />
      <Type Name="MDLStereoscopicCamera" Kind="Class" />
      <Type Name="MDLSubmesh" Kind="Class" />
      <Type Name="MDLSubmeshTopology" Kind="Class" />
      <Type Name="MDLTexture" Kind="Class" />
      <Type Name="MDLTextureChannelEncoding" Kind="Enumeration" />
      <Type Name="MDLTextureFilter" Kind="Class" />
      <Type Name="MDLTextureSampler" Kind="Class" />
      <Type Name="MDLTransform" Kind="Class" />
      <Type Name="MDLTransformComponent_Extensions" Kind="Class" />
      <Type Name="MDLUrlTexture" Kind="Class" />
      <Type Name="MDLVertexAttribute" Kind="Class" />
      <Type Name="MDLVertexAttributeData" Kind="Class" />
      <Type Name="MDLVertexAttributes" Kind="Class" />
      <Type Name="MDLVertexBufferLayout" Kind="Class" />
      <Type Name="MDLVertexDescriptor" Kind="Class" />
      <Type Name="MDLVertexFormat" Kind="Enumeration" />
      <Type Name="MDLVertexFormatExtensions" Kind="Class" />
      <Type Name="MDLVoxelArray" Kind="Class" />
      <Type Name="MDLVoxelIndexExtent" Kind="Structure" />
      <Type Name="MDLVoxelIndexExtent2" Kind="Structure" />
    </Namespace>
    <Namespace Name="MonoTouch.MultipeerConnectivity">
      <Type Name="IMCAdvertiserAssistantDelegate" Kind="Interface" />
      <Type Name="IMCBrowserViewControllerDelegate" Kind="Interface" />
      <Type Name="IMCNearbyServiceAdvertiserDelegate" Kind="Interface" />
      <Type Name="IMCNearbyServiceBrowserDelegate" Kind="Interface" />
      <Type Name="IMCSessionDelegate" Kind="Interface" />
      <Type Name="MCAdvertiserAssistant" Kind="Class" />
      <Type Name="MCAdvertiserAssistantDelegate" Kind="Class" />
      <Type Name="MCAdvertiserAssistantDelegate_Extensions" Kind="Class" />
      <Type Name="MCBrowserViewController" Kind="Class" />
      <Type Name="MCBrowserViewControllerDelegate" Kind="Class" />
      <Type Name="MCBrowserViewControllerDelegate_Extensions" Kind="Class" />
      <Type Name="MCEncryptionPreference" Kind="Enumeration" />
      <Type Name="MCError" Kind="Enumeration" />
      <Type Name="MCErrorExtensions" Kind="Class" />
      <Type Name="MCNearbyServiceAdvertiser" Kind="Class" />
      <Type Name="MCNearbyServiceAdvertiserDelegate" Kind="Class" />
      <Type Name="MCNearbyServiceAdvertiserDelegate_Extensions" Kind="Class" />
      <Type Name="MCNearbyServiceAdvertiserInvitationHandler" Kind="Delegate" />
      <Type Name="MCNearbyServiceBrowser" Kind="Class" />
      <Type Name="MCNearbyServiceBrowserDelegate" Kind="Class" />
      <Type Name="MCNearbyServiceBrowserDelegate_Extensions" Kind="Class" />
      <Type Name="MCPeerID" Kind="Class" />
      <Type Name="MCSession" Kind="Class" />
      <Type Name="MCSessionDelegate" Kind="Class" />
      <Type Name="MCSessionDelegate_Extensions" Kind="Class" />
      <Type Name="MCSessionNearbyConnectionDataForPeerCompletionHandler" Kind="Delegate" />
      <Type Name="MCSessionSendDataMode" Kind="Enumeration" />
      <Type Name="MCSessionState" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.NetworkExtension">
      <Type Name="INWTcpConnectionAuthenticationDelegate" Kind="Interface" />
      <Type Name="NEAppProxyFlow" Kind="Class" />
      <Type Name="NEAppProxyFlowError" Kind="Enumeration" />
      <Type Name="NEAppProxyFlowErrorExtensions" Kind="Class" />
      <Type Name="NEAppProxyProvider" Kind="Class" />
      <Type Name="NEAppProxyProviderManager" Kind="Class" />
      <Type Name="NEAppProxyTcpFlow" Kind="Class" />
      <Type Name="NEAppProxyUdpFlow" Kind="Class" />
      <Type Name="NEAppRule" Kind="Class" />
      <Type Name="NEDatagramRead" Kind="Delegate" />
      <Type Name="NEDatagramReadResult" Kind="Class" />
      <Type Name="NEDnsSettings" Kind="Class" />
      <Type Name="NEEvaluateConnectionRule" Kind="Class" />
      <Type Name="NEEvaluateConnectionRuleAction" Kind="Enumeration" />
      <Type Name="NEFilterBrowserFlow" Kind="Class" />
      <Type Name="NEFilterControlProvider" Kind="Class" />
      <Type Name="NEFilterControlVerdict" Kind="Class" />
      <Type Name="NEFilterDataProvider" Kind="Class" />
      <Type Name="NEFilterDataVerdict" Kind="Class" />
      <Type Name="NEFilterFlow" Kind="Class" />
      <Type Name="NEFilterManager" Kind="Class" />
      <Type Name="NEFilterManager+Notifications" Kind="Class" />
      <Type Name="NEFilterManagerError" Kind="Enumeration" />
      <Type Name="NEFilterManagerErrorExtensions" Kind="Class" />
      <Type Name="NEFilterNewFlowVerdict" Kind="Class" />
      <Type Name="NEFilterProvider" Kind="Class" />
      <Type Name="NEFilterProviderConfiguration" Kind="Class" />
      <Type Name="NEFilterRemediationVerdict" Kind="Class" />
      <Type Name="NEFilterSocketFlow" Kind="Class" />
      <Type Name="NEFilterVerdict" Kind="Class" />
      <Type Name="NEFlowMetaData" Kind="Class" />
      <Type Name="NEHotspotHelper" Kind="Class" />
      <Type Name="NEHotspotHelperCommand" Kind="Class" />
      <Type Name="NEHotspotHelperCommandType" Kind="Enumeration" />
      <Type Name="NEHotspotHelperConfidence" Kind="Enumeration" />
      <Type Name="NEHotspotHelperHandler" Kind="Delegate" />
      <Type Name="NEHotspotHelperOptionInternal" Kind="Class" />
      <Type Name="NEHotspotHelperOptions" Kind="Class" />
      <Type Name="NEHotspotHelperResponse" Kind="Class" />
      <Type Name="NEHotspotHelperResult" Kind="Enumeration" />
      <Type Name="NEHotspotNetwork" Kind="Class" />
      <Type Name="NEIPv4Route" Kind="Class" />
      <Type Name="NEIPv4Settings" Kind="Class" />
      <Type Name="NEIPv6Route" Kind="Class" />
      <Type Name="NEIPv6Settings" Kind="Class" />
      <Type Name="NEOnDemandRule" Kind="Class" />
      <Type Name="NEOnDemandRuleAction" Kind="Enumeration" />
      <Type Name="NEOnDemandRuleConnect" Kind="Class" />
      <Type Name="NEOnDemandRuleDisconnect" Kind="Class" />
      <Type Name="NEOnDemandRuleEvaluateConnection" Kind="Class" />
      <Type Name="NEOnDemandRuleIgnore" Kind="Class" />
      <Type Name="NEOnDemandRuleInterfaceType" Kind="Enumeration" />
      <Type Name="NEPacket" Kind="Class" />
      <Type Name="NEPacketTunnelFlow" Kind="Class" />
      <Type Name="NEPacketTunnelFlowReadResult" Kind="Class" />
      <Type Name="NEPacketTunnelNetworkSettings" Kind="Class" />
      <Type Name="NEPacketTunnelProvider" Kind="Class" />
      <Type Name="NEProvider" Kind="Class" />
      <Type Name="NEProviderStopReason" Kind="Enumeration" />
      <Type Name="NEProxyServer" Kind="Class" />
      <Type Name="NEProxySettings" Kind="Class" />
      <Type Name="NETunnelNetworkSettings" Kind="Class" />
      <Type Name="NETunnelProvider" Kind="Class" />
      <Type Name="NETunnelProviderError" Kind="Enumeration" />
      <Type Name="NETunnelProviderErrorExtensions" Kind="Class" />
      <Type Name="NETunnelProviderManager" Kind="Class" />
      <Type Name="NETunnelProviderProtocol" Kind="Class" />
      <Type Name="NETunnelProviderRoutingMethod" Kind="Enumeration" />
      <Type Name="NETunnelProviderSession" Kind="Class" />
      <Type Name="NEVpnConnection" Kind="Class" />
      <Type Name="NEVpnConnection+Notifications" Kind="Class" />
      <Type Name="NEVpnConnectionStartOptions" Kind="Class" />
      <Type Name="NEVpnError" Kind="Enumeration" />
      <Type Name="NEVpnErrorExtensions" Kind="Class" />
      <Type Name="NEVpnIke2CertificateType" Kind="Enumeration" />
      <Type Name="NEVpnIke2DeadPeerDetectionRate" Kind="Enumeration" />
      <Type Name="NEVpnIke2DiffieHellman" Kind="Enumeration" />
      <Type Name="NEVpnIke2EncryptionAlgorithm" Kind="Enumeration" />
      <Type Name="NEVpnIke2IntegrityAlgorithm" Kind="Enumeration" />
      <Type Name="NEVpnIke2SecurityAssociationParameters" Kind="Class" />
      <Type Name="NEVpnIkeAuthenticationMethod" Kind="Enumeration" />
      <Type Name="NEVpnManager" Kind="Class" />
      <Type Name="NEVpnManager+Notifications" Kind="Class" />
      <Type Name="NEVpnProtocol" Kind="Class" />
      <Type Name="NEVpnProtocolIke2" Kind="Class" />
      <Type Name="NEVpnProtocolIpSec" Kind="Class" />
      <Type Name="NEVpnStatus" Kind="Enumeration" />
      <Type Name="NSMutableURLRequest_NEHotspotHelper" Kind="Class" />
      <Type Name="NWBonjourServiceEndpoint" Kind="Class" />
      <Type Name="NWEndpoint" Kind="Class" />
      <Type Name="NWHostEndpoint" Kind="Class" />
      <Type Name="NWPath" Kind="Class" />
      <Type Name="NWPathStatus" Kind="Enumeration" />
      <Type Name="NWTcpConnection" Kind="Class" />
      <Type Name="NWTcpConnectionAuthenticationDelegate" Kind="Class" />
      <Type Name="NWTcpConnectionAuthenticationDelegate_Extensions" Kind="Class" />
      <Type Name="NWTcpConnectionState" Kind="Enumeration" />
      <Type Name="NWTlsParameters" Kind="Class" />
      <Type Name="NWUdpSession" Kind="Class" />
      <Type Name="NWUdpSessionState" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.NewsstandKit">
      <Type Name="NKAssetDownload" Kind="Class" />
      <Type Name="NKIssue" Kind="Class" />
      <Type Name="NKIssue+Notifications" Kind="Class" />
      <Type Name="NKIssueContentStatus" Kind="Enumeration" />
      <Type Name="NKLibrary" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.NotificationCenter">
      <Type Name="INCWidgetProviding" Kind="Interface" />
      <Type Name="NCUpdateResult" Kind="Enumeration" />
      <Type Name="NCWidgetController" Kind="Class" />
      <Type Name="NCWidgetDisplayMode" Kind="Enumeration" />
      <Type Name="NCWidgetProviding" Kind="Class" />
      <Type Name="NCWidgetProviding_Extensions" Kind="Class" />
      <Type Name="NSExtensionContext_NCWidgetAdditions" Kind="Class" />
      <Type Name="UIVibrancyEffect_NotificationCenter" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.NUnit">
      <Type Name="NUnitOutputTextWriter" Kind="Class" />
      <Type Name="TcpTextWriter" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.NUnit.UI">
      <Type Name="BaseTouchRunner" Kind="Class" />
      <Type Name="ConsoleRunner" Kind="Class" />
      <Type Name="TouchOptions" Kind="Class" />
      <Type Name="TouchRunner" Kind="Class" />
      <Type Name="TouchViewController" Kind="Class" />
      <Type Name="XmlMode" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.ObjCRuntime">
      <Type Name="AdoptsAttribute" Kind="Class" />
      <Type Name="Arch" Kind="Enumeration" />
      <Type Name="ArgumentSemantic" Kind="Enumeration" />
      <Type Name="AvailabilityAttribute" Kind="Class" />
      <Type Name="AvailabilityBaseAttribute" Kind="Class" />
      <Type Name="AvailabilityKind" Kind="Enumeration" />
      <Type Name="BaseWrapper" Kind="Class" />
      <Type Name="BlockFlags" Kind="Enumeration" />
      <Type Name="BlockLiteral" Kind="Structure" />
      <Type Name="BlockProxyAttribute" Kind="Class" />
      <Type Name="CategoryAttribute" Kind="Class" />
      <Type Name="Class" Kind="Class" />
      <Type Name="DelegateProxyAttribute" Kind="Class" />
      <Type Name="DeprecatedAttribute" Kind="Class" />
      <Type Name="DesignatedInitializerAttribute" Kind="Class" />
      <Type Name="Dlfcn" Kind="Class" />
      <Type Name="Dlfcn+RTLD" Kind="Enumeration" />
      <Type Name="DlsymOption" Kind="Enumeration" />
      <Type Name="INativeObject" Kind="Interface" />
      <Type Name="IntroducedAttribute" Kind="Class" />
      <Type Name="iOSAttribute" Kind="Class" />
      <Type Name="LinkTarget" Kind="Enumeration" />
      <Type Name="LinkWithAttribute" Kind="Class" />
      <Type Name="MacAttribute" Kind="Class" />
      <Type Name="MarshalManagedExceptionEventArgs" Kind="Class" />
      <Type Name="MarshalManagedExceptionHandler" Kind="Delegate" />
      <Type Name="MarshalManagedExceptionMode" Kind="Enumeration" />
      <Type Name="MarshalObjectiveCExceptionEventArgs" Kind="Class" />
      <Type Name="MarshalObjectiveCExceptionHandler" Kind="Delegate" />
      <Type Name="MarshalObjectiveCExceptionMode" Kind="Enumeration" />
      <Type Name="NativeAttribute" Kind="Class" />
      <Type Name="ObsoletedAttribute" Kind="Class" />
      <Type Name="Platform" Kind="Enumeration" />
      <Type Name="PlatformArchitecture" Kind="Enumeration" />
      <Type Name="PlatformHelper" Kind="Class" />
      <Type Name="PlatformName" Kind="Enumeration" />
      <Type Name="Protocol" Kind="Class" />
      <Type Name="ReleaseAttribute" Kind="Class" />
      <Type Name="Runtime" Kind="Class" />
      <Type Name="Selector" Kind="Class" />
      <Type Name="ThreadSafeAttribute" Kind="Class" />
      <Type Name="TransientAttribute" Kind="Class" />
      <Type Name="TypeConverter" Kind="Class" />
      <Type Name="UnavailableAttribute" Kind="Class" />
      <Type Name="UserDelegateTypeAttribute" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.OpenGLES">
      <Type Name="EAGLColorFormat" Kind="Class" />
      <Type Name="EAGLContext" Kind="Class" />
      <Type Name="EAGLContext+PresentationMode" Kind="Enumeration" />
      <Type Name="EAGLDrawableProperty" Kind="Class" />
      <Type Name="EAGLRenderingAPI" Kind="Enumeration" />
      <Type Name="EAGLSharegroup" Kind="Class" />
      <Type Name="IEAGLDrawable" Kind="Interface" />
    </Namespace>
    <Namespace Name="MonoTouch.OpenTK">
      <Type Name="NMatrix2" Kind="Structure" />
      <Type Name="NMatrix3" Kind="Structure" />
      <Type Name="NMatrix4" Kind="Structure" />
      <Type Name="NMatrix4d" Kind="Structure" />
      <Type Name="NMatrix4x3" Kind="Structure" />
      <Type Name="NVector3" Kind="Structure" />
      <Type Name="NVector3d" Kind="Structure" />
    </Namespace>
    <Namespace Name="MonoTouch.PassKit">
      <Type Name="IPKAddPassesViewControllerDelegate" Kind="Interface" />
      <Type Name="IPKAddPaymentPassViewControllerDelegate" Kind="Interface" />
      <Type Name="IPKPaymentAuthorizationControllerDelegate" Kind="Interface" />
      <Type Name="IPKPaymentAuthorizationViewControllerDelegate" Kind="Interface" />
      <Type Name="PKAddPassButton" Kind="Class" />
      <Type Name="PKAddPassButton+PKAddPassButtonAppearance" Kind="Class" />
      <Type Name="PKAddPassButtonStyle" Kind="Enumeration" />
      <Type Name="PKAddPassesViewController" Kind="Class" />
      <Type Name="PKAddPassesViewControllerDelegate" Kind="Class" />
      <Type Name="PKAddPassesViewControllerDelegate_Extensions" Kind="Class" />
      <Type Name="PKAddPaymentPassError" Kind="Enumeration" />
      <Type Name="PKAddPaymentPassRequest" Kind="Class" />
      <Type Name="PKAddPaymentPassRequestConfiguration" Kind="Class" />
      <Type Name="PKAddPaymentPassViewController" Kind="Class" />
      <Type Name="PKAddPaymentPassViewControllerDelegate" Kind="Class" />
      <Type Name="PKAddressField" Kind="Enumeration" />
      <Type Name="PKAutomaticPassPresentationSuppressionResult" Kind="Enumeration" />
      <Type Name="PKContact" Kind="Class" />
      <Type Name="PKContactFields" Kind="Enumeration" />
      <Type Name="PKContactFieldsExtensions" Kind="Class" />
      <Type Name="PKEncryptionScheme" Kind="Class" />
      <Type Name="PKErrorCode" Kind="Enumeration" />
      <Type Name="PKLabeledValue" Kind="Class" />
      <Type Name="PKMerchantCapability" Kind="Enumeration" />
      <Type Name="PKObject" Kind="Class" />
      <Type Name="PKPass" Kind="Class" />
      <Type Name="PKPassKitErrorCode" Kind="Enumeration" />
      <Type Name="PKPassKitErrorCodeExtensions" Kind="Class" />
      <Type Name="PKPassLibrary" Kind="Class" />
      <Type Name="PKPassLibrary+Notifications" Kind="Class" />
      <Type Name="PKPassLibraryAddPassesStatus" Kind="Enumeration" />
      <Type Name="PKPassLibraryUserInfoKey" Kind="Class" />
      <Type Name="PKPassType" Kind="Enumeration" />
      <Type Name="PKPayment" Kind="Class" />
      <Type Name="PKPaymentAuthorizationController" Kind="Class" />
      <Type Name="PKPaymentAuthorizationControllerDelegate" Kind="Class" />
      <Type Name="PKPaymentAuthorizationControllerDelegate_Extensions" Kind="Class" />
      <Type Name="PKPaymentAuthorizationEventArgs" Kind="Class" />
      <Type Name="PKPaymentAuthorizationResult" Kind="Class" />
      <Type Name="PKPaymentAuthorizationResultEventArgs" Kind="Class" />
      <Type Name="PKPaymentAuthorizationStatus" Kind="Enumeration" />
      <Type Name="PKPaymentAuthorizationViewController" Kind="Class" />
      <Type Name="PKPaymentAuthorizationViewControllerDelegate" Kind="Class" />
      <Type Name="PKPaymentAuthorizationViewControllerDelegate_Extensions" Kind="Class" />
      <Type Name="PKPaymentButton" Kind="Class" />
      <Type Name="PKPaymentButton+PKPaymentButtonAppearance" Kind="Class" />
      <Type Name="PKPaymentButtonStyle" Kind="Enumeration" />
      <Type Name="PKPaymentButtonType" Kind="Enumeration" />
      <Type Name="PKPaymentErrorCode" Kind="Enumeration" />
      <Type Name="PKPaymentErrorCodeExtensions" Kind="Class" />
      <Type Name="PKPaymentErrorKeys" Kind="Class" />
      <Type Name="PKPaymentMethod" Kind="Class" />
      <Type Name="PKPaymentMethodSelectedEventArgs" Kind="Class" />
      <Type Name="PKPaymentMethodType" Kind="Enumeration" />
      <Type Name="PKPaymentNetwork" Kind="Class" />
      <Type Name="PKPaymentPass" Kind="Class" />
      <Type Name="PKPaymentPassActivationState" Kind="Enumeration" />
      <Type Name="PKPaymentRequest" Kind="Class" />
      <Type Name="PKPaymentRequestPaymentMethodUpdate" Kind="Class" />
      <Type Name="PKPaymentRequestPaymentMethodUpdateEventArgs" Kind="Class" />
      <Type Name="PKPaymentRequestShippingContactUpdate" Kind="Class" />
      <Type Name="PKPaymentRequestShippingContactUpdateEventArgs" Kind="Class" />
      <Type Name="PKPaymentRequestShippingMethodUpdate" Kind="Class" />
      <Type Name="PKPaymentRequestShippingMethodUpdateEventArgs" Kind="Class" />
      <Type Name="PKPaymentRequestUpdate" Kind="Class" />
      <Type Name="PKPaymentSelectedContactEventArgs" Kind="Class" />
      <Type Name="PKPaymentShippingAddressSelected" Kind="Delegate" />
      <Type Name="PKPaymentShippingAddressSelectedEventArgs" Kind="Class" />
      <Type Name="PKPaymentShippingMethodSelected" Kind="Delegate" />
      <Type Name="PKPaymentShippingMethodSelectedEventArgs" Kind="Class" />
      <Type Name="PKPaymentSummaryItem" Kind="Class" />
      <Type Name="PKPaymentSummaryItemType" Kind="Enumeration" />
      <Type Name="PKPaymentToken" Kind="Class" />
      <Type Name="PKShippingMethod" Kind="Class" />
      <Type Name="PKShippingType" Kind="Enumeration" />
      <Type Name="PKSuicaPassProperties" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.PdfKit">
      <Type Name="ClassForAnnotationTypeDelegate" Kind="Delegate" />
      <Type Name="IPdfDocumentDelegate" Kind="Interface" />
      <Type Name="IPdfViewDelegate" Kind="Interface" />
      <Type Name="PdfAction" Kind="Class" />
      <Type Name="PdfActionGoTo" Kind="Class" />
      <Type Name="PdfActionNamed" Kind="Class" />
      <Type Name="PdfActionNamedName" Kind="Enumeration" />
      <Type Name="PdfActionRemoteGoTo" Kind="Class" />
      <Type Name="PdfActionResetForm" Kind="Class" />
      <Type Name="PdfActionUrl" Kind="Class" />
      <Type Name="PdfAnnotation" Kind="Class" />
      <Type Name="PdfAnnotationHighlightingMode" Kind="Enumeration" />
      <Type Name="PdfAnnotationHighlightingModeExtensions" Kind="Class" />
      <Type Name="PdfAnnotationKey" Kind="Enumeration" />
      <Type Name="PdfAnnotationKeyExtensions" Kind="Class" />
      <Type Name="PdfAnnotationLineEndingStyle" Kind="Enumeration" />
      <Type Name="PdfAnnotationLineEndingStyleExtensions" Kind="Class" />
      <Type Name="PdfAnnotationSubtype" Kind="Enumeration" />
      <Type Name="PdfAnnotationSubtypeExtensions" Kind="Class" />
      <Type Name="PdfAnnotationTextIconType" Kind="Enumeration" />
      <Type Name="PdfAnnotationTextIconTypeExtensions" Kind="Class" />
      <Type Name="PdfAnnotationWidgetSubtype" Kind="Enumeration" />
      <Type Name="PdfAnnotationWidgetSubtypeExtensions" Kind="Class" />
      <Type Name="PdfAppearanceCharacteristics" Kind="Class" />
      <Type Name="PdfAppearanceCharacteristicsKeys" Kind="Class" />
      <Type Name="PdfAreaOfInterest" Kind="Enumeration" />
      <Type Name="PdfBorder" Kind="Class" />
      <Type Name="PdfBorderKeys" Kind="Class" />
      <Type Name="PdfBorderStyle" Kind="Enumeration" />
      <Type Name="PdfDestination" Kind="Class" />
      <Type Name="PdfDisplayBox" Kind="Enumeration" />
      <Type Name="PdfDisplayDirection" Kind="Enumeration" />
      <Type Name="PdfDisplayMode" Kind="Enumeration" />
      <Type Name="PdfDocument" Kind="Class" />
      <Type Name="PdfDocument+Notifications" Kind="Class" />
      <Type Name="PdfDocumentAttributes" Kind="Class" />
      <Type Name="PdfDocumentDelegate" Kind="Class" />
      <Type Name="PdfDocumentDelegate_Extensions" Kind="Class" />
      <Type Name="PdfDocumentPermissions" Kind="Enumeration" />
      <Type Name="PdfDocumentWriteOptions" Kind="Class" />
      <Type Name="PdfInterpolationQuality" Kind="Enumeration" />
      <Type Name="PdfLineStyle" Kind="Enumeration" />
      <Type Name="PdfMarkupType" Kind="Enumeration" />
      <Type Name="PdfOutline" Kind="Class" />
      <Type Name="PdfPage" Kind="Class" />
      <Type Name="PdfPrintScalingMode" Kind="Enumeration" />
      <Type Name="PdfSelection" Kind="Class" />
      <Type Name="PdfTextAnnotationIconType" Kind="Enumeration" />
      <Type Name="PdfThumbnailLayoutMode" Kind="Enumeration" />
      <Type Name="PdfThumbnailView" Kind="Class" />
      <Type Name="PdfThumbnailView+Notifications" Kind="Class" />
      <Type Name="PdfThumbnailView+PdfThumbnailViewAppearance" Kind="Class" />
      <Type Name="PdfView" Kind="Class" />
      <Type Name="PdfView+Notifications" Kind="Class" />
      <Type Name="PdfView+PdfViewAppearance" Kind="Class" />
      <Type Name="PdfViewActionEventArgs" Kind="Class" />
      <Type Name="PdfViewAnnotationHitEventArgs" Kind="Class" />
      <Type Name="PdfViewDelegate" Kind="Class" />
      <Type Name="PdfViewDelegate_Extensions" Kind="Class" />
      <Type Name="PdfViewUrlEventArgs" Kind="Class" />
      <Type Name="PdfWidgetCellState" Kind="Enumeration" />
      <Type Name="PdfWidgetControlType" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.Photos">
      <Type Name="IPHLivePhotoFrame" Kind="Interface" />
      <Type Name="IPHPhotoLibraryChangeObserver" Kind="Interface" />
      <Type Name="PHAdjustmentData" Kind="Class" />
      <Type Name="PHAsset" Kind="Class" />
      <Type Name="PHAssetBurstSelectionType" Kind="Enumeration" />
      <Type Name="PHAssetChangeRequest" Kind="Class" />
      <Type Name="PHAssetCollection" Kind="Class" />
      <Type Name="PHAssetCollectionChangeRequest" Kind="Class" />
      <Type Name="PHAssetCollectionSubtype" Kind="Enumeration" />
      <Type Name="PHAssetCollectionType" Kind="Enumeration" />
      <Type Name="PHAssetContentEditingInputExtensions" Kind="Class" />
      <Type Name="PHAssetCreationRequest" Kind="Class" />
      <Type Name="PHAssetEditOperation" Kind="Enumeration" />
      <Type Name="PHAssetImageProgressHandler" Kind="Delegate" />
      <Type Name="PHAssetMediaSubtype" Kind="Enumeration" />
      <Type Name="PHAssetMediaType" Kind="Enumeration" />
      <Type Name="PHAssetPlaybackStyle" Kind="Enumeration" />
      <Type Name="PHAssetResource" Kind="Class" />
      <Type Name="PHAssetResourceCreationOptions" Kind="Class" />
      <Type Name="PHAssetResourceManager" Kind="Class" />
      <Type Name="PHAssetResourceRequestOptions" Kind="Class" />
      <Type Name="PHAssetResourceType" Kind="Enumeration" />
      <Type Name="PHAssetSourceType" Kind="Enumeration" />
      <Type Name="PHAssetVideoProgressHandler" Kind="Delegate" />
      <Type Name="PHAuthorizationStatus" Kind="Enumeration" />
      <Type Name="PHCachingImageManager" Kind="Class" />
      <Type Name="PHChange" Kind="Class" />
      <Type Name="PHChangeDetailEnumerator" Kind="Delegate" />
      <Type Name="PHCollection" Kind="Class" />
      <Type Name="PHCollectionEditOperation" Kind="Enumeration" />
      <Type Name="PHCollectionList" Kind="Class" />
      <Type Name="PHCollectionListChangeRequest" Kind="Class" />
      <Type Name="PHCollectionListSubtype" Kind="Enumeration" />
      <Type Name="PHCollectionListType" Kind="Enumeration" />
      <Type Name="PHContentEditingHandler" Kind="Delegate" />
      <Type Name="PHContentEditingInput" Kind="Class" />
      <Type Name="PHContentEditingInputRequestOptions" Kind="Class" />
      <Type Name="PHContentEditingOutput" Kind="Class" />
      <Type Name="PHFetchOptions" Kind="Class" />
      <Type Name="PHFetchResult" Kind="Class" />
      <Type Name="PHFetchResultChangeDetails" Kind="Class" />
      <Type Name="PHFetchResultEnumerator" Kind="Delegate" />
      <Type Name="PHImageContentMode" Kind="Enumeration" />
      <Type Name="PHImageDataHandler" Kind="Delegate" />
      <Type Name="PHImageKeys" Kind="Class" />
      <Type Name="PHImageManager" Kind="Class" />
      <Type Name="PHImageManagerRequestAvAssetHandler" Kind="Delegate" />
      <Type Name="PHImageManagerRequestExportHandler" Kind="Delegate" />
      <Type Name="PHImageManagerRequestLivePhoto" Kind="Delegate" />
      <Type Name="PHImageManagerRequestPlayerHandler" Kind="Delegate" />
      <Type Name="PHImageRequestOptions" Kind="Class" />
      <Type Name="PHImageRequestOptionsDeliveryMode" Kind="Enumeration" />
      <Type Name="PHImageRequestOptionsResizeMode" Kind="Enumeration" />
      <Type Name="PHImageRequestOptionsVersion" Kind="Enumeration" />
      <Type Name="PHImageResultHandler" Kind="Delegate" />
      <Type Name="PHLivePhoto" Kind="Class" />
      <Type Name="PHLivePhotoEditingContext" Kind="Class" />
      <Type Name="PHLivePhotoEditingOption" Kind="Class" />
      <Type Name="PHLivePhotoFrameProcessingBlock" Kind="Delegate" />
      <Type Name="PHLivePhotoFrameType" Kind="Enumeration" />
      <Type Name="PHLivePhotoInfo" Kind="Class" />
      <Type Name="PHLivePhotoRequestOptions" Kind="Class" />
      <Type Name="PHObject" Kind="Class" />
      <Type Name="PHObjectChangeDetails" Kind="Class" />
      <Type Name="PHObjectPlaceholder" Kind="Class" />
      <Type Name="PHPhotoLibrary" Kind="Class" />
      <Type Name="PHPhotoLibraryChangeObserver" Kind="Class" />
      <Type Name="PHProgressHandler" Kind="Delegate" />
      <Type Name="PHVideoRequestOptions" Kind="Class" />
      <Type Name="PHVideoRequestOptionsDeliveryMode" Kind="Enumeration" />
      <Type Name="PHVideoRequestOptionsVersion" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.PhotosUI">
      <Type Name="IPHContentEditingController" Kind="Interface" />
      <Type Name="IPHLivePhotoViewDelegate" Kind="Interface" />
      <Type Name="PHContentEditingController" Kind="Class" />
      <Type Name="PHLivePhotoBadgeOptions" Kind="Enumeration" />
      <Type Name="PHLivePhotoView" Kind="Class" />
      <Type Name="PHLivePhotoView+PHLivePhotoViewAppearance" Kind="Class" />
      <Type Name="PHLivePhotoViewDelegate" Kind="Class" />
      <Type Name="PHLivePhotoViewDelegate_Extensions" Kind="Class" />
      <Type Name="PHLivePhotoViewPlaybackStyle" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.PushKit">
      <Type Name="IPKPushRegistryDelegate" Kind="Interface" />
      <Type Name="PKPushCredentials" Kind="Class" />
      <Type Name="PKPushPayload" Kind="Class" />
      <Type Name="PKPushRegistry" Kind="Class" />
      <Type Name="PKPushRegistryDelegate" Kind="Class" />
      <Type Name="PKPushRegistryDelegate_Extensions" Kind="Class" />
      <Type Name="PKPushType" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.QuickLook">
      <Type Name="IQLPreviewControllerDataSource" Kind="Interface" />
      <Type Name="IQLPreviewControllerDelegate" Kind="Interface" />
      <Type Name="IQLPreviewingController" Kind="Interface" />
      <Type Name="IQLPreviewItem" Kind="Interface" />
      <Type Name="QLFileThumbnailRequest" Kind="Class" />
      <Type Name="QLFrame" Kind="Delegate" />
      <Type Name="QLOpenUrl" Kind="Delegate" />
      <Type Name="QLPreviewController" Kind="Class" />
      <Type Name="QLPreviewControllerDataSource" Kind="Class" />
      <Type Name="QLPreviewControllerDelegate" Kind="Class" />
      <Type Name="QLPreviewControllerDelegate_Extensions" Kind="Class" />
      <Type Name="QLPreviewingController_Extensions" Kind="Class" />
      <Type Name="QLPreviewItem" Kind="Class" />
      <Type Name="QLThumbnailProvider" Kind="Class" />
      <Type Name="QLThumbnailReply" Kind="Class" />
      <Type Name="QLTransition" Kind="Delegate" />
      <Type Name="QLTransitionView" Kind="Delegate" />
    </Namespace>
    <Namespace Name="MonoTouch.ReplayKit">
      <Type Name="IRPBroadcastActivityViewControllerDelegate" Kind="Interface" />
      <Type Name="IRPBroadcastControllerDelegate" Kind="Interface" />
      <Type Name="IRPPreviewViewControllerDelegate" Kind="Interface" />
      <Type Name="IRPScreenRecorderDelegate" Kind="Interface" />
      <Type Name="LoadBroadcastingHandler" Kind="Delegate" />
      <Type Name="NSExtensionContext_RPBroadcastExtension" Kind="Class" />
      <Type Name="RPBroadcastActivityViewController" Kind="Class" />
      <Type Name="RPBroadcastActivityViewControllerDelegate" Kind="Class" />
      <Type Name="RPBroadcastConfiguration" Kind="Class" />
      <Type Name="RPBroadcastController" Kind="Class" />
      <Type Name="RPBroadcastControllerDelegate" Kind="Class" />
      <Type Name="RPBroadcastControllerDelegate_Extensions" Kind="Class" />
      <Type Name="RPBroadcastHandler" Kind="Class" />
      <Type Name="RPBroadcastMP4ClipHandler" Kind="Class" />
      <Type Name="RPBroadcastSampleHandler" Kind="Class" />
      <Type Name="RPCameraPosition" Kind="Enumeration" />
      <Type Name="RPPreviewViewController" Kind="Class" />
      <Type Name="RPPreviewViewControllerDelegate" Kind="Class" />
      <Type Name="RPPreviewViewControllerDelegate_Extensions" Kind="Class" />
      <Type Name="RPRecordingError" Kind="Enumeration" />
      <Type Name="RPRecordingErrorExtensions" Kind="Class" />
      <Type Name="RPSampleBufferType" Kind="Enumeration" />
      <Type Name="RPScreenRecorder" Kind="Class" />
      <Type Name="RPScreenRecorderDelegate" Kind="Class" />
      <Type Name="RPScreenRecorderDelegate_Extensions" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.SafariServices">
      <Type Name="ISFSafariViewControllerDelegate" Kind="Interface" />
      <Type Name="SFAuthenticationCompletionHandler" Kind="Delegate" />
      <Type Name="SFAuthenticationError" Kind="Enumeration" />
      <Type Name="SFAuthenticationErrorExtensions" Kind="Class" />
      <Type Name="SFAuthenticationSession" Kind="Class" />
      <Type Name="SFContentBlockerErrorCode" Kind="Enumeration" />
      <Type Name="SFContentBlockerErrorCodeExtensions" Kind="Class" />
      <Type Name="SFContentBlockerManager" Kind="Class" />
      <Type Name="SFContentBlockerState" Kind="Class" />
      <Type Name="SFErrorCode" Kind="Enumeration" />
      <Type Name="SFErrorCodeExtensions" Kind="Class" />
      <Type Name="SFSafariViewController" Kind="Class" />
      <Type Name="SFSafariViewControllerConfiguration" Kind="Class" />
      <Type Name="SFSafariViewControllerDelegate" Kind="Class" />
      <Type Name="SFSafariViewControllerDelegate_Extensions" Kind="Class" />
      <Type Name="SFSafariViewControllerDismissButtonStyle" Kind="Enumeration" />
      <Type Name="SSReadingList" Kind="Class" />
      <Type Name="SSReadingListError" Kind="Enumeration" />
      <Type Name="SSReadingListErrorExtensions" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.SceneKit">
      <Type Name="_SCNShaderModifiers" Kind="Class" />
      <Type Name="ISCNActionable" Kind="Interface" />
      <Type Name="ISCNAnimatable" Kind="Interface" />
      <Type Name="ISCNAnimationProtocol" Kind="Interface" />
      <Type Name="ISCNBoundingVolume" Kind="Interface" />
      <Type Name="ISCNBufferStream" Kind="Interface" />
      <Type Name="ISCNCameraControlConfiguration" Kind="Interface" />
      <Type Name="ISCNCameraControllerDelegate" Kind="Interface" />
      <Type Name="ISCNNodeRendererDelegate" Kind="Interface" />
      <Type Name="ISCNPhysicsContactDelegate" Kind="Interface" />
      <Type Name="ISCNProgramDelegate" Kind="Interface" />
      <Type Name="ISCNSceneExportDelegate" Kind="Interface" />
      <Type Name="ISCNSceneRenderer" Kind="Interface" />
      <Type Name="ISCNSceneRendererDelegate" Kind="Interface" />
      <Type Name="ISCNShadable" Kind="Interface" />
      <Type Name="ISCNTechniqueSupport" Kind="Interface" />
      <Type Name="SCNAction" Kind="Class" />
      <Type Name="SCNActionable" Kind="Class" />
      <Type Name="SCNActionable_Extensions" Kind="Class" />
      <Type Name="SCNActionNodeWithElapsedTimeHandler" Kind="Delegate" />
      <Type Name="SCNActionTimingMode" Kind="Enumeration" />
      <Type Name="SCNAnimatable" Kind="Class" />
      <Type Name="SCNAnimatable_Extensions" Kind="Class" />
      <Type Name="SCNAnimation" Kind="Class" />
      <Type Name="SCNAnimationDidStartHandler" Kind="Delegate" />
      <Type Name="SCNAnimationDidStopHandler" Kind="Delegate" />
      <Type Name="SCNAnimationEvent" Kind="Class" />
      <Type Name="SCNAnimationEventHandler" Kind="Delegate" />
      <Type Name="SCNAnimationImportPolicy" Kind="Enumeration" />
      <Type Name="SCNAnimationPlayer" Kind="Class" />
      <Type Name="SCNAntialiasingMode" Kind="Enumeration" />
      <Type Name="SCNAudioPlayer" Kind="Class" />
      <Type Name="SCNAudioSource" Kind="Class" />
      <Type Name="SCNBillboardAxis" Kind="Enumeration" />
      <Type Name="SCNBillboardConstraint" Kind="Class" />
      <Type Name="SCNBindingHandler" Kind="Delegate" />
      <Type Name="SCNBlendMode" Kind="Enumeration" />
      <Type Name="SCNBoundingVolume" Kind="Class" />
      <Type Name="SCNBox" Kind="Class" />
      <Type Name="SCNBufferBindingHandler" Kind="Delegate" />
      <Type Name="SCNBufferFrequency" Kind="Enumeration" />
      <Type Name="SCNCamera" Kind="Class" />
      <Type Name="SCNCameraController" Kind="Class" />
      <Type Name="SCNCameraControllerDelegate" Kind="Class" />
      <Type Name="SCNCameraControllerDelegate_Extensions" Kind="Class" />
      <Type Name="SCNCameraProjectionDirection" Kind="Enumeration" />
      <Type Name="SCNCapsule" Kind="Class" />
      <Type Name="SCNChamferMode" Kind="Enumeration" />
      <Type Name="SCNColorMask" Kind="Enumeration" />
      <Type Name="SCNCone" Kind="Class" />
      <Type Name="SCNConstraint" Kind="Class" />
      <Type Name="SCNCullMode" Kind="Enumeration" />
      <Type Name="SCNCylinder" Kind="Class" />
      <Type Name="SCNDebugOptions" Kind="Enumeration" />
      <Type Name="SCNErrorCode" Kind="Enumeration" />
      <Type Name="SCNErrorCodeExtensions" Kind="Class" />
      <Type Name="SCNFieldForceEvaluator" Kind="Delegate" />
      <Type Name="SCNFillMode" Kind="Enumeration" />
      <Type Name="SCNFilterMode" Kind="Enumeration" />
      <Type Name="SCNFloor" Kind="Class" />
      <Type Name="SCNGeometry" Kind="Class" />
      <Type Name="SCNGeometryElement" Kind="Class" />
      <Type Name="SCNGeometryPrimitiveType" Kind="Enumeration" />
      <Type Name="SCNGeometrySource" Kind="Class" />
      <Type Name="SCNGeometrySourceSemantic" Kind="Class" />
      <Type Name="SCNGeometrySourceSemantics" Kind="Enumeration" />
      <Type Name="SCNGeometryTessellator" Kind="Class" />
      <Type Name="SCNHitTest" Kind="Class" />
      <Type Name="SCNHitTestOptions" Kind="Class" />
      <Type Name="SCNHitTestResult" Kind="Class" />
      <Type Name="SCNHitTestSearchMode" Kind="Enumeration" />
      <Type Name="SCNIKConstraint" Kind="Class" />
      <Type Name="SCNInteractionMode" Kind="Enumeration" />
      <Type Name="SCNJavaScript" Kind="Class" />
      <Type Name="SCNLevelOfDetail" Kind="Class" />
      <Type Name="SCNLight" Kind="Class" />
      <Type Name="SCNLightingModel" Kind="Class" />
      <Type Name="SCNLightType" Kind="Class" />
      <Type Name="SCNLookAtConstraint" Kind="Class" />
      <Type Name="SCNMaterial" Kind="Class" />
      <Type Name="SCNMaterialProperty" Kind="Class" />
      <Type Name="SCNMatrix4" Kind="Structure" />
      <Type Name="SCNMorpher" Kind="Class" />
      <Type Name="SCNMorpherCalculationMode" Kind="Enumeration" />
      <Type Name="SCNMovabilityHint" Kind="Enumeration" />
      <Type Name="SCNNode" Kind="Class" />
      <Type Name="SCNNodeFocusBehavior" Kind="Enumeration" />
      <Type Name="SCNNodeHandler" Kind="Delegate" />
      <Type Name="SCNNodePredicate" Kind="Delegate" />
      <Type Name="SCNNodeRendererDelegate" Kind="Class" />
      <Type Name="SCNNodeRendererDelegate_Extensions" Kind="Class" />
      <Type Name="SCNParticleBirthDirection" Kind="Enumeration" />
      <Type Name="SCNParticleBirthLocation" Kind="Enumeration" />
      <Type Name="SCNParticleBlendMode" Kind="Enumeration" />
      <Type Name="SCNParticleEvent" Kind="Enumeration" />
      <Type Name="SCNParticleEventHandler" Kind="Delegate" />
      <Type Name="SCNParticleImageSequenceAnimationMode" Kind="Enumeration" />
      <Type Name="SCNParticleInputMode" Kind="Enumeration" />
      <Type Name="SCNParticleModifierHandler" Kind="Delegate" />
      <Type Name="SCNParticleModifierStage" Kind="Enumeration" />
      <Type Name="SCNParticleOrientationMode" Kind="Enumeration" />
      <Type Name="SCNParticleProperty" Kind="Class" />
      <Type Name="SCNParticlePropertyController" Kind="Class" />
      <Type Name="SCNParticleSortingMode" Kind="Enumeration" />
      <Type Name="SCNParticleSystem" Kind="Class" />
      <Type Name="SCNPhysicsBallSocketJoint" Kind="Class" />
      <Type Name="SCNPhysicsBehavior" Kind="Class" />
      <Type Name="SCNPhysicsBody" Kind="Class" />
      <Type Name="SCNPhysicsBodyType" Kind="Enumeration" />
      <Type Name="SCNPhysicsCollisionCategory" Kind="Enumeration" />
      <Type Name="SCNPhysicsContact" Kind="Class" />
      <Type Name="SCNPhysicsContactDelegate" Kind="Class" />
      <Type Name="SCNPhysicsContactDelegate_Extensions" Kind="Class" />
      <Type Name="SCNPhysicsContactEventArgs" Kind="Class" />
      <Type Name="SCNPhysicsField" Kind="Class" />
      <Type Name="SCNPhysicsFieldScope" Kind="Enumeration" />
      <Type Name="SCNPhysicsHingeJoint" Kind="Class" />
      <Type Name="SCNPhysicsSearchMode" Kind="Enumeration" />
      <Type Name="SCNPhysicsShape" Kind="Class" />
      <Type Name="SCNPhysicsShapeOptions" Kind="Class" />
      <Type Name="SCNPhysicsShapeOptionsKeys" Kind="Class" />
      <Type Name="SCNPhysicsShapeOptionsTypes" Kind="Class" />
      <Type Name="SCNPhysicsShapeType" Kind="Enumeration" />
      <Type Name="SCNPhysicsSliderJoint" Kind="Class" />
      <Type Name="SCNPhysicsTest" Kind="Class" />
      <Type Name="SCNPhysicsTestKeys" Kind="Class" />
      <Type Name="SCNPhysicsTestSearchModeKeys" Kind="Class" />
      <Type Name="SCNPhysicsVehicle" Kind="Class" />
      <Type Name="SCNPhysicsVehicleWheel" Kind="Class" />
      <Type Name="SCNPhysicsWorld" Kind="Class" />
      <Type Name="SCNPlane" Kind="Class" />
      <Type Name="SCNProgram" Kind="Class" />
      <Type Name="SCNProgramDelegate" Kind="Class" />
      <Type Name="SCNProgramDelegate_Extensions" Kind="Class" />
      <Type Name="SCNProgramSemanticOptions" Kind="Class" />
      <Type Name="SCNPropertyControllers" Kind="Class" />
      <Type Name="SCNPyramid" Kind="Class" />
      <Type Name="SCNQuaternion" Kind="Structure" />
      <Type Name="SCNReferenceLoadingPolicy" Kind="Enumeration" />
      <Type Name="SCNReferenceNode" Kind="Class" />
      <Type Name="SCNRenderer" Kind="Class" />
      <Type Name="SCNRenderingApi" Kind="Enumeration" />
      <Type Name="SCNRenderingArguments" Kind="Class" />
      <Type Name="SCNRenderingOptions" Kind="Class" />
      <Type Name="SCNScene" Kind="Class" />
      <Type Name="SCNSceneExportDelegate" Kind="Class" />
      <Type Name="SCNSceneExportDelegate_Extensions" Kind="Class" />
      <Type Name="SCNSceneExportProgressHandler" Kind="Delegate" />
      <Type Name="SCNSceneLoadingOptions" Kind="Class" />
      <Type Name="SCNSceneRenderer" Kind="Class" />
      <Type Name="SCNSceneRenderer_Extensions" Kind="Class" />
      <Type Name="SCNSceneRendererDelegate" Kind="Class" />
      <Type Name="SCNSceneRendererDelegate_Extensions" Kind="Class" />
      <Type Name="SCNSceneSource" Kind="Class" />
      <Type Name="SCNSceneSourceFilter" Kind="Delegate" />
      <Type Name="SCNSceneSourceLoadErrors" Kind="Class" />
      <Type Name="SCNSceneSourceLoading" Kind="Class" />
      <Type Name="SCNSceneSourceProperties" Kind="Class" />
      <Type Name="SCNSceneSourceStatus" Kind="Enumeration" />
      <Type Name="SCNSceneSourceStatusHandler" Kind="Delegate" />
      <Type Name="SCNShadable" Kind="Class" />
      <Type Name="SCNShadable_Extensions" Kind="Class" />
      <Type Name="SCNShaderModifiers" Kind="Class" />
      <Type Name="SCNShadowMode" Kind="Enumeration" />
      <Type Name="SCNShape" Kind="Class" />
      <Type Name="SCNSkinner" Kind="Class" />
      <Type Name="SCNSphere" Kind="Class" />
      <Type Name="SCNTechnique" Kind="Class" />
      <Type Name="SCNTechniqueSupport" Kind="Class" />
      <Type Name="SCNTessellationSmoothingMode" Kind="Enumeration" />
      <Type Name="SCNText" Kind="Class" />
      <Type Name="SCNTimingFunction" Kind="Class" />
      <Type Name="SCNTorus" Kind="Class" />
      <Type Name="SCNTransaction" Kind="Class" />
      <Type Name="SCNTransformConstraint" Kind="Class" />
      <Type Name="SCNTransformConstraintHandler" Kind="Delegate" />
      <Type Name="SCNTransparencyMode" Kind="Enumeration" />
      <Type Name="SCNTube" Kind="Class" />
      <Type Name="SCNVector3" Kind="Structure" />
      <Type Name="SCNVector4" Kind="Structure" />
      <Type Name="SCNView" Kind="Class" />
      <Type Name="SCNView+SCNViewAppearance" Kind="Class" />
      <Type Name="SCNWrapMode" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.Security">
      <Type Name="SecAccessControl" Kind="Class" />
      <Type Name="SecAccessControlCreateFlags" Kind="Enumeration" />
      <Type Name="SecAccessible" Kind="Enumeration" />
      <Type Name="SecAuthenticationType" Kind="Enumeration" />
      <Type Name="SecAuthenticationUI" Kind="Enumeration" />
      <Type Name="SecAuthenticationUIExtensions" Kind="Class" />
      <Type Name="SecCertificate" Kind="Class" />
      <Type Name="SecIdentity" Kind="Class" />
      <Type Name="SecImportExport" Kind="Class" />
      <Type Name="SecKey" Kind="Class" />
      <Type Name="SecKeyAlgorithm" Kind="Enumeration" />
      <Type Name="SecKeyAlgorithmExtensions" Kind="Class" />
      <Type Name="SecKeyChain" Kind="Class" />
      <Type Name="SecKeyClass" Kind="Enumeration" />
      <Type Name="SecKeyClassExtensions" Kind="Class" />
      <Type Name="SecKeyKeyExchangeParameter" Kind="Class" />
      <Type Name="SecKeyOperationType" Kind="Enumeration" />
      <Type Name="SecKeyType" Kind="Enumeration" />
      <Type Name="SecKeyTypeExtensions" Kind="Class" />
      <Type Name="SecKind" Kind="Enumeration" />
      <Type Name="SecMatchLimit" Kind="Class" />
      <Type Name="SecPadding" Kind="Enumeration" />
      <Type Name="SecPolicy" Kind="Class" />
      <Type Name="SecPolicyIdentifier" Kind="Class" />
      <Type Name="SecPolicyPropertyKey" Kind="Class" />
      <Type Name="SecProtocol" Kind="Enumeration" />
      <Type Name="SecRecord" Kind="Class" />
      <Type Name="SecRevocation" Kind="Enumeration" />
      <Type Name="SecSharedCredential" Kind="Class" />
      <Type Name="SecStatusCode" Kind="Enumeration" />
      <Type Name="SecTokenID" Kind="Enumeration" />
      <Type Name="SecTokenIDExtensions" Kind="Class" />
      <Type Name="SecTrust" Kind="Class" />
      <Type Name="SecTrustPropertyKey" Kind="Class" />
      <Type Name="SecTrustResult" Kind="Enumeration" />
      <Type Name="SecTrustResultKey" Kind="Class" />
      <Type Name="SecurityException" Kind="Class" />
      <Type Name="SslAuthenticate" Kind="Enumeration" />
      <Type Name="SslCipherSuite" Kind="Enumeration" />
      <Type Name="SslClientCertificateState" Kind="Enumeration" />
      <Type Name="SslConnection" Kind="Class" />
      <Type Name="SslConnectionType" Kind="Enumeration" />
      <Type Name="SslContext" Kind="Class" />
      <Type Name="SslProtocol" Kind="Enumeration" />
      <Type Name="SslProtocolSide" Kind="Enumeration" />
      <Type Name="SslSessionConfig" Kind="Enumeration" />
      <Type Name="SslSessionConfigExtensions" Kind="Class" />
      <Type Name="SslSessionOption" Kind="Enumeration" />
      <Type Name="SslSessionState" Kind="Enumeration" />
      <Type Name="SslSessionStrengthPolicy" Kind="Enumeration" />
      <Type Name="SslStatus" Kind="Enumeration" />
      <Type Name="SslStreamConnection" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.Social">
      <Type Name="SLComposeServiceViewController" Kind="Class" />
      <Type Name="SLComposeSheetConfigurationItem" Kind="Class" />
      <Type Name="SLComposeViewController" Kind="Class" />
      <Type Name="SLComposeViewControllerResult" Kind="Enumeration" />
      <Type Name="SLRequest" Kind="Class" />
      <Type Name="SLRequestMethod" Kind="Enumeration" />
      <Type Name="SLRequestResult" Kind="Class" />
      <Type Name="SLServiceKind" Kind="Enumeration" />
      <Type Name="SLServiceType" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.Speech">
      <Type Name="ISFSpeechRecognitionTaskDelegate" Kind="Interface" />
      <Type Name="ISFSpeechRecognizerDelegate" Kind="Interface" />
      <Type Name="SFSpeechAudioBufferRecognitionRequest" Kind="Class" />
      <Type Name="SFSpeechRecognitionRequest" Kind="Class" />
      <Type Name="SFSpeechRecognitionResult" Kind="Class" />
      <Type Name="SFSpeechRecognitionTask" Kind="Class" />
      <Type Name="SFSpeechRecognitionTaskDelegate" Kind="Class" />
      <Type Name="SFSpeechRecognitionTaskDelegate_Extensions" Kind="Class" />
      <Type Name="SFSpeechRecognitionTaskHint" Kind="Enumeration" />
      <Type Name="SFSpeechRecognitionTaskState" Kind="Enumeration" />
      <Type Name="SFSpeechRecognizer" Kind="Class" />
      <Type Name="SFSpeechRecognizerAuthorizationStatus" Kind="Enumeration" />
      <Type Name="SFSpeechRecognizerDelegate" Kind="Class" />
      <Type Name="SFSpeechRecognizerDelegate_Extensions" Kind="Class" />
      <Type Name="SFSpeechUrlRecognitionRequest" Kind="Class" />
      <Type Name="SFTranscription" Kind="Class" />
      <Type Name="SFTranscriptionSegment" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.SpriteKit">
      <Type Name="ISKPhysicsContactDelegate" Kind="Interface" />
      <Type Name="ISKSceneDelegate" Kind="Interface" />
      <Type Name="ISKViewDelegate" Kind="Interface" />
      <Type Name="ISKWarpable" Kind="Interface" />
      <Type Name="SK3DNode" Kind="Class" />
      <Type Name="SKAction" Kind="Class" />
      <Type Name="SKActionDurationHandler" Kind="Delegate" />
      <Type Name="SKActionTimingFunction" Kind="Delegate" />
      <Type Name="SKActionTimingMode" Kind="Enumeration" />
      <Type Name="SKAttribute" Kind="Class" />
      <Type Name="SKAttributeType" Kind="Enumeration" />
      <Type Name="SKAttributeValue" Kind="Class" />
      <Type Name="SKAudioNode" Kind="Class" />
      <Type Name="SKBlendMode" Kind="Enumeration" />
      <Type Name="SKCameraNode" Kind="Class" />
      <Type Name="SKConstraint" Kind="Class" />
      <Type Name="SKCropNode" Kind="Class" />
      <Type Name="SKEffectNode" Kind="Class" />
      <Type Name="SKEmitterNode" Kind="Class" />
      <Type Name="SKFieldForceEvaluator" Kind="Delegate" />
      <Type Name="SKFieldNode" Kind="Class" />
      <Type Name="SKInterpolationMode" Kind="Enumeration" />
      <Type Name="SKKeyframeSequence" Kind="Class" />
      <Type Name="SKLabelHorizontalAlignmentMode" Kind="Enumeration" />
      <Type Name="SKLabelNode" Kind="Class" />
      <Type Name="SKLabelVerticalAlignmentMode" Kind="Enumeration" />
      <Type Name="SKLightNode" Kind="Class" />
      <Type Name="SKMutableTexture" Kind="Class" />
      <Type Name="SKNode" Kind="Class" />
      <Type Name="SKNodeChildEnumeratorHandler" Kind="Delegate" />
      <Type Name="SKNodeFocusBehavior" Kind="Enumeration" />
      <Type Name="SKNodeTouches_UITouch" Kind="Class" />
      <Type Name="SKParticleRenderOrder" Kind="Enumeration" />
      <Type Name="SKPhysicsBody" Kind="Class" />
      <Type Name="SKPhysicsContact" Kind="Class" />
      <Type Name="SKPhysicsContactDelegate" Kind="Class" />
      <Type Name="SKPhysicsContactDelegate_Extensions" Kind="Class" />
      <Type Name="SKPhysicsJoint" Kind="Class" />
      <Type Name="SKPhysicsJointFixed" Kind="Class" />
      <Type Name="SKPhysicsJointLimit" Kind="Class" />
      <Type Name="SKPhysicsJointPin" Kind="Class" />
      <Type Name="SKPhysicsJointSliding" Kind="Class" />
      <Type Name="SKPhysicsJointSpring" Kind="Class" />
      <Type Name="SKPhysicsWorld" Kind="Class" />
      <Type Name="SKPhysicsWorldBodiesAlongRayStartEnumeratorHandler" Kind="Delegate" />
      <Type Name="SKPhysicsWorldBodiesEnumeratorHandler" Kind="Delegate" />
      <Type Name="SKRange" Kind="Class" />
      <Type Name="SKReachConstraints" Kind="Class" />
      <Type Name="SKReferenceNode" Kind="Class" />
      <Type Name="SKRegion" Kind="Class" />
      <Type Name="SKRenderer" Kind="Class" />
      <Type Name="SKRepeatMode" Kind="Enumeration" />
      <Type Name="SKScene" Kind="Class" />
      <Type Name="SKSceneDelegate" Kind="Class" />
      <Type Name="SKSceneDelegate_Extensions" Kind="Class" />
      <Type Name="SKSceneScaleMode" Kind="Enumeration" />
      <Type Name="SKShader" Kind="Class" />
      <Type Name="SKShapeNode" Kind="Class" />
      <Type Name="SKSpriteNode" Kind="Class" />
      <Type Name="SKTexture" Kind="Class" />
      <Type Name="SKTextureAtlas" Kind="Class" />
      <Type Name="SKTextureAtlasLoadCallback" Kind="Delegate" />
      <Type Name="SKTextureAtlasLoadResult" Kind="Class" />
      <Type Name="SKTextureFilteringMode" Kind="Enumeration" />
      <Type Name="SKTextureModify" Kind="Delegate" />
      <Type Name="SKTileAdjacencyMask" Kind="Enumeration" />
      <Type Name="SKTileDefinition" Kind="Class" />
      <Type Name="SKTileDefinitionRotation" Kind="Enumeration" />
      <Type Name="SKTileGroup" Kind="Class" />
      <Type Name="SKTileGroupRule" Kind="Class" />
      <Type Name="SKTileMapNode" Kind="Class" />
      <Type Name="SKTileSet" Kind="Class" />
      <Type Name="SKTileSetType" Kind="Enumeration" />
      <Type Name="SKTransformNode" Kind="Class" />
      <Type Name="SKTransition" Kind="Class" />
      <Type Name="SKTransitionDirection" Kind="Enumeration" />
      <Type Name="SKUniform" Kind="Class" />
      <Type Name="SKUniformType" Kind="Enumeration" />
      <Type Name="SKVideoNode" Kind="Class" />
      <Type Name="SKView" Kind="Class" />
      <Type Name="SKView+SKViewAppearance" Kind="Class" />
      <Type Name="SKViewDelegate" Kind="Class" />
      <Type Name="SKViewDelegate_Extensions" Kind="Class" />
      <Type Name="SKWarpGeometry" Kind="Class" />
      <Type Name="SKWarpGeometryGrid" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.StoreKit">
      <Type Name="ISKCloudServiceSetupViewControllerDelegate" Kind="Interface" />
      <Type Name="ISKPaymentTransactionObserver" Kind="Interface" />
      <Type Name="ISKProductsRequestDelegate" Kind="Interface" />
      <Type Name="ISKRequestDelegate" Kind="Interface" />
      <Type Name="ISKStoreProductViewControllerDelegate" Kind="Interface" />
      <Type Name="SKCloudServiceAuthorizationStatus" Kind="Enumeration" />
      <Type Name="SKCloudServiceCapability" Kind="Enumeration" />
      <Type Name="SKCloudServiceController" Kind="Class" />
      <Type Name="SKCloudServiceController+Notifications" Kind="Class" />
      <Type Name="SKCloudServiceSetupAction" Kind="Enumeration" />
      <Type Name="SKCloudServiceSetupActionExtensions" Kind="Class" />
      <Type Name="SKCloudServiceSetupMessageIdentifier" Kind="Enumeration" />
      <Type Name="SKCloudServiceSetupMessageIdentifierExtensions" Kind="Class" />
      <Type Name="SKCloudServiceSetupOptions" Kind="Class" />
      <Type Name="SKCloudServiceSetupViewController" Kind="Class" />
      <Type Name="SKCloudServiceSetupViewControllerDelegate" Kind="Class" />
      <Type Name="SKCloudServiceSetupViewControllerDelegate_Extensions" Kind="Class" />
      <Type Name="SKDownload" Kind="Class" />
      <Type Name="SKDownloadState" Kind="Enumeration" />
      <Type Name="SKError" Kind="Enumeration" />
      <Type Name="SKErrorExtensions" Kind="Class" />
      <Type Name="SKMutablePayment" Kind="Class" />
      <Type Name="SKPayment" Kind="Class" />
      <Type Name="SKPaymentQueue" Kind="Class" />
      <Type Name="SKPaymentTransaction" Kind="Class" />
      <Type Name="SKPaymentTransactionObserver" Kind="Class" />
      <Type Name="SKPaymentTransactionObserver_Extensions" Kind="Class" />
      <Type Name="SKPaymentTransactionState" Kind="Enumeration" />
      <Type Name="SKProduct" Kind="Class" />
      <Type Name="SKProductsRequest" Kind="Class" />
      <Type Name="SKProductsRequestDelegate" Kind="Class" />
      <Type Name="SKProductsRequestResponseEventArgs" Kind="Class" />
      <Type Name="SKProductsResponse" Kind="Class" />
      <Type Name="SKProductStorePromotionController" Kind="Class" />
      <Type Name="SKProductStorePromotionVisibility" Kind="Enumeration" />
      <Type Name="SKReceiptProperties" Kind="Class" />
      <Type Name="SKReceiptRefreshRequest" Kind="Class" />
      <Type Name="SKRequest" Kind="Class" />
      <Type Name="SKRequestDelegate" Kind="Class" />
      <Type Name="SKRequestDelegate_Extensions" Kind="Class" />
      <Type Name="SKRequestErrorEventArgs" Kind="Class" />
      <Type Name="SKStoreProductParameterKey" Kind="Class" />
      <Type Name="SKStoreProductViewController" Kind="Class" />
      <Type Name="SKStoreProductViewControllerDelegate" Kind="Class" />
      <Type Name="SKStoreProductViewControllerDelegate_Extensions" Kind="Class" />
      <Type Name="SKStoreReviewController" Kind="Class" />
      <Type Name="StoreProductParameters" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.Twitter">
      <Type Name="TWRequest" Kind="Class" />
      <Type Name="TWRequestHandler" Kind="Delegate" />
      <Type Name="TWRequestMethod" Kind="Enumeration" />
      <Type Name="TWRequestResult" Kind="Class" />
      <Type Name="TWTweetComposeViewController" Kind="Class" />
      <Type Name="TWTweetComposeViewControllerResult" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.UIKit">
      <Type Name="DraggingEventArgs" Kind="Class" />
      <Type Name="INSLayoutManagerDelegate" Kind="Interface" />
      <Type Name="INSTextAttachmentContainer" Kind="Interface" />
      <Type Name="INSTextLayoutOrientationProvider" Kind="Interface" />
      <Type Name="INSTextStorageDelegate" Kind="Interface" />
      <Type Name="IUIAccelerometerDelegate" Kind="Interface" />
      <Type Name="IUIAccessibilityContainer" Kind="Interface" />
      <Type Name="IUIAccessibilityContainerDataTable" Kind="Interface" />
      <Type Name="IUIAccessibilityContainerDataTableCell" Kind="Interface" />
      <Type Name="IUIAccessibilityContentSizeCategoryImageAdjusting" Kind="Interface" />
      <Type Name="IUIAccessibilityIdentification" Kind="Interface" />
      <Type Name="IUIAccessibilityReadingContent" Kind="Interface" />
      <Type Name="IUIActionSheetDelegate" Kind="Interface" />
      <Type Name="IUIActivityItemSource" Kind="Interface" />
      <Type Name="IUIAdaptivePresentationControllerDelegate" Kind="Interface" />
      <Type Name="IUIAlertViewDelegate" Kind="Interface" />
      <Type Name="IUIAppearance" Kind="Interface" />
      <Type Name="IUIAppearanceContainer" Kind="Interface" />
      <Type Name="IUIApplicationDelegate" Kind="Interface" />
      <Type Name="IUIBarPositioning" Kind="Interface" />
      <Type Name="IUIBarPositioningDelegate" Kind="Interface" />
      <Type Name="IUICloudSharingControllerDelegate" Kind="Interface" />
      <Type Name="IUICollectionViewDataSource" Kind="Interface" />
      <Type Name="IUICollectionViewDataSourcePrefetching" Kind="Interface" />
      <Type Name="IUICollectionViewDelegate" Kind="Interface" />
      <Type Name="IUICollectionViewDelegateFlowLayout" Kind="Interface" />
      <Type Name="IUICollectionViewDragDelegate" Kind="Interface" />
      <Type Name="IUICollectionViewDropCoordinator" Kind="Interface" />
      <Type Name="IUICollectionViewDropDelegate" Kind="Interface" />
      <Type Name="IUICollectionViewDropItem" Kind="Interface" />
      <Type Name="IUICollectionViewDropPlaceholderContext" Kind="Interface" />
      <Type Name="IUICollectionViewSource" Kind="Interface" />
      <Type Name="IUICollisionBehaviorDelegate" Kind="Interface" />
      <Type Name="IUIContentContainer" Kind="Interface" />
      <Type Name="IUIContentSizeCategoryAdjusting" Kind="Interface" />
      <Type Name="IUICoordinateSpace" Kind="Interface" />
      <Type Name="IUIDataSourceModelAssociation" Kind="Interface" />
      <Type Name="IUIDataSourceTranslating" Kind="Interface" />
      <Type Name="IUIDocumentBrowserViewControllerDelegate" Kind="Interface" />
      <Type Name="IUIDocumentInteractionControllerDelegate" Kind="Interface" />
      <Type Name="IUIDocumentMenuDelegate" Kind="Interface" />
      <Type Name="IUIDocumentPickerDelegate" Kind="Interface" />
      <Type Name="IUIDragAnimating" Kind="Interface" />
      <Type Name="IUIDragDropSession" Kind="Interface" />
      <Type Name="IUIDragInteractionDelegate" Kind="Interface" />
      <Type Name="IUIDragSession" Kind="Interface" />
      <Type Name="IUIDropInteractionDelegate" Kind="Interface" />
      <Type Name="IUIDropSession" Kind="Interface" />
      <Type Name="IUIDynamicAnimatorDelegate" Kind="Interface" />
      <Type Name="IUIDynamicItem" Kind="Interface" />
      <Type Name="IUIFocusAnimationContext" Kind="Interface" />
      <Type Name="IUIFocusDebuggerOutput" Kind="Interface" />
      <Type Name="IUIFocusEnvironment" Kind="Interface" />
      <Type Name="IUIFocusItem" Kind="Interface" />
      <Type Name="IUIGestureRecognizerDelegate" Kind="Interface" />
      <Type Name="IUIGuidedAccessRestrictionDelegate" Kind="Interface" />
      <Type Name="IUIImagePickerControllerDelegate" Kind="Interface" />
      <Type Name="IUIInputViewAudioFeedback" Kind="Interface" />
      <Type Name="IUIInteraction" Kind="Interface" />
      <Type Name="IUIItemProviderPresentationSizeProviding" Kind="Interface" />
      <Type Name="IUIKeyInput" Kind="Interface" />
      <Type Name="IUILayoutSupport" Kind="Interface" />
      <Type Name="IUINavigationBarDelegate" Kind="Interface" />
      <Type Name="IUINavigationControllerDelegate" Kind="Interface" />
      <Type Name="IUIObjectRestoration" Kind="Interface" />
      <Type Name="IUIPageViewControllerDataSource" Kind="Interface" />
      <Type Name="IUIPageViewControllerDelegate" Kind="Interface" />
      <Type Name="IUIPasteConfigurationSupporting" Kind="Interface" />
      <Type Name="IUIPickerViewAccessibilityDelegate" Kind="Interface" />
      <Type Name="IUIPickerViewDataSource" Kind="Interface" />
      <Type Name="IUIPickerViewDelegate" Kind="Interface" />
      <Type Name="IUIPickerViewModel" Kind="Interface" />
      <Type Name="IUIPopoverBackgroundViewMethods" Kind="Interface" />
      <Type Name="IUIPopoverControllerDelegate" Kind="Interface" />
      <Type Name="IUIPopoverPresentationControllerDelegate" Kind="Interface" />
      <Type Name="IUIPreviewActionItem" Kind="Interface" />
      <Type Name="IUIPreviewInteractionDelegate" Kind="Interface" />
      <Type Name="IUIPrinterPickerControllerDelegate" Kind="Interface" />
      <Type Name="IUIPrintInteractionControllerDelegate" Kind="Interface" />
      <Type Name="IUIScrollViewAccessibilityDelegate" Kind="Interface" />
      <Type Name="IUIScrollViewDelegate" Kind="Interface" />
      <Type Name="IUISearchBarDelegate" Kind="Interface" />
      <Type Name="IUISearchControllerDelegate" Kind="Interface" />
      <Type Name="IUISearchDisplayDelegate" Kind="Interface" />
      <Type Name="IUISearchResultsUpdating" Kind="Interface" />
      <Type Name="IUISplitViewControllerDelegate" Kind="Interface" />
      <Type Name="IUISpringLoadedInteractionBehavior" Kind="Interface" />
      <Type Name="IUISpringLoadedInteractionContext" Kind="Interface" />
      <Type Name="IUISpringLoadedInteractionEffect" Kind="Interface" />
      <Type Name="IUISpringLoadedInteractionSupporting" Kind="Interface" />
      <Type Name="IUIStateRestoring" Kind="Interface" />
      <Type Name="IUITabBarControllerDelegate" Kind="Interface" />
      <Type Name="IUITabBarDelegate" Kind="Interface" />
      <Type Name="IUITableViewDataSource" Kind="Interface" />
      <Type Name="IUITableViewDataSourcePrefetching" Kind="Interface" />
      <Type Name="IUITableViewDelegate" Kind="Interface" />
      <Type Name="IUITableViewDragDelegate" Kind="Interface" />
      <Type Name="IUITableViewDropCoordinator" Kind="Interface" />
      <Type Name="IUITableViewDropDelegate" Kind="Interface" />
      <Type Name="IUITableViewDropItem" Kind="Interface" />
      <Type Name="IUITableViewDropPlaceholderContext" Kind="Interface" />
      <Type Name="IUITextDocumentProxy" Kind="Interface" />
      <Type Name="IUITextDragDelegate" Kind="Interface" />
      <Type Name="IUITextDraggable" Kind="Interface" />
      <Type Name="IUITextDragRequest" Kind="Interface" />
      <Type Name="IUITextDropDelegate" Kind="Interface" />
      <Type Name="IUITextDroppable" Kind="Interface" />
      <Type Name="IUITextDropRequest" Kind="Interface" />
      <Type Name="IUITextFieldDelegate" Kind="Interface" />
      <Type Name="IUITextInput" Kind="Interface" />
      <Type Name="IUITextInputDelegate" Kind="Interface" />
      <Type Name="IUITextInputTokenizer" Kind="Interface" />
      <Type Name="IUITextInputTraits" Kind="Interface" />
      <Type Name="IUITextPasteConfigurationSupporting" Kind="Interface" />
      <Type Name="IUITextPasteDelegate" Kind="Interface" />
      <Type Name="IUITextPasteItem" Kind="Interface" />
      <Type Name="IUITextViewDelegate" Kind="Interface" />
      <Type Name="IUITimingCurveProvider" Kind="Interface" />
      <Type Name="IUIToolbarDelegate" Kind="Interface" />
      <Type Name="IUITraitEnvironment" Kind="Interface" />
      <Type Name="IUIVideoEditorControllerDelegate" Kind="Interface" />
      <Type Name="IUIViewAnimating" Kind="Interface" />
      <Type Name="IUIViewControllerAnimatedTransitioning" Kind="Interface" />
      <Type Name="IUIViewControllerContextTransitioning" Kind="Interface" />
      <Type Name="IUIViewControllerInteractiveTransitioning" Kind="Interface" />
      <Type Name="IUIViewControllerPreviewing" Kind="Interface" />
      <Type Name="IUIViewControllerPreviewingDelegate" Kind="Interface" />
      <Type Name="IUIViewControllerRestoration" Kind="Interface" />
      <Type Name="IUIViewControllerTransitionCoordinator" Kind="Interface" />
      <Type Name="IUIViewControllerTransitionCoordinatorContext" Kind="Interface" />
      <Type Name="IUIViewControllerTransitioningDelegate" Kind="Interface" />
      <Type Name="IUIViewImplicitlyAnimating" Kind="Interface" />
      <Type Name="IUIWebViewDelegate" Kind="Interface" />
      <Type Name="NSAttributedString_NSAttributedStringKitAdditions" Kind="Class" />
      <Type Name="NSAttributedStringAttachmentConveniences" Kind="Class" />
      <Type Name="NSCoder_UIGeometryKeyedCoding" Kind="Class" />
      <Type Name="NSControlCharacterAction" Kind="Enumeration" />
      <Type Name="NSDataAsset" Kind="Class" />
      <Type Name="NSDirectionalEdgeInsets" Kind="Structure" />
      <Type Name="NSExtendedStringDrawing" Kind="Class" />
      <Type Name="NSFileProviderExtension" Kind="Class" />
      <Type Name="NSFileProviderExtensionFetchThumbnailsHandler" Kind="Delegate" />
      <Type Name="NSGlyphProperty" Kind="Enumeration" />
      <Type Name="NSIdentifier" Kind="Class" />
      <Type Name="NSLayoutAnchor`1" DisplayName="NSLayoutAnchor&lt;AnchorType&gt;" Kind="Class" />
      <Type Name="NSLayoutAttribute" Kind="Enumeration" />
      <Type Name="NSLayoutConstraint" Kind="Class" />
      <Type Name="NSLayoutDimension" Kind="Class" />
      <Type Name="NSLayoutFormatOptions" Kind="Enumeration" />
      <Type Name="NSLayoutManager" Kind="Class" />
      <Type Name="NSLayoutManagerDelegate" Kind="Class" />
      <Type Name="NSLayoutManagerDelegate_Extensions" Kind="Class" />
      <Type Name="NSLayoutRelation" Kind="Enumeration" />
      <Type Name="NSLayoutXAxisAnchor" Kind="Class" />
      <Type Name="NSLayoutYAxisAnchor" Kind="Class" />
      <Type Name="NSMutableAttributedStringKitAdditions" Kind="Class" />
      <Type Name="NSMutableParagraphStyle" Kind="Class" />
      <Type Name="NSObject_UIAccessibilityCustomRotor" Kind="Class" />
      <Type Name="NSParagraphStyle" Kind="Class" />
      <Type Name="NSPreviewInteractionPreviewUpdateEventArgs" Kind="Class" />
      <Type Name="NSShadow" Kind="Class" />
      <Type Name="NSStringDrawing" Kind="Class" />
      <Type Name="NSTextAttachment" Kind="Class" />
      <Type Name="NSTextAttachmentContainer" Kind="Class" />
      <Type Name="NSTextContainer" Kind="Class" />
      <Type Name="NSTextEffect" Kind="Enumeration" />
      <Type Name="NSTextLayoutEnumerateEnclosingRects" Kind="Delegate" />
      <Type Name="NSTextLayoutEnumerateLineFragments" Kind="Delegate" />
      <Type Name="NSTextLayoutOrientation" Kind="Enumeration" />
      <Type Name="NSTextStorage" Kind="Class" />
      <Type Name="NSTextStorage+Notifications" Kind="Class" />
      <Type Name="NSTextStorageDelegate" Kind="Class" />
      <Type Name="NSTextStorageDelegate_Extensions" Kind="Class" />
      <Type Name="NSTextStorageEditActions" Kind="Enumeration" />
      <Type Name="NSTextStorageEventArgs" Kind="Class" />
      <Type Name="NSTextTab" Kind="Class" />
      <Type Name="NSWritingDirectionFormatType" Kind="Enumeration" />
      <Type Name="ShouldDismiss" Kind="Delegate" />
      <Type Name="TransitionCoordinator_UIViewController" Kind="Class" />
      <Type Name="UIAcceleration" Kind="Class" />
      <Type Name="UIAccelerometer" Kind="Class" />
      <Type Name="UIAccelerometerDelegate" Kind="Class" />
      <Type Name="UIAccelerometerDelegate_Extensions" Kind="Class" />
      <Type Name="UIAccelerometerEventArgs" Kind="Class" />
      <Type Name="UIAccessibility" Kind="Class" />
      <Type Name="UIAccessibilityAnnouncementFinishedEventArgs" Kind="Class" />
      <Type Name="UIAccessibilityContainer_Extensions" Kind="Class" />
      <Type Name="UIAccessibilityContainerDataTable" Kind="Class" />
      <Type Name="UIAccessibilityContainerDataTable_Extensions" Kind="Class" />
      <Type Name="UIAccessibilityContainerType" Kind="Enumeration" />
      <Type Name="UIAccessibilityCustomAction" Kind="Class" />
      <Type Name="UIAccessibilityCustomRotor" Kind="Class" />
      <Type Name="UIAccessibilityCustomRotorDirection" Kind="Enumeration" />
      <Type Name="UIAccessibilityCustomRotorItemResult" Kind="Class" />
      <Type Name="UIAccessibilityCustomRotorSearch" Kind="Delegate" />
      <Type Name="UIAccessibilityCustomRotorSearchPredicate" Kind="Class" />
      <Type Name="UIAccessibilityCustomSystemRotorType" Kind="Enumeration" />
      <Type Name="UIAccessibilityElement" Kind="Class" />
      <Type Name="UIAccessibilityHearingDeviceEar" Kind="Enumeration" />
      <Type Name="UIAccessibilityLocationDescriptor" Kind="Class" />
      <Type Name="UIAccessibilityNavigationStyle" Kind="Enumeration" />
      <Type Name="UIAccessibilityPostNotification" Kind="Enumeration" />
      <Type Name="UIAccessibilityReadingContent_Extensions" Kind="Class" />
      <Type Name="UIAccessibilityScrollDirection" Kind="Enumeration" />
      <Type Name="UIAccessibilityTrait" Kind="Enumeration" />
      <Type Name="UIAccessibilityZoomType" Kind="Enumeration" />
      <Type Name="UIActionSheet" Kind="Class" />
      <Type Name="UIActionSheet+UIActionSheetAppearance" Kind="Class" />
      <Type Name="UIActionSheetDelegate" Kind="Class" />
      <Type Name="UIActionSheetDelegate_Extensions" Kind="Class" />
      <Type Name="UIActionSheetStyle" Kind="Enumeration" />
      <Type Name="UIActivity" Kind="Class" />
      <Type Name="UIActivityCategory" Kind="Enumeration" />
      <Type Name="UIActivityIndicatorView" Kind="Class" />
      <Type Name="UIActivityIndicatorView+UIActivityIndicatorViewAppearance" Kind="Class" />
      <Type Name="UIActivityIndicatorViewStyle" Kind="Enumeration" />
      <Type Name="UIActivityItemProvider" Kind="Class" />
      <Type Name="UIActivityItemSource" Kind="Class" />
      <Type Name="UIActivityItemSource_Extensions" Kind="Class" />
      <Type Name="UIActivityType" Kind="Class" />
      <Type Name="UIActivityViewController" Kind="Class" />
      <Type Name="UIActivityViewControllerCompletion" Kind="Delegate" />
      <Type Name="UIAdaptivePresentationControllerDelegate" Kind="Class" />
      <Type Name="UIAdaptivePresentationControllerDelegate_Extensions" Kind="Class" />
      <Type Name="UIAlertAction" Kind="Class" />
      <Type Name="UIAlertActionStyle" Kind="Enumeration" />
      <Type Name="UIAlertController" Kind="Class" />
      <Type Name="UIAlertControllerStyle" Kind="Enumeration" />
      <Type Name="UIAlertView" Kind="Class" />
      <Type Name="UIAlertView+UIAlertViewAppearance" Kind="Class" />
      <Type Name="UIAlertViewDelegate" Kind="Class" />
      <Type Name="UIAlertViewDelegate_Extensions" Kind="Class" />
      <Type Name="UIAlertViewPredicate" Kind="Delegate" />
      <Type Name="UIAlertViewStyle" Kind="Enumeration" />
      <Type Name="UIAppearance" Kind="Class" />
      <Type Name="UIAppearanceContainer" Kind="Class" />
      <Type Name="UIApplication" Kind="Class" />
      <Type Name="UIApplication+Notifications" Kind="Class" />
      <Type Name="UIApplicationDelegate" Kind="Class" />
      <Type Name="UIApplicationDelegate_Extensions" Kind="Class" />
      <Type Name="UIApplicationLaunchEventArgs" Kind="Class" />
      <Type Name="UIApplicationOpenUrlOptions" Kind="Class" />
      <Type Name="UIApplicationRestorationHandler" Kind="Delegate" />
      <Type Name="UIApplicationShortcutIcon" Kind="Class" />
      <Type Name="UIApplicationShortcutIconType" Kind="Enumeration" />
      <Type Name="UIApplicationShortcutItem" Kind="Class" />
      <Type Name="UIApplicationState" Kind="Enumeration" />
      <Type Name="UIAttachmentBehavior" Kind="Class" />
      <Type Name="UIAttachmentBehaviorType" Kind="Enumeration" />
      <Type Name="UIBackgroundFetchResult" Kind="Enumeration" />
      <Type Name="UIBackgroundRefreshStatus" Kind="Enumeration" />
      <Type Name="UIBarButtonItem" Kind="Class" />
      <Type Name="UIBarButtonItem+UIBarButtonItemAppearance" Kind="Class" />
      <Type Name="UIBarButtonItemGroup" Kind="Class" />
      <Type Name="UIBarButtonItemStyle" Kind="Enumeration" />
      <Type Name="UIBarButtonSystemItem" Kind="Enumeration" />
      <Type Name="UIBarItem" Kind="Class" />
      <Type Name="UIBarItem+Notifications" Kind="Class" />
      <Type Name="UIBarItem+UIBarItemAppearance" Kind="Class" />
      <Type Name="UIBarMetrics" Kind="Enumeration" />
      <Type Name="UIBarPosition" Kind="Enumeration" />
      <Type Name="UIBarPositioning" Kind="Class" />
      <Type Name="UIBarPositioningDelegate" Kind="Class" />
      <Type Name="UIBarPositioningDelegate_Extensions" Kind="Class" />
      <Type Name="UIBarStyle" Kind="Enumeration" />
      <Type Name="UIBaselineAdjustment" Kind="Enumeration" />
      <Type Name="UIBezierPath" Kind="Class" />
      <Type Name="UIBlurEffect" Kind="Class" />
      <Type Name="UIBlurEffectStyle" Kind="Enumeration" />
      <Type Name="UIButton" Kind="Class" />
      <Type Name="UIButton+UIButtonAppearance" Kind="Class" />
      <Type Name="UIButtonEventArgs" Kind="Class" />
      <Type Name="UIButtonType" Kind="Enumeration" />
      <Type Name="UICloudSharingController" Kind="Class" />
      <Type Name="UICloudSharingControllerDelegate" Kind="Class" />
      <Type Name="UICloudSharingControllerDelegate_Extensions" Kind="Class" />
      <Type Name="UICloudSharingControllerPreparationCompletionHandler" Kind="Delegate" />
      <Type Name="UICloudSharingControllerPreparationHandler" Kind="Delegate" />
      <Type Name="UICloudSharingPermissionOptions" Kind="Enumeration" />
      <Type Name="UICollectionElementCategory" Kind="Enumeration" />
      <Type Name="UICollectionElementKindSection" Kind="Enumeration" />
      <Type Name="UICollectionElementKindSectionKey" Kind="Class" />
      <Type Name="UICollectionReusableView" Kind="Class" />
      <Type Name="UICollectionReusableView+UICollectionReusableViewAppearance" Kind="Class" />
      <Type Name="UICollectionUpdateAction" Kind="Enumeration" />
      <Type Name="UICollectionView" Kind="Class" />
      <Type Name="UICollectionView+UICollectionViewAppearance" Kind="Class" />
      <Type Name="UICollectionViewCell" Kind="Class" />
      <Type Name="UICollectionViewCell+UICollectionViewCellAppearance" Kind="Class" />
      <Type Name="UICollectionViewCellDragState" Kind="Enumeration" />
      <Type Name="UICollectionViewController" Kind="Class" />
      <Type Name="UICollectionViewDataSource" Kind="Class" />
      <Type Name="UICollectionViewDataSource_Extensions" Kind="Class" />
      <Type Name="UICollectionViewDataSourcePrefetching_Extensions" Kind="Class" />
      <Type Name="UICollectionViewDelegate" Kind="Class" />
      <Type Name="UICollectionViewDelegate_Extensions" Kind="Class" />
      <Type Name="UICollectionViewDelegateFlowLayout" Kind="Class" />
      <Type Name="UICollectionViewDelegateFlowLayout_Extensions" Kind="Class" />
      <Type Name="UICollectionViewDragDelegate" Kind="Class" />
      <Type Name="UICollectionViewDragDelegate_Extensions" Kind="Class" />
      <Type Name="UICollectionViewDropDelegate" Kind="Class" />
      <Type Name="UICollectionViewDropDelegate_Extensions" Kind="Class" />
      <Type Name="UICollectionViewDropIntent" Kind="Enumeration" />
      <Type Name="UICollectionViewDropPlaceholder" Kind="Class" />
      <Type Name="UICollectionViewDropProposal" Kind="Class" />
      <Type Name="UICollectionViewFlowLayout" Kind="Class" />
      <Type Name="UICollectionViewFlowLayoutInvalidationContext" Kind="Class" />
      <Type Name="UICollectionViewFlowLayoutSectionInsetReference" Kind="Enumeration" />
      <Type Name="UICollectionViewFocusUpdateContext" Kind="Class" />
      <Type Name="UICollectionViewLayout" Kind="Class" />
      <Type Name="UICollectionViewLayoutAttributes" Kind="Class" />
      <Type Name="UICollectionViewLayoutInteractiveTransitionCompletion" Kind="Delegate" />
      <Type Name="UICollectionViewLayoutInvalidationContext" Kind="Class" />
      <Type Name="UICollectionViewPlaceholder" Kind="Class" />
      <Type Name="UICollectionViewReorderingCadence" Kind="Enumeration" />
      <Type Name="UICollectionViewScrollDirection" Kind="Enumeration" />
      <Type Name="UICollectionViewScrollPosition" Kind="Enumeration" />
      <Type Name="UICollectionViewSource" Kind="Class" />
      <Type Name="UICollectionViewTransitionLayout" Kind="Class" />
      <Type Name="UICollectionViewTransitionResult" Kind="Class" />
      <Type Name="UICollectionViewUpdateItem" Kind="Class" />
      <Type Name="UICollisionBeganBoundaryContactEventArgs" Kind="Class" />
      <Type Name="UICollisionBeganContactEventArgs" Kind="Class" />
      <Type Name="UICollisionBehavior" Kind="Class" />
      <Type Name="UICollisionBehaviorDelegate" Kind="Class" />
      <Type Name="UICollisionBehaviorDelegate_Extensions" Kind="Class" />
      <Type Name="UICollisionBehaviorMode" Kind="Enumeration" />
      <Type Name="UICollisionEndedBoundaryContactEventArgs" Kind="Class" />
      <Type Name="UICollisionEndedContactEventArgs" Kind="Class" />
      <Type Name="UIColor" Kind="Class" />
      <Type Name="UICompletionHandler" Kind="Delegate" />
      <Type Name="UIContentContainer" Kind="Class" />
      <Type Name="UIContentSizeCategory" Kind="Enumeration" />
      <Type Name="UIContentSizeCategoryChangedEventArgs" Kind="Class" />
      <Type Name="UIContentSizeCategoryExtensions" Kind="Class" />
      <Type Name="UIContextualAction" Kind="Class" />
      <Type Name="UIContextualActionCompletionHandler" Kind="Delegate" />
      <Type Name="UIContextualActionHandler" Kind="Delegate" />
      <Type Name="UIContextualActionStyle" Kind="Enumeration" />
      <Type Name="UIControl" Kind="Class" />
      <Type Name="UIControl+UIControlAppearance" Kind="Class" />
      <Type Name="UIControlContentHorizontalAlignment" Kind="Enumeration" />
      <Type Name="UIControlContentVerticalAlignment" Kind="Enumeration" />
      <Type Name="UIControlEvent" Kind="Enumeration" />
      <Type Name="UIControlState" Kind="Enumeration" />
      <Type Name="UICoordinateSpace" Kind="Class" />
      <Type Name="UICubicTimingParameters" Kind="Class" />
      <Type Name="UIDataDetectorType" Kind="Enumeration" />
      <Type Name="UIDatePicker" Kind="Class" />
      <Type Name="UIDatePicker+UIDatePickerAppearance" Kind="Class" />
      <Type Name="UIDatePickerMode" Kind="Enumeration" />
      <Type Name="UIDevice" Kind="Class" />
      <Type Name="UIDevice+Notifications" Kind="Class" />
      <Type Name="UIDeviceBatteryState" Kind="Enumeration" />
      <Type Name="UIDeviceOrientation" Kind="Enumeration" />
      <Type Name="UIDeviceOrientationExtensions" Kind="Class" />
      <Type Name="UIDictationPhrase" Kind="Class" />
      <Type Name="UIDisplayGamut" Kind="Enumeration" />
      <Type Name="UIDocument" Kind="Class" />
      <Type Name="UIDocument+Notifications" Kind="Class" />
      <Type Name="UIDocumentBrowserAction" Kind="Class" />
      <Type Name="UIDocumentBrowserActionAvailability" Kind="Enumeration" />
      <Type Name="UIDocumentBrowserErrorCode" Kind="Enumeration" />
      <Type Name="UIDocumentBrowserErrorCodeExtensions" Kind="Class" />
      <Type Name="UIDocumentBrowserImportMode" Kind="Enumeration" />
      <Type Name="UIDocumentBrowserTransitionController" Kind="Class" />
      <Type Name="UIDocumentBrowserUserInterfaceStyle" Kind="Enumeration" />
      <Type Name="UIDocumentBrowserViewController" Kind="Class" />
      <Type Name="UIDocumentBrowserViewControllerDelegate" Kind="Class" />
      <Type Name="UIDocumentBrowserViewControllerDelegate_Extensions" Kind="Class" />
      <Type Name="UIDocumentChangeKind" Kind="Enumeration" />
      <Type Name="UIDocumentInteractionController" Kind="Class" />
      <Type Name="UIDocumentInteractionControllerDelegate" Kind="Class" />
      <Type Name="UIDocumentInteractionControllerDelegate_Extensions" Kind="Class" />
      <Type Name="UIDocumentInteractionProbe" Kind="Delegate" />
      <Type Name="UIDocumentInteractionRectangle" Kind="Delegate" />
      <Type Name="UIDocumentMenuDelegate" Kind="Class" />
      <Type Name="UIDocumentMenuDocumentPickedEventArgs" Kind="Class" />
      <Type Name="UIDocumentMenuOrder" Kind="Enumeration" />
      <Type Name="UIDocumentMenuViewController" Kind="Class" />
      <Type Name="UIDocumentPickedAtUrlsEventArgs" Kind="Class" />
      <Type Name="UIDocumentPickedEventArgs" Kind="Class" />
      <Type Name="UIDocumentPickerDelegate" Kind="Class" />
      <Type Name="UIDocumentPickerDelegate_Extensions" Kind="Class" />
      <Type Name="UIDocumentPickerExtensionViewController" Kind="Class" />
      <Type Name="UIDocumentPickerMode" Kind="Enumeration" />
      <Type Name="UIDocumentPickerViewController" Kind="Class" />
      <Type Name="UIDocumentSaveOperation" Kind="Enumeration" />
      <Type Name="UIDocumentSendingToApplicationEventArgs" Kind="Class" />
      <Type Name="UIDocumentState" Kind="Enumeration" />
      <Type Name="UIDocumentViewController" Kind="Delegate" />
      <Type Name="UIDocumentViewForPreview" Kind="Delegate" />
      <Type Name="UIDragDropSessionExtensions" Kind="Class" />
      <Type Name="UIDragInteraction" Kind="Class" />
      <Type Name="UIDragInteractionDelegate" Kind="Class" />
      <Type Name="UIDragInteractionDelegate_Extensions" Kind="Class" />
      <Type Name="UIDragItem" Kind="Class" />
      <Type Name="UIDragPreview" Kind="Class" />
      <Type Name="UIDragPreviewParameters" Kind="Class" />
      <Type Name="UIDragPreviewTarget" Kind="Class" />
      <Type Name="UIDropInteraction" Kind="Class" />
      <Type Name="UIDropInteractionDelegate" Kind="Class" />
      <Type Name="UIDropInteractionDelegate_Extensions" Kind="Class" />
      <Type Name="UIDropOperation" Kind="Enumeration" />
      <Type Name="UIDropProposal" Kind="Class" />
      <Type Name="UIDropSessionProgressIndicatorStyle" Kind="Enumeration" />
      <Type Name="UIDynamicAnimator" Kind="Class" />
      <Type Name="UIDynamicAnimatorDelegate" Kind="Class" />
      <Type Name="UIDynamicBehavior" Kind="Class" />
      <Type Name="UIDynamicItem" Kind="Class" />
      <Type Name="UIDynamicItem_Extensions" Kind="Class" />
      <Type Name="UIDynamicItemBehavior" Kind="Class" />
      <Type Name="UIDynamicItemCollisionBoundsType" Kind="Enumeration" />
      <Type Name="UIDynamicItemGroup" Kind="Class" />
      <Type Name="UIEdgeInsets" Kind="Structure" />
      <Type Name="UIEvent" Kind="Class" />
      <Type Name="UIEventSubtype" Kind="Enumeration" />
      <Type Name="UIEventType" Kind="Enumeration" />
      <Type Name="UIExtensionPointIdentifier" Kind="Class" />
      <Type Name="UIFeedbackGenerator" Kind="Class" />
      <Type Name="UIFieldBehavior" Kind="Class" />
      <Type Name="UIFieldCustomEvaluator" Kind="Delegate" />
      <Type Name="UIFloatRange" Kind="Structure" />
      <Type Name="UIFocusAnimationCoordinator" Kind="Class" />
      <Type Name="UIFocusDebugger" Kind="Class" />
      <Type Name="UIFocusEnvironment_Extensions" Kind="Class" />
      <Type Name="UIFocusGuide" Kind="Class" />
      <Type Name="UIFocusHeading" Kind="Enumeration" />
      <Type Name="UIFocusSystem" Kind="Class" />
      <Type Name="UIFocusUpdateContext" Kind="Class" />
      <Type Name="UIFocusUpdateContext+Notifications" Kind="Class" />
      <Type Name="UIFont" Kind="Class" />
      <Type Name="UIFontAttributes" Kind="Class" />
      <Type Name="UIFontDescriptor" Kind="Class" />
      <Type Name="UIFontDescriptorAttribute" Kind="Enumeration" />
      <Type Name="UIFontDescriptorSymbolicTraits" Kind="Enumeration" />
      <Type Name="UIFontFeature" Kind="Class" />
      <Type Name="UIFontMetrics" Kind="Class" />
      <Type Name="UIFontTextStyle" Kind="Enumeration" />
      <Type Name="UIFontTextStyleExtensions" Kind="Class" />
      <Type Name="UIFontTraits" Kind="Class" />
      <Type Name="UIFontWeight" Kind="Enumeration" />
      <Type Name="UIForceTouchCapability" Kind="Enumeration" />
      <Type Name="UIGestureProbe" Kind="Delegate" />
      <Type Name="UIGestureRecognizer" Kind="Class" />
      <Type Name="UIGestureRecognizer+ParameterlessDispatch" Kind="Class" />
      <Type Name="UIGestureRecognizer+ParametrizedDispatch" Kind="Class" />
      <Type Name="UIGestureRecognizer+Token" Kind="Class" />
      <Type Name="UIGestureRecognizerDelegate" Kind="Class" />
      <Type Name="UIGestureRecognizerDelegate_Extensions" Kind="Class" />
      <Type Name="UIGestureRecognizerState" Kind="Enumeration" />
      <Type Name="UIGesturesPress" Kind="Delegate" />
      <Type Name="UIGesturesProbe" Kind="Delegate" />
      <Type Name="UIGraphics" Kind="Class" />
      <Type Name="UIGraphicsImageRenderer" Kind="Class" />
      <Type Name="UIGraphicsImageRendererContext" Kind="Class" />
      <Type Name="UIGraphicsImageRendererFormat" Kind="Class" />
      <Type Name="UIGraphicsPdfRenderer" Kind="Class" />
      <Type Name="UIGraphicsPdfRendererContext" Kind="Class" />
      <Type Name="UIGraphicsPdfRendererFormat" Kind="Class" />
      <Type Name="UIGraphicsRenderer" Kind="Class" />
      <Type Name="UIGraphicsRendererContext" Kind="Class" />
      <Type Name="UIGraphicsRendererFormat" Kind="Class" />
      <Type Name="UIGravityBehavior" Kind="Class" />
      <Type Name="UIGuidedAccessRestriction" Kind="Class" />
      <Type Name="UIGuidedAccessRestrictionDelegate_Extensions" Kind="Class" />
      <Type Name="UIGuidedAccessRestrictionState" Kind="Enumeration" />
      <Type Name="UIImage" Kind="Class" />
      <Type Name="UIImage+Notifications" Kind="Class" />
      <Type Name="UIImage+SaveStatus" Kind="Delegate" />
      <Type Name="UIImageAsset" Kind="Class" />
      <Type Name="UIImageOrientation" Kind="Enumeration" />
      <Type Name="UIImagePickerController" Kind="Class" />
      <Type Name="UIImagePickerControllerCameraCaptureMode" Kind="Enumeration" />
      <Type Name="UIImagePickerControllerCameraDevice" Kind="Enumeration" />
      <Type Name="UIImagePickerControllerCameraFlashMode" Kind="Enumeration" />
      <Type Name="UIImagePickerControllerDelegate" Kind="Class" />
      <Type Name="UIImagePickerControllerDelegate_Extensions" Kind="Class" />
      <Type Name="UIImagePickerControllerImageUrlExportPreset" Kind="Enumeration" />
      <Type Name="UIImagePickerControllerQualityType" Kind="Enumeration" />
      <Type Name="UIImagePickerControllerSourceType" Kind="Enumeration" />
      <Type Name="UIImagePickerImagePickedEventArgs" Kind="Class" />
      <Type Name="UIImagePickerMediaPickedEventArgs" Kind="Class" />
      <Type Name="UIImageRenderingMode" Kind="Enumeration" />
      <Type Name="UIImageResizingMode" Kind="Enumeration" />
      <Type Name="UIImageView" Kind="Class" />
      <Type Name="UIImageView+UIImageViewAppearance" Kind="Class" />
      <Type Name="UIImpactFeedbackGenerator" Kind="Class" />
      <Type Name="UIImpactFeedbackStyle" Kind="Enumeration" />
      <Type Name="UIInputView" Kind="Class" />
      <Type Name="UIInputView+UIInputViewAppearance" Kind="Class" />
      <Type Name="UIInputViewController" Kind="Class" />
      <Type Name="UIInputViewStyle" Kind="Enumeration" />
      <Type Name="UIInterfaceOrientation" Kind="Enumeration" />
      <Type Name="UIInterfaceOrientationExtensions" Kind="Class" />
      <Type Name="UIInterfaceOrientationMask" Kind="Enumeration" />
      <Type Name="UIInterpolatingMotionEffect" Kind="Class" />
      <Type Name="UIInterpolatingMotionEffectType" Kind="Enumeration" />
      <Type Name="UIKeyboard" Kind="Class" />
      <Type Name="UIKeyboard+Notifications" Kind="Class" />
      <Type Name="UIKeyboardAppearance" Kind="Enumeration" />
      <Type Name="UIKeyboardEventArgs" Kind="Class" />
      <Type Name="UIKeyboardType" Kind="Enumeration" />
      <Type Name="UIKeyCommand" Kind="Class" />
      <Type Name="UIKeyModifierFlags" Kind="Enumeration" />
      <Type Name="UIKitThreadAccessException" Kind="Class" />
      <Type Name="UILabel" Kind="Class" />
      <Type Name="UILabel+UILabelAppearance" Kind="Class" />
      <Type Name="UILayoutConstraintAxis" Kind="Enumeration" />
      <Type Name="UILayoutGuide" Kind="Class" />
      <Type Name="UILayoutGuide_UIConstraintBasedLayoutDebugging" Kind="Class" />
      <Type Name="UILayoutPriority" Kind="Enumeration" />
      <Type Name="UILayoutSupport" Kind="Class" />
      <Type Name="UILayoutSupport_Extensions" Kind="Class" />
      <Type Name="UILexicon" Kind="Class" />
      <Type Name="UILexiconEntry" Kind="Class" />
      <Type Name="UILineBreakMode" Kind="Enumeration" />
      <Type Name="UILocalizedIndexedCollation" Kind="Class" />
      <Type Name="UILocalNotification" Kind="Class" />
      <Type Name="UILongPressGestureRecognizer" Kind="Class" />
      <Type Name="UIManagedDocument" Kind="Class" />
      <Type Name="UIMarkupTextPrintFormatter" Kind="Class" />
      <Type Name="UIMenuController" Kind="Class" />
      <Type Name="UIMenuController+Notifications" Kind="Class" />
      <Type Name="UIMenuControllerArrowDirection" Kind="Enumeration" />
      <Type Name="UIMenuItem" Kind="Class" />
      <Type Name="UIModalPresentationStyle" Kind="Enumeration" />
      <Type Name="UIModalTransitionStyle" Kind="Enumeration" />
      <Type Name="UIMotionEffect" Kind="Class" />
      <Type Name="UIMotionEffectGroup" Kind="Class" />
      <Type Name="UIMutableApplicationShortcutItem" Kind="Class" />
      <Type Name="UIMutableUserNotificationAction" Kind="Class" />
      <Type Name="UIMutableUserNotificationCategory" Kind="Class" />
      <Type Name="UINavigationBar" Kind="Class" />
      <Type Name="UINavigationBar+UINavigationBarAppearance" Kind="Class" />
      <Type Name="UINavigationBarDelegate" Kind="Class" />
      <Type Name="UINavigationBarDelegate_Extensions" Kind="Class" />
      <Type Name="UINavigationController" Kind="Class" />
      <Type Name="UINavigationControllerDelegate" Kind="Class" />
      <Type Name="UINavigationControllerDelegate_Extensions" Kind="Class" />
      <Type Name="UINavigationControllerOperation" Kind="Enumeration" />
      <Type Name="UINavigationItem" Kind="Class" />
      <Type Name="UINavigationItemLargeTitleDisplayMode" Kind="Enumeration" />
      <Type Name="UINib" Kind="Class" />
      <Type Name="UINotificationFeedbackGenerator" Kind="Class" />
      <Type Name="UINotificationFeedbackType" Kind="Enumeration" />
      <Type Name="UIObjectRestoration" Kind="Class" />
      <Type Name="UIOffset" Kind="Structure" />
      <Type Name="UIOperationHandler" Kind="Delegate" />
      <Type Name="UIPageControl" Kind="Class" />
      <Type Name="UIPageControl+UIPageControlAppearance" Kind="Class" />
      <Type Name="UIPageViewController" Kind="Class" />
      <Type Name="UIPageViewControllerDataSource" Kind="Class" />
      <Type Name="UIPageViewControllerDataSource_Extensions" Kind="Class" />
      <Type Name="UIPageViewControllerDelegate" Kind="Class" />
      <Type Name="UIPageViewControllerDelegate_Extensions" Kind="Class" />
      <Type Name="UIPageViewControllerNavigationDirection" Kind="Enumeration" />
      <Type Name="UIPageViewControllerNavigationOrientation" Kind="Enumeration" />
      <Type Name="UIPageViewControllerSpineLocation" Kind="Enumeration" />
      <Type Name="UIPageViewControllerTransitionEventArgs" Kind="Class" />
      <Type Name="UIPageViewControllerTransitionStyle" Kind="Enumeration" />
      <Type Name="UIPageViewFinishedAnimationEventArgs" Kind="Class" />
      <Type Name="UIPageViewGetNumber" Kind="Delegate" />
      <Type Name="UIPageViewGetViewController" Kind="Delegate" />
      <Type Name="UIPageViewSpineLocationCallback" Kind="Delegate" />
      <Type Name="UIPanGestureRecognizer" Kind="Class" />
      <Type Name="UIPasteboard" Kind="Class" />
      <Type Name="UIPasteboard+Notifications" Kind="Class" />
      <Type Name="UIPasteboardChangeEventArgs" Kind="Class" />
      <Type Name="UIPasteboardNames" Kind="Class" />
      <Type Name="UIPasteboardOptionKeys" Kind="Class" />
      <Type Name="UIPasteboardOptions" Kind="Class" />
      <Type Name="UIPasteConfiguration" Kind="Class" />
      <Type Name="UIPasteConfigurationSupporting_Extensions" Kind="Class" />
      <Type Name="UIPathEventArgs" Kind="Class" />
      <Type Name="UIPercentDrivenInteractiveTransition" Kind="Class" />
      <Type Name="UIPickerView" Kind="Class" />
      <Type Name="UIPickerView+UIPickerViewAppearance" Kind="Class" />
      <Type Name="UIPickerViewAccessibilityDelegate" Kind="Class" />
      <Type Name="UIPickerViewAccessibilityDelegate_Extensions" Kind="Class" />
      <Type Name="UIPickerViewDataSource" Kind="Class" />
      <Type Name="UIPickerViewDelegate" Kind="Class" />
      <Type Name="UIPickerViewDelegate_Extensions" Kind="Class" />
      <Type Name="UIPickerViewModel" Kind="Class" />
      <Type Name="UIPinchGestureRecognizer" Kind="Class" />
      <Type Name="UIPopoverArrowDirection" Kind="Enumeration" />
      <Type Name="UIPopoverBackgroundView" Kind="Class" />
      <Type Name="UIPopoverBackgroundView+UIPopoverBackgroundViewAppearance" Kind="Class" />
      <Type Name="UIPopoverController" Kind="Class" />
      <Type Name="UIPopoverControllerCondition" Kind="Delegate" />
      <Type Name="UIPopoverControllerDelegate" Kind="Class" />
      <Type Name="UIPopoverControllerDelegate_Extensions" Kind="Class" />
      <Type Name="UIPopoverControllerRepositionEventArgs" Kind="Class" />
      <Type Name="UIPopoverPresentationController" Kind="Class" />
      <Type Name="UIPopoverPresentationControllerDelegate" Kind="Class" />
      <Type Name="UIPopoverPresentationControllerDelegate_Extensions" Kind="Class" />
      <Type Name="UIPopoverPresentationControllerRepositionEventArgs" Kind="Class" />
      <Type Name="UIPreferredPresentationStyle" Kind="Enumeration" />
      <Type Name="UIPresentationController" Kind="Class" />
      <Type Name="UIPress" Kind="Class" />
      <Type Name="UIPressesEvent" Kind="Class" />
      <Type Name="UIPressPhase" Kind="Enumeration" />
      <Type Name="UIPressType" Kind="Enumeration" />
      <Type Name="UIPreviewAction" Kind="Class" />
      <Type Name="UIPreviewActionGroup" Kind="Class" />
      <Type Name="UIPreviewActionStyle" Kind="Enumeration" />
      <Type Name="UIPreviewHandler" Kind="Delegate" />
      <Type Name="UIPreviewInteraction" Kind="Class" />
      <Type Name="UIPreviewInteractionDelegate" Kind="Class" />
      <Type Name="UIPreviewInteractionDelegate_Extensions" Kind="Class" />
      <Type Name="UIPrint" Kind="Class" />
      <Type Name="UIPrinter" Kind="Class" />
      <Type Name="UIPrinterContactPrinterHandler" Kind="Delegate" />
      <Type Name="UIPrinterCutterBehavior" Kind="Enumeration" />
      <Type Name="UIPrinterJobTypes" Kind="Enumeration" />
      <Type Name="UIPrinterPickerCompletionHandler" Kind="Delegate" />
      <Type Name="UIPrinterPickerCompletionResult" Kind="Class" />
      <Type Name="UIPrinterPickerController" Kind="Class" />
      <Type Name="UIPrinterPickerControllerDelegate" Kind="Class" />
      <Type Name="UIPrinterPickerControllerDelegate_Extensions" Kind="Class" />
      <Type Name="UIPrintError" Kind="Enumeration" />
      <Type Name="UIPrintErrorExtensions" Kind="Class" />
      <Type Name="UIPrintFormatter" Kind="Class" />
      <Type Name="UIPrintInfo" Kind="Class" />
      <Type Name="UIPrintInfoDuplex" Kind="Enumeration" />
      <Type Name="UIPrintInfoOrientation" Kind="Enumeration" />
      <Type Name="UIPrintInfoOutputType" Kind="Enumeration" />
      <Type Name="UIPrintInteraction" Kind="Delegate" />
      <Type Name="UIPrintInteractionCompletionHandler" Kind="Delegate" />
      <Type Name="UIPrintInteractionCompletionResult" Kind="Class" />
      <Type Name="UIPrintInteractionController" Kind="Class" />
      <Type Name="UIPrintInteractionControllerDelegate" Kind="Class" />
      <Type Name="UIPrintInteractionControllerDelegate_Extensions" Kind="Class" />
      <Type Name="UIPrintInteractionCutterBehavior" Kind="Delegate" />
      <Type Name="UIPrintInteractionPaperList" Kind="Delegate" />
      <Type Name="UIPrintInteractionResult" Kind="Class" />
      <Type Name="UIPrintPageRenderer" Kind="Class" />
      <Type Name="UIPrintPaper" Kind="Class" />
      <Type Name="UIProgressView" Kind="Class" />
      <Type Name="UIProgressView+UIProgressViewAppearance" Kind="Class" />
      <Type Name="UIProgressViewStyle" Kind="Enumeration" />
      <Type Name="UIPushBehavior" Kind="Class" />
      <Type Name="UIPushBehaviorMode" Kind="Enumeration" />
      <Type Name="UIRectCorner" Kind="Enumeration" />
      <Type Name="UIRectEdge" Kind="Enumeration" />
      <Type Name="UIReferenceLibraryViewController" Kind="Class" />
      <Type Name="UIRefreshControl" Kind="Class" />
      <Type Name="UIRefreshControl+UIRefreshControlAppearance" Kind="Class" />
      <Type Name="UIRegion" Kind="Class" />
      <Type Name="UIRemoteNotificationType" Kind="Enumeration" />
      <Type Name="UIResponder" Kind="Class" />
      <Type Name="UIResponder_NSObjectExtension" Kind="Class" />
      <Type Name="UIReturnKeyType" Kind="Enumeration" />
      <Type Name="UIRotationGestureRecognizer" Kind="Class" />
      <Type Name="UIScreen" Kind="Class" />
      <Type Name="UIScreen+Notifications" Kind="Class" />
      <Type Name="UIScreenEdgePanGestureRecognizer" Kind="Class" />
      <Type Name="UIScreenMode" Kind="Class" />
      <Type Name="UIScreenOverscanCompensation" Kind="Enumeration" />
      <Type Name="UIScrollView" Kind="Class" />
      <Type Name="UIScrollView+UIScrollViewAppearance" Kind="Class" />
      <Type Name="UIScrollViewAccessibilityDelegate" Kind="Class" />
      <Type Name="UIScrollViewAccessibilityDelegate_Extensions" Kind="Class" />
      <Type Name="UIScrollViewCondition" Kind="Delegate" />
      <Type Name="UIScrollViewContentInsetAdjustmentBehavior" Kind="Enumeration" />
      <Type Name="UIScrollViewDelegate" Kind="Class" />
      <Type Name="UIScrollViewDelegate_Extensions" Kind="Class" />
      <Type Name="UIScrollViewGetZoomView" Kind="Delegate" />
      <Type Name="UIScrollViewIndexDisplayMode" Kind="Enumeration" />
      <Type Name="UIScrollViewIndicatorStyle" Kind="Enumeration" />
      <Type Name="UIScrollViewKeyboardDismissMode" Kind="Enumeration" />
      <Type Name="UIScrollViewZoomingEventArgs" Kind="Class" />
      <Type Name="UISearchBar" Kind="Class" />
      <Type Name="UISearchBar+UISearchBarAppearance" Kind="Class" />
      <Type Name="UISearchBarButtonIndexEventArgs" Kind="Class" />
      <Type Name="UISearchBarDelegate" Kind="Class" />
      <Type Name="UISearchBarDelegate_Extensions" Kind="Class" />
      <Type Name="UISearchBarIcon" Kind="Enumeration" />
      <Type Name="UISearchBarPredicate" Kind="Delegate" />
      <Type Name="UISearchBarRangeEventArgs" Kind="Delegate" />
      <Type Name="UISearchBarStyle" Kind="Enumeration" />
      <Type Name="UISearchBarTextChangedEventArgs" Kind="Class" />
      <Type Name="UISearchContainerViewController" Kind="Class" />
      <Type Name="UISearchController" Kind="Class" />
      <Type Name="UISearchControllerDelegate" Kind="Class" />
      <Type Name="UISearchControllerDelegate_Extensions" Kind="Class" />
      <Type Name="UISearchDisplayController" Kind="Class" />
      <Type Name="UISearchDisplayDelegate" Kind="Class" />
      <Type Name="UISearchDisplayDelegate_Extensions" Kind="Class" />
      <Type Name="UISearchResultsUpdating" Kind="Class" />
      <Type Name="UISegmentedControl" Kind="Class" />
      <Type Name="UISegmentedControl+UISegmentedControlAppearance" Kind="Class" />
      <Type Name="UISegmentedControlSegment" Kind="Enumeration" />
      <Type Name="UISegmentedControlStyle" Kind="Enumeration" />
      <Type Name="UISelectionFeedbackGenerator" Kind="Class" />
      <Type Name="UISemanticContentAttribute" Kind="Enumeration" />
      <Type Name="UISimpleTextPrintFormatter" Kind="Class" />
      <Type Name="UISlider" Kind="Class" />
      <Type Name="UISlider+UISliderAppearance" Kind="Class" />
      <Type Name="UISnapBehavior" Kind="Class" />
      <Type Name="UISplitViewController" Kind="Class" />
      <Type Name="UISplitViewController_UIViewController" Kind="Class" />
      <Type Name="UISplitViewControllerCanCollapsePredicate" Kind="Delegate" />
      <Type Name="UISplitViewControllerDelegate" Kind="Class" />
      <Type Name="UISplitViewControllerDelegate_Extensions" Kind="Class" />
      <Type Name="UISplitViewControllerDisplayEvent" Kind="Delegate" />
      <Type Name="UISplitViewControllerDisplayMode" Kind="Enumeration" />
      <Type Name="UISplitViewControllerDisplayModeEventArgs" Kind="Class" />
      <Type Name="UISplitViewControllerFetchTargetForActionHandler" Kind="Delegate" />
      <Type Name="UISplitViewControllerGetSecondaryViewController" Kind="Delegate" />
      <Type Name="UISplitViewControllerGetViewController" Kind="Delegate" />
      <Type Name="UISplitViewControllerHidePredicate" Kind="Delegate" />
      <Type Name="UISplitViewControllerPrimaryEdge" Kind="Enumeration" />
      <Type Name="UISplitViewHideEventArgs" Kind="Class" />
      <Type Name="UISplitViewPresentEventArgs" Kind="Class" />
      <Type Name="UISplitViewShowEventArgs" Kind="Class" />
      <Type Name="UISpringLoadedInteraction" Kind="Class" />
      <Type Name="UISpringLoadedInteractionBehavior_Extensions" Kind="Class" />
      <Type Name="UISpringLoadedInteractionEffectState" Kind="Enumeration" />
      <Type Name="UISpringTimingParameters" Kind="Class" />
      <Type Name="UIStackView" Kind="Class" />
      <Type Name="UIStackView+UIStackViewAppearance" Kind="Class" />
      <Type Name="UIStackViewAlignment" Kind="Enumeration" />
      <Type Name="UIStackViewDistribution" Kind="Enumeration" />
      <Type Name="UIStateRestoration" Kind="Class" />
      <Type Name="UIStateRestoring" Kind="Class" />
      <Type Name="UIStateRestoring_Extensions" Kind="Class" />
      <Type Name="UIStatusBarAnimation" Kind="Enumeration" />
      <Type Name="UIStatusBarFrameChangeEventArgs" Kind="Class" />
      <Type Name="UIStatusBarOrientationChangeEventArgs" Kind="Class" />
      <Type Name="UIStatusBarStyle" Kind="Enumeration" />
      <Type Name="UIStepper" Kind="Class" />
      <Type Name="UIStepper+UIStepperAppearance" Kind="Class" />
      <Type Name="UIStoryboard" Kind="Class" />
      <Type Name="UIStoryboardPopoverSegue" Kind="Class" />
      <Type Name="UIStoryboardSegue" Kind="Class" />
      <Type Name="UIStoryboardUnwindSegueSource" Kind="Class" />
      <Type Name="UIStringAttributeKey" Kind="Class" />
      <Type Name="UIStringAttributes" Kind="Class" />
      <Type Name="UIStringDrawing" Kind="Class" />
      <Type Name="UISwipeActionsConfiguration" Kind="Class" />
      <Type Name="UISwipeGestureRecognizer" Kind="Class" />
      <Type Name="UISwipeGestureRecognizerDirection" Kind="Enumeration" />
      <Type Name="UISwitch" Kind="Class" />
      <Type Name="UISwitch+UISwitchAppearance" Kind="Class" />
      <Type Name="UISystemAnimation" Kind="Enumeration" />
      <Type Name="UITabBar" Kind="Class" />
      <Type Name="UITabBar+UITabBarAppearance" Kind="Class" />
      <Type Name="UITabBarController" Kind="Class" />
      <Type Name="UITabBarControllerDelegate" Kind="Class" />
      <Type Name="UITabBarControllerDelegate_Extensions" Kind="Class" />
      <Type Name="UITabBarCustomizeChangeEventArgs" Kind="Class" />
      <Type Name="UITabBarCustomizeEventArgs" Kind="Class" />
      <Type Name="UITabBarDelegate" Kind="Class" />
      <Type Name="UITabBarDelegate_Extensions" Kind="Class" />
      <Type Name="UITabBarFinalItemsEventArgs" Kind="Class" />
      <Type Name="UITabBarItem" Kind="Class" />
      <Type Name="UITabBarItem+UITabBarItemAppearance" Kind="Class" />
      <Type Name="UITabBarItemEventArgs" Kind="Class" />
      <Type Name="UITabBarItemPositioning" Kind="Enumeration" />
      <Type Name="UITabBarItemsEventArgs" Kind="Class" />
      <Type Name="UITabBarSelection" Kind="Delegate" />
      <Type Name="UITabBarSelectionEventArgs" Kind="Class" />
      <Type Name="UITabBarSystemItem" Kind="Enumeration" />
      <Type Name="UITableView" Kind="Class" />
      <Type Name="UITableView+Notifications" Kind="Class" />
      <Type Name="UITableView+UITableViewAppearance" Kind="Class" />
      <Type Name="UITableViewCell" Kind="Class" />
      <Type Name="UITableViewCell+UITableViewCellAppearance" Kind="Class" />
      <Type Name="UITableViewCellAccessory" Kind="Enumeration" />
      <Type Name="UITableViewCellDragState" Kind="Enumeration" />
      <Type Name="UITableViewCellEditingStyle" Kind="Enumeration" />
      <Type Name="UITableViewCellFocusStyle" Kind="Enumeration" />
      <Type Name="UITableViewCellSelectionStyle" Kind="Enumeration" />
      <Type Name="UITableViewCellSeparatorStyle" Kind="Enumeration" />
      <Type Name="UITableViewCellState" Kind="Enumeration" />
      <Type Name="UITableViewCellStyle" Kind="Enumeration" />
      <Type Name="UITableViewController" Kind="Class" />
      <Type Name="UITableViewDataSource" Kind="Class" />
      <Type Name="UITableViewDataSource_Extensions" Kind="Class" />
      <Type Name="UITableViewDataSourcePrefetching_Extensions" Kind="Class" />
      <Type Name="UITableViewDelegate" Kind="Class" />
      <Type Name="UITableViewDelegate_Extensions" Kind="Class" />
      <Type Name="UITableViewDragDelegate" Kind="Class" />
      <Type Name="UITableViewDragDelegate_Extensions" Kind="Class" />
      <Type Name="UITableViewDropDelegate" Kind="Class" />
      <Type Name="UITableViewDropDelegate_Extensions" Kind="Class" />
      <Type Name="UITableViewDropIntent" Kind="Enumeration" />
      <Type Name="UITableViewDropPlaceholder" Kind="Class" />
      <Type Name="UITableViewDropProposal" Kind="Class" />
      <Type Name="UITableViewFocusUpdateContext" Kind="Class" />
      <Type Name="UITableViewHeaderFooterView" Kind="Class" />
      <Type Name="UITableViewHeaderFooterView+UITableViewHeaderFooterViewAppearance" Kind="Class" />
      <Type Name="UITableViewPlaceholder" Kind="Class" />
      <Type Name="UITableViewRowAction" Kind="Class" />
      <Type Name="UITableViewRowActionStyle" Kind="Enumeration" />
      <Type Name="UITableViewRowAnimation" Kind="Enumeration" />
      <Type Name="UITableViewScrollPosition" Kind="Enumeration" />
      <Type Name="UITableViewSeparatorInsetReference" Kind="Enumeration" />
      <Type Name="UITableViewSource" Kind="Class" />
      <Type Name="UITableViewStyle" Kind="Enumeration" />
      <Type Name="UITapGestureRecognizer" Kind="Class" />
      <Type Name="UITargetedDragPreview" Kind="Class" />
      <Type Name="UITextAlignment" Kind="Enumeration" />
      <Type Name="UITextAttributes" Kind="Class" />
      <Type Name="UITextAutocapitalizationType" Kind="Enumeration" />
      <Type Name="UITextAutocorrectionType" Kind="Enumeration" />
      <Type Name="UITextBorderStyle" Kind="Enumeration" />
      <Type Name="UITextChecker" Kind="Class" />
      <Type Name="UITextContentType" Kind="Class" />
      <Type Name="UITextDirection" Kind="Enumeration" />
      <Type Name="UITextDocumentProxy" Kind="Class" />
      <Type Name="UITextDocumentProxy_Extensions" Kind="Class" />
      <Type Name="UITextDragDelegate" Kind="Class" />
      <Type Name="UITextDragDelegate_Extensions" Kind="Class" />
      <Type Name="UITextDragOptions" Kind="Enumeration" />
      <Type Name="UITextDragPreviewRenderer" Kind="Class" />
      <Type Name="UITextDropAction" Kind="Enumeration" />
      <Type Name="UITextDropDelegate" Kind="Class" />
      <Type Name="UITextDropDelegate_Extensions" Kind="Class" />
      <Type Name="UITextDropEditability" Kind="Enumeration" />
      <Type Name="UITextDropPerformer" Kind="Enumeration" />
      <Type Name="UITextDropProgressMode" Kind="Enumeration" />
      <Type Name="UITextDropProposal" Kind="Class" />
      <Type Name="UITextField" Kind="Class" />
      <Type Name="UITextField+Notifications" Kind="Class" />
      <Type Name="UITextField+UITextFieldAppearance" Kind="Class" />
      <Type Name="UITextFieldChange" Kind="Delegate" />
      <Type Name="UITextFieldCondition" Kind="Delegate" />
      <Type Name="UITextFieldDelegate" Kind="Class" />
      <Type Name="UITextFieldDelegate_Extensions" Kind="Class" />
      <Type Name="UITextFieldDidEndEditingReason" Kind="Enumeration" />
      <Type Name="UITextFieldEditingEndedEventArgs" Kind="Class" />
      <Type Name="UITextFieldViewMode" Kind="Enumeration" />
      <Type Name="UITextGranularity" Kind="Enumeration" />
      <Type Name="UITextInput_Extensions" Kind="Class" />
      <Type Name="UITextInputAssistantItem" Kind="Class" />
      <Type Name="UITextInputDelegate" Kind="Class" />
      <Type Name="UITextInputMode" Kind="Class" />
      <Type Name="UITextInputMode+Notifications" Kind="Class" />
      <Type Name="UITextInputStringTokenizer" Kind="Class" />
      <Type Name="UITextInputTokenizer" Kind="Class" />
      <Type Name="UITextInputTraits_Extensions" Kind="Class" />
      <Type Name="UITextItemInteraction" Kind="Enumeration" />
      <Type Name="UITextLayoutDirection" Kind="Enumeration" />
      <Type Name="UITextPasteDelegate" Kind="Class" />
      <Type Name="UITextPasteDelegate_Extensions" Kind="Class" />
      <Type Name="UITextPosition" Kind="Class" />
      <Type Name="UITextRange" Kind="Class" />
      <Type Name="UITextSelectionRect" Kind="Class" />
      <Type Name="UITextSmartDashesType" Kind="Enumeration" />
      <Type Name="UITextSmartInsertDeleteType" Kind="Enumeration" />
      <Type Name="UITextSmartQuotesType" Kind="Enumeration" />
      <Type Name="UITextSpellCheckingType" Kind="Enumeration" />
      <Type Name="UITextStorageDirection" Kind="Enumeration" />
      <Type Name="UITextView" Kind="Class" />
      <Type Name="UITextView+Notifications" Kind="Class" />
      <Type Name="UITextView+UITextViewAppearance" Kind="Class" />
      <Type Name="UITextViewChange" Kind="Delegate" />
      <Type Name="UITextViewCondition" Kind="Delegate" />
      <Type Name="UITextViewDelegate" Kind="Class" />
      <Type Name="UITextViewDelegate_Extensions" Kind="Class" />
      <Type Name="UITextViewDelegateShouldInteractTextDelegate" Kind="Delegate" />
      <Type Name="UITextViewDelegateShouldInteractUrlDelegate" Kind="Delegate" />
      <Type Name="UITextWritingDirection" Kind="Enumeration" />
      <Type Name="UITimingCurveType" Kind="Enumeration" />
      <Type Name="UIToolbar" Kind="Class" />
      <Type Name="UIToolbar+UIToolbarAppearance" Kind="Class" />
      <Type Name="UIToolbarDelegate" Kind="Class" />
      <Type Name="UIToolbarPosition" Kind="Enumeration" />
      <Type Name="UITouch" Kind="Class" />
      <Type Name="UITouchEventArgs" Kind="Delegate" />
      <Type Name="UITouchPhase" Kind="Enumeration" />
      <Type Name="UITouchProperties" Kind="Enumeration" />
      <Type Name="UITouchType" Kind="Enumeration" />
      <Type Name="UITraitCollection" Kind="Class" />
      <Type Name="UITraitEnvironment" Kind="Class" />
      <Type Name="UITraitEnvironmentLayoutDirection" Kind="Enumeration" />
      <Type Name="UITransitionContext" Kind="Class" />
      <Type Name="UITransitionViewControllerKind" Kind="Enumeration" />
      <Type Name="UIUserInterfaceIdiom" Kind="Enumeration" />
      <Type Name="UIUserInterfaceLayoutDirection" Kind="Enumeration" />
      <Type Name="UIUserInterfaceSizeClass" Kind="Enumeration" />
      <Type Name="UIUserNotificationAction" Kind="Class" />
      <Type Name="UIUserNotificationActionBehavior" Kind="Enumeration" />
      <Type Name="UIUserNotificationActionContext" Kind="Enumeration" />
      <Type Name="UIUserNotificationActivationMode" Kind="Enumeration" />
      <Type Name="UIUserNotificationCategory" Kind="Class" />
      <Type Name="UIUserNotificationSettings" Kind="Class" />
      <Type Name="UIUserNotificationType" Kind="Enumeration" />
      <Type Name="UIVibrancyEffect" Kind="Class" />
      <Type Name="UIVideo" Kind="Class" />
      <Type Name="UIVideo+SaveStatus" Kind="Delegate" />
      <Type Name="UIVideoEditorController" Kind="Class" />
      <Type Name="UIVideoEditorControllerDelegate" Kind="Class" />
      <Type Name="UIVideoEditorControllerDelegate_Extensions" Kind="Class" />
      <Type Name="UIView" Kind="Class" />
      <Type Name="UIView_UITextField" Kind="Class" />
      <Type Name="UIView+Notifications" Kind="Class" />
      <Type Name="UIView+UIViewAppearance" Kind="Class" />
      <Type Name="UIViewAnimatingPosition" Kind="Enumeration" />
      <Type Name="UIViewAnimatingState" Kind="Enumeration" />
      <Type Name="UIViewAnimationCurve" Kind="Enumeration" />
      <Type Name="UIViewAnimationOptions" Kind="Enumeration" />
      <Type Name="UIViewAnimationTransition" Kind="Enumeration" />
      <Type Name="UIViewAutoresizing" Kind="Enumeration" />
      <Type Name="UIViewContentMode" Kind="Enumeration" />
      <Type Name="UIViewController" Kind="Class" />
      <Type Name="UIViewController+Notifications" Kind="Class" />
      <Type Name="UIViewControllerAnimatedTransitioning" Kind="Class" />
      <Type Name="UIViewControllerAnimatedTransitioning_Extensions" Kind="Class" />
      <Type Name="UIViewControllerContextTransitioning" Kind="Class" />
      <Type Name="UIViewControllerContextTransitioning_Extensions" Kind="Class" />
      <Type Name="UIViewControllerInteractiveTransitioning" Kind="Class" />
      <Type Name="UIViewControllerInteractiveTransitioning_Extensions" Kind="Class" />
      <Type Name="UIViewControllerPreviewingDelegate" Kind="Class" />
      <Type Name="UIViewControllerTransitionCoordinator_Extensions" Kind="Class" />
      <Type Name="UIViewControllerTransitionCoordinatorContext_Extensions" Kind="Class" />
      <Type Name="UIViewControllerTransitioningDelegate" Kind="Class" />
      <Type Name="UIViewControllerTransitioningDelegate_Extensions" Kind="Class" />
      <Type Name="UIViewImplicitlyAnimating_Extensions" Kind="Class" />
      <Type Name="UIViewKeyframeAnimationOptions" Kind="Enumeration" />
      <Type Name="UIViewPrintFormatter" Kind="Class" />
      <Type Name="UIViewPropertyAnimator" Kind="Class" />
      <Type Name="UIViewTintAdjustmentMode" Kind="Enumeration" />
      <Type Name="UIVisualEffect" Kind="Class" />
      <Type Name="UIVisualEffectView" Kind="Class" />
      <Type Name="UIVisualEffectView+UIVisualEffectViewAppearance" Kind="Class" />
      <Type Name="UIWebErrorArgs" Kind="Class" />
      <Type Name="UIWebLoaderControl" Kind="Delegate" />
      <Type Name="UIWebPaginationBreakingMode" Kind="Enumeration" />
      <Type Name="UIWebPaginationMode" Kind="Enumeration" />
      <Type Name="UIWebView" Kind="Class" />
      <Type Name="UIWebView+UIWebViewAppearance" Kind="Class" />
      <Type Name="UIWebViewDelegate" Kind="Class" />
      <Type Name="UIWebViewDelegate_Extensions" Kind="Class" />
      <Type Name="UIWebViewNavigationType" Kind="Enumeration" />
      <Type Name="UIWindow" Kind="Class" />
      <Type Name="UIWindow+Notifications" Kind="Class" />
      <Type Name="UIWindow+UIWindowAppearance" Kind="Class" />
      <Type Name="UIWindowLevel" Kind="Class" />
      <Type Name="WillEndDraggingEventArgs" Kind="Class" />
      <Type Name="ZoomingEndedEventArgs" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.UserNotifications">
      <Type Name="IUNUserNotificationCenterDelegate" Kind="Interface" />
      <Type Name="UNAlertStyle" Kind="Enumeration" />
      <Type Name="UNAuthorizationOptions" Kind="Enumeration" />
      <Type Name="UNAuthorizationStatus" Kind="Enumeration" />
      <Type Name="UNCalendarNotificationTrigger" Kind="Class" />
      <Type Name="UNErrorCode" Kind="Enumeration" />
      <Type Name="UNErrorCodeExtensions" Kind="Class" />
      <Type Name="UNLocationNotificationTrigger" Kind="Class" />
      <Type Name="UNMutableNotificationContent" Kind="Class" />
      <Type Name="UNNotification" Kind="Class" />
      <Type Name="UNNotificationAction" Kind="Class" />
      <Type Name="UNNotificationActionOptions" Kind="Enumeration" />
      <Type Name="UNNotificationAttachment" Kind="Class" />
      <Type Name="UNNotificationAttachmentOptions" Kind="Class" />
      <Type Name="UNNotificationCategory" Kind="Class" />
      <Type Name="UNNotificationCategoryOptions" Kind="Enumeration" />
      <Type Name="UNNotificationContent" Kind="Class" />
      <Type Name="UNNotificationPresentationOptions" Kind="Enumeration" />
      <Type Name="UNNotificationRequest" Kind="Class" />
      <Type Name="UNNotificationResponse" Kind="Class" />
      <Type Name="UNNotificationServiceExtension" Kind="Class" />
      <Type Name="UNNotificationSetting" Kind="Enumeration" />
      <Type Name="UNNotificationSettings" Kind="Class" />
      <Type Name="UNNotificationSound" Kind="Class" />
      <Type Name="UNNotificationTrigger" Kind="Class" />
      <Type Name="UNPushNotificationTrigger" Kind="Class" />
      <Type Name="UNShowPreviewsSetting" Kind="Enumeration" />
      <Type Name="UNTextInputNotificationAction" Kind="Class" />
      <Type Name="UNTextInputNotificationResponse" Kind="Class" />
      <Type Name="UNTimeIntervalNotificationTrigger" Kind="Class" />
      <Type Name="UNUserNotificationCenter" Kind="Class" />
      <Type Name="UNUserNotificationCenterDelegate" Kind="Class" />
      <Type Name="UNUserNotificationCenterDelegate_Extensions" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.UserNotificationsUI">
      <Type Name="IUNNotificationContentExtension" Kind="Interface" />
      <Type Name="NSExtensionContext_UNNotificationContentExtension" Kind="Class" />
      <Type Name="UNNotificationContentExtension_Extensions" Kind="Class" />
      <Type Name="UNNotificationContentExtensionMediaPlayPauseButtonType" Kind="Enumeration" />
      <Type Name="UNNotificationContentExtensionResponseOption" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.VideoSubscriberAccount">
      <Type Name="IVSAccountManagerDelegate" Kind="Interface" />
      <Type Name="VSAccountAccessStatus" Kind="Enumeration" />
      <Type Name="VSAccountManager" Kind="Class" />
      <Type Name="VSAccountManagerAccessOptions" Kind="Class" />
      <Type Name="VSAccountManagerDelegate" Kind="Class" />
      <Type Name="VSAccountManagerDelegate_Extensions" Kind="Class" />
      <Type Name="VSAccountManagerResult" Kind="Class" />
      <Type Name="VSAccountMetadata" Kind="Class" />
      <Type Name="VSAccountMetadataRequest" Kind="Class" />
      <Type Name="VSAccountProviderAuthenticationScheme" Kind="Enumeration" />
      <Type Name="VSAccountProviderAuthenticationSchemeExtensions" Kind="Class" />
      <Type Name="VSAccountProviderResponse" Kind="Class" />
      <Type Name="VSErrorCode" Kind="Enumeration" />
      <Type Name="VSErrorCodeExtensions" Kind="Class" />
      <Type Name="VSErrorInfo" Kind="Class" />
      <Type Name="VSSubscription" Kind="Class" />
      <Type Name="VSSubscriptionAccessLevel" Kind="Enumeration" />
      <Type Name="VSSubscriptionRegistrationCenter" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.VideoToolbox">
      <Type Name="VTColorPrimaries" Kind="Enumeration" />
      <Type Name="VTCompressionProperties" Kind="Class" />
      <Type Name="VTCompressionPropertyKey" Kind="Class" />
      <Type Name="VTCompressionSession" Kind="Class" />
      <Type Name="VTCompressionSession+VTCompressionOutputCallback" Kind="Delegate" />
      <Type Name="VTCompressionSessionOptionFlags" Kind="Enumeration" />
      <Type Name="VTDataRateLimit" Kind="Structure" />
      <Type Name="VTDecodeFrameFlags" Kind="Enumeration" />
      <Type Name="VTDecodeInfoFlags" Kind="Enumeration" />
      <Type Name="VTDecompressionProperties" Kind="Class" />
      <Type Name="VTDecompressionPropertyKey" Kind="Class" />
      <Type Name="VTDecompressionResolutionKeys" Kind="Class" />
      <Type Name="VTDecompressionResolutionOptions" Kind="Class" />
      <Type Name="VTDecompressionSession" Kind="Class" />
      <Type Name="VTDecompressionSession+VTDecompressionOutputCallback" Kind="Delegate" />
      <Type Name="VTDeinterlaceMode" Kind="Enumeration" />
      <Type Name="VTDownsamplingMode" Kind="Enumeration" />
      <Type Name="VTEncodeFrameOptionKey" Kind="Class" />
      <Type Name="VTEncodeFrameOptions" Kind="Class" />
      <Type Name="VTEncodeInfoFlags" Kind="Enumeration" />
      <Type Name="VTFieldCount" Kind="Enumeration" />
      <Type Name="VTFieldDetail" Kind="Enumeration" />
      <Type Name="VTFieldMode" Kind="Enumeration" />
      <Type Name="VTFrameSilo" Kind="Class" />
      <Type Name="VTH264EntropyMode" Kind="Enumeration" />
      <Type Name="VTH264EntropyModeKeys" Kind="Class" />
      <Type Name="VTMultiPassStorage" Kind="Class" />
      <Type Name="VTMultiPassStorageCreationOptionKeys" Kind="Class" />
      <Type Name="VTMultiPassStorageCreationOptions" Kind="Class" />
      <Type Name="VTOnlyTheseFrames" Kind="Enumeration" />
      <Type Name="VTPixelTransferProperties" Kind="Class" />
      <Type Name="VTPixelTransferPropertyKeys" Kind="Class" />
      <Type Name="VTProfileLevel" Kind="Enumeration" />
      <Type Name="VTProfileLevelKeys" Kind="Class" />
      <Type Name="VTPropertyKeys" Kind="Class" />
      <Type Name="VTPropertyOptions" Kind="Class" />
      <Type Name="VTPropertyReadWriteStatusKeys" Kind="Class" />
      <Type Name="VTPropertyType" Kind="Enumeration" />
      <Type Name="VTPropertyTypeKeys" Kind="Class" />
      <Type Name="VTReadWriteStatus" Kind="Enumeration" />
      <Type Name="VTScalingMode" Kind="Enumeration" />
      <Type Name="VTSession" Kind="Class" />
      <Type Name="VTStatus" Kind="Enumeration" />
      <Type Name="VTTransferFunction" Kind="Enumeration" />
      <Type Name="VTUtilities" Kind="Class" />
      <Type Name="VTVideoDecoderSpecification" Kind="Class" />
      <Type Name="VTVideoDecoderSpecificationKeys" Kind="Class" />
      <Type Name="VTVideoEncoder" Kind="Class" />
      <Type Name="VTVideoEncoderSpecification" Kind="Class" />
      <Type Name="VTVideoEncoderSpecificationKeys" Kind="Class" />
      <Type Name="VTYCbCrMatrix" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.Vision">
      <Type Name="IVNFaceObservationAccepting" Kind="Interface" />
      <Type Name="VNBarcodeObservation" Kind="Class" />
      <Type Name="VNBarcodeSymbology" Kind="Enumeration" />
      <Type Name="VNBarcodeSymbologyExtensions" Kind="Class" />
      <Type Name="VNClassificationObservation" Kind="Class" />
      <Type Name="VNCoreMLFeatureValueObservation" Kind="Class" />
      <Type Name="VNCoreMLModel" Kind="Class" />
      <Type Name="VNCoreMLRequest" Kind="Class" />
      <Type Name="VNDetectBarcodesRequest" Kind="Class" />
      <Type Name="VNDetectedObjectObservation" Kind="Class" />
      <Type Name="VNDetectFaceLandmarksRequest" Kind="Class" />
      <Type Name="VNDetectFaceRectanglesRequest" Kind="Class" />
      <Type Name="VNDetectHorizonRequest" Kind="Class" />
      <Type Name="VNDetectRectanglesRequest" Kind="Class" />
      <Type Name="VNDetectTextRectanglesRequest" Kind="Class" />
      <Type Name="VNErrorCode" Kind="Enumeration" />
      <Type Name="VNErrorCodeExtensions" Kind="Class" />
      <Type Name="VNFaceLandmarkRegion" Kind="Class" />
      <Type Name="VNFaceLandmarkRegion2D" Kind="Class" />
      <Type Name="VNFaceLandmarks" Kind="Class" />
      <Type Name="VNFaceLandmarks2D" Kind="Class" />
      <Type Name="VNFaceObservation" Kind="Class" />
      <Type Name="VNHomographicImageRegistrationRequest" Kind="Class" />
      <Type Name="VNHorizonObservation" Kind="Class" />
      <Type Name="VNImageAlignmentObservation" Kind="Class" />
      <Type Name="VNImageBasedRequest" Kind="Class" />
      <Type Name="VNImageCropAndScaleOption" Kind="Enumeration" />
      <Type Name="VNImageHomographicAlignmentObservation" Kind="Class" />
      <Type Name="VNImageOptions" Kind="Class" />
      <Type Name="VNImageRegistrationRequest" Kind="Class" />
      <Type Name="VNImageRequestHandler" Kind="Class" />
      <Type Name="VNImageTranslationAlignmentObservation" Kind="Class" />
      <Type Name="VNObservation" Kind="Class" />
      <Type Name="VNPixelBufferObservation" Kind="Class" />
      <Type Name="VNRectangleObservation" Kind="Class" />
      <Type Name="VNRequest" Kind="Class" />
      <Type Name="VNRequestCompletionHandler" Kind="Delegate" />
      <Type Name="VNRequestTrackingLevel" Kind="Enumeration" />
      <Type Name="VNSequenceRequestHandler" Kind="Class" />
      <Type Name="VNTargetedImageRequest" Kind="Class" />
      <Type Name="VNTextObservation" Kind="Class" />
      <Type Name="VNTrackingRequest" Kind="Class" />
      <Type Name="VNTrackObjectRequest" Kind="Class" />
      <Type Name="VNTrackRectangleRequest" Kind="Class" />
      <Type Name="VNTranslationalImageRegistrationRequest" Kind="Class" />
      <Type Name="VNUtils" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.WatchConnectivity">
      <Type Name="IWCSessionDelegate" Kind="Interface" />
      <Type Name="WCErrorCode" Kind="Enumeration" />
      <Type Name="WCSession" Kind="Class" />
      <Type Name="WCSessionActivationState" Kind="Enumeration" />
      <Type Name="WCSessionDelegate" Kind="Class" />
      <Type Name="WCSessionDelegate_Extensions" Kind="Class" />
      <Type Name="WCSessionFile" Kind="Class" />
      <Type Name="WCSessionFileTransfer" Kind="Class" />
      <Type Name="WCSessionReplyDataHandler" Kind="Delegate" />
      <Type Name="WCSessionReplyHandler" Kind="Delegate" />
      <Type Name="WCSessionUserInfoTransfer" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.WatchKit">
      <Type Name="IWKImageAnimatable" Kind="Interface" />
      <Type Name="WKAccessibility" Kind="Class" />
      <Type Name="WKAccessibilityImageRegion" Kind="Class" />
      <Type Name="WKErrorCode" Kind="Enumeration" />
      <Type Name="WKErrorCodeExtensions" Kind="Class" />
      <Type Name="WKInterfaceButton" Kind="Class" />
      <Type Name="WKInterfaceController" Kind="Class" />
      <Type Name="WKInterfaceDate" Kind="Class" />
      <Type Name="WKInterfaceDevice" Kind="Class" />
      <Type Name="WKInterfaceGroup" Kind="Class" />
      <Type Name="WKInterfaceImage" Kind="Class" />
      <Type Name="WKInterfaceLabel" Kind="Class" />
      <Type Name="WKInterfaceMap" Kind="Class" />
      <Type Name="WKInterfaceMapPinColor" Kind="Enumeration" />
      <Type Name="WKInterfaceObject" Kind="Class" />
      <Type Name="WKInterfaceObject+Notifications" Kind="Class" />
      <Type Name="WKInterfaceSeparator" Kind="Class" />
      <Type Name="WKInterfaceSlider" Kind="Class" />
      <Type Name="WKInterfaceSwitch" Kind="Class" />
      <Type Name="WKInterfaceTable" Kind="Class" />
      <Type Name="WKInterfaceTimer" Kind="Class" />
      <Type Name="WKMenuItemIcon" Kind="Enumeration" />
      <Type Name="WKPresentMediaPlayerResult" Kind="Class" />
      <Type Name="WKTextInputMode" Kind="Enumeration" />
      <Type Name="WKUserNotificationInterfaceController" Kind="Class" />
      <Type Name="WKUserNotificationInterfaceType" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.WebKit">
      <Type Name="IWKHttpCookieStoreObserver" Kind="Interface" />
      <Type Name="IWKNavigationDelegate" Kind="Interface" />
      <Type Name="IWKPreviewActionItem" Kind="Interface" />
      <Type Name="IWKScriptMessageHandler" Kind="Interface" />
      <Type Name="IWKUIDelegate" Kind="Interface" />
      <Type Name="IWKUrlSchemeHandler" Kind="Interface" />
      <Type Name="IWKUrlSchemeTask" Kind="Interface" />
      <Type Name="WKAudiovisualMediaTypes" Kind="Enumeration" />
      <Type Name="WKBackForwardList" Kind="Class" />
      <Type Name="WKBackForwardListItem" Kind="Class" />
      <Type Name="WKContentRuleList" Kind="Class" />
      <Type Name="WKContentRuleListStore" Kind="Class" />
      <Type Name="WKDataDetectorTypes" Kind="Enumeration" />
      <Type Name="WKErrorCode" Kind="Enumeration" />
      <Type Name="WKErrorCodeExtensions" Kind="Class" />
      <Type Name="WKFrameInfo" Kind="Class" />
      <Type Name="WKHttpCookieStore" Kind="Class" />
      <Type Name="WKHttpCookieStoreObserver_Extensions" Kind="Class" />
      <Type Name="WKJavascriptEvaluationResult" Kind="Delegate" />
      <Type Name="WKNavigation" Kind="Class" />
      <Type Name="WKNavigationAction" Kind="Class" />
      <Type Name="WKNavigationActionPolicy" Kind="Enumeration" />
      <Type Name="WKNavigationDelegate" Kind="Class" />
      <Type Name="WKNavigationDelegate_Extensions" Kind="Class" />
      <Type Name="WKNavigationResponse" Kind="Class" />
      <Type Name="WKNavigationResponsePolicy" Kind="Enumeration" />
      <Type Name="WKNavigationType" Kind="Enumeration" />
      <Type Name="WKPreferences" Kind="Class" />
      <Type Name="WKPreviewActionItemIdentifier" Kind="Class" />
      <Type Name="WKPreviewElementInfo" Kind="Class" />
      <Type Name="WKProcessPool" Kind="Class" />
      <Type Name="WKScriptMessage" Kind="Class" />
      <Type Name="WKScriptMessageHandler" Kind="Class" />
      <Type Name="WKSecurityOrigin" Kind="Class" />
      <Type Name="WKSelectionGranularity" Kind="Enumeration" />
      <Type Name="WKSnapshotConfiguration" Kind="Class" />
      <Type Name="WKUIDelegate" Kind="Class" />
      <Type Name="WKUIDelegate_Extensions" Kind="Class" />
      <Type Name="WKUserContentController" Kind="Class" />
      <Type Name="WKUserScript" Kind="Class" />
      <Type Name="WKUserScriptInjectionTime" Kind="Enumeration" />
      <Type Name="WKWebsiteDataRecord" Kind="Class" />
      <Type Name="WKWebsiteDataStore" Kind="Class" />
      <Type Name="WKWebsiteDataType" Kind="Class" />
      <Type Name="WKWebView" Kind="Class" />
      <Type Name="WKWebView+WKWebViewAppearance" Kind="Class" />
      <Type Name="WKWebViewConfiguration" Kind="Class" />
      <Type Name="WKWindowFeatures" Kind="Class" />
    </Namespace>
    <Namespace Name="NUnit">
      <Type Name="Env" Kind="Class" />
      <Type Name="ObjectList" Kind="Class" />
    </Namespace>
    <Namespace Name="NUnit.Framework">
      <Type Name="Assert" Kind="Class" />
      <Type Name="AssertionException" Kind="Class" />
      <Type Name="AssertionHelper" Kind="Class" />
      <Type Name="Assume" Kind="Class" />
      <Type Name="CategoryAttribute" Kind="Class" />
      <Type Name="CombinatorialAttribute" Kind="Class" />
      <Type Name="Contains" Kind="Class" />
      <Type Name="CultureAttribute" Kind="Class" />
      <Type Name="DataAttribute" Kind="Class" />
      <Type Name="DatapointAttribute" Kind="Class" />
      <Type Name="DatapointsAttribute" Kind="Class" />
      <Type Name="DatapointSourceAttribute" Kind="Class" />
      <Type Name="DescriptionAttribute" Kind="Class" />
      <Type Name="ExpectedExceptionAttribute" Kind="Class" />
      <Type Name="ExpectedExceptionDecorator" Kind="Class" />
      <Type Name="ExplicitAttribute" Kind="Class" />
      <Type Name="GlobalSettings" Kind="Class" />
      <Type Name="Guard" Kind="Class" />
      <Type Name="Has" Kind="Class" />
      <Type Name="IExpectException" Kind="Interface" />
      <Type Name="IgnoreAttribute" Kind="Class" />
      <Type Name="IgnoreException" Kind="Class" />
      <Type Name="IncludeExcludeAttribute" Kind="Class" />
      <Type Name="InconclusiveException" Kind="Class" />
      <Type Name="Is" Kind="Class" />
      <Type Name="Iz" Kind="Class" />
      <Type Name="ListMapper" Kind="Class" />
      <Type Name="MaxTimeAttribute" Kind="Class" />
      <Type Name="MessageMatch" Kind="Enumeration" />
      <Type Name="NUnitAttribute" Kind="Class" />
      <Type Name="PairwiseAttribute" Kind="Class" />
      <Type Name="PlatformAttribute" Kind="Class" />
      <Type Name="PostTestAttribute" Kind="Class" />
      <Type Name="PreTestAttribute" Kind="Class" />
      <Type Name="PropertyAttribute" Kind="Class" />
      <Type Name="RandomAttribute" Kind="Class" />
      <Type Name="RangeAttribute" Kind="Class" />
      <Type Name="SequentialAttribute" Kind="Class" />
      <Type Name="SetCultureAttribute" Kind="Class" />
      <Type Name="SetUICultureAttribute" Kind="Class" />
      <Type Name="SetUpAttribute" Kind="Class" />
      <Type Name="SpecialValue" Kind="Enumeration" />
      <Type Name="SuccessException" Kind="Class" />
      <Type Name="TearDownAttribute" Kind="Class" />
      <Type Name="TestAttribute" Kind="Class" />
      <Type Name="TestCaseAttribute" Kind="Class" />
      <Type Name="TestCaseData" Kind="Class" />
      <Type Name="TestCaseSourceAttribute" Kind="Class" />
      <Type Name="TestContext" Kind="Class" />
      <Type Name="TestContext+ResultAdapter" Kind="Class" />
      <Type Name="TestContext+TestAdapter" Kind="Class" />
      <Type Name="TestDelegate" Kind="Delegate" />
      <Type Name="TestFixtureAttribute" Kind="Class" />
      <Type Name="TestFixtureSetUpAttribute" Kind="Class" />
      <Type Name="TestFixtureTearDownAttribute" Kind="Class" />
      <Type Name="TheoryAttribute" Kind="Class" />
      <Type Name="Throws" Kind="Class" />
      <Type Name="TimeoutAttribute" Kind="Class" />
      <Type Name="ValuesAttribute" Kind="Class" />
      <Type Name="ValueSourceAttribute" Kind="Class" />
    </Namespace>
    <Namespace Name="NUnit.Framework.Api">
      <Type Name="AttributeDictionary" Kind="Class" />
      <Type Name="ExpectedExceptionData" Kind="Structure" />
      <Type Name="IDynamicTestCaseSource" Kind="Interface" />
      <Type Name="IParameterDataSource" Kind="Interface" />
      <Type Name="IPropertyBag" Kind="Interface" />
      <Type Name="ITest" Kind="Interface" />
      <Type Name="ITestAssemblyBuilder" Kind="Interface" />
      <Type Name="ITestAssemblyRunner" Kind="Interface" />
      <Type Name="ITestCaseData" Kind="Interface" />
      <Type Name="ITestCaseSource" Kind="Interface" />
      <Type Name="ITestFilter" Kind="Interface" />
      <Type Name="ITestListener" Kind="Interface" />
      <Type Name="ITestResult" Kind="Interface" />
      <Type Name="IXmlNodeBuilder" Kind="Interface" />
      <Type Name="NodeList" Kind="Class" />
      <Type Name="PropertyEntry" Kind="Class" />
      <Type Name="ResultState" Kind="Class" />
      <Type Name="RunState" Kind="Enumeration" />
      <Type Name="TestOutput" Kind="Class" />
      <Type Name="TestOutputType" Kind="Enumeration" />
      <Type Name="TestStatus" Kind="Enumeration" />
      <Type Name="XmlNode" Kind="Class" />
    </Namespace>
    <Namespace Name="NUnit.Framework.Builders">
      <Type Name="CombinatorialStrategy" Kind="Class" />
      <Type Name="CombinatorialTestCaseProvider" Kind="Class" />
      <Type Name="CombiningStrategy" Kind="Class" />
      <Type Name="DataAttributeTestCaseProvider" Kind="Class" />
      <Type Name="DatapointProvider" Kind="Class" />
      <Type Name="NUnitTestCaseBuilder" Kind="Class" />
      <Type Name="NUnitTestFixtureBuilder" Kind="Class" />
      <Type Name="PairwiseStrategy" Kind="Class" />
      <Type Name="ParameterDataProvider" Kind="Class" />
      <Type Name="SequentialStrategy" Kind="Class" />
    </Namespace>
    <Namespace Name="NUnit.Framework.Constraints">
      <Type Name="ActualValueDelegate`1" DisplayName="ActualValueDelegate&lt;T&gt;" Kind="Delegate" />
      <Type Name="AllItemsConstraint" Kind="Class" />
      <Type Name="AllOperator" Kind="Class" />
      <Type Name="AndConstraint" Kind="Class" />
      <Type Name="AndOperator" Kind="Class" />
      <Type Name="AssignableFromConstraint" Kind="Class" />
      <Type Name="AssignableToConstraint" Kind="Class" />
      <Type Name="AttributeConstraint" Kind="Class" />
      <Type Name="AttributeExistsConstraint" Kind="Class" />
      <Type Name="AttributeOperator" Kind="Class" />
      <Type Name="BasicConstraint" Kind="Class" />
      <Type Name="BinaryConstraint" Kind="Class" />
      <Type Name="BinaryOperator" Kind="Class" />
      <Type Name="BinarySerializableConstraint" Kind="Class" />
      <Type Name="CollectionConstraint" Kind="Class" />
      <Type Name="CollectionContainsConstraint" Kind="Class" />
      <Type Name="CollectionEquivalentConstraint" Kind="Class" />
      <Type Name="CollectionItemsEqualConstraint" Kind="Class" />
      <Type Name="CollectionOperator" Kind="Class" />
      <Type Name="CollectionOrderedConstraint" Kind="Class" />
      <Type Name="CollectionSubsetConstraint" Kind="Class" />
      <Type Name="CollectionTally" Kind="Class" />
      <Type Name="ComparisonAdapter" Kind="Class" />
      <Type Name="ComparisonConstraint" Kind="Class" />
      <Type Name="Constraint" Kind="Class" />
      <Type Name="ConstraintBuilder" Kind="Class" />
      <Type Name="ConstraintBuilder+ConstraintStack" Kind="Class" />
      <Type Name="ConstraintBuilder+OperatorStack" Kind="Class" />
      <Type Name="ConstraintExpression" Kind="Class" />
      <Type Name="ConstraintExpressionBase" Kind="Class" />
      <Type Name="ConstraintFactory" Kind="Class" />
      <Type Name="ConstraintOperator" Kind="Class" />
      <Type Name="ContainsConstraint" Kind="Class" />
      <Type Name="DelayedConstraint" Kind="Class" />
      <Type Name="EmptyCollectionConstraint" Kind="Class" />
      <Type Name="EmptyConstraint" Kind="Class" />
      <Type Name="EmptyDirectoryConstraint" Kind="Class" />
      <Type Name="EmptyStringConstraint" Kind="Class" />
      <Type Name="EndsWithConstraint" Kind="Class" />
      <Type Name="EqualConstraint" Kind="Class" />
      <Type Name="EqualityAdapter" Kind="Class" />
      <Type Name="ExactCountConstraint" Kind="Class" />
      <Type Name="ExactCountOperator" Kind="Class" />
      <Type Name="ExactTypeConstraint" Kind="Class" />
      <Type Name="ExceptionTypeConstraint" Kind="Class" />
      <Type Name="FailurePoint" Kind="Class" />
      <Type Name="FalseConstraint" Kind="Class" />
      <Type Name="FloatingPointNumerics" Kind="Class" />
      <Type Name="GreaterThanConstraint" Kind="Class" />
      <Type Name="GreaterThanOrEqualConstraint" Kind="Class" />
      <Type Name="InstanceOfTypeConstraint" Kind="Class" />
      <Type Name="IResolveConstraint" Kind="Interface" />
      <Type Name="LessThanConstraint" Kind="Class" />
      <Type Name="LessThanOrEqualConstraint" Kind="Class" />
      <Type Name="MessageWriter" Kind="Class" />
      <Type Name="MsgUtils" Kind="Class" />
      <Type Name="NaNConstraint" Kind="Class" />
      <Type Name="NoItemConstraint" Kind="Class" />
      <Type Name="NoneOperator" Kind="Class" />
      <Type Name="NotConstraint" Kind="Class" />
      <Type Name="NotOperator" Kind="Class" />
      <Type Name="NullConstraint" Kind="Class" />
      <Type Name="NullOrEmptyStringConstraint" Kind="Class" />
      <Type Name="Numerics" Kind="Class" />
      <Type Name="NUnitComparer" Kind="Class" />
      <Type Name="NUnitEqualityComparer" Kind="Class" />
      <Type Name="OrConstraint" Kind="Class" />
      <Type Name="OrOperator" Kind="Class" />
      <Type Name="PathConstraint" Kind="Class" />
      <Type Name="PredicateConstraint`1" DisplayName="PredicateConstraint&lt;T&gt;" Kind="Class" />
      <Type Name="PrefixConstraint" Kind="Class" />
      <Type Name="PrefixOperator" Kind="Class" />
      <Type Name="PropertyConstraint" Kind="Class" />
      <Type Name="PropertyExistsConstraint" Kind="Class" />
      <Type Name="PropOperator" Kind="Class" />
      <Type Name="RangeConstraint`1" DisplayName="RangeConstraint&lt;T&gt;" Kind="Class" />
      <Type Name="RegexConstraint" Kind="Class" />
      <Type Name="ResolvableConstraintExpression" Kind="Class" />
      <Type Name="ReusableConstraint" Kind="Class" />
      <Type Name="SameAsConstraint" Kind="Class" />
      <Type Name="SamePathConstraint" Kind="Class" />
      <Type Name="SamePathOrUnderConstraint" Kind="Class" />
      <Type Name="SelfResolvingOperator" Kind="Class" />
      <Type Name="SomeItemsConstraint" Kind="Class" />
      <Type Name="SomeOperator" Kind="Class" />
      <Type Name="StartsWithConstraint" Kind="Class" />
      <Type Name="StringConstraint" Kind="Class" />
      <Type Name="SubPathConstraint" Kind="Class" />
      <Type Name="SubstringConstraint" Kind="Class" />
      <Type Name="ThrowsConstraint" Kind="Class" />
      <Type Name="ThrowsNothingConstraint" Kind="Class" />
      <Type Name="ThrowsOperator" Kind="Class" />
      <Type Name="Tolerance" Kind="Class" />
      <Type Name="ToleranceMode" Kind="Enumeration" />
      <Type Name="TrueConstraint" Kind="Class" />
      <Type Name="TypeConstraint" Kind="Class" />
      <Type Name="UniqueItemsConstraint" Kind="Class" />
      <Type Name="WithOperator" Kind="Class" />
      <Type Name="XmlSerializableConstraint" Kind="Class" />
    </Namespace>
    <Namespace Name="NUnit.Framework.Extensibility">
      <Type Name="IParameterDataProvider" Kind="Interface" />
      <Type Name="ISuiteBuilder" Kind="Interface" />
      <Type Name="ITestCaseBuilder" Kind="Interface" />
      <Type Name="ITestCaseBuilder2" Kind="Interface" />
      <Type Name="ITestCaseProvider" Kind="Interface" />
    </Namespace>
    <Namespace Name="NUnit.Framework.Internal">
      <Type Name="AssemblyHelper" Kind="Class" />
      <Type Name="CultureDetector" Kind="Class" />
      <Type Name="ExceptionHelper" Kind="Class" />
      <Type Name="FinallyDelegate" Kind="Class" />
      <Type Name="IApplyToContext" Kind="Interface" />
      <Type Name="IApplyToTest" Kind="Interface" />
      <Type Name="InvalidTestFixtureException" Kind="Class" />
      <Type Name="MethodHelper" Kind="Class" />
      <Type Name="NUnitException" Kind="Class" />
      <Type Name="NUnitLiteTestAssemblyBuilder" Kind="Class" />
      <Type Name="NUnitLiteTestAssemblyRunner" Kind="Class" />
      <Type Name="OSPlatform" Kind="Class" />
      <Type Name="OSPlatform+ProductType" Kind="Enumeration" />
      <Type Name="ParameterizedFixtureSuite" Kind="Class" />
      <Type Name="ParameterizedMethodSuite" Kind="Class" />
      <Type Name="ParameterSet" Kind="Class" />
      <Type Name="PlatformHelper" Kind="Class" />
      <Type Name="PropertyBag" Kind="Class" />
      <Type Name="PropertyBag+PropertyBagEnumerator" Kind="Class" />
      <Type Name="PropertyNames" Kind="Class" />
      <Type Name="RandomGenerator" Kind="Class" />
      <Type Name="Randomizer" Kind="Class" />
      <Type Name="Reflect" Kind="Class" />
      <Type Name="RuntimeFramework" Kind="Class" />
      <Type Name="RuntimeType" Kind="Enumeration" />
      <Type Name="StackFilter" Kind="Class" />
      <Type Name="StringUtil" Kind="Class" />
      <Type Name="Test" Kind="Class" />
      <Type Name="TestAssembly" Kind="Class" />
      <Type Name="TestCaseResult" Kind="Class" />
      <Type Name="TestExecutionContext" Kind="Class" />
      <Type Name="TestFilter" Kind="Class" />
      <Type Name="TestFixture" Kind="Class" />
      <Type Name="TestFixtureBuilder" Kind="Class" />
      <Type Name="TestListener" Kind="Class" />
      <Type Name="TestMethod" Kind="Class" />
      <Type Name="TestResult" Kind="Class" />
      <Type Name="TestSuite" Kind="Class" />
      <Type Name="TestSuiteResult" Kind="Class" />
      <Type Name="TextMessageWriter" Kind="Class" />
      <Type Name="ThreadUtility" Kind="Class" />
      <Type Name="TypeHelper" Kind="Class" />
    </Namespace>
    <Namespace Name="NUnit.Framework.Internal.Commands">
      <Type Name="CommandDecoratorList" Kind="Class" />
      <Type Name="CommandStage" Kind="Enumeration" />
      <Type Name="DelegatingTestCommand" Kind="Class" />
      <Type Name="ExpectedExceptionCommand" Kind="Class" />
      <Type Name="ICommandDecorator" Kind="Interface" />
      <Type Name="MaxTimeCommand" Kind="Class" />
      <Type Name="OneTimeSetUpCommand" Kind="Class" />
      <Type Name="OneTimeTearDownCommand" Kind="Class" />
      <Type Name="SetUpTearDownCommand" Kind="Class" />
      <Type Name="SetUpTearDownDecorator" Kind="Class" />
      <Type Name="SkipCommand" Kind="Class" />
      <Type Name="TestCommand" Kind="Class" />
      <Type Name="TestMethodCommand" Kind="Class" />
      <Type Name="TheoryResultCommand" Kind="Class" />
    </Namespace>
    <Namespace Name="NUnit.Framework.Internal.Filters">
      <Type Name="AndFilter" Kind="Class" />
      <Type Name="CategoryExpression" Kind="Class" />
      <Type Name="CategoryFilter" Kind="Class" />
      <Type Name="NotFilter" Kind="Class" />
      <Type Name="OrFilter" Kind="Class" />
      <Type Name="SimpleCategoryExpression" Kind="Class" />
      <Type Name="SimpleNameFilter" Kind="Class" />
    </Namespace>
    <Namespace Name="NUnit.Framework.Internal.WorkItems">
      <Type Name="CompositeWorkItem" Kind="Class" />
      <Type Name="SimpleWorkItem" Kind="Class" />
      <Type Name="WorkItem" Kind="Class" />
      <Type Name="WorkItemState" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="NUnitLite"></Namespace>
    <Namespace Name="NUnitLite.Runner">
      <Type Name="CommandLineOptions" Kind="Class" />
      <Type Name="ConsoleWriter" Kind="Class" />
      <Type Name="DebugWriter" Kind="Class" />
      <Type Name="NUnit2XmlOutputWriter" Kind="Class" />
      <Type Name="NUnit3XmlOutputWriter" Kind="Class" />
      <Type Name="OutputWriter" Kind="Class" />
      <Type Name="ResultReporter" Kind="Class" />
      <Type Name="ResultSummary" Kind="Class" />
      <Type Name="TextUI" Kind="Class" />
    </Namespace>
    <Namespace Name="OpenTK">
      <Type Name="AutoGeneratedAttribute" Kind="Class" />
      <Type Name="BindingsBase" Kind="Class" />
      <Type Name="BlittableValueType" Kind="Class" />
      <Type Name="BlittableValueType`1" DisplayName="BlittableValueType&lt;T&gt;" Kind="Class" />
      <Type Name="Configuration" Kind="Class" />
      <Type Name="ContextHandle" Kind="Structure" />
      <Type Name="DisplayResolution" Kind="Class" />
      <Type Name="FrameEventArgs" Kind="Class" />
      <Type Name="INativeWindow" Kind="Interface" />
      <Type Name="KeyPressEventArgs" Kind="Class" />
      <Type Name="Toolkit" Kind="Class" />
      <Type Name="WindowBorder" Kind="Enumeration" />
      <Type Name="WindowState" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="OpenTK.Audio">
      <Type Name="AudioContext" Kind="Class" />
      <Type Name="AudioContext+MaxAuxiliarySends" Kind="Enumeration" />
      <Type Name="AudioContextException" Kind="Class" />
      <Type Name="AudioDeviceException" Kind="Class" />
      <Type Name="AudioException" Kind="Class" />
      <Type Name="AudioValueException" Kind="Class" />
    </Namespace>
    <Namespace Name="OpenTK.Audio.OpenAL">
      <Type Name="AL" Kind="Class" />
      <Type Name="ALBufferState" Kind="Enumeration" />
      <Type Name="Alc" Kind="Class" />
      <Type Name="ALCapability" Kind="Enumeration" />
      <Type Name="AlcContextAttributes" Kind="Enumeration" />
      <Type Name="AlcError" Kind="Enumeration" />
      <Type Name="AlcGetInteger" Kind="Enumeration" />
      <Type Name="AlcGetString" Kind="Enumeration" />
      <Type Name="AlcGetStringList" Kind="Enumeration" />
      <Type Name="ALDistanceModel" Kind="Enumeration" />
      <Type Name="ALError" Kind="Enumeration" />
      <Type Name="ALFormat" Kind="Enumeration" />
      <Type Name="ALGetBufferi" Kind="Enumeration" />
      <Type Name="ALGetFloat" Kind="Enumeration" />
      <Type Name="ALGetInteger" Kind="Enumeration" />
      <Type Name="ALGetSourcei" Kind="Enumeration" />
      <Type Name="ALGetString" Kind="Enumeration" />
      <Type Name="ALListener3f" Kind="Enumeration" />
      <Type Name="ALListenerf" Kind="Enumeration" />
      <Type Name="ALListenerfv" Kind="Enumeration" />
      <Type Name="ALSource3f" Kind="Enumeration" />
      <Type Name="ALSource3i" Kind="Enumeration" />
      <Type Name="ALSourceb" Kind="Enumeration" />
      <Type Name="ALSourcef" Kind="Enumeration" />
      <Type Name="ALSourcei" Kind="Enumeration" />
      <Type Name="ALSourceState" Kind="Enumeration" />
      <Type Name="ALSourceType" Kind="Enumeration" />
      <Type Name="EffectsExtension" Kind="Class" />
      <Type Name="EffectsExtension+EaxReverb" Kind="Structure" />
      <Type Name="EffectsExtension+EfxEaxReverb" Kind="Structure" />
      <Type Name="EffectsExtension+ReverbPresets" Kind="Class" />
      <Type Name="EfxAuxiliaryf" Kind="Enumeration" />
      <Type Name="EfxAuxiliaryi" Kind="Enumeration" />
      <Type Name="EfxEffect3f" Kind="Enumeration" />
      <Type Name="EfxEffectf" Kind="Enumeration" />
      <Type Name="EfxEffecti" Kind="Enumeration" />
      <Type Name="EfxEffectType" Kind="Enumeration" />
      <Type Name="EfxFilterf" Kind="Enumeration" />
      <Type Name="EfxFilteri" Kind="Enumeration" />
      <Type Name="EfxFilterType" Kind="Enumeration" />
      <Type Name="EfxFormantFilterSettings" Kind="Enumeration" />
      <Type Name="XRamExtension" Kind="Class" />
      <Type Name="XRamExtension+XRamStorage" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="OpenTK.Graphics">
      <Type Name="Color4" Kind="Structure" />
      <Type Name="ColorFormat" Kind="Structure" />
      <Type Name="GraphicsBindingsBase" Kind="Class" />
      <Type Name="GraphicsContext" Kind="Class" />
      <Type Name="GraphicsContextException" Kind="Class" />
      <Type Name="GraphicsContextFlags" Kind="Enumeration" />
      <Type Name="GraphicsContextMissingException" Kind="Class" />
      <Type Name="GraphicsMode" Kind="Class" />
      <Type Name="GraphicsModeException" Kind="Class" />
      <Type Name="IGraphicsContext" Kind="Interface" />
      <Type Name="IGraphicsContextInternal" Kind="Interface" />
    </Namespace>
    <Namespace Name="OpenTK.Graphics.ES11">
      <Type Name="All" Kind="Enumeration" />
      <Type Name="AlphaFunction" Kind="Enumeration" />
      <Type Name="BeginMode" Kind="Enumeration" />
      <Type Name="BlendingFactorDest" Kind="Enumeration" />
      <Type Name="BlendingFactorSrc" Kind="Enumeration" />
      <Type Name="Boolean" Kind="Enumeration" />
      <Type Name="BufferObjects" Kind="Enumeration" />
      <Type Name="ClearBufferMask" Kind="Enumeration" />
      <Type Name="ClipPlaneName" Kind="Enumeration" />
      <Type Name="CullFaceMode" Kind="Enumeration" />
      <Type Name="DataType" Kind="Enumeration" />
      <Type Name="EnableCap" Kind="Enumeration" />
      <Type Name="ErrorCode" Kind="Enumeration" />
      <Type Name="Extensions" Kind="Enumeration" />
      <Type Name="FogMode" Kind="Enumeration" />
      <Type Name="FogParameter" Kind="Enumeration" />
      <Type Name="FrontFaceDirection" Kind="Enumeration" />
      <Type Name="GetPName" Kind="Enumeration" />
      <Type Name="GetTextureParameter" Kind="Enumeration" />
      <Type Name="GL" Kind="Class" />
      <Type Name="GL+Apple" Kind="Class" />
      <Type Name="GL+Ext" Kind="Class" />
      <Type Name="GL+Oes" Kind="Class" />
      <Type Name="HintMode" Kind="Enumeration" />
      <Type Name="HintTarget" Kind="Enumeration" />
      <Type Name="LegacyCoreVersions" Kind="Enumeration" />
      <Type Name="LightModelParameter" Kind="Enumeration" />
      <Type Name="LightName" Kind="Enumeration" />
      <Type Name="LightParameter" Kind="Enumeration" />
      <Type Name="LogicOp" Kind="Enumeration" />
      <Type Name="MaterialParameter" Kind="Enumeration" />
      <Type Name="MatrixMode" Kind="Enumeration" />
      <Type Name="OesdrawTexture" Kind="Enumeration" />
      <Type Name="OesDrawTexture" Kind="Enumeration" />
      <Type Name="OesmatrixGet" Kind="Enumeration" />
      <Type Name="OesMatrixGet" Kind="Enumeration" />
      <Type Name="OesmatrixPalette" Kind="Enumeration" />
      <Type Name="OesMatrixPalette" Kind="Enumeration" />
      <Type Name="OespointSizeArray" Kind="Enumeration" />
      <Type Name="OesPointSizeArray" Kind="Enumeration" />
      <Type Name="OespointSprite" Kind="Enumeration" />
      <Type Name="OesPointSprite" Kind="Enumeration" />
      <Type Name="OpenGlescoreVersions" Kind="Enumeration" />
      <Type Name="OpenGlEsCoreVersions" Kind="Enumeration" />
      <Type Name="PixelFormat" Kind="Enumeration" />
      <Type Name="PixelInternalFormat" Kind="Enumeration" />
      <Type Name="PixelStoreParameter" Kind="Enumeration" />
      <Type Name="PixelType" Kind="Enumeration" />
      <Type Name="ShadingModel" Kind="Enumeration" />
      <Type Name="StencilOp" Kind="Enumeration" />
      <Type Name="StringName" Kind="Enumeration" />
      <Type Name="TextureCombineDot3" Kind="Enumeration" />
      <Type Name="TextureEnvMode" Kind="Enumeration" />
      <Type Name="TextureEnvParameter" Kind="Enumeration" />
      <Type Name="TextureEnvTarget" Kind="Enumeration" />
      <Type Name="TextureMagFilter" Kind="Enumeration" />
      <Type Name="TextureMinFilter" Kind="Enumeration" />
      <Type Name="TextureParameterName" Kind="Enumeration" />
      <Type Name="TextureUnit" Kind="Enumeration" />
      <Type Name="TextureWrapMode" Kind="Enumeration" />
      <Type Name="Unknown" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="OpenTK.Graphics.ES20">
      <Type Name="ActiveAttribType" Kind="Enumeration" />
      <Type Name="ActiveUniformType" Kind="Enumeration" />
      <Type Name="All" Kind="Enumeration" />
      <Type Name="BeginMode" Kind="Enumeration" />
      <Type Name="BlendEquationMode" Kind="Enumeration" />
      <Type Name="BlendEquationSeparate" Kind="Enumeration" />
      <Type Name="BlendingFactorDest" Kind="Enumeration" />
      <Type Name="BlendingFactorSrc" Kind="Enumeration" />
      <Type Name="BlendSubtract" Kind="Enumeration" />
      <Type Name="Boolean" Kind="Enumeration" />
      <Type Name="BufferObjects" Kind="Enumeration" />
      <Type Name="BufferParameterName" Kind="Enumeration" />
      <Type Name="BufferTarget" Kind="Enumeration" />
      <Type Name="BufferUsage" Kind="Enumeration" />
      <Type Name="ClearBufferMask" Kind="Enumeration" />
      <Type Name="CullFaceMode" Kind="Enumeration" />
      <Type Name="DataType" Kind="Enumeration" />
      <Type Name="DepthFunction" Kind="Enumeration" />
      <Type Name="DrawElementsType" Kind="Enumeration" />
      <Type Name="EnableCap" Kind="Enumeration" />
      <Type Name="ErrorCode" Kind="Enumeration" />
      <Type Name="FramebufferErrorCode" Kind="Enumeration" />
      <Type Name="FramebufferObject" Kind="Enumeration" />
      <Type Name="FramebufferParameterName" Kind="Enumeration" />
      <Type Name="FramebufferSlot" Kind="Enumeration" />
      <Type Name="FramebufferTarget" Kind="Enumeration" />
      <Type Name="FrontFaceDirection" Kind="Enumeration" />
      <Type Name="GetPName" Kind="Enumeration" />
      <Type Name="GetTextureParameter" Kind="Enumeration" />
      <Type Name="GL" Kind="Class" />
      <Type Name="GL+Apple" Kind="Class" />
      <Type Name="GL+Ext" Kind="Class" />
      <Type Name="GL+Oes" Kind="Class" />
      <Type Name="HintMode" Kind="Enumeration" />
      <Type Name="HintTarget" Kind="Enumeration" />
      <Type Name="OpenGlescoreVersions" Kind="Enumeration" />
      <Type Name="OpenGlEsCoreVersions" Kind="Enumeration" />
      <Type Name="PixelFormat" Kind="Enumeration" />
      <Type Name="PixelInternalFormat" Kind="Enumeration" />
      <Type Name="PixelStoreParameter" Kind="Enumeration" />
      <Type Name="PixelType" Kind="Enumeration" />
      <Type Name="ProgramParameter" Kind="Enumeration" />
      <Type Name="ReadFormat" Kind="Enumeration" />
      <Type Name="RenderbufferInternalFormat" Kind="Enumeration" />
      <Type Name="RenderbufferParameterName" Kind="Enumeration" />
      <Type Name="RenderbufferTarget" Kind="Enumeration" />
      <Type Name="SeparateBlendFunctions" Kind="Enumeration" />
      <Type Name="ShaderBinary" Kind="Enumeration" />
      <Type Name="ShaderBinaryFormat" Kind="Enumeration" />
      <Type Name="ShaderParameter" Kind="Enumeration" />
      <Type Name="ShaderPrecision" Kind="Enumeration" />
      <Type Name="ShaderPrecisionSpecifiedTypes" Kind="Enumeration" />
      <Type Name="Shaders" Kind="Enumeration" />
      <Type Name="ShaderSource" Kind="Enumeration" />
      <Type Name="ShaderType" Kind="Enumeration" />
      <Type Name="StencilFunction" Kind="Enumeration" />
      <Type Name="StencilOp" Kind="Enumeration" />
      <Type Name="StringName" Kind="Enumeration" />
      <Type Name="TextureMagFilter" Kind="Enumeration" />
      <Type Name="TextureMinFilter" Kind="Enumeration" />
      <Type Name="TextureParameterName" Kind="Enumeration" />
      <Type Name="TextureTarget" Kind="Enumeration" />
      <Type Name="TextureUnit" Kind="Enumeration" />
      <Type Name="TextureWrapMode" Kind="Enumeration" />
      <Type Name="UniformTypes" Kind="Enumeration" />
      <Type Name="Unknown" Kind="Enumeration" />
      <Type Name="VertexArrays" Kind="Enumeration" />
      <Type Name="VertexAttribParameter" Kind="Enumeration" />
      <Type Name="VertexAttribPointerParameter" Kind="Enumeration" />
      <Type Name="VertexAttribPointerType" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="OpenTK.Graphics.ES30">
      <Type Name="ActiveAttribType" Kind="Enumeration" />
      <Type Name="ActiveUniformBlockParameter" Kind="Enumeration" />
      <Type Name="ActiveUniformParameter" Kind="Enumeration" />
      <Type Name="ActiveUniformType" Kind="Enumeration" />
      <Type Name="All" Kind="Enumeration" />
      <Type Name="BeginMode" Kind="Enumeration" />
      <Type Name="BlendEquationMode" Kind="Enumeration" />
      <Type Name="BlendEquationSeparate" Kind="Enumeration" />
      <Type Name="BlendingFactorDest" Kind="Enumeration" />
      <Type Name="BlendingFactorSrc" Kind="Enumeration" />
      <Type Name="BlendSubtract" Kind="Enumeration" />
      <Type Name="BlitFramebufferFilter" Kind="Enumeration" />
      <Type Name="Boolean" Kind="Enumeration" />
      <Type Name="BufferAccessMask" Kind="Enumeration" />
      <Type Name="BufferObjects" Kind="Enumeration" />
      <Type Name="BufferParameterName" Kind="Enumeration" />
      <Type Name="BufferPointer" Kind="Enumeration" />
      <Type Name="BufferRangeTarget" Kind="Enumeration" />
      <Type Name="BufferTarget" Kind="Enumeration" />
      <Type Name="BufferUsage" Kind="Enumeration" />
      <Type Name="ClearBuffer" Kind="Enumeration" />
      <Type Name="ClearBufferCombined" Kind="Enumeration" />
      <Type Name="ClearBufferMask" Kind="Enumeration" />
      <Type Name="CompressedInternalFormat" Kind="Enumeration" />
      <Type Name="CullFaceMode" Kind="Enumeration" />
      <Type Name="DataType" Kind="Enumeration" />
      <Type Name="DepthFunction" Kind="Enumeration" />
      <Type Name="DrawBufferMode" Kind="Enumeration" />
      <Type Name="DrawElementsType" Kind="Enumeration" />
      <Type Name="EnableCap" Kind="Enumeration" />
      <Type Name="ErrorCode" Kind="Enumeration" />
      <Type Name="FramebufferAttachment" Kind="Enumeration" />
      <Type Name="FramebufferErrorCode" Kind="Enumeration" />
      <Type Name="FramebufferObject" Kind="Enumeration" />
      <Type Name="FramebufferParameterName" Kind="Enumeration" />
      <Type Name="FramebufferSlot" Kind="Enumeration" />
      <Type Name="FramebufferTarget" Kind="Enumeration" />
      <Type Name="FrontFaceDirection" Kind="Enumeration" />
      <Type Name="GetIndexedPName" Kind="Enumeration" />
      <Type Name="GetPName" Kind="Enumeration" />
      <Type Name="GetQueryObjectParam" Kind="Enumeration" />
      <Type Name="GetQueryParam" Kind="Enumeration" />
      <Type Name="GetTextureParameter" Kind="Enumeration" />
      <Type Name="GL" Kind="Class" />
      <Type Name="GL+Apple" Kind="Class" />
      <Type Name="GL+Ext" Kind="Class" />
      <Type Name="HintMode" Kind="Enumeration" />
      <Type Name="HintTarget" Kind="Enumeration" />
      <Type Name="ImageTarget" Kind="Enumeration" />
      <Type Name="InternalFormatParameter" Kind="Enumeration" />
      <Type Name="OpenGlEsCoreVersions" Kind="Enumeration" />
      <Type Name="PixelFormat" Kind="Enumeration" />
      <Type Name="PixelInternalFormat" Kind="Enumeration" />
      <Type Name="PixelStoreParameter" Kind="Enumeration" />
      <Type Name="PixelType" Kind="Enumeration" />
      <Type Name="PrimitiveType" Kind="Enumeration" />
      <Type Name="ProgramParameter" Kind="Enumeration" />
      <Type Name="ProgramParameterName" Kind="Enumeration" />
      <Type Name="QueryTarget" Kind="Enumeration" />
      <Type Name="ReadBufferMode" Kind="Enumeration" />
      <Type Name="ReadFormat" Kind="Enumeration" />
      <Type Name="RenderbufferInternalFormat" Kind="Enumeration" />
      <Type Name="RenderbufferParameterName" Kind="Enumeration" />
      <Type Name="RenderbufferTarget" Kind="Enumeration" />
      <Type Name="SamplerParameterName" Kind="Enumeration" />
      <Type Name="SeparateBlendFunctions" Kind="Enumeration" />
      <Type Name="ShaderBinary" Kind="Enumeration" />
      <Type Name="ShaderBinaryFormat" Kind="Enumeration" />
      <Type Name="ShaderParameter" Kind="Enumeration" />
      <Type Name="ShaderPrecision" Kind="Enumeration" />
      <Type Name="ShaderPrecisionSpecifiedTypes" Kind="Enumeration" />
      <Type Name="Shaders" Kind="Enumeration" />
      <Type Name="ShaderSource" Kind="Enumeration" />
      <Type Name="ShaderType" Kind="Enumeration" />
      <Type Name="SizedInternalFormat" Kind="Enumeration" />
      <Type Name="StencilFunction" Kind="Enumeration" />
      <Type Name="StencilOp" Kind="Enumeration" />
      <Type Name="StringName" Kind="Enumeration" />
      <Type Name="StringNameIndexed" Kind="Enumeration" />
      <Type Name="SyncCondition" Kind="Enumeration" />
      <Type Name="SyncParameterName" Kind="Enumeration" />
      <Type Name="TextureComponentCount" Kind="Enumeration" />
      <Type Name="TextureMagFilter" Kind="Enumeration" />
      <Type Name="TextureMinFilter" Kind="Enumeration" />
      <Type Name="TextureParameterName" Kind="Enumeration" />
      <Type Name="TextureTarget" Kind="Enumeration" />
      <Type Name="TextureTarget2D" Kind="Enumeration" />
      <Type Name="TextureTarget3D" Kind="Enumeration" />
      <Type Name="TextureUnit" Kind="Enumeration" />
      <Type Name="TextureWrapMode" Kind="Enumeration" />
      <Type Name="Token" Kind="Enumeration" />
      <Type Name="TransformFeedbackMode" Kind="Enumeration" />
      <Type Name="TransformFeedbackPrimitiveType" Kind="Enumeration" />
      <Type Name="TransformFeedbackTarget" Kind="Enumeration" />
      <Type Name="TransformFeedbackType" Kind="Enumeration" />
      <Type Name="UniformTypes" Kind="Enumeration" />
      <Type Name="Unknown" Kind="Enumeration" />
      <Type Name="VertexArrays" Kind="Enumeration" />
      <Type Name="VertexAttribIntegerType" Kind="Enumeration" />
      <Type Name="VertexAttribParameter" Kind="Enumeration" />
      <Type Name="VertexAttribPointerParameter" Kind="Enumeration" />
      <Type Name="VertexAttribPointerType" Kind="Enumeration" />
      <Type Name="WaitSyncFlags" Kind="Enumeration" />
      <Type Name="WaitSyncStatus" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="OpenTK.Platform">
      <Type Name="IGameWindow" Kind="Interface" />
      <Type Name="IWindowInfo" Kind="Interface" />
      <Type Name="Utilities" Kind="Class" />
    </Namespace>
    <Namespace Name="OpenTK.Platform.iPhoneOS">
      <Type Name="iPhoneOSGameView" Kind="Class" />
      <Type Name="iPhoneOSGraphicsContext" Kind="Class" />
    </Namespace>
    <Namespace Name="System">
      <Type Name="nfloat" Kind="Structure" />
      <Type Name="nint" Kind="Structure" />
      <Type Name="NMath" Kind="Class" />
      <Type Name="nuint" Kind="Structure" />
    </Namespace>
    <Namespace Name="System.Drawing">
      <Type Name="Color" Kind="Structure" />
      <Type Name="KnownColor" Kind="Enumeration" />
      <Type Name="Point" Kind="Structure" />
      <Type Name="PointF" Kind="Structure" />
      <Type Name="Rectangle" Kind="Structure" />
      <Type Name="RectangleF" Kind="Structure" />
      <Type Name="Size" Kind="Structure" />
      <Type Name="SizeF" Kind="Structure" />
    </Namespace>
    <Namespace Name="SystemConfiguration">
      <Type Name="NetworkReachability+Notification" Kind="Delegate" />
    </Namespace>
  </Types>
  <Title>NUnitLite</Title>
  <ExtensionMethods>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Accounts.ACErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this Accounts.ACErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype Accounts.ACErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.Accounts.ACErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.Accounts.ACErrorCode value</summary>
        </Docs>
        <Link Type="MonoTouch.Accounts.ACErrorCodeExtensions" Member="M:MonoTouch.Accounts.ACErrorCodeExtensions.GetDomain(MonoTouch.Accounts.ACErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AddressBook.ABAddressBookError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this AddressBook.ABAddressBookError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype AddressBook.ABAddressBookError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.AddressBook.ABAddressBookError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.AddressBook.ABAddressBookError value</summary>
        </Docs>
        <Link Type="MonoTouch.AddressBook.ABAddressBookErrorExtensions" Member="M:MonoTouch.AddressBook.ABAddressBookErrorExtensions.GetDomain(MonoTouch.AddressBook.ABAddressBookError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate" />
      </Targets>
      <Member MemberName="Cancelled">
        <MemberSignature Language="C#" Value="public static void Cancelled (this AddressBookUI.IABPeoplePickerNavigationControllerDelegate This, AddressBookUI.ABPeoplePickerNavigationController peoplePicker);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Cancelled(class AddressBookUI.IABPeoplePickerNavigationControllerDelegate This, class AddressBookUI.ABPeoplePickerNavigationController peoplePicker) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate" RefType="this" />
          <Parameter Name="peoplePicker" Type="MonoTouch.AddressBookUI.ABPeoplePickerNavigationController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peoplePicker">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AddressBookUI.ABPeoplePickerNavigationControllerDelegate_Extensions" Member="M:MonoTouch.AddressBookUI.ABPeoplePickerNavigationControllerDelegate_Extensions.Cancelled(MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate,MonoTouch.AddressBookUI.ABPeoplePickerNavigationController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate" />
      </Targets>
      <Member MemberName="DidSelectPerson">
        <MemberSignature Language="C#" Value="public static void DidSelectPerson (this AddressBookUI.IABPeoplePickerNavigationControllerDelegate This, AddressBookUI.ABPeoplePickerNavigationController peoplePicker, AddressBook.ABPerson selectedPerson);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSelectPerson(class AddressBookUI.IABPeoplePickerNavigationControllerDelegate This, class AddressBookUI.ABPeoplePickerNavigationController peoplePicker, class AddressBook.ABPerson selectedPerson) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate" RefType="this" />
          <Parameter Name="peoplePicker" Type="MonoTouch.AddressBookUI.ABPeoplePickerNavigationController" />
          <Parameter Name="selectedPerson" Type="MonoTouch.AddressBook.ABPerson" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peoplePicker">To be added.</param>
          <param name="selectedPerson">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AddressBookUI.ABPeoplePickerNavigationControllerDelegate_Extensions" Member="M:MonoTouch.AddressBookUI.ABPeoplePickerNavigationControllerDelegate_Extensions.DidSelectPerson(MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate,MonoTouch.AddressBookUI.ABPeoplePickerNavigationController,MonoTouch.AddressBook.ABPerson)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate" />
      </Targets>
      <Member MemberName="DidSelectPerson">
        <MemberSignature Language="C#" Value="public static void DidSelectPerson (this AddressBookUI.IABPeoplePickerNavigationControllerDelegate This, AddressBookUI.ABPeoplePickerNavigationController peoplePicker, AddressBook.ABPerson selectedPerson, int propertyId, int identifier);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSelectPerson(class AddressBookUI.IABPeoplePickerNavigationControllerDelegate This, class AddressBookUI.ABPeoplePickerNavigationController peoplePicker, class AddressBook.ABPerson selectedPerson, int32 propertyId, int32 identifier) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate" RefType="this" />
          <Parameter Name="peoplePicker" Type="MonoTouch.AddressBookUI.ABPeoplePickerNavigationController" />
          <Parameter Name="selectedPerson" Type="MonoTouch.AddressBook.ABPerson" />
          <Parameter Name="propertyId" Type="System.Int32" />
          <Parameter Name="identifier" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peoplePicker">To be added.</param>
          <param name="selectedPerson">To be added.</param>
          <param name="propertyId">To be added.</param>
          <param name="identifier">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AddressBookUI.ABPeoplePickerNavigationControllerDelegate_Extensions" Member="M:MonoTouch.AddressBookUI.ABPeoplePickerNavigationControllerDelegate_Extensions.DidSelectPerson(MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate,MonoTouch.AddressBookUI.ABPeoplePickerNavigationController,MonoTouch.AddressBook.ABPerson,System.Int32,System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate" />
      </Targets>
      <Member MemberName="ShouldContinue">
        <MemberSignature Language="C#" Value="public static bool ShouldContinue (this AddressBookUI.IABPeoplePickerNavigationControllerDelegate This, AddressBookUI.ABPeoplePickerNavigationController peoplePicker, AddressBook.ABPerson selectedPerson);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldContinue(class AddressBookUI.IABPeoplePickerNavigationControllerDelegate This, class AddressBookUI.ABPeoplePickerNavigationController peoplePicker, class AddressBook.ABPerson selectedPerson) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate" RefType="this" />
          <Parameter Name="peoplePicker" Type="MonoTouch.AddressBookUI.ABPeoplePickerNavigationController" />
          <Parameter Name="selectedPerson" Type="MonoTouch.AddressBook.ABPerson" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peoplePicker">To be added.</param>
          <param name="selectedPerson">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AddressBookUI.ABPeoplePickerNavigationControllerDelegate_Extensions" Member="M:MonoTouch.AddressBookUI.ABPeoplePickerNavigationControllerDelegate_Extensions.ShouldContinue(MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate,MonoTouch.AddressBookUI.ABPeoplePickerNavigationController,MonoTouch.AddressBook.ABPerson)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate" />
      </Targets>
      <Member MemberName="ShouldContinue">
        <MemberSignature Language="C#" Value="public static bool ShouldContinue (this AddressBookUI.IABPeoplePickerNavigationControllerDelegate This, AddressBookUI.ABPeoplePickerNavigationController peoplePicker, AddressBook.ABPerson selectedPerson, int propertyId, int identifier);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldContinue(class AddressBookUI.IABPeoplePickerNavigationControllerDelegate This, class AddressBookUI.ABPeoplePickerNavigationController peoplePicker, class AddressBook.ABPerson selectedPerson, int32 propertyId, int32 identifier) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate" RefType="this" />
          <Parameter Name="peoplePicker" Type="MonoTouch.AddressBookUI.ABPeoplePickerNavigationController" />
          <Parameter Name="selectedPerson" Type="MonoTouch.AddressBook.ABPerson" />
          <Parameter Name="propertyId" Type="System.Int32" />
          <Parameter Name="identifier" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peoplePicker">To be added.</param>
          <param name="selectedPerson">To be added.</param>
          <param name="propertyId">To be added.</param>
          <param name="identifier">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AddressBookUI.ABPeoplePickerNavigationControllerDelegate_Extensions" Member="M:MonoTouch.AddressBookUI.ABPeoplePickerNavigationControllerDelegate_Extensions.ShouldContinue(MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate,MonoTouch.AddressBookUI.ABPeoplePickerNavigationController,MonoTouch.AddressBook.ABPerson,System.Int32,System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AddressBookUI.IABUnknownPersonViewControllerDelegate" />
      </Targets>
      <Member MemberName="ShouldPerformDefaultActionForPerson">
        <MemberSignature Language="C#" Value="public static bool ShouldPerformDefaultActionForPerson (this AddressBookUI.IABUnknownPersonViewControllerDelegate This, AddressBookUI.ABUnknownPersonViewController personViewController, AddressBook.ABPerson person, int propertyId, int identifier);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldPerformDefaultActionForPerson(class AddressBookUI.IABUnknownPersonViewControllerDelegate This, class AddressBookUI.ABUnknownPersonViewController personViewController, class AddressBook.ABPerson person, int32 propertyId, int32 identifier) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AddressBookUI.IABUnknownPersonViewControllerDelegate" RefType="this" />
          <Parameter Name="personViewController" Type="MonoTouch.AddressBookUI.ABUnknownPersonViewController" />
          <Parameter Name="person" Type="MonoTouch.AddressBook.ABPerson" />
          <Parameter Name="propertyId" Type="System.Int32" />
          <Parameter Name="identifier" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="personViewController">To be added.</param>
          <param name="person">To be added.</param>
          <param name="propertyId">To be added.</param>
          <param name="identifier">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AddressBookUI.ABUnknownPersonViewControllerDelegate_Extensions" Member="M:MonoTouch.AddressBookUI.ABUnknownPersonViewControllerDelegate_Extensions.ShouldPerformDefaultActionForPerson(MonoTouch.AddressBookUI.IABUnknownPersonViewControllerDelegate,MonoTouch.AddressBookUI.ABUnknownPersonViewController,MonoTouch.AddressBook.ABPerson,System.Int32,System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ARKit.ARErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this ARKit.ARErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype ARKit.ARErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.ARKit.ARErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ARKit.ARErrorCodeExtensions" Member="M:MonoTouch.ARKit.ARErrorCodeExtensions.GetDomain(MonoTouch.ARKit.ARErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ARKit.IARSCNViewDelegate" />
      </Targets>
      <Member MemberName="DidAddNode">
        <MemberSignature Language="C#" Value="public static void DidAddNode (this ARKit.IARSCNViewDelegate This, SceneKit.ISCNSceneRenderer renderer, SceneKit.SCNNode node, ARKit.ARAnchor anchor);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAddNode(class ARKit.IARSCNViewDelegate This, class SceneKit.ISCNSceneRenderer renderer, class SceneKit.SCNNode node, class ARKit.ARAnchor anchor) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ARKit.IARSCNViewDelegate" RefType="this" />
          <Parameter Name="renderer" Type="MonoTouch.SceneKit.ISCNSceneRenderer" />
          <Parameter Name="node" Type="MonoTouch.SceneKit.SCNNode" />
          <Parameter Name="anchor" Type="MonoTouch.ARKit.ARAnchor" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="renderer">To be added.</param>
          <param name="node">To be added.</param>
          <param name="anchor">To be added.</param>
          <summary>Developers may override this method to react to the adding of a <see cref="T:SceneKit.SCNNode" /> that corresponds to a new <see cref="T:ARKit.ARAnchor" />.</summary>
        </Docs>
        <Link Type="MonoTouch.ARKit.ARSCNViewDelegate_Extensions" Member="M:MonoTouch.ARKit.ARSCNViewDelegate_Extensions.DidAddNode(MonoTouch.ARKit.IARSCNViewDelegate,MonoTouch.SceneKit.ISCNSceneRenderer,MonoTouch.SceneKit.SCNNode,MonoTouch.ARKit.ARAnchor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ARKit.IARSCNViewDelegate" />
      </Targets>
      <Member MemberName="DidRemoveNode">
        <MemberSignature Language="C#" Value="public static void DidRemoveNode (this ARKit.IARSCNViewDelegate This, SceneKit.ISCNSceneRenderer renderer, SceneKit.SCNNode node, ARKit.ARAnchor anchor);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRemoveNode(class ARKit.IARSCNViewDelegate This, class SceneKit.ISCNSceneRenderer renderer, class SceneKit.SCNNode node, class ARKit.ARAnchor anchor) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ARKit.IARSCNViewDelegate" RefType="this" />
          <Parameter Name="renderer" Type="MonoTouch.SceneKit.ISCNSceneRenderer" />
          <Parameter Name="node" Type="MonoTouch.SceneKit.SCNNode" />
          <Parameter Name="anchor" Type="MonoTouch.ARKit.ARAnchor" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="renderer">To be added.</param>
          <param name="node">To be added.</param>
          <param name="anchor">To be added.</param>
          <summary>Developers may override this method to react to the removal of <param name="node" />, which was removed after <param name="anchor" /> was removed.</summary>
        </Docs>
        <Link Type="MonoTouch.ARKit.ARSCNViewDelegate_Extensions" Member="M:MonoTouch.ARKit.ARSCNViewDelegate_Extensions.DidRemoveNode(MonoTouch.ARKit.IARSCNViewDelegate,MonoTouch.SceneKit.ISCNSceneRenderer,MonoTouch.SceneKit.SCNNode,MonoTouch.ARKit.ARAnchor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ARKit.IARSCNViewDelegate" />
      </Targets>
      <Member MemberName="DidUpdateNode">
        <MemberSignature Language="C#" Value="public static void DidUpdateNode (this ARKit.IARSCNViewDelegate This, SceneKit.ISCNSceneRenderer renderer, SceneKit.SCNNode node, ARKit.ARAnchor anchor);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateNode(class ARKit.IARSCNViewDelegate This, class SceneKit.ISCNSceneRenderer renderer, class SceneKit.SCNNode node, class ARKit.ARAnchor anchor) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ARKit.IARSCNViewDelegate" RefType="this" />
          <Parameter Name="renderer" Type="MonoTouch.SceneKit.ISCNSceneRenderer" />
          <Parameter Name="node" Type="MonoTouch.SceneKit.SCNNode" />
          <Parameter Name="anchor" Type="MonoTouch.ARKit.ARAnchor" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="renderer">To be added.</param>
          <param name="node">To be added.</param>
          <param name="anchor">To be added.</param>
          <summary>This method is called shortly after <param name="node" /> has been updated to reflect the current state of <param name="anchor" />.</summary>
        </Docs>
        <Link Type="MonoTouch.ARKit.ARSCNViewDelegate_Extensions" Member="M:MonoTouch.ARKit.ARSCNViewDelegate_Extensions.DidUpdateNode(MonoTouch.ARKit.IARSCNViewDelegate,MonoTouch.SceneKit.ISCNSceneRenderer,MonoTouch.SceneKit.SCNNode,MonoTouch.ARKit.ARAnchor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ARKit.IARSCNViewDelegate" />
      </Targets>
      <Member MemberName="GetNode">
        <MemberSignature Language="C#" Value="public static SceneKit.SCNNode GetNode (this ARKit.IARSCNViewDelegate This, SceneKit.ISCNSceneRenderer renderer, ARKit.ARAnchor anchor);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SceneKit.SCNNode GetNode(class ARKit.IARSCNViewDelegate This, class SceneKit.ISCNSceneRenderer renderer, class ARKit.ARAnchor anchor) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.SceneKit.SCNNode</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ARKit.IARSCNViewDelegate" RefType="this" />
          <Parameter Name="renderer" Type="MonoTouch.SceneKit.ISCNSceneRenderer" />
          <Parameter Name="anchor" Type="MonoTouch.ARKit.ARAnchor" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="renderer">To be added.</param>
          <param name="anchor">To be added.</param>
          <summary>Retrieves the <see cref="T:SceneKit.SCNNode" /> corresponding to the specified <param name="anchor" />.</summary>
        </Docs>
        <Link Type="MonoTouch.ARKit.ARSCNViewDelegate_Extensions" Member="M:MonoTouch.ARKit.ARSCNViewDelegate_Extensions.GetNode(MonoTouch.ARKit.IARSCNViewDelegate,MonoTouch.SceneKit.ISCNSceneRenderer,MonoTouch.ARKit.ARAnchor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ARKit.IARSCNViewDelegate" />
      </Targets>
      <Member MemberName="WillUpdateNode">
        <MemberSignature Language="C#" Value="public static void WillUpdateNode (this ARKit.IARSCNViewDelegate This, SceneKit.ISCNSceneRenderer renderer, SceneKit.SCNNode node, ARKit.ARAnchor anchor);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillUpdateNode(class ARKit.IARSCNViewDelegate This, class SceneKit.ISCNSceneRenderer renderer, class SceneKit.SCNNode node, class ARKit.ARAnchor anchor) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ARKit.IARSCNViewDelegate" RefType="this" />
          <Parameter Name="renderer" Type="MonoTouch.SceneKit.ISCNSceneRenderer" />
          <Parameter Name="node" Type="MonoTouch.SceneKit.SCNNode" />
          <Parameter Name="anchor" Type="MonoTouch.ARKit.ARAnchor" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="renderer">To be added.</param>
          <param name="node">To be added.</param>
          <param name="anchor">To be added.</param>
          <summary>This method is called shortly before the properties of <param name="node" /> are updated to reflect the state of <param name="anchor" />.</summary>
        </Docs>
        <Link Type="MonoTouch.ARKit.ARSCNViewDelegate_Extensions" Member="M:MonoTouch.ARKit.ARSCNViewDelegate_Extensions.WillUpdateNode(MonoTouch.ARKit.IARSCNViewDelegate,MonoTouch.SceneKit.ISCNSceneRenderer,MonoTouch.SceneKit.SCNNode,MonoTouch.ARKit.ARAnchor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ARKit.IARSessionDelegate" />
      </Targets>
      <Member MemberName="DidAddAnchors">
        <MemberSignature Language="C#" Value="public static void DidAddAnchors (this ARKit.IARSessionDelegate This, ARKit.ARSession session, ARKit.ARAnchor[] anchors);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAddAnchors(class ARKit.IARSessionDelegate This, class ARKit.ARSession session, class ARKit.ARAnchor[] anchors) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ARKit.IARSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.ARKit.ARSession" />
          <Parameter Name="anchors" Type="MonoTouch.ARKit.ARAnchor[]" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="session">To be added.</param>
          <param name="anchors">To be added.</param>
          <summary>Called when <param name="anchors" /> are added to the <param name="session" />.</summary>
        </Docs>
        <Link Type="MonoTouch.ARKit.ARSessionDelegate_Extensions" Member="M:MonoTouch.ARKit.ARSessionDelegate_Extensions.DidAddAnchors(MonoTouch.ARKit.IARSessionDelegate,MonoTouch.ARKit.ARSession,MonoTouch.ARKit.ARAnchor[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ARKit.IARSessionDelegate" />
      </Targets>
      <Member MemberName="DidRemoveAnchors">
        <MemberSignature Language="C#" Value="public static void DidRemoveAnchors (this ARKit.IARSessionDelegate This, ARKit.ARSession session, ARKit.ARAnchor[] anchors);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRemoveAnchors(class ARKit.IARSessionDelegate This, class ARKit.ARSession session, class ARKit.ARAnchor[] anchors) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ARKit.IARSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.ARKit.ARSession" />
          <Parameter Name="anchors" Type="MonoTouch.ARKit.ARAnchor[]" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="session">To be added.</param>
          <param name="anchors">To be added.</param>
          <summary>Called when <param name="anchors" /> have been removed from the <param name="session" />.</summary>
        </Docs>
        <Link Type="MonoTouch.ARKit.ARSessionDelegate_Extensions" Member="M:MonoTouch.ARKit.ARSessionDelegate_Extensions.DidRemoveAnchors(MonoTouch.ARKit.IARSessionDelegate,MonoTouch.ARKit.ARSession,MonoTouch.ARKit.ARAnchor[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ARKit.IARSessionDelegate" />
      </Targets>
      <Member MemberName="DidUpdateAnchors">
        <MemberSignature Language="C#" Value="public static void DidUpdateAnchors (this ARKit.IARSessionDelegate This, ARKit.ARSession session, ARKit.ARAnchor[] anchors);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateAnchors(class ARKit.IARSessionDelegate This, class ARKit.ARSession session, class ARKit.ARAnchor[] anchors) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ARKit.IARSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.ARKit.ARSession" />
          <Parameter Name="anchors" Type="MonoTouch.ARKit.ARAnchor[]" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="session">To be added.</param>
          <param name="anchors">To be added.</param>
          <summary>Indicates that <param name="anchors" /> have been updated due to tracking.</summary>
        </Docs>
        <Link Type="MonoTouch.ARKit.ARSessionDelegate_Extensions" Member="M:MonoTouch.ARKit.ARSessionDelegate_Extensions.DidUpdateAnchors(MonoTouch.ARKit.IARSessionDelegate,MonoTouch.ARKit.ARSession,MonoTouch.ARKit.ARAnchor[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ARKit.IARSessionDelegate" />
      </Targets>
      <Member MemberName="DidUpdateFrame">
        <MemberSignature Language="C#" Value="public static void DidUpdateFrame (this ARKit.IARSessionDelegate This, ARKit.ARSession session, ARKit.ARFrame frame);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateFrame(class ARKit.IARSessionDelegate This, class ARKit.ARSession session, class ARKit.ARFrame frame) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ARKit.IARSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.ARKit.ARSession" />
          <Parameter Name="frame" Type="MonoTouch.ARKit.ARFrame" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="session">To be added.</param>
          <param name="frame">To be added.</param>
          <summary>Indicates that <param name="frame" /> has been updated due to tracking.</summary>
        </Docs>
        <Link Type="MonoTouch.ARKit.ARSessionDelegate_Extensions" Member="M:MonoTouch.ARKit.ARSessionDelegate_Extensions.DidUpdateFrame(MonoTouch.ARKit.IARSessionDelegate,MonoTouch.ARKit.ARSession,MonoTouch.ARKit.ARFrame)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ARKit.IARSessionObserver" />
      </Targets>
      <Member MemberName="CameraDidChangeTrackingState">
        <MemberSignature Language="C#" Value="public static void CameraDidChangeTrackingState (this ARKit.IARSessionObserver This, ARKit.ARSession session, ARKit.ARCamera camera);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CameraDidChangeTrackingState(class ARKit.IARSessionObserver This, class ARKit.ARSession session, class ARKit.ARCamera camera) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ARKit.IARSessionObserver" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.ARKit.ARSession" />
          <Parameter Name="camera" Type="MonoTouch.ARKit.ARCamera" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="session">To be added.</param>
          <param name="camera">To be added.</param>
          <summary>Called when the <see cref="P:ARKit.ARCamera.TrackingState" /> changes, indicating a change in tracking quality.</summary>
        </Docs>
        <Link Type="MonoTouch.ARKit.ARSessionObserver_Extensions" Member="M:MonoTouch.ARKit.ARSessionObserver_Extensions.CameraDidChangeTrackingState(MonoTouch.ARKit.IARSessionObserver,MonoTouch.ARKit.ARSession,MonoTouch.ARKit.ARCamera)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ARKit.IARSessionObserver" />
      </Targets>
      <Member MemberName="DidFail">
        <MemberSignature Language="C#" Value="public static void DidFail (this ARKit.IARSessionObserver This, ARKit.ARSession session, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFail(class ARKit.IARSessionObserver This, class ARKit.ARSession session, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ARKit.IARSessionObserver" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.ARKit.ARSession" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="session">To be added.</param>
          <param name="error">To be added.</param>
          <summary>Called when the <param name="session" /> stops running due to an error.</summary>
        </Docs>
        <Link Type="MonoTouch.ARKit.ARSessionObserver_Extensions" Member="M:MonoTouch.ARKit.ARSessionObserver_Extensions.DidFail(MonoTouch.ARKit.IARSessionObserver,MonoTouch.ARKit.ARSession,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ARKit.IARSessionObserver" />
      </Targets>
      <Member MemberName="DidOutputAudioSampleBuffer">
        <MemberSignature Language="C#" Value="public static void DidOutputAudioSampleBuffer (this ARKit.IARSessionObserver This, ARKit.ARSession session, CoreMedia.CMSampleBuffer audioSampleBuffer);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidOutputAudioSampleBuffer(class ARKit.IARSessionObserver This, class ARKit.ARSession session, class CoreMedia.CMSampleBuffer audioSampleBuffer) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ARKit.IARSessionObserver" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.ARKit.ARSession" />
          <Parameter Name="audioSampleBuffer" Type="MonoTouch.CoreMedia.CMSampleBuffer" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="session">To be added.</param>
          <param name="audioSampleBuffer">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ARKit.ARSessionObserver_Extensions" Member="M:MonoTouch.ARKit.ARSessionObserver_Extensions.DidOutputAudioSampleBuffer(MonoTouch.ARKit.IARSessionObserver,MonoTouch.ARKit.ARSession,MonoTouch.CoreMedia.CMSampleBuffer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ARKit.IARSessionObserver" />
      </Targets>
      <Member MemberName="InterruptionEnded">
        <MemberSignature Language="C#" Value="public static void InterruptionEnded (this ARKit.IARSessionObserver This, ARKit.ARSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InterruptionEnded(class ARKit.IARSessionObserver This, class ARKit.ARSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ARKit.IARSessionObserver" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.ARKit.ARSession" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="session">To be added.</param>
          <summary>Developers may override this method to begin frame processing and device tracking after an interruption.</summary>
        </Docs>
        <Link Type="MonoTouch.ARKit.ARSessionObserver_Extensions" Member="M:MonoTouch.ARKit.ARSessionObserver_Extensions.InterruptionEnded(MonoTouch.ARKit.IARSessionObserver,MonoTouch.ARKit.ARSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ARKit.IARSessionObserver" />
      </Targets>
      <Member MemberName="WasInterrupted">
        <MemberSignature Language="C#" Value="public static void WasInterrupted (this ARKit.IARSessionObserver This, ARKit.ARSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WasInterrupted(class ARKit.IARSessionObserver This, class ARKit.ARSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ARKit.IARSessionObserver" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.ARKit.ARSession" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="session">To be added.</param>
          <summary>Developers may override this method to stop frame processing and device tracking when an interruption occurs.</summary>
        </Docs>
        <Link Type="MonoTouch.ARKit.ARSessionObserver_Extensions" Member="M:MonoTouch.ARKit.ARSessionObserver_Extensions.WasInterrupted(MonoTouch.ARKit.IARSessionObserver,MonoTouch.ARKit.ARSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ARKit.IARSKViewDelegate" />
      </Targets>
      <Member MemberName="DidAddNode">
        <MemberSignature Language="C#" Value="public static void DidAddNode (this ARKit.IARSKViewDelegate This, ARKit.ARSKView view, SpriteKit.SKNode node, ARKit.ARAnchor anchor);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAddNode(class ARKit.IARSKViewDelegate This, class ARKit.ARSKView view, class SpriteKit.SKNode node, class ARKit.ARAnchor anchor) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ARKit.IARSKViewDelegate" RefType="this" />
          <Parameter Name="view" Type="MonoTouch.ARKit.ARSKView" />
          <Parameter Name="node" Type="MonoTouch.SpriteKit.SKNode" />
          <Parameter Name="anchor" Type="MonoTouch.ARKit.ARAnchor" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="view">To be added.</param>
          <param name="node">To be added.</param>
          <param name="anchor">To be added.</param>
          <summary>Developers may override this method to react to the adding of a <see cref="T:SpriteKit.SKNode" /> that corresponds to a new <see cref="T:ARKit.ARAnchor" />.</summary>
        </Docs>
        <Link Type="MonoTouch.ARKit.ARSKViewDelegate_Extensions" Member="M:MonoTouch.ARKit.ARSKViewDelegate_Extensions.DidAddNode(MonoTouch.ARKit.IARSKViewDelegate,MonoTouch.ARKit.ARSKView,MonoTouch.SpriteKit.SKNode,MonoTouch.ARKit.ARAnchor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ARKit.IARSKViewDelegate" />
      </Targets>
      <Member MemberName="DidRemoveNode">
        <MemberSignature Language="C#" Value="public static void DidRemoveNode (this ARKit.IARSKViewDelegate This, ARKit.ARSKView view, SpriteKit.SKNode node, ARKit.ARAnchor anchor);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRemoveNode(class ARKit.IARSKViewDelegate This, class ARKit.ARSKView view, class SpriteKit.SKNode node, class ARKit.ARAnchor anchor) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ARKit.IARSKViewDelegate" RefType="this" />
          <Parameter Name="view" Type="MonoTouch.ARKit.ARSKView" />
          <Parameter Name="node" Type="MonoTouch.SpriteKit.SKNode" />
          <Parameter Name="anchor" Type="MonoTouch.ARKit.ARAnchor" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="view">To be added.</param>
          <param name="node">To be added.</param>
          <param name="anchor">To be added.</param>
          <summary>Developers may override this method to react to the removal of <param name="node" />, which was removed after <param name="anchor" /> was removed.</summary>
        </Docs>
        <Link Type="MonoTouch.ARKit.ARSKViewDelegate_Extensions" Member="M:MonoTouch.ARKit.ARSKViewDelegate_Extensions.DidRemoveNode(MonoTouch.ARKit.IARSKViewDelegate,MonoTouch.ARKit.ARSKView,MonoTouch.SpriteKit.SKNode,MonoTouch.ARKit.ARAnchor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ARKit.IARSKViewDelegate" />
      </Targets>
      <Member MemberName="DidUpdateNode">
        <MemberSignature Language="C#" Value="public static void DidUpdateNode (this ARKit.IARSKViewDelegate This, ARKit.ARSKView view, SpriteKit.SKNode node, ARKit.ARAnchor anchor);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateNode(class ARKit.IARSKViewDelegate This, class ARKit.ARSKView view, class SpriteKit.SKNode node, class ARKit.ARAnchor anchor) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ARKit.IARSKViewDelegate" RefType="this" />
          <Parameter Name="view" Type="MonoTouch.ARKit.ARSKView" />
          <Parameter Name="node" Type="MonoTouch.SpriteKit.SKNode" />
          <Parameter Name="anchor" Type="MonoTouch.ARKit.ARAnchor" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="view">To be added.</param>
          <param name="node">To be added.</param>
          <param name="anchor">To be added.</param>
          <summary>This method is called shortly after <param name="node" /> has been updated to reflect the current state of <param name="anchor" />.</summary>
        </Docs>
        <Link Type="MonoTouch.ARKit.ARSKViewDelegate_Extensions" Member="M:MonoTouch.ARKit.ARSKViewDelegate_Extensions.DidUpdateNode(MonoTouch.ARKit.IARSKViewDelegate,MonoTouch.ARKit.ARSKView,MonoTouch.SpriteKit.SKNode,MonoTouch.ARKit.ARAnchor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ARKit.IARSKViewDelegate" />
      </Targets>
      <Member MemberName="GetNode">
        <MemberSignature Language="C#" Value="public static SpriteKit.SKNode GetNode (this ARKit.IARSKViewDelegate This, ARKit.ARSKView view, ARKit.ARAnchor anchor);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SpriteKit.SKNode GetNode(class ARKit.IARSKViewDelegate This, class ARKit.ARSKView view, class ARKit.ARAnchor anchor) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.SpriteKit.SKNode</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ARKit.IARSKViewDelegate" RefType="this" />
          <Parameter Name="view" Type="MonoTouch.ARKit.ARSKView" />
          <Parameter Name="anchor" Type="MonoTouch.ARKit.ARAnchor" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="view">To be added.</param>
          <param name="anchor">To be added.</param>
          <summary>Retrieves the <see cref="T:SpriteKit.SKNode" /> corresponding to the specified <param name="anchor" />. If no corresponding node exists, returns <see langword="null" />.</summary>
        </Docs>
        <Link Type="MonoTouch.ARKit.ARSKViewDelegate_Extensions" Member="M:MonoTouch.ARKit.ARSKViewDelegate_Extensions.GetNode(MonoTouch.ARKit.IARSKViewDelegate,MonoTouch.ARKit.ARSKView,MonoTouch.ARKit.ARAnchor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ARKit.IARSKViewDelegate" />
      </Targets>
      <Member MemberName="WillUpdateNode">
        <MemberSignature Language="C#" Value="public static void WillUpdateNode (this ARKit.IARSKViewDelegate This, ARKit.ARSKView view, SpriteKit.SKNode node, ARKit.ARAnchor anchor);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillUpdateNode(class ARKit.IARSKViewDelegate This, class ARKit.ARSKView view, class SpriteKit.SKNode node, class ARKit.ARAnchor anchor) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ARKit.IARSKViewDelegate" RefType="this" />
          <Parameter Name="view" Type="MonoTouch.ARKit.ARSKView" />
          <Parameter Name="node" Type="MonoTouch.SpriteKit.SKNode" />
          <Parameter Name="anchor" Type="MonoTouch.ARKit.ARAnchor" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="view">To be added.</param>
          <param name="node">To be added.</param>
          <param name="anchor">To be added.</param>
          <summary>This method is called shortly before the properties of <param name="node" /> are updated to reflect the state of <param name="anchor" />.</summary>
        </Docs>
        <Link Type="MonoTouch.ARKit.ARSKViewDelegate_Extensions" Member="M:MonoTouch.ARKit.ARSKViewDelegate_Extensions.WillUpdateNode(MonoTouch.ARKit.IARSKViewDelegate,MonoTouch.ARKit.ARSKView,MonoTouch.SpriteKit.SKNode,MonoTouch.ARKit.ARAnchor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AssetsLibrary.ALAssetsError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this AssetsLibrary.ALAssetsError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype AssetsLibrary.ALAssetsError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.AssetsLibrary.ALAssetsError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.AssetsLibrary.ALAssetsError value</summary>
        </Docs>
        <Link Type="MonoTouch.AssetsLibrary.ALAssetsErrorExtensions" Member="M:MonoTouch.AssetsLibrary.ALAssetsErrorExtensions.GetDomain(MonoTouch.AssetsLibrary.ALAssetsError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AudioToolbox.AudioChannelLayoutTag" />
      </Targets>
      <Member MemberName="GetNumberOfChannels">
        <MemberSignature Language="C#" Value="public static uint GetNumberOfChannels (this AudioToolbox.AudioChannelLayoutTag inLayoutTag);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 GetNumberOfChannels(valuetype AudioToolbox.AudioChannelLayoutTag inLayoutTag) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.UInt32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="inLayoutTag" Type="MonoTouch.AudioToolbox.AudioChannelLayoutTag" RefType="this" />
        </Parameters>
        <Docs>
          <param name="inLayoutTag">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AudioToolbox.AudioChannelLayoutTagExtensions" Member="M:MonoTouch.AudioToolbox.AudioChannelLayoutTagExtensions.GetNumberOfChannels(MonoTouch.AudioToolbox.AudioChannelLayoutTag)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AudioToolbox.AudioChannelLayoutTag" />
      </Targets>
      <Member MemberName="ToAudioChannel">
        <MemberSignature Language="C#" Value="public static Nullable&lt;AudioToolbox.AudioChannelBit&gt; ToAudioChannel (this AudioToolbox.AudioChannelLayoutTag layoutTag);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype AudioToolbox.AudioChannelBit&gt; ToAudioChannel(valuetype AudioToolbox.AudioChannelLayoutTag layoutTag) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Nullable&lt;MonoTouch.AudioToolbox.AudioChannelBit&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="layoutTag" Type="MonoTouch.AudioToolbox.AudioChannelLayoutTag" RefType="this" />
        </Parameters>
        <Docs>
          <param name="layoutTag">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AudioToolbox.AudioChannelLayoutTagExtensions" Member="M:MonoTouch.AudioToolbox.AudioChannelLayoutTagExtensions.ToAudioChannel(MonoTouch.AudioToolbox.AudioChannelLayoutTag)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AudioUnit.AUAudioUnit" />
      </Targets>
      <Member MemberName="CanPerformOutput">
        <MemberSignature Language="C#" Value="public static bool CanPerformOutput (this AudioUnit.AUAudioUnit This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanPerformOutput(class AudioUnit.AUAudioUnit This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AudioUnit.AUAudioUnit" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">The IO unit on which this method operates.</param>
          <summary>Returns a Boolean value that tells whether the audio unit can perform output operations.</summary>
        </Docs>
        <Link Type="MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit" Member="M:MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit.CanPerformOutput(MonoTouch.AudioUnit.AUAudioUnit)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AudioUnit.AUAudioUnit" />
      </Targets>
      <Member MemberName="GetCanPerformInput">
        <MemberSignature Language="C#" Value="public static bool GetCanPerformInput (this AudioUnit.AUAudioUnit This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetCanPerformInput(class AudioUnit.AUAudioUnit This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AudioUnit.AUAudioUnit" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">The IO unit on which this method operates.</param>
          <summary>Returns a Boolean value that tells whether the audio unit can perform input operations.</summary>
        </Docs>
        <Link Type="MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit" Member="M:MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit.GetCanPerformInput(MonoTouch.AudioUnit.AUAudioUnit)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AudioUnit.AUAudioUnit" />
      </Targets>
      <Member MemberName="GetInputHandler">
        <MemberSignature Language="C#" Value="public static AudioUnit.AUInputHandler GetInputHandler (this AudioUnit.AUAudioUnit This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AudioUnit.AUInputHandler GetInputHandler(class AudioUnit.AUAudioUnit This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.AudioUnit.AUInputHandler</ReturnType>
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.DelegateProxy(typeof(ObjCRuntime.Trampolines/SDAUInputHandler))</AttributeName>
            </Attribute>
          </Attributes>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AudioUnit.AUAudioUnit" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">The IO unit on which this method operates.</param>
          <summary>Gets the input handler for this IO unit</summary>
        </Docs>
        <Link Type="MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit" Member="M:MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit.GetInputHandler(MonoTouch.AudioUnit.AUAudioUnit)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AudioUnit.AUAudioUnit" />
      </Targets>
      <Member MemberName="GetOutputProvider">
        <MemberSignature Language="C#" Value="public static AudioUnit.AURenderPullInputBlock GetOutputProvider (this AudioUnit.AUAudioUnit This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AudioUnit.AURenderPullInputBlock GetOutputProvider(class AudioUnit.AUAudioUnit This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.AudioUnit.AURenderPullInputBlock</ReturnType>
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.DelegateProxy(typeof(ObjCRuntime.Trampolines/SDAURenderPullInputBlock))</AttributeName>
            </Attribute>
          </Attributes>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AudioUnit.AUAudioUnit" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">The IO unit on which this method operates.</param>
          <summary>Gets the output provider for this IO unit.</summary>
        </Docs>
        <Link Type="MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit" Member="M:MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit.GetOutputProvider(MonoTouch.AudioUnit.AUAudioUnit)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AudioUnit.AUAudioUnit" />
      </Targets>
      <Member MemberName="IsInputEnabled">
        <MemberSignature Language="C#" Value="public static bool IsInputEnabled (this AudioUnit.AUAudioUnit This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsInputEnabled(class AudioUnit.AUAudioUnit This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AudioUnit.AUAudioUnit" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">The IO unit on which this method operates.</param>
          <summary>Returns a Boolean value that tells whether input is currently enabled on the audio unit.</summary>
        </Docs>
        <Link Type="MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit" Member="M:MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit.IsInputEnabled(MonoTouch.AudioUnit.AUAudioUnit)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AudioUnit.AUAudioUnit" />
      </Targets>
      <Member MemberName="IsOutputEnabled">
        <MemberSignature Language="C#" Value="public static bool IsOutputEnabled (this AudioUnit.AUAudioUnit This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsOutputEnabled(class AudioUnit.AUAudioUnit This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AudioUnit.AUAudioUnit" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">The IO unit on which this method operates.</param>
          <summary>Returns a Boolean value that tells whether input is currently enabled on the audio unit.</summary>
        </Docs>
        <Link Type="MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit" Member="M:MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit.IsOutputEnabled(MonoTouch.AudioUnit.AUAudioUnit)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AudioUnit.AUAudioUnit" />
      </Targets>
      <Member MemberName="IsRunning">
        <MemberSignature Language="C#" Value="public static bool IsRunning (this AudioUnit.AUAudioUnit This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsRunning(class AudioUnit.AUAudioUnit This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AudioUnit.AUAudioUnit" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit" Member="M:MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit.IsRunning(MonoTouch.AudioUnit.AUAudioUnit)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AudioUnit.AUAudioUnit" />
      </Targets>
      <Member MemberName="SetInputEnabled">
        <MemberSignature Language="C#" Value="public static bool SetInputEnabled (this AudioUnit.AUAudioUnit This, bool enabled);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SetInputEnabled(class AudioUnit.AUAudioUnit This, bool enabled) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AudioUnit.AUAudioUnit" RefType="this" />
          <Parameter Name="enabled" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The IO unit on which this method operates.</param>
          <param name="enabled">To be added.</param>
          <summary>Sets a Boolean value that controls whether input is enabled on the audio unit.</summary>
        </Docs>
        <Link Type="MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit" Member="M:MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit.SetInputEnabled(MonoTouch.AudioUnit.AUAudioUnit,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AudioUnit.AUAudioUnit" />
      </Targets>
      <Member MemberName="SetInputHandler">
        <MemberSignature Language="C#" Value="public static void SetInputHandler (this AudioUnit.AUAudioUnit This, AudioUnit.AUInputHandler handler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetInputHandler(class AudioUnit.AUAudioUnit This, class AudioUnit.AUInputHandler handler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AudioUnit.AUAudioUnit" RefType="this" />
          <Parameter Name="handler" Type="MonoTouch.AudioUnit.AUInputHandler">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAUInputHandler))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The IO unit on which this method operates.</param>
          <param name="handler">The handler to set.</param>
          <summary>Sets the input handler to the specified value.</summary>
        </Docs>
        <Link Type="MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit" Member="M:MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit.SetInputHandler(MonoTouch.AudioUnit.AUAudioUnit,MonoTouch.AudioUnit.AUInputHandler)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AudioUnit.AUAudioUnit" />
      </Targets>
      <Member MemberName="SetOutputEnabled">
        <MemberSignature Language="C#" Value="public static bool SetOutputEnabled (this AudioUnit.AUAudioUnit This, bool enabled);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SetOutputEnabled(class AudioUnit.AUAudioUnit This, bool enabled) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AudioUnit.AUAudioUnit" RefType="this" />
          <Parameter Name="enabled" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The IO unit on which this method operates.</param>
          <param name="enabled">To be added.</param>
          <summary>Sets a Boolean value that controls whether output is enabled on the audio unit..</summary>
        </Docs>
        <Link Type="MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit" Member="M:MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit.SetOutputEnabled(MonoTouch.AudioUnit.AUAudioUnit,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AudioUnit.AUAudioUnit" />
      </Targets>
      <Member MemberName="SetOutputProvider">
        <MemberSignature Language="C#" Value="public static void SetOutputProvider (this AudioUnit.AUAudioUnit This, AudioUnit.AURenderPullInputBlock provider);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetOutputProvider(class AudioUnit.AUAudioUnit This, class AudioUnit.AURenderPullInputBlock provider) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AudioUnit.AUAudioUnit" RefType="this" />
          <Parameter Name="provider" Type="MonoTouch.AudioUnit.AURenderPullInputBlock">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAURenderPullInputBlock))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The IO unit on which this method operates.</param>
          <param name="provider">The provider to set.</param>
          <summary>Sets the output provider to the specified value.</summary>
        </Docs>
        <Link Type="MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit" Member="M:MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit.SetOutputProvider(MonoTouch.AudioUnit.AUAudioUnit,MonoTouch.AudioUnit.AURenderPullInputBlock)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AudioUnit.AUAudioUnit" />
      </Targets>
      <Member MemberName="StartHardware">
        <MemberSignature Language="C#" Value="public static bool StartHardware (this AudioUnit.AUAudioUnit This, out Foundation.NSError outError);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool StartHardware(class AudioUnit.AUAudioUnit This, class Foundation.NSError outError) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AudioUnit.AUAudioUnit" RefType="this" />
          <Parameter Name="outError" Type="MonoTouch.Foundation.NSError&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <param name="This">The IO unit on which this method operates.</param>
          <param name="outError">
            <para>To be added.</para>
            <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
          </param>
          <summary>Starts the audio unit's hardware.</summary>
        </Docs>
        <Link Type="MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit" Member="M:MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit.StartHardware(MonoTouch.AudioUnit.AUAudioUnit,MonoTouch.Foundation.NSError@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AudioUnit.AUAudioUnit" />
      </Targets>
      <Member MemberName="StopHardware">
        <MemberSignature Language="C#" Value="public static void StopHardware (this AudioUnit.AUAudioUnit This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StopHardware(class AudioUnit.AUAudioUnit This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AudioUnit.AUAudioUnit" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">The IO unit on which this method operates.</param>
          <summary>Stops the audio unit's hardware.</summary>
        </Docs>
        <Link Type="MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit" Member="M:MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit.StopHardware(MonoTouch.AudioUnit.AUAudioUnit)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAssetDownloadDelegate" />
      </Targets>
      <Member MemberName="DidCompleteForMediaSelection">
        <MemberSignature Language="C#" Value="public static void DidCompleteForMediaSelection (this AVFoundation.IAVAssetDownloadDelegate This, Foundation.NSUrlSession session, AVFoundation.AVAggregateAssetDownloadTask aggregateAssetDownloadTask, AVFoundation.AVMediaSelection mediaSelection);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidCompleteForMediaSelection(class AVFoundation.IAVAssetDownloadDelegate This, class Foundation.NSUrlSession session, class AVFoundation.AVAggregateAssetDownloadTask aggregateAssetDownloadTask, class AVFoundation.AVMediaSelection mediaSelection) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAssetDownloadDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="aggregateAssetDownloadTask" Type="MonoTouch.AVFoundation.AVAggregateAssetDownloadTask" />
          <Parameter Name="mediaSelection" Type="MonoTouch.AVFoundation.AVMediaSelection" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="aggregateAssetDownloadTask">To be added.</param>
          <param name="mediaSelection">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAssetDownloadDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAssetDownloadDelegate_Extensions.DidCompleteForMediaSelection(MonoTouch.AVFoundation.IAVAssetDownloadDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.AVFoundation.AVAggregateAssetDownloadTask,MonoTouch.AVFoundation.AVMediaSelection)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAssetDownloadDelegate" />
      </Targets>
      <Member MemberName="DidFinishDownloadingToUrl">
        <MemberSignature Language="C#" Value="public static void DidFinishDownloadingToUrl (this AVFoundation.IAVAssetDownloadDelegate This, Foundation.NSUrlSession session, AVFoundation.AVAssetDownloadTask assetDownloadTask, Foundation.NSUrl location);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinishDownloadingToUrl(class AVFoundation.IAVAssetDownloadDelegate This, class Foundation.NSUrlSession session, class AVFoundation.AVAssetDownloadTask assetDownloadTask, class Foundation.NSUrl location) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAssetDownloadDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="assetDownloadTask" Type="MonoTouch.AVFoundation.AVAssetDownloadTask" />
          <Parameter Name="location" Type="MonoTouch.Foundation.NSUrl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="assetDownloadTask">To be added.</param>
          <param name="location">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAssetDownloadDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAssetDownloadDelegate_Extensions.DidFinishDownloadingToUrl(MonoTouch.AVFoundation.IAVAssetDownloadDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.AVFoundation.AVAssetDownloadTask,MonoTouch.Foundation.NSUrl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAssetDownloadDelegate" />
      </Targets>
      <Member MemberName="DidLoadTimeRange">
        <MemberSignature Language="C#" Value="public static void DidLoadTimeRange (this AVFoundation.IAVAssetDownloadDelegate This, Foundation.NSUrlSession session, AVFoundation.AVAggregateAssetDownloadTask aggregateAssetDownloadTask, CoreMedia.CMTimeRange timeRange, Foundation.NSValue[] loadedTimeRanges, CoreMedia.CMTimeRange timeRangeExpectedToLoad, AVFoundation.AVMediaSelection mediaSelection);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidLoadTimeRange(class AVFoundation.IAVAssetDownloadDelegate This, class Foundation.NSUrlSession session, class AVFoundation.AVAggregateAssetDownloadTask aggregateAssetDownloadTask, valuetype CoreMedia.CMTimeRange timeRange, class Foundation.NSValue[] loadedTimeRanges, valuetype CoreMedia.CMTimeRange timeRangeExpectedToLoad, class AVFoundation.AVMediaSelection mediaSelection) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAssetDownloadDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="aggregateAssetDownloadTask" Type="MonoTouch.AVFoundation.AVAggregateAssetDownloadTask" />
          <Parameter Name="timeRange" Type="MonoTouch.CoreMedia.CMTimeRange" />
          <Parameter Name="loadedTimeRanges" Type="MonoTouch.Foundation.NSValue[]" />
          <Parameter Name="timeRangeExpectedToLoad" Type="MonoTouch.CoreMedia.CMTimeRange" />
          <Parameter Name="mediaSelection" Type="MonoTouch.AVFoundation.AVMediaSelection" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="aggregateAssetDownloadTask">To be added.</param>
          <param name="timeRange">To be added.</param>
          <param name="loadedTimeRanges">To be added.</param>
          <param name="timeRangeExpectedToLoad">To be added.</param>
          <param name="mediaSelection">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAssetDownloadDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAssetDownloadDelegate_Extensions.DidLoadTimeRange(MonoTouch.AVFoundation.IAVAssetDownloadDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.AVFoundation.AVAggregateAssetDownloadTask,MonoTouch.CoreMedia.CMTimeRange,MonoTouch.Foundation.NSValue[],MonoTouch.CoreMedia.CMTimeRange,MonoTouch.AVFoundation.AVMediaSelection)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAssetDownloadDelegate" />
      </Targets>
      <Member MemberName="DidLoadTimeRange">
        <MemberSignature Language="C#" Value="public static void DidLoadTimeRange (this AVFoundation.IAVAssetDownloadDelegate This, Foundation.NSUrlSession session, AVFoundation.AVAssetDownloadTask assetDownloadTask, CoreMedia.CMTimeRange timeRange, Foundation.NSValue[] loadedTimeRanges, CoreMedia.CMTimeRange timeRangeExpectedToLoad);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidLoadTimeRange(class AVFoundation.IAVAssetDownloadDelegate This, class Foundation.NSUrlSession session, class AVFoundation.AVAssetDownloadTask assetDownloadTask, valuetype CoreMedia.CMTimeRange timeRange, class Foundation.NSValue[] loadedTimeRanges, valuetype CoreMedia.CMTimeRange timeRangeExpectedToLoad) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAssetDownloadDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="assetDownloadTask" Type="MonoTouch.AVFoundation.AVAssetDownloadTask" />
          <Parameter Name="timeRange" Type="MonoTouch.CoreMedia.CMTimeRange" />
          <Parameter Name="loadedTimeRanges" Type="MonoTouch.Foundation.NSValue[]" />
          <Parameter Name="timeRangeExpectedToLoad" Type="MonoTouch.CoreMedia.CMTimeRange" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="assetDownloadTask">To be added.</param>
          <param name="timeRange">To be added.</param>
          <param name="loadedTimeRanges">To be added.</param>
          <param name="timeRangeExpectedToLoad">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAssetDownloadDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAssetDownloadDelegate_Extensions.DidLoadTimeRange(MonoTouch.AVFoundation.IAVAssetDownloadDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.AVFoundation.AVAssetDownloadTask,MonoTouch.CoreMedia.CMTimeRange,MonoTouch.Foundation.NSValue[],MonoTouch.CoreMedia.CMTimeRange)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAssetDownloadDelegate" />
      </Targets>
      <Member MemberName="DidResolveMediaSelection">
        <MemberSignature Language="C#" Value="public static void DidResolveMediaSelection (this AVFoundation.IAVAssetDownloadDelegate This, Foundation.NSUrlSession session, AVFoundation.AVAssetDownloadTask assetDownloadTask, AVFoundation.AVMediaSelection resolvedMediaSelection);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidResolveMediaSelection(class AVFoundation.IAVAssetDownloadDelegate This, class Foundation.NSUrlSession session, class AVFoundation.AVAssetDownloadTask assetDownloadTask, class AVFoundation.AVMediaSelection resolvedMediaSelection) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAssetDownloadDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="assetDownloadTask" Type="MonoTouch.AVFoundation.AVAssetDownloadTask" />
          <Parameter Name="resolvedMediaSelection" Type="MonoTouch.AVFoundation.AVMediaSelection" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="assetDownloadTask">To be added.</param>
          <param name="resolvedMediaSelection">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAssetDownloadDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAssetDownloadDelegate_Extensions.DidResolveMediaSelection(MonoTouch.AVFoundation.IAVAssetDownloadDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.AVFoundation.AVAssetDownloadTask,MonoTouch.AVFoundation.AVMediaSelection)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAssetDownloadDelegate" />
      </Targets>
      <Member MemberName="WillDownloadToUrl">
        <MemberSignature Language="C#" Value="public static void WillDownloadToUrl (this AVFoundation.IAVAssetDownloadDelegate This, Foundation.NSUrlSession session, AVFoundation.AVAggregateAssetDownloadTask aggregateAssetDownloadTask, Foundation.NSUrl location);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillDownloadToUrl(class AVFoundation.IAVAssetDownloadDelegate This, class Foundation.NSUrlSession session, class AVFoundation.AVAggregateAssetDownloadTask aggregateAssetDownloadTask, class Foundation.NSUrl location) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAssetDownloadDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="aggregateAssetDownloadTask" Type="MonoTouch.AVFoundation.AVAggregateAssetDownloadTask" />
          <Parameter Name="location" Type="MonoTouch.Foundation.NSUrl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="aggregateAssetDownloadTask">To be added.</param>
          <param name="location">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAssetDownloadDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAssetDownloadDelegate_Extensions.WillDownloadToUrl(MonoTouch.AVFoundation.IAVAssetDownloadDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.AVFoundation.AVAggregateAssetDownloadTask,MonoTouch.Foundation.NSUrl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.AVAssetExportSessionPreset" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this AVFoundation.AVAssetExportSessionPreset self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype AVFoundation.AVAssetExportSessionPreset self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.AVFoundation.AVAssetExportSessionPreset" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The instance on which this method operates.</param>
          <summary>Returns the string constant for the enumeration value.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAssetExportSessionPresetExtensions" Member="M:MonoTouch.AVFoundation.AVAssetExportSessionPresetExtensions.GetConstant(MonoTouch.AVFoundation.AVAssetExportSessionPreset)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAssetResourceLoaderDelegate" />
      </Targets>
      <Member MemberName="DidCancelAuthenticationChallenge">
        <MemberSignature Language="C#" Value="public static void DidCancelAuthenticationChallenge (this AVFoundation.IAVAssetResourceLoaderDelegate This, AVFoundation.AVAssetResourceLoader resourceLoader, Foundation.NSUrlAuthenticationChallenge authenticationChallenge);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidCancelAuthenticationChallenge(class AVFoundation.IAVAssetResourceLoaderDelegate This, class AVFoundation.AVAssetResourceLoader resourceLoader, class Foundation.NSUrlAuthenticationChallenge authenticationChallenge) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAssetResourceLoaderDelegate" RefType="this" />
          <Parameter Name="resourceLoader" Type="MonoTouch.AVFoundation.AVAssetResourceLoader" />
          <Parameter Name="authenticationChallenge" Type="MonoTouch.Foundation.NSUrlAuthenticationChallenge" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="resourceLoader">To be added.</param>
          <param name="authenticationChallenge">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAssetResourceLoaderDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAssetResourceLoaderDelegate_Extensions.DidCancelAuthenticationChallenge(MonoTouch.AVFoundation.IAVAssetResourceLoaderDelegate,MonoTouch.AVFoundation.AVAssetResourceLoader,MonoTouch.Foundation.NSUrlAuthenticationChallenge)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAssetResourceLoaderDelegate" />
      </Targets>
      <Member MemberName="DidCancelLoadingRequest">
        <MemberSignature Language="C#" Value="public static void DidCancelLoadingRequest (this AVFoundation.IAVAssetResourceLoaderDelegate This, AVFoundation.AVAssetResourceLoader resourceLoader, AVFoundation.AVAssetResourceLoadingRequest loadingRequest);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidCancelLoadingRequest(class AVFoundation.IAVAssetResourceLoaderDelegate This, class AVFoundation.AVAssetResourceLoader resourceLoader, class AVFoundation.AVAssetResourceLoadingRequest loadingRequest) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAssetResourceLoaderDelegate" RefType="this" />
          <Parameter Name="resourceLoader" Type="MonoTouch.AVFoundation.AVAssetResourceLoader" />
          <Parameter Name="loadingRequest" Type="MonoTouch.AVFoundation.AVAssetResourceLoadingRequest" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="resourceLoader">To be added.</param>
          <param name="loadingRequest">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAssetResourceLoaderDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAssetResourceLoaderDelegate_Extensions.DidCancelLoadingRequest(MonoTouch.AVFoundation.IAVAssetResourceLoaderDelegate,MonoTouch.AVFoundation.AVAssetResourceLoader,MonoTouch.AVFoundation.AVAssetResourceLoadingRequest)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAssetResourceLoaderDelegate" />
      </Targets>
      <Member MemberName="ShouldWaitForRenewalOfRequestedResource">
        <MemberSignature Language="C#" Value="public static bool ShouldWaitForRenewalOfRequestedResource (this AVFoundation.IAVAssetResourceLoaderDelegate This, AVFoundation.AVAssetResourceLoader resourceLoader, AVFoundation.AVAssetResourceRenewalRequest renewalRequest);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldWaitForRenewalOfRequestedResource(class AVFoundation.IAVAssetResourceLoaderDelegate This, class AVFoundation.AVAssetResourceLoader resourceLoader, class AVFoundation.AVAssetResourceRenewalRequest renewalRequest) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAssetResourceLoaderDelegate" RefType="this" />
          <Parameter Name="resourceLoader" Type="MonoTouch.AVFoundation.AVAssetResourceLoader" />
          <Parameter Name="renewalRequest" Type="MonoTouch.AVFoundation.AVAssetResourceRenewalRequest" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="resourceLoader">To be added.</param>
          <param name="renewalRequest">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAssetResourceLoaderDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAssetResourceLoaderDelegate_Extensions.ShouldWaitForRenewalOfRequestedResource(MonoTouch.AVFoundation.IAVAssetResourceLoaderDelegate,MonoTouch.AVFoundation.AVAssetResourceLoader,MonoTouch.AVFoundation.AVAssetResourceRenewalRequest)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAssetResourceLoaderDelegate" />
      </Targets>
      <Member MemberName="ShouldWaitForResponseToAuthenticationChallenge">
        <MemberSignature Language="C#" Value="public static bool ShouldWaitForResponseToAuthenticationChallenge (this AVFoundation.IAVAssetResourceLoaderDelegate This, AVFoundation.AVAssetResourceLoader resourceLoader, Foundation.NSUrlAuthenticationChallenge authenticationChallenge);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldWaitForResponseToAuthenticationChallenge(class AVFoundation.IAVAssetResourceLoaderDelegate This, class AVFoundation.AVAssetResourceLoader resourceLoader, class Foundation.NSUrlAuthenticationChallenge authenticationChallenge) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAssetResourceLoaderDelegate" RefType="this" />
          <Parameter Name="resourceLoader" Type="MonoTouch.AVFoundation.AVAssetResourceLoader" />
          <Parameter Name="authenticationChallenge" Type="MonoTouch.Foundation.NSUrlAuthenticationChallenge" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="resourceLoader">To be added.</param>
          <param name="authenticationChallenge">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAssetResourceLoaderDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAssetResourceLoaderDelegate_Extensions.ShouldWaitForResponseToAuthenticationChallenge(MonoTouch.AVFoundation.IAVAssetResourceLoaderDelegate,MonoTouch.AVFoundation.AVAssetResourceLoader,MonoTouch.Foundation.NSUrlAuthenticationChallenge)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.AVAssetWriterInputMediaDataLocation" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this AVFoundation.AVAssetWriterInputMediaDataLocation self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype AVFoundation.AVAssetWriterInputMediaDataLocation self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.AVFoundation.AVAssetWriterInputMediaDataLocation" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>Returns the string constant for the enumeration value.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAssetWriterInputMediaDataLocationExtensions" Member="M:MonoTouch.AVFoundation.AVAssetWriterInputMediaDataLocationExtensions.GetConstant(MonoTouch.AVFoundation.AVAssetWriterInputMediaDataLocation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAudioMixing" />
      </Targets>
      <Member MemberName="DestinationForMixer">
        <MemberSignature Language="C#" Value="public static AVFoundation.AVAudioMixingDestination DestinationForMixer (this AVFoundation.IAVAudioMixing This, AVFoundation.AVAudioNode mixer, nuint bus);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AVFoundation.AVAudioMixingDestination DestinationForMixer(class AVFoundation.IAVAudioMixing This, class AVFoundation.AVAudioNode mixer, valuetype System.nuint bus) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.AVFoundation.AVAudioMixingDestination</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAudioMixing" RefType="this" />
          <Parameter Name="mixer" Type="MonoTouch.AVFoundation.AVAudioNode" />
          <Parameter Name="bus" Type="System.nuint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="mixer">To be added.</param>
          <param name="bus">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAudioMixing_Extensions" Member="M:MonoTouch.AVFoundation.AVAudioMixing_Extensions.DestinationForMixer(MonoTouch.AVFoundation.IAVAudioMixing,MonoTouch.AVFoundation.AVAudioNode,System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAudioPlayerDelegate" />
      </Targets>
      <Member MemberName="BeginInterruption">
        <MemberSignature Language="C#" Value="public static void BeginInterruption (this AVFoundation.IAVAudioPlayerDelegate This, AVFoundation.AVAudioPlayer player);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BeginInterruption(class AVFoundation.IAVAudioPlayerDelegate This, class AVFoundation.AVAudioPlayer player) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAudioPlayerDelegate" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.AVFoundation.AVAudioPlayer" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAudioPlayerDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAudioPlayerDelegate_Extensions.BeginInterruption(MonoTouch.AVFoundation.IAVAudioPlayerDelegate,MonoTouch.AVFoundation.AVAudioPlayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAudioPlayerDelegate" />
      </Targets>
      <Member MemberName="DecoderError">
        <MemberSignature Language="C#" Value="public static void DecoderError (this AVFoundation.IAVAudioPlayerDelegate This, AVFoundation.AVAudioPlayer player, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DecoderError(class AVFoundation.IAVAudioPlayerDelegate This, class AVFoundation.AVAudioPlayer player, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAudioPlayerDelegate" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.AVFoundation.AVAudioPlayer" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="error">To be added.This parameter can be .</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAudioPlayerDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAudioPlayerDelegate_Extensions.DecoderError(MonoTouch.AVFoundation.IAVAudioPlayerDelegate,MonoTouch.AVFoundation.AVAudioPlayer,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAudioPlayerDelegate" />
      </Targets>
      <Member MemberName="EndInterruption">
        <MemberSignature Language="C#" Value="public static void EndInterruption (this AVFoundation.IAVAudioPlayerDelegate This, AVFoundation.AVAudioPlayer player);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndInterruption(class AVFoundation.IAVAudioPlayerDelegate This, class AVFoundation.AVAudioPlayer player) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAudioPlayerDelegate" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.AVFoundation.AVAudioPlayer" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAudioPlayerDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAudioPlayerDelegate_Extensions.EndInterruption(MonoTouch.AVFoundation.IAVAudioPlayerDelegate,MonoTouch.AVFoundation.AVAudioPlayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAudioPlayerDelegate" />
      </Targets>
      <Member MemberName="EndInterruption">
        <MemberSignature Language="C#" Value="public static void EndInterruption (this AVFoundation.IAVAudioPlayerDelegate This, AVFoundation.AVAudioPlayer player, AVFoundation.AVAudioSessionInterruptionFlags flags);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndInterruption(class AVFoundation.IAVAudioPlayerDelegate This, class AVFoundation.AVAudioPlayer player, valuetype AVFoundation.AVAudioSessionInterruptionFlags flags) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAudioPlayerDelegate" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.AVFoundation.AVAudioPlayer" />
          <Parameter Name="flags" Type="MonoTouch.AVFoundation.AVAudioSessionInterruptionFlags" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="flags">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAudioPlayerDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAudioPlayerDelegate_Extensions.EndInterruption(MonoTouch.AVFoundation.IAVAudioPlayerDelegate,MonoTouch.AVFoundation.AVAudioPlayer,MonoTouch.AVFoundation.AVAudioSessionInterruptionFlags)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAudioPlayerDelegate" />
      </Targets>
      <Member MemberName="FinishedPlaying">
        <MemberSignature Language="C#" Value="public static void FinishedPlaying (this AVFoundation.IAVAudioPlayerDelegate This, AVFoundation.AVAudioPlayer player, bool flag);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FinishedPlaying(class AVFoundation.IAVAudioPlayerDelegate This, class AVFoundation.AVAudioPlayer player, bool flag) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAudioPlayerDelegate" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.AVFoundation.AVAudioPlayer" />
          <Parameter Name="flag" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="flag">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAudioPlayerDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAudioPlayerDelegate_Extensions.FinishedPlaying(MonoTouch.AVFoundation.IAVAudioPlayerDelegate,MonoTouch.AVFoundation.AVAudioPlayer,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAudioRecorderDelegate" />
      </Targets>
      <Member MemberName="BeginInterruption">
        <MemberSignature Language="C#" Value="public static void BeginInterruption (this AVFoundation.IAVAudioRecorderDelegate This, AVFoundation.AVAudioRecorder recorder);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BeginInterruption(class AVFoundation.IAVAudioRecorderDelegate This, class AVFoundation.AVAudioRecorder recorder) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAudioRecorderDelegate" RefType="this" />
          <Parameter Name="recorder" Type="MonoTouch.AVFoundation.AVAudioRecorder" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="recorder">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAudioRecorderDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAudioRecorderDelegate_Extensions.BeginInterruption(MonoTouch.AVFoundation.IAVAudioRecorderDelegate,MonoTouch.AVFoundation.AVAudioRecorder)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAudioRecorderDelegate" />
      </Targets>
      <Member MemberName="EncoderError">
        <MemberSignature Language="C#" Value="public static void EncoderError (this AVFoundation.IAVAudioRecorderDelegate This, AVFoundation.AVAudioRecorder recorder, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EncoderError(class AVFoundation.IAVAudioRecorderDelegate This, class AVFoundation.AVAudioRecorder recorder, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAudioRecorderDelegate" RefType="this" />
          <Parameter Name="recorder" Type="MonoTouch.AVFoundation.AVAudioRecorder" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="recorder">To be added.</param>
          <param name="error">To be added.This parameter can be .</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAudioRecorderDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAudioRecorderDelegate_Extensions.EncoderError(MonoTouch.AVFoundation.IAVAudioRecorderDelegate,MonoTouch.AVFoundation.AVAudioRecorder,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAudioRecorderDelegate" />
      </Targets>
      <Member MemberName="EndInterruption">
        <MemberSignature Language="C#" Value="public static void EndInterruption (this AVFoundation.IAVAudioRecorderDelegate This, AVFoundation.AVAudioRecorder recorder);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndInterruption(class AVFoundation.IAVAudioRecorderDelegate This, class AVFoundation.AVAudioRecorder recorder) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAudioRecorderDelegate" RefType="this" />
          <Parameter Name="recorder" Type="MonoTouch.AVFoundation.AVAudioRecorder" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="recorder">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAudioRecorderDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAudioRecorderDelegate_Extensions.EndInterruption(MonoTouch.AVFoundation.IAVAudioRecorderDelegate,MonoTouch.AVFoundation.AVAudioRecorder)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAudioRecorderDelegate" />
      </Targets>
      <Member MemberName="EndInterruption">
        <MemberSignature Language="C#" Value="public static void EndInterruption (this AVFoundation.IAVAudioRecorderDelegate This, AVFoundation.AVAudioRecorder recorder, AVFoundation.AVAudioSessionInterruptionFlags flags);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndInterruption(class AVFoundation.IAVAudioRecorderDelegate This, class AVFoundation.AVAudioRecorder recorder, valuetype AVFoundation.AVAudioSessionInterruptionFlags flags) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAudioRecorderDelegate" RefType="this" />
          <Parameter Name="recorder" Type="MonoTouch.AVFoundation.AVAudioRecorder" />
          <Parameter Name="flags" Type="MonoTouch.AVFoundation.AVAudioSessionInterruptionFlags" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="recorder">To be added.</param>
          <param name="flags">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAudioRecorderDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAudioRecorderDelegate_Extensions.EndInterruption(MonoTouch.AVFoundation.IAVAudioRecorderDelegate,MonoTouch.AVFoundation.AVAudioRecorder,MonoTouch.AVFoundation.AVAudioSessionInterruptionFlags)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAudioRecorderDelegate" />
      </Targets>
      <Member MemberName="FinishedRecording">
        <MemberSignature Language="C#" Value="public static void FinishedRecording (this AVFoundation.IAVAudioRecorderDelegate This, AVFoundation.AVAudioRecorder recorder, bool flag);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FinishedRecording(class AVFoundation.IAVAudioRecorderDelegate This, class AVFoundation.AVAudioRecorder recorder, bool flag) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAudioRecorderDelegate" RefType="this" />
          <Parameter Name="recorder" Type="MonoTouch.AVFoundation.AVAudioRecorder" />
          <Parameter Name="flag" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="recorder">To be added.</param>
          <param name="flag">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAudioRecorderDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAudioRecorderDelegate_Extensions.FinishedRecording(MonoTouch.AVFoundation.IAVAudioRecorderDelegate,MonoTouch.AVFoundation.AVAudioRecorder,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAudioSessionDelegate" />
      </Targets>
      <Member MemberName="BeginInterruption">
        <MemberSignature Language="C#" Value="public static void BeginInterruption (this AVFoundation.IAVAudioSessionDelegate This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BeginInterruption(class AVFoundation.IAVAudioSessionDelegate This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAudioSessionDelegate" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAudioSessionDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAudioSessionDelegate_Extensions.BeginInterruption(MonoTouch.AVFoundation.IAVAudioSessionDelegate)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAudioSessionDelegate" />
      </Targets>
      <Member MemberName="EndInterruption">
        <MemberSignature Language="C#" Value="public static void EndInterruption (this AVFoundation.IAVAudioSessionDelegate This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndInterruption(class AVFoundation.IAVAudioSessionDelegate This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAudioSessionDelegate" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAudioSessionDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAudioSessionDelegate_Extensions.EndInterruption(MonoTouch.AVFoundation.IAVAudioSessionDelegate)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAudioSessionDelegate" />
      </Targets>
      <Member MemberName="EndInterruption">
        <MemberSignature Language="C#" Value="public static void EndInterruption (this AVFoundation.IAVAudioSessionDelegate This, AVFoundation.AVAudioSessionInterruptionFlags flags);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndInterruption(class AVFoundation.IAVAudioSessionDelegate This, valuetype AVFoundation.AVAudioSessionInterruptionFlags flags) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAudioSessionDelegate" RefType="this" />
          <Parameter Name="flags" Type="MonoTouch.AVFoundation.AVAudioSessionInterruptionFlags" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="flags">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAudioSessionDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAudioSessionDelegate_Extensions.EndInterruption(MonoTouch.AVFoundation.IAVAudioSessionDelegate,MonoTouch.AVFoundation.AVAudioSessionInterruptionFlags)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAudioSessionDelegate" />
      </Targets>
      <Member MemberName="InputIsAvailableChanged">
        <MemberSignature Language="C#" Value="public static void InputIsAvailableChanged (this AVFoundation.IAVAudioSessionDelegate This, bool isInputAvailable);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InputIsAvailableChanged(class AVFoundation.IAVAudioSessionDelegate This, bool isInputAvailable) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAudioSessionDelegate" RefType="this" />
          <Parameter Name="isInputAvailable" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="isInputAvailable">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAudioSessionDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAudioSessionDelegate_Extensions.InputIsAvailableChanged(MonoTouch.AVFoundation.IAVAudioSessionDelegate,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVCaptureAudioDataOutputSampleBufferDelegate" />
      </Targets>
      <Member MemberName="DidOutputSampleBuffer">
        <MemberSignature Language="C#" Value="public static void DidOutputSampleBuffer (this AVFoundation.IAVCaptureAudioDataOutputSampleBufferDelegate This, AVFoundation.AVCaptureOutput captureOutput, CoreMedia.CMSampleBuffer sampleBuffer, AVFoundation.AVCaptureConnection connection);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidOutputSampleBuffer(class AVFoundation.IAVCaptureAudioDataOutputSampleBufferDelegate This, class AVFoundation.AVCaptureOutput captureOutput, class CoreMedia.CMSampleBuffer sampleBuffer, class AVFoundation.AVCaptureConnection connection) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVCaptureAudioDataOutputSampleBufferDelegate" RefType="this" />
          <Parameter Name="captureOutput" Type="MonoTouch.AVFoundation.AVCaptureOutput" />
          <Parameter Name="sampleBuffer" Type="MonoTouch.CoreMedia.CMSampleBuffer" />
          <Parameter Name="connection" Type="MonoTouch.AVFoundation.AVCaptureConnection" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="captureOutput">To be added.</param>
          <param name="sampleBuffer">To be added.</param>
          <param name="connection">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVCaptureAudioDataOutputSampleBufferDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVCaptureAudioDataOutputSampleBufferDelegate_Extensions.DidOutputSampleBuffer(MonoTouch.AVFoundation.IAVCaptureAudioDataOutputSampleBufferDelegate,MonoTouch.AVFoundation.AVCaptureOutput,MonoTouch.CoreMedia.CMSampleBuffer,MonoTouch.AVFoundation.AVCaptureConnection)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVCaptureDepthDataOutputDelegate" />
      </Targets>
      <Member MemberName="DidDropDepthData">
        <MemberSignature Language="C#" Value="public static void DidDropDepthData (this AVFoundation.IAVCaptureDepthDataOutputDelegate This, AVFoundation.AVCaptureDepthDataOutput output, AVFoundation.AVDepthData depthData, CoreMedia.CMTime timestamp, AVFoundation.AVCaptureConnection connection, AVFoundation.AVCaptureOutputDataDroppedReason reason);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDropDepthData(class AVFoundation.IAVCaptureDepthDataOutputDelegate This, class AVFoundation.AVCaptureDepthDataOutput output, class AVFoundation.AVDepthData depthData, valuetype CoreMedia.CMTime timestamp, class AVFoundation.AVCaptureConnection connection, valuetype AVFoundation.AVCaptureOutputDataDroppedReason reason) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVCaptureDepthDataOutputDelegate" RefType="this" />
          <Parameter Name="output" Type="MonoTouch.AVFoundation.AVCaptureDepthDataOutput" />
          <Parameter Name="depthData" Type="MonoTouch.AVFoundation.AVDepthData" />
          <Parameter Name="timestamp" Type="MonoTouch.CoreMedia.CMTime" />
          <Parameter Name="connection" Type="MonoTouch.AVFoundation.AVCaptureConnection" />
          <Parameter Name="reason" Type="MonoTouch.AVFoundation.AVCaptureOutputDataDroppedReason" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="output">To be added.</param>
          <param name="depthData">To be added.</param>
          <param name="timestamp">To be added.</param>
          <param name="connection">To be added.</param>
          <param name="reason">To be added.</param>
          <summary>Method that is called when depth data is dropped.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVCaptureDepthDataOutputDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVCaptureDepthDataOutputDelegate_Extensions.DidDropDepthData(MonoTouch.AVFoundation.IAVCaptureDepthDataOutputDelegate,MonoTouch.AVFoundation.AVCaptureDepthDataOutput,MonoTouch.AVFoundation.AVDepthData,MonoTouch.CoreMedia.CMTime,MonoTouch.AVFoundation.AVCaptureConnection,MonoTouch.AVFoundation.AVCaptureOutputDataDroppedReason)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVCaptureDepthDataOutputDelegate" />
      </Targets>
      <Member MemberName="DidOutputDepthData">
        <MemberSignature Language="C#" Value="public static void DidOutputDepthData (this AVFoundation.IAVCaptureDepthDataOutputDelegate This, AVFoundation.AVCaptureDepthDataOutput output, AVFoundation.AVDepthData depthData, CoreMedia.CMTime timestamp, AVFoundation.AVCaptureConnection connection);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidOutputDepthData(class AVFoundation.IAVCaptureDepthDataOutputDelegate This, class AVFoundation.AVCaptureDepthDataOutput output, class AVFoundation.AVDepthData depthData, valuetype CoreMedia.CMTime timestamp, class AVFoundation.AVCaptureConnection connection) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVCaptureDepthDataOutputDelegate" RefType="this" />
          <Parameter Name="output" Type="MonoTouch.AVFoundation.AVCaptureDepthDataOutput" />
          <Parameter Name="depthData" Type="MonoTouch.AVFoundation.AVDepthData" />
          <Parameter Name="timestamp" Type="MonoTouch.CoreMedia.CMTime" />
          <Parameter Name="connection" Type="MonoTouch.AVFoundation.AVCaptureConnection" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="output">To be added.</param>
          <param name="depthData">To be added.</param>
          <param name="timestamp">To be added.</param>
          <param name="connection">To be added.</param>
          <summary>Method that is called when depth data is output.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVCaptureDepthDataOutputDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVCaptureDepthDataOutputDelegate_Extensions.DidOutputDepthData(MonoTouch.AVFoundation.IAVCaptureDepthDataOutputDelegate,MonoTouch.AVFoundation.AVCaptureDepthDataOutput,MonoTouch.AVFoundation.AVDepthData,MonoTouch.CoreMedia.CMTime,MonoTouch.AVFoundation.AVCaptureConnection)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.AVCaptureDeviceType" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this AVFoundation.AVCaptureDeviceType self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype AVFoundation.AVCaptureDeviceType self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.AVFoundation.AVCaptureDeviceType" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVCaptureDeviceTypeExtensions" Member="M:MonoTouch.AVFoundation.AVCaptureDeviceTypeExtensions.GetConstant(MonoTouch.AVFoundation.AVCaptureDeviceType)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVCaptureFileOutputRecordingDelegate" />
      </Targets>
      <Member MemberName="DidStartRecording">
        <MemberSignature Language="C#" Value="public static void DidStartRecording (this AVFoundation.IAVCaptureFileOutputRecordingDelegate This, AVFoundation.AVCaptureFileOutput captureOutput, Foundation.NSUrl outputFileUrl, Foundation.NSObject[] connections);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidStartRecording(class AVFoundation.IAVCaptureFileOutputRecordingDelegate This, class AVFoundation.AVCaptureFileOutput captureOutput, class Foundation.NSUrl outputFileUrl, class Foundation.NSObject[] connections) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVCaptureFileOutputRecordingDelegate" RefType="this" />
          <Parameter Name="captureOutput" Type="MonoTouch.AVFoundation.AVCaptureFileOutput" />
          <Parameter Name="outputFileUrl" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="connections" Type="MonoTouch.Foundation.NSObject[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="captureOutput">To be added.</param>
          <param name="outputFileUrl">To be added.</param>
          <param name="connections">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVCaptureFileOutputRecordingDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVCaptureFileOutputRecordingDelegate_Extensions.DidStartRecording(MonoTouch.AVFoundation.IAVCaptureFileOutputRecordingDelegate,MonoTouch.AVFoundation.AVCaptureFileOutput,MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSObject[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVCaptureMetadataOutputObjectsDelegate" />
      </Targets>
      <Member MemberName="DidOutputMetadataObjects">
        <MemberSignature Language="C#" Value="public static void DidOutputMetadataObjects (this AVFoundation.IAVCaptureMetadataOutputObjectsDelegate This, AVFoundation.AVCaptureMetadataOutput captureOutput, AVFoundation.AVMetadataObject[] metadataObjects, AVFoundation.AVCaptureConnection connection);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidOutputMetadataObjects(class AVFoundation.IAVCaptureMetadataOutputObjectsDelegate This, class AVFoundation.AVCaptureMetadataOutput captureOutput, class AVFoundation.AVMetadataObject[] metadataObjects, class AVFoundation.AVCaptureConnection connection) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVCaptureMetadataOutputObjectsDelegate" RefType="this" />
          <Parameter Name="captureOutput" Type="MonoTouch.AVFoundation.AVCaptureMetadataOutput" />
          <Parameter Name="metadataObjects" Type="MonoTouch.AVFoundation.AVMetadataObject[]" />
          <Parameter Name="connection" Type="MonoTouch.AVFoundation.AVCaptureConnection" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="captureOutput">To be added.</param>
          <param name="metadataObjects">To be added.</param>
          <param name="connection">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVCaptureMetadataOutputObjectsDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVCaptureMetadataOutputObjectsDelegate_Extensions.DidOutputMetadataObjects(MonoTouch.AVFoundation.IAVCaptureMetadataOutputObjectsDelegate,MonoTouch.AVFoundation.AVCaptureMetadataOutput,MonoTouch.AVFoundation.AVMetadataObject[],MonoTouch.AVFoundation.AVCaptureConnection)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVCapturePhotoCaptureDelegate" />
      </Targets>
      <Member MemberName="DidCapturePhoto">
        <MemberSignature Language="C#" Value="public static void DidCapturePhoto (this AVFoundation.IAVCapturePhotoCaptureDelegate This, AVFoundation.AVCapturePhotoOutput captureOutput, AVFoundation.AVCaptureResolvedPhotoSettings resolvedSettings);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidCapturePhoto(class AVFoundation.IAVCapturePhotoCaptureDelegate This, class AVFoundation.AVCapturePhotoOutput captureOutput, class AVFoundation.AVCaptureResolvedPhotoSettings resolvedSettings) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVCapturePhotoCaptureDelegate" RefType="this" />
          <Parameter Name="captureOutput" Type="MonoTouch.AVFoundation.AVCapturePhotoOutput" />
          <Parameter Name="resolvedSettings" Type="MonoTouch.AVFoundation.AVCaptureResolvedPhotoSettings" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="captureOutput">To be added.</param>
          <param name="resolvedSettings">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVCapturePhotoCaptureDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVCapturePhotoCaptureDelegate_Extensions.DidCapturePhoto(MonoTouch.AVFoundation.IAVCapturePhotoCaptureDelegate,MonoTouch.AVFoundation.AVCapturePhotoOutput,MonoTouch.AVFoundation.AVCaptureResolvedPhotoSettings)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVCapturePhotoCaptureDelegate" />
      </Targets>
      <Member MemberName="DidFinishCapture">
        <MemberSignature Language="C#" Value="public static void DidFinishCapture (this AVFoundation.IAVCapturePhotoCaptureDelegate This, AVFoundation.AVCapturePhotoOutput captureOutput, AVFoundation.AVCaptureResolvedPhotoSettings resolvedSettings, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinishCapture(class AVFoundation.IAVCapturePhotoCaptureDelegate This, class AVFoundation.AVCapturePhotoOutput captureOutput, class AVFoundation.AVCaptureResolvedPhotoSettings resolvedSettings, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVCapturePhotoCaptureDelegate" RefType="this" />
          <Parameter Name="captureOutput" Type="MonoTouch.AVFoundation.AVCapturePhotoOutput" />
          <Parameter Name="resolvedSettings" Type="MonoTouch.AVFoundation.AVCaptureResolvedPhotoSettings" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="captureOutput">To be added.</param>
          <param name="resolvedSettings">To be added.</param>
          <param name="error">To be added.This parameter can be .</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVCapturePhotoCaptureDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVCapturePhotoCaptureDelegate_Extensions.DidFinishCapture(MonoTouch.AVFoundation.IAVCapturePhotoCaptureDelegate,MonoTouch.AVFoundation.AVCapturePhotoOutput,MonoTouch.AVFoundation.AVCaptureResolvedPhotoSettings,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVCapturePhotoCaptureDelegate" />
      </Targets>
      <Member MemberName="DidFinishProcessingLivePhotoMovie">
        <MemberSignature Language="C#" Value="public static void DidFinishProcessingLivePhotoMovie (this AVFoundation.IAVCapturePhotoCaptureDelegate This, AVFoundation.AVCapturePhotoOutput captureOutput, Foundation.NSUrl outputFileUrl, CoreMedia.CMTime duration, CoreMedia.CMTime photoDisplayTime, AVFoundation.AVCaptureResolvedPhotoSettings resolvedSettings, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinishProcessingLivePhotoMovie(class AVFoundation.IAVCapturePhotoCaptureDelegate This, class AVFoundation.AVCapturePhotoOutput captureOutput, class Foundation.NSUrl outputFileUrl, valuetype CoreMedia.CMTime duration, valuetype CoreMedia.CMTime photoDisplayTime, class AVFoundation.AVCaptureResolvedPhotoSettings resolvedSettings, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVCapturePhotoCaptureDelegate" RefType="this" />
          <Parameter Name="captureOutput" Type="MonoTouch.AVFoundation.AVCapturePhotoOutput" />
          <Parameter Name="outputFileUrl" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="duration" Type="MonoTouch.CoreMedia.CMTime" />
          <Parameter Name="photoDisplayTime" Type="MonoTouch.CoreMedia.CMTime" />
          <Parameter Name="resolvedSettings" Type="MonoTouch.AVFoundation.AVCaptureResolvedPhotoSettings" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="captureOutput">To be added.</param>
          <param name="outputFileUrl">To be added.</param>
          <param name="duration">To be added.</param>
          <param name="photoDisplayTime">To be added.</param>
          <param name="resolvedSettings">To be added.</param>
          <param name="error">To be added.This parameter can be .</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVCapturePhotoCaptureDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVCapturePhotoCaptureDelegate_Extensions.DidFinishProcessingLivePhotoMovie(MonoTouch.AVFoundation.IAVCapturePhotoCaptureDelegate,MonoTouch.AVFoundation.AVCapturePhotoOutput,MonoTouch.Foundation.NSUrl,MonoTouch.CoreMedia.CMTime,MonoTouch.CoreMedia.CMTime,MonoTouch.AVFoundation.AVCaptureResolvedPhotoSettings,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVCapturePhotoCaptureDelegate" />
      </Targets>
      <Member MemberName="DidFinishProcessingPhoto">
        <MemberSignature Language="C#" Value="public static void DidFinishProcessingPhoto (this AVFoundation.IAVCapturePhotoCaptureDelegate This, AVFoundation.AVCapturePhotoOutput captureOutput, CoreMedia.CMSampleBuffer photoSampleBuffer, CoreMedia.CMSampleBuffer previewPhotoSampleBuffer, AVFoundation.AVCaptureResolvedPhotoSettings resolvedSettings, AVFoundation.AVCaptureBracketedStillImageSettings bracketSettings, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinishProcessingPhoto(class AVFoundation.IAVCapturePhotoCaptureDelegate This, class AVFoundation.AVCapturePhotoOutput captureOutput, class CoreMedia.CMSampleBuffer photoSampleBuffer, class CoreMedia.CMSampleBuffer previewPhotoSampleBuffer, class AVFoundation.AVCaptureResolvedPhotoSettings resolvedSettings, class AVFoundation.AVCaptureBracketedStillImageSettings bracketSettings, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVCapturePhotoCaptureDelegate" RefType="this" />
          <Parameter Name="captureOutput" Type="MonoTouch.AVFoundation.AVCapturePhotoOutput" />
          <Parameter Name="photoSampleBuffer" Type="MonoTouch.CoreMedia.CMSampleBuffer" />
          <Parameter Name="previewPhotoSampleBuffer" Type="MonoTouch.CoreMedia.CMSampleBuffer" />
          <Parameter Name="resolvedSettings" Type="MonoTouch.AVFoundation.AVCaptureResolvedPhotoSettings" />
          <Parameter Name="bracketSettings" Type="MonoTouch.AVFoundation.AVCaptureBracketedStillImageSettings" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="captureOutput">To be added.</param>
          <param name="photoSampleBuffer">To be added.This parameter can be .</param>
          <param name="previewPhotoSampleBuffer">To be added.This parameter can be .</param>
          <param name="resolvedSettings">To be added.</param>
          <param name="bracketSettings">To be added.This parameter can be .</param>
          <param name="error">To be added.This parameter can be .</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVCapturePhotoCaptureDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVCapturePhotoCaptureDelegate_Extensions.DidFinishProcessingPhoto(MonoTouch.AVFoundation.IAVCapturePhotoCaptureDelegate,MonoTouch.AVFoundation.AVCapturePhotoOutput,MonoTouch.CoreMedia.CMSampleBuffer,MonoTouch.CoreMedia.CMSampleBuffer,MonoTouch.AVFoundation.AVCaptureResolvedPhotoSettings,MonoTouch.AVFoundation.AVCaptureBracketedStillImageSettings,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVCapturePhotoCaptureDelegate" />
      </Targets>
      <Member MemberName="DidFinishProcessingRawPhoto">
        <MemberSignature Language="C#" Value="public static void DidFinishProcessingRawPhoto (this AVFoundation.IAVCapturePhotoCaptureDelegate This, AVFoundation.AVCapturePhotoOutput captureOutput, CoreMedia.CMSampleBuffer rawSampleBuffer, CoreMedia.CMSampleBuffer previewPhotoSampleBuffer, AVFoundation.AVCaptureResolvedPhotoSettings resolvedSettings, AVFoundation.AVCaptureBracketedStillImageSettings bracketSettings, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinishProcessingRawPhoto(class AVFoundation.IAVCapturePhotoCaptureDelegate This, class AVFoundation.AVCapturePhotoOutput captureOutput, class CoreMedia.CMSampleBuffer rawSampleBuffer, class CoreMedia.CMSampleBuffer previewPhotoSampleBuffer, class AVFoundation.AVCaptureResolvedPhotoSettings resolvedSettings, class AVFoundation.AVCaptureBracketedStillImageSettings bracketSettings, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVCapturePhotoCaptureDelegate" RefType="this" />
          <Parameter Name="captureOutput" Type="MonoTouch.AVFoundation.AVCapturePhotoOutput" />
          <Parameter Name="rawSampleBuffer" Type="MonoTouch.CoreMedia.CMSampleBuffer" />
          <Parameter Name="previewPhotoSampleBuffer" Type="MonoTouch.CoreMedia.CMSampleBuffer" />
          <Parameter Name="resolvedSettings" Type="MonoTouch.AVFoundation.AVCaptureResolvedPhotoSettings" />
          <Parameter Name="bracketSettings" Type="MonoTouch.AVFoundation.AVCaptureBracketedStillImageSettings" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="captureOutput">To be added.</param>
          <param name="rawSampleBuffer">To be added.This parameter can be .</param>
          <param name="previewPhotoSampleBuffer">To be added.This parameter can be .</param>
          <param name="resolvedSettings">To be added.</param>
          <param name="bracketSettings">To be added.This parameter can be .</param>
          <param name="error">To be added.This parameter can be .</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVCapturePhotoCaptureDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVCapturePhotoCaptureDelegate_Extensions.DidFinishProcessingRawPhoto(MonoTouch.AVFoundation.IAVCapturePhotoCaptureDelegate,MonoTouch.AVFoundation.AVCapturePhotoOutput,MonoTouch.CoreMedia.CMSampleBuffer,MonoTouch.CoreMedia.CMSampleBuffer,MonoTouch.AVFoundation.AVCaptureResolvedPhotoSettings,MonoTouch.AVFoundation.AVCaptureBracketedStillImageSettings,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVCapturePhotoCaptureDelegate" />
      </Targets>
      <Member MemberName="DidFinishRecordingLivePhotoMovie">
        <MemberSignature Language="C#" Value="public static void DidFinishRecordingLivePhotoMovie (this AVFoundation.IAVCapturePhotoCaptureDelegate This, AVFoundation.AVCapturePhotoOutput captureOutput, Foundation.NSUrl outputFileUrl, AVFoundation.AVCaptureResolvedPhotoSettings resolvedSettings);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinishRecordingLivePhotoMovie(class AVFoundation.IAVCapturePhotoCaptureDelegate This, class AVFoundation.AVCapturePhotoOutput captureOutput, class Foundation.NSUrl outputFileUrl, class AVFoundation.AVCaptureResolvedPhotoSettings resolvedSettings) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVCapturePhotoCaptureDelegate" RefType="this" />
          <Parameter Name="captureOutput" Type="MonoTouch.AVFoundation.AVCapturePhotoOutput" />
          <Parameter Name="outputFileUrl" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="resolvedSettings" Type="MonoTouch.AVFoundation.AVCaptureResolvedPhotoSettings" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="captureOutput">To be added.</param>
          <param name="outputFileUrl">To be added.</param>
          <param name="resolvedSettings">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVCapturePhotoCaptureDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVCapturePhotoCaptureDelegate_Extensions.DidFinishRecordingLivePhotoMovie(MonoTouch.AVFoundation.IAVCapturePhotoCaptureDelegate,MonoTouch.AVFoundation.AVCapturePhotoOutput,MonoTouch.Foundation.NSUrl,MonoTouch.AVFoundation.AVCaptureResolvedPhotoSettings)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVCapturePhotoCaptureDelegate" />
      </Targets>
      <Member MemberName="WillBeginCapture">
        <MemberSignature Language="C#" Value="public static void WillBeginCapture (this AVFoundation.IAVCapturePhotoCaptureDelegate This, AVFoundation.AVCapturePhotoOutput captureOutput, AVFoundation.AVCaptureResolvedPhotoSettings resolvedSettings);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillBeginCapture(class AVFoundation.IAVCapturePhotoCaptureDelegate This, class AVFoundation.AVCapturePhotoOutput captureOutput, class AVFoundation.AVCaptureResolvedPhotoSettings resolvedSettings) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVCapturePhotoCaptureDelegate" RefType="this" />
          <Parameter Name="captureOutput" Type="MonoTouch.AVFoundation.AVCapturePhotoOutput" />
          <Parameter Name="resolvedSettings" Type="MonoTouch.AVFoundation.AVCaptureResolvedPhotoSettings" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="captureOutput">To be added.</param>
          <param name="resolvedSettings">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVCapturePhotoCaptureDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVCapturePhotoCaptureDelegate_Extensions.WillBeginCapture(MonoTouch.AVFoundation.IAVCapturePhotoCaptureDelegate,MonoTouch.AVFoundation.AVCapturePhotoOutput,MonoTouch.AVFoundation.AVCaptureResolvedPhotoSettings)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVCapturePhotoCaptureDelegate" />
      </Targets>
      <Member MemberName="WillCapturePhoto">
        <MemberSignature Language="C#" Value="public static void WillCapturePhoto (this AVFoundation.IAVCapturePhotoCaptureDelegate This, AVFoundation.AVCapturePhotoOutput captureOutput, AVFoundation.AVCaptureResolvedPhotoSettings resolvedSettings);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillCapturePhoto(class AVFoundation.IAVCapturePhotoCaptureDelegate This, class AVFoundation.AVCapturePhotoOutput captureOutput, class AVFoundation.AVCaptureResolvedPhotoSettings resolvedSettings) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVCapturePhotoCaptureDelegate" RefType="this" />
          <Parameter Name="captureOutput" Type="MonoTouch.AVFoundation.AVCapturePhotoOutput" />
          <Parameter Name="resolvedSettings" Type="MonoTouch.AVFoundation.AVCaptureResolvedPhotoSettings" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="captureOutput">To be added.</param>
          <param name="resolvedSettings">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVCapturePhotoCaptureDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVCapturePhotoCaptureDelegate_Extensions.WillCapturePhoto(MonoTouch.AVFoundation.IAVCapturePhotoCaptureDelegate,MonoTouch.AVFoundation.AVCapturePhotoOutput,MonoTouch.AVFoundation.AVCaptureResolvedPhotoSettings)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVCaptureVideoDataOutputSampleBufferDelegate" />
      </Targets>
      <Member MemberName="DidDropSampleBuffer">
        <MemberSignature Language="C#" Value="public static void DidDropSampleBuffer (this AVFoundation.IAVCaptureVideoDataOutputSampleBufferDelegate This, AVFoundation.AVCaptureOutput captureOutput, CoreMedia.CMSampleBuffer sampleBuffer, AVFoundation.AVCaptureConnection connection);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDropSampleBuffer(class AVFoundation.IAVCaptureVideoDataOutputSampleBufferDelegate This, class AVFoundation.AVCaptureOutput captureOutput, class CoreMedia.CMSampleBuffer sampleBuffer, class AVFoundation.AVCaptureConnection connection) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVCaptureVideoDataOutputSampleBufferDelegate" RefType="this" />
          <Parameter Name="captureOutput" Type="MonoTouch.AVFoundation.AVCaptureOutput" />
          <Parameter Name="sampleBuffer" Type="MonoTouch.CoreMedia.CMSampleBuffer" />
          <Parameter Name="connection" Type="MonoTouch.AVFoundation.AVCaptureConnection" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="captureOutput">The capture output on which the frame was captured.</param>
          <param name="sampleBuffer">Buffer containing information about the dropped frame;   No video data is actually included.</param>
          <param name="connection">The connection on which the video frame was received.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVCaptureVideoDataOutputSampleBufferDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVCaptureVideoDataOutputSampleBufferDelegate_Extensions.DidDropSampleBuffer(MonoTouch.AVFoundation.IAVCaptureVideoDataOutputSampleBufferDelegate,MonoTouch.AVFoundation.AVCaptureOutput,MonoTouch.CoreMedia.CMSampleBuffer,MonoTouch.AVFoundation.AVCaptureConnection)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVCaptureVideoDataOutputSampleBufferDelegate" />
      </Targets>
      <Member MemberName="DidOutputSampleBuffer">
        <MemberSignature Language="C#" Value="public static void DidOutputSampleBuffer (this AVFoundation.IAVCaptureVideoDataOutputSampleBufferDelegate This, AVFoundation.AVCaptureOutput captureOutput, CoreMedia.CMSampleBuffer sampleBuffer, AVFoundation.AVCaptureConnection connection);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidOutputSampleBuffer(class AVFoundation.IAVCaptureVideoDataOutputSampleBufferDelegate This, class AVFoundation.AVCaptureOutput captureOutput, class CoreMedia.CMSampleBuffer sampleBuffer, class AVFoundation.AVCaptureConnection connection) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVCaptureVideoDataOutputSampleBufferDelegate" RefType="this" />
          <Parameter Name="captureOutput" Type="MonoTouch.AVFoundation.AVCaptureOutput" />
          <Parameter Name="sampleBuffer" Type="MonoTouch.CoreMedia.CMSampleBuffer" />
          <Parameter Name="connection" Type="MonoTouch.AVFoundation.AVCaptureConnection" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="captureOutput">The capture output on which the frame was captured.</param>
          <param name="sampleBuffer">The video frame data, part of a small finite pool of buffers.</param>
          <param name="connection">The connection on which the video frame was received.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVCaptureVideoDataOutputSampleBufferDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVCaptureVideoDataOutputSampleBufferDelegate_Extensions.DidOutputSampleBuffer(MonoTouch.AVFoundation.IAVCaptureVideoDataOutputSampleBufferDelegate,MonoTouch.AVFoundation.AVCaptureOutput,MonoTouch.CoreMedia.CMSampleBuffer,MonoTouch.AVFoundation.AVCaptureConnection)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.AVComposition" />
      </Targets>
      <Member MemberName="GetTrack">
        <MemberSignature Language="C#" Value="public static AVFoundation.AVCompositionTrack GetTrack (this AVFoundation.AVComposition This, int trackID);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AVFoundation.AVCompositionTrack GetTrack(class AVFoundation.AVComposition This, int32 trackID) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.AVFoundation.AVCompositionTrack</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.AVComposition" RefType="this" />
          <Parameter Name="trackID" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="trackID">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVComposition_AVCompositionTrackInspection" Member="M:MonoTouch.AVFoundation.AVComposition_AVCompositionTrackInspection.GetTrack(MonoTouch.AVFoundation.AVComposition,System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.AVComposition" />
      </Targets>
      <Member MemberName="GetTracks">
        <MemberSignature Language="C#" Value="public static AVFoundation.AVCompositionTrack[] GetTracks (this AVFoundation.AVComposition This, AVFoundation.AVMediaCharacteristics mediaCharacteristic);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AVFoundation.AVCompositionTrack[] GetTracks(class AVFoundation.AVComposition This, valuetype AVFoundation.AVMediaCharacteristics mediaCharacteristic) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.AVFoundation.AVCompositionTrack[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.AVComposition" RefType="this" />
          <Parameter Name="mediaCharacteristic" Type="MonoTouch.AVFoundation.AVMediaCharacteristics" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="mediaCharacteristic">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVComposition_AVCompositionTrackInspection" Member="M:MonoTouch.AVFoundation.AVComposition_AVCompositionTrackInspection.GetTracks(MonoTouch.AVFoundation.AVComposition,MonoTouch.AVFoundation.AVMediaCharacteristics)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.AVComposition" />
      </Targets>
      <Member MemberName="GetTracks">
        <MemberSignature Language="C#" Value="public static AVFoundation.AVCompositionTrack[] GetTracks (this AVFoundation.AVComposition This, AVFoundation.AVMediaTypes mediaType);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AVFoundation.AVCompositionTrack[] GetTracks(class AVFoundation.AVComposition This, valuetype AVFoundation.AVMediaTypes mediaType) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.AVFoundation.AVCompositionTrack[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.AVComposition" RefType="this" />
          <Parameter Name="mediaType" Type="MonoTouch.AVFoundation.AVMediaTypes" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="mediaType">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVComposition_AVCompositionTrackInspection" Member="M:MonoTouch.AVFoundation.AVComposition_AVCompositionTrackInspection.GetTracks(MonoTouch.AVFoundation.AVComposition,MonoTouch.AVFoundation.AVMediaTypes)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.AVComposition" />
      </Targets>
      <Member MemberName="GetTracks">
        <MemberSignature Language="C#" Value="public static AVFoundation.AVCompositionTrack[] GetTracks (this AVFoundation.AVComposition This, string mediaType);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AVFoundation.AVCompositionTrack[] GetTracks(class AVFoundation.AVComposition This, string mediaType) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.AVFoundation.AVCompositionTrack[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.AVComposition" RefType="this" />
          <Parameter Name="mediaType" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="mediaType">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVComposition_AVCompositionTrackInspection" Member="M:MonoTouch.AVFoundation.AVComposition_AVCompositionTrackInspection.GetTracks(MonoTouch.AVFoundation.AVComposition,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.AVComposition" />
      </Targets>
      <Member MemberName="GetTracksWithMediaCharacteristic">
        <MemberSignature Language="C#" Value="public static AVFoundation.AVCompositionTrack[] GetTracksWithMediaCharacteristic (this AVFoundation.AVComposition This, string mediaCharacteristic);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AVFoundation.AVCompositionTrack[] GetTracksWithMediaCharacteristic(class AVFoundation.AVComposition This, string mediaCharacteristic) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.AVFoundation.AVCompositionTrack[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.AVComposition" RefType="this" />
          <Parameter Name="mediaCharacteristic" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="mediaCharacteristic">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVComposition_AVCompositionTrackInspection" Member="M:MonoTouch.AVFoundation.AVComposition_AVCompositionTrackInspection.GetTracksWithMediaCharacteristic(MonoTouch.AVFoundation.AVComposition,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.AVContentKeyRequest" />
      </Targets>
      <Member MemberName="GetRenewsExpiringResponseData">
        <MemberSignature Language="C#" Value="public static bool GetRenewsExpiringResponseData (this AVFoundation.AVContentKeyRequest This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetRenewsExpiringResponseData(class AVFoundation.AVContentKeyRequest This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.AVContentKeyRequest" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVContentKeyRequest_AVContentKeyRequestRenewal" Member="M:MonoTouch.AVFoundation.AVContentKeyRequest_AVContentKeyRequestRenewal.GetRenewsExpiringResponseData(MonoTouch.AVFoundation.AVContentKeyRequest)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.AVContentKeyRequestRetryReason" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this AVFoundation.AVContentKeyRequestRetryReason self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype AVFoundation.AVContentKeyRequestRetryReason self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.AVFoundation.AVContentKeyRequestRetryReason" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVContentKeyRequestRetryReasonExtensions" Member="M:MonoTouch.AVFoundation.AVContentKeyRequestRetryReasonExtensions.GetConstant(MonoTouch.AVFoundation.AVContentKeyRequestRetryReason)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.AVContentKeySession" />
      </Targets>
      <Member MemberName="Add">
        <MemberSignature Language="C#" Value="public static void Add (this AVFoundation.AVContentKeySession This, AVFoundation.IAVContentKeyRecipient recipient);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Add(class AVFoundation.AVContentKeySession This, class AVFoundation.IAVContentKeyRecipient recipient) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.AVContentKeySession" RefType="this" />
          <Parameter Name="recipient" Type="MonoTouch.AVFoundation.IAVContentKeyRecipient" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="recipient">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVContentKeySession_AVContentKeyRecipients" Member="M:MonoTouch.AVFoundation.AVContentKeySession_AVContentKeyRecipients.Add(MonoTouch.AVFoundation.AVContentKeySession,MonoTouch.AVFoundation.IAVContentKeyRecipient)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.AVContentKeySession" />
      </Targets>
      <Member MemberName="GetContentKeyRecipients">
        <MemberSignature Language="C#" Value="public static AVFoundation.IAVContentKeyRecipient[] GetContentKeyRecipients (this AVFoundation.AVContentKeySession This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AVFoundation.IAVContentKeyRecipient[] GetContentKeyRecipients(class AVFoundation.AVContentKeySession This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.AVFoundation.IAVContentKeyRecipient[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.AVContentKeySession" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVContentKeySession_AVContentKeyRecipients" Member="M:MonoTouch.AVFoundation.AVContentKeySession_AVContentKeyRecipients.GetContentKeyRecipients(MonoTouch.AVFoundation.AVContentKeySession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.AVContentKeySession" />
      </Targets>
      <Member MemberName="Remove">
        <MemberSignature Language="C#" Value="public static void Remove (this AVFoundation.AVContentKeySession This, AVFoundation.IAVContentKeyRecipient recipient);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Remove(class AVFoundation.AVContentKeySession This, class AVFoundation.IAVContentKeyRecipient recipient) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.AVContentKeySession" RefType="this" />
          <Parameter Name="recipient" Type="MonoTouch.AVFoundation.IAVContentKeyRecipient" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="recipient">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVContentKeySession_AVContentKeyRecipients" Member="M:MonoTouch.AVFoundation.AVContentKeySession_AVContentKeyRecipients.Remove(MonoTouch.AVFoundation.AVContentKeySession,MonoTouch.AVFoundation.IAVContentKeyRecipient)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVContentKeySessionDelegate" />
      </Targets>
      <Member MemberName="DidChange">
        <MemberSignature Language="C#" Value="public static void DidChange (this AVFoundation.IAVContentKeySessionDelegate This, AVFoundation.AVContentKeySession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidChange(class AVFoundation.IAVContentKeySessionDelegate This, class AVFoundation.AVContentKeySession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVContentKeySessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.AVFoundation.AVContentKeySession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVContentKeySessionDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVContentKeySessionDelegate_Extensions.DidChange(MonoTouch.AVFoundation.IAVContentKeySessionDelegate,MonoTouch.AVFoundation.AVContentKeySession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVContentKeySessionDelegate" />
      </Targets>
      <Member MemberName="DidFail">
        <MemberSignature Language="C#" Value="public static void DidFail (this AVFoundation.IAVContentKeySessionDelegate This, AVFoundation.AVContentKeySession session, AVFoundation.AVContentKeyRequest keyRequest, Foundation.NSError err);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFail(class AVFoundation.IAVContentKeySessionDelegate This, class AVFoundation.AVContentKeySession session, class AVFoundation.AVContentKeyRequest keyRequest, class Foundation.NSError err) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVContentKeySessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.AVFoundation.AVContentKeySession" />
          <Parameter Name="keyRequest" Type="MonoTouch.AVFoundation.AVContentKeyRequest" />
          <Parameter Name="err" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="keyRequest">To be added.</param>
          <param name="err">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVContentKeySessionDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVContentKeySessionDelegate_Extensions.DidFail(MonoTouch.AVFoundation.IAVContentKeySessionDelegate,MonoTouch.AVFoundation.AVContentKeySession,MonoTouch.AVFoundation.AVContentKeyRequest,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVContentKeySessionDelegate" />
      </Targets>
      <Member MemberName="DidProvidePersistableContentKeyRequest">
        <MemberSignature Language="C#" Value="public static void DidProvidePersistableContentKeyRequest (this AVFoundation.IAVContentKeySessionDelegate This, AVFoundation.AVContentKeySession session, AVFoundation.AVPersistableContentKeyRequest keyRequest);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidProvidePersistableContentKeyRequest(class AVFoundation.IAVContentKeySessionDelegate This, class AVFoundation.AVContentKeySession session, class AVFoundation.AVPersistableContentKeyRequest keyRequest) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVContentKeySessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.AVFoundation.AVContentKeySession" />
          <Parameter Name="keyRequest" Type="MonoTouch.AVFoundation.AVPersistableContentKeyRequest" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="keyRequest">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVContentKeySessionDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVContentKeySessionDelegate_Extensions.DidProvidePersistableContentKeyRequest(MonoTouch.AVFoundation.IAVContentKeySessionDelegate,MonoTouch.AVFoundation.AVContentKeySession,MonoTouch.AVFoundation.AVPersistableContentKeyRequest)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVContentKeySessionDelegate" />
      </Targets>
      <Member MemberName="DidProvideRenewingContentKeyRequest">
        <MemberSignature Language="C#" Value="public static void DidProvideRenewingContentKeyRequest (this AVFoundation.IAVContentKeySessionDelegate This, AVFoundation.AVContentKeySession session, AVFoundation.AVContentKeyRequest keyRequest);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidProvideRenewingContentKeyRequest(class AVFoundation.IAVContentKeySessionDelegate This, class AVFoundation.AVContentKeySession session, class AVFoundation.AVContentKeyRequest keyRequest) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVContentKeySessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.AVFoundation.AVContentKeySession" />
          <Parameter Name="keyRequest" Type="MonoTouch.AVFoundation.AVContentKeyRequest" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="keyRequest">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVContentKeySessionDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVContentKeySessionDelegate_Extensions.DidProvideRenewingContentKeyRequest(MonoTouch.AVFoundation.IAVContentKeySessionDelegate,MonoTouch.AVFoundation.AVContentKeySession,MonoTouch.AVFoundation.AVContentKeyRequest)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVContentKeySessionDelegate" />
      </Targets>
      <Member MemberName="DidUpdate">
        <MemberSignature Language="C#" Value="public static void DidUpdate (this AVFoundation.IAVContentKeySessionDelegate This, AVFoundation.AVContentKeySession session, Foundation.NSData persistableContentKey, Foundation.NSObject keyIdentifier);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdate(class AVFoundation.IAVContentKeySessionDelegate This, class AVFoundation.AVContentKeySession session, class Foundation.NSData persistableContentKey, class Foundation.NSObject keyIdentifier) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVContentKeySessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.AVFoundation.AVContentKeySession" />
          <Parameter Name="persistableContentKey" Type="MonoTouch.Foundation.NSData" />
          <Parameter Name="keyIdentifier" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="persistableContentKey">To be added.</param>
          <param name="keyIdentifier">To be added.</param>
          <summary>Developers may override this method to handle a request  for a an updated <paramref name="persistableContentKey" /> that was made with the specified <paramref name="keyIdentifier" />.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVContentKeySessionDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVContentKeySessionDelegate_Extensions.DidUpdate(MonoTouch.AVFoundation.IAVContentKeySessionDelegate,MonoTouch.AVFoundation.AVContentKeySession,MonoTouch.Foundation.NSData,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVContentKeySessionDelegate" />
      </Targets>
      <Member MemberName="ShouldRetryContentKeyRequest">
        <MemberSignature Language="C#" Value="public static bool ShouldRetryContentKeyRequest (this AVFoundation.IAVContentKeySessionDelegate This, AVFoundation.AVContentKeySession session, AVFoundation.AVContentKeyRequest keyRequest, string retryReason);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldRetryContentKeyRequest(class AVFoundation.IAVContentKeySessionDelegate This, class AVFoundation.AVContentKeySession session, class AVFoundation.AVContentKeyRequest keyRequest, string retryReason) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVContentKeySessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.AVFoundation.AVContentKeySession" />
          <Parameter Name="keyRequest" Type="MonoTouch.AVFoundation.AVContentKeyRequest" />
          <Parameter Name="retryReason" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="keyRequest">To be added.</param>
          <param name="retryReason">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVContentKeySessionDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVContentKeySessionDelegate_Extensions.ShouldRetryContentKeyRequest(MonoTouch.AVFoundation.IAVContentKeySessionDelegate,MonoTouch.AVFoundation.AVContentKeySession,MonoTouch.AVFoundation.AVContentKeyRequest,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.AVContentKeySystem" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this AVFoundation.AVContentKeySystem self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype AVFoundation.AVContentKeySystem self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.AVFoundation.AVContentKeySystem" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVContentKeySystemExtensions" Member="M:MonoTouch.AVFoundation.AVContentKeySystemExtensions.GetConstant(MonoTouch.AVFoundation.AVContentKeySystem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.AVFileTypes" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this AVFoundation.AVFileTypes self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype AVFoundation.AVFileTypes self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.AVFoundation.AVFileTypes" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>Returns the string constant for the enumeration value.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVFileTypesExtensions" Member="M:MonoTouch.AVFoundation.AVFileTypesExtensions.GetConstant(MonoTouch.AVFoundation.AVFileTypes)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.AVMediaCharacteristics" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this AVFoundation.AVMediaCharacteristics self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype AVFoundation.AVMediaCharacteristics self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.AVFoundation.AVMediaCharacteristics" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>Returns the string constant for the enumeration value.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVMediaCharacteristicsExtensions" Member="M:MonoTouch.AVFoundation.AVMediaCharacteristicsExtensions.GetConstant(MonoTouch.AVFoundation.AVMediaCharacteristics)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.AVMediaTypes" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this AVFoundation.AVMediaTypes self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype AVFoundation.AVMediaTypes self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.AVFoundation.AVMediaTypes" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVMediaTypesExtensions" Member="M:MonoTouch.AVFoundation.AVMediaTypesExtensions.GetConstant(MonoTouch.AVFoundation.AVMediaTypes)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.AVMetadataFormat" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this AVFoundation.AVMetadataFormat self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype AVFoundation.AVMetadataFormat self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.AVFoundation.AVMetadataFormat" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>Returns the string constant for the enumeration value.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVMetadataFormatExtensions" Member="M:MonoTouch.AVFoundation.AVMetadataFormatExtensions.GetConstant(MonoTouch.AVFoundation.AVMetadataFormat)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.AVMutableComposition" />
      </Targets>
      <Member MemberName="GetTrack">
        <MemberSignature Language="C#" Value="public static AVFoundation.AVMutableCompositionTrack GetTrack (this AVFoundation.AVMutableComposition This, int trackID);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AVFoundation.AVMutableCompositionTrack GetTrack(class AVFoundation.AVMutableComposition This, int32 trackID) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.AVFoundation.AVMutableCompositionTrack</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.AVMutableComposition" RefType="this" />
          <Parameter Name="trackID" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="trackID">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVMutableComposition_AVMutableCompositionTrackInspection" Member="M:MonoTouch.AVFoundation.AVMutableComposition_AVMutableCompositionTrackInspection.GetTrack(MonoTouch.AVFoundation.AVMutableComposition,System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.AVMutableComposition" />
      </Targets>
      <Member MemberName="GetTracks">
        <MemberSignature Language="C#" Value="public static AVFoundation.AVMutableCompositionTrack[] GetTracks (this AVFoundation.AVMutableComposition This, AVFoundation.AVMediaCharacteristics mediaCharacteristic);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AVFoundation.AVMutableCompositionTrack[] GetTracks(class AVFoundation.AVMutableComposition This, valuetype AVFoundation.AVMediaCharacteristics mediaCharacteristic) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.AVFoundation.AVMutableCompositionTrack[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.AVMutableComposition" RefType="this" />
          <Parameter Name="mediaCharacteristic" Type="MonoTouch.AVFoundation.AVMediaCharacteristics" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="mediaCharacteristic">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVMutableComposition_AVMutableCompositionTrackInspection" Member="M:MonoTouch.AVFoundation.AVMutableComposition_AVMutableCompositionTrackInspection.GetTracks(MonoTouch.AVFoundation.AVMutableComposition,MonoTouch.AVFoundation.AVMediaCharacteristics)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.AVMutableComposition" />
      </Targets>
      <Member MemberName="GetTracks">
        <MemberSignature Language="C#" Value="public static AVFoundation.AVMutableCompositionTrack[] GetTracks (this AVFoundation.AVMutableComposition This, AVFoundation.AVMediaTypes mediaType);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AVFoundation.AVMutableCompositionTrack[] GetTracks(class AVFoundation.AVMutableComposition This, valuetype AVFoundation.AVMediaTypes mediaType) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.AVFoundation.AVMutableCompositionTrack[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.AVMutableComposition" RefType="this" />
          <Parameter Name="mediaType" Type="MonoTouch.AVFoundation.AVMediaTypes" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="mediaType">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVMutableComposition_AVMutableCompositionTrackInspection" Member="M:MonoTouch.AVFoundation.AVMutableComposition_AVMutableCompositionTrackInspection.GetTracks(MonoTouch.AVFoundation.AVMutableComposition,MonoTouch.AVFoundation.AVMediaTypes)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.AVMutableComposition" />
      </Targets>
      <Member MemberName="GetTracks">
        <MemberSignature Language="C#" Value="public static AVFoundation.AVMutableCompositionTrack[] GetTracks (this AVFoundation.AVMutableComposition This, string mediaType);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AVFoundation.AVMutableCompositionTrack[] GetTracks(class AVFoundation.AVMutableComposition This, string mediaType) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.AVFoundation.AVMutableCompositionTrack[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.AVMutableComposition" RefType="this" />
          <Parameter Name="mediaType" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="mediaType">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVMutableComposition_AVMutableCompositionTrackInspection" Member="M:MonoTouch.AVFoundation.AVMutableComposition_AVMutableCompositionTrackInspection.GetTracks(MonoTouch.AVFoundation.AVMutableComposition,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.AVMutableComposition" />
      </Targets>
      <Member MemberName="GetTracksWithMediaCharacteristic">
        <MemberSignature Language="C#" Value="public static AVFoundation.AVMutableCompositionTrack[] GetTracksWithMediaCharacteristic (this AVFoundation.AVMutableComposition This, string mediaCharacteristic);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AVFoundation.AVMutableCompositionTrack[] GetTracksWithMediaCharacteristic(class AVFoundation.AVMutableComposition This, string mediaCharacteristic) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.AVFoundation.AVMutableCompositionTrack[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.AVMutableComposition" RefType="this" />
          <Parameter Name="mediaCharacteristic" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="mediaCharacteristic">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVMutableComposition_AVMutableCompositionTrackInspection" Member="M:MonoTouch.AVFoundation.AVMutableComposition_AVMutableCompositionTrackInspection.GetTracksWithMediaCharacteristic(MonoTouch.AVFoundation.AVMutableComposition,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVPlayerItemLegibleOutputPushDelegate" />
      </Targets>
      <Member MemberName="DidOutputAttributedStrings">
        <MemberSignature Language="C#" Value="public static void DidOutputAttributedStrings (this AVFoundation.IAVPlayerItemLegibleOutputPushDelegate This, AVFoundation.AVPlayerItemLegibleOutput output, Foundation.NSAttributedString[] strings, CoreMedia.CMSampleBuffer[] nativeSamples, CoreMedia.CMTime itemTime);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidOutputAttributedStrings(class AVFoundation.IAVPlayerItemLegibleOutputPushDelegate This, class AVFoundation.AVPlayerItemLegibleOutput output, class Foundation.NSAttributedString[] strings, class CoreMedia.CMSampleBuffer[] nativeSamples, valuetype CoreMedia.CMTime itemTime) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVPlayerItemLegibleOutputPushDelegate" RefType="this" />
          <Parameter Name="output" Type="MonoTouch.AVFoundation.AVPlayerItemLegibleOutput" />
          <Parameter Name="strings" Type="MonoTouch.Foundation.NSAttributedString[]" />
          <Parameter Name="nativeSamples" Type="MonoTouch.CoreMedia.CMSampleBuffer[]" />
          <Parameter Name="itemTime" Type="MonoTouch.CoreMedia.CMTime" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="output">To be added.</param>
          <param name="strings">To be added.</param>
          <param name="nativeSamples">To be added.</param>
          <param name="itemTime">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVPlayerItemLegibleOutputPushDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVPlayerItemLegibleOutputPushDelegate_Extensions.DidOutputAttributedStrings(MonoTouch.AVFoundation.IAVPlayerItemLegibleOutputPushDelegate,MonoTouch.AVFoundation.AVPlayerItemLegibleOutput,MonoTouch.Foundation.NSAttributedString[],MonoTouch.CoreMedia.CMSampleBuffer[],MonoTouch.CoreMedia.CMTime)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVPlayerItemMetadataOutputPushDelegate" />
      </Targets>
      <Member MemberName="DidOutputTimedMetadataGroups">
        <MemberSignature Language="C#" Value="public static void DidOutputTimedMetadataGroups (this AVFoundation.IAVPlayerItemMetadataOutputPushDelegate This, AVFoundation.AVPlayerItemMetadataOutput output, AVFoundation.AVTimedMetadataGroup[] groups, AVFoundation.AVPlayerItemTrack track);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidOutputTimedMetadataGroups(class AVFoundation.IAVPlayerItemMetadataOutputPushDelegate This, class AVFoundation.AVPlayerItemMetadataOutput output, class AVFoundation.AVTimedMetadataGroup[] groups, class AVFoundation.AVPlayerItemTrack track) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVPlayerItemMetadataOutputPushDelegate" RefType="this" />
          <Parameter Name="output" Type="MonoTouch.AVFoundation.AVPlayerItemMetadataOutput" />
          <Parameter Name="groups" Type="MonoTouch.AVFoundation.AVTimedMetadataGroup[]" />
          <Parameter Name="track" Type="MonoTouch.AVFoundation.AVPlayerItemTrack" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="output">To be added.</param>
          <param name="groups">To be added.</param>
          <param name="track">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVPlayerItemMetadataOutputPushDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVPlayerItemMetadataOutputPushDelegate_Extensions.DidOutputTimedMetadataGroups(MonoTouch.AVFoundation.IAVPlayerItemMetadataOutputPushDelegate,MonoTouch.AVFoundation.AVPlayerItemMetadataOutput,MonoTouch.AVFoundation.AVTimedMetadataGroup[],MonoTouch.AVFoundation.AVPlayerItemTrack)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVPlayerItemOutputPullDelegate" />
      </Targets>
      <Member MemberName="OutputMediaDataWillChange">
        <MemberSignature Language="C#" Value="public static void OutputMediaDataWillChange (this AVFoundation.IAVPlayerItemOutputPullDelegate This, AVFoundation.AVPlayerItemOutput sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OutputMediaDataWillChange(class AVFoundation.IAVPlayerItemOutputPullDelegate This, class AVFoundation.AVPlayerItemOutput sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVPlayerItemOutputPullDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.AVFoundation.AVPlayerItemOutput" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVPlayerItemOutputPullDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVPlayerItemOutputPullDelegate_Extensions.OutputMediaDataWillChange(MonoTouch.AVFoundation.IAVPlayerItemOutputPullDelegate,MonoTouch.AVFoundation.AVPlayerItemOutput)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVPlayerItemOutputPullDelegate" />
      </Targets>
      <Member MemberName="OutputSequenceWasFlushed">
        <MemberSignature Language="C#" Value="public static void OutputSequenceWasFlushed (this AVFoundation.IAVPlayerItemOutputPullDelegate This, AVFoundation.AVPlayerItemOutput output);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OutputSequenceWasFlushed(class AVFoundation.IAVPlayerItemOutputPullDelegate This, class AVFoundation.AVPlayerItemOutput output) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVPlayerItemOutputPullDelegate" RefType="this" />
          <Parameter Name="output" Type="MonoTouch.AVFoundation.AVPlayerItemOutput" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="output">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVPlayerItemOutputPullDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVPlayerItemOutputPullDelegate_Extensions.OutputSequenceWasFlushed(MonoTouch.AVFoundation.IAVPlayerItemOutputPullDelegate,MonoTouch.AVFoundation.AVPlayerItemOutput)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVPlayerItemOutputPushDelegate" />
      </Targets>
      <Member MemberName="OutputSequenceWasFlushed">
        <MemberSignature Language="C#" Value="public static void OutputSequenceWasFlushed (this AVFoundation.IAVPlayerItemOutputPushDelegate This, AVFoundation.AVPlayerItemOutput output);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OutputSequenceWasFlushed(class AVFoundation.IAVPlayerItemOutputPushDelegate This, class AVFoundation.AVPlayerItemOutput output) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVPlayerItemOutputPushDelegate" RefType="this" />
          <Parameter Name="output" Type="MonoTouch.AVFoundation.AVPlayerItemOutput" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="output">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVPlayerItemOutputPushDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVPlayerItemOutputPushDelegate_Extensions.OutputSequenceWasFlushed(MonoTouch.AVFoundation.IAVPlayerItemOutputPushDelegate,MonoTouch.AVFoundation.AVPlayerItemOutput)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate" />
      </Targets>
      <Member MemberName="DidCancelSpeechUtterance">
        <MemberSignature Language="C#" Value="public static void DidCancelSpeechUtterance (this AVFoundation.IAVSpeechSynthesizerDelegate This, AVFoundation.AVSpeechSynthesizer synthesizer, AVFoundation.AVSpeechUtterance utterance);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidCancelSpeechUtterance(class AVFoundation.IAVSpeechSynthesizerDelegate This, class AVFoundation.AVSpeechSynthesizer synthesizer, class AVFoundation.AVSpeechUtterance utterance) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate" RefType="this" />
          <Parameter Name="synthesizer" Type="MonoTouch.AVFoundation.AVSpeechSynthesizer" />
          <Parameter Name="utterance" Type="MonoTouch.AVFoundation.AVSpeechUtterance" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="synthesizer">To be added.</param>
          <param name="utterance">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVSpeechSynthesizerDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVSpeechSynthesizerDelegate_Extensions.DidCancelSpeechUtterance(MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate,MonoTouch.AVFoundation.AVSpeechSynthesizer,MonoTouch.AVFoundation.AVSpeechUtterance)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate" />
      </Targets>
      <Member MemberName="DidContinueSpeechUtterance">
        <MemberSignature Language="C#" Value="public static void DidContinueSpeechUtterance (this AVFoundation.IAVSpeechSynthesizerDelegate This, AVFoundation.AVSpeechSynthesizer synthesizer, AVFoundation.AVSpeechUtterance utterance);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidContinueSpeechUtterance(class AVFoundation.IAVSpeechSynthesizerDelegate This, class AVFoundation.AVSpeechSynthesizer synthesizer, class AVFoundation.AVSpeechUtterance utterance) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate" RefType="this" />
          <Parameter Name="synthesizer" Type="MonoTouch.AVFoundation.AVSpeechSynthesizer" />
          <Parameter Name="utterance" Type="MonoTouch.AVFoundation.AVSpeechUtterance" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="synthesizer">To be added.</param>
          <param name="utterance">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVSpeechSynthesizerDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVSpeechSynthesizerDelegate_Extensions.DidContinueSpeechUtterance(MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate,MonoTouch.AVFoundation.AVSpeechSynthesizer,MonoTouch.AVFoundation.AVSpeechUtterance)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate" />
      </Targets>
      <Member MemberName="DidFinishSpeechUtterance">
        <MemberSignature Language="C#" Value="public static void DidFinishSpeechUtterance (this AVFoundation.IAVSpeechSynthesizerDelegate This, AVFoundation.AVSpeechSynthesizer synthesizer, AVFoundation.AVSpeechUtterance utterance);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinishSpeechUtterance(class AVFoundation.IAVSpeechSynthesizerDelegate This, class AVFoundation.AVSpeechSynthesizer synthesizer, class AVFoundation.AVSpeechUtterance utterance) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate" RefType="this" />
          <Parameter Name="synthesizer" Type="MonoTouch.AVFoundation.AVSpeechSynthesizer" />
          <Parameter Name="utterance" Type="MonoTouch.AVFoundation.AVSpeechUtterance" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="synthesizer">To be added.</param>
          <param name="utterance">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVSpeechSynthesizerDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVSpeechSynthesizerDelegate_Extensions.DidFinishSpeechUtterance(MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate,MonoTouch.AVFoundation.AVSpeechSynthesizer,MonoTouch.AVFoundation.AVSpeechUtterance)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate" />
      </Targets>
      <Member MemberName="DidPauseSpeechUtterance">
        <MemberSignature Language="C#" Value="public static void DidPauseSpeechUtterance (this AVFoundation.IAVSpeechSynthesizerDelegate This, AVFoundation.AVSpeechSynthesizer synthesizer, AVFoundation.AVSpeechUtterance utterance);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidPauseSpeechUtterance(class AVFoundation.IAVSpeechSynthesizerDelegate This, class AVFoundation.AVSpeechSynthesizer synthesizer, class AVFoundation.AVSpeechUtterance utterance) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate" RefType="this" />
          <Parameter Name="synthesizer" Type="MonoTouch.AVFoundation.AVSpeechSynthesizer" />
          <Parameter Name="utterance" Type="MonoTouch.AVFoundation.AVSpeechUtterance" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="synthesizer">To be added.</param>
          <param name="utterance">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVSpeechSynthesizerDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVSpeechSynthesizerDelegate_Extensions.DidPauseSpeechUtterance(MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate,MonoTouch.AVFoundation.AVSpeechSynthesizer,MonoTouch.AVFoundation.AVSpeechUtterance)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate" />
      </Targets>
      <Member MemberName="DidStartSpeechUtterance">
        <MemberSignature Language="C#" Value="public static void DidStartSpeechUtterance (this AVFoundation.IAVSpeechSynthesizerDelegate This, AVFoundation.AVSpeechSynthesizer synthesizer, AVFoundation.AVSpeechUtterance utterance);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidStartSpeechUtterance(class AVFoundation.IAVSpeechSynthesizerDelegate This, class AVFoundation.AVSpeechSynthesizer synthesizer, class AVFoundation.AVSpeechUtterance utterance) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate" RefType="this" />
          <Parameter Name="synthesizer" Type="MonoTouch.AVFoundation.AVSpeechSynthesizer" />
          <Parameter Name="utterance" Type="MonoTouch.AVFoundation.AVSpeechUtterance" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="synthesizer">To be added.</param>
          <param name="utterance">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVSpeechSynthesizerDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVSpeechSynthesizerDelegate_Extensions.DidStartSpeechUtterance(MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate,MonoTouch.AVFoundation.AVSpeechSynthesizer,MonoTouch.AVFoundation.AVSpeechUtterance)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate" />
      </Targets>
      <Member MemberName="WillSpeakRangeOfSpeechString">
        <MemberSignature Language="C#" Value="public static void WillSpeakRangeOfSpeechString (this AVFoundation.IAVSpeechSynthesizerDelegate This, AVFoundation.AVSpeechSynthesizer synthesizer, Foundation.NSRange characterRange, AVFoundation.AVSpeechUtterance utterance);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillSpeakRangeOfSpeechString(class AVFoundation.IAVSpeechSynthesizerDelegate This, class AVFoundation.AVSpeechSynthesizer synthesizer, valuetype Foundation.NSRange characterRange, class AVFoundation.AVSpeechUtterance utterance) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate" RefType="this" />
          <Parameter Name="synthesizer" Type="MonoTouch.AVFoundation.AVSpeechSynthesizer" />
          <Parameter Name="characterRange" Type="MonoTouch.Foundation.NSRange" />
          <Parameter Name="utterance" Type="MonoTouch.AVFoundation.AVSpeechUtterance" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="synthesizer">To be added.</param>
          <param name="characterRange">To be added.</param>
          <param name="utterance">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVSpeechSynthesizerDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVSpeechSynthesizerDelegate_Extensions.WillSpeakRangeOfSpeechString(MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate,MonoTouch.AVFoundation.AVSpeechSynthesizer,MonoTouch.Foundation.NSRange,MonoTouch.AVFoundation.AVSpeechUtterance)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreGraphics.CGRect" />
      </Targets>
      <Member MemberName="WithAspectRatio">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGRect WithAspectRatio (this CoreGraphics.CGRect self, CoreGraphics.CGSize aspectRatio);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGRect WithAspectRatio(valuetype CoreGraphics.CGRect self, valuetype CoreGraphics.CGSize aspectRatio) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CoreGraphics.CGRect" />
          <Parameter Name="aspectRatio" Type="MonoTouch.CoreGraphics.CGSize" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <param name="aspectRatio">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVUtilities" Member="M:MonoTouch.AVFoundation.AVUtilities.WithAspectRatio(MonoTouch.CoreGraphics.CGRect,MonoTouch.CoreGraphics.CGSize)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.AVVideoApertureMode" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this AVFoundation.AVVideoApertureMode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype AVFoundation.AVVideoApertureMode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.AVFoundation.AVVideoApertureMode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>Returns the string constant for the enumeration value.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVVideoApertureModeExtensions" Member="M:MonoTouch.AVFoundation.AVVideoApertureModeExtensions.GetConstant(MonoTouch.AVFoundation.AVVideoApertureMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.AVVideoCodecType" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this AVFoundation.AVVideoCodecType self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype AVFoundation.AVVideoCodecType self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.AVFoundation.AVVideoCodecType" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>Returns the string constant for the enumeration value.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVVideoCodecTypeExtensions" Member="M:MonoTouch.AVFoundation.AVVideoCodecTypeExtensions.GetConstant(MonoTouch.AVFoundation.AVVideoCodecType)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVVideoCompositing" />
      </Targets>
      <Member MemberName="CancelAllPendingVideoCompositionRequests">
        <MemberSignature Language="C#" Value="public static void CancelAllPendingVideoCompositionRequests (this AVFoundation.IAVVideoCompositing This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CancelAllPendingVideoCompositionRequests(class AVFoundation.IAVVideoCompositing This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVVideoCompositing" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVVideoCompositing_Extensions" Member="M:MonoTouch.AVFoundation.AVVideoCompositing_Extensions.CancelAllPendingVideoCompositionRequests(MonoTouch.AVFoundation.IAVVideoCompositing)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVVideoCompositing" />
      </Targets>
      <Member MemberName="GetSupportsWideColorSourceFrames">
        <MemberSignature Language="C#" Value="public static bool GetSupportsWideColorSourceFrames (this AVFoundation.IAVVideoCompositing This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetSupportsWideColorSourceFrames(class AVFoundation.IAVVideoCompositing This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVVideoCompositing" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVVideoCompositing_Extensions" Member="M:MonoTouch.AVFoundation.AVVideoCompositing_Extensions.GetSupportsWideColorSourceFrames(MonoTouch.AVFoundation.IAVVideoCompositing)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVVideoCompositionValidationHandling" />
      </Targets>
      <Member MemberName="ShouldContinueValidatingAfterFindingEmptyTimeRange">
        <MemberSignature Language="C#" Value="public static bool ShouldContinueValidatingAfterFindingEmptyTimeRange (this AVFoundation.IAVVideoCompositionValidationHandling This, AVFoundation.AVVideoComposition videoComposition, CoreMedia.CMTimeRange timeRange);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldContinueValidatingAfterFindingEmptyTimeRange(class AVFoundation.IAVVideoCompositionValidationHandling This, class AVFoundation.AVVideoComposition videoComposition, valuetype CoreMedia.CMTimeRange timeRange) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVVideoCompositionValidationHandling" RefType="this" />
          <Parameter Name="videoComposition" Type="MonoTouch.AVFoundation.AVVideoComposition" />
          <Parameter Name="timeRange" Type="MonoTouch.CoreMedia.CMTimeRange" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="videoComposition">To be added.</param>
          <param name="timeRange">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVVideoCompositionValidationHandling_Extensions" Member="M:MonoTouch.AVFoundation.AVVideoCompositionValidationHandling_Extensions.ShouldContinueValidatingAfterFindingEmptyTimeRange(MonoTouch.AVFoundation.IAVVideoCompositionValidationHandling,MonoTouch.AVFoundation.AVVideoComposition,MonoTouch.CoreMedia.CMTimeRange)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVVideoCompositionValidationHandling" />
      </Targets>
      <Member MemberName="ShouldContinueValidatingAfterFindingInvalidTimeRangeInInstruction">
        <MemberSignature Language="C#" Value="public static bool ShouldContinueValidatingAfterFindingInvalidTimeRangeInInstruction (this AVFoundation.IAVVideoCompositionValidationHandling This, AVFoundation.AVVideoComposition videoComposition, AVFoundation.AVVideoCompositionInstruction videoCompositionInstruction);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldContinueValidatingAfterFindingInvalidTimeRangeInInstruction(class AVFoundation.IAVVideoCompositionValidationHandling This, class AVFoundation.AVVideoComposition videoComposition, class AVFoundation.AVVideoCompositionInstruction videoCompositionInstruction) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVVideoCompositionValidationHandling" RefType="this" />
          <Parameter Name="videoComposition" Type="MonoTouch.AVFoundation.AVVideoComposition" />
          <Parameter Name="videoCompositionInstruction" Type="MonoTouch.AVFoundation.AVVideoCompositionInstruction" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="videoComposition">To be added.</param>
          <param name="videoCompositionInstruction">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVVideoCompositionValidationHandling_Extensions" Member="M:MonoTouch.AVFoundation.AVVideoCompositionValidationHandling_Extensions.ShouldContinueValidatingAfterFindingInvalidTimeRangeInInstruction(MonoTouch.AVFoundation.IAVVideoCompositionValidationHandling,MonoTouch.AVFoundation.AVVideoComposition,MonoTouch.AVFoundation.AVVideoCompositionInstruction)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVVideoCompositionValidationHandling" />
      </Targets>
      <Member MemberName="ShouldContinueValidatingAfterFindingInvalidTrackIDInInstruction">
        <MemberSignature Language="C#" Value="public static bool ShouldContinueValidatingAfterFindingInvalidTrackIDInInstruction (this AVFoundation.IAVVideoCompositionValidationHandling This, AVFoundation.AVVideoComposition videoComposition, AVFoundation.AVVideoCompositionInstruction videoCompositionInstruction, AVFoundation.AVVideoCompositionLayerInstruction layerInstruction, AVFoundation.AVAsset asset);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldContinueValidatingAfterFindingInvalidTrackIDInInstruction(class AVFoundation.IAVVideoCompositionValidationHandling This, class AVFoundation.AVVideoComposition videoComposition, class AVFoundation.AVVideoCompositionInstruction videoCompositionInstruction, class AVFoundation.AVVideoCompositionLayerInstruction layerInstruction, class AVFoundation.AVAsset asset) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVVideoCompositionValidationHandling" RefType="this" />
          <Parameter Name="videoComposition" Type="MonoTouch.AVFoundation.AVVideoComposition" />
          <Parameter Name="videoCompositionInstruction" Type="MonoTouch.AVFoundation.AVVideoCompositionInstruction" />
          <Parameter Name="layerInstruction" Type="MonoTouch.AVFoundation.AVVideoCompositionLayerInstruction" />
          <Parameter Name="asset" Type="MonoTouch.AVFoundation.AVAsset" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="videoComposition">To be added.</param>
          <param name="videoCompositionInstruction">To be added.</param>
          <param name="layerInstruction">To be added.</param>
          <param name="asset">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVVideoCompositionValidationHandling_Extensions" Member="M:MonoTouch.AVFoundation.AVVideoCompositionValidationHandling_Extensions.ShouldContinueValidatingAfterFindingInvalidTrackIDInInstruction(MonoTouch.AVFoundation.IAVVideoCompositionValidationHandling,MonoTouch.AVFoundation.AVVideoComposition,MonoTouch.AVFoundation.AVVideoCompositionInstruction,MonoTouch.AVFoundation.AVVideoCompositionLayerInstruction,MonoTouch.AVFoundation.AVAsset)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVVideoCompositionValidationHandling" />
      </Targets>
      <Member MemberName="ShouldContinueValidatingAfterFindingInvalidValueForKey">
        <MemberSignature Language="C#" Value="public static bool ShouldContinueValidatingAfterFindingInvalidValueForKey (this AVFoundation.IAVVideoCompositionValidationHandling This, AVFoundation.AVVideoComposition videoComposition, string key);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldContinueValidatingAfterFindingInvalidValueForKey(class AVFoundation.IAVVideoCompositionValidationHandling This, class AVFoundation.AVVideoComposition videoComposition, string key) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVVideoCompositionValidationHandling" RefType="this" />
          <Parameter Name="videoComposition" Type="MonoTouch.AVFoundation.AVVideoComposition" />
          <Parameter Name="key" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="videoComposition">To be added.</param>
          <param name="key">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVVideoCompositionValidationHandling_Extensions" Member="M:MonoTouch.AVFoundation.AVVideoCompositionValidationHandling_Extensions.ShouldContinueValidatingAfterFindingInvalidValueForKey(MonoTouch.AVFoundation.IAVVideoCompositionValidationHandling,MonoTouch.AVFoundation.AVVideoComposition,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVKit.AVKitError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this AVKit.AVKitError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype AVKit.AVKitError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.AVKit.AVKitError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.AVKit.AVKitError value</summary>
        </Docs>
        <Link Type="MonoTouch.AVKit.AVKitErrorExtensions" Member="M:MonoTouch.AVKit.AVKitErrorExtensions.GetDomain(MonoTouch.AVKit.AVKitError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVKit.IAVPictureInPictureControllerDelegate" />
      </Targets>
      <Member MemberName="DidStartPictureInPicture">
        <MemberSignature Language="C#" Value="public static void DidStartPictureInPicture (this AVKit.IAVPictureInPictureControllerDelegate This, AVKit.AVPictureInPictureController pictureInPictureController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidStartPictureInPicture(class AVKit.IAVPictureInPictureControllerDelegate This, class AVKit.AVPictureInPictureController pictureInPictureController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVKit.IAVPictureInPictureControllerDelegate" RefType="this" />
          <Parameter Name="pictureInPictureController" Type="MonoTouch.AVKit.AVPictureInPictureController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pictureInPictureController">To be added.</param>
          <summary>Picture In Picture playback has started.</summary>
        </Docs>
        <Link Type="MonoTouch.AVKit.AVPictureInPictureControllerDelegate_Extensions" Member="M:MonoTouch.AVKit.AVPictureInPictureControllerDelegate_Extensions.DidStartPictureInPicture(MonoTouch.AVKit.IAVPictureInPictureControllerDelegate,MonoTouch.AVKit.AVPictureInPictureController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVKit.IAVPictureInPictureControllerDelegate" />
      </Targets>
      <Member MemberName="DidStopPictureInPicture">
        <MemberSignature Language="C#" Value="public static void DidStopPictureInPicture (this AVKit.IAVPictureInPictureControllerDelegate This, AVKit.AVPictureInPictureController pictureInPictureController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidStopPictureInPicture(class AVKit.IAVPictureInPictureControllerDelegate This, class AVKit.AVPictureInPictureController pictureInPictureController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVKit.IAVPictureInPictureControllerDelegate" RefType="this" />
          <Parameter Name="pictureInPictureController" Type="MonoTouch.AVKit.AVPictureInPictureController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pictureInPictureController">To be added.</param>
          <summary>Picture In Picture playback has stopped.</summary>
        </Docs>
        <Link Type="MonoTouch.AVKit.AVPictureInPictureControllerDelegate_Extensions" Member="M:MonoTouch.AVKit.AVPictureInPictureControllerDelegate_Extensions.DidStopPictureInPicture(MonoTouch.AVKit.IAVPictureInPictureControllerDelegate,MonoTouch.AVKit.AVPictureInPictureController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVKit.IAVPictureInPictureControllerDelegate" />
      </Targets>
      <Member MemberName="FailedToStartPictureInPicture">
        <MemberSignature Language="C#" Value="public static void FailedToStartPictureInPicture (this AVKit.IAVPictureInPictureControllerDelegate This, AVKit.AVPictureInPictureController pictureInPictureController, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FailedToStartPictureInPicture(class AVKit.IAVPictureInPictureControllerDelegate This, class AVKit.AVPictureInPictureController pictureInPictureController, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVKit.IAVPictureInPictureControllerDelegate" RefType="this" />
          <Parameter Name="pictureInPictureController" Type="MonoTouch.AVKit.AVPictureInPictureController" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pictureInPictureController">To be added.</param>
          <param name="error">To be added.</param>
          <summary>Picture In Picture playback failed to start.</summary>
        </Docs>
        <Link Type="MonoTouch.AVKit.AVPictureInPictureControllerDelegate_Extensions" Member="M:MonoTouch.AVKit.AVPictureInPictureControllerDelegate_Extensions.FailedToStartPictureInPicture(MonoTouch.AVKit.IAVPictureInPictureControllerDelegate,MonoTouch.AVKit.AVPictureInPictureController,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVKit.IAVPictureInPictureControllerDelegate" />
      </Targets>
      <Member MemberName="RestoreUserInterfaceForPictureInPicture">
        <MemberSignature Language="C#" Value="public static void RestoreUserInterfaceForPictureInPicture (this AVKit.IAVPictureInPictureControllerDelegate This, AVKit.AVPictureInPictureController pictureInPictureController, Action&lt;bool&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RestoreUserInterfaceForPictureInPicture(class AVKit.IAVPictureInPictureControllerDelegate This, class AVKit.AVPictureInPictureController pictureInPictureController, class System.Action`1&lt;bool&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVKit.IAVPictureInPictureControllerDelegate" RefType="this" />
          <Parameter Name="pictureInPictureController" Type="MonoTouch.AVKit.AVPictureInPictureController" />
          <Parameter Name="completionHandler" Type="System.Action&lt;System.Boolean&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V1))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pictureInPictureController">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>Picture In Picture playback is about to stop. Called to give the app the opportunity to provide a playback user interface by passing <see langword="true" /> to <paramref name="completionHandler" />.</summary>
        </Docs>
        <Link Type="MonoTouch.AVKit.AVPictureInPictureControllerDelegate_Extensions" Member="M:MonoTouch.AVKit.AVPictureInPictureControllerDelegate_Extensions.RestoreUserInterfaceForPictureInPicture(MonoTouch.AVKit.IAVPictureInPictureControllerDelegate,MonoTouch.AVKit.AVPictureInPictureController,System.Action{System.Boolean})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVKit.IAVPictureInPictureControllerDelegate" />
      </Targets>
      <Member MemberName="WillStartPictureInPicture">
        <MemberSignature Language="C#" Value="public static void WillStartPictureInPicture (this AVKit.IAVPictureInPictureControllerDelegate This, AVKit.AVPictureInPictureController pictureInPictureController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillStartPictureInPicture(class AVKit.IAVPictureInPictureControllerDelegate This, class AVKit.AVPictureInPictureController pictureInPictureController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVKit.IAVPictureInPictureControllerDelegate" RefType="this" />
          <Parameter Name="pictureInPictureController" Type="MonoTouch.AVKit.AVPictureInPictureController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pictureInPictureController">To be added.</param>
          <summary>Picture In Picture playback is about to start.</summary>
        </Docs>
        <Link Type="MonoTouch.AVKit.AVPictureInPictureControllerDelegate_Extensions" Member="M:MonoTouch.AVKit.AVPictureInPictureControllerDelegate_Extensions.WillStartPictureInPicture(MonoTouch.AVKit.IAVPictureInPictureControllerDelegate,MonoTouch.AVKit.AVPictureInPictureController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVKit.IAVPictureInPictureControllerDelegate" />
      </Targets>
      <Member MemberName="WillStopPictureInPicture">
        <MemberSignature Language="C#" Value="public static void WillStopPictureInPicture (this AVKit.IAVPictureInPictureControllerDelegate This, AVKit.AVPictureInPictureController pictureInPictureController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillStopPictureInPicture(class AVKit.IAVPictureInPictureControllerDelegate This, class AVKit.AVPictureInPictureController pictureInPictureController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVKit.IAVPictureInPictureControllerDelegate" RefType="this" />
          <Parameter Name="pictureInPictureController" Type="MonoTouch.AVKit.AVPictureInPictureController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pictureInPictureController">To be added.</param>
          <summary>Picture In Picture playback is about to stop.</summary>
        </Docs>
        <Link Type="MonoTouch.AVKit.AVPictureInPictureControllerDelegate_Extensions" Member="M:MonoTouch.AVKit.AVPictureInPictureControllerDelegate_Extensions.WillStopPictureInPicture(MonoTouch.AVKit.IAVPictureInPictureControllerDelegate,MonoTouch.AVKit.AVPictureInPictureController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVKit.IAVPlayerViewControllerDelegate" />
      </Targets>
      <Member MemberName="DidStartPictureInPicture">
        <MemberSignature Language="C#" Value="public static void DidStartPictureInPicture (this AVKit.IAVPlayerViewControllerDelegate This, AVKit.AVPlayerViewController playerViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidStartPictureInPicture(class AVKit.IAVPlayerViewControllerDelegate This, class AVKit.AVPlayerViewController playerViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVKit.IAVPlayerViewControllerDelegate" RefType="this" />
          <Parameter Name="playerViewController" Type="MonoTouch.AVKit.AVPlayerViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="playerViewController">To be added.</param>
          <summary>Picture In Picture playback has started.</summary>
        </Docs>
        <Link Type="MonoTouch.AVKit.AVPlayerViewControllerDelegate_Extensions" Member="M:MonoTouch.AVKit.AVPlayerViewControllerDelegate_Extensions.DidStartPictureInPicture(MonoTouch.AVKit.IAVPlayerViewControllerDelegate,MonoTouch.AVKit.AVPlayerViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVKit.IAVPlayerViewControllerDelegate" />
      </Targets>
      <Member MemberName="DidStopPictureInPicture">
        <MemberSignature Language="C#" Value="public static void DidStopPictureInPicture (this AVKit.IAVPlayerViewControllerDelegate This, AVKit.AVPlayerViewController playerViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidStopPictureInPicture(class AVKit.IAVPlayerViewControllerDelegate This, class AVKit.AVPlayerViewController playerViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVKit.IAVPlayerViewControllerDelegate" RefType="this" />
          <Parameter Name="playerViewController" Type="MonoTouch.AVKit.AVPlayerViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="playerViewController">To be added.</param>
          <summary>Picture In Picture playback has stopped.</summary>
        </Docs>
        <Link Type="MonoTouch.AVKit.AVPlayerViewControllerDelegate_Extensions" Member="M:MonoTouch.AVKit.AVPlayerViewControllerDelegate_Extensions.DidStopPictureInPicture(MonoTouch.AVKit.IAVPlayerViewControllerDelegate,MonoTouch.AVKit.AVPlayerViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVKit.IAVPlayerViewControllerDelegate" />
      </Targets>
      <Member MemberName="FailedToStartPictureInPicture">
        <MemberSignature Language="C#" Value="public static void FailedToStartPictureInPicture (this AVKit.IAVPlayerViewControllerDelegate This, AVKit.AVPlayerViewController playerViewController, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FailedToStartPictureInPicture(class AVKit.IAVPlayerViewControllerDelegate This, class AVKit.AVPlayerViewController playerViewController, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVKit.IAVPlayerViewControllerDelegate" RefType="this" />
          <Parameter Name="playerViewController" Type="MonoTouch.AVKit.AVPlayerViewController" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="playerViewController">To be added.</param>
          <param name="error">To be added.</param>
          <summary>Picture In Picture playback failed to start.</summary>
        </Docs>
        <Link Type="MonoTouch.AVKit.AVPlayerViewControllerDelegate_Extensions" Member="M:MonoTouch.AVKit.AVPlayerViewControllerDelegate_Extensions.FailedToStartPictureInPicture(MonoTouch.AVKit.IAVPlayerViewControllerDelegate,MonoTouch.AVKit.AVPlayerViewController,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVKit.IAVPlayerViewControllerDelegate" />
      </Targets>
      <Member MemberName="RestoreUserInterfaceForPictureInPicture">
        <MemberSignature Language="C#" Value="public static void RestoreUserInterfaceForPictureInPicture (this AVKit.IAVPlayerViewControllerDelegate This, AVKit.AVPlayerViewController playerViewController, Action&lt;bool&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RestoreUserInterfaceForPictureInPicture(class AVKit.IAVPlayerViewControllerDelegate This, class AVKit.AVPlayerViewController playerViewController, class System.Action`1&lt;bool&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVKit.IAVPlayerViewControllerDelegate" RefType="this" />
          <Parameter Name="playerViewController" Type="MonoTouch.AVKit.AVPlayerViewController" />
          <Parameter Name="completionHandler" Type="System.Action&lt;System.Boolean&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V1))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="playerViewController">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>Picture In Picture playback is about to stop. Called to give the app the opportunity to provide a playback user interface by passing <see langword="true" /> to <paramref name="completionHandler" />.</summary>
        </Docs>
        <Link Type="MonoTouch.AVKit.AVPlayerViewControllerDelegate_Extensions" Member="M:MonoTouch.AVKit.AVPlayerViewControllerDelegate_Extensions.RestoreUserInterfaceForPictureInPicture(MonoTouch.AVKit.IAVPlayerViewControllerDelegate,MonoTouch.AVKit.AVPlayerViewController,System.Action{System.Boolean})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVKit.IAVPlayerViewControllerDelegate" />
      </Targets>
      <Member MemberName="ShouldAutomaticallyDismissAtPictureInPictureStart">
        <MemberSignature Language="C#" Value="public static bool ShouldAutomaticallyDismissAtPictureInPictureStart (this AVKit.IAVPlayerViewControllerDelegate This, AVKit.AVPlayerViewController playerViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldAutomaticallyDismissAtPictureInPictureStart(class AVKit.IAVPlayerViewControllerDelegate This, class AVKit.AVPlayerViewController playerViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVKit.IAVPlayerViewControllerDelegate" RefType="this" />
          <Parameter Name="playerViewController" Type="MonoTouch.AVKit.AVPlayerViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="playerViewController">To be added.</param>
          <summary>App developers should return <see langword="true" /> to indicate that the player viewer should dismiss when Picture In Picture playback starts, or <see langword="false" /> to prevent this.</summary>
        </Docs>
        <Link Type="MonoTouch.AVKit.AVPlayerViewControllerDelegate_Extensions" Member="M:MonoTouch.AVKit.AVPlayerViewControllerDelegate_Extensions.ShouldAutomaticallyDismissAtPictureInPictureStart(MonoTouch.AVKit.IAVPlayerViewControllerDelegate,MonoTouch.AVKit.AVPlayerViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVKit.IAVPlayerViewControllerDelegate" />
      </Targets>
      <Member MemberName="WillStartPictureInPicture">
        <MemberSignature Language="C#" Value="public static void WillStartPictureInPicture (this AVKit.IAVPlayerViewControllerDelegate This, AVKit.AVPlayerViewController playerViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillStartPictureInPicture(class AVKit.IAVPlayerViewControllerDelegate This, class AVKit.AVPlayerViewController playerViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVKit.IAVPlayerViewControllerDelegate" RefType="this" />
          <Parameter Name="playerViewController" Type="MonoTouch.AVKit.AVPlayerViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="playerViewController">To be added.</param>
          <summary>Picture In Picture playback is about to start.</summary>
        </Docs>
        <Link Type="MonoTouch.AVKit.AVPlayerViewControllerDelegate_Extensions" Member="M:MonoTouch.AVKit.AVPlayerViewControllerDelegate_Extensions.WillStartPictureInPicture(MonoTouch.AVKit.IAVPlayerViewControllerDelegate,MonoTouch.AVKit.AVPlayerViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVKit.IAVPlayerViewControllerDelegate" />
      </Targets>
      <Member MemberName="WillStopPictureInPicture">
        <MemberSignature Language="C#" Value="public static void WillStopPictureInPicture (this AVKit.IAVPlayerViewControllerDelegate This, AVKit.AVPlayerViewController playerViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillStopPictureInPicture(class AVKit.IAVPlayerViewControllerDelegate This, class AVKit.AVPlayerViewController playerViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVKit.IAVPlayerViewControllerDelegate" RefType="this" />
          <Parameter Name="playerViewController" Type="MonoTouch.AVKit.AVPlayerViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="playerViewController">To be added.</param>
          <summary>Picture In Picture playback is about to stop.</summary>
        </Docs>
        <Link Type="MonoTouch.AVKit.AVPlayerViewControllerDelegate_Extensions" Member="M:MonoTouch.AVKit.AVPlayerViewControllerDelegate_Extensions.WillStopPictureInPicture(MonoTouch.AVKit.IAVPlayerViewControllerDelegate,MonoTouch.AVKit.AVPlayerViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVKit.IAVRoutePickerViewDelegate" />
      </Targets>
      <Member MemberName="DidEndPresentingRoutes">
        <MemberSignature Language="C#" Value="public static void DidEndPresentingRoutes (this AVKit.IAVRoutePickerViewDelegate This, AVKit.AVRoutePickerView routePickerView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidEndPresentingRoutes(class AVKit.IAVRoutePickerViewDelegate This, class AVKit.AVRoutePickerView routePickerView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVKit.IAVRoutePickerViewDelegate" RefType="this" />
          <Parameter Name="routePickerView" Type="MonoTouch.AVKit.AVRoutePickerView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="routePickerView">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVKit.AVRoutePickerViewDelegate_Extensions" Member="M:MonoTouch.AVKit.AVRoutePickerViewDelegate_Extensions.DidEndPresentingRoutes(MonoTouch.AVKit.IAVRoutePickerViewDelegate,MonoTouch.AVKit.AVRoutePickerView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVKit.IAVRoutePickerViewDelegate" />
      </Targets>
      <Member MemberName="WillBeginPresentingRoutes">
        <MemberSignature Language="C#" Value="public static void WillBeginPresentingRoutes (this AVKit.IAVRoutePickerViewDelegate This, AVKit.AVRoutePickerView routePickerView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillBeginPresentingRoutes(class AVKit.IAVRoutePickerViewDelegate This, class AVKit.AVRoutePickerView routePickerView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVKit.IAVRoutePickerViewDelegate" RefType="this" />
          <Parameter Name="routePickerView" Type="MonoTouch.AVKit.AVRoutePickerView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="routePickerView">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVKit.AVRoutePickerViewDelegate_Extensions" Member="M:MonoTouch.AVKit.AVRoutePickerViewDelegate_Extensions.WillBeginPresentingRoutes(MonoTouch.AVKit.IAVRoutePickerViewDelegate,MonoTouch.AVKit.AVRoutePickerView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CallKit.CXErrorCodeCallDirectoryManagerError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this CallKit.CXErrorCodeCallDirectoryManagerError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype CallKit.CXErrorCodeCallDirectoryManagerError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CallKit.CXErrorCodeCallDirectoryManagerError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The error on which this method operates.</param>
          <summary>Returns the error domain for the error.</summary>
        </Docs>
        <Link Type="MonoTouch.CallKit.CXErrorCodeCallDirectoryManagerErrorExtensions" Member="M:MonoTouch.CallKit.CXErrorCodeCallDirectoryManagerErrorExtensions.GetDomain(MonoTouch.CallKit.CXErrorCodeCallDirectoryManagerError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CallKit.CXErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this CallKit.CXErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype CallKit.CXErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CallKit.CXErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The error on which this method operates.</param>
          <summary>Returns the error domain for the error.</summary>
        </Docs>
        <Link Type="MonoTouch.CallKit.CXErrorCodeExtensions" Member="M:MonoTouch.CallKit.CXErrorCodeExtensions.GetDomain(MonoTouch.CallKit.CXErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CallKit.CXErrorCodeIncomingCallError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this CallKit.CXErrorCodeIncomingCallError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype CallKit.CXErrorCodeIncomingCallError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CallKit.CXErrorCodeIncomingCallError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The error on which this method operates.</param>
          <summary>Returns the error domain for the error.</summary>
        </Docs>
        <Link Type="MonoTouch.CallKit.CXErrorCodeIncomingCallErrorExtensions" Member="M:MonoTouch.CallKit.CXErrorCodeIncomingCallErrorExtensions.GetDomain(MonoTouch.CallKit.CXErrorCodeIncomingCallError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CallKit.CXErrorCodeRequestTransactionError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this CallKit.CXErrorCodeRequestTransactionError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype CallKit.CXErrorCodeRequestTransactionError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CallKit.CXErrorCodeRequestTransactionError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The error on which this method operates.</param>
          <summary>Returns the error domain for the error.</summary>
        </Docs>
        <Link Type="MonoTouch.CallKit.CXErrorCodeRequestTransactionErrorExtensions" Member="M:MonoTouch.CallKit.CXErrorCodeRequestTransactionErrorExtensions.GetDomain(MonoTouch.CallKit.CXErrorCodeRequestTransactionError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CallKit.ICXProviderDelegate" />
      </Targets>
      <Member MemberName="DidActivateAudioSession">
        <MemberSignature Language="C#" Value="public static void DidActivateAudioSession (this CallKit.ICXProviderDelegate This, CallKit.CXProvider provider, AVFoundation.AVAudioSession audioSession);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidActivateAudioSession(class CallKit.ICXProviderDelegate This, class CallKit.CXProvider provider, class AVFoundation.AVAudioSession audioSession) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CallKit.ICXProviderDelegate" RefType="this" />
          <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
          <Parameter Name="audioSession" Type="MonoTouch.AVFoundation.AVAudioSession" />
        </Parameters>
        <Docs>
          <param name="This">The provider delegate on which this method operates.</param>
          <param name="provider">The provider to which the <paramref name="This" /> provider delegate belongs.</param>
          <param name="audioSession">To be added.</param>
          <summary>The system activated a telephony-priority audio session for the call.</summary>
        </Docs>
        <Link Type="MonoTouch.CallKit.CXProviderDelegate_Extensions" Member="M:MonoTouch.CallKit.CXProviderDelegate_Extensions.DidActivateAudioSession(MonoTouch.CallKit.ICXProviderDelegate,MonoTouch.CallKit.CXProvider,MonoTouch.AVFoundation.AVAudioSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CallKit.ICXProviderDelegate" />
      </Targets>
      <Member MemberName="DidBegin">
        <MemberSignature Language="C#" Value="public static void DidBegin (this CallKit.ICXProviderDelegate This, CallKit.CXProvider provider);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidBegin(class CallKit.ICXProviderDelegate This, class CallKit.CXProvider provider) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CallKit.ICXProviderDelegate" RefType="this" />
          <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
        </Parameters>
        <Docs>
          <param name="This">The provider delegate on which this method operates.</param>
          <param name="provider">The provider to which the <paramref name="This" /> provider delegate belongs.</param>
          <summary>The system began a call for the app.</summary>
        </Docs>
        <Link Type="MonoTouch.CallKit.CXProviderDelegate_Extensions" Member="M:MonoTouch.CallKit.CXProviderDelegate_Extensions.DidBegin(MonoTouch.CallKit.ICXProviderDelegate,MonoTouch.CallKit.CXProvider)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CallKit.ICXProviderDelegate" />
      </Targets>
      <Member MemberName="DidDeactivateAudioSession">
        <MemberSignature Language="C#" Value="public static void DidDeactivateAudioSession (this CallKit.ICXProviderDelegate This, CallKit.CXProvider provider, AVFoundation.AVAudioSession audioSession);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDeactivateAudioSession(class CallKit.ICXProviderDelegate This, class CallKit.CXProvider provider, class AVFoundation.AVAudioSession audioSession) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CallKit.ICXProviderDelegate" RefType="this" />
          <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
          <Parameter Name="audioSession" Type="MonoTouch.AVFoundation.AVAudioSession" />
        </Parameters>
        <Docs>
          <param name="This">The provider delegate on which this method operates.</param>
          <param name="provider">The provider to which the <paramref name="This" /> provider delegate belongs.</param>
          <param name="audioSession">The audio session that was deactivated.</param>
          <summary>The system deactivated an audio session that the app had been using for a call.</summary>
        </Docs>
        <Link Type="MonoTouch.CallKit.CXProviderDelegate_Extensions" Member="M:MonoTouch.CallKit.CXProviderDelegate_Extensions.DidDeactivateAudioSession(MonoTouch.CallKit.ICXProviderDelegate,MonoTouch.CallKit.CXProvider,MonoTouch.AVFoundation.AVAudioSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CallKit.ICXProviderDelegate" />
      </Targets>
      <Member MemberName="ExecuteTransaction">
        <MemberSignature Language="C#" Value="public static bool ExecuteTransaction (this CallKit.ICXProviderDelegate This, CallKit.CXProvider provider, CallKit.CXTransaction transaction);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ExecuteTransaction(class CallKit.ICXProviderDelegate This, class CallKit.CXProvider provider, class CallKit.CXTransaction transaction) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CallKit.ICXProviderDelegate" RefType="this" />
          <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
          <Parameter Name="transaction" Type="MonoTouch.CallKit.CXTransaction" />
        </Parameters>
        <Docs>
          <param name="This">The provider delegate on which this method operates.</param>
          <param name="provider">The provider to which the <paramref name="This" /> provider delegate belongs.</param>
          <param name="transaction">The transaction to run.</param>
          <summary>Atomically runs the actions that are contained in the <paramref name="transaction" />.</summary>
        </Docs>
        <Link Type="MonoTouch.CallKit.CXProviderDelegate_Extensions" Member="M:MonoTouch.CallKit.CXProviderDelegate_Extensions.ExecuteTransaction(MonoTouch.CallKit.ICXProviderDelegate,MonoTouch.CallKit.CXProvider,MonoTouch.CallKit.CXTransaction)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CallKit.ICXProviderDelegate" />
      </Targets>
      <Member MemberName="PerformAnswerCallAction">
        <MemberSignature Language="C#" Value="public static void PerformAnswerCallAction (this CallKit.ICXProviderDelegate This, CallKit.CXProvider provider, CallKit.CXAnswerCallAction action);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformAnswerCallAction(class CallKit.ICXProviderDelegate This, class CallKit.CXProvider provider, class CallKit.CXAnswerCallAction action) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CallKit.ICXProviderDelegate" RefType="this" />
          <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
          <Parameter Name="action" Type="MonoTouch.CallKit.CXAnswerCallAction" />
        </Parameters>
        <Docs>
          <param name="This">The provider delegate on which this method operates.</param>
          <param name="provider">The provider to which the <paramref name="This" /> provider delegate belongs.</param>
          <param name="action">The answer call action to perform.</param>
          <summary>Performs an answer call action.</summary>
        </Docs>
        <Link Type="MonoTouch.CallKit.CXProviderDelegate_Extensions" Member="M:MonoTouch.CallKit.CXProviderDelegate_Extensions.PerformAnswerCallAction(MonoTouch.CallKit.ICXProviderDelegate,MonoTouch.CallKit.CXProvider,MonoTouch.CallKit.CXAnswerCallAction)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CallKit.ICXProviderDelegate" />
      </Targets>
      <Member MemberName="PerformEndCallAction">
        <MemberSignature Language="C#" Value="public static void PerformEndCallAction (this CallKit.ICXProviderDelegate This, CallKit.CXProvider provider, CallKit.CXEndCallAction action);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformEndCallAction(class CallKit.ICXProviderDelegate This, class CallKit.CXProvider provider, class CallKit.CXEndCallAction action) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CallKit.ICXProviderDelegate" RefType="this" />
          <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
          <Parameter Name="action" Type="MonoTouch.CallKit.CXEndCallAction" />
        </Parameters>
        <Docs>
          <param name="This">The provider delegate on which this method operates.</param>
          <param name="provider">The provider to which the <paramref name="This" /> provider delegate belongs.</param>
          <param name="action">The end call action to perform.</param>
          <summary>Performs an end call action.</summary>
        </Docs>
        <Link Type="MonoTouch.CallKit.CXProviderDelegate_Extensions" Member="M:MonoTouch.CallKit.CXProviderDelegate_Extensions.PerformEndCallAction(MonoTouch.CallKit.ICXProviderDelegate,MonoTouch.CallKit.CXProvider,MonoTouch.CallKit.CXEndCallAction)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CallKit.ICXProviderDelegate" />
      </Targets>
      <Member MemberName="PerformPlayDtmfCallAction">
        <MemberSignature Language="C#" Value="public static void PerformPlayDtmfCallAction (this CallKit.ICXProviderDelegate This, CallKit.CXProvider provider, CallKit.CXPlayDtmfCallAction action);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformPlayDtmfCallAction(class CallKit.ICXProviderDelegate This, class CallKit.CXProvider provider, class CallKit.CXPlayDtmfCallAction action) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CallKit.ICXProviderDelegate" RefType="this" />
          <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
          <Parameter Name="action" Type="MonoTouch.CallKit.CXPlayDtmfCallAction" />
        </Parameters>
        <Docs>
          <param name="This">The provider delegate on which this method operates.</param>
          <param name="provider">The provider to which the <paramref name="This" /> provider delegate belongs.</param>
          <param name="action">The DTMF play call action to perform.</param>
          <summary>Performs a DTMF play call action.</summary>
        </Docs>
        <Link Type="MonoTouch.CallKit.CXProviderDelegate_Extensions" Member="M:MonoTouch.CallKit.CXProviderDelegate_Extensions.PerformPlayDtmfCallAction(MonoTouch.CallKit.ICXProviderDelegate,MonoTouch.CallKit.CXProvider,MonoTouch.CallKit.CXPlayDtmfCallAction)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CallKit.ICXProviderDelegate" />
      </Targets>
      <Member MemberName="PerformSetGroupCallAction">
        <MemberSignature Language="C#" Value="public static void PerformSetGroupCallAction (this CallKit.ICXProviderDelegate This, CallKit.CXProvider provider, CallKit.CXSetGroupCallAction action);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformSetGroupCallAction(class CallKit.ICXProviderDelegate This, class CallKit.CXProvider provider, class CallKit.CXSetGroupCallAction action) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CallKit.ICXProviderDelegate" RefType="this" />
          <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
          <Parameter Name="action" Type="MonoTouch.CallKit.CXSetGroupCallAction" />
        </Parameters>
        <Docs>
          <param name="This">The provider delegate on which this method operates.</param>
          <param name="provider">The provider to which the <paramref name="This" /> provider delegate belongs.</param>
          <param name="action">The set group call action to perform.</param>
          <summary>Performs a set group call action.</summary>
        </Docs>
        <Link Type="MonoTouch.CallKit.CXProviderDelegate_Extensions" Member="M:MonoTouch.CallKit.CXProviderDelegate_Extensions.PerformSetGroupCallAction(MonoTouch.CallKit.ICXProviderDelegate,MonoTouch.CallKit.CXProvider,MonoTouch.CallKit.CXSetGroupCallAction)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CallKit.ICXProviderDelegate" />
      </Targets>
      <Member MemberName="PerformSetHeldCallAction">
        <MemberSignature Language="C#" Value="public static void PerformSetHeldCallAction (this CallKit.ICXProviderDelegate This, CallKit.CXProvider provider, CallKit.CXSetHeldCallAction action);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformSetHeldCallAction(class CallKit.ICXProviderDelegate This, class CallKit.CXProvider provider, class CallKit.CXSetHeldCallAction action) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CallKit.ICXProviderDelegate" RefType="this" />
          <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
          <Parameter Name="action" Type="MonoTouch.CallKit.CXSetHeldCallAction" />
        </Parameters>
        <Docs>
          <param name="This">The provider delegate on which this method operates.</param>
          <param name="provider">The provider to which the <paramref name="This" /> provider delegate belongs.</param>
          <param name="action">The hold call action to perform.</param>
          <summary>Performs a hold call action.</summary>
        </Docs>
        <Link Type="MonoTouch.CallKit.CXProviderDelegate_Extensions" Member="M:MonoTouch.CallKit.CXProviderDelegate_Extensions.PerformSetHeldCallAction(MonoTouch.CallKit.ICXProviderDelegate,MonoTouch.CallKit.CXProvider,MonoTouch.CallKit.CXSetHeldCallAction)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CallKit.ICXProviderDelegate" />
      </Targets>
      <Member MemberName="PerformSetMutedCallAction">
        <MemberSignature Language="C#" Value="public static void PerformSetMutedCallAction (this CallKit.ICXProviderDelegate This, CallKit.CXProvider provider, CallKit.CXSetMutedCallAction action);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformSetMutedCallAction(class CallKit.ICXProviderDelegate This, class CallKit.CXProvider provider, class CallKit.CXSetMutedCallAction action) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CallKit.ICXProviderDelegate" RefType="this" />
          <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
          <Parameter Name="action" Type="MonoTouch.CallKit.CXSetMutedCallAction" />
        </Parameters>
        <Docs>
          <param name="This">The provider delegate on which this method operates.</param>
          <param name="provider">The provider to which the <paramref name="This" /> provider delegate belongs.</param>
          <param name="action">The set muted call action to perform.</param>
          <summary>Performs a set muted call action.</summary>
        </Docs>
        <Link Type="MonoTouch.CallKit.CXProviderDelegate_Extensions" Member="M:MonoTouch.CallKit.CXProviderDelegate_Extensions.PerformSetMutedCallAction(MonoTouch.CallKit.ICXProviderDelegate,MonoTouch.CallKit.CXProvider,MonoTouch.CallKit.CXSetMutedCallAction)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CallKit.ICXProviderDelegate" />
      </Targets>
      <Member MemberName="PerformStartCallAction">
        <MemberSignature Language="C#" Value="public static void PerformStartCallAction (this CallKit.ICXProviderDelegate This, CallKit.CXProvider provider, CallKit.CXStartCallAction action);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformStartCallAction(class CallKit.ICXProviderDelegate This, class CallKit.CXProvider provider, class CallKit.CXStartCallAction action) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CallKit.ICXProviderDelegate" RefType="this" />
          <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
          <Parameter Name="action" Type="MonoTouch.CallKit.CXStartCallAction" />
        </Parameters>
        <Docs>
          <param name="This">The provider delegate on which this method operates.</param>
          <param name="provider">The provider to which the <paramref name="This" /> provider delegate belongs.</param>
          <param name="action">The start call action to perform.</param>
          <summary>Performs a start call action.</summary>
        </Docs>
        <Link Type="MonoTouch.CallKit.CXProviderDelegate_Extensions" Member="M:MonoTouch.CallKit.CXProviderDelegate_Extensions.PerformStartCallAction(MonoTouch.CallKit.ICXProviderDelegate,MonoTouch.CallKit.CXProvider,MonoTouch.CallKit.CXStartCallAction)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CallKit.ICXProviderDelegate" />
      </Targets>
      <Member MemberName="TimedOutPerformingAction">
        <MemberSignature Language="C#" Value="public static void TimedOutPerformingAction (this CallKit.ICXProviderDelegate This, CallKit.CXProvider provider, CallKit.CXAction action);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TimedOutPerformingAction(class CallKit.ICXProviderDelegate This, class CallKit.CXProvider provider, class CallKit.CXAction action) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CallKit.ICXProviderDelegate" RefType="this" />
          <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
          <Parameter Name="action" Type="MonoTouch.CallKit.CXAction" />
        </Parameters>
        <Docs>
          <param name="This">The provider delegate on which this method operates.</param>
          <param name="provider">The provider to which the <paramref name="This" /> provider delegate belongs.</param>
          <param name="action">The action that timed out.</param>
          <summary>Method that is called when a timeout is hit before an action is finished performing.</summary>
        </Docs>
        <Link Type="MonoTouch.CallKit.CXProviderDelegate_Extensions" Member="M:MonoTouch.CallKit.CXProviderDelegate_Extensions.TimedOutPerformingAction(MonoTouch.CallKit.ICXProviderDelegate,MonoTouch.CallKit.CXProvider,MonoTouch.CallKit.CXAction)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CloudKit.CKErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this CloudKit.CKErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype CloudKit.CKErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CloudKit.CKErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.CloudKit.CKErrorCode value</summary>
        </Docs>
        <Link Type="MonoTouch.CloudKit.CKErrorCodeExtensions" Member="M:MonoTouch.CloudKit.CKErrorCodeExtensions.GetDomain(MonoTouch.CloudKit.CKErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Contacts.CNContainer" />
      </Targets>
      <Member MemberName="GetPredicateForContainerOfContact">
        <MemberSignature Language="C#" Value="public static Foundation.NSPredicate GetPredicateForContainerOfContact (this Contacts.CNContainer This, string contactIdentifier);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSPredicate GetPredicateForContainerOfContact(class Contacts.CNContainer This, string contactIdentifier) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSPredicate</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Contacts.CNContainer" RefType="this" />
          <Parameter Name="contactIdentifier" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="contactIdentifier">To be added.</param>
          <summary>Retrieves an <see cref="T:Foundation.NSPredicate" /> appropriate for retrieving the <see cref="T:Contacts.CNContainer" /> containing the <see cref="T:Contacts.CNContact" /> with the identifier <paramref name="contactIdentifier" />.</summary>
        </Docs>
        <Link Type="MonoTouch.Contacts.CNContainer_PredicatesExtension" Member="M:MonoTouch.Contacts.CNContainer_PredicatesExtension.GetPredicateForContainerOfContact(MonoTouch.Contacts.CNContainer,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Contacts.CNContainer" />
      </Targets>
      <Member MemberName="GetPredicateForContainerOfGroup">
        <MemberSignature Language="C#" Value="public static Foundation.NSPredicate GetPredicateForContainerOfGroup (this Contacts.CNContainer This, string groupIdentifier);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSPredicate GetPredicateForContainerOfGroup(class Contacts.CNContainer This, string groupIdentifier) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSPredicate</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Contacts.CNContainer" RefType="this" />
          <Parameter Name="groupIdentifier" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="groupIdentifier">To be added.</param>
          <summary>Retrieves an <see cref="T:Foundation.NSPredicate" /> appropriate for retrieving the <see cref="T:Contacts.CNContainer" /> containing the <see cref="T:Contacts.CNGroup" /> with the identifier <paramref name="groupIdentifier" />.</summary>
        </Docs>
        <Link Type="MonoTouch.Contacts.CNContainer_PredicatesExtension" Member="M:MonoTouch.Contacts.CNContainer_PredicatesExtension.GetPredicateForContainerOfGroup(MonoTouch.Contacts.CNContainer,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Contacts.CNContainer" />
      </Targets>
      <Member MemberName="GetPredicateForContainers">
        <MemberSignature Language="C#" Value="public static Foundation.NSPredicate GetPredicateForContainers (this Contacts.CNContainer This, string[] identifiers);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSPredicate GetPredicateForContainers(class Contacts.CNContainer This, string[] identifiers) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSPredicate</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Contacts.CNContainer" RefType="this" />
          <Parameter Name="identifiers" Type="System.String[]" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="identifiers">To be added.</param>
          <summary>Retrieves an <see cref="T:Foundation.NSPredicate" /> appropriate for retrieving the <see cref="T:Contacts.CNContainer" /> objects with the identifiers specified by <paramref name="identifiers" />.</summary>
        </Docs>
        <Link Type="MonoTouch.Contacts.CNContainer_PredicatesExtension" Member="M:MonoTouch.Contacts.CNContainer_PredicatesExtension.GetPredicateForContainers(MonoTouch.Contacts.CNContainer,System.String[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Contacts.CNErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this Contacts.CNErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype Contacts.CNErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.Contacts.CNErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>Extension method for <see cref="T:Contacts.CNErrroCode" /> that retrieves the domain of the error.</summary>
        </Docs>
        <Link Type="MonoTouch.Contacts.CNErrorCodeExtensions" Member="M:MonoTouch.Contacts.CNErrorCodeExtensions.GetDomain(MonoTouch.Contacts.CNErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Contacts.CNGroup" />
      </Targets>
      <Member MemberName="GetPredicateForGroups">
        <MemberSignature Language="C#" Value="public static Foundation.NSPredicate GetPredicateForGroups (this Contacts.CNGroup This, string[] identifiers);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSPredicate GetPredicateForGroups(class Contacts.CNGroup This, string[] identifiers) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSPredicate</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Contacts.CNGroup" RefType="this" />
          <Parameter Name="identifiers" Type="System.String[]" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="identifiers">To be added.</param>
          <summary>A <see cref="T:Foundation.NSPredicate" /> that will retrieve the <see cref="T:Contacts.CNGroup" /> objects whose <see cref="P:Contacts.CNGroup.Identifier" /> properties match <paramref name="identifiers" />.</summary>
        </Docs>
        <Link Type="MonoTouch.Contacts.CNGroup_PredicatesExtension" Member="M:MonoTouch.Contacts.CNGroup_PredicatesExtension.GetPredicateForGroups(MonoTouch.Contacts.CNGroup,System.String[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Contacts.CNGroup" />
      </Targets>
      <Member MemberName="GetPredicateForGroupsInContainer">
        <MemberSignature Language="C#" Value="public static Foundation.NSPredicate GetPredicateForGroupsInContainer (this Contacts.CNGroup This, string containerIdentifier);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSPredicate GetPredicateForGroupsInContainer(class Contacts.CNGroup This, string containerIdentifier) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSPredicate</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Contacts.CNGroup" RefType="this" />
          <Parameter Name="containerIdentifier" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="containerIdentifier">To be added.</param>
          <summary>A <see cref="T:Foundation.NSPredicate" /> that will retrieve the <see cref="T:Contacts.CNGroup" /> objects in the <see cref="T:Contacts.CNContainer" /> whose <see cref="P:Contacts.CNContainer.Identifier" /> property matches <paramref name="containerIdentifier" />.</summary>
        </Docs>
        <Link Type="MonoTouch.Contacts.CNGroup_PredicatesExtension" Member="M:MonoTouch.Contacts.CNGroup_PredicatesExtension.GetPredicateForGroupsInContainer(MonoTouch.Contacts.CNGroup,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Contacts.CNPostalAddressKeyOption" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this Contacts.CNPostalAddressKeyOption self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype Contacts.CNPostalAddressKeyOption self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.Contacts.CNPostalAddressKeyOption" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Contacts.CNPostalAddressKeyOptionExtensions" Member="M:MonoTouch.Contacts.CNPostalAddressKeyOptionExtensions.GetConstant(MonoTouch.Contacts.CNPostalAddressKeyOption)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ContactsUI.ICNContactPickerDelegate" />
      </Targets>
      <Member MemberName="ContactPickerDidCancel">
        <MemberSignature Language="C#" Value="public static void ContactPickerDidCancel (this ContactsUI.ICNContactPickerDelegate This, ContactsUI.CNContactPickerViewController picker);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ContactPickerDidCancel(class ContactsUI.ICNContactPickerDelegate This, class ContactsUI.CNContactPickerViewController picker) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ContactsUI.ICNContactPickerDelegate" RefType="this" />
          <Parameter Name="picker" Type="MonoTouch.ContactsUI.CNContactPickerViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="picker">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ContactsUI.CNContactPickerDelegate_Extensions" Member="M:MonoTouch.ContactsUI.CNContactPickerDelegate_Extensions.ContactPickerDidCancel(MonoTouch.ContactsUI.ICNContactPickerDelegate,MonoTouch.ContactsUI.CNContactPickerViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ContactsUI.ICNContactPickerDelegate" />
      </Targets>
      <Member MemberName="DidSelectContact">
        <MemberSignature Language="C#" Value="public static void DidSelectContact (this ContactsUI.ICNContactPickerDelegate This, ContactsUI.CNContactPickerViewController picker, Contacts.CNContact contact);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSelectContact(class ContactsUI.ICNContactPickerDelegate This, class ContactsUI.CNContactPickerViewController picker, class Contacts.CNContact contact) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ContactsUI.ICNContactPickerDelegate" RefType="this" />
          <Parameter Name="picker" Type="MonoTouch.ContactsUI.CNContactPickerViewController" />
          <Parameter Name="contact" Type="MonoTouch.Contacts.CNContact" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="picker">To be added.</param>
          <param name="contact">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ContactsUI.CNContactPickerDelegate_Extensions" Member="M:MonoTouch.ContactsUI.CNContactPickerDelegate_Extensions.DidSelectContact(MonoTouch.ContactsUI.ICNContactPickerDelegate,MonoTouch.ContactsUI.CNContactPickerViewController,MonoTouch.Contacts.CNContact)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ContactsUI.ICNContactPickerDelegate" />
      </Targets>
      <Member MemberName="DidSelectContactProperties">
        <MemberSignature Language="C#" Value="public static void DidSelectContactProperties (this ContactsUI.ICNContactPickerDelegate This, ContactsUI.CNContactPickerViewController picker, Contacts.CNContactProperty[] contactProperties);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSelectContactProperties(class ContactsUI.ICNContactPickerDelegate This, class ContactsUI.CNContactPickerViewController picker, class Contacts.CNContactProperty[] contactProperties) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ContactsUI.ICNContactPickerDelegate" RefType="this" />
          <Parameter Name="picker" Type="MonoTouch.ContactsUI.CNContactPickerViewController" />
          <Parameter Name="contactProperties" Type="MonoTouch.Contacts.CNContactProperty[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="picker">To be added.</param>
          <param name="contactProperties">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ContactsUI.CNContactPickerDelegate_Extensions" Member="M:MonoTouch.ContactsUI.CNContactPickerDelegate_Extensions.DidSelectContactProperties(MonoTouch.ContactsUI.ICNContactPickerDelegate,MonoTouch.ContactsUI.CNContactPickerViewController,MonoTouch.Contacts.CNContactProperty[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ContactsUI.ICNContactPickerDelegate" />
      </Targets>
      <Member MemberName="DidSelectContactProperty">
        <MemberSignature Language="C#" Value="public static void DidSelectContactProperty (this ContactsUI.ICNContactPickerDelegate This, ContactsUI.CNContactPickerViewController picker, Contacts.CNContactProperty contactProperty);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSelectContactProperty(class ContactsUI.ICNContactPickerDelegate This, class ContactsUI.CNContactPickerViewController picker, class Contacts.CNContactProperty contactProperty) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ContactsUI.ICNContactPickerDelegate" RefType="this" />
          <Parameter Name="picker" Type="MonoTouch.ContactsUI.CNContactPickerViewController" />
          <Parameter Name="contactProperty" Type="MonoTouch.Contacts.CNContactProperty" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="picker">To be added.</param>
          <param name="contactProperty">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ContactsUI.CNContactPickerDelegate_Extensions" Member="M:MonoTouch.ContactsUI.CNContactPickerDelegate_Extensions.DidSelectContactProperty(MonoTouch.ContactsUI.ICNContactPickerDelegate,MonoTouch.ContactsUI.CNContactPickerViewController,MonoTouch.Contacts.CNContactProperty)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ContactsUI.ICNContactPickerDelegate" />
      </Targets>
      <Member MemberName="DidSelectContacts">
        <MemberSignature Language="C#" Value="public static void DidSelectContacts (this ContactsUI.ICNContactPickerDelegate This, ContactsUI.CNContactPickerViewController picker, Contacts.CNContact[] contacts);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSelectContacts(class ContactsUI.ICNContactPickerDelegate This, class ContactsUI.CNContactPickerViewController picker, class Contacts.CNContact[] contacts) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ContactsUI.ICNContactPickerDelegate" RefType="this" />
          <Parameter Name="picker" Type="MonoTouch.ContactsUI.CNContactPickerViewController" />
          <Parameter Name="contacts" Type="MonoTouch.Contacts.CNContact[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="picker">To be added.</param>
          <param name="contacts">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ContactsUI.CNContactPickerDelegate_Extensions" Member="M:MonoTouch.ContactsUI.CNContactPickerDelegate_Extensions.DidSelectContacts(MonoTouch.ContactsUI.ICNContactPickerDelegate,MonoTouch.ContactsUI.CNContactPickerViewController,MonoTouch.Contacts.CNContact[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ContactsUI.ICNContactViewControllerDelegate" />
      </Targets>
      <Member MemberName="DidComplete">
        <MemberSignature Language="C#" Value="public static void DidComplete (this ContactsUI.ICNContactViewControllerDelegate This, ContactsUI.CNContactViewController viewController, Contacts.CNContact contact);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidComplete(class ContactsUI.ICNContactViewControllerDelegate This, class ContactsUI.CNContactViewController viewController, class Contacts.CNContact contact) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ContactsUI.ICNContactViewControllerDelegate" RefType="this" />
          <Parameter Name="viewController" Type="MonoTouch.ContactsUI.CNContactViewController" />
          <Parameter Name="contact" Type="MonoTouch.Contacts.CNContact" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="viewController">To be added.</param>
          <param name="contact">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ContactsUI.CNContactViewControllerDelegate_Extensions" Member="M:MonoTouch.ContactsUI.CNContactViewControllerDelegate_Extensions.DidComplete(MonoTouch.ContactsUI.ICNContactViewControllerDelegate,MonoTouch.ContactsUI.CNContactViewController,MonoTouch.Contacts.CNContact)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ContactsUI.ICNContactViewControllerDelegate" />
      </Targets>
      <Member MemberName="ShouldPerformDefaultAction">
        <MemberSignature Language="C#" Value="public static bool ShouldPerformDefaultAction (this ContactsUI.ICNContactViewControllerDelegate This, ContactsUI.CNContactViewController viewController, Contacts.CNContactProperty property);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldPerformDefaultAction(class ContactsUI.ICNContactViewControllerDelegate This, class ContactsUI.CNContactViewController viewController, class Contacts.CNContactProperty property) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ContactsUI.ICNContactViewControllerDelegate" RefType="this" />
          <Parameter Name="viewController" Type="MonoTouch.ContactsUI.CNContactViewController" />
          <Parameter Name="property" Type="MonoTouch.Contacts.CNContactProperty" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="viewController">To be added.</param>
          <param name="property">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ContactsUI.CNContactViewControllerDelegate_Extensions" Member="M:MonoTouch.ContactsUI.CNContactViewControllerDelegate_Extensions.ShouldPerformDefaultAction(MonoTouch.ContactsUI.ICNContactViewControllerDelegate,MonoTouch.ContactsUI.CNContactViewController,MonoTouch.Contacts.CNContactProperty)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreAnimation.CAContentsFormat" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this CoreAnimation.CAContentsFormat self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype CoreAnimation.CAContentsFormat self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CoreAnimation.CAContentsFormat" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreAnimation.CAContentsFormatExtensions" Member="M:MonoTouch.CoreAnimation.CAContentsFormatExtensions.GetConstant(MonoTouch.CoreAnimation.CAContentsFormat)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreAnimation.ICALayerDelegate" />
      </Targets>
      <Member MemberName="ActionForLayer">
        <MemberSignature Language="C#" Value="public static Foundation.NSObject ActionForLayer (this CoreAnimation.ICALayerDelegate This, CoreAnimation.CALayer layer, string eventKey);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSObject ActionForLayer(class CoreAnimation.ICALayerDelegate This, class CoreAnimation.CALayer layer, string eventKey) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSObject</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreAnimation.ICALayerDelegate" RefType="this" />
          <Parameter Name="layer" Type="MonoTouch.CoreAnimation.CALayer" />
          <Parameter Name="eventKey" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="layer">To be added.</param>
          <param name="eventKey">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreAnimation.CALayerDelegate_Extensions" Member="M:MonoTouch.CoreAnimation.CALayerDelegate_Extensions.ActionForLayer(MonoTouch.CoreAnimation.ICALayerDelegate,MonoTouch.CoreAnimation.CALayer,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreAnimation.ICALayerDelegate" />
      </Targets>
      <Member MemberName="DisplayLayer">
        <MemberSignature Language="C#" Value="public static void DisplayLayer (this CoreAnimation.ICALayerDelegate This, CoreAnimation.CALayer layer);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisplayLayer(class CoreAnimation.ICALayerDelegate This, class CoreAnimation.CALayer layer) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreAnimation.ICALayerDelegate" RefType="this" />
          <Parameter Name="layer" Type="MonoTouch.CoreAnimation.CALayer" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="layer">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreAnimation.CALayerDelegate_Extensions" Member="M:MonoTouch.CoreAnimation.CALayerDelegate_Extensions.DisplayLayer(MonoTouch.CoreAnimation.ICALayerDelegate,MonoTouch.CoreAnimation.CALayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreAnimation.ICALayerDelegate" />
      </Targets>
      <Member MemberName="DrawLayer">
        <MemberSignature Language="C#" Value="public static void DrawLayer (this CoreAnimation.ICALayerDelegate This, CoreAnimation.CALayer layer, CoreGraphics.CGContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawLayer(class CoreAnimation.ICALayerDelegate This, class CoreAnimation.CALayer layer, class CoreGraphics.CGContext context) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreAnimation.ICALayerDelegate" RefType="this" />
          <Parameter Name="layer" Type="MonoTouch.CoreAnimation.CALayer" />
          <Parameter Name="context" Type="MonoTouch.CoreGraphics.CGContext" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="layer">To be added.</param>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreAnimation.CALayerDelegate_Extensions" Member="M:MonoTouch.CoreAnimation.CALayerDelegate_Extensions.DrawLayer(MonoTouch.CoreAnimation.ICALayerDelegate,MonoTouch.CoreAnimation.CALayer,MonoTouch.CoreGraphics.CGContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreAnimation.ICALayerDelegate" />
      </Targets>
      <Member MemberName="LayoutSublayersOfLayer">
        <MemberSignature Language="C#" Value="public static void LayoutSublayersOfLayer (this CoreAnimation.ICALayerDelegate This, CoreAnimation.CALayer layer);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LayoutSublayersOfLayer(class CoreAnimation.ICALayerDelegate This, class CoreAnimation.CALayer layer) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreAnimation.ICALayerDelegate" RefType="this" />
          <Parameter Name="layer" Type="MonoTouch.CoreAnimation.CALayer" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="layer">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreAnimation.CALayerDelegate_Extensions" Member="M:MonoTouch.CoreAnimation.CALayerDelegate_Extensions.LayoutSublayersOfLayer(MonoTouch.CoreAnimation.ICALayerDelegate,MonoTouch.CoreAnimation.CALayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreAnimation.ICALayerDelegate" />
      </Targets>
      <Member MemberName="WillDrawLayer">
        <MemberSignature Language="C#" Value="public static void WillDrawLayer (this CoreAnimation.ICALayerDelegate This, CoreAnimation.CALayer layer);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillDrawLayer(class CoreAnimation.ICALayerDelegate This, class CoreAnimation.CALayer layer) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreAnimation.ICALayerDelegate" RefType="this" />
          <Parameter Name="layer" Type="MonoTouch.CoreAnimation.CALayer" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="layer">The layer that will be redrawn.</param>
          <summary>Method that is called when <paramref name="layer" /> is about to be drawn.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreAnimation.CALayerDelegate_Extensions" Member="M:MonoTouch.CoreAnimation.CALayerDelegate_Extensions.WillDrawLayer(MonoTouch.CoreAnimation.ICALayerDelegate,MonoTouch.CoreAnimation.CALayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreAnimation.CAScroll" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this CoreAnimation.CAScroll self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype CoreAnimation.CAScroll self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CoreAnimation.CAScroll" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>Retrieves the <see cref="T:Foundation.NSString" /> that describes <param name="self" />.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreAnimation.CAScrollExtensions" Member="M:MonoTouch.CoreAnimation.CAScrollExtensions.GetConstant(MonoTouch.CoreAnimation.CAScroll)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AudioUnit.AUAudioUnit" />
      </Targets>
      <Member MemberName="GetSupportedViewConfigurations">
        <MemberSignature Language="C#" Value="public static Foundation.NSIndexSet GetSupportedViewConfigurations (this AudioUnit.AUAudioUnit This, CoreAudioKit.AUAudioUnitViewConfiguration[] availableViewConfigurations);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSIndexSet GetSupportedViewConfigurations(class AudioUnit.AUAudioUnit This, class CoreAudioKit.AUAudioUnitViewConfiguration[] availableViewConfigurations) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSIndexSet</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AudioUnit.AUAudioUnit" RefType="this" />
          <Parameter Name="availableViewConfigurations" Type="MonoTouch.CoreAudioKit.AUAudioUnitViewConfiguration[]" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="availableViewConfigurations">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreAudioKit.AUAudioUnitViewControllerExtensions" Member="M:MonoTouch.CoreAudioKit.AUAudioUnitViewControllerExtensions.GetSupportedViewConfigurations(MonoTouch.AudioUnit.AUAudioUnit,MonoTouch.CoreAudioKit.AUAudioUnitViewConfiguration[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AudioUnit.AUAudioUnit" />
      </Targets>
      <Member MemberName="SelectViewConfiguration">
        <MemberSignature Language="C#" Value="public static void SelectViewConfiguration (this AudioUnit.AUAudioUnit This, CoreAudioKit.AUAudioUnitViewConfiguration viewConfiguration);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SelectViewConfiguration(class AudioUnit.AUAudioUnit This, class CoreAudioKit.AUAudioUnitViewConfiguration viewConfiguration) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AudioUnit.AUAudioUnit" RefType="this" />
          <Parameter Name="viewConfiguration" Type="MonoTouch.CoreAudioKit.AUAudioUnitViewConfiguration" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="viewConfiguration">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreAudioKit.AUAudioUnitViewControllerExtensions" Member="M:MonoTouch.CoreAudioKit.AUAudioUnitViewControllerExtensions.SelectViewConfiguration(MonoTouch.AudioUnit.AUAudioUnit,MonoTouch.CoreAudioKit.AUAudioUnitViewConfiguration)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.CBATTError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this CoreBluetooth.CBATTError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype CoreBluetooth.CBATTError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CoreBluetooth.CBATTError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.CoreBluetooth.CBATTError value</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBATTErrorExtensions" Member="M:MonoTouch.CoreBluetooth.CBATTErrorExtensions.GetDomain(MonoTouch.CoreBluetooth.CBATTError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBCentralManagerDelegate" />
      </Targets>
      <Member MemberName="ConnectedPeripheral">
        <MemberSignature Language="C#" Value="public static void ConnectedPeripheral (this CoreBluetooth.ICBCentralManagerDelegate This, CoreBluetooth.CBCentralManager central, CoreBluetooth.CBPeripheral peripheral);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConnectedPeripheral(class CoreBluetooth.ICBCentralManagerDelegate This, class CoreBluetooth.CBCentralManager central, class CoreBluetooth.CBPeripheral peripheral) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBCentralManagerDelegate" RefType="this" />
          <Parameter Name="central" Type="MonoTouch.CoreBluetooth.CBCentralManager" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="central">To be added.</param>
          <param name="peripheral">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBCentralManagerDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBCentralManagerDelegate_Extensions.ConnectedPeripheral(MonoTouch.CoreBluetooth.ICBCentralManagerDelegate,MonoTouch.CoreBluetooth.CBCentralManager,MonoTouch.CoreBluetooth.CBPeripheral)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBCentralManagerDelegate" />
      </Targets>
      <Member MemberName="DisconnectedPeripheral">
        <MemberSignature Language="C#" Value="public static void DisconnectedPeripheral (this CoreBluetooth.ICBCentralManagerDelegate This, CoreBluetooth.CBCentralManager central, CoreBluetooth.CBPeripheral peripheral, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisconnectedPeripheral(class CoreBluetooth.ICBCentralManagerDelegate This, class CoreBluetooth.CBCentralManager central, class CoreBluetooth.CBPeripheral peripheral, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBCentralManagerDelegate" RefType="this" />
          <Parameter Name="central" Type="MonoTouch.CoreBluetooth.CBCentralManager" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="central">To be added.</param>
          <param name="peripheral">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBCentralManagerDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBCentralManagerDelegate_Extensions.DisconnectedPeripheral(MonoTouch.CoreBluetooth.ICBCentralManagerDelegate,MonoTouch.CoreBluetooth.CBCentralManager,MonoTouch.CoreBluetooth.CBPeripheral,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBCentralManagerDelegate" />
      </Targets>
      <Member MemberName="DiscoveredPeripheral">
        <MemberSignature Language="C#" Value="public static void DiscoveredPeripheral (this CoreBluetooth.ICBCentralManagerDelegate This, CoreBluetooth.CBCentralManager central, CoreBluetooth.CBPeripheral peripheral, Foundation.NSDictionary advertisementData, Foundation.NSNumber RSSI);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DiscoveredPeripheral(class CoreBluetooth.ICBCentralManagerDelegate This, class CoreBluetooth.CBCentralManager central, class CoreBluetooth.CBPeripheral peripheral, class Foundation.NSDictionary advertisementData, class Foundation.NSNumber RSSI) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBCentralManagerDelegate" RefType="this" />
          <Parameter Name="central" Type="MonoTouch.CoreBluetooth.CBCentralManager" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
          <Parameter Name="advertisementData" Type="MonoTouch.Foundation.NSDictionary" />
          <Parameter Name="RSSI" Type="MonoTouch.Foundation.NSNumber" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="central">To be added.</param>
          <param name="peripheral">To be added.</param>
          <param name="advertisementData">To be added.</param>
          <param name="RSSI">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBCentralManagerDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBCentralManagerDelegate_Extensions.DiscoveredPeripheral(MonoTouch.CoreBluetooth.ICBCentralManagerDelegate,MonoTouch.CoreBluetooth.CBCentralManager,MonoTouch.CoreBluetooth.CBPeripheral,MonoTouch.Foundation.NSDictionary,MonoTouch.Foundation.NSNumber)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBCentralManagerDelegate" />
      </Targets>
      <Member MemberName="FailedToConnectPeripheral">
        <MemberSignature Language="C#" Value="public static void FailedToConnectPeripheral (this CoreBluetooth.ICBCentralManagerDelegate This, CoreBluetooth.CBCentralManager central, CoreBluetooth.CBPeripheral peripheral, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FailedToConnectPeripheral(class CoreBluetooth.ICBCentralManagerDelegate This, class CoreBluetooth.CBCentralManager central, class CoreBluetooth.CBPeripheral peripheral, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBCentralManagerDelegate" RefType="this" />
          <Parameter Name="central" Type="MonoTouch.CoreBluetooth.CBCentralManager" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="central">To be added.</param>
          <param name="peripheral">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBCentralManagerDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBCentralManagerDelegate_Extensions.FailedToConnectPeripheral(MonoTouch.CoreBluetooth.ICBCentralManagerDelegate,MonoTouch.CoreBluetooth.CBCentralManager,MonoTouch.CoreBluetooth.CBPeripheral,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBCentralManagerDelegate" />
      </Targets>
      <Member MemberName="RetrievedConnectedPeripherals">
        <MemberSignature Language="C#" Value="public static void RetrievedConnectedPeripherals (this CoreBluetooth.ICBCentralManagerDelegate This, CoreBluetooth.CBCentralManager central, CoreBluetooth.CBPeripheral[] peripherals);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RetrievedConnectedPeripherals(class CoreBluetooth.ICBCentralManagerDelegate This, class CoreBluetooth.CBCentralManager central, class CoreBluetooth.CBPeripheral[] peripherals) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBCentralManagerDelegate" RefType="this" />
          <Parameter Name="central" Type="MonoTouch.CoreBluetooth.CBCentralManager" />
          <Parameter Name="peripherals" Type="MonoTouch.CoreBluetooth.CBPeripheral[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="central">To be added.</param>
          <param name="peripherals">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBCentralManagerDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBCentralManagerDelegate_Extensions.RetrievedConnectedPeripherals(MonoTouch.CoreBluetooth.ICBCentralManagerDelegate,MonoTouch.CoreBluetooth.CBCentralManager,MonoTouch.CoreBluetooth.CBPeripheral[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBCentralManagerDelegate" />
      </Targets>
      <Member MemberName="RetrievedPeripherals">
        <MemberSignature Language="C#" Value="public static void RetrievedPeripherals (this CoreBluetooth.ICBCentralManagerDelegate This, CoreBluetooth.CBCentralManager central, CoreBluetooth.CBPeripheral[] peripherals);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RetrievedPeripherals(class CoreBluetooth.ICBCentralManagerDelegate This, class CoreBluetooth.CBCentralManager central, class CoreBluetooth.CBPeripheral[] peripherals) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBCentralManagerDelegate" RefType="this" />
          <Parameter Name="central" Type="MonoTouch.CoreBluetooth.CBCentralManager" />
          <Parameter Name="peripherals" Type="MonoTouch.CoreBluetooth.CBPeripheral[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="central">To be added.</param>
          <param name="peripherals">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBCentralManagerDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBCentralManagerDelegate_Extensions.RetrievedPeripherals(MonoTouch.CoreBluetooth.ICBCentralManagerDelegate,MonoTouch.CoreBluetooth.CBCentralManager,MonoTouch.CoreBluetooth.CBPeripheral[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBCentralManagerDelegate" />
      </Targets>
      <Member MemberName="WillRestoreState">
        <MemberSignature Language="C#" Value="public static void WillRestoreState (this CoreBluetooth.ICBCentralManagerDelegate This, CoreBluetooth.CBCentralManager central, Foundation.NSDictionary dict);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillRestoreState(class CoreBluetooth.ICBCentralManagerDelegate This, class CoreBluetooth.CBCentralManager central, class Foundation.NSDictionary dict) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBCentralManagerDelegate" RefType="this" />
          <Parameter Name="central" Type="MonoTouch.CoreBluetooth.CBCentralManager" />
          <Parameter Name="dict" Type="MonoTouch.Foundation.NSDictionary" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="central">To be added.</param>
          <param name="dict">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBCentralManagerDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBCentralManagerDelegate_Extensions.WillRestoreState(MonoTouch.CoreBluetooth.ICBCentralManagerDelegate,MonoTouch.CoreBluetooth.CBCentralManager,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.CBError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this CoreBluetooth.CBError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype CoreBluetooth.CBError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CoreBluetooth.CBError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.CoreBluetooth.CBError value</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBErrorExtensions" Member="M:MonoTouch.CoreBluetooth.CBErrorExtensions.GetDomain(MonoTouch.CoreBluetooth.CBError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralDelegate" />
      </Targets>
      <Member MemberName="DidOpenL2CapChannel">
        <MemberSignature Language="C#" Value="public static void DidOpenL2CapChannel (this CoreBluetooth.ICBPeripheralDelegate This, CoreBluetooth.CBPeripheral peripheral, CoreBluetooth.CBL2CapChannel channel, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidOpenL2CapChannel(class CoreBluetooth.ICBPeripheralDelegate This, class CoreBluetooth.CBPeripheral peripheral, class CoreBluetooth.CBL2CapChannel channel, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
          <Parameter Name="channel" Type="MonoTouch.CoreBluetooth.CBL2CapChannel" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="channel">To be added.This parameter can be .</param>
          <param name="error">To be added.This parameter can be .</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions.DidOpenL2CapChannel(MonoTouch.CoreBluetooth.ICBPeripheralDelegate,MonoTouch.CoreBluetooth.CBPeripheral,MonoTouch.CoreBluetooth.CBL2CapChannel,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralDelegate" />
      </Targets>
      <Member MemberName="DiscoveredCharacteristic">
        <MemberSignature Language="C#" Value="public static void DiscoveredCharacteristic (this CoreBluetooth.ICBPeripheralDelegate This, CoreBluetooth.CBPeripheral peripheral, CoreBluetooth.CBService service, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DiscoveredCharacteristic(class CoreBluetooth.ICBPeripheralDelegate This, class CoreBluetooth.CBPeripheral peripheral, class CoreBluetooth.CBService service, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
          <Parameter Name="service" Type="MonoTouch.CoreBluetooth.CBService" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="service">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions.DiscoveredCharacteristic(MonoTouch.CoreBluetooth.ICBPeripheralDelegate,MonoTouch.CoreBluetooth.CBPeripheral,MonoTouch.CoreBluetooth.CBService,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralDelegate" />
      </Targets>
      <Member MemberName="DiscoveredDescriptor">
        <MemberSignature Language="C#" Value="public static void DiscoveredDescriptor (this CoreBluetooth.ICBPeripheralDelegate This, CoreBluetooth.CBPeripheral peripheral, CoreBluetooth.CBCharacteristic characteristic, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DiscoveredDescriptor(class CoreBluetooth.ICBPeripheralDelegate This, class CoreBluetooth.CBPeripheral peripheral, class CoreBluetooth.CBCharacteristic characteristic, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
          <Parameter Name="characteristic" Type="MonoTouch.CoreBluetooth.CBCharacteristic" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="characteristic">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions.DiscoveredDescriptor(MonoTouch.CoreBluetooth.ICBPeripheralDelegate,MonoTouch.CoreBluetooth.CBPeripheral,MonoTouch.CoreBluetooth.CBCharacteristic,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralDelegate" />
      </Targets>
      <Member MemberName="DiscoveredIncludedService">
        <MemberSignature Language="C#" Value="public static void DiscoveredIncludedService (this CoreBluetooth.ICBPeripheralDelegate This, CoreBluetooth.CBPeripheral peripheral, CoreBluetooth.CBService service, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DiscoveredIncludedService(class CoreBluetooth.ICBPeripheralDelegate This, class CoreBluetooth.CBPeripheral peripheral, class CoreBluetooth.CBService service, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
          <Parameter Name="service" Type="MonoTouch.CoreBluetooth.CBService" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="service">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions.DiscoveredIncludedService(MonoTouch.CoreBluetooth.ICBPeripheralDelegate,MonoTouch.CoreBluetooth.CBPeripheral,MonoTouch.CoreBluetooth.CBService,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralDelegate" />
      </Targets>
      <Member MemberName="DiscoveredService">
        <MemberSignature Language="C#" Value="public static void DiscoveredService (this CoreBluetooth.ICBPeripheralDelegate This, CoreBluetooth.CBPeripheral peripheral, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DiscoveredService(class CoreBluetooth.ICBPeripheralDelegate This, class CoreBluetooth.CBPeripheral peripheral, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions.DiscoveredService(MonoTouch.CoreBluetooth.ICBPeripheralDelegate,MonoTouch.CoreBluetooth.CBPeripheral,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralDelegate" />
      </Targets>
      <Member MemberName="InvalidatedService">
        <MemberSignature Language="C#" Value="public static void InvalidatedService (this CoreBluetooth.ICBPeripheralDelegate This, CoreBluetooth.CBPeripheral peripheral);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InvalidatedService(class CoreBluetooth.ICBPeripheralDelegate This, class CoreBluetooth.CBPeripheral peripheral) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions.InvalidatedService(MonoTouch.CoreBluetooth.ICBPeripheralDelegate,MonoTouch.CoreBluetooth.CBPeripheral)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralDelegate" />
      </Targets>
      <Member MemberName="IsReadyToSendWriteWithoutResponse">
        <MemberSignature Language="C#" Value="public static void IsReadyToSendWriteWithoutResponse (this CoreBluetooth.ICBPeripheralDelegate This, CoreBluetooth.CBPeripheral peripheral);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void IsReadyToSendWriteWithoutResponse(class CoreBluetooth.ICBPeripheralDelegate This, class CoreBluetooth.CBPeripheral peripheral) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions.IsReadyToSendWriteWithoutResponse(MonoTouch.CoreBluetooth.ICBPeripheralDelegate,MonoTouch.CoreBluetooth.CBPeripheral)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralDelegate" />
      </Targets>
      <Member MemberName="ModifiedServices">
        <MemberSignature Language="C#" Value="public static void ModifiedServices (this CoreBluetooth.ICBPeripheralDelegate This, CoreBluetooth.CBPeripheral peripheral, CoreBluetooth.CBService[] services);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ModifiedServices(class CoreBluetooth.ICBPeripheralDelegate This, class CoreBluetooth.CBPeripheral peripheral, class CoreBluetooth.CBService[] services) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
          <Parameter Name="services" Type="MonoTouch.CoreBluetooth.CBService[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="services">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions.ModifiedServices(MonoTouch.CoreBluetooth.ICBPeripheralDelegate,MonoTouch.CoreBluetooth.CBPeripheral,MonoTouch.CoreBluetooth.CBService[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralDelegate" />
      </Targets>
      <Member MemberName="RssiRead">
        <MemberSignature Language="C#" Value="public static void RssiRead (this CoreBluetooth.ICBPeripheralDelegate This, CoreBluetooth.CBPeripheral peripheral, Foundation.NSNumber rssi, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RssiRead(class CoreBluetooth.ICBPeripheralDelegate This, class CoreBluetooth.CBPeripheral peripheral, class Foundation.NSNumber rssi, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
          <Parameter Name="rssi" Type="MonoTouch.Foundation.NSNumber" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="rssi">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions.RssiRead(MonoTouch.CoreBluetooth.ICBPeripheralDelegate,MonoTouch.CoreBluetooth.CBPeripheral,MonoTouch.Foundation.NSNumber,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralDelegate" />
      </Targets>
      <Member MemberName="RssiUpdated">
        <MemberSignature Language="C#" Value="public static void RssiUpdated (this CoreBluetooth.ICBPeripheralDelegate This, CoreBluetooth.CBPeripheral peripheral, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RssiUpdated(class CoreBluetooth.ICBPeripheralDelegate This, class CoreBluetooth.CBPeripheral peripheral, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions.RssiUpdated(MonoTouch.CoreBluetooth.ICBPeripheralDelegate,MonoTouch.CoreBluetooth.CBPeripheral,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralDelegate" />
      </Targets>
      <Member MemberName="UpdatedCharacterteristicValue">
        <MemberSignature Language="C#" Value="public static void UpdatedCharacterteristicValue (this CoreBluetooth.ICBPeripheralDelegate This, CoreBluetooth.CBPeripheral peripheral, CoreBluetooth.CBCharacteristic characteristic, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdatedCharacterteristicValue(class CoreBluetooth.ICBPeripheralDelegate This, class CoreBluetooth.CBPeripheral peripheral, class CoreBluetooth.CBCharacteristic characteristic, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
          <Parameter Name="characteristic" Type="MonoTouch.CoreBluetooth.CBCharacteristic" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="characteristic">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions.UpdatedCharacterteristicValue(MonoTouch.CoreBluetooth.ICBPeripheralDelegate,MonoTouch.CoreBluetooth.CBPeripheral,MonoTouch.CoreBluetooth.CBCharacteristic,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralDelegate" />
      </Targets>
      <Member MemberName="UpdatedName">
        <MemberSignature Language="C#" Value="public static void UpdatedName (this CoreBluetooth.ICBPeripheralDelegate This, CoreBluetooth.CBPeripheral peripheral);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdatedName(class CoreBluetooth.ICBPeripheralDelegate This, class CoreBluetooth.CBPeripheral peripheral) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions.UpdatedName(MonoTouch.CoreBluetooth.ICBPeripheralDelegate,MonoTouch.CoreBluetooth.CBPeripheral)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralDelegate" />
      </Targets>
      <Member MemberName="UpdatedNotificationState">
        <MemberSignature Language="C#" Value="public static void UpdatedNotificationState (this CoreBluetooth.ICBPeripheralDelegate This, CoreBluetooth.CBPeripheral peripheral, CoreBluetooth.CBCharacteristic characteristic, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdatedNotificationState(class CoreBluetooth.ICBPeripheralDelegate This, class CoreBluetooth.CBPeripheral peripheral, class CoreBluetooth.CBCharacteristic characteristic, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
          <Parameter Name="characteristic" Type="MonoTouch.CoreBluetooth.CBCharacteristic" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="characteristic">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions.UpdatedNotificationState(MonoTouch.CoreBluetooth.ICBPeripheralDelegate,MonoTouch.CoreBluetooth.CBPeripheral,MonoTouch.CoreBluetooth.CBCharacteristic,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralDelegate" />
      </Targets>
      <Member MemberName="UpdatedValue">
        <MemberSignature Language="C#" Value="public static void UpdatedValue (this CoreBluetooth.ICBPeripheralDelegate This, CoreBluetooth.CBPeripheral peripheral, CoreBluetooth.CBDescriptor descriptor, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdatedValue(class CoreBluetooth.ICBPeripheralDelegate This, class CoreBluetooth.CBPeripheral peripheral, class CoreBluetooth.CBDescriptor descriptor, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
          <Parameter Name="descriptor" Type="MonoTouch.CoreBluetooth.CBDescriptor" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="descriptor">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions.UpdatedValue(MonoTouch.CoreBluetooth.ICBPeripheralDelegate,MonoTouch.CoreBluetooth.CBPeripheral,MonoTouch.CoreBluetooth.CBDescriptor,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralDelegate" />
      </Targets>
      <Member MemberName="WroteCharacteristicValue">
        <MemberSignature Language="C#" Value="public static void WroteCharacteristicValue (this CoreBluetooth.ICBPeripheralDelegate This, CoreBluetooth.CBPeripheral peripheral, CoreBluetooth.CBCharacteristic characteristic, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WroteCharacteristicValue(class CoreBluetooth.ICBPeripheralDelegate This, class CoreBluetooth.CBPeripheral peripheral, class CoreBluetooth.CBCharacteristic characteristic, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
          <Parameter Name="characteristic" Type="MonoTouch.CoreBluetooth.CBCharacteristic" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="characteristic">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions.WroteCharacteristicValue(MonoTouch.CoreBluetooth.ICBPeripheralDelegate,MonoTouch.CoreBluetooth.CBPeripheral,MonoTouch.CoreBluetooth.CBCharacteristic,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralDelegate" />
      </Targets>
      <Member MemberName="WroteDescriptorValue">
        <MemberSignature Language="C#" Value="public static void WroteDescriptorValue (this CoreBluetooth.ICBPeripheralDelegate This, CoreBluetooth.CBPeripheral peripheral, CoreBluetooth.CBDescriptor descriptor, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WroteDescriptorValue(class CoreBluetooth.ICBPeripheralDelegate This, class CoreBluetooth.CBPeripheral peripheral, class CoreBluetooth.CBDescriptor descriptor, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
          <Parameter Name="descriptor" Type="MonoTouch.CoreBluetooth.CBDescriptor" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="descriptor">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions.WroteDescriptorValue(MonoTouch.CoreBluetooth.ICBPeripheralDelegate,MonoTouch.CoreBluetooth.CBPeripheral,MonoTouch.CoreBluetooth.CBDescriptor,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" />
      </Targets>
      <Member MemberName="AdvertisingStarted">
        <MemberSignature Language="C#" Value="public static void AdvertisingStarted (this CoreBluetooth.ICBPeripheralManagerDelegate This, CoreBluetooth.CBPeripheralManager peripheral, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AdvertisingStarted(class CoreBluetooth.ICBPeripheralManagerDelegate This, class CoreBluetooth.CBPeripheralManager peripheral, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheralManager" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions.AdvertisingStarted(MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate,MonoTouch.CoreBluetooth.CBPeripheralManager,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" />
      </Targets>
      <Member MemberName="CharacteristicSubscribed">
        <MemberSignature Language="C#" Value="public static void CharacteristicSubscribed (this CoreBluetooth.ICBPeripheralManagerDelegate This, CoreBluetooth.CBPeripheralManager peripheral, CoreBluetooth.CBCentral central, CoreBluetooth.CBCharacteristic characteristic);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CharacteristicSubscribed(class CoreBluetooth.ICBPeripheralManagerDelegate This, class CoreBluetooth.CBPeripheralManager peripheral, class CoreBluetooth.CBCentral central, class CoreBluetooth.CBCharacteristic characteristic) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheralManager" />
          <Parameter Name="central" Type="MonoTouch.CoreBluetooth.CBCentral" />
          <Parameter Name="characteristic" Type="MonoTouch.CoreBluetooth.CBCharacteristic" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="central">To be added.</param>
          <param name="characteristic">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions.CharacteristicSubscribed(MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate,MonoTouch.CoreBluetooth.CBPeripheralManager,MonoTouch.CoreBluetooth.CBCentral,MonoTouch.CoreBluetooth.CBCharacteristic)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" />
      </Targets>
      <Member MemberName="CharacteristicUnsubscribed">
        <MemberSignature Language="C#" Value="public static void CharacteristicUnsubscribed (this CoreBluetooth.ICBPeripheralManagerDelegate This, CoreBluetooth.CBPeripheralManager peripheral, CoreBluetooth.CBCentral central, CoreBluetooth.CBCharacteristic characteristic);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CharacteristicUnsubscribed(class CoreBluetooth.ICBPeripheralManagerDelegate This, class CoreBluetooth.CBPeripheralManager peripheral, class CoreBluetooth.CBCentral central, class CoreBluetooth.CBCharacteristic characteristic) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheralManager" />
          <Parameter Name="central" Type="MonoTouch.CoreBluetooth.CBCentral" />
          <Parameter Name="characteristic" Type="MonoTouch.CoreBluetooth.CBCharacteristic" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="central">To be added.</param>
          <param name="characteristic">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions.CharacteristicUnsubscribed(MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate,MonoTouch.CoreBluetooth.CBPeripheralManager,MonoTouch.CoreBluetooth.CBCentral,MonoTouch.CoreBluetooth.CBCharacteristic)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" />
      </Targets>
      <Member MemberName="DidOpenL2CapChannel">
        <MemberSignature Language="C#" Value="public static void DidOpenL2CapChannel (this CoreBluetooth.ICBPeripheralManagerDelegate This, CoreBluetooth.CBPeripheralManager peripheral, CoreBluetooth.CBL2CapChannel channel, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidOpenL2CapChannel(class CoreBluetooth.ICBPeripheralManagerDelegate This, class CoreBluetooth.CBPeripheralManager peripheral, class CoreBluetooth.CBL2CapChannel channel, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheralManager" />
          <Parameter Name="channel" Type="MonoTouch.CoreBluetooth.CBL2CapChannel" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="channel">To be added.This parameter can be .</param>
          <param name="error">To be added.This parameter can be .</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions.DidOpenL2CapChannel(MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate,MonoTouch.CoreBluetooth.CBPeripheralManager,MonoTouch.CoreBluetooth.CBL2CapChannel,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" />
      </Targets>
      <Member MemberName="DidPublishL2CapChannel">
        <MemberSignature Language="C#" Value="public static void DidPublishL2CapChannel (this CoreBluetooth.ICBPeripheralManagerDelegate This, CoreBluetooth.CBPeripheralManager peripheral, ushort psm, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidPublishL2CapChannel(class CoreBluetooth.ICBPeripheralManagerDelegate This, class CoreBluetooth.CBPeripheralManager peripheral, unsigned int16 psm, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheralManager" />
          <Parameter Name="psm" Type="System.UInt16" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="psm">To be added.</param>
          <param name="error">To be added.This parameter can be .</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions.DidPublishL2CapChannel(MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate,MonoTouch.CoreBluetooth.CBPeripheralManager,System.UInt16,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" />
      </Targets>
      <Member MemberName="DidUnpublishL2CapChannel">
        <MemberSignature Language="C#" Value="public static void DidUnpublishL2CapChannel (this CoreBluetooth.ICBPeripheralManagerDelegate This, CoreBluetooth.CBPeripheralManager peripheral, ushort psm, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUnpublishL2CapChannel(class CoreBluetooth.ICBPeripheralManagerDelegate This, class CoreBluetooth.CBPeripheralManager peripheral, unsigned int16 psm, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheralManager" />
          <Parameter Name="psm" Type="System.UInt16" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="psm">To be added.</param>
          <param name="error">To be added.This parameter can be .</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions.DidUnpublishL2CapChannel(MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate,MonoTouch.CoreBluetooth.CBPeripheralManager,System.UInt16,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" />
      </Targets>
      <Member MemberName="ReadRequestReceived">
        <MemberSignature Language="C#" Value="public static void ReadRequestReceived (this CoreBluetooth.ICBPeripheralManagerDelegate This, CoreBluetooth.CBPeripheralManager peripheral, CoreBluetooth.CBATTRequest request);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReadRequestReceived(class CoreBluetooth.ICBPeripheralManagerDelegate This, class CoreBluetooth.CBPeripheralManager peripheral, class CoreBluetooth.CBATTRequest request) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheralManager" />
          <Parameter Name="request" Type="MonoTouch.CoreBluetooth.CBATTRequest" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="request">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions.ReadRequestReceived(MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate,MonoTouch.CoreBluetooth.CBPeripheralManager,MonoTouch.CoreBluetooth.CBATTRequest)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" />
      </Targets>
      <Member MemberName="ReadyToUpdateSubscribers">
        <MemberSignature Language="C#" Value="public static void ReadyToUpdateSubscribers (this CoreBluetooth.ICBPeripheralManagerDelegate This, CoreBluetooth.CBPeripheralManager peripheral);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReadyToUpdateSubscribers(class CoreBluetooth.ICBPeripheralManagerDelegate This, class CoreBluetooth.CBPeripheralManager peripheral) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheralManager" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions.ReadyToUpdateSubscribers(MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate,MonoTouch.CoreBluetooth.CBPeripheralManager)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" />
      </Targets>
      <Member MemberName="ServiceAdded">
        <MemberSignature Language="C#" Value="public static void ServiceAdded (this CoreBluetooth.ICBPeripheralManagerDelegate This, CoreBluetooth.CBPeripheralManager peripheral, CoreBluetooth.CBService service, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ServiceAdded(class CoreBluetooth.ICBPeripheralManagerDelegate This, class CoreBluetooth.CBPeripheralManager peripheral, class CoreBluetooth.CBService service, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheralManager" />
          <Parameter Name="service" Type="MonoTouch.CoreBluetooth.CBService" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="service">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions.ServiceAdded(MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate,MonoTouch.CoreBluetooth.CBPeripheralManager,MonoTouch.CoreBluetooth.CBService,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" />
      </Targets>
      <Member MemberName="WillRestoreState">
        <MemberSignature Language="C#" Value="public static void WillRestoreState (this CoreBluetooth.ICBPeripheralManagerDelegate This, CoreBluetooth.CBPeripheralManager peripheral, Foundation.NSDictionary dict);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillRestoreState(class CoreBluetooth.ICBPeripheralManagerDelegate This, class CoreBluetooth.CBPeripheralManager peripheral, class Foundation.NSDictionary dict) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheralManager" />
          <Parameter Name="dict" Type="MonoTouch.Foundation.NSDictionary" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="dict">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions.WillRestoreState(MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate,MonoTouch.CoreBluetooth.CBPeripheralManager,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" />
      </Targets>
      <Member MemberName="WriteRequestsReceived">
        <MemberSignature Language="C#" Value="public static void WriteRequestsReceived (this CoreBluetooth.ICBPeripheralManagerDelegate This, CoreBluetooth.CBPeripheralManager peripheral, CoreBluetooth.CBATTRequest[] requests);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteRequestsReceived(class CoreBluetooth.ICBPeripheralManagerDelegate This, class CoreBluetooth.CBPeripheralManager peripheral, class CoreBluetooth.CBATTRequest[] requests) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheralManager" />
          <Parameter Name="requests" Type="MonoTouch.CoreBluetooth.CBATTRequest[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="requests">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions.WriteRequestsReceived(MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate,MonoTouch.CoreBluetooth.CBPeripheralManager,MonoTouch.CoreBluetooth.CBATTRequest[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreData.INSFetchedResultsControllerDelegate" />
      </Targets>
      <Member MemberName="DidChangeContent">
        <MemberSignature Language="C#" Value="public static void DidChangeContent (this CoreData.INSFetchedResultsControllerDelegate This, CoreData.NSFetchedResultsController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidChangeContent(class CoreData.INSFetchedResultsControllerDelegate This, class CoreData.NSFetchedResultsController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreData.INSFetchedResultsControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.CoreData.NSFetchedResultsController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreData.NSFetchedResultsControllerDelegate_Extensions" Member="M:MonoTouch.CoreData.NSFetchedResultsControllerDelegate_Extensions.DidChangeContent(MonoTouch.CoreData.INSFetchedResultsControllerDelegate,MonoTouch.CoreData.NSFetchedResultsController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreData.INSFetchedResultsControllerDelegate" />
      </Targets>
      <Member MemberName="DidChangeObject">
        <MemberSignature Language="C#" Value="public static void DidChangeObject (this CoreData.INSFetchedResultsControllerDelegate This, CoreData.NSFetchedResultsController controller, Foundation.NSObject anObject, Foundation.NSIndexPath indexPath, CoreData.NSFetchedResultsChangeType type, Foundation.NSIndexPath newIndexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidChangeObject(class CoreData.INSFetchedResultsControllerDelegate This, class CoreData.NSFetchedResultsController controller, class Foundation.NSObject anObject, class Foundation.NSIndexPath indexPath, valuetype CoreData.NSFetchedResultsChangeType type, class Foundation.NSIndexPath newIndexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreData.INSFetchedResultsControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.CoreData.NSFetchedResultsController" />
          <Parameter Name="anObject" Type="MonoTouch.Foundation.NSObject" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
          <Parameter Name="type" Type="MonoTouch.CoreData.NSFetchedResultsChangeType" />
          <Parameter Name="newIndexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="anObject">To be added.</param>
          <param name="indexPath">To be added.This parameter can be .</param>
          <param name="type">To be added.</param>
          <param name="newIndexPath">To be added.This parameter can be .</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreData.NSFetchedResultsControllerDelegate_Extensions" Member="M:MonoTouch.CoreData.NSFetchedResultsControllerDelegate_Extensions.DidChangeObject(MonoTouch.CoreData.INSFetchedResultsControllerDelegate,MonoTouch.CoreData.NSFetchedResultsController,MonoTouch.Foundation.NSObject,MonoTouch.Foundation.NSIndexPath,MonoTouch.CoreData.NSFetchedResultsChangeType,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreData.INSFetchedResultsControllerDelegate" />
      </Targets>
      <Member MemberName="DidChangeSection">
        <MemberSignature Language="C#" Value="public static void DidChangeSection (this CoreData.INSFetchedResultsControllerDelegate This, CoreData.NSFetchedResultsController controller, CoreData.INSFetchedResultsSectionInfo sectionInfo, nuint sectionIndex, CoreData.NSFetchedResultsChangeType type);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidChangeSection(class CoreData.INSFetchedResultsControllerDelegate This, class CoreData.NSFetchedResultsController controller, class CoreData.INSFetchedResultsSectionInfo sectionInfo, valuetype System.nuint sectionIndex, valuetype CoreData.NSFetchedResultsChangeType type) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreData.INSFetchedResultsControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.CoreData.NSFetchedResultsController" />
          <Parameter Name="sectionInfo" Type="MonoTouch.CoreData.INSFetchedResultsSectionInfo" />
          <Parameter Name="type" Type="MonoTouch.CoreData.NSFetchedResultsChangeType" />
          <Parameter Name="sectionIndex" Type="System.nuint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="sectionInfo">To be added.</param>
          <param name="sectionIndex">To be added.</param>
          <param name="type">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreData.NSFetchedResultsControllerDelegate_Extensions" Member="M:MonoTouch.CoreData.NSFetchedResultsControllerDelegate_Extensions.DidChangeSection(MonoTouch.CoreData.INSFetchedResultsControllerDelegate,MonoTouch.CoreData.NSFetchedResultsController,MonoTouch.CoreData.INSFetchedResultsSectionInfo,System.nuint,MonoTouch.CoreData.NSFetchedResultsChangeType)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreData.INSFetchedResultsControllerDelegate" />
      </Targets>
      <Member MemberName="SectionFor">
        <MemberSignature Language="C#" Value="public static string SectionFor (this CoreData.INSFetchedResultsControllerDelegate This, CoreData.NSFetchedResultsController controller, string sectionName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SectionFor(class CoreData.INSFetchedResultsControllerDelegate This, class CoreData.NSFetchedResultsController controller, string sectionName) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreData.INSFetchedResultsControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.CoreData.NSFetchedResultsController" />
          <Parameter Name="sectionName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="sectionName">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreData.NSFetchedResultsControllerDelegate_Extensions" Member="M:MonoTouch.CoreData.NSFetchedResultsControllerDelegate_Extensions.SectionFor(MonoTouch.CoreData.INSFetchedResultsControllerDelegate,MonoTouch.CoreData.NSFetchedResultsController,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreData.INSFetchedResultsControllerDelegate" />
      </Targets>
      <Member MemberName="WillChangeContent">
        <MemberSignature Language="C#" Value="public static void WillChangeContent (this CoreData.INSFetchedResultsControllerDelegate This, CoreData.NSFetchedResultsController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillChangeContent(class CoreData.INSFetchedResultsControllerDelegate This, class CoreData.NSFetchedResultsController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreData.INSFetchedResultsControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.CoreData.NSFetchedResultsController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreData.NSFetchedResultsControllerDelegate_Extensions" Member="M:MonoTouch.CoreData.NSFetchedResultsControllerDelegate_Extensions.WillChangeContent(MonoTouch.CoreData.INSFetchedResultsControllerDelegate,MonoTouch.CoreData.NSFetchedResultsController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreGraphics.CGRect" />
      </Targets>
      <Member MemberName="Divide">
        <MemberSignature Language="C#" Value="public static void Divide (this CoreGraphics.CGRect self, nfloat amount, CoreGraphics.CGRectEdge edge, out CoreGraphics.CGRect slice, out CoreGraphics.CGRect remainder);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Divide(valuetype CoreGraphics.CGRect self, valuetype System.nfloat amount, valuetype CoreGraphics.CGRectEdge edge, valuetype CoreGraphics.CGRect slice, valuetype CoreGraphics.CGRect remainder) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="edge" Type="MonoTouch.CoreGraphics.CGRectEdge" />
          <Parameter Name="self" Type="MonoTouch.CoreGraphics.CGRect" />
          <Parameter Name="amount" Type="System.nfloat" />
          <Parameter Name="slice" Type="MonoTouch.CoreGraphics.CGRect&amp;" RefType="out" />
          <Parameter Name="remainder" Type="MonoTouch.CoreGraphics.CGRect&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <param name="amount">To be added.</param>
          <param name="edge">To be added.</param>
          <param name="slice">To be added.</param>
          <param name="remainder">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreGraphics.RectangleFExtensions" Member="M:MonoTouch.CoreGraphics.RectangleFExtensions.Divide(MonoTouch.CoreGraphics.CGRect,System.nfloat,MonoTouch.CoreGraphics.CGRectEdge,MonoTouch.CoreGraphics.CGRect@,MonoTouch.CoreGraphics.CGRect@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreGraphics.CGRect" />
      </Targets>
      <Member MemberName="GetMaxX">
        <MemberSignature Language="C#" Value="public static nfloat GetMaxX (this CoreGraphics.CGRect self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat GetMaxX(valuetype CoreGraphics.CGRect self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CoreGraphics.CGRect" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreGraphics.RectangleFExtensions" Member="M:MonoTouch.CoreGraphics.RectangleFExtensions.GetMaxX(MonoTouch.CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreGraphics.CGRect" />
      </Targets>
      <Member MemberName="GetMaxY">
        <MemberSignature Language="C#" Value="public static nfloat GetMaxY (this CoreGraphics.CGRect self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat GetMaxY(valuetype CoreGraphics.CGRect self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CoreGraphics.CGRect" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreGraphics.RectangleFExtensions" Member="M:MonoTouch.CoreGraphics.RectangleFExtensions.GetMaxY(MonoTouch.CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreGraphics.CGRect" />
      </Targets>
      <Member MemberName="GetMidX">
        <MemberSignature Language="C#" Value="public static nfloat GetMidX (this CoreGraphics.CGRect self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat GetMidX(valuetype CoreGraphics.CGRect self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CoreGraphics.CGRect" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreGraphics.RectangleFExtensions" Member="M:MonoTouch.CoreGraphics.RectangleFExtensions.GetMidX(MonoTouch.CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreGraphics.CGRect" />
      </Targets>
      <Member MemberName="GetMidY">
        <MemberSignature Language="C#" Value="public static nfloat GetMidY (this CoreGraphics.CGRect self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat GetMidY(valuetype CoreGraphics.CGRect self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CoreGraphics.CGRect" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreGraphics.RectangleFExtensions" Member="M:MonoTouch.CoreGraphics.RectangleFExtensions.GetMidY(MonoTouch.CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreGraphics.CGRect" />
      </Targets>
      <Member MemberName="GetMinX">
        <MemberSignature Language="C#" Value="public static nfloat GetMinX (this CoreGraphics.CGRect self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat GetMinX(valuetype CoreGraphics.CGRect self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CoreGraphics.CGRect" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreGraphics.RectangleFExtensions" Member="M:MonoTouch.CoreGraphics.RectangleFExtensions.GetMinX(MonoTouch.CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreGraphics.CGRect" />
      </Targets>
      <Member MemberName="GetMinY">
        <MemberSignature Language="C#" Value="public static nfloat GetMinY (this CoreGraphics.CGRect self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat GetMinY(valuetype CoreGraphics.CGRect self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CoreGraphics.CGRect" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreGraphics.RectangleFExtensions" Member="M:MonoTouch.CoreGraphics.RectangleFExtensions.GetMinY(MonoTouch.CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreGraphics.CGRect" />
      </Targets>
      <Member MemberName="Inset">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGRect Inset (this CoreGraphics.CGRect self, nfloat dx, nfloat dy);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGRect Inset(valuetype CoreGraphics.CGRect self, valuetype System.nfloat dx, valuetype System.nfloat dy) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CoreGraphics.CGRect" />
          <Parameter Name="dx" Type="System.nfloat" />
          <Parameter Name="dy" Type="System.nfloat" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <param name="dx">To be added.</param>
          <param name="dy">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreGraphics.RectangleFExtensions" Member="M:MonoTouch.CoreGraphics.RectangleFExtensions.Inset(MonoTouch.CoreGraphics.CGRect,System.nfloat,System.nfloat)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreGraphics.CGRect" />
      </Targets>
      <Member MemberName="Integral">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGRect Integral (this CoreGraphics.CGRect self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGRect Integral(valuetype CoreGraphics.CGRect self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CoreGraphics.CGRect" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreGraphics.RectangleFExtensions" Member="M:MonoTouch.CoreGraphics.RectangleFExtensions.Integral(MonoTouch.CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreGraphics.CGRect" />
      </Targets>
      <Member MemberName="IsInfinite">
        <MemberSignature Language="C#" Value="public static bool IsInfinite (this CoreGraphics.CGRect self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsInfinite(valuetype CoreGraphics.CGRect self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CoreGraphics.CGRect" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreGraphics.RectangleFExtensions" Member="M:MonoTouch.CoreGraphics.RectangleFExtensions.IsInfinite(MonoTouch.CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreGraphics.CGRect" />
      </Targets>
      <Member MemberName="IsNull">
        <MemberSignature Language="C#" Value="public static bool IsNull (this CoreGraphics.CGRect self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNull(valuetype CoreGraphics.CGRect self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CoreGraphics.CGRect" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreGraphics.RectangleFExtensions" Member="M:MonoTouch.CoreGraphics.RectangleFExtensions.IsNull(MonoTouch.CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreGraphics.CGRect" />
      </Targets>
      <Member MemberName="Standardize">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGRect Standardize (this CoreGraphics.CGRect self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGRect Standardize(valuetype CoreGraphics.CGRect self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CoreGraphics.CGRect" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreGraphics.RectangleFExtensions" Member="M:MonoTouch.CoreGraphics.RectangleFExtensions.Standardize(MonoTouch.CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreGraphics.CGRect" />
      </Targets>
      <Member MemberName="UnionWith">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGRect UnionWith (this CoreGraphics.CGRect self, CoreGraphics.CGRect other);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGRect UnionWith(valuetype CoreGraphics.CGRect self, valuetype CoreGraphics.CGRect other) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CoreGraphics.CGRect" />
          <Parameter Name="other" Type="MonoTouch.CoreGraphics.CGRect" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <param name="other">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreGraphics.RectangleFExtensions" Member="M:MonoTouch.CoreGraphics.RectangleFExtensions.UnionWith(MonoTouch.CoreGraphics.CGRect,MonoTouch.CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreImage.CIContext" />
      </Targets>
      <Member MemberName="PrepareRender">
        <MemberSignature Language="C#" Value="public static bool PrepareRender (this CoreImage.CIContext This, CoreImage.CIImage image, CoreGraphics.CGRect fromRect, CoreImage.CIRenderDestination destination, CoreGraphics.CGPoint atPoint, out Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool PrepareRender(class CoreImage.CIContext This, class CoreImage.CIImage image, valuetype CoreGraphics.CGRect fromRect, class CoreImage.CIRenderDestination destination, valuetype CoreGraphics.CGPoint atPoint, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreImage.CIContext" RefType="this" />
          <Parameter Name="image" Type="MonoTouch.CoreImage.CIImage" />
          <Parameter Name="fromRect" Type="MonoTouch.CoreGraphics.CGRect" />
          <Parameter Name="destination" Type="MonoTouch.CoreImage.CIRenderDestination" />
          <Parameter Name="atPoint" Type="MonoTouch.CoreGraphics.CGPoint" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="image">To be added.</param>
          <param name="fromRect">To be added.</param>
          <param name="destination">To be added.</param>
          <param name="atPoint">To be added.</param>
          <param name="error">
            <para>To be added.</para>
            <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
          </param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreImage.CIContext_CIRenderDestination" Member="M:MonoTouch.CoreImage.CIContext_CIRenderDestination.PrepareRender(MonoTouch.CoreImage.CIContext,MonoTouch.CoreImage.CIImage,MonoTouch.CoreGraphics.CGRect,MonoTouch.CoreImage.CIRenderDestination,MonoTouch.CoreGraphics.CGPoint,MonoTouch.Foundation.NSError@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreImage.CIContext" />
      </Targets>
      <Member MemberName="StartTaskToClear">
        <MemberSignature Language="C#" Value="public static CoreImage.CIRenderTask StartTaskToClear (this CoreImage.CIContext This, CoreImage.CIRenderDestination destination, out Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreImage.CIRenderTask StartTaskToClear(class CoreImage.CIContext This, class CoreImage.CIRenderDestination destination, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreImage.CIRenderTask</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreImage.CIContext" RefType="this" />
          <Parameter Name="destination" Type="MonoTouch.CoreImage.CIRenderDestination" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="destination">To be added.</param>
          <param name="error">
            <para>To be added.</para>
            <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
          </param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreImage.CIContext_CIRenderDestination" Member="M:MonoTouch.CoreImage.CIContext_CIRenderDestination.StartTaskToClear(MonoTouch.CoreImage.CIContext,MonoTouch.CoreImage.CIRenderDestination,MonoTouch.Foundation.NSError@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreImage.CIContext" />
      </Targets>
      <Member MemberName="StartTaskToRender">
        <MemberSignature Language="C#" Value="public static CoreImage.CIRenderTask StartTaskToRender (this CoreImage.CIContext This, CoreImage.CIImage image, CoreGraphics.CGRect fromRect, CoreImage.CIRenderDestination destination, CoreGraphics.CGPoint atPoint, out Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreImage.CIRenderTask StartTaskToRender(class CoreImage.CIContext This, class CoreImage.CIImage image, valuetype CoreGraphics.CGRect fromRect, class CoreImage.CIRenderDestination destination, valuetype CoreGraphics.CGPoint atPoint, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreImage.CIRenderTask</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreImage.CIContext" RefType="this" />
          <Parameter Name="image" Type="MonoTouch.CoreImage.CIImage" />
          <Parameter Name="fromRect" Type="MonoTouch.CoreGraphics.CGRect" />
          <Parameter Name="destination" Type="MonoTouch.CoreImage.CIRenderDestination" />
          <Parameter Name="atPoint" Type="MonoTouch.CoreGraphics.CGPoint" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="image">To be added.</param>
          <param name="fromRect">To be added.</param>
          <param name="destination">To be added.</param>
          <param name="atPoint">To be added.</param>
          <param name="error">
            <para>To be added.</para>
            <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
          </param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreImage.CIContext_CIRenderDestination" Member="M:MonoTouch.CoreImage.CIContext_CIRenderDestination.StartTaskToRender(MonoTouch.CoreImage.CIContext,MonoTouch.CoreImage.CIImage,MonoTouch.CoreGraphics.CGRect,MonoTouch.CoreImage.CIRenderDestination,MonoTouch.CoreGraphics.CGPoint,MonoTouch.Foundation.NSError@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreImage.CIContext" />
      </Targets>
      <Member MemberName="StartTaskToRender">
        <MemberSignature Language="C#" Value="public static CoreImage.CIRenderTask StartTaskToRender (this CoreImage.CIContext This, CoreImage.CIImage image, CoreImage.CIRenderDestination destination, out Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreImage.CIRenderTask StartTaskToRender(class CoreImage.CIContext This, class CoreImage.CIImage image, class CoreImage.CIRenderDestination destination, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreImage.CIRenderTask</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreImage.CIContext" RefType="this" />
          <Parameter Name="image" Type="MonoTouch.CoreImage.CIImage" />
          <Parameter Name="destination" Type="MonoTouch.CoreImage.CIRenderDestination" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="image">To be added.</param>
          <param name="destination">To be added.</param>
          <param name="error">
            <para>To be added.</para>
            <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
          </param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreImage.CIContext_CIRenderDestination" Member="M:MonoTouch.CoreImage.CIContext_CIRenderDestination.StartTaskToRender(MonoTouch.CoreImage.CIContext,MonoTouch.CoreImage.CIImage,MonoTouch.CoreImage.CIRenderDestination,MonoTouch.Foundation.NSError@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreImage.CIContext" />
      </Targets>
      <Member MemberName="GetHeifRepresentation">
        <MemberSignature Language="C#" Value="public static Foundation.NSData GetHeifRepresentation (this CoreImage.CIContext This, CoreImage.CIImage image, CoreImage.CIFormat format, CoreGraphics.CGColorSpace colorSpace, Foundation.NSDictionary options);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSData GetHeifRepresentation(class CoreImage.CIContext This, class CoreImage.CIImage image, valuetype CoreImage.CIFormat format, class CoreGraphics.CGColorSpace colorSpace, class Foundation.NSDictionary options) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSData</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreImage.CIContext" RefType="this" />
          <Parameter Name="image" Type="MonoTouch.CoreImage.CIImage" />
          <Parameter Name="format" Type="MonoTouch.CoreImage.CIFormat" />
          <Parameter Name="colorSpace" Type="MonoTouch.CoreGraphics.CGColorSpace" />
          <Parameter Name="options" Type="MonoTouch.Foundation.NSDictionary" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="image">To be added.</param>
          <param name="format">To be added.</param>
          <param name="colorSpace">To be added.</param>
          <param name="options">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreImage.CIContext_ImageRepresentation" Member="M:MonoTouch.CoreImage.CIContext_ImageRepresentation.GetHeifRepresentation(MonoTouch.CoreImage.CIContext,MonoTouch.CoreImage.CIImage,MonoTouch.CoreImage.CIFormat,MonoTouch.CoreGraphics.CGColorSpace,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreImage.CIContext" />
      </Targets>
      <Member MemberName="GetJpegRepresentation">
        <MemberSignature Language="C#" Value="public static Foundation.NSData GetJpegRepresentation (this CoreImage.CIContext This, CoreImage.CIImage image, CoreGraphics.CGColorSpace colorSpace, Foundation.NSDictionary options);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSData GetJpegRepresentation(class CoreImage.CIContext This, class CoreImage.CIImage image, class CoreGraphics.CGColorSpace colorSpace, class Foundation.NSDictionary options) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSData</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreImage.CIContext" RefType="this" />
          <Parameter Name="image" Type="MonoTouch.CoreImage.CIImage" />
          <Parameter Name="colorSpace" Type="MonoTouch.CoreGraphics.CGColorSpace" />
          <Parameter Name="options" Type="MonoTouch.Foundation.NSDictionary" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates.</param>
          <param name="image">The image input to be processed.</param>
          <param name="colorSpace">The color space to be used.</param>
          <param name="options">Processing arguments.</param>
          <summary>Applies the processing of <paramref name="This" /> to the <paramref name="image" /> and returns a JPEG image of the result.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreImage.CIContext_ImageRepresentation" Member="M:MonoTouch.CoreImage.CIContext_ImageRepresentation.GetJpegRepresentation(MonoTouch.CoreImage.CIContext,MonoTouch.CoreImage.CIImage,MonoTouch.CoreGraphics.CGColorSpace,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreImage.CIContext" />
      </Targets>
      <Member MemberName="GetPngRepresentation">
        <MemberSignature Language="C#" Value="public static Foundation.NSData GetPngRepresentation (this CoreImage.CIContext This, CoreImage.CIImage image, CoreImage.CIFormat format, CoreGraphics.CGColorSpace colorSpace, Foundation.NSDictionary options);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSData GetPngRepresentation(class CoreImage.CIContext This, class CoreImage.CIImage image, valuetype CoreImage.CIFormat format, class CoreGraphics.CGColorSpace colorSpace, class Foundation.NSDictionary options) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSData</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreImage.CIContext" RefType="this" />
          <Parameter Name="image" Type="MonoTouch.CoreImage.CIImage" />
          <Parameter Name="format" Type="MonoTouch.CoreImage.CIFormat" />
          <Parameter Name="colorSpace" Type="MonoTouch.CoreGraphics.CGColorSpace" />
          <Parameter Name="options" Type="MonoTouch.Foundation.NSDictionary" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="image">To be added.</param>
          <param name="format">To be added.</param>
          <param name="colorSpace">To be added.</param>
          <param name="options">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreImage.CIContext_ImageRepresentation" Member="M:MonoTouch.CoreImage.CIContext_ImageRepresentation.GetPngRepresentation(MonoTouch.CoreImage.CIContext,MonoTouch.CoreImage.CIImage,MonoTouch.CoreImage.CIFormat,MonoTouch.CoreGraphics.CGColorSpace,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreImage.CIContext" />
      </Targets>
      <Member MemberName="GetTiffRepresentation">
        <MemberSignature Language="C#" Value="public static Foundation.NSData GetTiffRepresentation (this CoreImage.CIContext This, CoreImage.CIImage image, CoreImage.CIFormat format, CoreGraphics.CGColorSpace colorSpace, Foundation.NSDictionary options);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSData GetTiffRepresentation(class CoreImage.CIContext This, class CoreImage.CIImage image, valuetype CoreImage.CIFormat format, class CoreGraphics.CGColorSpace colorSpace, class Foundation.NSDictionary options) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSData</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreImage.CIContext" RefType="this" />
          <Parameter Name="image" Type="MonoTouch.CoreImage.CIImage" />
          <Parameter Name="format" Type="MonoTouch.CoreImage.CIFormat" />
          <Parameter Name="colorSpace" Type="MonoTouch.CoreGraphics.CGColorSpace" />
          <Parameter Name="options" Type="MonoTouch.Foundation.NSDictionary" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates.</param>
          <param name="image">The image input to be processed.</param>
          <param name="format">The desired pixel format.</param>
          <param name="colorSpace">The color space to be used.</param>
          <param name="options">Processing arguments.</param>
          <summary>Applies the processing of <paramref name="This" /> to the <paramref name="image" /> and returns a TIFF image of the result.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreImage.CIContext_ImageRepresentation" Member="M:MonoTouch.CoreImage.CIContext_ImageRepresentation.GetTiffRepresentation(MonoTouch.CoreImage.CIContext,MonoTouch.CoreImage.CIImage,MonoTouch.CoreImage.CIFormat,MonoTouch.CoreGraphics.CGColorSpace,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreImage.CIContext" />
      </Targets>
      <Member MemberName="WriteHeifRepresentation">
        <MemberSignature Language="C#" Value="public static bool WriteHeifRepresentation (this CoreImage.CIContext This, CoreImage.CIImage image, Foundation.NSUrl url, CoreImage.CIFormat format, CoreGraphics.CGColorSpace colorSpace, Foundation.NSDictionary options, out Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WriteHeifRepresentation(class CoreImage.CIContext This, class CoreImage.CIImage image, class Foundation.NSUrl url, valuetype CoreImage.CIFormat format, class CoreGraphics.CGColorSpace colorSpace, class Foundation.NSDictionary options, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreImage.CIContext" RefType="this" />
          <Parameter Name="image" Type="MonoTouch.CoreImage.CIImage" />
          <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="format" Type="MonoTouch.CoreImage.CIFormat" />
          <Parameter Name="colorSpace" Type="MonoTouch.CoreGraphics.CGColorSpace" />
          <Parameter Name="options" Type="MonoTouch.Foundation.NSDictionary" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="image">To be added.</param>
          <param name="url">To be added.</param>
          <param name="format">To be added.</param>
          <param name="colorSpace">To be added.</param>
          <param name="options">To be added.</param>
          <param name="error">
            <para>To be added.</para>
            <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
          </param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreImage.CIContext_ImageRepresentation" Member="M:MonoTouch.CoreImage.CIContext_ImageRepresentation.WriteHeifRepresentation(MonoTouch.CoreImage.CIContext,MonoTouch.CoreImage.CIImage,MonoTouch.Foundation.NSUrl,MonoTouch.CoreImage.CIFormat,MonoTouch.CoreGraphics.CGColorSpace,MonoTouch.Foundation.NSDictionary,MonoTouch.Foundation.NSError@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreImage.CIContext" />
      </Targets>
      <Member MemberName="WriteJpegRepresentation">
        <MemberSignature Language="C#" Value="public static bool WriteJpegRepresentation (this CoreImage.CIContext This, CoreImage.CIImage image, Foundation.NSUrl url, CoreGraphics.CGColorSpace colorSpace, Foundation.NSDictionary options, out Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WriteJpegRepresentation(class CoreImage.CIContext This, class CoreImage.CIImage image, class Foundation.NSUrl url, class CoreGraphics.CGColorSpace colorSpace, class Foundation.NSDictionary options, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreImage.CIContext" RefType="this" />
          <Parameter Name="image" Type="MonoTouch.CoreImage.CIImage" />
          <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="colorSpace" Type="MonoTouch.CoreGraphics.CGColorSpace" />
          <Parameter Name="options" Type="MonoTouch.Foundation.NSDictionary" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates.</param>
          <param name="image">The image input to be processed.</param>
          <param name="url">The file URL to which the image should be written.</param>
          <param name="colorSpace">The color space to be used.</param>
          <param name="options">Processing arguments.</param>
          <param name="error">
            <para>To be added.</para>
            <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
          </param>
          <summary>Applies the processing of <paramref name="This" /> to the <paramref name="image" /> and writes a JPEG image of the result to <paramref name="url" />.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreImage.CIContext_ImageRepresentation" Member="M:MonoTouch.CoreImage.CIContext_ImageRepresentation.WriteJpegRepresentation(MonoTouch.CoreImage.CIContext,MonoTouch.CoreImage.CIImage,MonoTouch.Foundation.NSUrl,MonoTouch.CoreGraphics.CGColorSpace,MonoTouch.Foundation.NSDictionary,MonoTouch.Foundation.NSError@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreImage.CIContext" />
      </Targets>
      <Member MemberName="WritePngRepresentation">
        <MemberSignature Language="C#" Value="public static bool WritePngRepresentation (this CoreImage.CIContext This, CoreImage.CIImage image, Foundation.NSUrl url, CoreImage.CIFormat format, CoreGraphics.CGColorSpace colorSpace, Foundation.NSDictionary options, out Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WritePngRepresentation(class CoreImage.CIContext This, class CoreImage.CIImage image, class Foundation.NSUrl url, valuetype CoreImage.CIFormat format, class CoreGraphics.CGColorSpace colorSpace, class Foundation.NSDictionary options, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreImage.CIContext" RefType="this" />
          <Parameter Name="image" Type="MonoTouch.CoreImage.CIImage" />
          <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="format" Type="MonoTouch.CoreImage.CIFormat" />
          <Parameter Name="colorSpace" Type="MonoTouch.CoreGraphics.CGColorSpace" />
          <Parameter Name="options" Type="MonoTouch.Foundation.NSDictionary" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="image">To be added.</param>
          <param name="url">To be added.</param>
          <param name="format">To be added.</param>
          <param name="colorSpace">To be added.</param>
          <param name="options">To be added.</param>
          <param name="error">
            <para>To be added.</para>
            <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
          </param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreImage.CIContext_ImageRepresentation" Member="M:MonoTouch.CoreImage.CIContext_ImageRepresentation.WritePngRepresentation(MonoTouch.CoreImage.CIContext,MonoTouch.CoreImage.CIImage,MonoTouch.Foundation.NSUrl,MonoTouch.CoreImage.CIFormat,MonoTouch.CoreGraphics.CGColorSpace,MonoTouch.Foundation.NSDictionary,MonoTouch.Foundation.NSError@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreImage.CIContext" />
      </Targets>
      <Member MemberName="WriteTiffRepresentation">
        <MemberSignature Language="C#" Value="public static bool WriteTiffRepresentation (this CoreImage.CIContext This, CoreImage.CIImage image, Foundation.NSUrl url, CoreImage.CIFormat format, CoreGraphics.CGColorSpace colorSpace, Foundation.NSDictionary options, out Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WriteTiffRepresentation(class CoreImage.CIContext This, class CoreImage.CIImage image, class Foundation.NSUrl url, valuetype CoreImage.CIFormat format, class CoreGraphics.CGColorSpace colorSpace, class Foundation.NSDictionary options, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreImage.CIContext" RefType="this" />
          <Parameter Name="image" Type="MonoTouch.CoreImage.CIImage" />
          <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="format" Type="MonoTouch.CoreImage.CIFormat" />
          <Parameter Name="colorSpace" Type="MonoTouch.CoreGraphics.CGColorSpace" />
          <Parameter Name="options" Type="MonoTouch.Foundation.NSDictionary" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates.</param>
          <param name="image">The image input to be processed.</param>
          <param name="url">To be added.</param>
          <param name="format">The desired pixel format.</param>
          <param name="colorSpace">The color space to be used.</param>
          <param name="options">Processing arguments.</param>
          <param name="error">If not <see langword="null" />, error that occurred during processing.</param>
          <summary>Applies the processing of <paramref name="This" /> to the <paramref name="image" /> and writes a TIFF image of the result to <paramref name="url" />.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreImage.CIContext_ImageRepresentation" Member="M:MonoTouch.CoreImage.CIContext_ImageRepresentation.WriteTiffRepresentation(MonoTouch.CoreImage.CIContext,MonoTouch.CoreImage.CIImage,MonoTouch.Foundation.NSUrl,MonoTouch.CoreImage.CIFormat,MonoTouch.CoreGraphics.CGColorSpace,MonoTouch.Foundation.NSDictionary,MonoTouch.Foundation.NSError@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreImage.ICIImageProcessorInput" />
      </Targets>
      <Member MemberName="GetSurface">
        <MemberSignature Language="C#" Value="public static IOSurface.IOSurface GetSurface (this CoreImage.ICIImageProcessorInput This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class IOSurface.IOSurface GetSurface(class CoreImage.ICIImageProcessorInput This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.IOSurface.IOSurface</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreImage.ICIImageProcessorInput" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Extension method for getting the surface from a <see cref="T:CoreImage.CIImageProcessorInput" />.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreImage.CIImageProcessorInput_Extensions" Member="M:MonoTouch.CoreImage.CIImageProcessorInput_Extensions.GetSurface(MonoTouch.CoreImage.ICIImageProcessorInput)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreImage.ICIImageProcessorOutput" />
      </Targets>
      <Member MemberName="GetSurface">
        <MemberSignature Language="C#" Value="public static IOSurface.IOSurface GetSurface (this CoreImage.ICIImageProcessorOutput This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class IOSurface.IOSurface GetSurface(class CoreImage.ICIImageProcessorOutput This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.IOSurface.IOSurface</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreImage.ICIImageProcessorOutput" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Extension method for getting the surface from a <see cref="T:CoreImage.CIImageProcessorOutput" />.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreImage.CIImageProcessorOutput_Extensions" Member="M:MonoTouch.CoreImage.CIImageProcessorOutput_Extensions.GetSurface(MonoTouch.CoreImage.ICIImageProcessorOutput)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreLocation.ICLLocationManagerDelegate" />
      </Targets>
      <Member MemberName="AuthorizationChanged">
        <MemberSignature Language="C#" Value="public static void AuthorizationChanged (this CoreLocation.ICLLocationManagerDelegate This, CoreLocation.CLLocationManager manager, CoreLocation.CLAuthorizationStatus status);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AuthorizationChanged(class CoreLocation.ICLLocationManagerDelegate This, class CoreLocation.CLLocationManager manager, valuetype CoreLocation.CLAuthorizationStatus status) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreLocation.ICLLocationManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
          <Parameter Name="status" Type="MonoTouch.CoreLocation.CLAuthorizationStatus" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">The  for which this is the delegate object.</param>
          <param name="status">The new authorization status of the application.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions" Member="M:MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions.AuthorizationChanged(MonoTouch.CoreLocation.ICLLocationManagerDelegate,MonoTouch.CoreLocation.CLLocationManager,MonoTouch.CoreLocation.CLAuthorizationStatus)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreLocation.ICLLocationManagerDelegate" />
      </Targets>
      <Member MemberName="DeferredUpdatesFinished">
        <MemberSignature Language="C#" Value="public static void DeferredUpdatesFinished (this CoreLocation.ICLLocationManagerDelegate This, CoreLocation.CLLocationManager manager, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeferredUpdatesFinished(class CoreLocation.ICLLocationManagerDelegate This, class CoreLocation.CLLocationManager manager, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreLocation.ICLLocationManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">The  for which this is the delegate object.</param>
          <param name="error">The reason deferred updates are no longer available.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions" Member="M:MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions.DeferredUpdatesFinished(MonoTouch.CoreLocation.ICLLocationManagerDelegate,MonoTouch.CoreLocation.CLLocationManager,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreLocation.ICLLocationManagerDelegate" />
      </Targets>
      <Member MemberName="DidDetermineState">
        <MemberSignature Language="C#" Value="public static void DidDetermineState (this CoreLocation.ICLLocationManagerDelegate This, CoreLocation.CLLocationManager manager, CoreLocation.CLRegionState state, CoreLocation.CLRegion region);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDetermineState(class CoreLocation.ICLLocationManagerDelegate This, class CoreLocation.CLLocationManager manager, valuetype CoreLocation.CLRegionState state, class CoreLocation.CLRegion region) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreLocation.ICLLocationManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
          <Parameter Name="state" Type="MonoTouch.CoreLocation.CLRegionState" />
          <Parameter Name="region" Type="MonoTouch.CoreLocation.CLRegion" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">The  for which this is the delegate object.</param>
          <param name="state">The new state of the region.</param>
          <param name="region">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions" Member="M:MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions.DidDetermineState(MonoTouch.CoreLocation.ICLLocationManagerDelegate,MonoTouch.CoreLocation.CLLocationManager,MonoTouch.CoreLocation.CLRegionState,MonoTouch.CoreLocation.CLRegion)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreLocation.ICLLocationManagerDelegate" />
      </Targets>
      <Member MemberName="DidRangeBeacons">
        <MemberSignature Language="C#" Value="public static void DidRangeBeacons (this CoreLocation.ICLLocationManagerDelegate This, CoreLocation.CLLocationManager manager, CoreLocation.CLBeacon[] beacons, CoreLocation.CLBeaconRegion region);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRangeBeacons(class CoreLocation.ICLLocationManagerDelegate This, class CoreLocation.CLLocationManager manager, class CoreLocation.CLBeacon[] beacons, class CoreLocation.CLBeaconRegion region) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreLocation.ICLLocationManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
          <Parameter Name="beacons" Type="MonoTouch.CoreLocation.CLBeacon[]" />
          <Parameter Name="region" Type="MonoTouch.CoreLocation.CLBeaconRegion" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">The  for which this is the delegate object.</param>
          <param name="beacons">The ranged s.</param>
          <param name="region">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions" Member="M:MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions.DidRangeBeacons(MonoTouch.CoreLocation.ICLLocationManagerDelegate,MonoTouch.CoreLocation.CLLocationManager,MonoTouch.CoreLocation.CLBeacon[],MonoTouch.CoreLocation.CLBeaconRegion)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreLocation.ICLLocationManagerDelegate" />
      </Targets>
      <Member MemberName="DidStartMonitoringForRegion">
        <MemberSignature Language="C#" Value="public static void DidStartMonitoringForRegion (this CoreLocation.ICLLocationManagerDelegate This, CoreLocation.CLLocationManager manager, CoreLocation.CLRegion region);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidStartMonitoringForRegion(class CoreLocation.ICLLocationManagerDelegate This, class CoreLocation.CLLocationManager manager, class CoreLocation.CLRegion region) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreLocation.ICLLocationManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
          <Parameter Name="region" Type="MonoTouch.CoreLocation.CLRegion" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">The  for which this is the delegate object.</param>
          <param name="region">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions" Member="M:MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions.DidStartMonitoringForRegion(MonoTouch.CoreLocation.ICLLocationManagerDelegate,MonoTouch.CoreLocation.CLLocationManager,MonoTouch.CoreLocation.CLRegion)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreLocation.ICLLocationManagerDelegate" />
      </Targets>
      <Member MemberName="DidVisit">
        <MemberSignature Language="C#" Value="public static void DidVisit (this CoreLocation.ICLLocationManagerDelegate This, CoreLocation.CLLocationManager manager, CoreLocation.CLVisit visit);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidVisit(class CoreLocation.ICLLocationManagerDelegate This, class CoreLocation.CLLocationManager manager, class CoreLocation.CLVisit visit) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreLocation.ICLLocationManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
          <Parameter Name="visit" Type="MonoTouch.CoreLocation.CLVisit" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">To be added.</param>
          <param name="visit">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions" Member="M:MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions.DidVisit(MonoTouch.CoreLocation.ICLLocationManagerDelegate,MonoTouch.CoreLocation.CLLocationManager,MonoTouch.CoreLocation.CLVisit)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreLocation.ICLLocationManagerDelegate" />
      </Targets>
      <Member MemberName="Failed">
        <MemberSignature Language="C#" Value="public static void Failed (this CoreLocation.ICLLocationManagerDelegate This, CoreLocation.CLLocationManager manager, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Failed(class CoreLocation.ICLLocationManagerDelegate This, class CoreLocation.CLLocationManager manager, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreLocation.ICLLocationManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">The  for which this is the delegate object.</param>
          <param name="error">The error that occurred.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions" Member="M:MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions.Failed(MonoTouch.CoreLocation.ICLLocationManagerDelegate,MonoTouch.CoreLocation.CLLocationManager,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreLocation.ICLLocationManagerDelegate" />
      </Targets>
      <Member MemberName="LocationsUpdated">
        <MemberSignature Language="C#" Value="public static void LocationsUpdated (this CoreLocation.ICLLocationManagerDelegate This, CoreLocation.CLLocationManager manager, CoreLocation.CLLocation[] locations);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LocationsUpdated(class CoreLocation.ICLLocationManagerDelegate This, class CoreLocation.CLLocationManager manager, class CoreLocation.CLLocation[] locations) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreLocation.ICLLocationManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
          <Parameter Name="locations" Type="MonoTouch.CoreLocation.CLLocation[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">The  for which this is the delegate object.</param>
          <param name="locations">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions" Member="M:MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions.LocationsUpdated(MonoTouch.CoreLocation.ICLLocationManagerDelegate,MonoTouch.CoreLocation.CLLocationManager,MonoTouch.CoreLocation.CLLocation[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreLocation.ICLLocationManagerDelegate" />
      </Targets>
      <Member MemberName="LocationUpdatesPaused">
        <MemberSignature Language="C#" Value="public static void LocationUpdatesPaused (this CoreLocation.ICLLocationManagerDelegate This, CoreLocation.CLLocationManager manager);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LocationUpdatesPaused(class CoreLocation.ICLLocationManagerDelegate This, class CoreLocation.CLLocationManager manager) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreLocation.ICLLocationManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">The  for which this is the delegate object.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions" Member="M:MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions.LocationUpdatesPaused(MonoTouch.CoreLocation.ICLLocationManagerDelegate,MonoTouch.CoreLocation.CLLocationManager)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreLocation.ICLLocationManagerDelegate" />
      </Targets>
      <Member MemberName="LocationUpdatesResumed">
        <MemberSignature Language="C#" Value="public static void LocationUpdatesResumed (this CoreLocation.ICLLocationManagerDelegate This, CoreLocation.CLLocationManager manager);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LocationUpdatesResumed(class CoreLocation.ICLLocationManagerDelegate This, class CoreLocation.CLLocationManager manager) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreLocation.ICLLocationManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">The  for which this is the delegate object.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions" Member="M:MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions.LocationUpdatesResumed(MonoTouch.CoreLocation.ICLLocationManagerDelegate,MonoTouch.CoreLocation.CLLocationManager)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreLocation.ICLLocationManagerDelegate" />
      </Targets>
      <Member MemberName="MonitoringFailed">
        <MemberSignature Language="C#" Value="public static void MonitoringFailed (this CoreLocation.ICLLocationManagerDelegate This, CoreLocation.CLLocationManager manager, CoreLocation.CLRegion region, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MonitoringFailed(class CoreLocation.ICLLocationManagerDelegate This, class CoreLocation.CLLocationManager manager, class CoreLocation.CLRegion region, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreLocation.ICLLocationManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
          <Parameter Name="region" Type="MonoTouch.CoreLocation.CLRegion" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">The  for which this is the delegate object.</param>
          <param name="region">To be added.</param>
          <param name="error">The cause of the failure.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions" Member="M:MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions.MonitoringFailed(MonoTouch.CoreLocation.ICLLocationManagerDelegate,MonoTouch.CoreLocation.CLLocationManager,MonoTouch.CoreLocation.CLRegion,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreLocation.ICLLocationManagerDelegate" />
      </Targets>
      <Member MemberName="RangingBeaconsDidFailForRegion">
        <MemberSignature Language="C#" Value="public static void RangingBeaconsDidFailForRegion (this CoreLocation.ICLLocationManagerDelegate This, CoreLocation.CLLocationManager manager, CoreLocation.CLBeaconRegion region, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RangingBeaconsDidFailForRegion(class CoreLocation.ICLLocationManagerDelegate This, class CoreLocation.CLLocationManager manager, class CoreLocation.CLBeaconRegion region, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreLocation.ICLLocationManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
          <Parameter Name="region" Type="MonoTouch.CoreLocation.CLBeaconRegion" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">The  for which this is the delegate object.</param>
          <param name="region">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions" Member="M:MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions.RangingBeaconsDidFailForRegion(MonoTouch.CoreLocation.ICLLocationManagerDelegate,MonoTouch.CoreLocation.CLLocationManager,MonoTouch.CoreLocation.CLBeaconRegion,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreLocation.ICLLocationManagerDelegate" />
      </Targets>
      <Member MemberName="RegionEntered">
        <MemberSignature Language="C#" Value="public static void RegionEntered (this CoreLocation.ICLLocationManagerDelegate This, CoreLocation.CLLocationManager manager, CoreLocation.CLRegion region);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegionEntered(class CoreLocation.ICLLocationManagerDelegate This, class CoreLocation.CLLocationManager manager, class CoreLocation.CLRegion region) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreLocation.ICLLocationManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
          <Parameter Name="region" Type="MonoTouch.CoreLocation.CLRegion" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">The  for which this is the delegate object.</param>
          <param name="region">The region entered.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions" Member="M:MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions.RegionEntered(MonoTouch.CoreLocation.ICLLocationManagerDelegate,MonoTouch.CoreLocation.CLLocationManager,MonoTouch.CoreLocation.CLRegion)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreLocation.ICLLocationManagerDelegate" />
      </Targets>
      <Member MemberName="RegionLeft">
        <MemberSignature Language="C#" Value="public static void RegionLeft (this CoreLocation.ICLLocationManagerDelegate This, CoreLocation.CLLocationManager manager, CoreLocation.CLRegion region);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegionLeft(class CoreLocation.ICLLocationManagerDelegate This, class CoreLocation.CLLocationManager manager, class CoreLocation.CLRegion region) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreLocation.ICLLocationManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
          <Parameter Name="region" Type="MonoTouch.CoreLocation.CLRegion" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">The  for which this is the delegate object.</param>
          <param name="region">The region left.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions" Member="M:MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions.RegionLeft(MonoTouch.CoreLocation.ICLLocationManagerDelegate,MonoTouch.CoreLocation.CLLocationManager,MonoTouch.CoreLocation.CLRegion)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreLocation.ICLLocationManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldDisplayHeadingCalibration">
        <MemberSignature Language="C#" Value="public static bool ShouldDisplayHeadingCalibration (this CoreLocation.ICLLocationManagerDelegate This, CoreLocation.CLLocationManager manager);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldDisplayHeadingCalibration(class CoreLocation.ICLLocationManagerDelegate This, class CoreLocation.CLLocationManager manager) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreLocation.ICLLocationManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">The  for which this is the delegate object.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions" Member="M:MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions.ShouldDisplayHeadingCalibration(MonoTouch.CoreLocation.ICLLocationManagerDelegate,MonoTouch.CoreLocation.CLLocationManager)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreLocation.ICLLocationManagerDelegate" />
      </Targets>
      <Member MemberName="UpdatedHeading">
        <MemberSignature Language="C#" Value="public static void UpdatedHeading (this CoreLocation.ICLLocationManagerDelegate This, CoreLocation.CLLocationManager manager, CoreLocation.CLHeading newHeading);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdatedHeading(class CoreLocation.ICLLocationManagerDelegate This, class CoreLocation.CLLocationManager manager, class CoreLocation.CLHeading newHeading) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreLocation.ICLLocationManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
          <Parameter Name="newHeading" Type="MonoTouch.CoreLocation.CLHeading" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">The  for which this is the delegate object.</param>
          <param name="newHeading">The new heading.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions" Member="M:MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions.UpdatedHeading(MonoTouch.CoreLocation.ICLLocationManagerDelegate,MonoTouch.CoreLocation.CLLocationManager,MonoTouch.CoreLocation.CLHeading)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreLocation.ICLLocationManagerDelegate" />
      </Targets>
      <Member MemberName="UpdatedLocation">
        <MemberSignature Language="C#" Value="public static void UpdatedLocation (this CoreLocation.ICLLocationManagerDelegate This, CoreLocation.CLLocationManager manager, CoreLocation.CLLocation newLocation, CoreLocation.CLLocation oldLocation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdatedLocation(class CoreLocation.ICLLocationManagerDelegate This, class CoreLocation.CLLocationManager manager, class CoreLocation.CLLocation newLocation, class CoreLocation.CLLocation oldLocation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreLocation.ICLLocationManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
          <Parameter Name="newLocation" Type="MonoTouch.CoreLocation.CLLocation" />
          <Parameter Name="oldLocation" Type="MonoTouch.CoreLocation.CLLocation" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">The  for which this is the delegate object.</param>
          <param name="newLocation">To be added.</param>
          <param name="oldLocation">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions" Member="M:MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions.UpdatedLocation(MonoTouch.CoreLocation.ICLLocationManagerDelegate,MonoTouch.CoreLocation.CLLocationManager,MonoTouch.CoreLocation.CLLocation,MonoTouch.CoreLocation.CLLocation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreMedia.ICMAttachmentBearer" />
      </Targets>
      <Member MemberName="GetAttachment&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static T GetAttachment&lt;T&gt; (this CoreMedia.ICMAttachmentBearer target, string key, out CoreMedia.CMAttachmentMode attachmentModeOut) where T : class, ObjCRuntime.INativeObject;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetAttachment&lt;class (class ObjCRuntime.INativeObject) T&gt;(class CoreMedia.ICMAttachmentBearer target, string key, valuetype CoreMedia.CMAttachmentMode attachmentModeOut) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>T</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
              <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="target" Type="MonoTouch.CoreMedia.ICMAttachmentBearer" RefType="this" />
          <Parameter Name="key" Type="System.String" />
          <Parameter Name="attachmentModeOut" Type="MonoTouch.CoreMedia.CMAttachmentMode&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <typeparam name="T">The type of attachment to get.</typeparam>
          <param name="target">The object on which this method operates.</param>
          <param name="key">The string that identifies the attachment to return.</param>
          <param name="attachmentModeOut">An out parameter that receives a value that tells whether the attachment should propagate or not.</param>
          <summary>Returns the attachment that is identifed by <paramref name="key" /> and writes the attachment propagation mode to <paramref name="attachmentModeOut" />.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreMedia.CMAttachmentBearer" Member="M:MonoTouch.CoreMedia.CMAttachmentBearer.GetAttachment``1(MonoTouch.CoreMedia.ICMAttachmentBearer,System.String,MonoTouch.CoreMedia.CMAttachmentMode@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreMedia.ICMAttachmentBearer" />
      </Targets>
      <Member MemberName="GetAttachments">
        <MemberSignature Language="C#" Value="public static Foundation.NSDictionary GetAttachments (this CoreMedia.ICMAttachmentBearer target, CoreMedia.CMAttachmentMode attachmentMode);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSDictionary GetAttachments(class CoreMedia.ICMAttachmentBearer target, valuetype CoreMedia.CMAttachmentMode attachmentMode) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSDictionary</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="target" Type="MonoTouch.CoreMedia.ICMAttachmentBearer" RefType="this" />
          <Parameter Name="attachmentMode" Type="MonoTouch.CoreMedia.CMAttachmentMode" />
        </Parameters>
        <Docs>
          <param name="target">The object on which this method operates.</param>
          <param name="attachmentMode">An out parameter that receives a value that tells whether the attachments should propagate or not.</param>
          <summary>Returns an array of all the bearer's attachments and the attachment propagation mode to <paramref name="attachmentMode" />.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreMedia.CMAttachmentBearer" Member="M:MonoTouch.CoreMedia.CMAttachmentBearer.GetAttachments(MonoTouch.CoreMedia.ICMAttachmentBearer,MonoTouch.CoreMedia.CMAttachmentMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreMedia.ICMAttachmentBearer" />
      </Targets>
      <Member MemberName="GetAttachments&lt;TKey,TValue&gt;">
        <MemberSignature Language="C#" Value="public static Foundation.NSDictionary&lt;TKey,TValue&gt; GetAttachments&lt;TKey,TValue&gt; (this CoreMedia.ICMAttachmentBearer target, CoreMedia.CMAttachmentMode attachmentMode) where TKey : class, ObjCRuntime.INativeObject where TValue : class, ObjCRuntime.INativeObject;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSDictionary`2&lt;!!TKey, !!TValue&gt; GetAttachments&lt;class (class ObjCRuntime.INativeObject) TKey, class (class ObjCRuntime.INativeObject) TValue&gt;(class CoreMedia.ICMAttachmentBearer target, valuetype CoreMedia.CMAttachmentMode attachmentMode) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSDictionary&lt;TKey,TValue&gt;</ReturnType>
        </ReturnValue>
        <TypeParameters />
        <Parameters>
          <Parameter Name="target" Type="MonoTouch.CoreMedia.ICMAttachmentBearer" RefType="this" />
          <Parameter Name="attachmentMode" Type="MonoTouch.CoreMedia.CMAttachmentMode" />
        </Parameters>
        <Docs>
          <typeparam name="TKey">To be added.</typeparam>
          <typeparam name="TValue">To be added.</typeparam>
          <param name="target">To be added.</param>
          <param name="attachmentMode">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreMedia.CMAttachmentBearer" Member="M:MonoTouch.CoreMedia.CMAttachmentBearer.GetAttachments``2(MonoTouch.CoreMedia.ICMAttachmentBearer,MonoTouch.CoreMedia.CMAttachmentMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreMedia.ICMAttachmentBearer" />
      </Targets>
      <Member MemberName="PropagateAttachments">
        <MemberSignature Language="C#" Value="public static void PropagateAttachments (this CoreMedia.ICMAttachmentBearer source, CoreMedia.ICMAttachmentBearer destination);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PropagateAttachments(class CoreMedia.ICMAttachmentBearer source, class CoreMedia.ICMAttachmentBearer destination) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="source" Type="MonoTouch.CoreMedia.ICMAttachmentBearer" RefType="this" />
          <Parameter Name="destination" Type="MonoTouch.CoreMedia.ICMAttachmentBearer" />
        </Parameters>
        <Docs>
          <param name="source">The source bearer.</param>
          <param name="destination">The destination bearer.</param>
          <summary>Propagates the attachments that belong to <paramref name="source" /> and are allowed to propagate to <paramref name="destination" />.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreMedia.CMAttachmentBearer" Member="M:MonoTouch.CoreMedia.CMAttachmentBearer.PropagateAttachments(MonoTouch.CoreMedia.ICMAttachmentBearer,MonoTouch.CoreMedia.ICMAttachmentBearer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreMedia.ICMAttachmentBearer" />
      </Targets>
      <Member MemberName="RemoveAllAttachments">
        <MemberSignature Language="C#" Value="public static void RemoveAllAttachments (this CoreMedia.ICMAttachmentBearer target);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveAllAttachments(class CoreMedia.ICMAttachmentBearer target) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="target" Type="MonoTouch.CoreMedia.ICMAttachmentBearer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="target">The object on which this method operates.</param>
          <summary>Removes all of <paramref name="target" />'s attachment.'</summary>
        </Docs>
        <Link Type="MonoTouch.CoreMedia.CMAttachmentBearer" Member="M:MonoTouch.CoreMedia.CMAttachmentBearer.RemoveAllAttachments(MonoTouch.CoreMedia.ICMAttachmentBearer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreMedia.ICMAttachmentBearer" />
      </Targets>
      <Member MemberName="RemoveAttachment">
        <MemberSignature Language="C#" Value="public static void RemoveAttachment (this CoreMedia.ICMAttachmentBearer target, string key);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveAttachment(class CoreMedia.ICMAttachmentBearer target, string key) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="target" Type="MonoTouch.CoreMedia.ICMAttachmentBearer" RefType="this" />
          <Parameter Name="key" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="target">The object on which this method operates.</param>
          <param name="key">The string that identifies the attachment to remove.</param>
          <summary>Removes the attachment that is identifed by <paramref name="key" />.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreMedia.CMAttachmentBearer" Member="M:MonoTouch.CoreMedia.CMAttachmentBearer.RemoveAttachment(MonoTouch.CoreMedia.ICMAttachmentBearer,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreMedia.ICMAttachmentBearer" />
      </Targets>
      <Member MemberName="SetAttachment">
        <MemberSignature Language="C#" Value="public static void SetAttachment (this CoreMedia.ICMAttachmentBearer target, string key, ObjCRuntime.INativeObject value, CoreMedia.CMAttachmentMode attachmentMode);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAttachment(class CoreMedia.ICMAttachmentBearer target, string key, class ObjCRuntime.INativeObject value, valuetype CoreMedia.CMAttachmentMode attachmentMode) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="target" Type="MonoTouch.CoreMedia.ICMAttachmentBearer" RefType="this" />
          <Parameter Name="key" Type="System.String" />
          <Parameter Name="value" Type="MonoTouch.ObjCRuntime.INativeObject" />
          <Parameter Name="attachmentMode" Type="MonoTouch.CoreMedia.CMAttachmentMode" />
        </Parameters>
        <Docs>
          <param name="target">The object on which this method operates.</param>
          <param name="key">The string that identifies the attachment to set.</param>
          <param name="value">The object to attach.</param>
          <param name="attachmentMode">A value that tells whether the attachment should propagate or not.</param>
          <summary>Attaches <paramref name="value" /> to the bearer with the specified <paramref name="key" /> and <paramref name="attachmentMode" />.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreMedia.CMAttachmentBearer" Member="M:MonoTouch.CoreMedia.CMAttachmentBearer.SetAttachment(MonoTouch.CoreMedia.ICMAttachmentBearer,System.String,MonoTouch.ObjCRuntime.INativeObject,MonoTouch.CoreMedia.CMAttachmentMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreMedia.ICMAttachmentBearer" />
      </Targets>
      <Member MemberName="SetAttachments">
        <MemberSignature Language="C#" Value="public static void SetAttachments (this CoreMedia.ICMAttachmentBearer target, Foundation.NSDictionary theAttachments, CoreMedia.CMAttachmentMode attachmentMode);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAttachments(class CoreMedia.ICMAttachmentBearer target, class Foundation.NSDictionary theAttachments, valuetype CoreMedia.CMAttachmentMode attachmentMode) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="target" Type="MonoTouch.CoreMedia.ICMAttachmentBearer" RefType="this" />
          <Parameter Name="theAttachments" Type="MonoTouch.Foundation.NSDictionary" />
          <Parameter Name="attachmentMode" Type="MonoTouch.CoreMedia.CMAttachmentMode" />
        </Parameters>
        <Docs>
          <param name="target">The object on which this method operates.</param>
          <param name="theAttachments">The objects to attach to the bearer.</param>
          <param name="attachmentMode">The attachment mode to use for all the attachments in <paramref name="theAttachments" />.</param>
          <summary>Attaches <paramref name="theAttachments" /> to the bearer with the specified <paramref name="attachmentMode" />.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreMedia.CMAttachmentBearer" Member="M:MonoTouch.CoreMedia.CMAttachmentBearer.SetAttachments(MonoTouch.CoreMedia.ICMAttachmentBearer,MonoTouch.Foundation.NSDictionary,MonoTouch.CoreMedia.CMAttachmentMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreML.MLModelError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this CoreML.MLModelError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype CoreML.MLModelError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CoreML.MLModelError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>Gets the domain of the <see cref="T:CoreML.MLModelError" />.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreML.MLModelErrorExtensions" Member="M:MonoTouch.CoreML.MLModelErrorExtensions.GetDomain(MonoTouch.CoreML.MLModelError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreNFC.NFCReaderError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this CoreNFC.NFCReaderError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype CoreNFC.NFCReaderError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CoreNFC.NFCReaderError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>Gets the error domain for <c>this</c><see cref="T:CoreNFC.NFCReaderError" /></summary>
        </Docs>
        <Link Type="MonoTouch.CoreNFC.NFCReaderErrorExtensions" Member="M:MonoTouch.CoreNFC.NFCReaderErrorExtensions.GetDomain(MonoTouch.CoreNFC.NFCReaderError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreSpotlight.CSIndexErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this CoreSpotlight.CSIndexErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype CoreSpotlight.CSIndexErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CoreSpotlight.CSIndexErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.CoreSpotlight.CSIndexErrorCode value</summary>
        </Docs>
        <Link Type="MonoTouch.CoreSpotlight.CSIndexErrorCodeExtensions" Member="M:MonoTouch.CoreSpotlight.CSIndexErrorCodeExtensions.GetDomain(MonoTouch.CoreSpotlight.CSIndexErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreSpotlight.CSSearchableIndex" />
      </Targets>
      <Member MemberName="BeginIndexBatch">
        <MemberSignature Language="C#" Value="public static void BeginIndexBatch (this CoreSpotlight.CSSearchableIndex This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BeginIndexBatch(class CoreSpotlight.CSSearchableIndex This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreSpotlight.CSSearchableIndex" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Begins an index update batch.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreSpotlight.CSSearchableIndex_CSOptionalBatchingExtension" Member="M:MonoTouch.CoreSpotlight.CSSearchableIndex_CSOptionalBatchingExtension.BeginIndexBatch(MonoTouch.CoreSpotlight.CSSearchableIndex)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreSpotlight.CSSearchableIndex" />
      </Targets>
      <Member MemberName="EndIndexBatch">
        <MemberSignature Language="C#" Value="public static void EndIndexBatch (this CoreSpotlight.CSSearchableIndex This, Foundation.NSData clientState, Action&lt;Foundation.NSError&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndIndexBatch(class CoreSpotlight.CSSearchableIndex This, class Foundation.NSData clientState, class System.Action`1&lt;class Foundation.NSError&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreSpotlight.CSSearchableIndex" RefType="this" />
          <Parameter Name="clientState" Type="MonoTouch.Foundation.NSData" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSError&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V7))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="clientState">To be added.</param>
          <param name="completionHandler">
            <para>To be added.</para>
            <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
          </param>
          <summary>Ends an index update batch, relying on the 250 bytes of information for crash recovery, and calls <paramref name="completionHandler" /> when finished.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreSpotlight.CSSearchableIndex_CSOptionalBatchingExtension" Member="M:MonoTouch.CoreSpotlight.CSSearchableIndex_CSOptionalBatchingExtension.EndIndexBatch(MonoTouch.CoreSpotlight.CSSearchableIndex,MonoTouch.Foundation.NSData,System.Action{MonoTouch.Foundation.NSError})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreSpotlight.CSSearchableIndex" />
      </Targets>
      <Member MemberName="FetchLastClientState">
        <MemberSignature Language="C#" Value="public static void FetchLastClientState (this CoreSpotlight.CSSearchableIndex This, CoreSpotlight.CSSearchableIndexFetchHandler completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FetchLastClientState(class CoreSpotlight.CSSearchableIndex This, class CoreSpotlight.CSSearchableIndexFetchHandler completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreSpotlight.CSSearchableIndex" RefType="this" />
          <Parameter Name="completionHandler" Type="MonoTouch.CoreSpotlight.CSSearchableIndexFetchHandler">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDCSSearchableIndexFetchHandler))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>Fetches the client state and runs <paramref name="completionHandler" /> when finished..</summary>
        </Docs>
        <Link Type="MonoTouch.CoreSpotlight.CSSearchableIndex_CSOptionalBatchingExtension" Member="M:MonoTouch.CoreSpotlight.CSSearchableIndex_CSOptionalBatchingExtension.FetchLastClientState(MonoTouch.CoreSpotlight.CSSearchableIndex,MonoTouch.CoreSpotlight.CSSearchableIndexFetchHandler)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreSpotlight.ICSSearchableIndexDelegate" />
      </Targets>
      <Member MemberName="DidFinishThrottle">
        <MemberSignature Language="C#" Value="public static void DidFinishThrottle (this CoreSpotlight.ICSSearchableIndexDelegate This, CoreSpotlight.CSSearchableIndex searchableIndex);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinishThrottle(class CoreSpotlight.ICSSearchableIndexDelegate This, class CoreSpotlight.CSSearchableIndex searchableIndex) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreSpotlight.ICSSearchableIndexDelegate" RefType="this" />
          <Parameter Name="searchableIndex" Type="MonoTouch.CoreSpotlight.CSSearchableIndex" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchableIndex">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreSpotlight.CSSearchableIndexDelegate_Extensions" Member="M:MonoTouch.CoreSpotlight.CSSearchableIndexDelegate_Extensions.DidFinishThrottle(MonoTouch.CoreSpotlight.ICSSearchableIndexDelegate,MonoTouch.CoreSpotlight.CSSearchableIndex)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreSpotlight.ICSSearchableIndexDelegate" />
      </Targets>
      <Member MemberName="DidThrottle">
        <MemberSignature Language="C#" Value="public static void DidThrottle (this CoreSpotlight.ICSSearchableIndexDelegate This, CoreSpotlight.CSSearchableIndex searchableIndex);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidThrottle(class CoreSpotlight.ICSSearchableIndexDelegate This, class CoreSpotlight.CSSearchableIndex searchableIndex) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreSpotlight.ICSSearchableIndexDelegate" RefType="this" />
          <Parameter Name="searchableIndex" Type="MonoTouch.CoreSpotlight.CSSearchableIndex" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchableIndex">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreSpotlight.CSSearchableIndexDelegate_Extensions" Member="M:MonoTouch.CoreSpotlight.CSSearchableIndexDelegate_Extensions.DidThrottle(MonoTouch.CoreSpotlight.ICSSearchableIndexDelegate,MonoTouch.CoreSpotlight.CSSearchableIndex)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreSpotlight.ICSSearchableIndexDelegate" />
      </Targets>
      <Member MemberName="GetData">
        <MemberSignature Language="C#" Value="public static Foundation.NSData GetData (this CoreSpotlight.ICSSearchableIndexDelegate This, CoreSpotlight.CSSearchableIndex searchableIndex, string itemIdentifier, string typeIdentifier, out Foundation.NSError outError);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSData GetData(class CoreSpotlight.ICSSearchableIndexDelegate This, class CoreSpotlight.CSSearchableIndex searchableIndex, string itemIdentifier, string typeIdentifier, class Foundation.NSError outError) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSData</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreSpotlight.ICSSearchableIndexDelegate" RefType="this" />
          <Parameter Name="searchableIndex" Type="MonoTouch.CoreSpotlight.CSSearchableIndex" />
          <Parameter Name="itemIdentifier" Type="System.String" />
          <Parameter Name="typeIdentifier" Type="System.String" />
          <Parameter Name="outError" Type="MonoTouch.Foundation.NSError&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchableIndex">To be added.</param>
          <param name="itemIdentifier">To be added.</param>
          <param name="typeIdentifier">To be added.</param>
          <param name="outError">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreSpotlight.CSSearchableIndexDelegate_Extensions" Member="M:MonoTouch.CoreSpotlight.CSSearchableIndexDelegate_Extensions.GetData(MonoTouch.CoreSpotlight.ICSSearchableIndexDelegate,MonoTouch.CoreSpotlight.CSSearchableIndex,System.String,System.String,MonoTouch.Foundation.NSError@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreSpotlight.ICSSearchableIndexDelegate" />
      </Targets>
      <Member MemberName="GetFileUrl">
        <MemberSignature Language="C#" Value="public static Foundation.NSUrl GetFileUrl (this CoreSpotlight.ICSSearchableIndexDelegate This, CoreSpotlight.CSSearchableIndex searchableIndex, string itemIdentifier, string typeIdentifier, bool inPlace, out Foundation.NSError outError);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSUrl GetFileUrl(class CoreSpotlight.ICSSearchableIndexDelegate This, class CoreSpotlight.CSSearchableIndex searchableIndex, string itemIdentifier, string typeIdentifier, bool inPlace, class Foundation.NSError outError) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSUrl</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreSpotlight.ICSSearchableIndexDelegate" RefType="this" />
          <Parameter Name="searchableIndex" Type="MonoTouch.CoreSpotlight.CSSearchableIndex" />
          <Parameter Name="itemIdentifier" Type="System.String" />
          <Parameter Name="typeIdentifier" Type="System.String" />
          <Parameter Name="inPlace" Type="System.Boolean" />
          <Parameter Name="outError" Type="MonoTouch.Foundation.NSError&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchableIndex">To be added.</param>
          <param name="itemIdentifier">To be added.</param>
          <param name="typeIdentifier">To be added.</param>
          <param name="inPlace">To be added.</param>
          <param name="outError">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreSpotlight.CSSearchableIndexDelegate_Extensions" Member="M:MonoTouch.CoreSpotlight.CSSearchableIndexDelegate_Extensions.GetFileUrl(MonoTouch.CoreSpotlight.ICSSearchableIndexDelegate,MonoTouch.CoreSpotlight.CSSearchableIndex,System.String,System.String,System.Boolean,MonoTouch.Foundation.NSError@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreSpotlight.CSSearchQueryErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this CoreSpotlight.CSSearchQueryErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype CoreSpotlight.CSSearchQueryErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CoreSpotlight.CSSearchQueryErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.CoreSpotlight.CSSearchQueryErrorCode value</summary>
        </Docs>
        <Link Type="MonoTouch.CoreSpotlight.CSSearchQueryErrorCodeExtensions" Member="M:MonoTouch.CoreSpotlight.CSSearchQueryErrorCodeExtensions.GetDomain(MonoTouch.CoreSpotlight.CSSearchQueryErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreText.CTFontManagerError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this CoreText.CTFontManagerError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype CoreText.CTFontManagerError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CoreText.CTFontManagerError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.CoreText.CTFontManagerError value</summary>
        </Docs>
        <Link Type="MonoTouch.CoreText.CTFontManagerErrorExtensions" Member="M:MonoTouch.CoreText.CTFontManagerErrorExtensions.GetDomain(MonoTouch.CoreText.CTFontManagerError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.DeviceCheck.DCError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this DeviceCheck.DCError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype DeviceCheck.DCError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.DeviceCheck.DCError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.DeviceCheck.DCErrorExtensions" Member="M:MonoTouch.DeviceCheck.DCErrorExtensions.GetDomain(MonoTouch.DeviceCheck.DCError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.EventKit.EKErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this EventKit.EKErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype EventKit.EKErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.EventKit.EKErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.EventKit.EKErrorCode value</summary>
        </Docs>
        <Link Type="MonoTouch.EventKit.EKErrorCodeExtensions" Member="M:MonoTouch.EventKit.EKErrorCodeExtensions.GetDomain(MonoTouch.EventKit.EKErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.EventKitUI.IEKCalendarChooserDelegate" />
      </Targets>
      <Member MemberName="Cancelled">
        <MemberSignature Language="C#" Value="public static void Cancelled (this EventKitUI.IEKCalendarChooserDelegate This, EventKitUI.EKCalendarChooser calendarChooser);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Cancelled(class EventKitUI.IEKCalendarChooserDelegate This, class EventKitUI.EKCalendarChooser calendarChooser) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.EventKitUI.IEKCalendarChooserDelegate" RefType="this" />
          <Parameter Name="calendarChooser" Type="MonoTouch.EventKitUI.EKCalendarChooser" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="calendarChooser">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.EventKitUI.EKCalendarChooserDelegate_Extensions" Member="M:MonoTouch.EventKitUI.EKCalendarChooserDelegate_Extensions.Cancelled(MonoTouch.EventKitUI.IEKCalendarChooserDelegate,MonoTouch.EventKitUI.EKCalendarChooser)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.EventKitUI.IEKCalendarChooserDelegate" />
      </Targets>
      <Member MemberName="Finished">
        <MemberSignature Language="C#" Value="public static void Finished (this EventKitUI.IEKCalendarChooserDelegate This, EventKitUI.EKCalendarChooser calendarChooser);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Finished(class EventKitUI.IEKCalendarChooserDelegate This, class EventKitUI.EKCalendarChooser calendarChooser) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.EventKitUI.IEKCalendarChooserDelegate" RefType="this" />
          <Parameter Name="calendarChooser" Type="MonoTouch.EventKitUI.EKCalendarChooser" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="calendarChooser">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.EventKitUI.EKCalendarChooserDelegate_Extensions" Member="M:MonoTouch.EventKitUI.EKCalendarChooserDelegate_Extensions.Finished(MonoTouch.EventKitUI.IEKCalendarChooserDelegate,MonoTouch.EventKitUI.EKCalendarChooser)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.EventKitUI.IEKCalendarChooserDelegate" />
      </Targets>
      <Member MemberName="SelectionChanged">
        <MemberSignature Language="C#" Value="public static void SelectionChanged (this EventKitUI.IEKCalendarChooserDelegate This, EventKitUI.EKCalendarChooser calendarChooser);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SelectionChanged(class EventKitUI.IEKCalendarChooserDelegate This, class EventKitUI.EKCalendarChooser calendarChooser) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.EventKitUI.IEKCalendarChooserDelegate" RefType="this" />
          <Parameter Name="calendarChooser" Type="MonoTouch.EventKitUI.EKCalendarChooser" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="calendarChooser">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.EventKitUI.EKCalendarChooserDelegate_Extensions" Member="M:MonoTouch.EventKitUI.EKCalendarChooserDelegate_Extensions.SelectionChanged(MonoTouch.EventKitUI.IEKCalendarChooserDelegate,MonoTouch.EventKitUI.EKCalendarChooser)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.EventKitUI.IEKEventEditViewDelegate" />
      </Targets>
      <Member MemberName="GetDefaultCalendarForNewEvents">
        <MemberSignature Language="C#" Value="public static EventKit.EKCalendar GetDefaultCalendarForNewEvents (this EventKitUI.IEKEventEditViewDelegate This, EventKitUI.EKEventEditViewController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class EventKit.EKCalendar GetDefaultCalendarForNewEvents(class EventKitUI.IEKEventEditViewDelegate This, class EventKitUI.EKEventEditViewController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.EventKit.EKCalendar</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.EventKitUI.IEKEventEditViewDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.EventKitUI.EKEventEditViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.EventKitUI.EKEventEditViewDelegate_Extensions" Member="M:MonoTouch.EventKitUI.EKEventEditViewDelegate_Extensions.GetDefaultCalendarForNewEvents(MonoTouch.EventKitUI.IEKEventEditViewDelegate,MonoTouch.EventKitUI.EKEventEditViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ExternalAccessory.IEAAccessoryDelegate" />
      </Targets>
      <Member MemberName="Disconnected">
        <MemberSignature Language="C#" Value="public static void Disconnected (this ExternalAccessory.IEAAccessoryDelegate This, ExternalAccessory.EAAccessory accessory);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Disconnected(class ExternalAccessory.IEAAccessoryDelegate This, class ExternalAccessory.EAAccessory accessory) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ExternalAccessory.IEAAccessoryDelegate" RefType="this" />
          <Parameter Name="accessory" Type="MonoTouch.ExternalAccessory.EAAccessory" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="accessory">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ExternalAccessory.EAAccessoryDelegate_Extensions" Member="M:MonoTouch.ExternalAccessory.EAAccessoryDelegate_Extensions.Disconnected(MonoTouch.ExternalAccessory.IEAAccessoryDelegate,MonoTouch.ExternalAccessory.EAAccessory)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ExternalAccessory.EABluetoothAccessoryPickerError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this ExternalAccessory.EABluetoothAccessoryPickerError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype ExternalAccessory.EABluetoothAccessoryPickerError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.ExternalAccessory.EABluetoothAccessoryPickerError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.ExternalAccessory.EABluetoothAccessoryPickerError value</summary>
        </Docs>
        <Link Type="MonoTouch.ExternalAccessory.EABluetoothAccessoryPickerErrorExtensions" Member="M:MonoTouch.ExternalAccessory.EABluetoothAccessoryPickerErrorExtensions.GetDomain(MonoTouch.ExternalAccessory.EABluetoothAccessoryPickerError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.FileProvider.INSFileProviderEnumerator" />
      </Targets>
      <Member MemberName="CurrentSyncAnchor">
        <MemberSignature Language="C#" Value="public static void CurrentSyncAnchor (this FileProvider.INSFileProviderEnumerator This, Action&lt;Foundation.NSData&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CurrentSyncAnchor(class FileProvider.INSFileProviderEnumerator This, class System.Action`1&lt;class Foundation.NSData&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.FileProvider.INSFileProviderEnumerator" RefType="this" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSData&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V26))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.FileProvider.NSFileProviderEnumerator_Extensions" Member="M:MonoTouch.FileProvider.NSFileProviderEnumerator_Extensions.CurrentSyncAnchor(MonoTouch.FileProvider.INSFileProviderEnumerator,System.Action{MonoTouch.Foundation.NSData})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.FileProvider.INSFileProviderEnumerator" />
      </Targets>
      <Member MemberName="EnumerateChanges">
        <MemberSignature Language="C#" Value="public static void EnumerateChanges (this FileProvider.INSFileProviderEnumerator This, FileProvider.INSFileProviderChangeObserver observer, Foundation.NSData syncAnchor);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnumerateChanges(class FileProvider.INSFileProviderEnumerator This, class FileProvider.INSFileProviderChangeObserver observer, class Foundation.NSData syncAnchor) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.FileProvider.INSFileProviderEnumerator" RefType="this" />
          <Parameter Name="observer" Type="MonoTouch.FileProvider.INSFileProviderChangeObserver" />
          <Parameter Name="syncAnchor" Type="MonoTouch.Foundation.NSData" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="observer">To be added.</param>
          <param name="syncAnchor">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.FileProvider.NSFileProviderEnumerator_Extensions" Member="M:MonoTouch.FileProvider.NSFileProviderEnumerator_Extensions.EnumerateChanges(MonoTouch.FileProvider.INSFileProviderEnumerator,MonoTouch.FileProvider.INSFileProviderChangeObserver,MonoTouch.Foundation.NSData)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.FileProvider.NSFileProviderError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this FileProvider.NSFileProviderError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype FileProvider.NSFileProviderError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.FileProvider.NSFileProviderError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.FileProvider.NSFileProviderErrorExtensions" Member="M:MonoTouch.FileProvider.NSFileProviderErrorExtensions.GetDomain(MonoTouch.FileProvider.NSFileProviderError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.FileProvider.INSFileProviderItem" />
      </Targets>
      <Member MemberName="GetCapabilities">
        <MemberSignature Language="C#" Value="public static FileProvider.NSFileProviderItemCapabilities GetCapabilities (this FileProvider.INSFileProviderItem This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype FileProvider.NSFileProviderItemCapabilities GetCapabilities(class FileProvider.INSFileProviderItem This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.FileProvider.NSFileProviderItemCapabilities</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.FileProvider.INSFileProviderItem" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.FileProvider.NSFileProviderItem_Extensions" Member="M:MonoTouch.FileProvider.NSFileProviderItem_Extensions.GetCapabilities(MonoTouch.FileProvider.INSFileProviderItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.FileProvider.INSFileProviderItem" />
      </Targets>
      <Member MemberName="GetChildItemCount">
        <MemberSignature Language="C#" Value="public static Foundation.NSNumber GetChildItemCount (this FileProvider.INSFileProviderItem This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSNumber GetChildItemCount(class FileProvider.INSFileProviderItem This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSNumber</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.FileProvider.INSFileProviderItem" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.FileProvider.NSFileProviderItem_Extensions" Member="M:MonoTouch.FileProvider.NSFileProviderItem_Extensions.GetChildItemCount(MonoTouch.FileProvider.INSFileProviderItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.FileProvider.INSFileProviderItem" />
      </Targets>
      <Member MemberName="GetContentModificationDate">
        <MemberSignature Language="C#" Value="public static Foundation.NSDate GetContentModificationDate (this FileProvider.INSFileProviderItem This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSDate GetContentModificationDate(class FileProvider.INSFileProviderItem This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSDate</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.FileProvider.INSFileProviderItem" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.FileProvider.NSFileProviderItem_Extensions" Member="M:MonoTouch.FileProvider.NSFileProviderItem_Extensions.GetContentModificationDate(MonoTouch.FileProvider.INSFileProviderItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.FileProvider.INSFileProviderItem" />
      </Targets>
      <Member MemberName="GetCreationDate">
        <MemberSignature Language="C#" Value="public static Foundation.NSDate GetCreationDate (this FileProvider.INSFileProviderItem This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSDate GetCreationDate(class FileProvider.INSFileProviderItem This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSDate</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.FileProvider.INSFileProviderItem" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.FileProvider.NSFileProviderItem_Extensions" Member="M:MonoTouch.FileProvider.NSFileProviderItem_Extensions.GetCreationDate(MonoTouch.FileProvider.INSFileProviderItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.FileProvider.INSFileProviderItem" />
      </Targets>
      <Member MemberName="GetDocumentSize">
        <MemberSignature Language="C#" Value="public static Foundation.NSNumber GetDocumentSize (this FileProvider.INSFileProviderItem This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSNumber GetDocumentSize(class FileProvider.INSFileProviderItem This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSNumber</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.FileProvider.INSFileProviderItem" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.FileProvider.NSFileProviderItem_Extensions" Member="M:MonoTouch.FileProvider.NSFileProviderItem_Extensions.GetDocumentSize(MonoTouch.FileProvider.INSFileProviderItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.FileProvider.INSFileProviderItem" />
      </Targets>
      <Member MemberName="GetDownloadingError">
        <MemberSignature Language="C#" Value="public static Foundation.NSError GetDownloadingError (this FileProvider.INSFileProviderItem This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSError GetDownloadingError(class FileProvider.INSFileProviderItem This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSError</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.FileProvider.INSFileProviderItem" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.FileProvider.NSFileProviderItem_Extensions" Member="M:MonoTouch.FileProvider.NSFileProviderItem_Extensions.GetDownloadingError(MonoTouch.FileProvider.INSFileProviderItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.FileProvider.INSFileProviderItem" />
      </Targets>
      <Member MemberName="GetFavoriteRank">
        <MemberSignature Language="C#" Value="public static Foundation.NSNumber GetFavoriteRank (this FileProvider.INSFileProviderItem This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSNumber GetFavoriteRank(class FileProvider.INSFileProviderItem This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSNumber</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.FileProvider.INSFileProviderItem" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.FileProvider.NSFileProviderItem_Extensions" Member="M:MonoTouch.FileProvider.NSFileProviderItem_Extensions.GetFavoriteRank(MonoTouch.FileProvider.INSFileProviderItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.FileProvider.INSFileProviderItem" />
      </Targets>
      <Member MemberName="GetLastUsedDate">
        <MemberSignature Language="C#" Value="public static Foundation.NSDate GetLastUsedDate (this FileProvider.INSFileProviderItem This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSDate GetLastUsedDate(class FileProvider.INSFileProviderItem This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSDate</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.FileProvider.INSFileProviderItem" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.FileProvider.NSFileProviderItem_Extensions" Member="M:MonoTouch.FileProvider.NSFileProviderItem_Extensions.GetLastUsedDate(MonoTouch.FileProvider.INSFileProviderItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.FileProvider.INSFileProviderItem" />
      </Targets>
      <Member MemberName="GetMostRecentEditorNameComponents">
        <MemberSignature Language="C#" Value="public static Foundation.NSPersonNameComponents GetMostRecentEditorNameComponents (this FileProvider.INSFileProviderItem This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSPersonNameComponents GetMostRecentEditorNameComponents(class FileProvider.INSFileProviderItem This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSPersonNameComponents</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.FileProvider.INSFileProviderItem" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.FileProvider.NSFileProviderItem_Extensions" Member="M:MonoTouch.FileProvider.NSFileProviderItem_Extensions.GetMostRecentEditorNameComponents(MonoTouch.FileProvider.INSFileProviderItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.FileProvider.INSFileProviderItem" />
      </Targets>
      <Member MemberName="GetOwnerNameComponents">
        <MemberSignature Language="C#" Value="public static Foundation.NSPersonNameComponents GetOwnerNameComponents (this FileProvider.INSFileProviderItem This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSPersonNameComponents GetOwnerNameComponents(class FileProvider.INSFileProviderItem This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSPersonNameComponents</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.FileProvider.INSFileProviderItem" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.FileProvider.NSFileProviderItem_Extensions" Member="M:MonoTouch.FileProvider.NSFileProviderItem_Extensions.GetOwnerNameComponents(MonoTouch.FileProvider.INSFileProviderItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.FileProvider.INSFileProviderItem" />
      </Targets>
      <Member MemberName="GetTagData">
        <MemberSignature Language="C#" Value="public static Foundation.NSData GetTagData (this FileProvider.INSFileProviderItem This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSData GetTagData(class FileProvider.INSFileProviderItem This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSData</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.FileProvider.INSFileProviderItem" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.FileProvider.NSFileProviderItem_Extensions" Member="M:MonoTouch.FileProvider.NSFileProviderItem_Extensions.GetTagData(MonoTouch.FileProvider.INSFileProviderItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.FileProvider.INSFileProviderItem" />
      </Targets>
      <Member MemberName="GetUploadingError">
        <MemberSignature Language="C#" Value="public static Foundation.NSError GetUploadingError (this FileProvider.INSFileProviderItem This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSError GetUploadingError(class FileProvider.INSFileProviderItem This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSError</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.FileProvider.INSFileProviderItem" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.FileProvider.NSFileProviderItem_Extensions" Member="M:MonoTouch.FileProvider.NSFileProviderItem_Extensions.GetUploadingError(MonoTouch.FileProvider.INSFileProviderItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.FileProvider.INSFileProviderItem" />
      </Targets>
      <Member MemberName="GetUserInfo">
        <MemberSignature Language="C#" Value="public static Foundation.NSDictionary GetUserInfo (this FileProvider.INSFileProviderItem This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSDictionary GetUserInfo(class FileProvider.INSFileProviderItem This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSDictionary</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.FileProvider.INSFileProviderItem" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.FileProvider.NSFileProviderItem_Extensions" Member="M:MonoTouch.FileProvider.NSFileProviderItem_Extensions.GetUserInfo(MonoTouch.FileProvider.INSFileProviderItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.FileProvider.INSFileProviderItem" />
      </Targets>
      <Member MemberName="GetVersionIdentifier">
        <MemberSignature Language="C#" Value="public static Foundation.NSData GetVersionIdentifier (this FileProvider.INSFileProviderItem This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSData GetVersionIdentifier(class FileProvider.INSFileProviderItem This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSData</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.FileProvider.INSFileProviderItem" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.FileProvider.NSFileProviderItem_Extensions" Member="M:MonoTouch.FileProvider.NSFileProviderItem_Extensions.GetVersionIdentifier(MonoTouch.FileProvider.INSFileProviderItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.FileProvider.INSFileProviderItem" />
      </Targets>
      <Member MemberName="IsDownloaded">
        <MemberSignature Language="C#" Value="public static bool IsDownloaded (this FileProvider.INSFileProviderItem This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDownloaded(class FileProvider.INSFileProviderItem This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.FileProvider.INSFileProviderItem" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.FileProvider.NSFileProviderItem_Extensions" Member="M:MonoTouch.FileProvider.NSFileProviderItem_Extensions.IsDownloaded(MonoTouch.FileProvider.INSFileProviderItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.FileProvider.INSFileProviderItem" />
      </Targets>
      <Member MemberName="IsDownloading">
        <MemberSignature Language="C#" Value="public static bool IsDownloading (this FileProvider.INSFileProviderItem This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDownloading(class FileProvider.INSFileProviderItem This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.FileProvider.INSFileProviderItem" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.FileProvider.NSFileProviderItem_Extensions" Member="M:MonoTouch.FileProvider.NSFileProviderItem_Extensions.IsDownloading(MonoTouch.FileProvider.INSFileProviderItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.FileProvider.INSFileProviderItem" />
      </Targets>
      <Member MemberName="IsMostRecentVersionDownloaded">
        <MemberSignature Language="C#" Value="public static bool IsMostRecentVersionDownloaded (this FileProvider.INSFileProviderItem This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsMostRecentVersionDownloaded(class FileProvider.INSFileProviderItem This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.FileProvider.INSFileProviderItem" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.FileProvider.NSFileProviderItem_Extensions" Member="M:MonoTouch.FileProvider.NSFileProviderItem_Extensions.IsMostRecentVersionDownloaded(MonoTouch.FileProvider.INSFileProviderItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.FileProvider.INSFileProviderItem" />
      </Targets>
      <Member MemberName="IsShared">
        <MemberSignature Language="C#" Value="public static bool IsShared (this FileProvider.INSFileProviderItem This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsShared(class FileProvider.INSFileProviderItem This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.FileProvider.INSFileProviderItem" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.FileProvider.NSFileProviderItem_Extensions" Member="M:MonoTouch.FileProvider.NSFileProviderItem_Extensions.IsShared(MonoTouch.FileProvider.INSFileProviderItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.FileProvider.INSFileProviderItem" />
      </Targets>
      <Member MemberName="IsSharedByCurrentUser">
        <MemberSignature Language="C#" Value="public static bool IsSharedByCurrentUser (this FileProvider.INSFileProviderItem This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSharedByCurrentUser(class FileProvider.INSFileProviderItem This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.FileProvider.INSFileProviderItem" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.FileProvider.NSFileProviderItem_Extensions" Member="M:MonoTouch.FileProvider.NSFileProviderItem_Extensions.IsSharedByCurrentUser(MonoTouch.FileProvider.INSFileProviderItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.FileProvider.INSFileProviderItem" />
      </Targets>
      <Member MemberName="IsTrashed">
        <MemberSignature Language="C#" Value="public static bool IsTrashed (this FileProvider.INSFileProviderItem This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsTrashed(class FileProvider.INSFileProviderItem This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.FileProvider.INSFileProviderItem" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.FileProvider.NSFileProviderItem_Extensions" Member="M:MonoTouch.FileProvider.NSFileProviderItem_Extensions.IsTrashed(MonoTouch.FileProvider.INSFileProviderItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.FileProvider.INSFileProviderItem" />
      </Targets>
      <Member MemberName="IsUploaded">
        <MemberSignature Language="C#" Value="public static bool IsUploaded (this FileProvider.INSFileProviderItem This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUploaded(class FileProvider.INSFileProviderItem This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.FileProvider.INSFileProviderItem" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.FileProvider.NSFileProviderItem_Extensions" Member="M:MonoTouch.FileProvider.NSFileProviderItem_Extensions.IsUploaded(MonoTouch.FileProvider.INSFileProviderItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.FileProvider.INSFileProviderItem" />
      </Targets>
      <Member MemberName="IsUploading">
        <MemberSignature Language="C#" Value="public static bool IsUploading (this FileProvider.INSFileProviderItem This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUploading(class FileProvider.INSFileProviderItem This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.FileProvider.INSFileProviderItem" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.FileProvider.NSFileProviderItem_Extensions" Member="M:MonoTouch.FileProvider.NSFileProviderItem_Extensions.IsUploading(MonoTouch.FileProvider.INSFileProviderItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.FileProviderUI.FPUIExtensionErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this FileProviderUI.FPUIExtensionErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype FileProviderUI.FPUIExtensionErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.FileProviderUI.FPUIExtensionErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>Returns the error domain of the <see cref="T:FileProviderUI.FPUIExtensionErrorCode" /> enumeration.</summary>
        </Docs>
        <Link Type="MonoTouch.FileProviderUI.FPUIExtensionErrorCodeExtensions" Member="M:MonoTouch.FileProviderUI.FPUIExtensionErrorCodeExtensions.GetDomain(MonoTouch.FileProviderUI.FPUIExtensionErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSCacheDelegate" />
      </Targets>
      <Member MemberName="WillEvictObject">
        <MemberSignature Language="C#" Value="public static void WillEvictObject (this Foundation.INSCacheDelegate This, Foundation.NSCache cache, Foundation.NSObject obj);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillEvictObject(class Foundation.INSCacheDelegate This, class Foundation.NSCache cache, class Foundation.NSObject obj) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSCacheDelegate" RefType="this" />
          <Parameter Name="cache" Type="MonoTouch.Foundation.NSCache" />
          <Parameter Name="obj" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="cache">To be added.</param>
          <param name="obj">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSCacheDelegate_Extensions" Member="M:MonoTouch.Foundation.NSCacheDelegate_Extensions.WillEvictObject(MonoTouch.Foundation.INSCacheDelegate,MonoTouch.Foundation.NSCache,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSFileManager" />
      </Targets>
      <Member MemberName="GetTemporaryDirectory">
        <MemberSignature Language="C#" Value="public static Foundation.NSUrl GetTemporaryDirectory (this Foundation.NSFileManager This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSUrl GetTemporaryDirectory(class Foundation.NSFileManager This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSUrl</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSFileManager" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFileManager_NSUserInformation" Member="M:MonoTouch.Foundation.NSFileManager_NSUserInformation.GetTemporaryDirectory(MonoTouch.Foundation.NSFileManager)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFileManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldCopyItemAtPath">
        <MemberSignature Language="C#" Value="public static bool ShouldCopyItemAtPath (this Foundation.INSFileManagerDelegate This, Foundation.NSFileManager fm, Foundation.NSString srcPath, Foundation.NSString dstPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldCopyItemAtPath(class Foundation.INSFileManagerDelegate This, class Foundation.NSFileManager fm, class Foundation.NSString srcPath, class Foundation.NSString dstPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFileManagerDelegate" RefType="this" />
          <Parameter Name="fm" Type="MonoTouch.Foundation.NSFileManager" />
          <Parameter Name="srcPath" Type="MonoTouch.Foundation.NSString" />
          <Parameter Name="dstPath" Type="MonoTouch.Foundation.NSString" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="fm">To be added.</param>
          <param name="srcPath">To be added.</param>
          <param name="dstPath">To be added.</param>
          <summary>Creates a copy of this object, allocating memory from the specified zone or from the default zone if the argument is null.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFileManagerDelegate_Extensions" Member="M:MonoTouch.Foundation.NSFileManagerDelegate_Extensions.ShouldCopyItemAtPath(MonoTouch.Foundation.INSFileManagerDelegate,MonoTouch.Foundation.NSFileManager,MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSString)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFileManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldCopyItemAtPath">
        <MemberSignature Language="C#" Value="public static bool ShouldCopyItemAtPath (this Foundation.INSFileManagerDelegate This, Foundation.NSFileManager fileManager, string srcPath, string dstPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldCopyItemAtPath(class Foundation.INSFileManagerDelegate This, class Foundation.NSFileManager fileManager, string srcPath, string dstPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFileManagerDelegate" RefType="this" />
          <Parameter Name="fileManager" Type="MonoTouch.Foundation.NSFileManager" />
          <Parameter Name="srcPath" Type="System.String" />
          <Parameter Name="dstPath" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="fileManager">To be added.</param>
          <param name="srcPath">To be added.</param>
          <param name="dstPath">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFileManagerDelegate_Extensions" Member="M:MonoTouch.Foundation.NSFileManagerDelegate_Extensions.ShouldCopyItemAtPath(MonoTouch.Foundation.INSFileManagerDelegate,MonoTouch.Foundation.NSFileManager,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFileManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldCopyItemAtUrl">
        <MemberSignature Language="C#" Value="public static bool ShouldCopyItemAtUrl (this Foundation.INSFileManagerDelegate This, Foundation.NSFileManager fm, Foundation.NSUrl srcUrl, Foundation.NSUrl dstUrl);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldCopyItemAtUrl(class Foundation.INSFileManagerDelegate This, class Foundation.NSFileManager fm, class Foundation.NSUrl srcUrl, class Foundation.NSUrl dstUrl) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFileManagerDelegate" RefType="this" />
          <Parameter Name="fm" Type="MonoTouch.Foundation.NSFileManager" />
          <Parameter Name="srcUrl" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="dstUrl" Type="MonoTouch.Foundation.NSUrl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="fm">To be added.</param>
          <param name="srcUrl">To be added.</param>
          <param name="dstUrl">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFileManagerDelegate_Extensions" Member="M:MonoTouch.Foundation.NSFileManagerDelegate_Extensions.ShouldCopyItemAtUrl(MonoTouch.Foundation.INSFileManagerDelegate,MonoTouch.Foundation.NSFileManager,MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSUrl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFileManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldLinkItemAtPath">
        <MemberSignature Language="C#" Value="public static bool ShouldLinkItemAtPath (this Foundation.INSFileManagerDelegate This, Foundation.NSFileManager fileManager, string srcPath, string dstPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldLinkItemAtPath(class Foundation.INSFileManagerDelegate This, class Foundation.NSFileManager fileManager, string srcPath, string dstPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFileManagerDelegate" RefType="this" />
          <Parameter Name="fileManager" Type="MonoTouch.Foundation.NSFileManager" />
          <Parameter Name="srcPath" Type="System.String" />
          <Parameter Name="dstPath" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="fileManager">To be added.</param>
          <param name="srcPath">To be added.</param>
          <param name="dstPath">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFileManagerDelegate_Extensions" Member="M:MonoTouch.Foundation.NSFileManagerDelegate_Extensions.ShouldLinkItemAtPath(MonoTouch.Foundation.INSFileManagerDelegate,MonoTouch.Foundation.NSFileManager,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFileManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldLinkItemAtUrl">
        <MemberSignature Language="C#" Value="public static bool ShouldLinkItemAtUrl (this Foundation.INSFileManagerDelegate This, Foundation.NSFileManager fileManager, Foundation.NSUrl srcUrl, Foundation.NSUrl dstUrl);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldLinkItemAtUrl(class Foundation.INSFileManagerDelegate This, class Foundation.NSFileManager fileManager, class Foundation.NSUrl srcUrl, class Foundation.NSUrl dstUrl) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFileManagerDelegate" RefType="this" />
          <Parameter Name="fileManager" Type="MonoTouch.Foundation.NSFileManager" />
          <Parameter Name="srcUrl" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="dstUrl" Type="MonoTouch.Foundation.NSUrl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="fileManager">To be added.</param>
          <param name="srcUrl">To be added.</param>
          <param name="dstUrl">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFileManagerDelegate_Extensions" Member="M:MonoTouch.Foundation.NSFileManagerDelegate_Extensions.ShouldLinkItemAtUrl(MonoTouch.Foundation.INSFileManagerDelegate,MonoTouch.Foundation.NSFileManager,MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSUrl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFileManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldMoveItemAtPath">
        <MemberSignature Language="C#" Value="public static bool ShouldMoveItemAtPath (this Foundation.INSFileManagerDelegate This, Foundation.NSFileManager fileManager, string srcPath, string dstPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldMoveItemAtPath(class Foundation.INSFileManagerDelegate This, class Foundation.NSFileManager fileManager, string srcPath, string dstPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFileManagerDelegate" RefType="this" />
          <Parameter Name="fileManager" Type="MonoTouch.Foundation.NSFileManager" />
          <Parameter Name="srcPath" Type="System.String" />
          <Parameter Name="dstPath" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="fileManager">To be added.</param>
          <param name="srcPath">To be added.</param>
          <param name="dstPath">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFileManagerDelegate_Extensions" Member="M:MonoTouch.Foundation.NSFileManagerDelegate_Extensions.ShouldMoveItemAtPath(MonoTouch.Foundation.INSFileManagerDelegate,MonoTouch.Foundation.NSFileManager,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFileManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldMoveItemAtUrl">
        <MemberSignature Language="C#" Value="public static bool ShouldMoveItemAtUrl (this Foundation.INSFileManagerDelegate This, Foundation.NSFileManager fileManager, Foundation.NSUrl srcUrl, Foundation.NSUrl dstUrl);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldMoveItemAtUrl(class Foundation.INSFileManagerDelegate This, class Foundation.NSFileManager fileManager, class Foundation.NSUrl srcUrl, class Foundation.NSUrl dstUrl) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFileManagerDelegate" RefType="this" />
          <Parameter Name="fileManager" Type="MonoTouch.Foundation.NSFileManager" />
          <Parameter Name="srcUrl" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="dstUrl" Type="MonoTouch.Foundation.NSUrl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="fileManager">To be added.</param>
          <param name="srcUrl">To be added.</param>
          <param name="dstUrl">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFileManagerDelegate_Extensions" Member="M:MonoTouch.Foundation.NSFileManagerDelegate_Extensions.ShouldMoveItemAtUrl(MonoTouch.Foundation.INSFileManagerDelegate,MonoTouch.Foundation.NSFileManager,MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSUrl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFileManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldProceedAfterErrorCopyingItem">
        <MemberSignature Language="C#" Value="public static bool ShouldProceedAfterErrorCopyingItem (this Foundation.INSFileManagerDelegate This, Foundation.NSFileManager fileManager, Foundation.NSError error, Foundation.NSUrl srcUrl, Foundation.NSUrl dstUrl);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldProceedAfterErrorCopyingItem(class Foundation.INSFileManagerDelegate This, class Foundation.NSFileManager fileManager, class Foundation.NSError error, class Foundation.NSUrl srcUrl, class Foundation.NSUrl dstUrl) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFileManagerDelegate" RefType="this" />
          <Parameter Name="fileManager" Type="MonoTouch.Foundation.NSFileManager" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
          <Parameter Name="srcUrl" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="dstUrl" Type="MonoTouch.Foundation.NSUrl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="fileManager">To be added.</param>
          <param name="error">To be added.</param>
          <param name="srcUrl">To be added.</param>
          <param name="dstUrl">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFileManagerDelegate_Extensions" Member="M:MonoTouch.Foundation.NSFileManagerDelegate_Extensions.ShouldProceedAfterErrorCopyingItem(MonoTouch.Foundation.INSFileManagerDelegate,MonoTouch.Foundation.NSFileManager,MonoTouch.Foundation.NSError,MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSUrl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFileManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldProceedAfterErrorCopyingItem">
        <MemberSignature Language="C#" Value="public static bool ShouldProceedAfterErrorCopyingItem (this Foundation.INSFileManagerDelegate This, Foundation.NSFileManager fileManager, Foundation.NSError error, string srcPath, string dstPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldProceedAfterErrorCopyingItem(class Foundation.INSFileManagerDelegate This, class Foundation.NSFileManager fileManager, class Foundation.NSError error, string srcPath, string dstPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFileManagerDelegate" RefType="this" />
          <Parameter Name="fileManager" Type="MonoTouch.Foundation.NSFileManager" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
          <Parameter Name="srcPath" Type="System.String" />
          <Parameter Name="dstPath" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="fileManager">To be added.</param>
          <param name="error">To be added.</param>
          <param name="srcPath">To be added.</param>
          <param name="dstPath">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFileManagerDelegate_Extensions" Member="M:MonoTouch.Foundation.NSFileManagerDelegate_Extensions.ShouldProceedAfterErrorCopyingItem(MonoTouch.Foundation.INSFileManagerDelegate,MonoTouch.Foundation.NSFileManager,MonoTouch.Foundation.NSError,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFileManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldProceedAfterErrorLinkingItem">
        <MemberSignature Language="C#" Value="public static bool ShouldProceedAfterErrorLinkingItem (this Foundation.INSFileManagerDelegate This, Foundation.NSFileManager fileManager, Foundation.NSError error, Foundation.NSUrl srcUrl, Foundation.NSUrl dstUrl);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldProceedAfterErrorLinkingItem(class Foundation.INSFileManagerDelegate This, class Foundation.NSFileManager fileManager, class Foundation.NSError error, class Foundation.NSUrl srcUrl, class Foundation.NSUrl dstUrl) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFileManagerDelegate" RefType="this" />
          <Parameter Name="fileManager" Type="MonoTouch.Foundation.NSFileManager" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
          <Parameter Name="srcUrl" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="dstUrl" Type="MonoTouch.Foundation.NSUrl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="fileManager">To be added.</param>
          <param name="error">To be added.</param>
          <param name="srcUrl">To be added.</param>
          <param name="dstUrl">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFileManagerDelegate_Extensions" Member="M:MonoTouch.Foundation.NSFileManagerDelegate_Extensions.ShouldProceedAfterErrorLinkingItem(MonoTouch.Foundation.INSFileManagerDelegate,MonoTouch.Foundation.NSFileManager,MonoTouch.Foundation.NSError,MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSUrl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFileManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldProceedAfterErrorLinkingItem">
        <MemberSignature Language="C#" Value="public static bool ShouldProceedAfterErrorLinkingItem (this Foundation.INSFileManagerDelegate This, Foundation.NSFileManager fileManager, Foundation.NSError error, string srcPath, string dstPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldProceedAfterErrorLinkingItem(class Foundation.INSFileManagerDelegate This, class Foundation.NSFileManager fileManager, class Foundation.NSError error, string srcPath, string dstPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFileManagerDelegate" RefType="this" />
          <Parameter Name="fileManager" Type="MonoTouch.Foundation.NSFileManager" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
          <Parameter Name="srcPath" Type="System.String" />
          <Parameter Name="dstPath" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="fileManager">To be added.</param>
          <param name="error">To be added.</param>
          <param name="srcPath">To be added.</param>
          <param name="dstPath">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFileManagerDelegate_Extensions" Member="M:MonoTouch.Foundation.NSFileManagerDelegate_Extensions.ShouldProceedAfterErrorLinkingItem(MonoTouch.Foundation.INSFileManagerDelegate,MonoTouch.Foundation.NSFileManager,MonoTouch.Foundation.NSError,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFileManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldProceedAfterErrorMovingItem">
        <MemberSignature Language="C#" Value="public static bool ShouldProceedAfterErrorMovingItem (this Foundation.INSFileManagerDelegate This, Foundation.NSFileManager fileManager, Foundation.NSError error, Foundation.NSUrl srcUrl, Foundation.NSUrl dstUrl);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldProceedAfterErrorMovingItem(class Foundation.INSFileManagerDelegate This, class Foundation.NSFileManager fileManager, class Foundation.NSError error, class Foundation.NSUrl srcUrl, class Foundation.NSUrl dstUrl) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFileManagerDelegate" RefType="this" />
          <Parameter Name="fileManager" Type="MonoTouch.Foundation.NSFileManager" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
          <Parameter Name="srcUrl" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="dstUrl" Type="MonoTouch.Foundation.NSUrl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="fileManager">To be added.</param>
          <param name="error">To be added.</param>
          <param name="srcUrl">To be added.</param>
          <param name="dstUrl">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFileManagerDelegate_Extensions" Member="M:MonoTouch.Foundation.NSFileManagerDelegate_Extensions.ShouldProceedAfterErrorMovingItem(MonoTouch.Foundation.INSFileManagerDelegate,MonoTouch.Foundation.NSFileManager,MonoTouch.Foundation.NSError,MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSUrl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFileManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldProceedAfterErrorMovingItem">
        <MemberSignature Language="C#" Value="public static bool ShouldProceedAfterErrorMovingItem (this Foundation.INSFileManagerDelegate This, Foundation.NSFileManager fileManager, Foundation.NSError error, string srcPath, string dstPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldProceedAfterErrorMovingItem(class Foundation.INSFileManagerDelegate This, class Foundation.NSFileManager fileManager, class Foundation.NSError error, string srcPath, string dstPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFileManagerDelegate" RefType="this" />
          <Parameter Name="fileManager" Type="MonoTouch.Foundation.NSFileManager" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
          <Parameter Name="srcPath" Type="System.String" />
          <Parameter Name="dstPath" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="fileManager">To be added.</param>
          <param name="error">To be added.</param>
          <param name="srcPath">To be added.</param>
          <param name="dstPath">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFileManagerDelegate_Extensions" Member="M:MonoTouch.Foundation.NSFileManagerDelegate_Extensions.ShouldProceedAfterErrorMovingItem(MonoTouch.Foundation.INSFileManagerDelegate,MonoTouch.Foundation.NSFileManager,MonoTouch.Foundation.NSError,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFileManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldProceedAfterErrorRemovingItem">
        <MemberSignature Language="C#" Value="public static bool ShouldProceedAfterErrorRemovingItem (this Foundation.INSFileManagerDelegate This, Foundation.NSFileManager fileManager, Foundation.NSError error, Foundation.NSUrl url);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldProceedAfterErrorRemovingItem(class Foundation.INSFileManagerDelegate This, class Foundation.NSFileManager fileManager, class Foundation.NSError error, class Foundation.NSUrl url) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFileManagerDelegate" RefType="this" />
          <Parameter Name="fileManager" Type="MonoTouch.Foundation.NSFileManager" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
          <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="fileManager">To be added.</param>
          <param name="error">To be added.</param>
          <param name="url">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFileManagerDelegate_Extensions" Member="M:MonoTouch.Foundation.NSFileManagerDelegate_Extensions.ShouldProceedAfterErrorRemovingItem(MonoTouch.Foundation.INSFileManagerDelegate,MonoTouch.Foundation.NSFileManager,MonoTouch.Foundation.NSError,MonoTouch.Foundation.NSUrl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFileManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldProceedAfterErrorRemovingItem">
        <MemberSignature Language="C#" Value="public static bool ShouldProceedAfterErrorRemovingItem (this Foundation.INSFileManagerDelegate This, Foundation.NSFileManager fileManager, Foundation.NSError error, string path);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldProceedAfterErrorRemovingItem(class Foundation.INSFileManagerDelegate This, class Foundation.NSFileManager fileManager, class Foundation.NSError error, string path) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFileManagerDelegate" RefType="this" />
          <Parameter Name="fileManager" Type="MonoTouch.Foundation.NSFileManager" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
          <Parameter Name="path" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="fileManager">To be added.</param>
          <param name="error">To be added.</param>
          <param name="path">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFileManagerDelegate_Extensions" Member="M:MonoTouch.Foundation.NSFileManagerDelegate_Extensions.ShouldProceedAfterErrorRemovingItem(MonoTouch.Foundation.INSFileManagerDelegate,MonoTouch.Foundation.NSFileManager,MonoTouch.Foundation.NSError,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFileManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldRemoveItemAtPath">
        <MemberSignature Language="C#" Value="public static bool ShouldRemoveItemAtPath (this Foundation.INSFileManagerDelegate This, Foundation.NSFileManager fileManager, string path);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldRemoveItemAtPath(class Foundation.INSFileManagerDelegate This, class Foundation.NSFileManager fileManager, string path) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFileManagerDelegate" RefType="this" />
          <Parameter Name="fileManager" Type="MonoTouch.Foundation.NSFileManager" />
          <Parameter Name="path" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="fileManager">To be added.</param>
          <param name="path">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFileManagerDelegate_Extensions" Member="M:MonoTouch.Foundation.NSFileManagerDelegate_Extensions.ShouldRemoveItemAtPath(MonoTouch.Foundation.INSFileManagerDelegate,MonoTouch.Foundation.NSFileManager,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFileManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldRemoveItemAtUrl">
        <MemberSignature Language="C#" Value="public static bool ShouldRemoveItemAtUrl (this Foundation.INSFileManagerDelegate This, Foundation.NSFileManager fileManager, Foundation.NSUrl url);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldRemoveItemAtUrl(class Foundation.INSFileManagerDelegate This, class Foundation.NSFileManager fileManager, class Foundation.NSUrl url) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFileManagerDelegate" RefType="this" />
          <Parameter Name="fileManager" Type="MonoTouch.Foundation.NSFileManager" />
          <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="fileManager">To be added.</param>
          <param name="url">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFileManagerDelegate_Extensions" Member="M:MonoTouch.Foundation.NSFileManagerDelegate_Extensions.ShouldRemoveItemAtUrl(MonoTouch.Foundation.INSFileManagerDelegate,MonoTouch.Foundation.NSFileManager,MonoTouch.Foundation.NSUrl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFilePresenter" />
      </Targets>
      <Member MemberName="AccommodatePresentedItemDeletion">
        <MemberSignature Language="C#" Value="public static void AccommodatePresentedItemDeletion (this Foundation.INSFilePresenter This, Action&lt;Foundation.NSError&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AccommodatePresentedItemDeletion(class Foundation.INSFilePresenter This, class System.Action`1&lt;class Foundation.NSError&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFilePresenter" RefType="this" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSError&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V0))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFilePresenter_Extensions" Member="M:MonoTouch.Foundation.NSFilePresenter_Extensions.AccommodatePresentedItemDeletion(MonoTouch.Foundation.INSFilePresenter,System.Action{MonoTouch.Foundation.NSError})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFilePresenter" />
      </Targets>
      <Member MemberName="AccommodatePresentedSubitemDeletion">
        <MemberSignature Language="C#" Value="public static void AccommodatePresentedSubitemDeletion (this Foundation.INSFilePresenter This, Foundation.NSUrl url, Action&lt;Foundation.NSError&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AccommodatePresentedSubitemDeletion(class Foundation.INSFilePresenter This, class Foundation.NSUrl url, class System.Action`1&lt;class Foundation.NSError&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFilePresenter" RefType="this" />
          <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSError&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V0))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="url">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFilePresenter_Extensions" Member="M:MonoTouch.Foundation.NSFilePresenter_Extensions.AccommodatePresentedSubitemDeletion(MonoTouch.Foundation.INSFilePresenter,MonoTouch.Foundation.NSUrl,System.Action{MonoTouch.Foundation.NSError})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFilePresenter" />
      </Targets>
      <Member MemberName="GetPresentedItemObservedUbiquityAttributes">
        <MemberSignature Language="C#" Value="public static Foundation.NSSet&lt;Foundation.NSString&gt; GetPresentedItemObservedUbiquityAttributes (this Foundation.INSFilePresenter This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSSet`1&lt;class Foundation.NSString&gt; GetPresentedItemObservedUbiquityAttributes(class Foundation.INSFilePresenter This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSSet&lt;MonoTouch.Foundation.NSString&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFilePresenter" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFilePresenter_Extensions" Member="M:MonoTouch.Foundation.NSFilePresenter_Extensions.GetPresentedItemObservedUbiquityAttributes(MonoTouch.Foundation.INSFilePresenter)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFilePresenter" />
      </Targets>
      <Member MemberName="PresentedItemChanged">
        <MemberSignature Language="C#" Value="public static void PresentedItemChanged (this Foundation.INSFilePresenter This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PresentedItemChanged(class Foundation.INSFilePresenter This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFilePresenter" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFilePresenter_Extensions" Member="M:MonoTouch.Foundation.NSFilePresenter_Extensions.PresentedItemChanged(MonoTouch.Foundation.INSFilePresenter)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFilePresenter" />
      </Targets>
      <Member MemberName="PresentedItemChangedUbiquityAttributes">
        <MemberSignature Language="C#" Value="public static void PresentedItemChangedUbiquityAttributes (this Foundation.INSFilePresenter This, Foundation.NSSet&lt;Foundation.NSString&gt; attributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PresentedItemChangedUbiquityAttributes(class Foundation.INSFilePresenter This, class Foundation.NSSet`1&lt;class Foundation.NSString&gt; attributes) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFilePresenter" RefType="this" />
          <Parameter Name="attributes" Type="MonoTouch.Foundation.NSSet&lt;MonoTouch.Foundation.NSString&gt;" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="attributes">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFilePresenter_Extensions" Member="M:MonoTouch.Foundation.NSFilePresenter_Extensions.PresentedItemChangedUbiquityAttributes(MonoTouch.Foundation.INSFilePresenter,MonoTouch.Foundation.NSSet{MonoTouch.Foundation.NSString})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFilePresenter" />
      </Targets>
      <Member MemberName="PresentedItemGainedVersion">
        <MemberSignature Language="C#" Value="public static void PresentedItemGainedVersion (this Foundation.INSFilePresenter This, Foundation.NSFileVersion version);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PresentedItemGainedVersion(class Foundation.INSFilePresenter This, class Foundation.NSFileVersion version) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFilePresenter" RefType="this" />
          <Parameter Name="version" Type="MonoTouch.Foundation.NSFileVersion" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="version">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFilePresenter_Extensions" Member="M:MonoTouch.Foundation.NSFilePresenter_Extensions.PresentedItemGainedVersion(MonoTouch.Foundation.INSFilePresenter,MonoTouch.Foundation.NSFileVersion)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFilePresenter" />
      </Targets>
      <Member MemberName="PresentedItemLostVersion">
        <MemberSignature Language="C#" Value="public static void PresentedItemLostVersion (this Foundation.INSFilePresenter This, Foundation.NSFileVersion version);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PresentedItemLostVersion(class Foundation.INSFilePresenter This, class Foundation.NSFileVersion version) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFilePresenter" RefType="this" />
          <Parameter Name="version" Type="MonoTouch.Foundation.NSFileVersion" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="version">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFilePresenter_Extensions" Member="M:MonoTouch.Foundation.NSFilePresenter_Extensions.PresentedItemLostVersion(MonoTouch.Foundation.INSFilePresenter,MonoTouch.Foundation.NSFileVersion)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFilePresenter" />
      </Targets>
      <Member MemberName="PresentedItemMoved">
        <MemberSignature Language="C#" Value="public static void PresentedItemMoved (this Foundation.INSFilePresenter This, Foundation.NSUrl newURL);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PresentedItemMoved(class Foundation.INSFilePresenter This, class Foundation.NSUrl newURL) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFilePresenter" RefType="this" />
          <Parameter Name="newURL" Type="MonoTouch.Foundation.NSUrl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="newURL">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFilePresenter_Extensions" Member="M:MonoTouch.Foundation.NSFilePresenter_Extensions.PresentedItemMoved(MonoTouch.Foundation.INSFilePresenter,MonoTouch.Foundation.NSUrl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFilePresenter" />
      </Targets>
      <Member MemberName="PresentedItemResolveConflictVersion">
        <MemberSignature Language="C#" Value="public static void PresentedItemResolveConflictVersion (this Foundation.INSFilePresenter This, Foundation.NSFileVersion version);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PresentedItemResolveConflictVersion(class Foundation.INSFilePresenter This, class Foundation.NSFileVersion version) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFilePresenter" RefType="this" />
          <Parameter Name="version" Type="MonoTouch.Foundation.NSFileVersion" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="version">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFilePresenter_Extensions" Member="M:MonoTouch.Foundation.NSFilePresenter_Extensions.PresentedItemResolveConflictVersion(MonoTouch.Foundation.INSFilePresenter,MonoTouch.Foundation.NSFileVersion)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFilePresenter" />
      </Targets>
      <Member MemberName="PresentedSubitemAppeared">
        <MemberSignature Language="C#" Value="public static void PresentedSubitemAppeared (this Foundation.INSFilePresenter This, Foundation.NSUrl atUrl);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PresentedSubitemAppeared(class Foundation.INSFilePresenter This, class Foundation.NSUrl atUrl) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFilePresenter" RefType="this" />
          <Parameter Name="atUrl" Type="MonoTouch.Foundation.NSUrl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="atUrl">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFilePresenter_Extensions" Member="M:MonoTouch.Foundation.NSFilePresenter_Extensions.PresentedSubitemAppeared(MonoTouch.Foundation.INSFilePresenter,MonoTouch.Foundation.NSUrl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFilePresenter" />
      </Targets>
      <Member MemberName="PresentedSubitemChanged">
        <MemberSignature Language="C#" Value="public static void PresentedSubitemChanged (this Foundation.INSFilePresenter This, Foundation.NSUrl url);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PresentedSubitemChanged(class Foundation.INSFilePresenter This, class Foundation.NSUrl url) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFilePresenter" RefType="this" />
          <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="url">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFilePresenter_Extensions" Member="M:MonoTouch.Foundation.NSFilePresenter_Extensions.PresentedSubitemChanged(MonoTouch.Foundation.INSFilePresenter,MonoTouch.Foundation.NSUrl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFilePresenter" />
      </Targets>
      <Member MemberName="PresentedSubitemGainedVersion">
        <MemberSignature Language="C#" Value="public static void PresentedSubitemGainedVersion (this Foundation.INSFilePresenter This, Foundation.NSUrl url, Foundation.NSFileVersion version);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PresentedSubitemGainedVersion(class Foundation.INSFilePresenter This, class Foundation.NSUrl url, class Foundation.NSFileVersion version) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFilePresenter" RefType="this" />
          <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="version" Type="MonoTouch.Foundation.NSFileVersion" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="url">To be added.</param>
          <param name="version">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFilePresenter_Extensions" Member="M:MonoTouch.Foundation.NSFilePresenter_Extensions.PresentedSubitemGainedVersion(MonoTouch.Foundation.INSFilePresenter,MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSFileVersion)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFilePresenter" />
      </Targets>
      <Member MemberName="PresentedSubitemLostVersion">
        <MemberSignature Language="C#" Value="public static void PresentedSubitemLostVersion (this Foundation.INSFilePresenter This, Foundation.NSUrl url, Foundation.NSFileVersion version);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PresentedSubitemLostVersion(class Foundation.INSFilePresenter This, class Foundation.NSUrl url, class Foundation.NSFileVersion version) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFilePresenter" RefType="this" />
          <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="version" Type="MonoTouch.Foundation.NSFileVersion" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="url">To be added.</param>
          <param name="version">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFilePresenter_Extensions" Member="M:MonoTouch.Foundation.NSFilePresenter_Extensions.PresentedSubitemLostVersion(MonoTouch.Foundation.INSFilePresenter,MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSFileVersion)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFilePresenter" />
      </Targets>
      <Member MemberName="PresentedSubitemMoved">
        <MemberSignature Language="C#" Value="public static void PresentedSubitemMoved (this Foundation.INSFilePresenter This, Foundation.NSUrl oldURL, Foundation.NSUrl newURL);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PresentedSubitemMoved(class Foundation.INSFilePresenter This, class Foundation.NSUrl oldURL, class Foundation.NSUrl newURL) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFilePresenter" RefType="this" />
          <Parameter Name="oldURL" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="newURL" Type="MonoTouch.Foundation.NSUrl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="oldURL">To be added.</param>
          <param name="newURL">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFilePresenter_Extensions" Member="M:MonoTouch.Foundation.NSFilePresenter_Extensions.PresentedSubitemMoved(MonoTouch.Foundation.INSFilePresenter,MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSUrl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFilePresenter" />
      </Targets>
      <Member MemberName="PresentedSubitemResolvedConflictVersion">
        <MemberSignature Language="C#" Value="public static void PresentedSubitemResolvedConflictVersion (this Foundation.INSFilePresenter This, Foundation.NSUrl url, Foundation.NSFileVersion version);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PresentedSubitemResolvedConflictVersion(class Foundation.INSFilePresenter This, class Foundation.NSUrl url, class Foundation.NSFileVersion version) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFilePresenter" RefType="this" />
          <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="version" Type="MonoTouch.Foundation.NSFileVersion" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="url">To be added.</param>
          <param name="version">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFilePresenter_Extensions" Member="M:MonoTouch.Foundation.NSFilePresenter_Extensions.PresentedSubitemResolvedConflictVersion(MonoTouch.Foundation.INSFilePresenter,MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSFileVersion)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFilePresenter" />
      </Targets>
      <Member MemberName="RelinquishPresentedItemToReader">
        <MemberSignature Language="C#" Value="public static void RelinquishPresentedItemToReader (this Foundation.INSFilePresenter This, Foundation.NSFilePresenterReacquirer readerAction);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RelinquishPresentedItemToReader(class Foundation.INSFilePresenter This, class Foundation.NSFilePresenterReacquirer readerAction) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFilePresenter" RefType="this" />
          <Parameter Name="readerAction" Type="MonoTouch.Foundation.NSFilePresenterReacquirer">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDNSFilePresenterReacquirer))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="readerAction">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFilePresenter_Extensions" Member="M:MonoTouch.Foundation.NSFilePresenter_Extensions.RelinquishPresentedItemToReader(MonoTouch.Foundation.INSFilePresenter,MonoTouch.Foundation.NSFilePresenterReacquirer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFilePresenter" />
      </Targets>
      <Member MemberName="RelinquishPresentedItemToWriter">
        <MemberSignature Language="C#" Value="public static void RelinquishPresentedItemToWriter (this Foundation.INSFilePresenter This, Foundation.NSFilePresenterReacquirer writerAction);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RelinquishPresentedItemToWriter(class Foundation.INSFilePresenter This, class Foundation.NSFilePresenterReacquirer writerAction) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFilePresenter" RefType="this" />
          <Parameter Name="writerAction" Type="MonoTouch.Foundation.NSFilePresenterReacquirer">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDNSFilePresenterReacquirer))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="writerAction">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFilePresenter_Extensions" Member="M:MonoTouch.Foundation.NSFilePresenter_Extensions.RelinquishPresentedItemToWriter(MonoTouch.Foundation.INSFilePresenter,MonoTouch.Foundation.NSFilePresenterReacquirer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFilePresenter" />
      </Targets>
      <Member MemberName="SavePresentedItemChanges">
        <MemberSignature Language="C#" Value="public static void SavePresentedItemChanges (this Foundation.INSFilePresenter This, Action&lt;Foundation.NSError&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SavePresentedItemChanges(class Foundation.INSFilePresenter This, class System.Action`1&lt;class Foundation.NSError&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFilePresenter" RefType="this" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSError&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V0))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFilePresenter_Extensions" Member="M:MonoTouch.Foundation.NSFilePresenter_Extensions.SavePresentedItemChanges(MonoTouch.Foundation.INSFilePresenter,System.Action{MonoTouch.Foundation.NSError})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSItemDownloadingStatus" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this Foundation.NSItemDownloadingStatus self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype Foundation.NSItemDownloadingStatus self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.Foundation.NSItemDownloadingStatus" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSItemDownloadingStatusExtensions" Member="M:MonoTouch.Foundation.NSItemDownloadingStatusExtensions.GetConstant(MonoTouch.Foundation.NSItemDownloadingStatus)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSItemProviderWriting" />
      </Targets>
      <Member MemberName="GetItemProviderVisibilityForTypeIdentifier">
        <MemberSignature Language="C#" Value="public static Foundation.NSItemProviderRepresentationVisibility GetItemProviderVisibilityForTypeIdentifier (this Foundation.INSItemProviderWriting This, string typeIdentifier);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Foundation.NSItemProviderRepresentationVisibility GetItemProviderVisibilityForTypeIdentifier(class Foundation.INSItemProviderWriting This, string typeIdentifier) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSItemProviderRepresentationVisibility</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSItemProviderWriting" RefType="this" />
          <Parameter Name="typeIdentifier" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="typeIdentifier">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSItemProviderWriting_Extensions" Member="M:MonoTouch.Foundation.NSItemProviderWriting_Extensions.GetItemProviderVisibilityForTypeIdentifier(MonoTouch.Foundation.INSItemProviderWriting,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSItemProviderWriting" />
      </Targets>
      <Member MemberName="GetWritableTypeIdentifiersForItemProvider">
        <MemberSignature Language="C#" Value="public static string[] GetWritableTypeIdentifiersForItemProvider (this Foundation.INSItemProviderWriting This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetWritableTypeIdentifiersForItemProvider(class Foundation.INSItemProviderWriting This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSItemProviderWriting" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSItemProviderWriting_Extensions" Member="M:MonoTouch.Foundation.NSItemProviderWriting_Extensions.GetWritableTypeIdentifiersForItemProvider(MonoTouch.Foundation.INSItemProviderWriting)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSItemProviderWriting" />
      </Targets>
      <Member MemberName="LoadDataAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Foundation.NSData&gt; LoadDataAsync (this Foundation.INSItemProviderWriting This, string typeIdentifier);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Foundation.NSData&gt; LoadDataAsync(class Foundation.INSItemProviderWriting This, string typeIdentifier) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;MonoTouch.Foundation.NSData&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSItemProviderWriting" RefType="this" />
          <Parameter Name="typeIdentifier" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="typeIdentifier">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSItemProviderWriting_Extensions" Member="M:MonoTouch.Foundation.NSItemProviderWriting_Extensions.LoadDataAsync(MonoTouch.Foundation.INSItemProviderWriting,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSItemProviderWriting" />
      </Targets>
      <Member MemberName="LoadDataAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Foundation.NSData&gt; LoadDataAsync (this Foundation.INSItemProviderWriting This, string typeIdentifier, out Foundation.NSProgress result);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Foundation.NSData&gt; LoadDataAsync(class Foundation.INSItemProviderWriting This, string typeIdentifier, class Foundation.NSProgress result) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;MonoTouch.Foundation.NSData&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSItemProviderWriting" RefType="this" />
          <Parameter Name="typeIdentifier" Type="System.String" />
          <Parameter Name="result" Type="MonoTouch.Foundation.NSProgress&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="typeIdentifier">To be added.</param>
          <param name="result">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSItemProviderWriting_Extensions" Member="M:MonoTouch.Foundation.NSItemProviderWriting_Extensions.LoadDataAsync(MonoTouch.Foundation.INSItemProviderWriting,System.String,MonoTouch.Foundation.NSProgress@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSKeyedArchiverDelegate" />
      </Targets>
      <Member MemberName="EncodedObject">
        <MemberSignature Language="C#" Value="public static void EncodedObject (this Foundation.INSKeyedArchiverDelegate This, Foundation.NSKeyedArchiver archiver, Foundation.NSObject obj);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EncodedObject(class Foundation.INSKeyedArchiverDelegate This, class Foundation.NSKeyedArchiver archiver, class Foundation.NSObject obj) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSKeyedArchiverDelegate" RefType="this" />
          <Parameter Name="archiver" Type="MonoTouch.Foundation.NSKeyedArchiver" />
          <Parameter Name="obj" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="archiver">To be added.</param>
          <param name="obj">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSKeyedArchiverDelegate_Extensions" Member="M:MonoTouch.Foundation.NSKeyedArchiverDelegate_Extensions.EncodedObject(MonoTouch.Foundation.INSKeyedArchiverDelegate,MonoTouch.Foundation.NSKeyedArchiver,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSKeyedArchiverDelegate" />
      </Targets>
      <Member MemberName="Finished">
        <MemberSignature Language="C#" Value="public static void Finished (this Foundation.INSKeyedArchiverDelegate This, Foundation.NSKeyedArchiver archiver);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Finished(class Foundation.INSKeyedArchiverDelegate This, class Foundation.NSKeyedArchiver archiver) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSKeyedArchiverDelegate" RefType="this" />
          <Parameter Name="archiver" Type="MonoTouch.Foundation.NSKeyedArchiver" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="archiver">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSKeyedArchiverDelegate_Extensions" Member="M:MonoTouch.Foundation.NSKeyedArchiverDelegate_Extensions.Finished(MonoTouch.Foundation.INSKeyedArchiverDelegate,MonoTouch.Foundation.NSKeyedArchiver)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSKeyedArchiverDelegate" />
      </Targets>
      <Member MemberName="Finishing">
        <MemberSignature Language="C#" Value="public static void Finishing (this Foundation.INSKeyedArchiverDelegate This, Foundation.NSKeyedArchiver archiver);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Finishing(class Foundation.INSKeyedArchiverDelegate This, class Foundation.NSKeyedArchiver archiver) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSKeyedArchiverDelegate" RefType="this" />
          <Parameter Name="archiver" Type="MonoTouch.Foundation.NSKeyedArchiver" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="archiver">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSKeyedArchiverDelegate_Extensions" Member="M:MonoTouch.Foundation.NSKeyedArchiverDelegate_Extensions.Finishing(MonoTouch.Foundation.INSKeyedArchiverDelegate,MonoTouch.Foundation.NSKeyedArchiver)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSKeyedArchiverDelegate" />
      </Targets>
      <Member MemberName="ReplacingObject">
        <MemberSignature Language="C#" Value="public static void ReplacingObject (this Foundation.INSKeyedArchiverDelegate This, Foundation.NSKeyedArchiver archiver, Foundation.NSObject oldObject, Foundation.NSObject newObject);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReplacingObject(class Foundation.INSKeyedArchiverDelegate This, class Foundation.NSKeyedArchiver archiver, class Foundation.NSObject oldObject, class Foundation.NSObject newObject) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSKeyedArchiverDelegate" RefType="this" />
          <Parameter Name="archiver" Type="MonoTouch.Foundation.NSKeyedArchiver" />
          <Parameter Name="oldObject" Type="MonoTouch.Foundation.NSObject" />
          <Parameter Name="newObject" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="archiver">To be added.</param>
          <param name="oldObject">To be added.</param>
          <param name="newObject">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSKeyedArchiverDelegate_Extensions" Member="M:MonoTouch.Foundation.NSKeyedArchiverDelegate_Extensions.ReplacingObject(MonoTouch.Foundation.INSKeyedArchiverDelegate,MonoTouch.Foundation.NSKeyedArchiver,MonoTouch.Foundation.NSObject,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSKeyedArchiverDelegate" />
      </Targets>
      <Member MemberName="WillEncode">
        <MemberSignature Language="C#" Value="public static Foundation.NSObject WillEncode (this Foundation.INSKeyedArchiverDelegate This, Foundation.NSKeyedArchiver archiver, Foundation.NSObject obj);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSObject WillEncode(class Foundation.INSKeyedArchiverDelegate This, class Foundation.NSKeyedArchiver archiver, class Foundation.NSObject obj) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSObject</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSKeyedArchiverDelegate" RefType="this" />
          <Parameter Name="archiver" Type="MonoTouch.Foundation.NSKeyedArchiver" />
          <Parameter Name="obj" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="archiver">To be added.</param>
          <param name="obj">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSKeyedArchiverDelegate_Extensions" Member="M:MonoTouch.Foundation.NSKeyedArchiverDelegate_Extensions.WillEncode(MonoTouch.Foundation.INSKeyedArchiverDelegate,MonoTouch.Foundation.NSKeyedArchiver,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSKeyedUnarchiverDelegate" />
      </Targets>
      <Member MemberName="CannotDecodeClass">
        <MemberSignature Language="C#" Value="public static ObjCRuntime.Class CannotDecodeClass (this Foundation.INSKeyedUnarchiverDelegate This, Foundation.NSKeyedUnarchiver unarchiver, string klass, string[] classes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class ObjCRuntime.Class CannotDecodeClass(class Foundation.INSKeyedUnarchiverDelegate This, class Foundation.NSKeyedUnarchiver unarchiver, string klass, string[] classes) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.ObjCRuntime.Class</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSKeyedUnarchiverDelegate" RefType="this" />
          <Parameter Name="unarchiver" Type="MonoTouch.Foundation.NSKeyedUnarchiver" />
          <Parameter Name="klass" Type="System.String" />
          <Parameter Name="classes" Type="System.String[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="unarchiver">To be added.</param>
          <param name="klass">To be added.</param>
          <param name="classes">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSKeyedUnarchiverDelegate_Extensions" Member="M:MonoTouch.Foundation.NSKeyedUnarchiverDelegate_Extensions.CannotDecodeClass(MonoTouch.Foundation.INSKeyedUnarchiverDelegate,MonoTouch.Foundation.NSKeyedUnarchiver,System.String,System.String[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSKeyedUnarchiverDelegate" />
      </Targets>
      <Member MemberName="DecodedObject">
        <MemberSignature Language="C#" Value="public static Foundation.NSObject DecodedObject (this Foundation.INSKeyedUnarchiverDelegate This, Foundation.NSKeyedUnarchiver unarchiver, Foundation.NSObject obj);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSObject DecodedObject(class Foundation.INSKeyedUnarchiverDelegate This, class Foundation.NSKeyedUnarchiver unarchiver, class Foundation.NSObject obj) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSObject</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSKeyedUnarchiverDelegate" RefType="this" />
          <Parameter Name="unarchiver" Type="MonoTouch.Foundation.NSKeyedUnarchiver" />
          <Parameter Name="obj" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="unarchiver">To be added.</param>
          <param name="obj">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSKeyedUnarchiverDelegate_Extensions" Member="M:MonoTouch.Foundation.NSKeyedUnarchiverDelegate_Extensions.DecodedObject(MonoTouch.Foundation.INSKeyedUnarchiverDelegate,MonoTouch.Foundation.NSKeyedUnarchiver,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSKeyedUnarchiverDelegate" />
      </Targets>
      <Member MemberName="Finished">
        <MemberSignature Language="C#" Value="public static void Finished (this Foundation.INSKeyedUnarchiverDelegate This, Foundation.NSKeyedUnarchiver unarchiver);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Finished(class Foundation.INSKeyedUnarchiverDelegate This, class Foundation.NSKeyedUnarchiver unarchiver) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSKeyedUnarchiverDelegate" RefType="this" />
          <Parameter Name="unarchiver" Type="MonoTouch.Foundation.NSKeyedUnarchiver" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="unarchiver">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSKeyedUnarchiverDelegate_Extensions" Member="M:MonoTouch.Foundation.NSKeyedUnarchiverDelegate_Extensions.Finished(MonoTouch.Foundation.INSKeyedUnarchiverDelegate,MonoTouch.Foundation.NSKeyedUnarchiver)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSKeyedUnarchiverDelegate" />
      </Targets>
      <Member MemberName="Finishing">
        <MemberSignature Language="C#" Value="public static void Finishing (this Foundation.INSKeyedUnarchiverDelegate This, Foundation.NSKeyedUnarchiver unarchiver);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Finishing(class Foundation.INSKeyedUnarchiverDelegate This, class Foundation.NSKeyedUnarchiver unarchiver) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSKeyedUnarchiverDelegate" RefType="this" />
          <Parameter Name="unarchiver" Type="MonoTouch.Foundation.NSKeyedUnarchiver" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="unarchiver">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSKeyedUnarchiverDelegate_Extensions" Member="M:MonoTouch.Foundation.NSKeyedUnarchiverDelegate_Extensions.Finishing(MonoTouch.Foundation.INSKeyedUnarchiverDelegate,MonoTouch.Foundation.NSKeyedUnarchiver)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSKeyedUnarchiverDelegate" />
      </Targets>
      <Member MemberName="ReplacingObject">
        <MemberSignature Language="C#" Value="public static void ReplacingObject (this Foundation.INSKeyedUnarchiverDelegate This, Foundation.NSKeyedUnarchiver unarchiver, Foundation.NSObject oldObject, Foundation.NSObject newObject);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReplacingObject(class Foundation.INSKeyedUnarchiverDelegate This, class Foundation.NSKeyedUnarchiver unarchiver, class Foundation.NSObject oldObject, class Foundation.NSObject newObject) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSKeyedUnarchiverDelegate" RefType="this" />
          <Parameter Name="unarchiver" Type="MonoTouch.Foundation.NSKeyedUnarchiver" />
          <Parameter Name="oldObject" Type="MonoTouch.Foundation.NSObject" />
          <Parameter Name="newObject" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="unarchiver">To be added.</param>
          <param name="oldObject">To be added.</param>
          <param name="newObject">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSKeyedUnarchiverDelegate_Extensions" Member="M:MonoTouch.Foundation.NSKeyedUnarchiverDelegate_Extensions.ReplacingObject(MonoTouch.Foundation.INSKeyedUnarchiverDelegate,MonoTouch.Foundation.NSKeyedUnarchiver,MonoTouch.Foundation.NSObject,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSMutableOrderedSet" />
      </Targets>
      <Member MemberName="SortUsingDescriptors">
        <MemberSignature Language="C#" Value="public static void SortUsingDescriptors (this Foundation.NSMutableOrderedSet This, Foundation.NSSortDescriptor[] sortDescriptors);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SortUsingDescriptors(class Foundation.NSMutableOrderedSet This, class Foundation.NSSortDescriptor[] sortDescriptors) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSMutableOrderedSet" RefType="this" />
          <Parameter Name="sortDescriptors" Type="MonoTouch.Foundation.NSSortDescriptor[]" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="sortDescriptors">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSKeyValueSorting_NSMutableOrderedSet" Member="M:MonoTouch.Foundation.NSKeyValueSorting_NSMutableOrderedSet.SortUsingDescriptors(MonoTouch.Foundation.NSMutableOrderedSet,MonoTouch.Foundation.NSSortDescriptor[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSOrderedSet" />
      </Targets>
      <Member MemberName="GetSortedArray">
        <MemberSignature Language="C#" Value="public static Foundation.NSObject[] GetSortedArray (this Foundation.NSOrderedSet This, Foundation.NSSortDescriptor[] sortDescriptors);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSObject[] GetSortedArray(class Foundation.NSOrderedSet This, class Foundation.NSSortDescriptor[] sortDescriptors) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSObject[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSOrderedSet" RefType="this" />
          <Parameter Name="sortDescriptors" Type="MonoTouch.Foundation.NSSortDescriptor[]" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="sortDescriptors">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSKeyValueSorting_NSOrderedSet" Member="M:MonoTouch.Foundation.NSKeyValueSorting_NSOrderedSet.GetSortedArray(MonoTouch.Foundation.NSOrderedSet,MonoTouch.Foundation.NSSortDescriptor[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSMachPortDelegate" />
      </Targets>
      <Member MemberName="MachMessageReceived">
        <MemberSignature Language="C#" Value="public static void MachMessageReceived (this Foundation.INSMachPortDelegate This, IntPtr msgHeader);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MachMessageReceived(class Foundation.INSMachPortDelegate This, native int msgHeader) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSMachPortDelegate" RefType="this" />
          <Parameter Name="msgHeader" Type="System.IntPtr" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="msgHeader">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSMachPortDelegate_Extensions" Member="M:MonoTouch.Foundation.NSMachPortDelegate_Extensions.MachMessageReceived(MonoTouch.Foundation.INSMachPortDelegate,System.IntPtr)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSMetadataQueryDelegate" />
      </Targets>
      <Member MemberName="ReplacementObjectForResultObject">
        <MemberSignature Language="C#" Value="public static Foundation.NSObject ReplacementObjectForResultObject (this Foundation.INSMetadataQueryDelegate This, Foundation.NSMetadataQuery query, Foundation.NSMetadataItem result);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSObject ReplacementObjectForResultObject(class Foundation.INSMetadataQueryDelegate This, class Foundation.NSMetadataQuery query, class Foundation.NSMetadataItem result) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSObject</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSMetadataQueryDelegate" RefType="this" />
          <Parameter Name="query" Type="MonoTouch.Foundation.NSMetadataQuery" />
          <Parameter Name="result" Type="MonoTouch.Foundation.NSMetadataItem" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="query">To be added.</param>
          <param name="result">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSMetadataQueryDelegate_Extensions" Member="M:MonoTouch.Foundation.NSMetadataQueryDelegate_Extensions.ReplacementObjectForResultObject(MonoTouch.Foundation.INSMetadataQueryDelegate,MonoTouch.Foundation.NSMetadataQuery,MonoTouch.Foundation.NSMetadataItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSMetadataQueryDelegate" />
      </Targets>
      <Member MemberName="ReplacementValueForAttributevalue">
        <MemberSignature Language="C#" Value="public static Foundation.NSObject ReplacementValueForAttributevalue (this Foundation.INSMetadataQueryDelegate This, Foundation.NSMetadataQuery query, string attributeName, Foundation.NSObject value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSObject ReplacementValueForAttributevalue(class Foundation.INSMetadataQueryDelegate This, class Foundation.NSMetadataQuery query, string attributeName, class Foundation.NSObject value) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSObject</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSMetadataQueryDelegate" RefType="this" />
          <Parameter Name="query" Type="MonoTouch.Foundation.NSMetadataQuery" />
          <Parameter Name="attributeName" Type="System.String" />
          <Parameter Name="value" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="query">To be added.</param>
          <param name="attributeName">To be added.</param>
          <param name="value">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSMetadataQueryDelegate_Extensions" Member="M:MonoTouch.Foundation.NSMetadataQueryDelegate_Extensions.ReplacementValueForAttributevalue(MonoTouch.Foundation.INSMetadataQueryDelegate,MonoTouch.Foundation.NSMetadataQuery,System.String,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSNetServiceBrowserDelegate" />
      </Targets>
      <Member MemberName="DomainRemoved">
        <MemberSignature Language="C#" Value="public static void DomainRemoved (this Foundation.INSNetServiceBrowserDelegate This, Foundation.NSNetServiceBrowser sender, string domain, bool moreComing);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DomainRemoved(class Foundation.INSNetServiceBrowserDelegate This, class Foundation.NSNetServiceBrowser sender, string domain, bool moreComing) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSNetServiceBrowserDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSNetServiceBrowser" />
          <Parameter Name="domain" Type="System.String" />
          <Parameter Name="moreComing" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <param name="domain">To be added.</param>
          <param name="moreComing">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSNetServiceBrowserDelegate_Extensions" Member="M:MonoTouch.Foundation.NSNetServiceBrowserDelegate_Extensions.DomainRemoved(MonoTouch.Foundation.INSNetServiceBrowserDelegate,MonoTouch.Foundation.NSNetServiceBrowser,System.String,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSNetServiceBrowserDelegate" />
      </Targets>
      <Member MemberName="FoundDomain">
        <MemberSignature Language="C#" Value="public static void FoundDomain (this Foundation.INSNetServiceBrowserDelegate This, Foundation.NSNetServiceBrowser sender, string domain, bool moreComing);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FoundDomain(class Foundation.INSNetServiceBrowserDelegate This, class Foundation.NSNetServiceBrowser sender, string domain, bool moreComing) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSNetServiceBrowserDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSNetServiceBrowser" />
          <Parameter Name="domain" Type="System.String" />
          <Parameter Name="moreComing" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <param name="domain">To be added.</param>
          <param name="moreComing">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSNetServiceBrowserDelegate_Extensions" Member="M:MonoTouch.Foundation.NSNetServiceBrowserDelegate_Extensions.FoundDomain(MonoTouch.Foundation.INSNetServiceBrowserDelegate,MonoTouch.Foundation.NSNetServiceBrowser,System.String,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSNetServiceBrowserDelegate" />
      </Targets>
      <Member MemberName="FoundService">
        <MemberSignature Language="C#" Value="public static void FoundService (this Foundation.INSNetServiceBrowserDelegate This, Foundation.NSNetServiceBrowser sender, Foundation.NSNetService service, bool moreComing);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FoundService(class Foundation.INSNetServiceBrowserDelegate This, class Foundation.NSNetServiceBrowser sender, class Foundation.NSNetService service, bool moreComing) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSNetServiceBrowserDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSNetServiceBrowser" />
          <Parameter Name="service" Type="MonoTouch.Foundation.NSNetService" />
          <Parameter Name="moreComing" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <param name="service">To be added.</param>
          <param name="moreComing">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSNetServiceBrowserDelegate_Extensions" Member="M:MonoTouch.Foundation.NSNetServiceBrowserDelegate_Extensions.FoundService(MonoTouch.Foundation.INSNetServiceBrowserDelegate,MonoTouch.Foundation.NSNetServiceBrowser,MonoTouch.Foundation.NSNetService,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSNetServiceBrowserDelegate" />
      </Targets>
      <Member MemberName="NotSearched">
        <MemberSignature Language="C#" Value="public static void NotSearched (this Foundation.INSNetServiceBrowserDelegate This, Foundation.NSNetServiceBrowser sender, Foundation.NSDictionary errors);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NotSearched(class Foundation.INSNetServiceBrowserDelegate This, class Foundation.NSNetServiceBrowser sender, class Foundation.NSDictionary errors) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSNetServiceBrowserDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSNetServiceBrowser" />
          <Parameter Name="errors" Type="MonoTouch.Foundation.NSDictionary" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <param name="errors">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSNetServiceBrowserDelegate_Extensions" Member="M:MonoTouch.Foundation.NSNetServiceBrowserDelegate_Extensions.NotSearched(MonoTouch.Foundation.INSNetServiceBrowserDelegate,MonoTouch.Foundation.NSNetServiceBrowser,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSNetServiceBrowserDelegate" />
      </Targets>
      <Member MemberName="SearchStarted">
        <MemberSignature Language="C#" Value="public static void SearchStarted (this Foundation.INSNetServiceBrowserDelegate This, Foundation.NSNetServiceBrowser sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SearchStarted(class Foundation.INSNetServiceBrowserDelegate This, class Foundation.NSNetServiceBrowser sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSNetServiceBrowserDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSNetServiceBrowser" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSNetServiceBrowserDelegate_Extensions" Member="M:MonoTouch.Foundation.NSNetServiceBrowserDelegate_Extensions.SearchStarted(MonoTouch.Foundation.INSNetServiceBrowserDelegate,MonoTouch.Foundation.NSNetServiceBrowser)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSNetServiceBrowserDelegate" />
      </Targets>
      <Member MemberName="SearchStopped">
        <MemberSignature Language="C#" Value="public static void SearchStopped (this Foundation.INSNetServiceBrowserDelegate This, Foundation.NSNetServiceBrowser sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SearchStopped(class Foundation.INSNetServiceBrowserDelegate This, class Foundation.NSNetServiceBrowser sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSNetServiceBrowserDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSNetServiceBrowser" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSNetServiceBrowserDelegate_Extensions" Member="M:MonoTouch.Foundation.NSNetServiceBrowserDelegate_Extensions.SearchStopped(MonoTouch.Foundation.INSNetServiceBrowserDelegate,MonoTouch.Foundation.NSNetServiceBrowser)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSNetServiceBrowserDelegate" />
      </Targets>
      <Member MemberName="ServiceRemoved">
        <MemberSignature Language="C#" Value="public static void ServiceRemoved (this Foundation.INSNetServiceBrowserDelegate This, Foundation.NSNetServiceBrowser sender, Foundation.NSNetService service, bool moreComing);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ServiceRemoved(class Foundation.INSNetServiceBrowserDelegate This, class Foundation.NSNetServiceBrowser sender, class Foundation.NSNetService service, bool moreComing) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSNetServiceBrowserDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSNetServiceBrowser" />
          <Parameter Name="service" Type="MonoTouch.Foundation.NSNetService" />
          <Parameter Name="moreComing" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <param name="service">To be added.</param>
          <param name="moreComing">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSNetServiceBrowserDelegate_Extensions" Member="M:MonoTouch.Foundation.NSNetServiceBrowserDelegate_Extensions.ServiceRemoved(MonoTouch.Foundation.INSNetServiceBrowserDelegate,MonoTouch.Foundation.NSNetServiceBrowser,MonoTouch.Foundation.NSNetService,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSNetServiceDelegate" />
      </Targets>
      <Member MemberName="AddressResolved">
        <MemberSignature Language="C#" Value="public static void AddressResolved (this Foundation.INSNetServiceDelegate This, Foundation.NSNetService sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddressResolved(class Foundation.INSNetServiceDelegate This, class Foundation.NSNetService sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSNetServiceDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSNetService" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSNetServiceDelegate_Extensions" Member="M:MonoTouch.Foundation.NSNetServiceDelegate_Extensions.AddressResolved(MonoTouch.Foundation.INSNetServiceDelegate,MonoTouch.Foundation.NSNetService)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSNetServiceDelegate" />
      </Targets>
      <Member MemberName="DidAcceptConnection">
        <MemberSignature Language="C#" Value="public static void DidAcceptConnection (this Foundation.INSNetServiceDelegate This, Foundation.NSNetService sender, Foundation.NSInputStream inputStream, Foundation.NSOutputStream outputStream);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAcceptConnection(class Foundation.INSNetServiceDelegate This, class Foundation.NSNetService sender, class Foundation.NSInputStream inputStream, class Foundation.NSOutputStream outputStream) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSNetServiceDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSNetService" />
          <Parameter Name="inputStream" Type="MonoTouch.Foundation.NSInputStream" />
          <Parameter Name="outputStream" Type="MonoTouch.Foundation.NSOutputStream" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <param name="inputStream">To be added.</param>
          <param name="outputStream">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSNetServiceDelegate_Extensions" Member="M:MonoTouch.Foundation.NSNetServiceDelegate_Extensions.DidAcceptConnection(MonoTouch.Foundation.INSNetServiceDelegate,MonoTouch.Foundation.NSNetService,MonoTouch.Foundation.NSInputStream,MonoTouch.Foundation.NSOutputStream)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSNetServiceDelegate" />
      </Targets>
      <Member MemberName="Published">
        <MemberSignature Language="C#" Value="public static void Published (this Foundation.INSNetServiceDelegate This, Foundation.NSNetService sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Published(class Foundation.INSNetServiceDelegate This, class Foundation.NSNetService sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSNetServiceDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSNetService" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSNetServiceDelegate_Extensions" Member="M:MonoTouch.Foundation.NSNetServiceDelegate_Extensions.Published(MonoTouch.Foundation.INSNetServiceDelegate,MonoTouch.Foundation.NSNetService)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSNetServiceDelegate" />
      </Targets>
      <Member MemberName="PublishFailure">
        <MemberSignature Language="C#" Value="public static void PublishFailure (this Foundation.INSNetServiceDelegate This, Foundation.NSNetService sender, Foundation.NSDictionary errors);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PublishFailure(class Foundation.INSNetServiceDelegate This, class Foundation.NSNetService sender, class Foundation.NSDictionary errors) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSNetServiceDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSNetService" />
          <Parameter Name="errors" Type="MonoTouch.Foundation.NSDictionary" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <param name="errors">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSNetServiceDelegate_Extensions" Member="M:MonoTouch.Foundation.NSNetServiceDelegate_Extensions.PublishFailure(MonoTouch.Foundation.INSNetServiceDelegate,MonoTouch.Foundation.NSNetService,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSNetServiceDelegate" />
      </Targets>
      <Member MemberName="ResolveFailure">
        <MemberSignature Language="C#" Value="public static void ResolveFailure (this Foundation.INSNetServiceDelegate This, Foundation.NSNetService sender, Foundation.NSDictionary errors);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveFailure(class Foundation.INSNetServiceDelegate This, class Foundation.NSNetService sender, class Foundation.NSDictionary errors) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSNetServiceDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSNetService" />
          <Parameter Name="errors" Type="MonoTouch.Foundation.NSDictionary" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <param name="errors">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSNetServiceDelegate_Extensions" Member="M:MonoTouch.Foundation.NSNetServiceDelegate_Extensions.ResolveFailure(MonoTouch.Foundation.INSNetServiceDelegate,MonoTouch.Foundation.NSNetService,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSNetServiceDelegate" />
      </Targets>
      <Member MemberName="Stopped">
        <MemberSignature Language="C#" Value="public static void Stopped (this Foundation.INSNetServiceDelegate This, Foundation.NSNetService sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Stopped(class Foundation.INSNetServiceDelegate This, class Foundation.NSNetService sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSNetServiceDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSNetService" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSNetServiceDelegate_Extensions" Member="M:MonoTouch.Foundation.NSNetServiceDelegate_Extensions.Stopped(MonoTouch.Foundation.INSNetServiceDelegate,MonoTouch.Foundation.NSNetService)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSNetServiceDelegate" />
      </Targets>
      <Member MemberName="UpdatedTxtRecordData">
        <MemberSignature Language="C#" Value="public static void UpdatedTxtRecordData (this Foundation.INSNetServiceDelegate This, Foundation.NSNetService sender, Foundation.NSData data);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdatedTxtRecordData(class Foundation.INSNetServiceDelegate This, class Foundation.NSNetService sender, class Foundation.NSData data) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSNetServiceDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSNetService" />
          <Parameter Name="data" Type="MonoTouch.Foundation.NSData" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <param name="data">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSNetServiceDelegate_Extensions" Member="M:MonoTouch.Foundation.NSNetServiceDelegate_Extensions.UpdatedTxtRecordData(MonoTouch.Foundation.INSNetServiceDelegate,MonoTouch.Foundation.NSNetService,MonoTouch.Foundation.NSData)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSNetServiceDelegate" />
      </Targets>
      <Member MemberName="WillPublish">
        <MemberSignature Language="C#" Value="public static void WillPublish (this Foundation.INSNetServiceDelegate This, Foundation.NSNetService sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillPublish(class Foundation.INSNetServiceDelegate This, class Foundation.NSNetService sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSNetServiceDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSNetService" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSNetServiceDelegate_Extensions" Member="M:MonoTouch.Foundation.NSNetServiceDelegate_Extensions.WillPublish(MonoTouch.Foundation.INSNetServiceDelegate,MonoTouch.Foundation.NSNetService)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSNetServiceDelegate" />
      </Targets>
      <Member MemberName="WillResolve">
        <MemberSignature Language="C#" Value="public static void WillResolve (this Foundation.INSNetServiceDelegate This, Foundation.NSNetService sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillResolve(class Foundation.INSNetServiceDelegate This, class Foundation.NSNetService sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSNetServiceDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSNetService" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSNetServiceDelegate_Extensions" Member="M:MonoTouch.Foundation.NSNetServiceDelegate_Extensions.WillResolve(MonoTouch.Foundation.INSNetServiceDelegate,MonoTouch.Foundation.NSNetService)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSObjectProtocol" />
      </Targets>
      <Member MemberName="GetDebugDescription">
        <MemberSignature Language="C#" Value="public static string GetDebugDescription (this Foundation.INSObjectProtocol This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDebugDescription(class Foundation.INSObjectProtocol This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSObjectProtocol" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSObjectProtocol_Extensions" Member="M:MonoTouch.Foundation.NSObjectProtocol_Extensions.GetDebugDescription(MonoTouch.Foundation.INSObjectProtocol)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSPortDelegate" />
      </Targets>
      <Member MemberName="MessageReceived">
        <MemberSignature Language="C#" Value="public static void MessageReceived (this Foundation.INSPortDelegate This, Foundation.NSPortMessage message);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MessageReceived(class Foundation.INSPortDelegate This, class Foundation.NSPortMessage message) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSPortDelegate" RefType="this" />
          <Parameter Name="message" Type="MonoTouch.Foundation.NSPortMessage" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="message">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSPortDelegate_Extensions" Member="M:MonoTouch.Foundation.NSPortDelegate_Extensions.MessageReceived(MonoTouch.Foundation.INSPortDelegate,MonoTouch.Foundation.NSPortMessage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSArray" />
      </Targets>
      <Member MemberName="FilterUsingPredicate">
        <MemberSignature Language="C#" Value="public static Foundation.NSArray FilterUsingPredicate (this Foundation.NSArray This, Foundation.NSArray array);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSArray FilterUsingPredicate(class Foundation.NSArray This, class Foundation.NSArray array) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSArray</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSArray" RefType="this" />
          <Parameter Name="array" Type="MonoTouch.Foundation.NSArray" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="array">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSPredicateSupport_NSArray" Member="M:MonoTouch.Foundation.NSPredicateSupport_NSArray.FilterUsingPredicate(MonoTouch.Foundation.NSArray,MonoTouch.Foundation.NSArray)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSMutableArray" />
      </Targets>
      <Member MemberName="FilterUsingPredicate">
        <MemberSignature Language="C#" Value="public static void FilterUsingPredicate (this Foundation.NSMutableArray This, Foundation.NSPredicate predicate);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FilterUsingPredicate(class Foundation.NSMutableArray This, class Foundation.NSPredicate predicate) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSMutableArray" RefType="this" />
          <Parameter Name="predicate" Type="MonoTouch.Foundation.NSPredicate" />
        </Parameters>
        <Docs>
          <param name="This">The target mutable array.</param>
          <param name="predicate">The predicate used to filter the
	elements of the array.</param>
          <summary>Filters the element of the array in place, by keeping
	only the elements that match.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSPredicateSupport_NSMutableArray" Member="M:MonoTouch.Foundation.NSPredicateSupport_NSMutableArray.FilterUsingPredicate(MonoTouch.Foundation.NSMutableArray,MonoTouch.Foundation.NSPredicate)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSMutableOrderedSet" />
      </Targets>
      <Member MemberName="FilterUsingPredicate">
        <MemberSignature Language="C#" Value="public static void FilterUsingPredicate (this Foundation.NSMutableOrderedSet This, Foundation.NSPredicate p);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FilterUsingPredicate(class Foundation.NSMutableOrderedSet This, class Foundation.NSPredicate p) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSMutableOrderedSet" RefType="this" />
          <Parameter Name="p" Type="MonoTouch.Foundation.NSPredicate" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="p">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSPredicateSupport_NSMutableOrderedSet" Member="M:MonoTouch.Foundation.NSPredicateSupport_NSMutableOrderedSet.FilterUsingPredicate(MonoTouch.Foundation.NSMutableOrderedSet,MonoTouch.Foundation.NSPredicate)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSMutableSet" />
      </Targets>
      <Member MemberName="FilterUsingPredicate">
        <MemberSignature Language="C#" Value="public static void FilterUsingPredicate (this Foundation.NSMutableSet This, Foundation.NSPredicate predicate);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FilterUsingPredicate(class Foundation.NSMutableSet This, class Foundation.NSPredicate predicate) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSMutableSet" RefType="this" />
          <Parameter Name="predicate" Type="MonoTouch.Foundation.NSPredicate" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="predicate">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSPredicateSupport_NSMutableSet" Member="M:MonoTouch.Foundation.NSPredicateSupport_NSMutableSet.FilterUsingPredicate(MonoTouch.Foundation.NSMutableSet,MonoTouch.Foundation.NSPredicate)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSOrderedSet" />
      </Targets>
      <Member MemberName="FilterUsingPredicate">
        <MemberSignature Language="C#" Value="public static Foundation.NSOrderedSet FilterUsingPredicate (this Foundation.NSOrderedSet This, Foundation.NSPredicate p);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSOrderedSet FilterUsingPredicate(class Foundation.NSOrderedSet This, class Foundation.NSPredicate p) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSOrderedSet</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSOrderedSet" RefType="this" />
          <Parameter Name="p" Type="MonoTouch.Foundation.NSPredicate" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="p">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSPredicateSupport_NSOrderedSet" Member="M:MonoTouch.Foundation.NSPredicateSupport_NSOrderedSet.FilterUsingPredicate(MonoTouch.Foundation.NSOrderedSet,MonoTouch.Foundation.NSPredicate)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSSet" />
      </Targets>
      <Member MemberName="FilterUsingPredicate">
        <MemberSignature Language="C#" Value="public static Foundation.NSSet FilterUsingPredicate (this Foundation.NSSet This, Foundation.NSPredicate predicate);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSSet FilterUsingPredicate(class Foundation.NSSet This, class Foundation.NSPredicate predicate) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSSet</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSSet" RefType="this" />
          <Parameter Name="predicate" Type="MonoTouch.Foundation.NSPredicate" />
        </Parameters>
        <Docs>
          <param name="This">The nsset on which the predicate will run.</param>
          <param name="predicate">The predicate used to filter the
	elements of the set.</param>
          <summary>Returns a new set that contains the elements that
	match the predicate.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSPredicateSupport_NSSet" Member="M:MonoTouch.Foundation.NSPredicateSupport_NSSet.FilterUsingPredicate(MonoTouch.Foundation.NSSet,MonoTouch.Foundation.NSPredicate)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSProgressReporting" />
      </Targets>
      <Member MemberName="GetProgress">
        <MemberSignature Language="C#" Value="public static Foundation.NSProgress GetProgress (this Foundation.INSProgressReporting This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSProgress GetProgress(class Foundation.INSProgressReporting This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSProgress</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSProgressReporting" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSProgressReporting_Extensions" Member="M:MonoTouch.Foundation.NSProgressReporting_Extensions.GetProgress(MonoTouch.Foundation.INSProgressReporting)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSRunLoopMode" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this Foundation.NSRunLoopMode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype Foundation.NSRunLoopMode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.Foundation.NSRunLoopMode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSRunLoopModeExtensions" Member="M:MonoTouch.Foundation.NSRunLoopModeExtensions.GetConstant(MonoTouch.Foundation.NSRunLoopMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSRunLoopMode" />
      </Targets>
      <Member MemberName="GetConstants">
        <MemberSignature Language="C#" Value="public static Foundation.NSString[] GetConstants (this Foundation.NSRunLoopMode[] self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString[] GetConstants(valuetype Foundation.NSRunLoopMode[] self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.Foundation.NSRunLoopMode[]" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSRunLoopModeExtensions" Member="M:MonoTouch.Foundation.NSRunLoopModeExtensions.GetConstants(MonoTouch.Foundation.NSRunLoopMode[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSMutableArray" />
      </Targets>
      <Member MemberName="SortUsingDescriptors">
        <MemberSignature Language="C#" Value="public static void SortUsingDescriptors (this Foundation.NSMutableArray This, Foundation.NSSortDescriptor[] sortDescriptors);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SortUsingDescriptors(class Foundation.NSMutableArray This, class Foundation.NSSortDescriptor[] sortDescriptors) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSMutableArray" RefType="this" />
          <Parameter Name="sortDescriptors" Type="MonoTouch.Foundation.NSSortDescriptor[]" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="sortDescriptors">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSSortDescriptorSorting_NSMutableArray" Member="M:MonoTouch.Foundation.NSSortDescriptorSorting_NSMutableArray.SortUsingDescriptors(MonoTouch.Foundation.NSMutableArray,MonoTouch.Foundation.NSSortDescriptor[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSStreamDelegate" />
      </Targets>
      <Member MemberName="HandleEvent">
        <MemberSignature Language="C#" Value="public static void HandleEvent (this Foundation.INSStreamDelegate This, Foundation.NSStream theStream, Foundation.NSStreamEvent streamEvent);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleEvent(class Foundation.INSStreamDelegate This, class Foundation.NSStream theStream, valuetype Foundation.NSStreamEvent streamEvent) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSStreamDelegate" RefType="this" />
          <Parameter Name="theStream" Type="MonoTouch.Foundation.NSStream" />
          <Parameter Name="streamEvent" Type="MonoTouch.Foundation.NSStreamEvent" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="theStream">To be added.</param>
          <param name="streamEvent">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSStreamDelegate_Extensions" Member="M:MonoTouch.Foundation.NSStreamDelegate_Extensions.HandleEvent(MonoTouch.Foundation.INSStreamDelegate,MonoTouch.Foundation.NSStream,MonoTouch.Foundation.NSStreamEvent)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSStringTransform" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this Foundation.NSStringTransform self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype Foundation.NSStringTransform self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.Foundation.NSStringTransform" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSStringTransformExtensions" Member="M:MonoTouch.Foundation.NSStringTransformExtensions.GetConstant(MonoTouch.Foundation.NSStringTransform)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSUrl" />
      </Targets>
      <Member MemberName="CheckPromisedItemIsReachable">
        <MemberSignature Language="C#" Value="public static bool CheckPromisedItemIsReachable (this Foundation.NSUrl This, out Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CheckPromisedItemIsReachable(class Foundation.NSUrl This, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSUrl" RefType="this" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrl_PromisedItems" Member="M:MonoTouch.Foundation.NSUrl_PromisedItems.CheckPromisedItemIsReachable(MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSError@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSUrl" />
      </Targets>
      <Member MemberName="GetPromisedItemResourceValue">
        <MemberSignature Language="C#" Value="public static bool GetPromisedItemResourceValue (this Foundation.NSUrl This, out Foundation.NSObject value, Foundation.NSString key, out Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetPromisedItemResourceValue(class Foundation.NSUrl This, class Foundation.NSObject value, class Foundation.NSString key, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSUrl" RefType="this" />
          <Parameter Name="value" Type="MonoTouch.Foundation.NSObject&amp;" RefType="out" />
          <Parameter Name="key" Type="MonoTouch.Foundation.NSString" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="value">To be added.</param>
          <param name="key">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrl_PromisedItems" Member="M:MonoTouch.Foundation.NSUrl_PromisedItems.GetPromisedItemResourceValue(MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSObject@,MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSError@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSUrl" />
      </Targets>
      <Member MemberName="GetPromisedItemResourceValues">
        <MemberSignature Language="C#" Value="public static Foundation.NSDictionary GetPromisedItemResourceValues (this Foundation.NSUrl This, Foundation.NSString[] keys, out Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSDictionary GetPromisedItemResourceValues(class Foundation.NSUrl This, class Foundation.NSString[] keys, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSDictionary</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSUrl" RefType="this" />
          <Parameter Name="keys" Type="MonoTouch.Foundation.NSString[]" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="keys">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrl_PromisedItems" Member="M:MonoTouch.Foundation.NSUrl_PromisedItems.GetPromisedItemResourceValues(MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSString[],MonoTouch.Foundation.NSError@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSURLAuthenticationChallengeSender" />
      </Targets>
      <Member MemberName="PerformDefaultHandling">
        <MemberSignature Language="C#" Value="public static void PerformDefaultHandling (this Foundation.INSURLAuthenticationChallengeSender This, Foundation.NSUrlAuthenticationChallenge challenge);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformDefaultHandling(class Foundation.INSURLAuthenticationChallengeSender This, class Foundation.NSUrlAuthenticationChallenge challenge) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSURLAuthenticationChallengeSender" RefType="this" />
          <Parameter Name="challenge" Type="MonoTouch.Foundation.NSUrlAuthenticationChallenge" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="challenge">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSURLAuthenticationChallengeSender_Extensions" Member="M:MonoTouch.Foundation.NSURLAuthenticationChallengeSender_Extensions.PerformDefaultHandling(MonoTouch.Foundation.INSURLAuthenticationChallengeSender,MonoTouch.Foundation.NSUrlAuthenticationChallenge)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSURLAuthenticationChallengeSender" />
      </Targets>
      <Member MemberName="RejectProtectionSpaceAndContinue">
        <MemberSignature Language="C#" Value="public static void RejectProtectionSpaceAndContinue (this Foundation.INSURLAuthenticationChallengeSender This, Foundation.NSUrlAuthenticationChallenge challenge);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RejectProtectionSpaceAndContinue(class Foundation.INSURLAuthenticationChallengeSender This, class Foundation.NSUrlAuthenticationChallenge challenge) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSURLAuthenticationChallengeSender" RefType="this" />
          <Parameter Name="challenge" Type="MonoTouch.Foundation.NSUrlAuthenticationChallenge" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="challenge">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSURLAuthenticationChallengeSender_Extensions" Member="M:MonoTouch.Foundation.NSURLAuthenticationChallengeSender_Extensions.RejectProtectionSpaceAndContinue(MonoTouch.Foundation.INSURLAuthenticationChallengeSender,MonoTouch.Foundation.NSUrlAuthenticationChallenge)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlConnectionDataDelegate" />
      </Targets>
      <Member MemberName="FinishedLoading">
        <MemberSignature Language="C#" Value="public static void FinishedLoading (this Foundation.INSUrlConnectionDataDelegate This, Foundation.NSUrlConnection connection);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FinishedLoading(class Foundation.INSUrlConnectionDataDelegate This, class Foundation.NSUrlConnection connection) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlConnectionDataDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.Foundation.NSUrlConnection" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="connection">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlConnectionDataDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlConnectionDataDelegate_Extensions.FinishedLoading(MonoTouch.Foundation.INSUrlConnectionDataDelegate,MonoTouch.Foundation.NSUrlConnection)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlConnectionDataDelegate" />
      </Targets>
      <Member MemberName="NeedNewBodyStream">
        <MemberSignature Language="C#" Value="public static Foundation.NSInputStream NeedNewBodyStream (this Foundation.INSUrlConnectionDataDelegate This, Foundation.NSUrlConnection connection, Foundation.NSUrlRequest request);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSInputStream NeedNewBodyStream(class Foundation.INSUrlConnectionDataDelegate This, class Foundation.NSUrlConnection connection, class Foundation.NSUrlRequest request) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSInputStream</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlConnectionDataDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.Foundation.NSUrlConnection" />
          <Parameter Name="request" Type="MonoTouch.Foundation.NSUrlRequest" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="connection">To be added.</param>
          <param name="request">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlConnectionDataDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlConnectionDataDelegate_Extensions.NeedNewBodyStream(MonoTouch.Foundation.INSUrlConnectionDataDelegate,MonoTouch.Foundation.NSUrlConnection,MonoTouch.Foundation.NSUrlRequest)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlConnectionDataDelegate" />
      </Targets>
      <Member MemberName="ReceivedData">
        <MemberSignature Language="C#" Value="public static void ReceivedData (this Foundation.INSUrlConnectionDataDelegate This, Foundation.NSUrlConnection connection, Foundation.NSData data);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceivedData(class Foundation.INSUrlConnectionDataDelegate This, class Foundation.NSUrlConnection connection, class Foundation.NSData data) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlConnectionDataDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.Foundation.NSUrlConnection" />
          <Parameter Name="data" Type="MonoTouch.Foundation.NSData" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="connection">To be added.</param>
          <param name="data">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlConnectionDataDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlConnectionDataDelegate_Extensions.ReceivedData(MonoTouch.Foundation.INSUrlConnectionDataDelegate,MonoTouch.Foundation.NSUrlConnection,MonoTouch.Foundation.NSData)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlConnectionDataDelegate" />
      </Targets>
      <Member MemberName="ReceivedResponse">
        <MemberSignature Language="C#" Value="public static void ReceivedResponse (this Foundation.INSUrlConnectionDataDelegate This, Foundation.NSUrlConnection connection, Foundation.NSUrlResponse response);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceivedResponse(class Foundation.INSUrlConnectionDataDelegate This, class Foundation.NSUrlConnection connection, class Foundation.NSUrlResponse response) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlConnectionDataDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.Foundation.NSUrlConnection" />
          <Parameter Name="response" Type="MonoTouch.Foundation.NSUrlResponse" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="connection">To be added.</param>
          <param name="response">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlConnectionDataDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlConnectionDataDelegate_Extensions.ReceivedResponse(MonoTouch.Foundation.INSUrlConnectionDataDelegate,MonoTouch.Foundation.NSUrlConnection,MonoTouch.Foundation.NSUrlResponse)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlConnectionDataDelegate" />
      </Targets>
      <Member MemberName="SentBodyData">
        <MemberSignature Language="C#" Value="public static void SentBodyData (this Foundation.INSUrlConnectionDataDelegate This, Foundation.NSUrlConnection connection, nint bytesWritten, nint totalBytesWritten, nint totalBytesExpectedToWrite);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SentBodyData(class Foundation.INSUrlConnectionDataDelegate This, class Foundation.NSUrlConnection connection, valuetype System.nint bytesWritten, valuetype System.nint totalBytesWritten, valuetype System.nint totalBytesExpectedToWrite) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlConnectionDataDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.Foundation.NSUrlConnection" />
          <Parameter Name="bytesWritten" Type="System.nint" />
          <Parameter Name="totalBytesWritten" Type="System.nint" />
          <Parameter Name="totalBytesExpectedToWrite" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="connection">To be added.</param>
          <param name="bytesWritten">To be added.</param>
          <param name="totalBytesWritten">To be added.</param>
          <param name="totalBytesExpectedToWrite">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlConnectionDataDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlConnectionDataDelegate_Extensions.SentBodyData(MonoTouch.Foundation.INSUrlConnectionDataDelegate,MonoTouch.Foundation.NSUrlConnection,System.nint,System.nint,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlConnectionDataDelegate" />
      </Targets>
      <Member MemberName="WillCacheResponse">
        <MemberSignature Language="C#" Value="public static Foundation.NSCachedUrlResponse WillCacheResponse (this Foundation.INSUrlConnectionDataDelegate This, Foundation.NSUrlConnection connection, Foundation.NSCachedUrlResponse cachedResponse);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSCachedUrlResponse WillCacheResponse(class Foundation.INSUrlConnectionDataDelegate This, class Foundation.NSUrlConnection connection, class Foundation.NSCachedUrlResponse cachedResponse) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSCachedUrlResponse</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlConnectionDataDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.Foundation.NSUrlConnection" />
          <Parameter Name="cachedResponse" Type="MonoTouch.Foundation.NSCachedUrlResponse" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="connection">To be added.</param>
          <param name="cachedResponse">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlConnectionDataDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlConnectionDataDelegate_Extensions.WillCacheResponse(MonoTouch.Foundation.INSUrlConnectionDataDelegate,MonoTouch.Foundation.NSUrlConnection,MonoTouch.Foundation.NSCachedUrlResponse)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlConnectionDataDelegate" />
      </Targets>
      <Member MemberName="WillSendRequest">
        <MemberSignature Language="C#" Value="public static Foundation.NSUrlRequest WillSendRequest (this Foundation.INSUrlConnectionDataDelegate This, Foundation.NSUrlConnection connection, Foundation.NSUrlRequest request, Foundation.NSUrlResponse response);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSUrlRequest WillSendRequest(class Foundation.INSUrlConnectionDataDelegate This, class Foundation.NSUrlConnection connection, class Foundation.NSUrlRequest request, class Foundation.NSUrlResponse response) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSUrlRequest</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlConnectionDataDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.Foundation.NSUrlConnection" />
          <Parameter Name="request" Type="MonoTouch.Foundation.NSUrlRequest" />
          <Parameter Name="response" Type="MonoTouch.Foundation.NSUrlResponse" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="connection">To be added.</param>
          <param name="request">To be added.</param>
          <param name="response">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlConnectionDataDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlConnectionDataDelegate_Extensions.WillSendRequest(MonoTouch.Foundation.INSUrlConnectionDataDelegate,MonoTouch.Foundation.NSUrlConnection,MonoTouch.Foundation.NSUrlRequest,MonoTouch.Foundation.NSUrlResponse)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlConnectionDelegate" />
      </Targets>
      <Member MemberName="CanAuthenticateAgainstProtectionSpace">
        <MemberSignature Language="C#" Value="public static bool CanAuthenticateAgainstProtectionSpace (this Foundation.INSUrlConnectionDelegate This, Foundation.NSUrlConnection connection, Foundation.NSUrlProtectionSpace protectionSpace);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanAuthenticateAgainstProtectionSpace(class Foundation.INSUrlConnectionDelegate This, class Foundation.NSUrlConnection connection, class Foundation.NSUrlProtectionSpace protectionSpace) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlConnectionDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.Foundation.NSUrlConnection" />
          <Parameter Name="protectionSpace" Type="MonoTouch.Foundation.NSUrlProtectionSpace" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="connection">To be added.</param>
          <param name="protectionSpace">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlConnectionDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlConnectionDelegate_Extensions.CanAuthenticateAgainstProtectionSpace(MonoTouch.Foundation.INSUrlConnectionDelegate,MonoTouch.Foundation.NSUrlConnection,MonoTouch.Foundation.NSUrlProtectionSpace)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlConnectionDelegate" />
      </Targets>
      <Member MemberName="CanceledAuthenticationChallenge">
        <MemberSignature Language="C#" Value="public static void CanceledAuthenticationChallenge (this Foundation.INSUrlConnectionDelegate This, Foundation.NSUrlConnection connection, Foundation.NSUrlAuthenticationChallenge challenge);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CanceledAuthenticationChallenge(class Foundation.INSUrlConnectionDelegate This, class Foundation.NSUrlConnection connection, class Foundation.NSUrlAuthenticationChallenge challenge) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlConnectionDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.Foundation.NSUrlConnection" />
          <Parameter Name="challenge" Type="MonoTouch.Foundation.NSUrlAuthenticationChallenge" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="connection">To be added.</param>
          <param name="challenge">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlConnectionDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlConnectionDelegate_Extensions.CanceledAuthenticationChallenge(MonoTouch.Foundation.INSUrlConnectionDelegate,MonoTouch.Foundation.NSUrlConnection,MonoTouch.Foundation.NSUrlAuthenticationChallenge)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlConnectionDelegate" />
      </Targets>
      <Member MemberName="ConnectionShouldUseCredentialStorage">
        <MemberSignature Language="C#" Value="public static bool ConnectionShouldUseCredentialStorage (this Foundation.INSUrlConnectionDelegate This, Foundation.NSUrlConnection connection);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ConnectionShouldUseCredentialStorage(class Foundation.INSUrlConnectionDelegate This, class Foundation.NSUrlConnection connection) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlConnectionDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.Foundation.NSUrlConnection" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="connection">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlConnectionDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlConnectionDelegate_Extensions.ConnectionShouldUseCredentialStorage(MonoTouch.Foundation.INSUrlConnectionDelegate,MonoTouch.Foundation.NSUrlConnection)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlConnectionDelegate" />
      </Targets>
      <Member MemberName="FailedWithError">
        <MemberSignature Language="C#" Value="public static void FailedWithError (this Foundation.INSUrlConnectionDelegate This, Foundation.NSUrlConnection connection, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FailedWithError(class Foundation.INSUrlConnectionDelegate This, class Foundation.NSUrlConnection connection, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlConnectionDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.Foundation.NSUrlConnection" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="connection">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlConnectionDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlConnectionDelegate_Extensions.FailedWithError(MonoTouch.Foundation.INSUrlConnectionDelegate,MonoTouch.Foundation.NSUrlConnection,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlConnectionDelegate" />
      </Targets>
      <Member MemberName="ReceivedAuthenticationChallenge">
        <MemberSignature Language="C#" Value="public static void ReceivedAuthenticationChallenge (this Foundation.INSUrlConnectionDelegate This, Foundation.NSUrlConnection connection, Foundation.NSUrlAuthenticationChallenge challenge);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceivedAuthenticationChallenge(class Foundation.INSUrlConnectionDelegate This, class Foundation.NSUrlConnection connection, class Foundation.NSUrlAuthenticationChallenge challenge) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlConnectionDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.Foundation.NSUrlConnection" />
          <Parameter Name="challenge" Type="MonoTouch.Foundation.NSUrlAuthenticationChallenge" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="connection">To be added.</param>
          <param name="challenge">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlConnectionDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlConnectionDelegate_Extensions.ReceivedAuthenticationChallenge(MonoTouch.Foundation.INSUrlConnectionDelegate,MonoTouch.Foundation.NSUrlConnection,MonoTouch.Foundation.NSUrlAuthenticationChallenge)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlConnectionDelegate" />
      </Targets>
      <Member MemberName="WillSendRequestForAuthenticationChallenge">
        <MemberSignature Language="C#" Value="public static void WillSendRequestForAuthenticationChallenge (this Foundation.INSUrlConnectionDelegate This, Foundation.NSUrlConnection connection, Foundation.NSUrlAuthenticationChallenge challenge);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillSendRequestForAuthenticationChallenge(class Foundation.INSUrlConnectionDelegate This, class Foundation.NSUrlConnection connection, class Foundation.NSUrlAuthenticationChallenge challenge) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlConnectionDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.Foundation.NSUrlConnection" />
          <Parameter Name="challenge" Type="MonoTouch.Foundation.NSUrlAuthenticationChallenge" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="connection">To be added.</param>
          <param name="challenge">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlConnectionDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlConnectionDelegate_Extensions.WillSendRequestForAuthenticationChallenge(MonoTouch.Foundation.INSUrlConnectionDelegate,MonoTouch.Foundation.NSUrlConnection,MonoTouch.Foundation.NSUrlAuthenticationChallenge)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlConnectionDownloadDelegate" />
      </Targets>
      <Member MemberName="ResumedDownloading">
        <MemberSignature Language="C#" Value="public static void ResumedDownloading (this Foundation.INSUrlConnectionDownloadDelegate This, Foundation.NSUrlConnection connection, long totalBytesWritten, long expectedTotalBytes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResumedDownloading(class Foundation.INSUrlConnectionDownloadDelegate This, class Foundation.NSUrlConnection connection, int64 totalBytesWritten, int64 expectedTotalBytes) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlConnectionDownloadDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.Foundation.NSUrlConnection" />
          <Parameter Name="totalBytesWritten" Type="System.Int64" />
          <Parameter Name="expectedTotalBytes" Type="System.Int64" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="connection">To be added.</param>
          <param name="totalBytesWritten">To be added.</param>
          <param name="expectedTotalBytes">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlConnectionDownloadDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlConnectionDownloadDelegate_Extensions.ResumedDownloading(MonoTouch.Foundation.INSUrlConnectionDownloadDelegate,MonoTouch.Foundation.NSUrlConnection,System.Int64,System.Int64)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlConnectionDownloadDelegate" />
      </Targets>
      <Member MemberName="WroteData">
        <MemberSignature Language="C#" Value="public static void WroteData (this Foundation.INSUrlConnectionDownloadDelegate This, Foundation.NSUrlConnection connection, long bytesWritten, long totalBytesWritten, long expectedTotalBytes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WroteData(class Foundation.INSUrlConnectionDownloadDelegate This, class Foundation.NSUrlConnection connection, int64 bytesWritten, int64 totalBytesWritten, int64 expectedTotalBytes) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlConnectionDownloadDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.Foundation.NSUrlConnection" />
          <Parameter Name="bytesWritten" Type="System.Int64" />
          <Parameter Name="totalBytesWritten" Type="System.Int64" />
          <Parameter Name="expectedTotalBytes" Type="System.Int64" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="connection">To be added.</param>
          <param name="bytesWritten">To be added.</param>
          <param name="totalBytesWritten">To be added.</param>
          <param name="expectedTotalBytes">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlConnectionDownloadDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlConnectionDownloadDelegate_Extensions.WroteData(MonoTouch.Foundation.INSUrlConnectionDownloadDelegate,MonoTouch.Foundation.NSUrlConnection,System.Int64,System.Int64,System.Int64)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionDataDelegate" />
      </Targets>
      <Member MemberName="DidBecomeDownloadTask">
        <MemberSignature Language="C#" Value="public static void DidBecomeDownloadTask (this Foundation.INSUrlSessionDataDelegate This, Foundation.NSUrlSession session, Foundation.NSUrlSessionDataTask dataTask, Foundation.NSUrlSessionDownloadTask downloadTask);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidBecomeDownloadTask(class Foundation.INSUrlSessionDataDelegate This, class Foundation.NSUrlSession session, class Foundation.NSUrlSessionDataTask dataTask, class Foundation.NSUrlSessionDownloadTask downloadTask) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionDataDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="dataTask" Type="MonoTouch.Foundation.NSUrlSessionDataTask" />
          <Parameter Name="downloadTask" Type="MonoTouch.Foundation.NSUrlSessionDownloadTask" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="dataTask">To be added.</param>
          <param name="downloadTask">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionDataDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionDataDelegate_Extensions.DidBecomeDownloadTask(MonoTouch.Foundation.INSUrlSessionDataDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlSessionDataTask,MonoTouch.Foundation.NSUrlSessionDownloadTask)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionDataDelegate" />
      </Targets>
      <Member MemberName="DidBecomeStreamTask">
        <MemberSignature Language="C#" Value="public static void DidBecomeStreamTask (this Foundation.INSUrlSessionDataDelegate This, Foundation.NSUrlSession session, Foundation.NSUrlSessionDataTask dataTask, Foundation.NSUrlSessionStreamTask streamTask);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidBecomeStreamTask(class Foundation.INSUrlSessionDataDelegate This, class Foundation.NSUrlSession session, class Foundation.NSUrlSessionDataTask dataTask, class Foundation.NSUrlSessionStreamTask streamTask) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionDataDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="dataTask" Type="MonoTouch.Foundation.NSUrlSessionDataTask" />
          <Parameter Name="streamTask" Type="MonoTouch.Foundation.NSUrlSessionStreamTask" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="dataTask">To be added.</param>
          <param name="streamTask">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionDataDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionDataDelegate_Extensions.DidBecomeStreamTask(MonoTouch.Foundation.INSUrlSessionDataDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlSessionDataTask,MonoTouch.Foundation.NSUrlSessionStreamTask)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionDataDelegate" />
      </Targets>
      <Member MemberName="DidReceiveData">
        <MemberSignature Language="C#" Value="public static void DidReceiveData (this Foundation.INSUrlSessionDataDelegate This, Foundation.NSUrlSession session, Foundation.NSUrlSessionDataTask dataTask, Foundation.NSData data);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveData(class Foundation.INSUrlSessionDataDelegate This, class Foundation.NSUrlSession session, class Foundation.NSUrlSessionDataTask dataTask, class Foundation.NSData data) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionDataDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="dataTask" Type="MonoTouch.Foundation.NSUrlSessionDataTask" />
          <Parameter Name="data" Type="MonoTouch.Foundation.NSData" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="dataTask">To be added.</param>
          <param name="data">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionDataDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionDataDelegate_Extensions.DidReceiveData(MonoTouch.Foundation.INSUrlSessionDataDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlSessionDataTask,MonoTouch.Foundation.NSData)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionDataDelegate" />
      </Targets>
      <Member MemberName="DidReceiveResponse">
        <MemberSignature Language="C#" Value="public static void DidReceiveResponse (this Foundation.INSUrlSessionDataDelegate This, Foundation.NSUrlSession session, Foundation.NSUrlSessionDataTask dataTask, Foundation.NSUrlResponse response, Action&lt;Foundation.NSUrlSessionResponseDisposition&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveResponse(class Foundation.INSUrlSessionDataDelegate This, class Foundation.NSUrlSession session, class Foundation.NSUrlSessionDataTask dataTask, class Foundation.NSUrlResponse response, class System.Action`1&lt;valuetype Foundation.NSUrlSessionResponseDisposition&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionDataDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="dataTask" Type="MonoTouch.Foundation.NSUrlSessionDataTask" />
          <Parameter Name="response" Type="MonoTouch.Foundation.NSUrlResponse" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSUrlSessionResponseDisposition&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V25))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="dataTask">To be added.</param>
          <param name="response">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionDataDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionDataDelegate_Extensions.DidReceiveResponse(MonoTouch.Foundation.INSUrlSessionDataDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlSessionDataTask,MonoTouch.Foundation.NSUrlResponse,System.Action{MonoTouch.Foundation.NSUrlSessionResponseDisposition})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionDataDelegate" />
      </Targets>
      <Member MemberName="WillCacheResponse">
        <MemberSignature Language="C#" Value="public static void WillCacheResponse (this Foundation.INSUrlSessionDataDelegate This, Foundation.NSUrlSession session, Foundation.NSUrlSessionDataTask dataTask, Foundation.NSCachedUrlResponse proposedResponse, Action&lt;Foundation.NSCachedUrlResponse&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillCacheResponse(class Foundation.INSUrlSessionDataDelegate This, class Foundation.NSUrlSession session, class Foundation.NSUrlSessionDataTask dataTask, class Foundation.NSCachedUrlResponse proposedResponse, class System.Action`1&lt;class Foundation.NSCachedUrlResponse&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionDataDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="dataTask" Type="MonoTouch.Foundation.NSUrlSessionDataTask" />
          <Parameter Name="proposedResponse" Type="MonoTouch.Foundation.NSCachedUrlResponse" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSCachedUrlResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V21))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="dataTask">To be added.</param>
          <param name="proposedResponse">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionDataDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionDataDelegate_Extensions.WillCacheResponse(MonoTouch.Foundation.INSUrlSessionDataDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlSessionDataTask,MonoTouch.Foundation.NSCachedUrlResponse,System.Action{MonoTouch.Foundation.NSCachedUrlResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionDelegate" />
      </Targets>
      <Member MemberName="DidBecomeInvalid">
        <MemberSignature Language="C#" Value="public static void DidBecomeInvalid (this Foundation.INSUrlSessionDelegate This, Foundation.NSUrlSession session, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidBecomeInvalid(class Foundation.INSUrlSessionDelegate This, class Foundation.NSUrlSession session, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionDelegate_Extensions.DidBecomeInvalid(MonoTouch.Foundation.INSUrlSessionDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionDelegate" />
      </Targets>
      <Member MemberName="DidFinishEventsForBackgroundSession">
        <MemberSignature Language="C#" Value="public static void DidFinishEventsForBackgroundSession (this Foundation.INSUrlSessionDelegate This, Foundation.NSUrlSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinishEventsForBackgroundSession(class Foundation.INSUrlSessionDelegate This, class Foundation.NSUrlSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionDelegate_Extensions.DidFinishEventsForBackgroundSession(MonoTouch.Foundation.INSUrlSessionDelegate,MonoTouch.Foundation.NSUrlSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionDelegate" />
      </Targets>
      <Member MemberName="DidReceiveChallenge">
        <MemberSignature Language="C#" Value="public static void DidReceiveChallenge (this Foundation.INSUrlSessionDelegate This, Foundation.NSUrlSession session, Foundation.NSUrlAuthenticationChallenge challenge, Action&lt;Foundation.NSUrlSessionAuthChallengeDisposition,Foundation.NSUrlCredential&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveChallenge(class Foundation.INSUrlSessionDelegate This, class Foundation.NSUrlSession session, class Foundation.NSUrlAuthenticationChallenge challenge, class System.Action`2&lt;valuetype Foundation.NSUrlSessionAuthChallengeDisposition, class Foundation.NSUrlCredential&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="challenge" Type="MonoTouch.Foundation.NSUrlAuthenticationChallenge" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSUrlSessionAuthChallengeDisposition,MonoTouch.Foundation.NSUrlCredential&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V33))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="challenge">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionDelegate_Extensions.DidReceiveChallenge(MonoTouch.Foundation.INSUrlSessionDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlAuthenticationChallenge,System.Action{MonoTouch.Foundation.NSUrlSessionAuthChallengeDisposition,MonoTouch.Foundation.NSUrlCredential})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionDownloadDelegate" />
      </Targets>
      <Member MemberName="DidResume">
        <MemberSignature Language="C#" Value="public static void DidResume (this Foundation.INSUrlSessionDownloadDelegate This, Foundation.NSUrlSession session, Foundation.NSUrlSessionDownloadTask downloadTask, long resumeFileOffset, long expectedTotalBytes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidResume(class Foundation.INSUrlSessionDownloadDelegate This, class Foundation.NSUrlSession session, class Foundation.NSUrlSessionDownloadTask downloadTask, int64 resumeFileOffset, int64 expectedTotalBytes) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionDownloadDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="downloadTask" Type="MonoTouch.Foundation.NSUrlSessionDownloadTask" />
          <Parameter Name="resumeFileOffset" Type="System.Int64" />
          <Parameter Name="expectedTotalBytes" Type="System.Int64" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="downloadTask">To be added.</param>
          <param name="resumeFileOffset">To be added.</param>
          <param name="expectedTotalBytes">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionDownloadDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionDownloadDelegate_Extensions.DidResume(MonoTouch.Foundation.INSUrlSessionDownloadDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlSessionDownloadTask,System.Int64,System.Int64)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionDownloadDelegate" />
      </Targets>
      <Member MemberName="DidWriteData">
        <MemberSignature Language="C#" Value="public static void DidWriteData (this Foundation.INSUrlSessionDownloadDelegate This, Foundation.NSUrlSession session, Foundation.NSUrlSessionDownloadTask downloadTask, long bytesWritten, long totalBytesWritten, long totalBytesExpectedToWrite);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidWriteData(class Foundation.INSUrlSessionDownloadDelegate This, class Foundation.NSUrlSession session, class Foundation.NSUrlSessionDownloadTask downloadTask, int64 bytesWritten, int64 totalBytesWritten, int64 totalBytesExpectedToWrite) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionDownloadDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="downloadTask" Type="MonoTouch.Foundation.NSUrlSessionDownloadTask" />
          <Parameter Name="bytesWritten" Type="System.Int64" />
          <Parameter Name="totalBytesWritten" Type="System.Int64" />
          <Parameter Name="totalBytesExpectedToWrite" Type="System.Int64" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="downloadTask">To be added.</param>
          <param name="bytesWritten">To be added.</param>
          <param name="totalBytesWritten">To be added.</param>
          <param name="totalBytesExpectedToWrite">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionDownloadDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionDownloadDelegate_Extensions.DidWriteData(MonoTouch.Foundation.INSUrlSessionDownloadDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlSessionDownloadTask,System.Int64,System.Int64,System.Int64)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionStreamDelegate" />
      </Targets>
      <Member MemberName="BetterRouteDiscovered">
        <MemberSignature Language="C#" Value="public static void BetterRouteDiscovered (this Foundation.INSUrlSessionStreamDelegate This, Foundation.NSUrlSession session, Foundation.NSUrlSessionStreamTask streamTask);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BetterRouteDiscovered(class Foundation.INSUrlSessionStreamDelegate This, class Foundation.NSUrlSession session, class Foundation.NSUrlSessionStreamTask streamTask) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionStreamDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="streamTask" Type="MonoTouch.Foundation.NSUrlSessionStreamTask" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="streamTask">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionStreamDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionStreamDelegate_Extensions.BetterRouteDiscovered(MonoTouch.Foundation.INSUrlSessionStreamDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlSessionStreamTask)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionStreamDelegate" />
      </Targets>
      <Member MemberName="CompletedTaskCaptureStreams">
        <MemberSignature Language="C#" Value="public static void CompletedTaskCaptureStreams (this Foundation.INSUrlSessionStreamDelegate This, Foundation.NSUrlSession session, Foundation.NSUrlSessionStreamTask streamTask, Foundation.NSInputStream inputStream, Foundation.NSOutputStream outputStream);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompletedTaskCaptureStreams(class Foundation.INSUrlSessionStreamDelegate This, class Foundation.NSUrlSession session, class Foundation.NSUrlSessionStreamTask streamTask, class Foundation.NSInputStream inputStream, class Foundation.NSOutputStream outputStream) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionStreamDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="streamTask" Type="MonoTouch.Foundation.NSUrlSessionStreamTask" />
          <Parameter Name="inputStream" Type="MonoTouch.Foundation.NSInputStream" />
          <Parameter Name="outputStream" Type="MonoTouch.Foundation.NSOutputStream" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="streamTask">To be added.</param>
          <param name="inputStream">To be added.</param>
          <param name="outputStream">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionStreamDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionStreamDelegate_Extensions.CompletedTaskCaptureStreams(MonoTouch.Foundation.INSUrlSessionStreamDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlSessionStreamTask,MonoTouch.Foundation.NSInputStream,MonoTouch.Foundation.NSOutputStream)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionStreamDelegate" />
      </Targets>
      <Member MemberName="ReadClosed">
        <MemberSignature Language="C#" Value="public static void ReadClosed (this Foundation.INSUrlSessionStreamDelegate This, Foundation.NSUrlSession session, Foundation.NSUrlSessionStreamTask streamTask);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReadClosed(class Foundation.INSUrlSessionStreamDelegate This, class Foundation.NSUrlSession session, class Foundation.NSUrlSessionStreamTask streamTask) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionStreamDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="streamTask" Type="MonoTouch.Foundation.NSUrlSessionStreamTask" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="streamTask">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionStreamDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionStreamDelegate_Extensions.ReadClosed(MonoTouch.Foundation.INSUrlSessionStreamDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlSessionStreamTask)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionStreamDelegate" />
      </Targets>
      <Member MemberName="WriteClosed">
        <MemberSignature Language="C#" Value="public static void WriteClosed (this Foundation.INSUrlSessionStreamDelegate This, Foundation.NSUrlSession session, Foundation.NSUrlSessionStreamTask streamTask);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteClosed(class Foundation.INSUrlSessionStreamDelegate This, class Foundation.NSUrlSession session, class Foundation.NSUrlSessionStreamTask streamTask) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionStreamDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="streamTask" Type="MonoTouch.Foundation.NSUrlSessionStreamTask" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="streamTask">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionStreamDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionStreamDelegate_Extensions.WriteClosed(MonoTouch.Foundation.INSUrlSessionStreamDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlSessionStreamTask)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionTaskDelegate" />
      </Targets>
      <Member MemberName="DidCompleteWithError">
        <MemberSignature Language="C#" Value="public static void DidCompleteWithError (this Foundation.INSUrlSessionTaskDelegate This, Foundation.NSUrlSession session, Foundation.NSUrlSessionTask task, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidCompleteWithError(class Foundation.INSUrlSessionTaskDelegate This, class Foundation.NSUrlSession session, class Foundation.NSUrlSessionTask task, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionTaskDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="task" Type="MonoTouch.Foundation.NSUrlSessionTask" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="task">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionTaskDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionTaskDelegate_Extensions.DidCompleteWithError(MonoTouch.Foundation.INSUrlSessionTaskDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlSessionTask,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionTaskDelegate" />
      </Targets>
      <Member MemberName="DidFinishCollectingMetrics">
        <MemberSignature Language="C#" Value="public static void DidFinishCollectingMetrics (this Foundation.INSUrlSessionTaskDelegate This, Foundation.NSUrlSession session, Foundation.NSUrlSessionTask task, Foundation.NSUrlSessionTaskMetrics metrics);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinishCollectingMetrics(class Foundation.INSUrlSessionTaskDelegate This, class Foundation.NSUrlSession session, class Foundation.NSUrlSessionTask task, class Foundation.NSUrlSessionTaskMetrics metrics) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionTaskDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="task" Type="MonoTouch.Foundation.NSUrlSessionTask" />
          <Parameter Name="metrics" Type="MonoTouch.Foundation.NSUrlSessionTaskMetrics" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="task">To be added.</param>
          <param name="metrics">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionTaskDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionTaskDelegate_Extensions.DidFinishCollectingMetrics(MonoTouch.Foundation.INSUrlSessionTaskDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlSessionTask,MonoTouch.Foundation.NSUrlSessionTaskMetrics)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionTaskDelegate" />
      </Targets>
      <Member MemberName="DidReceiveChallenge">
        <MemberSignature Language="C#" Value="public static void DidReceiveChallenge (this Foundation.INSUrlSessionTaskDelegate This, Foundation.NSUrlSession session, Foundation.NSUrlSessionTask task, Foundation.NSUrlAuthenticationChallenge challenge, Action&lt;Foundation.NSUrlSessionAuthChallengeDisposition,Foundation.NSUrlCredential&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveChallenge(class Foundation.INSUrlSessionTaskDelegate This, class Foundation.NSUrlSession session, class Foundation.NSUrlSessionTask task, class Foundation.NSUrlAuthenticationChallenge challenge, class System.Action`2&lt;valuetype Foundation.NSUrlSessionAuthChallengeDisposition, class Foundation.NSUrlCredential&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionTaskDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="task" Type="MonoTouch.Foundation.NSUrlSessionTask" />
          <Parameter Name="challenge" Type="MonoTouch.Foundation.NSUrlAuthenticationChallenge" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSUrlSessionAuthChallengeDisposition,MonoTouch.Foundation.NSUrlCredential&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V33))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="task">To be added.</param>
          <param name="challenge">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionTaskDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionTaskDelegate_Extensions.DidReceiveChallenge(MonoTouch.Foundation.INSUrlSessionTaskDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlSessionTask,MonoTouch.Foundation.NSUrlAuthenticationChallenge,System.Action{MonoTouch.Foundation.NSUrlSessionAuthChallengeDisposition,MonoTouch.Foundation.NSUrlCredential})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionTaskDelegate" />
      </Targets>
      <Member MemberName="DidSendBodyData">
        <MemberSignature Language="C#" Value="public static void DidSendBodyData (this Foundation.INSUrlSessionTaskDelegate This, Foundation.NSUrlSession session, Foundation.NSUrlSessionTask task, long bytesSent, long totalBytesSent, long totalBytesExpectedToSend);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSendBodyData(class Foundation.INSUrlSessionTaskDelegate This, class Foundation.NSUrlSession session, class Foundation.NSUrlSessionTask task, int64 bytesSent, int64 totalBytesSent, int64 totalBytesExpectedToSend) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionTaskDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="task" Type="MonoTouch.Foundation.NSUrlSessionTask" />
          <Parameter Name="bytesSent" Type="System.Int64" />
          <Parameter Name="totalBytesSent" Type="System.Int64" />
          <Parameter Name="totalBytesExpectedToSend" Type="System.Int64" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="task">To be added.</param>
          <param name="bytesSent">To be added.</param>
          <param name="totalBytesSent">To be added.</param>
          <param name="totalBytesExpectedToSend">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionTaskDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionTaskDelegate_Extensions.DidSendBodyData(MonoTouch.Foundation.INSUrlSessionTaskDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlSessionTask,System.Int64,System.Int64,System.Int64)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionTaskDelegate" />
      </Targets>
      <Member MemberName="NeedNewBodyStream">
        <MemberSignature Language="C#" Value="public static void NeedNewBodyStream (this Foundation.INSUrlSessionTaskDelegate This, Foundation.NSUrlSession session, Foundation.NSUrlSessionTask task, Action&lt;Foundation.NSInputStream&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NeedNewBodyStream(class Foundation.INSUrlSessionTaskDelegate This, class Foundation.NSUrlSession session, class Foundation.NSUrlSessionTask task, class System.Action`1&lt;class Foundation.NSInputStream&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionTaskDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="task" Type="MonoTouch.Foundation.NSUrlSessionTask" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSInputStream&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V24))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="task">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionTaskDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionTaskDelegate_Extensions.NeedNewBodyStream(MonoTouch.Foundation.INSUrlSessionTaskDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlSessionTask,System.Action{MonoTouch.Foundation.NSInputStream})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionTaskDelegate" />
      </Targets>
      <Member MemberName="TaskIsWaitingForConnectivity">
        <MemberSignature Language="C#" Value="public static void TaskIsWaitingForConnectivity (this Foundation.INSUrlSessionTaskDelegate This, Foundation.NSUrlSession session, Foundation.NSUrlSessionTask task);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TaskIsWaitingForConnectivity(class Foundation.INSUrlSessionTaskDelegate This, class Foundation.NSUrlSession session, class Foundation.NSUrlSessionTask task) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionTaskDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="task" Type="MonoTouch.Foundation.NSUrlSessionTask" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="task">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionTaskDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionTaskDelegate_Extensions.TaskIsWaitingForConnectivity(MonoTouch.Foundation.INSUrlSessionTaskDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlSessionTask)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionTaskDelegate" />
      </Targets>
      <Member MemberName="WillBeginDelayedRequest">
        <MemberSignature Language="C#" Value="public static void WillBeginDelayedRequest (this Foundation.INSUrlSessionTaskDelegate This, Foundation.NSUrlSession session, Foundation.NSUrlSessionTask task, Foundation.NSUrlRequest request, Action&lt;Foundation.NSUrlSessionDelayedRequestDisposition,Foundation.NSUrlRequest&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillBeginDelayedRequest(class Foundation.INSUrlSessionTaskDelegate This, class Foundation.NSUrlSession session, class Foundation.NSUrlSessionTask task, class Foundation.NSUrlRequest request, class System.Action`2&lt;valuetype Foundation.NSUrlSessionDelayedRequestDisposition, class Foundation.NSUrlRequest&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionTaskDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="task" Type="MonoTouch.Foundation.NSUrlSessionTask" />
          <Parameter Name="request" Type="MonoTouch.Foundation.NSUrlRequest" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSUrlSessionDelayedRequestDisposition,MonoTouch.Foundation.NSUrlRequest&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V1))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="task">To be added.</param>
          <param name="request">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionTaskDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionTaskDelegate_Extensions.WillBeginDelayedRequest(MonoTouch.Foundation.INSUrlSessionTaskDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlSessionTask,MonoTouch.Foundation.NSUrlRequest,System.Action{MonoTouch.Foundation.NSUrlSessionDelayedRequestDisposition,MonoTouch.Foundation.NSUrlRequest})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionTaskDelegate" />
      </Targets>
      <Member MemberName="WillPerformHttpRedirection">
        <MemberSignature Language="C#" Value="public static void WillPerformHttpRedirection (this Foundation.INSUrlSessionTaskDelegate This, Foundation.NSUrlSession session, Foundation.NSUrlSessionTask task, Foundation.NSHttpUrlResponse response, Foundation.NSUrlRequest newRequest, Action&lt;Foundation.NSUrlRequest&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillPerformHttpRedirection(class Foundation.INSUrlSessionTaskDelegate This, class Foundation.NSUrlSession session, class Foundation.NSUrlSessionTask task, class Foundation.NSHttpUrlResponse response, class Foundation.NSUrlRequest newRequest, class System.Action`1&lt;class Foundation.NSUrlRequest&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionTaskDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="task" Type="MonoTouch.Foundation.NSUrlSessionTask" />
          <Parameter Name="response" Type="MonoTouch.Foundation.NSHttpUrlResponse" />
          <Parameter Name="newRequest" Type="MonoTouch.Foundation.NSUrlRequest" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSUrlRequest&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V23))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="task">To be added.</param>
          <param name="response">To be added.</param>
          <param name="newRequest">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionTaskDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionTaskDelegate_Extensions.WillPerformHttpRedirection(MonoTouch.Foundation.INSUrlSessionTaskDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlSessionTask,MonoTouch.Foundation.NSHttpUrlResponse,MonoTouch.Foundation.NSUrlRequest,System.Action{MonoTouch.Foundation.NSUrlRequest})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="CreateStringByAddingPercentEncoding">
        <MemberSignature Language="C#" Value="public static Foundation.NSString CreateStringByAddingPercentEncoding (this Foundation.NSString This, Foundation.NSCharacterSet allowedCharacters);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString CreateStringByAddingPercentEncoding(class Foundation.NSString This, class Foundation.NSCharacterSet allowedCharacters) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="allowedCharacters" Type="MonoTouch.Foundation.NSCharacterSet" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="allowedCharacters">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlUtilities_NSString" Member="M:MonoTouch.Foundation.NSUrlUtilities_NSString.CreateStringByAddingPercentEncoding(MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSCharacterSet)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="CreateStringByAddingPercentEscapes">
        <MemberSignature Language="C#" Value="public static Foundation.NSString CreateStringByAddingPercentEscapes (this Foundation.NSString This, Foundation.NSStringEncoding enc);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString CreateStringByAddingPercentEscapes(class Foundation.NSString This, valuetype Foundation.NSStringEncoding enc) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="enc" Type="MonoTouch.Foundation.NSStringEncoding" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="enc">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlUtilities_NSString" Member="M:MonoTouch.Foundation.NSUrlUtilities_NSString.CreateStringByAddingPercentEscapes(MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSStringEncoding)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="CreateStringByRemovingPercentEncoding">
        <MemberSignature Language="C#" Value="public static Foundation.NSString CreateStringByRemovingPercentEncoding (this Foundation.NSString This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString CreateStringByRemovingPercentEncoding(class Foundation.NSString This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlUtilities_NSString" Member="M:MonoTouch.Foundation.NSUrlUtilities_NSString.CreateStringByRemovingPercentEncoding(MonoTouch.Foundation.NSString)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="CreateStringByReplacingPercentEscapes">
        <MemberSignature Language="C#" Value="public static Foundation.NSString CreateStringByReplacingPercentEscapes (this Foundation.NSString This, Foundation.NSStringEncoding enc);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString CreateStringByReplacingPercentEscapes(class Foundation.NSString This, valuetype Foundation.NSStringEncoding enc) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="enc" Type="MonoTouch.Foundation.NSStringEncoding" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="enc">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlUtilities_NSString" Member="M:MonoTouch.Foundation.NSUrlUtilities_NSString.CreateStringByReplacingPercentEscapes(MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSStringEncoding)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUserActivityDelegate" />
      </Targets>
      <Member MemberName="UserActivityReceivedData">
        <MemberSignature Language="C#" Value="public static void UserActivityReceivedData (this Foundation.INSUserActivityDelegate This, Foundation.NSUserActivity userActivity, Foundation.NSInputStream inputStream, Foundation.NSOutputStream outputStream);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UserActivityReceivedData(class Foundation.INSUserActivityDelegate This, class Foundation.NSUserActivity userActivity, class Foundation.NSInputStream inputStream, class Foundation.NSOutputStream outputStream) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUserActivityDelegate" RefType="this" />
          <Parameter Name="userActivity" Type="MonoTouch.Foundation.NSUserActivity" />
          <Parameter Name="inputStream" Type="MonoTouch.Foundation.NSInputStream" />
          <Parameter Name="outputStream" Type="MonoTouch.Foundation.NSOutputStream" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="userActivity">To be added.</param>
          <param name="inputStream">To be added.</param>
          <param name="outputStream">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUserActivityDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUserActivityDelegate_Extensions.UserActivityReceivedData(MonoTouch.Foundation.INSUserActivityDelegate,MonoTouch.Foundation.NSUserActivity,MonoTouch.Foundation.NSInputStream,MonoTouch.Foundation.NSOutputStream)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUserActivityDelegate" />
      </Targets>
      <Member MemberName="UserActivityWasContinued">
        <MemberSignature Language="C#" Value="public static void UserActivityWasContinued (this Foundation.INSUserActivityDelegate This, Foundation.NSUserActivity userActivity);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UserActivityWasContinued(class Foundation.INSUserActivityDelegate This, class Foundation.NSUserActivity userActivity) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUserActivityDelegate" RefType="this" />
          <Parameter Name="userActivity" Type="MonoTouch.Foundation.NSUserActivity" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="userActivity">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUserActivityDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUserActivityDelegate_Extensions.UserActivityWasContinued(MonoTouch.Foundation.INSUserActivityDelegate,MonoTouch.Foundation.NSUserActivity)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUserActivityDelegate" />
      </Targets>
      <Member MemberName="UserActivityWillSave">
        <MemberSignature Language="C#" Value="public static void UserActivityWillSave (this Foundation.INSUserActivityDelegate This, Foundation.NSUserActivity userActivity);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UserActivityWillSave(class Foundation.INSUserActivityDelegate This, class Foundation.NSUserActivity userActivity) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUserActivityDelegate" RefType="this" />
          <Parameter Name="userActivity" Type="MonoTouch.Foundation.NSUserActivity" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="userActivity">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUserActivityDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUserActivityDelegate_Extensions.UserActivityWillSave(MonoTouch.Foundation.INSUserActivityDelegate,MonoTouch.Foundation.NSUserActivity)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKChallengeEventHandlerDelegate" />
      </Targets>
      <Member MemberName="LocalPlayerCompletedChallenge">
        <MemberSignature Language="C#" Value="public static void LocalPlayerCompletedChallenge (this GameKit.IGKChallengeEventHandlerDelegate This, GameKit.GKChallenge challenge);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LocalPlayerCompletedChallenge(class GameKit.IGKChallengeEventHandlerDelegate This, class GameKit.GKChallenge challenge) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKChallengeEventHandlerDelegate" RefType="this" />
          <Parameter Name="challenge" Type="MonoTouch.GameKit.GKChallenge" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="challenge">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKChallengeEventHandlerDelegate_Extensions" Member="M:MonoTouch.GameKit.GKChallengeEventHandlerDelegate_Extensions.LocalPlayerCompletedChallenge(MonoTouch.GameKit.IGKChallengeEventHandlerDelegate,MonoTouch.GameKit.GKChallenge)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKChallengeEventHandlerDelegate" />
      </Targets>
      <Member MemberName="LocalPlayerReceivedChallenge">
        <MemberSignature Language="C#" Value="public static void LocalPlayerReceivedChallenge (this GameKit.IGKChallengeEventHandlerDelegate This, GameKit.GKChallenge challenge);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LocalPlayerReceivedChallenge(class GameKit.IGKChallengeEventHandlerDelegate This, class GameKit.GKChallenge challenge) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKChallengeEventHandlerDelegate" RefType="this" />
          <Parameter Name="challenge" Type="MonoTouch.GameKit.GKChallenge" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="challenge">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKChallengeEventHandlerDelegate_Extensions" Member="M:MonoTouch.GameKit.GKChallengeEventHandlerDelegate_Extensions.LocalPlayerReceivedChallenge(MonoTouch.GameKit.IGKChallengeEventHandlerDelegate,MonoTouch.GameKit.GKChallenge)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKChallengeEventHandlerDelegate" />
      </Targets>
      <Member MemberName="LocalPlayerSelectedChallenge">
        <MemberSignature Language="C#" Value="public static void LocalPlayerSelectedChallenge (this GameKit.IGKChallengeEventHandlerDelegate This, GameKit.GKChallenge challenge);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LocalPlayerSelectedChallenge(class GameKit.IGKChallengeEventHandlerDelegate This, class GameKit.GKChallenge challenge) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKChallengeEventHandlerDelegate" RefType="this" />
          <Parameter Name="challenge" Type="MonoTouch.GameKit.GKChallenge" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="challenge">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKChallengeEventHandlerDelegate_Extensions" Member="M:MonoTouch.GameKit.GKChallengeEventHandlerDelegate_Extensions.LocalPlayerSelectedChallenge(MonoTouch.GameKit.IGKChallengeEventHandlerDelegate,MonoTouch.GameKit.GKChallenge)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKChallengeEventHandlerDelegate" />
      </Targets>
      <Member MemberName="RemotePlayerCompletedChallenge">
        <MemberSignature Language="C#" Value="public static void RemotePlayerCompletedChallenge (this GameKit.IGKChallengeEventHandlerDelegate This, GameKit.GKChallenge challenge);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemotePlayerCompletedChallenge(class GameKit.IGKChallengeEventHandlerDelegate This, class GameKit.GKChallenge challenge) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKChallengeEventHandlerDelegate" RefType="this" />
          <Parameter Name="challenge" Type="MonoTouch.GameKit.GKChallenge" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="challenge">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKChallengeEventHandlerDelegate_Extensions" Member="M:MonoTouch.GameKit.GKChallengeEventHandlerDelegate_Extensions.RemotePlayerCompletedChallenge(MonoTouch.GameKit.IGKChallengeEventHandlerDelegate,MonoTouch.GameKit.GKChallenge)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKChallengeEventHandlerDelegate" />
      </Targets>
      <Member MemberName="ShouldShowBannerForLocallyCompletedChallenge">
        <MemberSignature Language="C#" Value="public static bool ShouldShowBannerForLocallyCompletedChallenge (this GameKit.IGKChallengeEventHandlerDelegate This, GameKit.GKChallenge challenge);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldShowBannerForLocallyCompletedChallenge(class GameKit.IGKChallengeEventHandlerDelegate This, class GameKit.GKChallenge challenge) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKChallengeEventHandlerDelegate" RefType="this" />
          <Parameter Name="challenge" Type="MonoTouch.GameKit.GKChallenge" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="challenge">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKChallengeEventHandlerDelegate_Extensions" Member="M:MonoTouch.GameKit.GKChallengeEventHandlerDelegate_Extensions.ShouldShowBannerForLocallyCompletedChallenge(MonoTouch.GameKit.IGKChallengeEventHandlerDelegate,MonoTouch.GameKit.GKChallenge)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKChallengeEventHandlerDelegate" />
      </Targets>
      <Member MemberName="ShouldShowBannerForLocallyReceivedChallenge">
        <MemberSignature Language="C#" Value="public static bool ShouldShowBannerForLocallyReceivedChallenge (this GameKit.IGKChallengeEventHandlerDelegate This, GameKit.GKChallenge challenge);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldShowBannerForLocallyReceivedChallenge(class GameKit.IGKChallengeEventHandlerDelegate This, class GameKit.GKChallenge challenge) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKChallengeEventHandlerDelegate" RefType="this" />
          <Parameter Name="challenge" Type="MonoTouch.GameKit.GKChallenge" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="challenge">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKChallengeEventHandlerDelegate_Extensions" Member="M:MonoTouch.GameKit.GKChallengeEventHandlerDelegate_Extensions.ShouldShowBannerForLocallyReceivedChallenge(MonoTouch.GameKit.IGKChallengeEventHandlerDelegate,MonoTouch.GameKit.GKChallenge)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKChallengeEventHandlerDelegate" />
      </Targets>
      <Member MemberName="ShouldShowBannerForRemotelyCompletedChallenge">
        <MemberSignature Language="C#" Value="public static bool ShouldShowBannerForRemotelyCompletedChallenge (this GameKit.IGKChallengeEventHandlerDelegate This, GameKit.GKChallenge challenge);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldShowBannerForRemotelyCompletedChallenge(class GameKit.IGKChallengeEventHandlerDelegate This, class GameKit.GKChallenge challenge) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKChallengeEventHandlerDelegate" RefType="this" />
          <Parameter Name="challenge" Type="MonoTouch.GameKit.GKChallenge" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="challenge">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKChallengeEventHandlerDelegate_Extensions" Member="M:MonoTouch.GameKit.GKChallengeEventHandlerDelegate_Extensions.ShouldShowBannerForRemotelyCompletedChallenge(MonoTouch.GameKit.IGKChallengeEventHandlerDelegate,MonoTouch.GameKit.GKChallenge)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKChallengeListener" />
      </Targets>
      <Member MemberName="DidCompleteChallenge">
        <MemberSignature Language="C#" Value="public static void DidCompleteChallenge (this GameKit.IGKChallengeListener This, GameKit.GKPlayer player, GameKit.GKChallenge challenge, GameKit.GKPlayer friendPlayer);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidCompleteChallenge(class GameKit.IGKChallengeListener This, class GameKit.GKPlayer player, class GameKit.GKChallenge challenge, class GameKit.GKPlayer friendPlayer) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKChallengeListener" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="challenge" Type="MonoTouch.GameKit.GKChallenge" />
          <Parameter Name="friendPlayer" Type="MonoTouch.GameKit.GKPlayer" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="challenge">To be added.</param>
          <param name="friendPlayer">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKChallengeListener_Extensions" Member="M:MonoTouch.GameKit.GKChallengeListener_Extensions.DidCompleteChallenge(MonoTouch.GameKit.IGKChallengeListener,MonoTouch.GameKit.GKPlayer,MonoTouch.GameKit.GKChallenge,MonoTouch.GameKit.GKPlayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKChallengeListener" />
      </Targets>
      <Member MemberName="DidReceiveChallenge">
        <MemberSignature Language="C#" Value="public static void DidReceiveChallenge (this GameKit.IGKChallengeListener This, GameKit.GKPlayer player, GameKit.GKChallenge challenge);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveChallenge(class GameKit.IGKChallengeListener This, class GameKit.GKPlayer player, class GameKit.GKChallenge challenge) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKChallengeListener" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="challenge" Type="MonoTouch.GameKit.GKChallenge" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="challenge">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKChallengeListener_Extensions" Member="M:MonoTouch.GameKit.GKChallengeListener_Extensions.DidReceiveChallenge(MonoTouch.GameKit.IGKChallengeListener,MonoTouch.GameKit.GKPlayer,MonoTouch.GameKit.GKChallenge)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKChallengeListener" />
      </Targets>
      <Member MemberName="IssuedChallengeWasCompleted">
        <MemberSignature Language="C#" Value="public static void IssuedChallengeWasCompleted (this GameKit.IGKChallengeListener This, GameKit.GKPlayer player, GameKit.GKChallenge challenge, GameKit.GKPlayer friendPlayer);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void IssuedChallengeWasCompleted(class GameKit.IGKChallengeListener This, class GameKit.GKPlayer player, class GameKit.GKChallenge challenge, class GameKit.GKPlayer friendPlayer) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKChallengeListener" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="challenge" Type="MonoTouch.GameKit.GKChallenge" />
          <Parameter Name="friendPlayer" Type="MonoTouch.GameKit.GKPlayer" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="challenge">To be added.</param>
          <param name="friendPlayer">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKChallengeListener_Extensions" Member="M:MonoTouch.GameKit.GKChallengeListener_Extensions.IssuedChallengeWasCompleted(MonoTouch.GameKit.IGKChallengeListener,MonoTouch.GameKit.GKPlayer,MonoTouch.GameKit.GKChallenge,MonoTouch.GameKit.GKPlayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKChallengeListener" />
      </Targets>
      <Member MemberName="WantsToPlayChallenge">
        <MemberSignature Language="C#" Value="public static void WantsToPlayChallenge (this GameKit.IGKChallengeListener This, GameKit.GKPlayer player, GameKit.GKChallenge challenge);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WantsToPlayChallenge(class GameKit.IGKChallengeListener This, class GameKit.GKPlayer player, class GameKit.GKChallenge challenge) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKChallengeListener" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="challenge" Type="MonoTouch.GameKit.GKChallenge" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="challenge">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKChallengeListener_Extensions" Member="M:MonoTouch.GameKit.GKChallengeListener_Extensions.WantsToPlayChallenge(MonoTouch.GameKit.IGKChallengeListener,MonoTouch.GameKit.GKPlayer,MonoTouch.GameKit.GKChallenge)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.GKError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this GameKit.GKError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype GameKit.GKError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.GameKit.GKError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.GameKit.GKError value</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKErrorExtensions" Member="M:MonoTouch.GameKit.GKErrorExtensions.GetDomain(MonoTouch.GameKit.GKError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.GKGameSessionErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this GameKit.GKGameSessionErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype GameKit.GKGameSessionErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.GameKit.GKGameSessionErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.GameKit.GKGameSessionErrorCode value</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKGameSessionErrorCodeExtensions" Member="M:MonoTouch.GameKit.GKGameSessionErrorCodeExtensions.GetDomain(MonoTouch.GameKit.GKGameSessionErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKGameSessionEventListener" />
      </Targets>
      <Member MemberName="DidAddPlayer">
        <MemberSignature Language="C#" Value="public static void DidAddPlayer (this GameKit.IGKGameSessionEventListener This, GameKit.GKGameSession session, GameKit.GKCloudPlayer player);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAddPlayer(class GameKit.IGKGameSessionEventListener This, class GameKit.GKGameSession session, class GameKit.GKCloudPlayer player) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKGameSessionEventListener" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.GameKit.GKGameSession" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKCloudPlayer" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="session">To be added.</param>
          <param name="player">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKGameSessionEventListener_Extensions" Member="M:MonoTouch.GameKit.GKGameSessionEventListener_Extensions.DidAddPlayer(MonoTouch.GameKit.IGKGameSessionEventListener,MonoTouch.GameKit.GKGameSession,MonoTouch.GameKit.GKCloudPlayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKGameSessionEventListener" />
      </Targets>
      <Member MemberName="DidChangeConnectionState">
        <MemberSignature Language="C#" Value="public static void DidChangeConnectionState (this GameKit.IGKGameSessionEventListener This, GameKit.GKGameSession session, GameKit.GKCloudPlayer player, GameKit.GKConnectionState newState);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidChangeConnectionState(class GameKit.IGKGameSessionEventListener This, class GameKit.GKGameSession session, class GameKit.GKCloudPlayer player, valuetype GameKit.GKConnectionState newState) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKGameSessionEventListener" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.GameKit.GKGameSession" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKCloudPlayer" />
          <Parameter Name="newState" Type="MonoTouch.GameKit.GKConnectionState" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="session">To be added.</param>
          <param name="player">To be added.</param>
          <param name="newState">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKGameSessionEventListener_Extensions" Member="M:MonoTouch.GameKit.GKGameSessionEventListener_Extensions.DidChangeConnectionState(MonoTouch.GameKit.IGKGameSessionEventListener,MonoTouch.GameKit.GKGameSession,MonoTouch.GameKit.GKCloudPlayer,MonoTouch.GameKit.GKConnectionState)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKGameSessionEventListener" />
      </Targets>
      <Member MemberName="DidReceiveData">
        <MemberSignature Language="C#" Value="public static void DidReceiveData (this GameKit.IGKGameSessionEventListener This, GameKit.GKGameSession session, Foundation.NSData data, GameKit.GKCloudPlayer player);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveData(class GameKit.IGKGameSessionEventListener This, class GameKit.GKGameSession session, class Foundation.NSData data, class GameKit.GKCloudPlayer player) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKGameSessionEventListener" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.GameKit.GKGameSession" />
          <Parameter Name="data" Type="MonoTouch.Foundation.NSData" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKCloudPlayer" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="session">To be added.</param>
          <param name="data">To be added.</param>
          <param name="player">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKGameSessionEventListener_Extensions" Member="M:MonoTouch.GameKit.GKGameSessionEventListener_Extensions.DidReceiveData(MonoTouch.GameKit.IGKGameSessionEventListener,MonoTouch.GameKit.GKGameSession,MonoTouch.Foundation.NSData,MonoTouch.GameKit.GKCloudPlayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKGameSessionEventListener" />
      </Targets>
      <Member MemberName="DidReceiveMessage">
        <MemberSignature Language="C#" Value="public static void DidReceiveMessage (this GameKit.IGKGameSessionEventListener This, GameKit.GKGameSession session, string message, Foundation.NSData data, GameKit.GKCloudPlayer player);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveMessage(class GameKit.IGKGameSessionEventListener This, class GameKit.GKGameSession session, string message, class Foundation.NSData data, class GameKit.GKCloudPlayer player) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKGameSessionEventListener" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.GameKit.GKGameSession" />
          <Parameter Name="message" Type="System.String" />
          <Parameter Name="data" Type="MonoTouch.Foundation.NSData" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKCloudPlayer" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="session">To be added.</param>
          <param name="message">To be added.</param>
          <param name="data">To be added.</param>
          <param name="player">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKGameSessionEventListener_Extensions" Member="M:MonoTouch.GameKit.GKGameSessionEventListener_Extensions.DidReceiveMessage(MonoTouch.GameKit.IGKGameSessionEventListener,MonoTouch.GameKit.GKGameSession,System.String,MonoTouch.Foundation.NSData,MonoTouch.GameKit.GKCloudPlayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKGameSessionEventListener" />
      </Targets>
      <Member MemberName="DidRemovePlayer">
        <MemberSignature Language="C#" Value="public static void DidRemovePlayer (this GameKit.IGKGameSessionEventListener This, GameKit.GKGameSession session, GameKit.GKCloudPlayer player);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRemovePlayer(class GameKit.IGKGameSessionEventListener This, class GameKit.GKGameSession session, class GameKit.GKCloudPlayer player) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKGameSessionEventListener" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.GameKit.GKGameSession" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKCloudPlayer" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="session">To be added.</param>
          <param name="player">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKGameSessionEventListener_Extensions" Member="M:MonoTouch.GameKit.GKGameSessionEventListener_Extensions.DidRemovePlayer(MonoTouch.GameKit.IGKGameSessionEventListener,MonoTouch.GameKit.GKGameSession,MonoTouch.GameKit.GKCloudPlayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKGameSessionEventListener" />
      </Targets>
      <Member MemberName="DidSaveData">
        <MemberSignature Language="C#" Value="public static void DidSaveData (this GameKit.IGKGameSessionEventListener This, GameKit.GKGameSession session, GameKit.GKCloudPlayer player, Foundation.NSData data);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSaveData(class GameKit.IGKGameSessionEventListener This, class GameKit.GKGameSession session, class GameKit.GKCloudPlayer player, class Foundation.NSData data) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKGameSessionEventListener" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.GameKit.GKGameSession" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKCloudPlayer" />
          <Parameter Name="data" Type="MonoTouch.Foundation.NSData" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="session">To be added.</param>
          <param name="player">To be added.</param>
          <param name="data">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKGameSessionEventListener_Extensions" Member="M:MonoTouch.GameKit.GKGameSessionEventListener_Extensions.DidSaveData(MonoTouch.GameKit.IGKGameSessionEventListener,MonoTouch.GameKit.GKGameSession,MonoTouch.GameKit.GKCloudPlayer,MonoTouch.Foundation.NSData)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKInviteEventListener" />
      </Targets>
      <Member MemberName="DidAcceptInvite">
        <MemberSignature Language="C#" Value="public static void DidAcceptInvite (this GameKit.IGKInviteEventListener This, GameKit.GKPlayer player, GameKit.GKInvite invite);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAcceptInvite(class GameKit.IGKInviteEventListener This, class GameKit.GKPlayer player, class GameKit.GKInvite invite) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKInviteEventListener" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="invite" Type="MonoTouch.GameKit.GKInvite" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="invite">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKInviteEventListener_Extensions" Member="M:MonoTouch.GameKit.GKInviteEventListener_Extensions.DidAcceptInvite(MonoTouch.GameKit.IGKInviteEventListener,MonoTouch.GameKit.GKPlayer,MonoTouch.GameKit.GKInvite)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKInviteEventListener" />
      </Targets>
      <Member MemberName="DidRequestMatch">
        <MemberSignature Language="C#" Value="public static void DidRequestMatch (this GameKit.IGKInviteEventListener This, GameKit.GKPlayer player, GameKit.GKPlayer[] recipientPlayers);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRequestMatch(class GameKit.IGKInviteEventListener This, class GameKit.GKPlayer player, class GameKit.GKPlayer[] recipientPlayers) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKInviteEventListener" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="recipientPlayers" Type="MonoTouch.GameKit.GKPlayer[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="recipientPlayers">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKInviteEventListener_Extensions" Member="M:MonoTouch.GameKit.GKInviteEventListener_Extensions.DidRequestMatch(MonoTouch.GameKit.IGKInviteEventListener,MonoTouch.GameKit.GKPlayer,MonoTouch.GameKit.GKPlayer[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKInviteEventListener" />
      </Targets>
      <Member MemberName="DidRequestMatch">
        <MemberSignature Language="C#" Value="public static void DidRequestMatch (this GameKit.IGKInviteEventListener This, GameKit.GKPlayer player, string[] playerIDs);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRequestMatch(class GameKit.IGKInviteEventListener This, class GameKit.GKPlayer player, string[] playerIDs) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKInviteEventListener" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="playerIDs" Type="System.String[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="playerIDs">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKInviteEventListener_Extensions" Member="M:MonoTouch.GameKit.GKInviteEventListener_Extensions.DidRequestMatch(MonoTouch.GameKit.IGKInviteEventListener,MonoTouch.GameKit.GKPlayer,System.String[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKMatchDelegate" />
      </Targets>
      <Member MemberName="DataReceived">
        <MemberSignature Language="C#" Value="public static void DataReceived (this GameKit.IGKMatchDelegate This, GameKit.GKMatch match, Foundation.NSData data, string playerId);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DataReceived(class GameKit.IGKMatchDelegate This, class GameKit.GKMatch match, class Foundation.NSData data, string playerId) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKMatchDelegate" RefType="this" />
          <Parameter Name="match" Type="MonoTouch.GameKit.GKMatch" />
          <Parameter Name="data" Type="MonoTouch.Foundation.NSData" />
          <Parameter Name="playerId" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="match">To be added.</param>
          <param name="data">To be added.</param>
          <param name="playerId">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKMatchDelegate_Extensions" Member="M:MonoTouch.GameKit.GKMatchDelegate_Extensions.DataReceived(MonoTouch.GameKit.IGKMatchDelegate,MonoTouch.GameKit.GKMatch,MonoTouch.Foundation.NSData,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKMatchDelegate" />
      </Targets>
      <Member MemberName="DataReceivedForRecipient">
        <MemberSignature Language="C#" Value="public static void DataReceivedForRecipient (this GameKit.IGKMatchDelegate This, GameKit.GKMatch match, Foundation.NSData data, GameKit.GKPlayer recipient, GameKit.GKPlayer player);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DataReceivedForRecipient(class GameKit.IGKMatchDelegate This, class GameKit.GKMatch match, class Foundation.NSData data, class GameKit.GKPlayer recipient, class GameKit.GKPlayer player) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKMatchDelegate" RefType="this" />
          <Parameter Name="match" Type="MonoTouch.GameKit.GKMatch" />
          <Parameter Name="data" Type="MonoTouch.Foundation.NSData" />
          <Parameter Name="recipient" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="match">To be added.</param>
          <param name="data">To be added.</param>
          <param name="recipient">To be added.</param>
          <param name="player">To be added.</param>
          <summary>Method that is called when the <paramref name="recipient" /> recieves data from another <paramref name="player" />.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKMatchDelegate_Extensions" Member="M:MonoTouch.GameKit.GKMatchDelegate_Extensions.DataReceivedForRecipient(MonoTouch.GameKit.IGKMatchDelegate,MonoTouch.GameKit.GKMatch,MonoTouch.Foundation.NSData,MonoTouch.GameKit.GKPlayer,MonoTouch.GameKit.GKPlayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKMatchDelegate" />
      </Targets>
      <Member MemberName="DataReceivedFromPlayer">
        <MemberSignature Language="C#" Value="public static void DataReceivedFromPlayer (this GameKit.IGKMatchDelegate This, GameKit.GKMatch match, Foundation.NSData data, GameKit.GKPlayer player);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DataReceivedFromPlayer(class GameKit.IGKMatchDelegate This, class GameKit.GKMatch match, class Foundation.NSData data, class GameKit.GKPlayer player) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKMatchDelegate" RefType="this" />
          <Parameter Name="match" Type="MonoTouch.GameKit.GKMatch" />
          <Parameter Name="data" Type="MonoTouch.Foundation.NSData" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="match">To be added.</param>
          <param name="data">To be added.</param>
          <param name="player">To be added.</param>
          <summary>Method that is called when data is received from a player.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKMatchDelegate_Extensions" Member="M:MonoTouch.GameKit.GKMatchDelegate_Extensions.DataReceivedFromPlayer(MonoTouch.GameKit.IGKMatchDelegate,MonoTouch.GameKit.GKMatch,MonoTouch.Foundation.NSData,MonoTouch.GameKit.GKPlayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKMatchDelegate" />
      </Targets>
      <Member MemberName="Failed">
        <MemberSignature Language="C#" Value="public static void Failed (this GameKit.IGKMatchDelegate This, GameKit.GKMatch match, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Failed(class GameKit.IGKMatchDelegate This, class GameKit.GKMatch match, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKMatchDelegate" RefType="this" />
          <Parameter Name="match" Type="MonoTouch.GameKit.GKMatch" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="match">To be added.</param>
          <param name="error">To be added.This parameter can be .</param>
          <summary>Method that is called when a match cannot connect to any of the players.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKMatchDelegate_Extensions" Member="M:MonoTouch.GameKit.GKMatchDelegate_Extensions.Failed(MonoTouch.GameKit.IGKMatchDelegate,MonoTouch.GameKit.GKMatch,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKMatchDelegate" />
      </Targets>
      <Member MemberName="ShouldReinviteDisconnectedPlayer">
        <MemberSignature Language="C#" Value="public static bool ShouldReinviteDisconnectedPlayer (this GameKit.IGKMatchDelegate This, GameKit.GKMatch match, GameKit.GKPlayer player);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldReinviteDisconnectedPlayer(class GameKit.IGKMatchDelegate This, class GameKit.GKMatch match, class GameKit.GKPlayer player) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKMatchDelegate" RefType="this" />
          <Parameter Name="match" Type="MonoTouch.GameKit.GKMatch" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="match">To be added.</param>
          <param name="player">To be added.</param>
          <summary>Method that is called when a player is disconnected from a two-player match.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKMatchDelegate_Extensions" Member="M:MonoTouch.GameKit.GKMatchDelegate_Extensions.ShouldReinviteDisconnectedPlayer(MonoTouch.GameKit.IGKMatchDelegate,MonoTouch.GameKit.GKMatch,MonoTouch.GameKit.GKPlayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKMatchDelegate" />
      </Targets>
      <Member MemberName="ShouldReinvitePlayer">
        <MemberSignature Language="C#" Value="public static bool ShouldReinvitePlayer (this GameKit.IGKMatchDelegate This, GameKit.GKMatch match, string playerId);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldReinvitePlayer(class GameKit.IGKMatchDelegate This, class GameKit.GKMatch match, string playerId) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKMatchDelegate" RefType="this" />
          <Parameter Name="match" Type="MonoTouch.GameKit.GKMatch" />
          <Parameter Name="playerId" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="match">To be added.</param>
          <param name="playerId">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKMatchDelegate_Extensions" Member="M:MonoTouch.GameKit.GKMatchDelegate_Extensions.ShouldReinvitePlayer(MonoTouch.GameKit.IGKMatchDelegate,MonoTouch.GameKit.GKMatch,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKMatchDelegate" />
      </Targets>
      <Member MemberName="StateChanged">
        <MemberSignature Language="C#" Value="public static void StateChanged (this GameKit.IGKMatchDelegate This, GameKit.GKMatch match, string playerId, GameKit.GKPlayerConnectionState state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StateChanged(class GameKit.IGKMatchDelegate This, class GameKit.GKMatch match, string playerId, valuetype GameKit.GKPlayerConnectionState state) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKMatchDelegate" RefType="this" />
          <Parameter Name="match" Type="MonoTouch.GameKit.GKMatch" />
          <Parameter Name="playerId" Type="System.String" />
          <Parameter Name="state" Type="MonoTouch.GameKit.GKPlayerConnectionState" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="match">To be added.</param>
          <param name="playerId">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKMatchDelegate_Extensions" Member="M:MonoTouch.GameKit.GKMatchDelegate_Extensions.StateChanged(MonoTouch.GameKit.IGKMatchDelegate,MonoTouch.GameKit.GKMatch,System.String,MonoTouch.GameKit.GKPlayerConnectionState)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKMatchDelegate" />
      </Targets>
      <Member MemberName="StateChangedForPlayer">
        <MemberSignature Language="C#" Value="public static void StateChangedForPlayer (this GameKit.IGKMatchDelegate This, GameKit.GKMatch match, GameKit.GKPlayer player, GameKit.GKPlayerConnectionState state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StateChangedForPlayer(class GameKit.IGKMatchDelegate This, class GameKit.GKMatch match, class GameKit.GKPlayer player, valuetype GameKit.GKPlayerConnectionState state) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKMatchDelegate" RefType="this" />
          <Parameter Name="match" Type="MonoTouch.GameKit.GKMatch" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="state" Type="MonoTouch.GameKit.GKPlayerConnectionState" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="match">To be added.</param>
          <param name="player">To be added.</param>
          <param name="state">To be added.</param>
          <summary>Method that is called when a player's connection state changes.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKMatchDelegate_Extensions" Member="M:MonoTouch.GameKit.GKMatchDelegate_Extensions.StateChangedForPlayer(MonoTouch.GameKit.IGKMatchDelegate,MonoTouch.GameKit.GKMatch,MonoTouch.GameKit.GKPlayer,MonoTouch.GameKit.GKPlayerConnectionState)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKMatchmakerViewControllerDelegate" />
      </Targets>
      <Member MemberName="HostedPlayerDidAccept">
        <MemberSignature Language="C#" Value="public static void HostedPlayerDidAccept (this GameKit.IGKMatchmakerViewControllerDelegate This, GameKit.GKMatchmakerViewController viewController, GameKit.GKPlayer playerID);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HostedPlayerDidAccept(class GameKit.IGKMatchmakerViewControllerDelegate This, class GameKit.GKMatchmakerViewController viewController, class GameKit.GKPlayer playerID) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKMatchmakerViewControllerDelegate" RefType="this" />
          <Parameter Name="viewController" Type="MonoTouch.GameKit.GKMatchmakerViewController" />
          <Parameter Name="playerID" Type="MonoTouch.GameKit.GKPlayer" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="viewController">To be added.</param>
          <param name="playerID">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKMatchmakerViewControllerDelegate_Extensions" Member="M:MonoTouch.GameKit.GKMatchmakerViewControllerDelegate_Extensions.HostedPlayerDidAccept(MonoTouch.GameKit.IGKMatchmakerViewControllerDelegate,MonoTouch.GameKit.GKMatchmakerViewController,MonoTouch.GameKit.GKPlayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKMatchmakerViewControllerDelegate" />
      </Targets>
      <Member MemberName="ReceivedAcceptFromHostedPlayer">
        <MemberSignature Language="C#" Value="public static void ReceivedAcceptFromHostedPlayer (this GameKit.IGKMatchmakerViewControllerDelegate This, GameKit.GKMatchmakerViewController viewController, string playerID);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceivedAcceptFromHostedPlayer(class GameKit.IGKMatchmakerViewControllerDelegate This, class GameKit.GKMatchmakerViewController viewController, string playerID) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKMatchmakerViewControllerDelegate" RefType="this" />
          <Parameter Name="viewController" Type="MonoTouch.GameKit.GKMatchmakerViewController" />
          <Parameter Name="playerID" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="viewController">To be added.</param>
          <param name="playerID">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKMatchmakerViewControllerDelegate_Extensions" Member="M:MonoTouch.GameKit.GKMatchmakerViewControllerDelegate_Extensions.ReceivedAcceptFromHostedPlayer(MonoTouch.GameKit.IGKMatchmakerViewControllerDelegate,MonoTouch.GameKit.GKMatchmakerViewController,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKPeerPickerControllerDelegate" />
      </Targets>
      <Member MemberName="ConnectionTypeSelected">
        <MemberSignature Language="C#" Value="public static void ConnectionTypeSelected (this GameKit.IGKPeerPickerControllerDelegate This, GameKit.GKPeerPickerController picker, GameKit.GKPeerPickerConnectionType type);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConnectionTypeSelected(class GameKit.IGKPeerPickerControllerDelegate This, class GameKit.GKPeerPickerController picker, valuetype GameKit.GKPeerPickerConnectionType type) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKPeerPickerControllerDelegate" RefType="this" />
          <Parameter Name="picker" Type="MonoTouch.GameKit.GKPeerPickerController" />
          <Parameter Name="type" Type="MonoTouch.GameKit.GKPeerPickerConnectionType" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="picker">To be added.</param>
          <param name="type">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKPeerPickerControllerDelegate_Extensions" Member="M:MonoTouch.GameKit.GKPeerPickerControllerDelegate_Extensions.ConnectionTypeSelected(MonoTouch.GameKit.IGKPeerPickerControllerDelegate,MonoTouch.GameKit.GKPeerPickerController,MonoTouch.GameKit.GKPeerPickerConnectionType)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKPeerPickerControllerDelegate" />
      </Targets>
      <Member MemberName="ControllerCancelled">
        <MemberSignature Language="C#" Value="public static void ControllerCancelled (this GameKit.IGKPeerPickerControllerDelegate This, GameKit.GKPeerPickerController picker);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ControllerCancelled(class GameKit.IGKPeerPickerControllerDelegate This, class GameKit.GKPeerPickerController picker) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKPeerPickerControllerDelegate" RefType="this" />
          <Parameter Name="picker" Type="MonoTouch.GameKit.GKPeerPickerController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="picker">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKPeerPickerControllerDelegate_Extensions" Member="M:MonoTouch.GameKit.GKPeerPickerControllerDelegate_Extensions.ControllerCancelled(MonoTouch.GameKit.IGKPeerPickerControllerDelegate,MonoTouch.GameKit.GKPeerPickerController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKPeerPickerControllerDelegate" />
      </Targets>
      <Member MemberName="GetSession">
        <MemberSignature Language="C#" Value="public static GameKit.GKSession GetSession (this GameKit.IGKPeerPickerControllerDelegate This, GameKit.GKPeerPickerController picker, GameKit.GKPeerPickerConnectionType forType);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class GameKit.GKSession GetSession(class GameKit.IGKPeerPickerControllerDelegate This, class GameKit.GKPeerPickerController picker, valuetype GameKit.GKPeerPickerConnectionType forType) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.GameKit.GKSession</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKPeerPickerControllerDelegate" RefType="this" />
          <Parameter Name="picker" Type="MonoTouch.GameKit.GKPeerPickerController" />
          <Parameter Name="forType" Type="MonoTouch.GameKit.GKPeerPickerConnectionType" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="picker">To be added.</param>
          <param name="forType">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKPeerPickerControllerDelegate_Extensions" Member="M:MonoTouch.GameKit.GKPeerPickerControllerDelegate_Extensions.GetSession(MonoTouch.GameKit.IGKPeerPickerControllerDelegate,MonoTouch.GameKit.GKPeerPickerController,MonoTouch.GameKit.GKPeerPickerConnectionType)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKPeerPickerControllerDelegate" />
      </Targets>
      <Member MemberName="PeerConnected">
        <MemberSignature Language="C#" Value="public static void PeerConnected (this GameKit.IGKPeerPickerControllerDelegate This, GameKit.GKPeerPickerController picker, string peerId, GameKit.GKSession toSession);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PeerConnected(class GameKit.IGKPeerPickerControllerDelegate This, class GameKit.GKPeerPickerController picker, string peerId, class GameKit.GKSession toSession) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKPeerPickerControllerDelegate" RefType="this" />
          <Parameter Name="picker" Type="MonoTouch.GameKit.GKPeerPickerController" />
          <Parameter Name="peerId" Type="System.String" />
          <Parameter Name="toSession" Type="MonoTouch.GameKit.GKSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="picker">To be added.</param>
          <param name="peerId">To be added.</param>
          <param name="toSession">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKPeerPickerControllerDelegate_Extensions" Member="M:MonoTouch.GameKit.GKPeerPickerControllerDelegate_Extensions.PeerConnected(MonoTouch.GameKit.IGKPeerPickerControllerDelegate,MonoTouch.GameKit.GKPeerPickerController,System.String,MonoTouch.GameKit.GKSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKSavedGameListener" />
      </Targets>
      <Member MemberName="DidModifySavedGame">
        <MemberSignature Language="C#" Value="public static void DidModifySavedGame (this GameKit.IGKSavedGameListener This, GameKit.GKPlayer player, GameKit.GKSavedGame savedGame);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidModifySavedGame(class GameKit.IGKSavedGameListener This, class GameKit.GKPlayer player, class GameKit.GKSavedGame savedGame) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKSavedGameListener" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="savedGame" Type="MonoTouch.GameKit.GKSavedGame" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="savedGame">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKSavedGameListener_Extensions" Member="M:MonoTouch.GameKit.GKSavedGameListener_Extensions.DidModifySavedGame(MonoTouch.GameKit.IGKSavedGameListener,MonoTouch.GameKit.GKPlayer,MonoTouch.GameKit.GKSavedGame)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKSavedGameListener" />
      </Targets>
      <Member MemberName="HasConflictingSavedGames">
        <MemberSignature Language="C#" Value="public static void HasConflictingSavedGames (this GameKit.IGKSavedGameListener This, GameKit.GKPlayer player, GameKit.GKSavedGame[] savedGames);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HasConflictingSavedGames(class GameKit.IGKSavedGameListener This, class GameKit.GKPlayer player, class GameKit.GKSavedGame[] savedGames) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKSavedGameListener" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="savedGames" Type="MonoTouch.GameKit.GKSavedGame[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="savedGames">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKSavedGameListener_Extensions" Member="M:MonoTouch.GameKit.GKSavedGameListener_Extensions.HasConflictingSavedGames(MonoTouch.GameKit.IGKSavedGameListener,MonoTouch.GameKit.GKPlayer,MonoTouch.GameKit.GKSavedGame[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKSessionDelegate" />
      </Targets>
      <Member MemberName="FailedWithError">
        <MemberSignature Language="C#" Value="public static void FailedWithError (this GameKit.IGKSessionDelegate This, GameKit.GKSession session, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FailedWithError(class GameKit.IGKSessionDelegate This, class GameKit.GKSession session, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.GameKit.GKSession" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKSessionDelegate_Extensions" Member="M:MonoTouch.GameKit.GKSessionDelegate_Extensions.FailedWithError(MonoTouch.GameKit.IGKSessionDelegate,MonoTouch.GameKit.GKSession,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKSessionDelegate" />
      </Targets>
      <Member MemberName="PeerChangedState">
        <MemberSignature Language="C#" Value="public static void PeerChangedState (this GameKit.IGKSessionDelegate This, GameKit.GKSession session, string peerID, GameKit.GKPeerConnectionState state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PeerChangedState(class GameKit.IGKSessionDelegate This, class GameKit.GKSession session, string peerID, valuetype GameKit.GKPeerConnectionState state) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.GameKit.GKSession" />
          <Parameter Name="peerID" Type="System.String" />
          <Parameter Name="state" Type="MonoTouch.GameKit.GKPeerConnectionState" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="peerID">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKSessionDelegate_Extensions" Member="M:MonoTouch.GameKit.GKSessionDelegate_Extensions.PeerChangedState(MonoTouch.GameKit.IGKSessionDelegate,MonoTouch.GameKit.GKSession,System.String,MonoTouch.GameKit.GKPeerConnectionState)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKSessionDelegate" />
      </Targets>
      <Member MemberName="PeerConnectionFailed">
        <MemberSignature Language="C#" Value="public static void PeerConnectionFailed (this GameKit.IGKSessionDelegate This, GameKit.GKSession session, string peerID, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PeerConnectionFailed(class GameKit.IGKSessionDelegate This, class GameKit.GKSession session, string peerID, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.GameKit.GKSession" />
          <Parameter Name="peerID" Type="System.String" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="peerID">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKSessionDelegate_Extensions" Member="M:MonoTouch.GameKit.GKSessionDelegate_Extensions.PeerConnectionFailed(MonoTouch.GameKit.IGKSessionDelegate,MonoTouch.GameKit.GKSession,System.String,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKSessionDelegate" />
      </Targets>
      <Member MemberName="PeerConnectionRequest">
        <MemberSignature Language="C#" Value="public static void PeerConnectionRequest (this GameKit.IGKSessionDelegate This, GameKit.GKSession session, string peerID);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PeerConnectionRequest(class GameKit.IGKSessionDelegate This, class GameKit.GKSession session, string peerID) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.GameKit.GKSession" />
          <Parameter Name="peerID" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="peerID">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKSessionDelegate_Extensions" Member="M:MonoTouch.GameKit.GKSessionDelegate_Extensions.PeerConnectionRequest(MonoTouch.GameKit.IGKSessionDelegate,MonoTouch.GameKit.GKSession,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKTurnBasedEventHandlerDelegate" />
      </Targets>
      <Member MemberName="HandleMatchEnded">
        <MemberSignature Language="C#" Value="public static void HandleMatchEnded (this GameKit.IGKTurnBasedEventHandlerDelegate This, GameKit.GKTurnBasedMatch match);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleMatchEnded(class GameKit.IGKTurnBasedEventHandlerDelegate This, class GameKit.GKTurnBasedMatch match) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKTurnBasedEventHandlerDelegate" RefType="this" />
          <Parameter Name="match" Type="MonoTouch.GameKit.GKTurnBasedMatch" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="match">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKTurnBasedEventHandlerDelegate_Extensions" Member="M:MonoTouch.GameKit.GKTurnBasedEventHandlerDelegate_Extensions.HandleMatchEnded(MonoTouch.GameKit.IGKTurnBasedEventHandlerDelegate,MonoTouch.GameKit.GKTurnBasedMatch)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKTurnBasedEventHandlerDelegate" />
      </Targets>
      <Member MemberName="HandleTurnEventForMatch">
        <MemberSignature Language="C#" Value="public static void HandleTurnEventForMatch (this GameKit.IGKTurnBasedEventHandlerDelegate This, GameKit.GKTurnBasedMatch match);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleTurnEventForMatch(class GameKit.IGKTurnBasedEventHandlerDelegate This, class GameKit.GKTurnBasedMatch match) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKTurnBasedEventHandlerDelegate" RefType="this" />
          <Parameter Name="match" Type="MonoTouch.GameKit.GKTurnBasedMatch" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="match">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKTurnBasedEventHandlerDelegate_Extensions" Member="M:MonoTouch.GameKit.GKTurnBasedEventHandlerDelegate_Extensions.HandleTurnEventForMatch(MonoTouch.GameKit.IGKTurnBasedEventHandlerDelegate,MonoTouch.GameKit.GKTurnBasedMatch)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKTurnBasedEventListener" />
      </Targets>
      <Member MemberName="DidRequestMatchWithOtherPlayers">
        <MemberSignature Language="C#" Value="public static void DidRequestMatchWithOtherPlayers (this GameKit.IGKTurnBasedEventListener This, GameKit.GKPlayer player, GameKit.GKPlayer[] playersToInvite);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRequestMatchWithOtherPlayers(class GameKit.IGKTurnBasedEventListener This, class GameKit.GKPlayer player, class GameKit.GKPlayer[] playersToInvite) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKTurnBasedEventListener" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="playersToInvite" Type="MonoTouch.GameKit.GKPlayer[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="playersToInvite">To be added.</param>
          <summary>Method that is called when <paramref name="player" /> requests a match with <paramref name="playersToInvite" />.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKTurnBasedEventListener_Extensions" Member="M:MonoTouch.GameKit.GKTurnBasedEventListener_Extensions.DidRequestMatchWithOtherPlayers(MonoTouch.GameKit.IGKTurnBasedEventListener,MonoTouch.GameKit.GKPlayer,MonoTouch.GameKit.GKPlayer[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKTurnBasedEventListener" />
      </Targets>
      <Member MemberName="DidRequestMatchWithPlayers">
        <MemberSignature Language="C#" Value="public static void DidRequestMatchWithPlayers (this GameKit.IGKTurnBasedEventListener This, GameKit.GKPlayer player, string[] playerIDsToInvite);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRequestMatchWithPlayers(class GameKit.IGKTurnBasedEventListener This, class GameKit.GKPlayer player, string[] playerIDsToInvite) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKTurnBasedEventListener" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="playerIDsToInvite" Type="System.String[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="playerIDsToInvite">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKTurnBasedEventListener_Extensions" Member="M:MonoTouch.GameKit.GKTurnBasedEventListener_Extensions.DidRequestMatchWithPlayers(MonoTouch.GameKit.IGKTurnBasedEventListener,MonoTouch.GameKit.GKPlayer,System.String[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKTurnBasedEventListener" />
      </Targets>
      <Member MemberName="MatchEnded">
        <MemberSignature Language="C#" Value="public static void MatchEnded (this GameKit.IGKTurnBasedEventListener This, GameKit.GKPlayer player, GameKit.GKTurnBasedMatch match);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MatchEnded(class GameKit.IGKTurnBasedEventListener This, class GameKit.GKPlayer player, class GameKit.GKTurnBasedMatch match) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKTurnBasedEventListener" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="match" Type="MonoTouch.GameKit.GKTurnBasedMatch" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="match">To be added.</param>
          <summary>Method that is called after the <paramref name="match" /> is ended.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKTurnBasedEventListener_Extensions" Member="M:MonoTouch.GameKit.GKTurnBasedEventListener_Extensions.MatchEnded(MonoTouch.GameKit.IGKTurnBasedEventListener,MonoTouch.GameKit.GKPlayer,MonoTouch.GameKit.GKTurnBasedMatch)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKTurnBasedEventListener" />
      </Targets>
      <Member MemberName="ReceivedExchangeCancellation">
        <MemberSignature Language="C#" Value="public static void ReceivedExchangeCancellation (this GameKit.IGKTurnBasedEventListener This, GameKit.GKPlayer player, GameKit.GKTurnBasedExchange exchange, GameKit.GKTurnBasedMatch match);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceivedExchangeCancellation(class GameKit.IGKTurnBasedEventListener This, class GameKit.GKPlayer player, class GameKit.GKTurnBasedExchange exchange, class GameKit.GKTurnBasedMatch match) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKTurnBasedEventListener" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="exchange" Type="MonoTouch.GameKit.GKTurnBasedExchange" />
          <Parameter Name="match" Type="MonoTouch.GameKit.GKTurnBasedMatch" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="exchange">To be added.</param>
          <param name="match">To be added.</param>
          <summary>Method that is called after <paramref name="player" /> cancels the <paramref name="exchange" />.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKTurnBasedEventListener_Extensions" Member="M:MonoTouch.GameKit.GKTurnBasedEventListener_Extensions.ReceivedExchangeCancellation(MonoTouch.GameKit.IGKTurnBasedEventListener,MonoTouch.GameKit.GKPlayer,MonoTouch.GameKit.GKTurnBasedExchange,MonoTouch.GameKit.GKTurnBasedMatch)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKTurnBasedEventListener" />
      </Targets>
      <Member MemberName="ReceivedExchangeReplies">
        <MemberSignature Language="C#" Value="public static void ReceivedExchangeReplies (this GameKit.IGKTurnBasedEventListener This, GameKit.GKPlayer player, GameKit.GKTurnBasedExchangeReply[] replies, GameKit.GKTurnBasedExchange exchange, GameKit.GKTurnBasedMatch match);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceivedExchangeReplies(class GameKit.IGKTurnBasedEventListener This, class GameKit.GKPlayer player, class GameKit.GKTurnBasedExchangeReply[] replies, class GameKit.GKTurnBasedExchange exchange, class GameKit.GKTurnBasedMatch match) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKTurnBasedEventListener" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="replies" Type="MonoTouch.GameKit.GKTurnBasedExchangeReply[]" />
          <Parameter Name="exchange" Type="MonoTouch.GameKit.GKTurnBasedExchange" />
          <Parameter Name="match" Type="MonoTouch.GameKit.GKTurnBasedMatch" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="replies">To be added.</param>
          <param name="exchange">To be added.</param>
          <param name="match">To be added.</param>
          <summary>Method that is called after the <paramref name="exchange" /> with <paramref name="player" /> completes.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKTurnBasedEventListener_Extensions" Member="M:MonoTouch.GameKit.GKTurnBasedEventListener_Extensions.ReceivedExchangeReplies(MonoTouch.GameKit.IGKTurnBasedEventListener,MonoTouch.GameKit.GKPlayer,MonoTouch.GameKit.GKTurnBasedExchangeReply[],MonoTouch.GameKit.GKTurnBasedExchange,MonoTouch.GameKit.GKTurnBasedMatch)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKTurnBasedEventListener" />
      </Targets>
      <Member MemberName="ReceivedExchangeRequest">
        <MemberSignature Language="C#" Value="public static void ReceivedExchangeRequest (this GameKit.IGKTurnBasedEventListener This, GameKit.GKPlayer player, GameKit.GKTurnBasedExchange exchange, GameKit.GKTurnBasedMatch match);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceivedExchangeRequest(class GameKit.IGKTurnBasedEventListener This, class GameKit.GKPlayer player, class GameKit.GKTurnBasedExchange exchange, class GameKit.GKTurnBasedMatch match) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKTurnBasedEventListener" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="exchange" Type="MonoTouch.GameKit.GKTurnBasedExchange" />
          <Parameter Name="match" Type="MonoTouch.GameKit.GKTurnBasedMatch" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="exchange">To be added.</param>
          <param name="match">To be added.</param>
          <summary>Method that is called when <paramref name="player" /> receives a request for an <paramref name="exchange" />.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKTurnBasedEventListener_Extensions" Member="M:MonoTouch.GameKit.GKTurnBasedEventListener_Extensions.ReceivedExchangeRequest(MonoTouch.GameKit.IGKTurnBasedEventListener,MonoTouch.GameKit.GKPlayer,MonoTouch.GameKit.GKTurnBasedExchange,MonoTouch.GameKit.GKTurnBasedMatch)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKTurnBasedEventListener" />
      </Targets>
      <Member MemberName="ReceivedTurnEvent">
        <MemberSignature Language="C#" Value="public static void ReceivedTurnEvent (this GameKit.IGKTurnBasedEventListener This, GameKit.GKPlayer player, GameKit.GKTurnBasedMatch match, bool becameActive);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceivedTurnEvent(class GameKit.IGKTurnBasedEventListener This, class GameKit.GKPlayer player, class GameKit.GKTurnBasedMatch match, bool becameActive) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKTurnBasedEventListener" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="match" Type="MonoTouch.GameKit.GKTurnBasedMatch" />
          <Parameter Name="becameActive" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="match">To be added.</param>
          <param name="becameActive">To be added.</param>
          <summary>Method that is called to activate a turn for <paramref name="player" />.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKTurnBasedEventListener_Extensions" Member="M:MonoTouch.GameKit.GKTurnBasedEventListener_Extensions.ReceivedTurnEvent(MonoTouch.GameKit.IGKTurnBasedEventListener,MonoTouch.GameKit.GKPlayer,MonoTouch.GameKit.GKTurnBasedMatch,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKTurnBasedEventListener" />
      </Targets>
      <Member MemberName="WantsToQuitMatch">
        <MemberSignature Language="C#" Value="public static void WantsToQuitMatch (this GameKit.IGKTurnBasedEventListener This, GameKit.GKPlayer player, GameKit.GKTurnBasedMatch match);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WantsToQuitMatch(class GameKit.IGKTurnBasedEventListener This, class GameKit.GKPlayer player, class GameKit.GKTurnBasedMatch match) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKTurnBasedEventListener" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="match" Type="MonoTouch.GameKit.GKTurnBasedMatch" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="match">To be added.</param>
          <summary>Method that is called after <paramref name="player" /> indicates that they desire to quit the match.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKTurnBasedEventListener_Extensions" Member="M:MonoTouch.GameKit.GKTurnBasedEventListener_Extensions.WantsToQuitMatch(MonoTouch.GameKit.IGKTurnBasedEventListener,MonoTouch.GameKit.GKPlayer,MonoTouch.GameKit.GKTurnBasedMatch)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKVoiceChatClient" />
      </Targets>
      <Member MemberName="FailedToConnect">
        <MemberSignature Language="C#" Value="public static void FailedToConnect (this GameKit.IGKVoiceChatClient This, GameKit.GKVoiceChatService voiceChatService, string participantID, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FailedToConnect(class GameKit.IGKVoiceChatClient This, class GameKit.GKVoiceChatService voiceChatService, string participantID, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKVoiceChatClient" RefType="this" />
          <Parameter Name="voiceChatService" Type="MonoTouch.GameKit.GKVoiceChatService" />
          <Parameter Name="participantID" Type="System.String" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="voiceChatService">To be added.</param>
          <param name="participantID">To be added.</param>
          <param name="error">To be added.This parameter can be .</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKVoiceChatClient_Extensions" Member="M:MonoTouch.GameKit.GKVoiceChatClient_Extensions.FailedToConnect(MonoTouch.GameKit.IGKVoiceChatClient,MonoTouch.GameKit.GKVoiceChatService,System.String,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKVoiceChatClient" />
      </Targets>
      <Member MemberName="ReceivedInvitation">
        <MemberSignature Language="C#" Value="public static void ReceivedInvitation (this GameKit.IGKVoiceChatClient This, GameKit.GKVoiceChatService voiceChatService, string participantID, nint callID);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceivedInvitation(class GameKit.IGKVoiceChatClient This, class GameKit.GKVoiceChatService voiceChatService, string participantID, valuetype System.nint callID) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKVoiceChatClient" RefType="this" />
          <Parameter Name="voiceChatService" Type="MonoTouch.GameKit.GKVoiceChatService" />
          <Parameter Name="participantID" Type="System.String" />
          <Parameter Name="callID" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="voiceChatService">To be added.</param>
          <param name="participantID">To be added.</param>
          <param name="callID">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKVoiceChatClient_Extensions" Member="M:MonoTouch.GameKit.GKVoiceChatClient_Extensions.ReceivedInvitation(MonoTouch.GameKit.IGKVoiceChatClient,MonoTouch.GameKit.GKVoiceChatService,System.String,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKVoiceChatClient" />
      </Targets>
      <Member MemberName="SendRealTimeData">
        <MemberSignature Language="C#" Value="public static void SendRealTimeData (this GameKit.IGKVoiceChatClient This, GameKit.GKVoiceChatService voiceChatService, Foundation.NSData data, string participantID);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SendRealTimeData(class GameKit.IGKVoiceChatClient This, class GameKit.GKVoiceChatService voiceChatService, class Foundation.NSData data, string participantID) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKVoiceChatClient" RefType="this" />
          <Parameter Name="voiceChatService" Type="MonoTouch.GameKit.GKVoiceChatService" />
          <Parameter Name="data" Type="MonoTouch.Foundation.NSData" />
          <Parameter Name="participantID" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="voiceChatService">To be added.</param>
          <param name="data">To be added.</param>
          <param name="participantID">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKVoiceChatClient_Extensions" Member="M:MonoTouch.GameKit.GKVoiceChatClient_Extensions.SendRealTimeData(MonoTouch.GameKit.IGKVoiceChatClient,MonoTouch.GameKit.GKVoiceChatService,MonoTouch.Foundation.NSData,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKVoiceChatClient" />
      </Targets>
      <Member MemberName="Started">
        <MemberSignature Language="C#" Value="public static void Started (this GameKit.IGKVoiceChatClient This, GameKit.GKVoiceChatService voiceChatService, string participantID);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Started(class GameKit.IGKVoiceChatClient This, class GameKit.GKVoiceChatService voiceChatService, string participantID) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKVoiceChatClient" RefType="this" />
          <Parameter Name="voiceChatService" Type="MonoTouch.GameKit.GKVoiceChatService" />
          <Parameter Name="participantID" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="voiceChatService">To be added.</param>
          <param name="participantID">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKVoiceChatClient_Extensions" Member="M:MonoTouch.GameKit.GKVoiceChatClient_Extensions.Started(MonoTouch.GameKit.IGKVoiceChatClient,MonoTouch.GameKit.GKVoiceChatService,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKVoiceChatClient" />
      </Targets>
      <Member MemberName="Stopped">
        <MemberSignature Language="C#" Value="public static void Stopped (this GameKit.IGKVoiceChatClient This, GameKit.GKVoiceChatService voiceChatService, string participantID, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Stopped(class GameKit.IGKVoiceChatClient This, class GameKit.GKVoiceChatService voiceChatService, string participantID, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKVoiceChatClient" RefType="this" />
          <Parameter Name="voiceChatService" Type="MonoTouch.GameKit.GKVoiceChatService" />
          <Parameter Name="participantID" Type="System.String" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="voiceChatService">To be added.</param>
          <param name="participantID">To be added.</param>
          <param name="error">To be added.This parameter can be .</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKVoiceChatClient_Extensions" Member="M:MonoTouch.GameKit.GKVoiceChatClient_Extensions.Stopped(MonoTouch.GameKit.IGKVoiceChatClient,MonoTouch.GameKit.GKVoiceChatService,System.String,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.GKVoiceChatServiceError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this GameKit.GKVoiceChatServiceError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype GameKit.GKVoiceChatServiceError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.GameKit.GKVoiceChatServiceError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.GameKit.GKVoiceChatServiceError value</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKVoiceChatServiceErrorExtensions" Member="M:MonoTouch.GameKit.GKVoiceChatServiceErrorExtensions.GetDomain(MonoTouch.GameKit.GKVoiceChatServiceError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameplayKit.IGKAgentDelegate" />
      </Targets>
      <Member MemberName="AgentDidUpdate">
        <MemberSignature Language="C#" Value="public static void AgentDidUpdate (this GameplayKit.IGKAgentDelegate This, GameplayKit.GKAgent agent);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AgentDidUpdate(class GameplayKit.IGKAgentDelegate This, class GameplayKit.GKAgent agent) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameplayKit.IGKAgentDelegate" RefType="this" />
          <Parameter Name="agent" Type="MonoTouch.GameplayKit.GKAgent" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="agent">To be added.</param>
          <summary>Method that is called after <paramref name="agent" /> has performed a simulation step.</summary>
        </Docs>
        <Link Type="MonoTouch.GameplayKit.GKAgentDelegate_Extensions" Member="M:MonoTouch.GameplayKit.GKAgentDelegate_Extensions.AgentDidUpdate(MonoTouch.GameplayKit.IGKAgentDelegate,MonoTouch.GameplayKit.GKAgent)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameplayKit.IGKAgentDelegate" />
      </Targets>
      <Member MemberName="AgentWillUpdate">
        <MemberSignature Language="C#" Value="public static void AgentWillUpdate (this GameplayKit.IGKAgentDelegate This, GameplayKit.GKAgent agent);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AgentWillUpdate(class GameplayKit.IGKAgentDelegate This, class GameplayKit.GKAgent agent) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameplayKit.IGKAgentDelegate" RefType="this" />
          <Parameter Name="agent" Type="MonoTouch.GameplayKit.GKAgent" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="agent">To be added.</param>
          <summary>Method that is called before <paramref name="agent" /> performs a simulation step.</summary>
        </Docs>
        <Link Type="MonoTouch.GameplayKit.GKAgentDelegate_Extensions" Member="M:MonoTouch.GameplayKit.GKAgentDelegate_Extensions.AgentWillUpdate(MonoTouch.GameplayKit.IGKAgentDelegate,MonoTouch.GameplayKit.GKAgent)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameplayKit.IGKGameModel" />
      </Targets>
      <Member MemberName="GetScore">
        <MemberSignature Language="C#" Value="public static nint GetScore (this GameplayKit.IGKGameModel This, GameplayKit.IGKGameModelPlayer player);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nint GetScore(class GameplayKit.IGKGameModel This, class GameplayKit.IGKGameModelPlayer player) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameplayKit.IGKGameModel" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameplayKit.IGKGameModelPlayer" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="player">To be added.</param>
          <summary>Gets the score for the specified <paramref name="player" />.</summary>
        </Docs>
        <Link Type="MonoTouch.GameplayKit.GKGameModel_Extensions" Member="M:MonoTouch.GameplayKit.GKGameModel_Extensions.GetScore(MonoTouch.GameplayKit.IGKGameModel,MonoTouch.GameplayKit.IGKGameModelPlayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameplayKit.IGKGameModel" />
      </Targets>
      <Member MemberName="IsLoss">
        <MemberSignature Language="C#" Value="public static bool IsLoss (this GameplayKit.IGKGameModel This, GameplayKit.IGKGameModelPlayer player);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLoss(class GameplayKit.IGKGameModel This, class GameplayKit.IGKGameModelPlayer player) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameplayKit.IGKGameModel" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameplayKit.IGKGameModelPlayer" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="player">To be added.</param>
          <summary>Returns a Boolean value that tells whether the <paramref name="player" /> lost.</summary>
        </Docs>
        <Link Type="MonoTouch.GameplayKit.GKGameModel_Extensions" Member="M:MonoTouch.GameplayKit.GKGameModel_Extensions.IsLoss(MonoTouch.GameplayKit.IGKGameModel,MonoTouch.GameplayKit.IGKGameModelPlayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameplayKit.IGKGameModel" />
      </Targets>
      <Member MemberName="IsWin">
        <MemberSignature Language="C#" Value="public static bool IsWin (this GameplayKit.IGKGameModel This, GameplayKit.IGKGameModelPlayer player);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWin(class GameplayKit.IGKGameModel This, class GameplayKit.IGKGameModelPlayer player) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameplayKit.IGKGameModel" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameplayKit.IGKGameModelPlayer" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="player">To be added.</param>
          <summary>Returns a Boolean value that tells whether the <paramref name="player" /> won.</summary>
        </Docs>
        <Link Type="MonoTouch.GameplayKit.GKGameModel_Extensions" Member="M:MonoTouch.GameplayKit.GKGameModel_Extensions.IsWin(MonoTouch.GameplayKit.IGKGameModel,MonoTouch.GameplayKit.IGKGameModelPlayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameplayKit.IGKGameModel" />
      </Targets>
      <Member MemberName="UnapplyGameModelUpdate">
        <MemberSignature Language="C#" Value="public static void UnapplyGameModelUpdate (this GameplayKit.IGKGameModel This, GameplayKit.IGKGameModelUpdate gameModelUpdate);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UnapplyGameModelUpdate(class GameplayKit.IGKGameModel This, class GameplayKit.IGKGameModelUpdate gameModelUpdate) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameplayKit.IGKGameModel" RefType="this" />
          <Parameter Name="gameModelUpdate" Type="MonoTouch.GameplayKit.IGKGameModelUpdate" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="gameModelUpdate">To be added.</param>
          <summary>Removes the specified changes from the game's state.</summary>
        </Docs>
        <Link Type="MonoTouch.GameplayKit.GKGameModel_Extensions" Member="M:MonoTouch.GameplayKit.GKGameModel_Extensions.UnapplyGameModelUpdate(MonoTouch.GameplayKit.IGKGameModel,MonoTouch.GameplayKit.IGKGameModelUpdate)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameplayKit.IGKGameModelPlayer" />
      </Targets>
      <Member MemberName="GetPlayerId">
        <MemberSignature Language="C#" Value="public static nint GetPlayerId (this GameplayKit.IGKGameModelPlayer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nint GetPlayerId(class GameplayKit.IGKGameModelPlayer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameplayKit.IGKGameModelPlayer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <summary>Returns a value identifying the <see cref="T:GameplayKit.IGKGameModelPlayer" />.</summary>
        </Docs>
        <Link Type="MonoTouch.GameplayKit.GKGameModelPlayer_Extensions" Member="M:MonoTouch.GameplayKit.GKGameModelPlayer_Extensions.GetPlayerId(MonoTouch.GameplayKit.IGKGameModelPlayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSArray" />
      </Targets>
      <Member MemberName="GetShuffledArray&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static T[] GetShuffledArray&lt;T&gt; (this Foundation.NSArray This) where T : class, ObjCRuntime.INativeObject;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T[] GetShuffledArray&lt;class (class ObjCRuntime.INativeObject) T&gt;(class Foundation.NSArray This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>T[]</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
              <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSArray" RefType="this" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameplayKit.NSArray_GameplayKit" Member="M:MonoTouch.GameplayKit.NSArray_GameplayKit.GetShuffledArray``1(MonoTouch.Foundation.NSArray)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSArray" />
      </Targets>
      <Member MemberName="GetShuffledArray&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static T[] GetShuffledArray&lt;T&gt; (this Foundation.NSArray This, GameplayKit.GKRandomSource randomSource) where T : class, ObjCRuntime.INativeObject;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T[] GetShuffledArray&lt;class (class ObjCRuntime.INativeObject) T&gt;(class Foundation.NSArray This, class GameplayKit.GKRandomSource randomSource) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>T[]</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
              <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSArray" RefType="this" />
          <Parameter Name="randomSource" Type="MonoTouch.GameplayKit.GKRandomSource" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="This">To be added.</param>
          <param name="randomSource">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameplayKit.NSArray_GameplayKit" Member="M:MonoTouch.GameplayKit.NSArray_GameplayKit.GetShuffledArray``1(MonoTouch.Foundation.NSArray,MonoTouch.GameplayKit.GKRandomSource)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SpriteKit.SKNode" />
      </Targets>
      <Member MemberName="GetEntity">
        <MemberSignature Language="C#" Value="public static GameplayKit.GKEntity GetEntity (this SpriteKit.SKNode This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class GameplayKit.GKEntity GetEntity(class SpriteKit.SKNode This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.GameplayKit.GKEntity</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SpriteKit.SKNode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameplayKit.SKNode_GameplayKit" Member="M:MonoTouch.GameplayKit.SKNode_GameplayKit.GetEntity(MonoTouch.SpriteKit.SKNode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SpriteKit.SKNode" />
      </Targets>
      <Member MemberName="SetEntity">
        <MemberSignature Language="C#" Value="public static void SetEntity (this SpriteKit.SKNode This, GameplayKit.GKEntity entity);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetEntity(class SpriteKit.SKNode This, class GameplayKit.GKEntity entity) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SpriteKit.SKNode" RefType="this" />
          <Parameter Name="entity" Type="MonoTouch.GameplayKit.GKEntity" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="entity">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameplayKit.SKNode_GameplayKit" Member="M:MonoTouch.GameplayKit.SKNode_GameplayKit.SetEntity(MonoTouch.SpriteKit.SKNode,MonoTouch.GameplayKit.GKEntity)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GLKit.IGLKViewControllerDelegate" />
      </Targets>
      <Member MemberName="WillPause">
        <MemberSignature Language="C#" Value="public static void WillPause (this GLKit.IGLKViewControllerDelegate This, GLKit.GLKViewController controller, bool pause);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillPause(class GLKit.IGLKViewControllerDelegate This, class GLKit.GLKViewController controller, bool pause) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GLKit.IGLKViewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.GLKit.GLKViewController" />
          <Parameter Name="pause" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="pause">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GLKit.GLKViewControllerDelegate_Extensions" Member="M:MonoTouch.GLKit.GLKViewControllerDelegate_Extensions.WillPause(MonoTouch.GLKit.IGLKViewControllerDelegate,MonoTouch.GLKit.GLKViewController,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HealthKit.HKDocumentTypeIdentifier" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this HealthKit.HKDocumentTypeIdentifier self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype HealthKit.HKDocumentTypeIdentifier self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.HealthKit.HKDocumentTypeIdentifier" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.HealthKit.HKDocumentTypeIdentifierExtensions" Member="M:MonoTouch.HealthKit.HKDocumentTypeIdentifierExtensions.GetConstant(MonoTouch.HealthKit.HKDocumentTypeIdentifier)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HealthKit.HKErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this HealthKit.HKErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype HealthKit.HKErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.HealthKit.HKErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.HealthKit.HKErrorCode value</summary>
        </Docs>
        <Link Type="MonoTouch.HealthKit.HKErrorCodeExtensions" Member="M:MonoTouch.HealthKit.HKErrorCodeExtensions.GetDomain(MonoTouch.HealthKit.HKErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMAccessoryBrowserDelegate" />
      </Targets>
      <Member MemberName="DidFindNewAccessory">
        <MemberSignature Language="C#" Value="public static void DidFindNewAccessory (this HomeKit.IHMAccessoryBrowserDelegate This, HomeKit.HMAccessoryBrowser browser, HomeKit.HMAccessory accessory);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFindNewAccessory(class HomeKit.IHMAccessoryBrowserDelegate This, class HomeKit.HMAccessoryBrowser browser, class HomeKit.HMAccessory accessory) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMAccessoryBrowserDelegate" RefType="this" />
          <Parameter Name="browser" Type="MonoTouch.HomeKit.HMAccessoryBrowser" />
          <Parameter Name="accessory" Type="MonoTouch.HomeKit.HMAccessory" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="browser">To be added.</param>
          <param name="accessory">To be added.</param>
          <summary>The <paramref name="browser" /> found <paramref name="accessory" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMAccessoryBrowserDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMAccessoryBrowserDelegate_Extensions.DidFindNewAccessory(MonoTouch.HomeKit.IHMAccessoryBrowserDelegate,MonoTouch.HomeKit.HMAccessoryBrowser,MonoTouch.HomeKit.HMAccessory)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMAccessoryBrowserDelegate" />
      </Targets>
      <Member MemberName="DidRemoveNewAccessory">
        <MemberSignature Language="C#" Value="public static void DidRemoveNewAccessory (this HomeKit.IHMAccessoryBrowserDelegate This, HomeKit.HMAccessoryBrowser browser, HomeKit.HMAccessory accessory);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRemoveNewAccessory(class HomeKit.IHMAccessoryBrowserDelegate This, class HomeKit.HMAccessoryBrowser browser, class HomeKit.HMAccessory accessory) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMAccessoryBrowserDelegate" RefType="this" />
          <Parameter Name="browser" Type="MonoTouch.HomeKit.HMAccessoryBrowser" />
          <Parameter Name="accessory" Type="MonoTouch.HomeKit.HMAccessory" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="browser">To be added.</param>
          <param name="accessory">To be added.</param>
          <summary>The <paramref name="browser" /> removed <paramref name="accessory" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMAccessoryBrowserDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMAccessoryBrowserDelegate_Extensions.DidRemoveNewAccessory(MonoTouch.HomeKit.IHMAccessoryBrowserDelegate,MonoTouch.HomeKit.HMAccessoryBrowser,MonoTouch.HomeKit.HMAccessory)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.HMAccessoryCategoryType" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this HomeKit.HMAccessoryCategoryType self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype HomeKit.HMAccessoryCategoryType self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.HomeKit.HMAccessoryCategoryType" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMAccessoryCategoryTypeExtensions" Member="M:MonoTouch.HomeKit.HMAccessoryCategoryTypeExtensions.GetConstant(MonoTouch.HomeKit.HMAccessoryCategoryType)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMAccessoryDelegate" />
      </Targets>
      <Member MemberName="DidAddProfile">
        <MemberSignature Language="C#" Value="public static void DidAddProfile (this HomeKit.IHMAccessoryDelegate This, HomeKit.HMAccessory accessory, HomeKit.HMAccessoryProfile profile);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAddProfile(class HomeKit.IHMAccessoryDelegate This, class HomeKit.HMAccessory accessory, class HomeKit.HMAccessoryProfile profile) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMAccessoryDelegate" RefType="this" />
          <Parameter Name="accessory" Type="MonoTouch.HomeKit.HMAccessory" />
          <Parameter Name="profile" Type="MonoTouch.HomeKit.HMAccessoryProfile" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="accessory">To be added.</param>
          <param name="profile">To be added.</param>
          <summary>Method that is called when <paramref name="profile" /> was added to <paramref name="accessory" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMAccessoryDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMAccessoryDelegate_Extensions.DidAddProfile(MonoTouch.HomeKit.IHMAccessoryDelegate,MonoTouch.HomeKit.HMAccessory,MonoTouch.HomeKit.HMAccessoryProfile)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMAccessoryDelegate" />
      </Targets>
      <Member MemberName="DidRemoveProfile">
        <MemberSignature Language="C#" Value="public static void DidRemoveProfile (this HomeKit.IHMAccessoryDelegate This, HomeKit.HMAccessory accessory, HomeKit.HMAccessoryProfile profile);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRemoveProfile(class HomeKit.IHMAccessoryDelegate This, class HomeKit.HMAccessory accessory, class HomeKit.HMAccessoryProfile profile) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMAccessoryDelegate" RefType="this" />
          <Parameter Name="accessory" Type="MonoTouch.HomeKit.HMAccessory" />
          <Parameter Name="profile" Type="MonoTouch.HomeKit.HMAccessoryProfile" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="accessory">To be added.</param>
          <param name="profile">To be added.</param>
          <summary>Method that is called when <paramref name="profile" /> was removed from <paramref name="accessory" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMAccessoryDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMAccessoryDelegate_Extensions.DidRemoveProfile(MonoTouch.HomeKit.IHMAccessoryDelegate,MonoTouch.HomeKit.HMAccessory,MonoTouch.HomeKit.HMAccessoryProfile)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMAccessoryDelegate" />
      </Targets>
      <Member MemberName="DidUpdateAssociatedServiceType">
        <MemberSignature Language="C#" Value="public static void DidUpdateAssociatedServiceType (this HomeKit.IHMAccessoryDelegate This, HomeKit.HMAccessory accessory, HomeKit.HMService service);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateAssociatedServiceType(class HomeKit.IHMAccessoryDelegate This, class HomeKit.HMAccessory accessory, class HomeKit.HMService service) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMAccessoryDelegate" RefType="this" />
          <Parameter Name="accessory" Type="MonoTouch.HomeKit.HMAccessory" />
          <Parameter Name="service" Type="MonoTouch.HomeKit.HMService" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="accessory">To be added.</param>
          <param name="service">To be added.</param>
          <summary>The <paramref name="accessory" /> updated the service type for <paramref name="service" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMAccessoryDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMAccessoryDelegate_Extensions.DidUpdateAssociatedServiceType(MonoTouch.HomeKit.IHMAccessoryDelegate,MonoTouch.HomeKit.HMAccessory,MonoTouch.HomeKit.HMService)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMAccessoryDelegate" />
      </Targets>
      <Member MemberName="DidUpdateFirmwareVersion">
        <MemberSignature Language="C#" Value="public static void DidUpdateFirmwareVersion (this HomeKit.IHMAccessoryDelegate This, HomeKit.HMAccessory accessory, string firmwareVersion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateFirmwareVersion(class HomeKit.IHMAccessoryDelegate This, class HomeKit.HMAccessory accessory, string firmwareVersion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMAccessoryDelegate" RefType="this" />
          <Parameter Name="accessory" Type="MonoTouch.HomeKit.HMAccessory" />
          <Parameter Name="firmwareVersion" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="accessory">To be added.</param>
          <param name="firmwareVersion">To be added.</param>
          <summary>Method that is called when the firmware version of <paramref name="accessory" /> is updated to <paramref name="firmwareVersion" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMAccessoryDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMAccessoryDelegate_Extensions.DidUpdateFirmwareVersion(MonoTouch.HomeKit.IHMAccessoryDelegate,MonoTouch.HomeKit.HMAccessory,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMAccessoryDelegate" />
      </Targets>
      <Member MemberName="DidUpdateName">
        <MemberSignature Language="C#" Value="public static void DidUpdateName (this HomeKit.IHMAccessoryDelegate This, HomeKit.HMAccessory accessory);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateName(class HomeKit.IHMAccessoryDelegate This, class HomeKit.HMAccessory accessory) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMAccessoryDelegate" RefType="this" />
          <Parameter Name="accessory" Type="MonoTouch.HomeKit.HMAccessory" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="accessory">To be added.</param>
          <summary>The <paramref name="accessory" /> updated its name.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMAccessoryDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMAccessoryDelegate_Extensions.DidUpdateName(MonoTouch.HomeKit.IHMAccessoryDelegate,MonoTouch.HomeKit.HMAccessory)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMAccessoryDelegate" />
      </Targets>
      <Member MemberName="DidUpdateNameForService">
        <MemberSignature Language="C#" Value="public static void DidUpdateNameForService (this HomeKit.IHMAccessoryDelegate This, HomeKit.HMAccessory accessory, HomeKit.HMService service);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateNameForService(class HomeKit.IHMAccessoryDelegate This, class HomeKit.HMAccessory accessory, class HomeKit.HMService service) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMAccessoryDelegate" RefType="this" />
          <Parameter Name="accesssory" Type="MonoTouch.HomeKit.HMAccessory" />
          <Parameter Name="service" Type="MonoTouch.HomeKit.HMService" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="accessory">To be added.</param>
          <param name="service">To be added.</param>
          <summary>The <paramref name="accessory" /> updated the name of <paramref name="service" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMAccessoryDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMAccessoryDelegate_Extensions.DidUpdateNameForService(MonoTouch.HomeKit.IHMAccessoryDelegate,MonoTouch.HomeKit.HMAccessory,MonoTouch.HomeKit.HMService)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMAccessoryDelegate" />
      </Targets>
      <Member MemberName="DidUpdateReachability">
        <MemberSignature Language="C#" Value="public static void DidUpdateReachability (this HomeKit.IHMAccessoryDelegate This, HomeKit.HMAccessory accessory);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateReachability(class HomeKit.IHMAccessoryDelegate This, class HomeKit.HMAccessory accessory) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMAccessoryDelegate" RefType="this" />
          <Parameter Name="accessory" Type="MonoTouch.HomeKit.HMAccessory" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="accessory">To be added.</param>
          <summary>Delegate method called by the system when the accessory's network visibility has changed.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMAccessoryDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMAccessoryDelegate_Extensions.DidUpdateReachability(MonoTouch.HomeKit.IHMAccessoryDelegate,MonoTouch.HomeKit.HMAccessory)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMAccessoryDelegate" />
      </Targets>
      <Member MemberName="DidUpdateServices">
        <MemberSignature Language="C#" Value="public static void DidUpdateServices (this HomeKit.IHMAccessoryDelegate This, HomeKit.HMAccessory accessory);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateServices(class HomeKit.IHMAccessoryDelegate This, class HomeKit.HMAccessory accessory) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMAccessoryDelegate" RefType="this" />
          <Parameter Name="accessory" Type="MonoTouch.HomeKit.HMAccessory" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="accessory">To be added.</param>
          <summary>The <paramref name="accessory" /> updated its services.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMAccessoryDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMAccessoryDelegate_Extensions.DidUpdateServices(MonoTouch.HomeKit.IHMAccessoryDelegate,MonoTouch.HomeKit.HMAccessory)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMAccessoryDelegate" />
      </Targets>
      <Member MemberName="DidUpdateValueForCharacteristic">
        <MemberSignature Language="C#" Value="public static void DidUpdateValueForCharacteristic (this HomeKit.IHMAccessoryDelegate This, HomeKit.HMAccessory accessory, HomeKit.HMService service, HomeKit.HMCharacteristic characteristic);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateValueForCharacteristic(class HomeKit.IHMAccessoryDelegate This, class HomeKit.HMAccessory accessory, class HomeKit.HMService service, class HomeKit.HMCharacteristic characteristic) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMAccessoryDelegate" RefType="this" />
          <Parameter Name="accessory" Type="MonoTouch.HomeKit.HMAccessory" />
          <Parameter Name="service" Type="MonoTouch.HomeKit.HMService" />
          <Parameter Name="characteristic" Type="MonoTouch.HomeKit.HMCharacteristic" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="accessory">To be added.</param>
          <param name="service">To be added.</param>
          <param name="characteristic">To be added.</param>
          <summary>The <paramref name="accessory" /> updated the value of <paramref name="characteristic" /> on <paramref name="service" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMAccessoryDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMAccessoryDelegate_Extensions.DidUpdateValueForCharacteristic(MonoTouch.HomeKit.IHMAccessoryDelegate,MonoTouch.HomeKit.HMAccessory,MonoTouch.HomeKit.HMService,MonoTouch.HomeKit.HMCharacteristic)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMCameraSnapshotControlDelegate" />
      </Targets>
      <Member MemberName="DidTakeSnapshot">
        <MemberSignature Language="C#" Value="public static void DidTakeSnapshot (this HomeKit.IHMCameraSnapshotControlDelegate This, HomeKit.HMCameraSnapshotControl cameraSnapshotControl, HomeKit.HMCameraSnapshot snapshot, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidTakeSnapshot(class HomeKit.IHMCameraSnapshotControlDelegate This, class HomeKit.HMCameraSnapshotControl cameraSnapshotControl, class HomeKit.HMCameraSnapshot snapshot, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMCameraSnapshotControlDelegate" RefType="this" />
          <Parameter Name="cameraSnapshotControl" Type="MonoTouch.HomeKit.HMCameraSnapshotControl" />
          <Parameter Name="snapshot" Type="MonoTouch.HomeKit.HMCameraSnapshot" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="cameraSnapshotControl">To be added.</param>
          <param name="snapshot">To be added.This parameter can be .</param>
          <param name="error">To be added.This parameter can be .</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMCameraSnapshotControlDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMCameraSnapshotControlDelegate_Extensions.DidTakeSnapshot(MonoTouch.HomeKit.IHMCameraSnapshotControlDelegate,MonoTouch.HomeKit.HMCameraSnapshotControl,MonoTouch.HomeKit.HMCameraSnapshot,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMCameraSnapshotControlDelegate" />
      </Targets>
      <Member MemberName="DidUpdateMostRecentSnapshot">
        <MemberSignature Language="C#" Value="public static void DidUpdateMostRecentSnapshot (this HomeKit.IHMCameraSnapshotControlDelegate This, HomeKit.HMCameraSnapshotControl cameraSnapshotControl);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateMostRecentSnapshot(class HomeKit.IHMCameraSnapshotControlDelegate This, class HomeKit.HMCameraSnapshotControl cameraSnapshotControl) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMCameraSnapshotControlDelegate" RefType="this" />
          <Parameter Name="cameraSnapshotControl" Type="MonoTouch.HomeKit.HMCameraSnapshotControl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="cameraSnapshotControl">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMCameraSnapshotControlDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMCameraSnapshotControlDelegate_Extensions.DidUpdateMostRecentSnapshot(MonoTouch.HomeKit.IHMCameraSnapshotControlDelegate,MonoTouch.HomeKit.HMCameraSnapshotControl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMCameraStreamControlDelegate" />
      </Targets>
      <Member MemberName="DidStartStream">
        <MemberSignature Language="C#" Value="public static void DidStartStream (this HomeKit.IHMCameraStreamControlDelegate This, HomeKit.HMCameraStreamControl cameraStreamControl);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidStartStream(class HomeKit.IHMCameraStreamControlDelegate This, class HomeKit.HMCameraStreamControl cameraStreamControl) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMCameraStreamControlDelegate" RefType="this" />
          <Parameter Name="cameraStreamControl" Type="MonoTouch.HomeKit.HMCameraStreamControl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="cameraStreamControl">To be added.</param>
          <summary>Called by the system when the <paramref name="cameraStreamControl" /> successfully starts the video stream.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMCameraStreamControlDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMCameraStreamControlDelegate_Extensions.DidStartStream(MonoTouch.HomeKit.IHMCameraStreamControlDelegate,MonoTouch.HomeKit.HMCameraStreamControl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMCameraStreamControlDelegate" />
      </Targets>
      <Member MemberName="DidStopStream">
        <MemberSignature Language="C#" Value="public static void DidStopStream (this HomeKit.IHMCameraStreamControlDelegate This, HomeKit.HMCameraStreamControl cameraStreamControl, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidStopStream(class HomeKit.IHMCameraStreamControlDelegate This, class HomeKit.HMCameraStreamControl cameraStreamControl, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMCameraStreamControlDelegate" RefType="this" />
          <Parameter Name="cameraStreamControl" Type="MonoTouch.HomeKit.HMCameraStreamControl" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="cameraStreamControl">To be added.</param>
          <param name="error">To be added.This parameter can be .</param>
          <summary>Called by the system when the <paramref name="cameraStreamControl" /> video stream stops.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMCameraStreamControlDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMCameraStreamControlDelegate_Extensions.DidStopStream(MonoTouch.HomeKit.IHMCameraStreamControlDelegate,MonoTouch.HomeKit.HMCameraStreamControl,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.HMCharacteristicType" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this HomeKit.HMCharacteristicType self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype HomeKit.HMCharacteristicType self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.HomeKit.HMCharacteristicType" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>Returns the constant string for the type.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMCharacteristicTypeExtensions" Member="M:MonoTouch.HomeKit.HMCharacteristicTypeExtensions.GetConstant(MonoTouch.HomeKit.HMCharacteristicType)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidAddAccessory">
        <MemberSignature Language="C#" Value="public static void DidAddAccessory (this HomeKit.IHMHomeDelegate This, HomeKit.HMHome home, HomeKit.HMAccessory accessory);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAddAccessory(class HomeKit.IHMHomeDelegate This, class HomeKit.HMHome home, class HomeKit.HMAccessory accessory) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="accessory" Type="MonoTouch.HomeKit.HMAccessory" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="accessory">To be added.</param>
          <summary>The <paramref name="accessory" /> was added to <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidAddAccessory(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMAccessory)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidAddActionSet">
        <MemberSignature Language="C#" Value="public static void DidAddActionSet (this HomeKit.IHMHomeDelegate This, HomeKit.HMHome home, HomeKit.HMActionSet actionSet);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAddActionSet(class HomeKit.IHMHomeDelegate This, class HomeKit.HMHome home, class HomeKit.HMActionSet actionSet) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="actionSet" Type="MonoTouch.HomeKit.HMActionSet" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="actionSet">To be added.</param>
          <summary>The <paramref name="actionSet" /> was added to <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidAddActionSet(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMActionSet)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidAddRoom">
        <MemberSignature Language="C#" Value="public static void DidAddRoom (this HomeKit.IHMHomeDelegate This, HomeKit.HMHome home, HomeKit.HMRoom room);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAddRoom(class HomeKit.IHMHomeDelegate This, class HomeKit.HMHome home, class HomeKit.HMRoom room) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="room" Type="MonoTouch.HomeKit.HMRoom" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="room">To be added.</param>
          <summary>The <paramref name="room" /> was added to <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidAddRoom(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMRoom)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidAddRoomToZone">
        <MemberSignature Language="C#" Value="public static void DidAddRoomToZone (this HomeKit.IHMHomeDelegate This, HomeKit.HMHome home, HomeKit.HMRoom room, HomeKit.HMZone zone);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAddRoomToZone(class HomeKit.IHMHomeDelegate This, class HomeKit.HMHome home, class HomeKit.HMRoom room, class HomeKit.HMZone zone) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="room" Type="MonoTouch.HomeKit.HMRoom" />
          <Parameter Name="zone" Type="MonoTouch.HomeKit.HMZone" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="room">To be added.</param>
          <param name="zone">To be added.</param>
          <summary>The <paramref name="room" /> was added to <paramref name="zone" />, which belongs to <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidAddRoomToZone(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMRoom,MonoTouch.HomeKit.HMZone)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidAddService">
        <MemberSignature Language="C#" Value="public static void DidAddService (this HomeKit.IHMHomeDelegate This, HomeKit.HMHome home, HomeKit.HMService service, HomeKit.HMServiceGroup group);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAddService(class HomeKit.IHMHomeDelegate This, class HomeKit.HMHome home, class HomeKit.HMService service, class HomeKit.HMServiceGroup group) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="service" Type="MonoTouch.HomeKit.HMService" />
          <Parameter Name="group" Type="MonoTouch.HomeKit.HMServiceGroup" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="service">To be added.</param>
          <param name="group">To be added.</param>
          <summary>The <paramref name="service" /> was added to <paramref name="group" />, which belongs to <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidAddService(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMService,MonoTouch.HomeKit.HMServiceGroup)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidAddServiceGroup">
        <MemberSignature Language="C#" Value="public static void DidAddServiceGroup (this HomeKit.IHMHomeDelegate This, HomeKit.HMHome home, HomeKit.HMServiceGroup group);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAddServiceGroup(class HomeKit.IHMHomeDelegate This, class HomeKit.HMHome home, class HomeKit.HMServiceGroup group) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="serviceGroup" Type="MonoTouch.HomeKit.HMServiceGroup" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="group">To be added.</param>
          <summary>The <paramref name="group" /> was added to <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidAddServiceGroup(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMServiceGroup)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidAddTrigger">
        <MemberSignature Language="C#" Value="public static void DidAddTrigger (this HomeKit.IHMHomeDelegate This, HomeKit.HMHome home, HomeKit.HMTrigger trigger);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAddTrigger(class HomeKit.IHMHomeDelegate This, class HomeKit.HMHome home, class HomeKit.HMTrigger trigger) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="trigger" Type="MonoTouch.HomeKit.HMTrigger" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="trigger">To be added.</param>
          <summary>The <paramref name="trigger" /> was added to <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidAddTrigger(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMTrigger)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidAddUser">
        <MemberSignature Language="C#" Value="public static void DidAddUser (this HomeKit.IHMHomeDelegate This, HomeKit.HMHome home, HomeKit.HMUser user);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAddUser(class HomeKit.IHMHomeDelegate This, class HomeKit.HMHome home, class HomeKit.HMUser user) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="user" Type="MonoTouch.HomeKit.HMUser" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="user">To be added.</param>
          <summary>The <paramref name="user" /> was added to <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidAddUser(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMUser)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidAddZone">
        <MemberSignature Language="C#" Value="public static void DidAddZone (this HomeKit.IHMHomeDelegate This, HomeKit.HMHome home, HomeKit.HMZone zone);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAddZone(class HomeKit.IHMHomeDelegate This, class HomeKit.HMHome home, class HomeKit.HMZone zone) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="zone" Type="MonoTouch.HomeKit.HMZone" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="zone">To be added.</param>
          <summary>The <paramref name="zone" /> was added to <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidAddZone(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMZone)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidEncounterError">
        <MemberSignature Language="C#" Value="public static void DidEncounterError (this HomeKit.IHMHomeDelegate This, HomeKit.HMHome home, Foundation.NSError error, HomeKit.HMAccessory accessory);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidEncounterError(class HomeKit.IHMHomeDelegate This, class HomeKit.HMHome home, class Foundation.NSError error, class HomeKit.HMAccessory accessory) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
          <Parameter Name="accessory" Type="MonoTouch.HomeKit.HMAccessory" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="error">To be added.</param>
          <param name="accessory">To be added.</param>
          <summary>The <paramref name="error" /> occurred in <paramref name="accessory" />, which belongs to <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidEncounterError(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.Foundation.NSError,MonoTouch.HomeKit.HMAccessory)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidRemoveAccessory">
        <MemberSignature Language="C#" Value="public static void DidRemoveAccessory (this HomeKit.IHMHomeDelegate This, HomeKit.HMHome home, HomeKit.HMAccessory accessory);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRemoveAccessory(class HomeKit.IHMHomeDelegate This, class HomeKit.HMHome home, class HomeKit.HMAccessory accessory) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="accessory" Type="MonoTouch.HomeKit.HMAccessory" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="accessory">To be added.</param>
          <summary>The <paramref name="accessory" /> was removed from <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidRemoveAccessory(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMAccessory)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidRemoveActionSet">
        <MemberSignature Language="C#" Value="public static void DidRemoveActionSet (this HomeKit.IHMHomeDelegate This, HomeKit.HMHome home, HomeKit.HMActionSet actionSet);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRemoveActionSet(class HomeKit.IHMHomeDelegate This, class HomeKit.HMHome home, class HomeKit.HMActionSet actionSet) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="actionSet" Type="MonoTouch.HomeKit.HMActionSet" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="actionSet">To be added.</param>
          <summary>The <paramref name="actionSet" /> was removed from <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidRemoveActionSet(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMActionSet)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidRemoveRoom">
        <MemberSignature Language="C#" Value="public static void DidRemoveRoom (this HomeKit.IHMHomeDelegate This, HomeKit.HMHome home, HomeKit.HMRoom room);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRemoveRoom(class HomeKit.IHMHomeDelegate This, class HomeKit.HMHome home, class HomeKit.HMRoom room) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="room" Type="MonoTouch.HomeKit.HMRoom" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="room">To be added.</param>
          <summary>The <paramref name="room" /> was removed from <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidRemoveRoom(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMRoom)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidRemoveRoomFromZone">
        <MemberSignature Language="C#" Value="public static void DidRemoveRoomFromZone (this HomeKit.IHMHomeDelegate This, HomeKit.HMHome home, HomeKit.HMRoom room, HomeKit.HMZone zone);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRemoveRoomFromZone(class HomeKit.IHMHomeDelegate This, class HomeKit.HMHome home, class HomeKit.HMRoom room, class HomeKit.HMZone zone) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="room" Type="MonoTouch.HomeKit.HMRoom" />
          <Parameter Name="zone" Type="MonoTouch.HomeKit.HMZone" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="room">To be added.</param>
          <param name="zone">To be added.</param>
          <summary>The <paramref name="room" /> was removed from <paramref name="zone" />, which belongs to <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidRemoveRoomFromZone(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMRoom,MonoTouch.HomeKit.HMZone)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidRemoveService">
        <MemberSignature Language="C#" Value="public static void DidRemoveService (this HomeKit.IHMHomeDelegate This, HomeKit.HMHome home, HomeKit.HMService service, HomeKit.HMServiceGroup group);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRemoveService(class HomeKit.IHMHomeDelegate This, class HomeKit.HMHome home, class HomeKit.HMService service, class HomeKit.HMServiceGroup group) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="service" Type="MonoTouch.HomeKit.HMService" />
          <Parameter Name="group" Type="MonoTouch.HomeKit.HMServiceGroup" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="service">To be added.</param>
          <param name="group">To be added.</param>
          <summary>The <paramref name="service" /> was removed from <paramref name="group" />, which belongs to <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidRemoveService(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMService,MonoTouch.HomeKit.HMServiceGroup)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidRemoveServiceGroup">
        <MemberSignature Language="C#" Value="public static void DidRemoveServiceGroup (this HomeKit.IHMHomeDelegate This, HomeKit.HMHome home, HomeKit.HMServiceGroup group);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRemoveServiceGroup(class HomeKit.IHMHomeDelegate This, class HomeKit.HMHome home, class HomeKit.HMServiceGroup group) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="serviceGroup" Type="MonoTouch.HomeKit.HMServiceGroup" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="group">To be added.</param>
          <summary>The <paramref name="service" /> was removed from <paramref name="group" />, which belongs to <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidRemoveServiceGroup(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMServiceGroup)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidRemoveTrigger">
        <MemberSignature Language="C#" Value="public static void DidRemoveTrigger (this HomeKit.IHMHomeDelegate This, HomeKit.HMHome home, HomeKit.HMTrigger trigger);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRemoveTrigger(class HomeKit.IHMHomeDelegate This, class HomeKit.HMHome home, class HomeKit.HMTrigger trigger) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="trigger" Type="MonoTouch.HomeKit.HMTrigger" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="trigger">To be added.</param>
          <summary>The <paramref name="trigger" /> was removed from <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidRemoveTrigger(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMTrigger)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidRemoveUser">
        <MemberSignature Language="C#" Value="public static void DidRemoveUser (this HomeKit.IHMHomeDelegate This, HomeKit.HMHome home, HomeKit.HMUser user);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRemoveUser(class HomeKit.IHMHomeDelegate This, class HomeKit.HMHome home, class HomeKit.HMUser user) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="user" Type="MonoTouch.HomeKit.HMUser" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="user">To be added.</param>
          <summary>The <paramref name="user" /> was removed from <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidRemoveUser(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMUser)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidRemoveZone">
        <MemberSignature Language="C#" Value="public static void DidRemoveZone (this HomeKit.IHMHomeDelegate This, HomeKit.HMHome home, HomeKit.HMZone zone);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRemoveZone(class HomeKit.IHMHomeDelegate This, class HomeKit.HMHome home, class HomeKit.HMZone zone) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="zone" Type="MonoTouch.HomeKit.HMZone" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="zone">To be added.</param>
          <summary>The <paramref name="zone" /> was removed from <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidRemoveZone(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMZone)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidUnblockAccessory">
        <MemberSignature Language="C#" Value="public static void DidUnblockAccessory (this HomeKit.IHMHomeDelegate This, HomeKit.HMHome home, HomeKit.HMAccessory accessory);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUnblockAccessory(class HomeKit.IHMHomeDelegate This, class HomeKit.HMHome home, class HomeKit.HMAccessory accessory) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="accessory" Type="MonoTouch.HomeKit.HMAccessory" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="accessory">To be added.</param>
          <summary>The <paramref name="accessory" />, which belongs to <paramref name="home" />, was unblocked.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidUnblockAccessory(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMAccessory)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidUpdateAccessControlForCurrentUser">
        <MemberSignature Language="C#" Value="public static void DidUpdateAccessControlForCurrentUser (this HomeKit.IHMHomeDelegate This, HomeKit.HMHome home);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateAccessControlForCurrentUser(class HomeKit.IHMHomeDelegate This, class HomeKit.HMHome home) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidUpdateAccessControlForCurrentUser(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidUpdateActionsForActionSet">
        <MemberSignature Language="C#" Value="public static void DidUpdateActionsForActionSet (this HomeKit.IHMHomeDelegate This, HomeKit.HMHome home, HomeKit.HMActionSet actionSet);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateActionsForActionSet(class HomeKit.IHMHomeDelegate This, class HomeKit.HMHome home, class HomeKit.HMActionSet actionSet) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="actionSet" Type="MonoTouch.HomeKit.HMActionSet" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="actionSet">To be added.</param>
          <summary>The an action in <paramref name="actionSet" />, which belongs to <paramref name="home" />, was updated.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidUpdateActionsForActionSet(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMActionSet)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidUpdateHomeHubState">
        <MemberSignature Language="C#" Value="public static void DidUpdateHomeHubState (this HomeKit.IHMHomeDelegate This, HomeKit.HMHome home, HomeKit.HMHomeHubState homeHubState);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateHomeHubState(class HomeKit.IHMHomeDelegate This, class HomeKit.HMHome home, valuetype HomeKit.HMHomeHubState homeHubState) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="homeHubState" Type="MonoTouch.HomeKit.HMHomeHubState" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="homeHubState">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidUpdateHomeHubState(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMHomeHubState)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidUpdateNameForActionSet">
        <MemberSignature Language="C#" Value="public static void DidUpdateNameForActionSet (this HomeKit.IHMHomeDelegate This, HomeKit.HMHome home, HomeKit.HMActionSet actionSet);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateNameForActionSet(class HomeKit.IHMHomeDelegate This, class HomeKit.HMHome home, class HomeKit.HMActionSet actionSet) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="actionSet" Type="MonoTouch.HomeKit.HMActionSet" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="actionSet">To be added.</param>
          <summary>The name of the <paramref name="actionSet" />, which belongs to <paramref name="home" />, was updated.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidUpdateNameForActionSet(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMActionSet)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidUpdateNameForHome">
        <MemberSignature Language="C#" Value="public static void DidUpdateNameForHome (this HomeKit.IHMHomeDelegate This, HomeKit.HMHome home);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateNameForHome(class HomeKit.IHMHomeDelegate This, class HomeKit.HMHome home) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <summary>The name of the <paramref name="home" /> was updated.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidUpdateNameForHome(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidUpdateNameForRoom">
        <MemberSignature Language="C#" Value="public static void DidUpdateNameForRoom (this HomeKit.IHMHomeDelegate This, HomeKit.HMHome home, HomeKit.HMRoom room);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateNameForRoom(class HomeKit.IHMHomeDelegate This, class HomeKit.HMHome home, class HomeKit.HMRoom room) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="room" Type="MonoTouch.HomeKit.HMRoom" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="room">To be added.</param>
          <summary>The name of the <paramref name="room" />, which belongs to <paramref name="home" />, was updated.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidUpdateNameForRoom(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMRoom)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidUpdateNameForServiceGroup">
        <MemberSignature Language="C#" Value="public static void DidUpdateNameForServiceGroup (this HomeKit.IHMHomeDelegate This, HomeKit.HMHome home, HomeKit.HMServiceGroup group);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateNameForServiceGroup(class HomeKit.IHMHomeDelegate This, class HomeKit.HMHome home, class HomeKit.HMServiceGroup group) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="serviceGroup" Type="MonoTouch.HomeKit.HMServiceGroup" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="group">To be added.</param>
          <summary>The name of the <paramref name="group" />, which belongs to <paramref name="home" />, was updated.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidUpdateNameForServiceGroup(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMServiceGroup)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidUpdateNameForTrigger">
        <MemberSignature Language="C#" Value="public static void DidUpdateNameForTrigger (this HomeKit.IHMHomeDelegate This, HomeKit.HMHome home, HomeKit.HMTrigger trigger);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateNameForTrigger(class HomeKit.IHMHomeDelegate This, class HomeKit.HMHome home, class HomeKit.HMTrigger trigger) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="trigger" Type="MonoTouch.HomeKit.HMTrigger" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="trigger">To be added.</param>
          <summary>The name of the <paramref name="trigger" />, which belongs to <paramref name="home" />, was updated.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidUpdateNameForTrigger(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMTrigger)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidUpdateNameForZone">
        <MemberSignature Language="C#" Value="public static void DidUpdateNameForZone (this HomeKit.IHMHomeDelegate This, HomeKit.HMHome home, HomeKit.HMZone zone);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateNameForZone(class HomeKit.IHMHomeDelegate This, class HomeKit.HMHome home, class HomeKit.HMZone zone) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="zone" Type="MonoTouch.HomeKit.HMZone" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="zone">To be added.</param>
          <summary>The name of the <paramref name="zone" />, which belongs to <paramref name="home" />, was updated.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidUpdateNameForZone(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMZone)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidUpdateRoom">
        <MemberSignature Language="C#" Value="public static void DidUpdateRoom (this HomeKit.IHMHomeDelegate This, HomeKit.HMHome home, HomeKit.HMRoom room, HomeKit.HMAccessory accessory);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateRoom(class HomeKit.IHMHomeDelegate This, class HomeKit.HMHome home, class HomeKit.HMRoom room, class HomeKit.HMAccessory accessory) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="room" Type="MonoTouch.HomeKit.HMRoom" />
          <Parameter Name="accessory" Type="MonoTouch.HomeKit.HMAccessory" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="room">To be added.</param>
          <param name="accessory">To be added.</param>
          <summary>The <paramref name="accessory" /> was assigned to <paramref name="room" />, which belongs to <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidUpdateRoom(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMRoom,MonoTouch.HomeKit.HMAccessory)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidUpdateTrigger">
        <MemberSignature Language="C#" Value="public static void DidUpdateTrigger (this HomeKit.IHMHomeDelegate This, HomeKit.HMHome home, HomeKit.HMTrigger trigger);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateTrigger(class HomeKit.IHMHomeDelegate This, class HomeKit.HMHome home, class HomeKit.HMTrigger trigger) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="trigger" Type="MonoTouch.HomeKit.HMTrigger" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="trigger">To be added.</param>
          <summary>The  <paramref name="trigger" />, which belongs to <paramref name="home" />, was updated.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidUpdateTrigger(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMTrigger)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeManagerDelegate" />
      </Targets>
      <Member MemberName="DidAddHome">
        <MemberSignature Language="C#" Value="public static void DidAddHome (this HomeKit.IHMHomeManagerDelegate This, HomeKit.HMHomeManager manager, HomeKit.HMHome home);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAddHome(class HomeKit.IHMHomeManagerDelegate This, class HomeKit.HMHomeManager manager, class HomeKit.HMHome home) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.HomeKit.HMHomeManager" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">To be added.</param>
          <param name="home">To be added.</param>
          <summary>The <paramref name="home" /> was added to <paramref name="manager" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeManagerDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeManagerDelegate_Extensions.DidAddHome(MonoTouch.HomeKit.IHMHomeManagerDelegate,MonoTouch.HomeKit.HMHomeManager,MonoTouch.HomeKit.HMHome)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeManagerDelegate" />
      </Targets>
      <Member MemberName="DidRemoveHome">
        <MemberSignature Language="C#" Value="public static void DidRemoveHome (this HomeKit.IHMHomeManagerDelegate This, HomeKit.HMHomeManager manager, HomeKit.HMHome home);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRemoveHome(class HomeKit.IHMHomeManagerDelegate This, class HomeKit.HMHomeManager manager, class HomeKit.HMHome home) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.HomeKit.HMHomeManager" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">To be added.</param>
          <param name="home">To be added.</param>
          <summary>The <paramref name="home" /> was removed from <paramref name="manager" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeManagerDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeManagerDelegate_Extensions.DidRemoveHome(MonoTouch.HomeKit.IHMHomeManagerDelegate,MonoTouch.HomeKit.HMHomeManager,MonoTouch.HomeKit.HMHome)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeManagerDelegate" />
      </Targets>
      <Member MemberName="DidUpdateHomes">
        <MemberSignature Language="C#" Value="public static void DidUpdateHomes (this HomeKit.IHMHomeManagerDelegate This, HomeKit.HMHomeManager manager);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateHomes(class HomeKit.IHMHomeManagerDelegate This, class HomeKit.HMHomeManager manager) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.HomeKit.HMHomeManager" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">To be added.</param>
          <summary>A home in <paramref name="manager" /> was updated.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeManagerDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeManagerDelegate_Extensions.DidUpdateHomes(MonoTouch.HomeKit.IHMHomeManagerDelegate,MonoTouch.HomeKit.HMHomeManager)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeManagerDelegate" />
      </Targets>
      <Member MemberName="DidUpdatePrimaryHome">
        <MemberSignature Language="C#" Value="public static void DidUpdatePrimaryHome (this HomeKit.IHMHomeManagerDelegate This, HomeKit.HMHomeManager manager);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdatePrimaryHome(class HomeKit.IHMHomeManagerDelegate This, class HomeKit.HMHomeManager manager) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.HomeKit.HMHomeManager" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">To be added.</param>
          <summary>The primary home in <paramref name="manager" /> was updated.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeManagerDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeManagerDelegate_Extensions.DidUpdatePrimaryHome(MonoTouch.HomeKit.IHMHomeManagerDelegate,MonoTouch.HomeKit.HMHomeManager)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.HMServiceType" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this HomeKit.HMServiceType self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype HomeKit.HMServiceType self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.HomeKit.HMServiceType" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>Returns the constant string for the type.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMServiceTypeExtensions" Member="M:MonoTouch.HomeKit.HMServiceTypeExtensions.GetConstant(MonoTouch.HomeKit.HMServiceType)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.HMSignificantEvent" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this HomeKit.HMSignificantEvent self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype HomeKit.HMSignificantEvent self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.HomeKit.HMSignificantEvent" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>Returns the constant string for the type.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMSignificantEventExtensions" Member="M:MonoTouch.HomeKit.HMSignificantEventExtensions.GetConstant(MonoTouch.HomeKit.HMSignificantEvent)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.iAd.IADBannerViewDelegate" />
      </Targets>
      <Member MemberName="ActionFinished">
        <MemberSignature Language="C#" Value="public static void ActionFinished (this iAd.IADBannerViewDelegate This, iAd.ADBannerView banner);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ActionFinished(class iAd.IADBannerViewDelegate This, class iAd.ADBannerView banner) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.iAd.IADBannerViewDelegate" RefType="this" />
          <Parameter Name="banner" Type="MonoTouch.iAd.ADBannerView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="banner">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.ADBannerViewDelegate_Extensions" Member="M:MonoTouch.iAd.ADBannerViewDelegate_Extensions.ActionFinished(MonoTouch.iAd.IADBannerViewDelegate,MonoTouch.iAd.ADBannerView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.iAd.IADBannerViewDelegate" />
      </Targets>
      <Member MemberName="ActionShouldBegin">
        <MemberSignature Language="C#" Value="public static bool ActionShouldBegin (this iAd.IADBannerViewDelegate This, iAd.ADBannerView banner, bool willLeaveApplication);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ActionShouldBegin(class iAd.IADBannerViewDelegate This, class iAd.ADBannerView banner, bool willLeaveApplication) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.iAd.IADBannerViewDelegate" RefType="this" />
          <Parameter Name="banner" Type="MonoTouch.iAd.ADBannerView" />
          <Parameter Name="willLeaveApplication" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="banner">To be added.</param>
          <param name="willLeaveApplication">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.ADBannerViewDelegate_Extensions" Member="M:MonoTouch.iAd.ADBannerViewDelegate_Extensions.ActionShouldBegin(MonoTouch.iAd.IADBannerViewDelegate,MonoTouch.iAd.ADBannerView,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.iAd.IADBannerViewDelegate" />
      </Targets>
      <Member MemberName="AdLoaded">
        <MemberSignature Language="C#" Value="public static void AdLoaded (this iAd.IADBannerViewDelegate This, iAd.ADBannerView banner);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AdLoaded(class iAd.IADBannerViewDelegate This, class iAd.ADBannerView banner) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.iAd.IADBannerViewDelegate" RefType="this" />
          <Parameter Name="banner" Type="MonoTouch.iAd.ADBannerView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="banner">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.ADBannerViewDelegate_Extensions" Member="M:MonoTouch.iAd.ADBannerViewDelegate_Extensions.AdLoaded(MonoTouch.iAd.IADBannerViewDelegate,MonoTouch.iAd.ADBannerView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.iAd.IADBannerViewDelegate" />
      </Targets>
      <Member MemberName="FailedToReceiveAd">
        <MemberSignature Language="C#" Value="public static void FailedToReceiveAd (this iAd.IADBannerViewDelegate This, iAd.ADBannerView banner, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FailedToReceiveAd(class iAd.IADBannerViewDelegate This, class iAd.ADBannerView banner, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.iAd.IADBannerViewDelegate" RefType="this" />
          <Parameter Name="banner" Type="MonoTouch.iAd.ADBannerView" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="banner">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.ADBannerViewDelegate_Extensions" Member="M:MonoTouch.iAd.ADBannerViewDelegate_Extensions.FailedToReceiveAd(MonoTouch.iAd.IADBannerViewDelegate,MonoTouch.iAd.ADBannerView,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.iAd.IADBannerViewDelegate" />
      </Targets>
      <Member MemberName="WillLoad">
        <MemberSignature Language="C#" Value="public static void WillLoad (this iAd.IADBannerViewDelegate This, iAd.ADBannerView bannerView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillLoad(class iAd.IADBannerViewDelegate This, class iAd.ADBannerView bannerView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.iAd.IADBannerViewDelegate" RefType="this" />
          <Parameter Name="bannerView" Type="MonoTouch.iAd.ADBannerView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="bannerView">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.ADBannerViewDelegate_Extensions" Member="M:MonoTouch.iAd.ADBannerViewDelegate_Extensions.WillLoad(MonoTouch.iAd.IADBannerViewDelegate,MonoTouch.iAd.ADBannerView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.iAd.ADClientError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this iAd.ADClientError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype iAd.ADClientError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.iAd.ADClientError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.iAd.ADClientError value</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.ADClientErrorExtensions" Member="M:MonoTouch.iAd.ADClientErrorExtensions.GetDomain(MonoTouch.iAd.ADClientError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.iAd.ADError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this iAd.ADError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype iAd.ADError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.iAd.ADError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.iAd.ADError value</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.ADErrorExtensions" Member="M:MonoTouch.iAd.ADErrorExtensions.GetDomain(MonoTouch.iAd.ADError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.iAd.IADInterstitialAdDelegate" />
      </Targets>
      <Member MemberName="WillLoad">
        <MemberSignature Language="C#" Value="public static void WillLoad (this iAd.IADInterstitialAdDelegate This, iAd.ADInterstitialAd interstitialAd);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillLoad(class iAd.IADInterstitialAdDelegate This, class iAd.ADInterstitialAd interstitialAd) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.iAd.IADInterstitialAdDelegate" RefType="this" />
          <Parameter Name="interstitialAd" Type="MonoTouch.iAd.ADInterstitialAd" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="interstitialAd">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.ADInterstitialAdDelegate_Extensions" Member="M:MonoTouch.iAd.ADInterstitialAdDelegate_Extensions.WillLoad(MonoTouch.iAd.IADInterstitialAdDelegate,MonoTouch.iAd.ADInterstitialAd)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIViewController" />
      </Targets>
      <Member MemberName="DisplayingBannerAd">
        <MemberSignature Language="C#" Value="public static bool DisplayingBannerAd (this UIKit.UIViewController This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DisplayingBannerAd(class UIKit.UIViewController This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UIViewController" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.IAdAdditions" Member="M:MonoTouch.iAd.IAdAdditions.DisplayingBannerAd(MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIViewController" />
      </Targets>
      <Member MemberName="GetCanDisplayBannerAds">
        <MemberSignature Language="C#" Value="public static bool GetCanDisplayBannerAds (this UIKit.UIViewController This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetCanDisplayBannerAds(class UIKit.UIViewController This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UIViewController" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.IAdAdditions" Member="M:MonoTouch.iAd.IAdAdditions.GetCanDisplayBannerAds(MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIViewController" />
      </Targets>
      <Member MemberName="GetInterstitialPresentationPolicy">
        <MemberSignature Language="C#" Value="public static iAd.ADInterstitialPresentationPolicy GetInterstitialPresentationPolicy (this UIKit.UIViewController This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype iAd.ADInterstitialPresentationPolicy GetInterstitialPresentationPolicy(class UIKit.UIViewController This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.iAd.ADInterstitialPresentationPolicy</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UIViewController" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.IAdAdditions" Member="M:MonoTouch.iAd.IAdAdditions.GetInterstitialPresentationPolicy(MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIViewController" />
      </Targets>
      <Member MemberName="GetOriginalContentView">
        <MemberSignature Language="C#" Value="public static UIKit.UIView GetOriginalContentView (this UIKit.UIViewController This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIView GetOriginalContentView(class UIKit.UIViewController This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIView</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UIViewController" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.IAdAdditions" Member="M:MonoTouch.iAd.IAdAdditions.GetOriginalContentView(MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIViewController" />
      </Targets>
      <Member MemberName="PresentingFullScreenAd">
        <MemberSignature Language="C#" Value="public static bool PresentingFullScreenAd (this UIKit.UIViewController This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool PresentingFullScreenAd(class UIKit.UIViewController This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UIViewController" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.IAdAdditions" Member="M:MonoTouch.iAd.IAdAdditions.PresentingFullScreenAd(MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIViewController" />
      </Targets>
      <Member MemberName="RequestInterstitialAdPresentation">
        <MemberSignature Language="C#" Value="public static bool RequestInterstitialAdPresentation (this UIKit.UIViewController This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool RequestInterstitialAdPresentation(class UIKit.UIViewController This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UIViewController" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.IAdAdditions" Member="M:MonoTouch.iAd.IAdAdditions.RequestInterstitialAdPresentation(MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIViewController" />
      </Targets>
      <Member MemberName="SetCanDisplayBannerAds">
        <MemberSignature Language="C#" Value="public static void SetCanDisplayBannerAds (this UIKit.UIViewController This, bool value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCanDisplayBannerAds(class UIKit.UIViewController This, bool value) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UIViewController" RefType="this" />
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="value">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.IAdAdditions" Member="M:MonoTouch.iAd.IAdAdditions.SetCanDisplayBannerAds(MonoTouch.UIKit.UIViewController,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIViewController" />
      </Targets>
      <Member MemberName="SetInterstitialPresentationPolicy">
        <MemberSignature Language="C#" Value="public static void SetInterstitialPresentationPolicy (this UIKit.UIViewController This, iAd.ADInterstitialPresentationPolicy policy);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetInterstitialPresentationPolicy(class UIKit.UIViewController This, valuetype iAd.ADInterstitialPresentationPolicy policy) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UIViewController" RefType="this" />
          <Parameter Name="policy" Type="MonoTouch.iAd.ADInterstitialPresentationPolicy" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="policy">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.IAdAdditions" Member="M:MonoTouch.iAd.IAdAdditions.SetInterstitialPresentationPolicy(MonoTouch.UIKit.UIViewController,MonoTouch.iAd.ADInterstitialPresentationPolicy)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIViewController" />
      </Targets>
      <Member MemberName="ShouldPresentInterstitialAd">
        <MemberSignature Language="C#" Value="public static bool ShouldPresentInterstitialAd (this UIKit.UIViewController This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldPresentInterstitialAd(class UIKit.UIViewController This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UIViewController" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.IAdAdditions" Member="M:MonoTouch.iAd.IAdAdditions.ShouldPresentInterstitialAd(MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MediaPlayer.MPMoviePlayerController" />
      </Targets>
      <Member MemberName="CancelPreroll">
        <MemberSignature Language="C#" Value="public static void CancelPreroll (this MediaPlayer.MPMoviePlayerController This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CancelPreroll(class MediaPlayer.MPMoviePlayerController This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MediaPlayer.MPMoviePlayerController" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.IAdPreroll" Member="M:MonoTouch.iAd.IAdPreroll.CancelPreroll(MonoTouch.MediaPlayer.MPMoviePlayerController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MediaPlayer.MPMoviePlayerController" />
      </Targets>
      <Member MemberName="PlayPrerollAd">
        <MemberSignature Language="C#" Value="public static void PlayPrerollAd (this MediaPlayer.MPMoviePlayerController This, Action&lt;Foundation.NSError&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PlayPrerollAd(class MediaPlayer.MPMoviePlayerController This, class System.Action`1&lt;class Foundation.NSError&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MediaPlayer.MPMoviePlayerController" RefType="this" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSError&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V6))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.IAdPreroll" Member="M:MonoTouch.iAd.IAdPreroll.PlayPrerollAd(MonoTouch.MediaPlayer.MPMoviePlayerController,System.Action{MonoTouch.Foundation.NSError})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVKit.AVPlayerViewController" />
      </Targets>
      <Member MemberName="CancelPreroll">
        <MemberSignature Language="C#" Value="public static void CancelPreroll (this AVKit.AVPlayerViewController This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CancelPreroll(class AVKit.AVPlayerViewController This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVKit.AVPlayerViewController" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.iAdPreroll_AVPlayerViewController" Member="M:MonoTouch.iAd.iAdPreroll_AVPlayerViewController.CancelPreroll(MonoTouch.AVKit.AVPlayerViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVKit.AVPlayerViewController" />
      </Targets>
      <Member MemberName="PlayPrerollAd">
        <MemberSignature Language="C#" Value="public static void PlayPrerollAd (this AVKit.AVPlayerViewController This, Action&lt;Foundation.NSError&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PlayPrerollAd(class AVKit.AVPlayerViewController This, class System.Action`1&lt;class Foundation.NSError&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVKit.AVPlayerViewController" RefType="this" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSError&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V0))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.iAdPreroll_AVPlayerViewController" Member="M:MonoTouch.iAd.iAdPreroll_AVPlayerViewController.PlayPrerollAd(MonoTouch.AVKit.AVPlayerViewController,System.Action{MonoTouch.Foundation.NSError})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.IdentityLookup.ILMessageFilterError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this IdentityLookup.ILMessageFilterError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype IdentityLookup.ILMessageFilterError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.IdentityLookup.ILMessageFilterError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>Returns the domain for the error.</summary>
        </Docs>
        <Link Type="MonoTouch.IdentityLookup.ILMessageFilterErrorExtensions" Member="M:MonoTouch.IdentityLookup.ILMessageFilterErrorExtensions.GetDomain(MonoTouch.IdentityLookup.ILMessageFilterError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ImageIO.CGImageAuxiliaryDataType" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this ImageIO.CGImageAuxiliaryDataType self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype ImageIO.CGImageAuxiliaryDataType self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.ImageIO.CGImageAuxiliaryDataType" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ImageIO.CGImageAuxiliaryDataTypeExtensions" Member="M:MonoTouch.ImageIO.CGImageAuxiliaryDataTypeExtensions.GetConstant(MonoTouch.ImageIO.CGImageAuxiliaryDataType)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ImageIO.CGImageMetadataErrors" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this ImageIO.CGImageMetadataErrors self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype ImageIO.CGImageMetadataErrors self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.ImageIO.CGImageMetadataErrors" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.ImageIO.CGImageMetadataErrors value</summary>
        </Docs>
        <Link Type="MonoTouch.ImageIO.CGImageMetadataErrorsExtensions" Member="M:MonoTouch.ImageIO.CGImageMetadataErrorsExtensions.GetDomain(MonoTouch.ImageIO.CGImageMetadataErrors)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINActivateCarSignalIntentHandling" />
      </Targets>
      <Member MemberName="ConfirmActivateCarSignal">
        <MemberSignature Language="C#" Value="public static void ConfirmActivateCarSignal (this Intents.IINActivateCarSignalIntentHandling This, Intents.INActivateCarSignalIntent intent, Action&lt;Intents.INActivateCarSignalIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfirmActivateCarSignal(class Intents.IINActivateCarSignalIntentHandling This, class Intents.INActivateCarSignalIntent intent, class System.Action`1&lt;class Intents.INActivateCarSignalIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINActivateCarSignalIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INActivateCarSignalIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INActivateCarSignalIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V41))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to confirm whether the car's signals may be activated.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INActivateCarSignalIntentHandling_Extensions" Member="M:MonoTouch.Intents.INActivateCarSignalIntentHandling_Extensions.ConfirmActivateCarSignal(MonoTouch.Intents.IINActivateCarSignalIntentHandling,MonoTouch.Intents.INActivateCarSignalIntent,System.Action{MonoTouch.Intents.INActivateCarSignalIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINActivateCarSignalIntentHandling" />
      </Targets>
      <Member MemberName="ResolveCarName">
        <MemberSignature Language="C#" Value="public static void ResolveCarName (this Intents.IINActivateCarSignalIntentHandling This, Intents.INActivateCarSignalIntent intent, Action&lt;Intents.INSpeakableStringResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveCarName(class Intents.IINActivateCarSignalIntentHandling This, class Intents.INActivateCarSignalIntent intent, class System.Action`1&lt;class Intents.INSpeakableStringResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINActivateCarSignalIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INActivateCarSignalIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSpeakableStringResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V42))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to resolve the car's name.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INActivateCarSignalIntentHandling_Extensions" Member="M:MonoTouch.Intents.INActivateCarSignalIntentHandling_Extensions.ResolveCarName(MonoTouch.Intents.IINActivateCarSignalIntentHandling,MonoTouch.Intents.INActivateCarSignalIntent,System.Action{MonoTouch.Intents.INSpeakableStringResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINActivateCarSignalIntentHandling" />
      </Targets>
      <Member MemberName="ResolveSignals">
        <MemberSignature Language="C#" Value="public static void ResolveSignals (this Intents.IINActivateCarSignalIntentHandling This, Intents.INActivateCarSignalIntent intent, Action&lt;Intents.INCarSignalOptionsResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveSignals(class Intents.IINActivateCarSignalIntentHandling This, class Intents.INActivateCarSignalIntent intent, class System.Action`1&lt;class Intents.INCarSignalOptionsResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINActivateCarSignalIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INActivateCarSignalIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INCarSignalOptionsResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V43))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to resolve the requested signals by type.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INActivateCarSignalIntentHandling_Extensions" Member="M:MonoTouch.Intents.INActivateCarSignalIntentHandling_Extensions.ResolveSignals(MonoTouch.Intents.IINActivateCarSignalIntentHandling,MonoTouch.Intents.INActivateCarSignalIntent,System.Action{MonoTouch.Intents.INCarSignalOptionsResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINAddTasksIntentHandling" />
      </Targets>
      <Member MemberName="Confirm">
        <MemberSignature Language="C#" Value="public static void Confirm (this Intents.IINAddTasksIntentHandling This, Intents.INAddTasksIntent intent, Action&lt;Intents.INAddTasksIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Confirm(class Intents.IINAddTasksIntentHandling This, class Intents.INAddTasksIntent intent, class System.Action`1&lt;class Intents.INAddTasksIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINAddTasksIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INAddTasksIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INAddTasksIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V47))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to confirm whether local and remote resources are ready to add the task.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INAddTasksIntentHandling_Extensions" Member="M:MonoTouch.Intents.INAddTasksIntentHandling_Extensions.Confirm(MonoTouch.Intents.IINAddTasksIntentHandling,MonoTouch.Intents.INAddTasksIntent,System.Action{MonoTouch.Intents.INAddTasksIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINAddTasksIntentHandling" />
      </Targets>
      <Member MemberName="ResolveSpatialEventTrigger">
        <MemberSignature Language="C#" Value="public static void ResolveSpatialEventTrigger (this Intents.IINAddTasksIntentHandling This, Intents.INAddTasksIntent intent, Action&lt;Intents.INSpatialEventTriggerResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveSpatialEventTrigger(class Intents.IINAddTasksIntentHandling This, class Intents.INAddTasksIntent intent, class System.Action`1&lt;class Intents.INSpatialEventTriggerResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINAddTasksIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INAddTasksIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSpatialEventTriggerResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V49))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize resolution of a spatial trigger for a task.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INAddTasksIntentHandling_Extensions" Member="M:MonoTouch.Intents.INAddTasksIntentHandling_Extensions.ResolveSpatialEventTrigger(MonoTouch.Intents.IINAddTasksIntentHandling,MonoTouch.Intents.INAddTasksIntent,System.Action{MonoTouch.Intents.INSpatialEventTriggerResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINAddTasksIntentHandling" />
      </Targets>
      <Member MemberName="ResolveTargetTaskList">
        <MemberSignature Language="C#" Value="public static void ResolveTargetTaskList (this Intents.IINAddTasksIntentHandling This, Intents.INAddTasksIntent intent, Action&lt;Intents.INTaskListResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveTargetTaskList(class Intents.IINAddTasksIntentHandling This, class Intents.INAddTasksIntent intent, class System.Action`1&lt;class Intents.INTaskListResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINAddTasksIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INAddTasksIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INTaskListResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V47))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize resolution of the list that will recieve added tasks.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INAddTasksIntentHandling_Extensions" Member="M:MonoTouch.Intents.INAddTasksIntentHandling_Extensions.ResolveTargetTaskList(MonoTouch.Intents.IINAddTasksIntentHandling,MonoTouch.Intents.INAddTasksIntent,System.Action{MonoTouch.Intents.INTaskListResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINAddTasksIntentHandling" />
      </Targets>
      <Member MemberName="ResolveTaskTitles">
        <MemberSignature Language="C#" Value="public static void ResolveTaskTitles (this Intents.IINAddTasksIntentHandling This, Intents.INAddTasksIntent intent, Action&lt;Intents.INSpeakableStringResolutionResult[]&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveTaskTitles(class Intents.IINAddTasksIntentHandling This, class Intents.INAddTasksIntent intent, class System.Action`1&lt;class Intents.INSpeakableStringResolutionResult[]&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINAddTasksIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INAddTasksIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSpeakableStringResolutionResult[]&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V48))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize resolution of a task title.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INAddTasksIntentHandling_Extensions" Member="M:MonoTouch.Intents.INAddTasksIntentHandling_Extensions.ResolveTaskTitles(MonoTouch.Intents.IINAddTasksIntentHandling,MonoTouch.Intents.INAddTasksIntent,System.Action{MonoTouch.Intents.INSpeakableStringResolutionResult[]})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINAddTasksIntentHandling" />
      </Targets>
      <Member MemberName="ResolveTemporalEventTrigger">
        <MemberSignature Language="C#" Value="public static void ResolveTemporalEventTrigger (this Intents.IINAddTasksIntentHandling This, Intents.INAddTasksIntent intent, Action&lt;Intents.INTemporalEventTriggerResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveTemporalEventTrigger(class Intents.IINAddTasksIntentHandling This, class Intents.INAddTasksIntent intent, class System.Action`1&lt;class Intents.INTemporalEventTriggerResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINAddTasksIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INAddTasksIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INTemporalEventTriggerResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V50))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize resolution of a temporal trigger for a task.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INAddTasksIntentHandling_Extensions" Member="M:MonoTouch.Intents.INAddTasksIntentHandling_Extensions.ResolveTemporalEventTrigger(MonoTouch.Intents.IINAddTasksIntentHandling,MonoTouch.Intents.INAddTasksIntent,System.Action{MonoTouch.Intents.INTemporalEventTriggerResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINAppendToNoteIntentHandling" />
      </Targets>
      <Member MemberName="Confirm">
        <MemberSignature Language="C#" Value="public static void Confirm (this Intents.IINAppendToNoteIntentHandling This, Intents.INAppendToNoteIntent intent, Action&lt;Intents.INAppendToNoteIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Confirm(class Intents.IINAppendToNoteIntentHandling This, class Intents.INAppendToNoteIntent intent, class System.Action`1&lt;class Intents.INAppendToNoteIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINAppendToNoteIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INAppendToNoteIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INAppendToNoteIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V52))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to confirm whether local and remote resources are ready to append to the note.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INAppendToNoteIntentHandling_Extensions" Member="M:MonoTouch.Intents.INAppendToNoteIntentHandling_Extensions.Confirm(MonoTouch.Intents.IINAppendToNoteIntentHandling,MonoTouch.Intents.INAppendToNoteIntent,System.Action{MonoTouch.Intents.INAppendToNoteIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINAppendToNoteIntentHandling" />
      </Targets>
      <Member MemberName="ResolveContentForAppend">
        <MemberSignature Language="C#" Value="public static void ResolveContentForAppend (this Intents.IINAppendToNoteIntentHandling This, Intents.INAppendToNoteIntent intent, Action&lt;Intents.INNoteContentResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveContentForAppend(class Intents.IINAppendToNoteIntentHandling This, class Intents.INAppendToNoteIntent intent, class System.Action`1&lt;class Intents.INNoteContentResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINAppendToNoteIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INAppendToNoteIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INNoteContentResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V53))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize resolution of the content to append.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INAppendToNoteIntentHandling_Extensions" Member="M:MonoTouch.Intents.INAppendToNoteIntentHandling_Extensions.ResolveContentForAppend(MonoTouch.Intents.IINAppendToNoteIntentHandling,MonoTouch.Intents.INAppendToNoteIntent,System.Action{MonoTouch.Intents.INNoteContentResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINAppendToNoteIntentHandling" />
      </Targets>
      <Member MemberName="ResolveTargetNoteForAppend">
        <MemberSignature Language="C#" Value="public static void ResolveTargetNoteForAppend (this Intents.IINAppendToNoteIntentHandling This, Intents.INAppendToNoteIntent intent, Action&lt;Intents.INNoteResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveTargetNoteForAppend(class Intents.IINAppendToNoteIntentHandling This, class Intents.INAppendToNoteIntent intent, class System.Action`1&lt;class Intents.INNoteResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINAppendToNoteIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INAppendToNoteIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INNoteResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V52))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize resolution of the target note.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INAppendToNoteIntentHandling_Extensions" Member="M:MonoTouch.Intents.INAppendToNoteIntentHandling_Extensions.ResolveTargetNoteForAppend(MonoTouch.Intents.IINAppendToNoteIntentHandling,MonoTouch.Intents.INAppendToNoteIntent,System.Action{MonoTouch.Intents.INNoteResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINBookRestaurantReservationIntentHandling" />
      </Targets>
      <Member MemberName="ConfirmBookRestaurantReservation">
        <MemberSignature Language="C#" Value="public static void ConfirmBookRestaurantReservation (this Intents.IINBookRestaurantReservationIntentHandling This, Intents.INBookRestaurantReservationIntent intent, Action&lt;Intents.INBookRestaurantReservationIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfirmBookRestaurantReservation(class Intents.IINBookRestaurantReservationIntentHandling This, class Intents.INBookRestaurantReservationIntent intent, class System.Action`1&lt;class Intents.INBookRestaurantReservationIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINBookRestaurantReservationIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INBookRestaurantReservationIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INBookRestaurantReservationIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V41))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the confirmation of a restaurant reservation.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INBookRestaurantReservationIntentHandling_Extensions" Member="M:MonoTouch.Intents.INBookRestaurantReservationIntentHandling_Extensions.ConfirmBookRestaurantReservation(MonoTouch.Intents.IINBookRestaurantReservationIntentHandling,MonoTouch.Intents.INBookRestaurantReservationIntent,System.Action{MonoTouch.Intents.INBookRestaurantReservationIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINBookRestaurantReservationIntentHandling" />
      </Targets>
      <Member MemberName="ResolveBookingDate">
        <MemberSignature Language="C#" Value="public static void ResolveBookingDate (this Intents.IINBookRestaurantReservationIntentHandling This, Intents.INBookRestaurantReservationIntent intent, Action&lt;Intents.INDateComponentsResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveBookingDate(class Intents.IINBookRestaurantReservationIntentHandling This, class Intents.INBookRestaurantReservationIntent intent, class System.Action`1&lt;class Intents.INDateComponentsResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINBookRestaurantReservationIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INBookRestaurantReservationIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INDateComponentsResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V43))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of the reservation date.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INBookRestaurantReservationIntentHandling_Extensions" Member="M:MonoTouch.Intents.INBookRestaurantReservationIntentHandling_Extensions.ResolveBookingDate(MonoTouch.Intents.IINBookRestaurantReservationIntentHandling,MonoTouch.Intents.INBookRestaurantReservationIntent,System.Action{MonoTouch.Intents.INDateComponentsResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINBookRestaurantReservationIntentHandling" />
      </Targets>
      <Member MemberName="ResolveGuest">
        <MemberSignature Language="C#" Value="public static void ResolveGuest (this Intents.IINBookRestaurantReservationIntentHandling This, Intents.INBookRestaurantReservationIntent intent, Action&lt;Intents.INRestaurantGuestResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveGuest(class Intents.IINBookRestaurantReservationIntentHandling This, class Intents.INBookRestaurantReservationIntent intent, class System.Action`1&lt;class Intents.INRestaurantGuestResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINBookRestaurantReservationIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INBookRestaurantReservationIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INRestaurantGuestResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V45))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of a guest in the reservation.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INBookRestaurantReservationIntentHandling_Extensions" Member="M:MonoTouch.Intents.INBookRestaurantReservationIntentHandling_Extensions.ResolveGuest(MonoTouch.Intents.IINBookRestaurantReservationIntentHandling,MonoTouch.Intents.INBookRestaurantReservationIntent,System.Action{MonoTouch.Intents.INRestaurantGuestResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINBookRestaurantReservationIntentHandling" />
      </Targets>
      <Member MemberName="ResolveGuestProvidedSpecialRequest">
        <MemberSignature Language="C#" Value="public static void ResolveGuestProvidedSpecialRequest (this Intents.IINBookRestaurantReservationIntentHandling This, Intents.INBookRestaurantReservationIntent intent, Action&lt;Intents.INStringResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveGuestProvidedSpecialRequest(class Intents.IINBookRestaurantReservationIntentHandling This, class Intents.INBookRestaurantReservationIntent intent, class System.Action`1&lt;class Intents.INStringResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINBookRestaurantReservationIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INBookRestaurantReservationIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INStringResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V46))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of whether a guest has made a special request as part of the reservation.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INBookRestaurantReservationIntentHandling_Extensions" Member="M:MonoTouch.Intents.INBookRestaurantReservationIntentHandling_Extensions.ResolveGuestProvidedSpecialRequest(MonoTouch.Intents.IINBookRestaurantReservationIntentHandling,MonoTouch.Intents.INBookRestaurantReservationIntent,System.Action{MonoTouch.Intents.INStringResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINBookRestaurantReservationIntentHandling" />
      </Targets>
      <Member MemberName="ResolvePartySize">
        <MemberSignature Language="C#" Value="public static void ResolvePartySize (this Intents.IINBookRestaurantReservationIntentHandling This, Intents.INBookRestaurantReservationIntent intent, Action&lt;Intents.INIntegerResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolvePartySize(class Intents.IINBookRestaurantReservationIntentHandling This, class Intents.INBookRestaurantReservationIntent intent, class System.Action`1&lt;class Intents.INIntegerResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINBookRestaurantReservationIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INBookRestaurantReservationIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INIntegerResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V44))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of the number of guests in the booking.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INBookRestaurantReservationIntentHandling_Extensions" Member="M:MonoTouch.Intents.INBookRestaurantReservationIntentHandling_Extensions.ResolvePartySize(MonoTouch.Intents.IINBookRestaurantReservationIntentHandling,MonoTouch.Intents.INBookRestaurantReservationIntent,System.Action{MonoTouch.Intents.INIntegerResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINBookRestaurantReservationIntentHandling" />
      </Targets>
      <Member MemberName="ResolveRestaurant">
        <MemberSignature Language="C#" Value="public static void ResolveRestaurant (this Intents.IINBookRestaurantReservationIntentHandling This, Intents.INBookRestaurantReservationIntent intent, Action&lt;Intents.INRestaurantResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveRestaurant(class Intents.IINBookRestaurantReservationIntentHandling This, class Intents.INBookRestaurantReservationIntent intent, class System.Action`1&lt;class Intents.INRestaurantResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINBookRestaurantReservationIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INBookRestaurantReservationIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INRestaurantResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V42))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of the restaurant at which the booking will be made.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INBookRestaurantReservationIntentHandling_Extensions" Member="M:MonoTouch.Intents.INBookRestaurantReservationIntentHandling_Extensions.ResolveRestaurant(MonoTouch.Intents.IINBookRestaurantReservationIntentHandling,MonoTouch.Intents.INBookRestaurantReservationIntent,System.Action{MonoTouch.Intents.INRestaurantResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINCancelRideIntentHandling" />
      </Targets>
      <Member MemberName="Confirm">
        <MemberSignature Language="C#" Value="public static void Confirm (this Intents.IINCancelRideIntentHandling This, Intents.INCancelRideIntent intent, Action&lt;Intents.INCancelRideIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Confirm(class Intents.IINCancelRideIntentHandling This, class Intents.INCancelRideIntent intent, class System.Action`1&lt;class Intents.INCancelRideIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINCancelRideIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INCancelRideIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INCancelRideIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V64))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INCancelRideIntentHandling_Extensions" Member="M:MonoTouch.Intents.INCancelRideIntentHandling_Extensions.Confirm(MonoTouch.Intents.IINCancelRideIntentHandling,MonoTouch.Intents.INCancelRideIntent,System.Action{MonoTouch.Intents.INCancelRideIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINCancelWorkoutIntentHandling" />
      </Targets>
      <Member MemberName="ConfirmCancelWorkout">
        <MemberSignature Language="C#" Value="public static void ConfirmCancelWorkout (this Intents.IINCancelWorkoutIntentHandling This, Intents.INCancelWorkoutIntent intent, Action&lt;Intents.INCancelWorkoutIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfirmCancelWorkout(class Intents.IINCancelWorkoutIntentHandling This, class Intents.INCancelWorkoutIntent intent, class System.Action`1&lt;class Intents.INCancelWorkoutIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINCancelWorkoutIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INCancelWorkoutIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INCancelWorkoutIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V50))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the confirmation of the cancellation of a workout.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INCancelWorkoutIntentHandling_Extensions" Member="M:MonoTouch.Intents.INCancelWorkoutIntentHandling_Extensions.ConfirmCancelWorkout(MonoTouch.Intents.IINCancelWorkoutIntentHandling,MonoTouch.Intents.INCancelWorkoutIntent,System.Action{MonoTouch.Intents.INCancelWorkoutIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINCancelWorkoutIntentHandling" />
      </Targets>
      <Member MemberName="ResolveWorkoutName">
        <MemberSignature Language="C#" Value="public static void ResolveWorkoutName (this Intents.IINCancelWorkoutIntentHandling This, Intents.INCancelWorkoutIntent intent, Action&lt;Intents.INSpeakableStringResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveWorkoutName(class Intents.IINCancelWorkoutIntentHandling This, class Intents.INCancelWorkoutIntent intent, class System.Action`1&lt;class Intents.INSpeakableStringResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINCancelWorkoutIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INCancelWorkoutIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSpeakableStringResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V51))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers can call this method to customize the resolution of the workout name.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INCancelWorkoutIntentHandling_Extensions" Member="M:MonoTouch.Intents.INCancelWorkoutIntentHandling_Extensions.ResolveWorkoutName(MonoTouch.Intents.IINCancelWorkoutIntentHandling,MonoTouch.Intents.INCancelWorkoutIntent,System.Action{MonoTouch.Intents.INSpeakableStringResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINCreateNoteIntentHandling" />
      </Targets>
      <Member MemberName="Confirm">
        <MemberSignature Language="C#" Value="public static void Confirm (this Intents.IINCreateNoteIntentHandling This, Intents.INCreateNoteIntent intent, Action&lt;Intents.INCreateNoteIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Confirm(class Intents.IINCreateNoteIntentHandling This, class Intents.INCreateNoteIntent intent, class System.Action`1&lt;class Intents.INCreateNoteIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINCreateNoteIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INCreateNoteIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INCreateNoteIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V75))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to confirm whether local and remote resources are ready to create the note.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INCreateNoteIntentHandling_Extensions" Member="M:MonoTouch.Intents.INCreateNoteIntentHandling_Extensions.Confirm(MonoTouch.Intents.IINCreateNoteIntentHandling,MonoTouch.Intents.INCreateNoteIntent,System.Action{MonoTouch.Intents.INCreateNoteIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINCreateNoteIntentHandling" />
      </Targets>
      <Member MemberName="ResolveContent">
        <MemberSignature Language="C#" Value="public static void ResolveContent (this Intents.IINCreateNoteIntentHandling This, Intents.INCreateNoteIntent intent, Action&lt;Intents.INNoteContentResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveContent(class Intents.IINCreateNoteIntentHandling This, class Intents.INCreateNoteIntent intent, class System.Action`1&lt;class Intents.INNoteContentResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINCreateNoteIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INCreateNoteIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INNoteContentResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V53))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to resolve the content of a note.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INCreateNoteIntentHandling_Extensions" Member="M:MonoTouch.Intents.INCreateNoteIntentHandling_Extensions.ResolveContent(MonoTouch.Intents.IINCreateNoteIntentHandling,MonoTouch.Intents.INCreateNoteIntent,System.Action{MonoTouch.Intents.INNoteContentResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINCreateNoteIntentHandling" />
      </Targets>
      <Member MemberName="ResolveGroupName">
        <MemberSignature Language="C#" Value="public static void ResolveGroupName (this Intents.IINCreateNoteIntentHandling This, Intents.INCreateNoteIntent intent, Action&lt;Intents.INSpeakableStringResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveGroupName(class Intents.IINCreateNoteIntentHandling This, class Intents.INCreateNoteIntent intent, class System.Action`1&lt;class Intents.INSpeakableStringResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINCreateNoteIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INCreateNoteIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSpeakableStringResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V44))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize the resolution of a note's group name.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INCreateNoteIntentHandling_Extensions" Member="M:MonoTouch.Intents.INCreateNoteIntentHandling_Extensions.ResolveGroupName(MonoTouch.Intents.IINCreateNoteIntentHandling,MonoTouch.Intents.INCreateNoteIntent,System.Action{MonoTouch.Intents.INSpeakableStringResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINCreateNoteIntentHandling" />
      </Targets>
      <Member MemberName="ResolveTitle">
        <MemberSignature Language="C#" Value="public static void ResolveTitle (this Intents.IINCreateNoteIntentHandling This, Intents.INCreateNoteIntent intent, Action&lt;Intents.INSpeakableStringResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveTitle(class Intents.IINCreateNoteIntentHandling This, class Intents.INCreateNoteIntent intent, class System.Action`1&lt;class Intents.INSpeakableStringResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINCreateNoteIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INCreateNoteIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSpeakableStringResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V44))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize the resolution of a note's title.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INCreateNoteIntentHandling_Extensions" Member="M:MonoTouch.Intents.INCreateNoteIntentHandling_Extensions.ResolveTitle(MonoTouch.Intents.IINCreateNoteIntentHandling,MonoTouch.Intents.INCreateNoteIntent,System.Action{MonoTouch.Intents.INSpeakableStringResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINCreateTaskListIntentHandling" />
      </Targets>
      <Member MemberName="Confirm">
        <MemberSignature Language="C#" Value="public static void Confirm (this Intents.IINCreateTaskListIntentHandling This, Intents.INCreateTaskListIntent intent, Action&lt;Intents.INCreateTaskListIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Confirm(class Intents.IINCreateTaskListIntentHandling This, class Intents.INCreateTaskListIntent intent, class System.Action`1&lt;class Intents.INCreateTaskListIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINCreateTaskListIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INCreateTaskListIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INCreateTaskListIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V76))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to confirm whether local and remote resources are ready to create the task.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INCreateTaskListIntentHandling_Extensions" Member="M:MonoTouch.Intents.INCreateTaskListIntentHandling_Extensions.Confirm(MonoTouch.Intents.IINCreateTaskListIntentHandling,MonoTouch.Intents.INCreateTaskListIntent,System.Action{MonoTouch.Intents.INCreateTaskListIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINCreateTaskListIntentHandling" />
      </Targets>
      <Member MemberName="ResolveGroupName">
        <MemberSignature Language="C#" Value="public static void ResolveGroupName (this Intents.IINCreateTaskListIntentHandling This, Intents.INCreateTaskListIntent intent, Action&lt;Intents.INSpeakableStringResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveGroupName(class Intents.IINCreateTaskListIntentHandling This, class Intents.INCreateTaskListIntent intent, class System.Action`1&lt;class Intents.INSpeakableStringResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINCreateTaskListIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INCreateTaskListIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSpeakableStringResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V44))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize resolution of a task list's group name.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INCreateTaskListIntentHandling_Extensions" Member="M:MonoTouch.Intents.INCreateTaskListIntentHandling_Extensions.ResolveGroupName(MonoTouch.Intents.IINCreateTaskListIntentHandling,MonoTouch.Intents.INCreateTaskListIntent,System.Action{MonoTouch.Intents.INSpeakableStringResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINCreateTaskListIntentHandling" />
      </Targets>
      <Member MemberName="ResolveTaskTitles">
        <MemberSignature Language="C#" Value="public static void ResolveTaskTitles (this Intents.IINCreateTaskListIntentHandling This, Intents.INCreateTaskListIntent intent, Action&lt;Intents.INSpeakableStringResolutionResult[]&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveTaskTitles(class Intents.IINCreateTaskListIntentHandling This, class Intents.INCreateTaskListIntent intent, class System.Action`1&lt;class Intents.INSpeakableStringResolutionResult[]&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINCreateTaskListIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INCreateTaskListIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSpeakableStringResolutionResult[]&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V48))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize resolution of a task list's task titles.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INCreateTaskListIntentHandling_Extensions" Member="M:MonoTouch.Intents.INCreateTaskListIntentHandling_Extensions.ResolveTaskTitles(MonoTouch.Intents.IINCreateTaskListIntentHandling,MonoTouch.Intents.INCreateTaskListIntent,System.Action{MonoTouch.Intents.INSpeakableStringResolutionResult[]})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINCreateTaskListIntentHandling" />
      </Targets>
      <Member MemberName="ResolveTitle">
        <MemberSignature Language="C#" Value="public static void ResolveTitle (this Intents.IINCreateTaskListIntentHandling This, Intents.INCreateTaskListIntent intent, Action&lt;Intents.INSpeakableStringResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveTitle(class Intents.IINCreateTaskListIntentHandling This, class Intents.INCreateTaskListIntent intent, class System.Action`1&lt;class Intents.INSpeakableStringResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINCreateTaskListIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INCreateTaskListIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSpeakableStringResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V44))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize resolution of a task list's title.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INCreateTaskListIntentHandling_Extensions" Member="M:MonoTouch.Intents.INCreateTaskListIntentHandling_Extensions.ResolveTitle(MonoTouch.Intents.IINCreateTaskListIntentHandling,MonoTouch.Intents.INCreateTaskListIntent,System.Action{MonoTouch.Intents.INSpeakableStringResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINEndWorkoutIntentHandling" />
      </Targets>
      <Member MemberName="ConfirmEndWorkout">
        <MemberSignature Language="C#" Value="public static void ConfirmEndWorkout (this Intents.IINEndWorkoutIntentHandling This, Intents.INEndWorkoutIntent intent, Action&lt;Intents.INEndWorkoutIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfirmEndWorkout(class Intents.IINEndWorkoutIntentHandling This, class Intents.INEndWorkoutIntent intent, class System.Action`1&lt;class Intents.INEndWorkoutIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINEndWorkoutIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INEndWorkoutIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INEndWorkoutIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V58))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the confirmation of the end of a workout.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INEndWorkoutIntentHandling_Extensions" Member="M:MonoTouch.Intents.INEndWorkoutIntentHandling_Extensions.ConfirmEndWorkout(MonoTouch.Intents.IINEndWorkoutIntentHandling,MonoTouch.Intents.INEndWorkoutIntent,System.Action{MonoTouch.Intents.INEndWorkoutIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINEndWorkoutIntentHandling" />
      </Targets>
      <Member MemberName="ResolveWorkoutName">
        <MemberSignature Language="C#" Value="public static void ResolveWorkoutName (this Intents.IINEndWorkoutIntentHandling This, Intents.INEndWorkoutIntent intent, Action&lt;Intents.INSpeakableStringResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveWorkoutName(class Intents.IINEndWorkoutIntentHandling This, class Intents.INEndWorkoutIntent intent, class System.Action`1&lt;class Intents.INSpeakableStringResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINEndWorkoutIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INEndWorkoutIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSpeakableStringResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V51))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers can override this method to customize validation of the workout name.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INEndWorkoutIntentHandling_Extensions" Member="M:MonoTouch.Intents.INEndWorkoutIntentHandling_Extensions.ResolveWorkoutName(MonoTouch.Intents.IINEndWorkoutIntentHandling,MonoTouch.Intents.INEndWorkoutIntent,System.Action{MonoTouch.Intents.INSpeakableStringResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINGetAvailableRestaurantReservationBookingDefaultsIntentHandling" />
      </Targets>
      <Member MemberName="ConfirmAvailableRestaurantReservationBookingDefaults">
        <MemberSignature Language="C#" Value="public static void ConfirmAvailableRestaurantReservationBookingDefaults (this Intents.IINGetAvailableRestaurantReservationBookingDefaultsIntentHandling This, Intents.INGetAvailableRestaurantReservationBookingDefaultsIntent intent, Action&lt;Intents.INGetAvailableRestaurantReservationBookingDefaultsIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfirmAvailableRestaurantReservationBookingDefaults(class Intents.IINGetAvailableRestaurantReservationBookingDefaultsIntentHandling This, class Intents.INGetAvailableRestaurantReservationBookingDefaultsIntent intent, class System.Action`1&lt;class Intents.INGetAvailableRestaurantReservationBookingDefaultsIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINGetAvailableRestaurantReservationBookingDefaultsIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INGetAvailableRestaurantReservationBookingDefaultsIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INGetAvailableRestaurantReservationBookingDefaultsIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V59))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the confirmation of booking defaults.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INGetAvailableRestaurantReservationBookingDefaultsIntentHandling_Extensions" Member="M:MonoTouch.Intents.INGetAvailableRestaurantReservationBookingDefaultsIntentHandling_Extensions.ConfirmAvailableRestaurantReservationBookingDefaults(MonoTouch.Intents.IINGetAvailableRestaurantReservationBookingDefaultsIntentHandling,MonoTouch.Intents.INGetAvailableRestaurantReservationBookingDefaultsIntent,System.Action{MonoTouch.Intents.INGetAvailableRestaurantReservationBookingDefaultsIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINGetAvailableRestaurantReservationBookingDefaultsIntentHandling" />
      </Targets>
      <Member MemberName="ResolveAvailableRestaurantReservationBookingDefaults">
        <MemberSignature Language="C#" Value="public static void ResolveAvailableRestaurantReservationBookingDefaults (this Intents.IINGetAvailableRestaurantReservationBookingDefaultsIntentHandling This, Intents.INGetAvailableRestaurantReservationBookingDefaultsIntent intent, Action&lt;Intents.INRestaurantResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveAvailableRestaurantReservationBookingDefaults(class Intents.IINGetAvailableRestaurantReservationBookingDefaultsIntentHandling This, class Intents.INGetAvailableRestaurantReservationBookingDefaultsIntent intent, class System.Action`1&lt;class Intents.INRestaurantResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINGetAvailableRestaurantReservationBookingDefaultsIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INGetAvailableRestaurantReservationBookingDefaultsIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INRestaurantResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V42))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of a booking default.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INGetAvailableRestaurantReservationBookingDefaultsIntentHandling_Extensions" Member="M:MonoTouch.Intents.INGetAvailableRestaurantReservationBookingDefaultsIntentHandling_Extensions.ResolveAvailableRestaurantReservationBookingDefaults(MonoTouch.Intents.IINGetAvailableRestaurantReservationBookingDefaultsIntentHandling,MonoTouch.Intents.INGetAvailableRestaurantReservationBookingDefaultsIntent,System.Action{MonoTouch.Intents.INRestaurantResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINGetAvailableRestaurantReservationBookingsIntentHandling" />
      </Targets>
      <Member MemberName="ConfirmAvailableRestaurantReservationBookings">
        <MemberSignature Language="C#" Value="public static void ConfirmAvailableRestaurantReservationBookings (this Intents.IINGetAvailableRestaurantReservationBookingsIntentHandling This, Intents.INGetAvailableRestaurantReservationBookingsIntent intent, Action&lt;Intents.INGetAvailableRestaurantReservationBookingsIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfirmAvailableRestaurantReservationBookings(class Intents.IINGetAvailableRestaurantReservationBookingsIntentHandling This, class Intents.INGetAvailableRestaurantReservationBookingsIntent intent, class System.Action`1&lt;class Intents.INGetAvailableRestaurantReservationBookingsIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINGetAvailableRestaurantReservationBookingsIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INGetAvailableRestaurantReservationBookingsIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INGetAvailableRestaurantReservationBookingsIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V60))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the confirmation that the developer's app can provide available reservations.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INGetAvailableRestaurantReservationBookingsIntentHandling_Extensions" Member="M:MonoTouch.Intents.INGetAvailableRestaurantReservationBookingsIntentHandling_Extensions.ConfirmAvailableRestaurantReservationBookings(MonoTouch.Intents.IINGetAvailableRestaurantReservationBookingsIntentHandling,MonoTouch.Intents.INGetAvailableRestaurantReservationBookingsIntent,System.Action{MonoTouch.Intents.INGetAvailableRestaurantReservationBookingsIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINGetAvailableRestaurantReservationBookingsIntentHandling" />
      </Targets>
      <Member MemberName="ResolveAvailableRestaurantReservationBookings">
        <MemberSignature Language="C#" Value="public static void ResolveAvailableRestaurantReservationBookings (this Intents.IINGetAvailableRestaurantReservationBookingsIntentHandling This, Intents.INGetAvailableRestaurantReservationBookingsIntent intent, Action&lt;Intents.INRestaurantResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveAvailableRestaurantReservationBookings(class Intents.IINGetAvailableRestaurantReservationBookingsIntentHandling This, class Intents.INGetAvailableRestaurantReservationBookingsIntent intent, class System.Action`1&lt;class Intents.INRestaurantResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINGetAvailableRestaurantReservationBookingsIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INGetAvailableRestaurantReservationBookingsIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INRestaurantResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V42))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of the restaurant for gathering available reservations.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INGetAvailableRestaurantReservationBookingsIntentHandling_Extensions" Member="M:MonoTouch.Intents.INGetAvailableRestaurantReservationBookingsIntentHandling_Extensions.ResolveAvailableRestaurantReservationBookings(MonoTouch.Intents.IINGetAvailableRestaurantReservationBookingsIntentHandling,MonoTouch.Intents.INGetAvailableRestaurantReservationBookingsIntent,System.Action{MonoTouch.Intents.INRestaurantResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINGetAvailableRestaurantReservationBookingsIntentHandling" />
      </Targets>
      <Member MemberName="ResolvePartySizeAvailableRestaurantReservationBookings">
        <MemberSignature Language="C#" Value="public static void ResolvePartySizeAvailableRestaurantReservationBookings (this Intents.IINGetAvailableRestaurantReservationBookingsIntentHandling This, Intents.INGetAvailableRestaurantReservationBookingsIntent intent, Action&lt;Intents.INIntegerResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolvePartySizeAvailableRestaurantReservationBookings(class Intents.IINGetAvailableRestaurantReservationBookingsIntentHandling This, class Intents.INGetAvailableRestaurantReservationBookingsIntent intent, class System.Action`1&lt;class Intents.INIntegerResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINGetAvailableRestaurantReservationBookingsIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INGetAvailableRestaurantReservationBookingsIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INIntegerResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V44))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of the number of guests in the reservation.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INGetAvailableRestaurantReservationBookingsIntentHandling_Extensions" Member="M:MonoTouch.Intents.INGetAvailableRestaurantReservationBookingsIntentHandling_Extensions.ResolvePartySizeAvailableRestaurantReservationBookings(MonoTouch.Intents.IINGetAvailableRestaurantReservationBookingsIntentHandling,MonoTouch.Intents.INGetAvailableRestaurantReservationBookingsIntent,System.Action{MonoTouch.Intents.INIntegerResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINGetAvailableRestaurantReservationBookingsIntentHandling" />
      </Targets>
      <Member MemberName="ResolvePreferredBookingDateAvailableRestaurantReservationBookings">
        <MemberSignature Language="C#" Value="public static void ResolvePreferredBookingDateAvailableRestaurantReservationBookings (this Intents.IINGetAvailableRestaurantReservationBookingsIntentHandling This, Intents.INGetAvailableRestaurantReservationBookingsIntent intent, Action&lt;Intents.INDateComponentsResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolvePreferredBookingDateAvailableRestaurantReservationBookings(class Intents.IINGetAvailableRestaurantReservationBookingsIntentHandling This, class Intents.INGetAvailableRestaurantReservationBookingsIntent intent, class System.Action`1&lt;class Intents.INDateComponentsResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINGetAvailableRestaurantReservationBookingsIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INGetAvailableRestaurantReservationBookingsIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INDateComponentsResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V43))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of the preferred dates for the reservation.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INGetAvailableRestaurantReservationBookingsIntentHandling_Extensions" Member="M:MonoTouch.Intents.INGetAvailableRestaurantReservationBookingsIntentHandling_Extensions.ResolvePreferredBookingDateAvailableRestaurantReservationBookings(MonoTouch.Intents.IINGetAvailableRestaurantReservationBookingsIntentHandling,MonoTouch.Intents.INGetAvailableRestaurantReservationBookingsIntent,System.Action{MonoTouch.Intents.INDateComponentsResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINGetCarLockStatusIntentHandling" />
      </Targets>
      <Member MemberName="ConfirmGetCarLockStatus">
        <MemberSignature Language="C#" Value="public static void ConfirmGetCarLockStatus (this Intents.IINGetCarLockStatusIntentHandling This, Intents.INGetCarLockStatusIntent intent, Action&lt;Intents.INGetCarLockStatusIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfirmGetCarLockStatus(class Intents.IINGetCarLockStatusIntentHandling This, class Intents.INGetCarLockStatusIntent intent, class System.Action`1&lt;class Intents.INGetCarLockStatusIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINGetCarLockStatusIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INGetCarLockStatusIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INGetCarLockStatusIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V54))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to onfirm whether the car's locks can be accessed.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INGetCarLockStatusIntentHandling_Extensions" Member="M:MonoTouch.Intents.INGetCarLockStatusIntentHandling_Extensions.ConfirmGetCarLockStatus(MonoTouch.Intents.IINGetCarLockStatusIntentHandling,MonoTouch.Intents.INGetCarLockStatusIntent,System.Action{MonoTouch.Intents.INGetCarLockStatusIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINGetCarLockStatusIntentHandling" />
      </Targets>
      <Member MemberName="ResolveCarName">
        <MemberSignature Language="C#" Value="public static void ResolveCarName (this Intents.IINGetCarLockStatusIntentHandling This, Intents.INGetCarLockStatusIntent intent, Action&lt;Intents.INSpeakableStringResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveCarName(class Intents.IINGetCarLockStatusIntentHandling This, class Intents.INGetCarLockStatusIntent intent, class System.Action`1&lt;class Intents.INSpeakableStringResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINGetCarLockStatusIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INGetCarLockStatusIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSpeakableStringResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V42))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to resolve the car's name.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INGetCarLockStatusIntentHandling_Extensions" Member="M:MonoTouch.Intents.INGetCarLockStatusIntentHandling_Extensions.ResolveCarName(MonoTouch.Intents.IINGetCarLockStatusIntentHandling,MonoTouch.Intents.INGetCarLockStatusIntent,System.Action{MonoTouch.Intents.INSpeakableStringResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINGetCarPowerLevelStatusIntentHandling" />
      </Targets>
      <Member MemberName="ConfirmGetCarPowerLevelStatus">
        <MemberSignature Language="C#" Value="public static void ConfirmGetCarPowerLevelStatus (this Intents.IINGetCarPowerLevelStatusIntentHandling This, Intents.INGetCarPowerLevelStatusIntent intent, Action&lt;Intents.INGetCarPowerLevelStatusIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfirmGetCarPowerLevelStatus(class Intents.IINGetCarPowerLevelStatusIntentHandling This, class Intents.INGetCarPowerLevelStatusIntent intent, class System.Action`1&lt;class Intents.INGetCarPowerLevelStatusIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINGetCarPowerLevelStatusIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INGetCarPowerLevelStatusIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INGetCarPowerLevelStatusIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V55))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to confirm whether the car's power levels can be accessed.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INGetCarPowerLevelStatusIntentHandling_Extensions" Member="M:MonoTouch.Intents.INGetCarPowerLevelStatusIntentHandling_Extensions.ConfirmGetCarPowerLevelStatus(MonoTouch.Intents.IINGetCarPowerLevelStatusIntentHandling,MonoTouch.Intents.INGetCarPowerLevelStatusIntent,System.Action{MonoTouch.Intents.INGetCarPowerLevelStatusIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINGetCarPowerLevelStatusIntentHandling" />
      </Targets>
      <Member MemberName="ResolveCarName">
        <MemberSignature Language="C#" Value="public static void ResolveCarName (this Intents.IINGetCarPowerLevelStatusIntentHandling This, Intents.INGetCarPowerLevelStatusIntent intent, Action&lt;Intents.INSpeakableStringResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveCarName(class Intents.IINGetCarPowerLevelStatusIntentHandling This, class Intents.INGetCarPowerLevelStatusIntent intent, class System.Action`1&lt;class Intents.INSpeakableStringResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINGetCarPowerLevelStatusIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INGetCarPowerLevelStatusIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSpeakableStringResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V42))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to resolve the car's name.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INGetCarPowerLevelStatusIntentHandling_Extensions" Member="M:MonoTouch.Intents.INGetCarPowerLevelStatusIntentHandling_Extensions.ResolveCarName(MonoTouch.Intents.IINGetCarPowerLevelStatusIntentHandling,MonoTouch.Intents.INGetCarPowerLevelStatusIntent,System.Action{MonoTouch.Intents.INSpeakableStringResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINGetRestaurantGuestIntentHandling" />
      </Targets>
      <Member MemberName="ConfirmRestaurantGuest">
        <MemberSignature Language="C#" Value="public static void ConfirmRestaurantGuest (this Intents.IINGetRestaurantGuestIntentHandling This, Intents.INGetRestaurantGuestIntent guestIntent, Action&lt;Intents.INGetRestaurantGuestIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfirmRestaurantGuest(class Intents.IINGetRestaurantGuestIntentHandling This, class Intents.INGetRestaurantGuestIntent guestIntent, class System.Action`1&lt;class Intents.INGetRestaurantGuestIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINGetRestaurantGuestIntentHandling" RefType="this" />
          <Parameter Name="guestIntent" Type="MonoTouch.Intents.INGetRestaurantGuestIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INGetRestaurantGuestIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V61))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="guestIntent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the confirmation of a guest for a restaurant reservation.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INGetRestaurantGuestIntentHandling_Extensions" Member="M:MonoTouch.Intents.INGetRestaurantGuestIntentHandling_Extensions.ConfirmRestaurantGuest(MonoTouch.Intents.IINGetRestaurantGuestIntentHandling,MonoTouch.Intents.INGetRestaurantGuestIntent,System.Action{MonoTouch.Intents.INGetRestaurantGuestIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINGetRideStatusIntentHandling" />
      </Targets>
      <Member MemberName="ConfirmRideStatus">
        <MemberSignature Language="C#" Value="public static void ConfirmRideStatus (this Intents.IINGetRideStatusIntentHandling This, Intents.INGetRideStatusIntent intent, Action&lt;Intents.INGetRideStatusIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfirmRideStatus(class Intents.IINGetRideStatusIntentHandling This, class Intents.INGetRideStatusIntent intent, class System.Action`1&lt;class Intents.INGetRideStatusIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINGetRideStatusIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INGetRideStatusIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INGetRideStatusIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V62))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the confirmation of a ride's status.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INGetRideStatusIntentHandling_Extensions" Member="M:MonoTouch.Intents.INGetRideStatusIntentHandling_Extensions.ConfirmRideStatus(MonoTouch.Intents.IINGetRideStatusIntentHandling,MonoTouch.Intents.INGetRideStatusIntent,System.Action{MonoTouch.Intents.INGetRideStatusIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINGetUserCurrentRestaurantReservationBookingsIntentHandling" />
      </Targets>
      <Member MemberName="ConfirmUserCurrentRestaurantReservationBookings">
        <MemberSignature Language="C#" Value="public static void ConfirmUserCurrentRestaurantReservationBookings (this Intents.IINGetUserCurrentRestaurantReservationBookingsIntentHandling This, Intents.INGetUserCurrentRestaurantReservationBookingsIntent intent, Action&lt;Intents.INGetUserCurrentRestaurantReservationBookingsIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfirmUserCurrentRestaurantReservationBookings(class Intents.IINGetUserCurrentRestaurantReservationBookingsIntentHandling This, class Intents.INGetUserCurrentRestaurantReservationBookingsIntent intent, class System.Action`1&lt;class Intents.INGetUserCurrentRestaurantReservationBookingsIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINGetUserCurrentRestaurantReservationBookingsIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INGetUserCurrentRestaurantReservationBookingsIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INGetUserCurrentRestaurantReservationBookingsIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V63))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the confirmation of the user for the current reservation.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INGetUserCurrentRestaurantReservationBookingsIntentHandling_Extensions" Member="M:MonoTouch.Intents.INGetUserCurrentRestaurantReservationBookingsIntentHandling_Extensions.ConfirmUserCurrentRestaurantReservationBookings(MonoTouch.Intents.IINGetUserCurrentRestaurantReservationBookingsIntentHandling,MonoTouch.Intents.INGetUserCurrentRestaurantReservationBookingsIntent,System.Action{MonoTouch.Intents.INGetUserCurrentRestaurantReservationBookingsIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINGetUserCurrentRestaurantReservationBookingsIntentHandling" />
      </Targets>
      <Member MemberName="ResolveUserCurrentRestaurantReservationBookings">
        <MemberSignature Language="C#" Value="public static void ResolveUserCurrentRestaurantReservationBookings (this Intents.IINGetUserCurrentRestaurantReservationBookingsIntentHandling This, Intents.INGetUserCurrentRestaurantReservationBookingsIntent intent, Action&lt;Intents.INRestaurantResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveUserCurrentRestaurantReservationBookings(class Intents.IINGetUserCurrentRestaurantReservationBookingsIntentHandling This, class Intents.INGetUserCurrentRestaurantReservationBookingsIntent intent, class System.Action`1&lt;class Intents.INRestaurantResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINGetUserCurrentRestaurantReservationBookingsIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INGetUserCurrentRestaurantReservationBookingsIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INRestaurantResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V42))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of the user for the current reservation.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INGetUserCurrentRestaurantReservationBookingsIntentHandling_Extensions" Member="M:MonoTouch.Intents.INGetUserCurrentRestaurantReservationBookingsIntentHandling_Extensions.ResolveUserCurrentRestaurantReservationBookings(MonoTouch.Intents.IINGetUserCurrentRestaurantReservationBookingsIntentHandling,MonoTouch.Intents.INGetUserCurrentRestaurantReservationBookingsIntent,System.Action{MonoTouch.Intents.INRestaurantResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINGetVisualCodeIntentHandling" />
      </Targets>
      <Member MemberName="Confirm">
        <MemberSignature Language="C#" Value="public static void Confirm (this Intents.IINGetVisualCodeIntentHandling This, Intents.INGetVisualCodeIntent intent, Action&lt;Intents.INGetVisualCodeIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Confirm(class Intents.IINGetVisualCodeIntentHandling This, class Intents.INGetVisualCodeIntent intent, class System.Action`1&lt;class Intents.INGetVisualCodeIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINGetVisualCodeIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INGetVisualCodeIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INGetVisualCodeIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V83))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to confirm whether local and remote resources are ready and allowed to provide the code.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INGetVisualCodeIntentHandling_Extensions" Member="M:MonoTouch.Intents.INGetVisualCodeIntentHandling_Extensions.Confirm(MonoTouch.Intents.IINGetVisualCodeIntentHandling,MonoTouch.Intents.INGetVisualCodeIntent,System.Action{MonoTouch.Intents.INGetVisualCodeIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINGetVisualCodeIntentHandling" />
      </Targets>
      <Member MemberName="ResolveVisualCodeType">
        <MemberSignature Language="C#" Value="public static void ResolveVisualCodeType (this Intents.IINGetVisualCodeIntentHandling This, Intents.INGetVisualCodeIntent intent, Action&lt;Intents.INVisualCodeTypeResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveVisualCodeType(class Intents.IINGetVisualCodeIntentHandling This, class Intents.INGetVisualCodeIntent intent, class System.Action`1&lt;class Intents.INVisualCodeTypeResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINGetVisualCodeIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INGetVisualCodeIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INVisualCodeTypeResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V83))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize the resolution of a visual code type.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INGetVisualCodeIntentHandling_Extensions" Member="M:MonoTouch.Intents.INGetVisualCodeIntentHandling_Extensions.ResolveVisualCodeType(MonoTouch.Intents.IINGetVisualCodeIntentHandling,MonoTouch.Intents.INGetVisualCodeIntent,System.Action{MonoTouch.Intents.INVisualCodeTypeResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.INIntentErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this Intents.INIntentErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype Intents.INIntentErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.Intents.INIntentErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>Retrives the constant indicating the domain of <c>this</c><see cref="T:Intents.INIntentErrorCode" />.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INIntentErrorCodeExtensions" Member="M:MonoTouch.Intents.INIntentErrorCodeExtensions.GetDomain(MonoTouch.Intents.INIntentErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.INIntentIdentifier" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this Intents.INIntentIdentifier self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype Intents.INIntentIdentifier self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.Intents.INIntentIdentifier" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>Retrieves the constant identifying <c>this</c>.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INIntentIdentifierExtensions" Member="M:MonoTouch.Intents.INIntentIdentifierExtensions.GetConstant(MonoTouch.Intents.INIntentIdentifier)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINListRideOptionsIntentHandling" />
      </Targets>
      <Member MemberName="ConfirmListRideOptions">
        <MemberSignature Language="C#" Value="public static void ConfirmListRideOptions (this Intents.IINListRideOptionsIntentHandling This, Intents.INListRideOptionsIntent intent, Action&lt;Intents.INListRideOptionsIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfirmListRideOptions(class Intents.IINListRideOptionsIntentHandling This, class Intents.INListRideOptionsIntent intent, class System.Action`1&lt;class Intents.INListRideOptionsIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINListRideOptionsIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INListRideOptionsIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INListRideOptionsIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V64))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the confirmation of the list of ride options.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INListRideOptionsIntentHandling_Extensions" Member="M:MonoTouch.Intents.INListRideOptionsIntentHandling_Extensions.ConfirmListRideOptions(MonoTouch.Intents.IINListRideOptionsIntentHandling,MonoTouch.Intents.INListRideOptionsIntent,System.Action{MonoTouch.Intents.INListRideOptionsIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINListRideOptionsIntentHandling" />
      </Targets>
      <Member MemberName="ResolveDropOffLocation">
        <MemberSignature Language="C#" Value="public static void ResolveDropOffLocation (this Intents.IINListRideOptionsIntentHandling This, Intents.INListRideOptionsIntent intent, Action&lt;Intents.INPlacemarkResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveDropOffLocation(class Intents.IINListRideOptionsIntentHandling This, class Intents.INListRideOptionsIntent intent, class System.Action`1&lt;class Intents.INPlacemarkResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINListRideOptionsIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INListRideOptionsIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INPlacemarkResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V65))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of the dropoff location.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INListRideOptionsIntentHandling_Extensions" Member="M:MonoTouch.Intents.INListRideOptionsIntentHandling_Extensions.ResolveDropOffLocation(MonoTouch.Intents.IINListRideOptionsIntentHandling,MonoTouch.Intents.INListRideOptionsIntent,System.Action{MonoTouch.Intents.INPlacemarkResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINListRideOptionsIntentHandling" />
      </Targets>
      <Member MemberName="ResolvePickupLocation">
        <MemberSignature Language="C#" Value="public static void ResolvePickupLocation (this Intents.IINListRideOptionsIntentHandling This, Intents.INListRideOptionsIntent intent, Action&lt;Intents.INPlacemarkResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolvePickupLocation(class Intents.IINListRideOptionsIntentHandling This, class Intents.INListRideOptionsIntent intent, class System.Action`1&lt;class Intents.INPlacemarkResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINListRideOptionsIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INListRideOptionsIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INPlacemarkResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V65))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of the pickup location.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INListRideOptionsIntentHandling_Extensions" Member="M:MonoTouch.Intents.INListRideOptionsIntentHandling_Extensions.ResolvePickupLocation(MonoTouch.Intents.IINListRideOptionsIntentHandling,MonoTouch.Intents.INListRideOptionsIntent,System.Action{MonoTouch.Intents.INPlacemarkResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINPauseWorkoutIntentHandling" />
      </Targets>
      <Member MemberName="ConfirmPauseWorkout">
        <MemberSignature Language="C#" Value="public static void ConfirmPauseWorkout (this Intents.IINPauseWorkoutIntentHandling This, Intents.INPauseWorkoutIntent intent, Action&lt;Intents.INPauseWorkoutIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfirmPauseWorkout(class Intents.IINPauseWorkoutIntentHandling This, class Intents.INPauseWorkoutIntent intent, class System.Action`1&lt;class Intents.INPauseWorkoutIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINPauseWorkoutIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INPauseWorkoutIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INPauseWorkoutIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V69))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the confirmation of the pausing of the workout.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INPauseWorkoutIntentHandling_Extensions" Member="M:MonoTouch.Intents.INPauseWorkoutIntentHandling_Extensions.ConfirmPauseWorkout(MonoTouch.Intents.IINPauseWorkoutIntentHandling,MonoTouch.Intents.INPauseWorkoutIntent,System.Action{MonoTouch.Intents.INPauseWorkoutIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINPauseWorkoutIntentHandling" />
      </Targets>
      <Member MemberName="ResolveWorkoutName">
        <MemberSignature Language="C#" Value="public static void ResolveWorkoutName (this Intents.IINPauseWorkoutIntentHandling This, Intents.INPauseWorkoutIntent intent, Action&lt;Intents.INSpeakableStringResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveWorkoutName(class Intents.IINPauseWorkoutIntentHandling This, class Intents.INPauseWorkoutIntent intent, class System.Action`1&lt;class Intents.INSpeakableStringResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINPauseWorkoutIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INPauseWorkoutIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSpeakableStringResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V51))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers can call this method to trigger validation of the workout name.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INPauseWorkoutIntentHandling_Extensions" Member="M:MonoTouch.Intents.INPauseWorkoutIntentHandling_Extensions.ResolveWorkoutName(MonoTouch.Intents.IINPauseWorkoutIntentHandling,MonoTouch.Intents.INPauseWorkoutIntent,System.Action{MonoTouch.Intents.INSpeakableStringResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINPayBillIntentHandling" />
      </Targets>
      <Member MemberName="ConfirmPayBill">
        <MemberSignature Language="C#" Value="public static void ConfirmPayBill (this Intents.IINPayBillIntentHandling This, Intents.INPayBillIntent intent, Action&lt;Intents.INPayBillIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfirmPayBill(class Intents.IINPayBillIntentHandling This, class Intents.INPayBillIntent intent, class System.Action`1&lt;class Intents.INPayBillIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINPayBillIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INPayBillIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INPayBillIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V75))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to confirm payment details.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INPayBillIntentHandling_Extensions" Member="M:MonoTouch.Intents.INPayBillIntentHandling_Extensions.ConfirmPayBill(MonoTouch.Intents.IINPayBillIntentHandling,MonoTouch.Intents.INPayBillIntent,System.Action{MonoTouch.Intents.INPayBillIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINPayBillIntentHandling" />
      </Targets>
      <Member MemberName="HandlePayBill">
        <MemberSignature Language="C#" Value="public static void HandlePayBill (this Intents.IINPayBillIntentHandling This, Intents.INPayBillIntent intent, Action&lt;Intents.INPayBillIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandlePayBill(class Intents.IINPayBillIntentHandling This, class Intents.INPayBillIntent intent, class System.Action`1&lt;class Intents.INPayBillIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINPayBillIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INPayBillIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INPayBillIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V75))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to schedule bill payment.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INPayBillIntentHandling_Extensions" Member="M:MonoTouch.Intents.INPayBillIntentHandling_Extensions.HandlePayBill(MonoTouch.Intents.IINPayBillIntentHandling,MonoTouch.Intents.INPayBillIntent,System.Action{MonoTouch.Intents.INPayBillIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINPayBillIntentHandling" />
      </Targets>
      <Member MemberName="ResolveBillPayee">
        <MemberSignature Language="C#" Value="public static void ResolveBillPayee (this Intents.IINPayBillIntentHandling This, Intents.INPayBillIntent intent, Action&lt;Intents.INBillPayeeResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveBillPayee(class Intents.IINPayBillIntentHandling This, class Intents.INPayBillIntent intent, class System.Action`1&lt;class Intents.INBillPayeeResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINPayBillIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INPayBillIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INBillPayeeResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V76))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to resolve the payee.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INPayBillIntentHandling_Extensions" Member="M:MonoTouch.Intents.INPayBillIntentHandling_Extensions.ResolveBillPayee(MonoTouch.Intents.IINPayBillIntentHandling,MonoTouch.Intents.INPayBillIntent,System.Action{MonoTouch.Intents.INBillPayeeResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINPayBillIntentHandling" />
      </Targets>
      <Member MemberName="ResolveBillType">
        <MemberSignature Language="C#" Value="public static void ResolveBillType (this Intents.IINPayBillIntentHandling This, Intents.INPayBillIntent intent, Action&lt;Intents.INBillTypeResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveBillType(class Intents.IINPayBillIntentHandling This, class Intents.INPayBillIntent intent, class System.Action`1&lt;class Intents.INBillTypeResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINPayBillIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INPayBillIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INBillTypeResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V80))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to resolve the bill type.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INPayBillIntentHandling_Extensions" Member="M:MonoTouch.Intents.INPayBillIntentHandling_Extensions.ResolveBillType(MonoTouch.Intents.IINPayBillIntentHandling,MonoTouch.Intents.INPayBillIntent,System.Action{MonoTouch.Intents.INBillTypeResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINPayBillIntentHandling" />
      </Targets>
      <Member MemberName="ResolveDueDate">
        <MemberSignature Language="C#" Value="public static void ResolveDueDate (this Intents.IINPayBillIntentHandling This, Intents.INPayBillIntent intent, Action&lt;Intents.INDateComponentsRangeResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveDueDate(class Intents.IINPayBillIntentHandling This, class Intents.INPayBillIntent intent, class System.Action`1&lt;class Intents.INDateComponentsRangeResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINPayBillIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INPayBillIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INDateComponentsRangeResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V79))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to resolve the bill due date.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INPayBillIntentHandling_Extensions" Member="M:MonoTouch.Intents.INPayBillIntentHandling_Extensions.ResolveDueDate(MonoTouch.Intents.IINPayBillIntentHandling,MonoTouch.Intents.INPayBillIntent,System.Action{MonoTouch.Intents.INDateComponentsRangeResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINPayBillIntentHandling" />
      </Targets>
      <Member MemberName="ResolveFromAccount">
        <MemberSignature Language="C#" Value="public static void ResolveFromAccount (this Intents.IINPayBillIntentHandling This, Intents.INPayBillIntent intent, Action&lt;Intents.INPaymentAccountResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveFromAccount(class Intents.IINPayBillIntentHandling This, class Intents.INPayBillIntent intent, class System.Action`1&lt;class Intents.INPaymentAccountResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINPayBillIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INPayBillIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INPaymentAccountResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V77))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to resolve the account that will be debited to pay the bill.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INPayBillIntentHandling_Extensions" Member="M:MonoTouch.Intents.INPayBillIntentHandling_Extensions.ResolveFromAccount(MonoTouch.Intents.IINPayBillIntentHandling,MonoTouch.Intents.INPayBillIntent,System.Action{MonoTouch.Intents.INPaymentAccountResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINPayBillIntentHandling" />
      </Targets>
      <Member MemberName="ResolveTransactionAmount">
        <MemberSignature Language="C#" Value="public static void ResolveTransactionAmount (this Intents.IINPayBillIntentHandling This, Intents.INPayBillIntent intent, Action&lt;Intents.INPaymentAmountResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveTransactionAmount(class Intents.IINPayBillIntentHandling This, class Intents.INPayBillIntent intent, class System.Action`1&lt;class Intents.INPaymentAmountResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINPayBillIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INPayBillIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INPaymentAmountResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V78))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to resolve the transaction amount.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INPayBillIntentHandling_Extensions" Member="M:MonoTouch.Intents.INPayBillIntentHandling_Extensions.ResolveTransactionAmount(MonoTouch.Intents.IINPayBillIntentHandling,MonoTouch.Intents.INPayBillIntent,System.Action{MonoTouch.Intents.INPaymentAmountResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINPayBillIntentHandling" />
      </Targets>
      <Member MemberName="ResolveTransactionNote">
        <MemberSignature Language="C#" Value="public static void ResolveTransactionNote (this Intents.IINPayBillIntentHandling This, Intents.INPayBillIntent intent, Action&lt;Intents.INStringResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveTransactionNote(class Intents.IINPayBillIntentHandling This, class Intents.INPayBillIntent intent, class System.Action`1&lt;class Intents.INStringResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINPayBillIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INPayBillIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INStringResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V49))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to resolve the custom transaction notes.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INPayBillIntentHandling_Extensions" Member="M:MonoTouch.Intents.INPayBillIntentHandling_Extensions.ResolveTransactionNote(MonoTouch.Intents.IINPayBillIntentHandling,MonoTouch.Intents.INPayBillIntent,System.Action{MonoTouch.Intents.INStringResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINPayBillIntentHandling" />
      </Targets>
      <Member MemberName="ResolveTransactionScheduledDate">
        <MemberSignature Language="C#" Value="public static void ResolveTransactionScheduledDate (this Intents.IINPayBillIntentHandling This, Intents.INPayBillIntent intent, Action&lt;Intents.INDateComponentsRangeResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveTransactionScheduledDate(class Intents.IINPayBillIntentHandling This, class Intents.INPayBillIntent intent, class System.Action`1&lt;class Intents.INDateComponentsRangeResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINPayBillIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INPayBillIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INDateComponentsRangeResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V79))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to resolve the scheduled date for the transaction.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INPayBillIntentHandling_Extensions" Member="M:MonoTouch.Intents.INPayBillIntentHandling_Extensions.ResolveTransactionScheduledDate(MonoTouch.Intents.IINPayBillIntentHandling,MonoTouch.Intents.INPayBillIntent,System.Action{MonoTouch.Intents.INDateComponentsRangeResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.INPersonHandleLabel" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this Intents.INPersonHandleLabel self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype Intents.INPersonHandleLabel self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.Intents.INPersonHandleLabel" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>Returns the string constant for the enumeration value.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INPersonHandleLabelExtensions" Member="M:MonoTouch.Intents.INPersonHandleLabelExtensions.GetConstant(MonoTouch.Intents.INPersonHandleLabel)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.INPersonRelationship" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this Intents.INPersonRelationship self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype Intents.INPersonRelationship self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.Intents.INPersonRelationship" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>Returns the string constant for the enumeration value.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INPersonRelationshipExtensions" Member="M:MonoTouch.Intents.INPersonRelationshipExtensions.GetConstant(MonoTouch.Intents.INPersonRelationship)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINRequestPaymentIntentHandling" />
      </Targets>
      <Member MemberName="ConfirmRequestPayment">
        <MemberSignature Language="C#" Value="public static void ConfirmRequestPayment (this Intents.IINRequestPaymentIntentHandling This, Intents.INRequestPaymentIntent intent, Action&lt;Intents.INRequestPaymentIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfirmRequestPayment(class Intents.IINRequestPaymentIntentHandling This, class Intents.INRequestPaymentIntent intent, class System.Action`1&lt;class Intents.INRequestPaymentIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINRequestPaymentIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INRequestPaymentIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INRequestPaymentIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V70))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the confirmation of a payment request.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INRequestPaymentIntentHandling_Extensions" Member="M:MonoTouch.Intents.INRequestPaymentIntentHandling_Extensions.ConfirmRequestPayment(MonoTouch.Intents.IINRequestPaymentIntentHandling,MonoTouch.Intents.INRequestPaymentIntent,System.Action{MonoTouch.Intents.INRequestPaymentIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINRequestPaymentIntentHandling" />
      </Targets>
      <Member MemberName="ResolveCurrencyAmount">
        <MemberSignature Language="C#" Value="public static void ResolveCurrencyAmount (this Intents.IINRequestPaymentIntentHandling This, Intents.INRequestPaymentIntent intent, Action&lt;Intents.INCurrencyAmountResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveCurrencyAmount(class Intents.IINRequestPaymentIntentHandling This, class Intents.INRequestPaymentIntent intent, class System.Action`1&lt;class Intents.INCurrencyAmountResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINRequestPaymentIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INRequestPaymentIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INCurrencyAmountResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V77))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of the currency amount requested.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INRequestPaymentIntentHandling_Extensions" Member="M:MonoTouch.Intents.INRequestPaymentIntentHandling_Extensions.ResolveCurrencyAmount(MonoTouch.Intents.IINRequestPaymentIntentHandling,MonoTouch.Intents.INRequestPaymentIntent,System.Action{MonoTouch.Intents.INCurrencyAmountResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINRequestPaymentIntentHandling" />
      </Targets>
      <Member MemberName="ResolveCurrencyAmount">
        <MemberSignature Language="C#" Value="public static void ResolveCurrencyAmount (this Intents.IINRequestPaymentIntentHandling This, Intents.INRequestPaymentIntent intent, Action&lt;Intents.INRequestPaymentCurrencyAmountResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveCurrencyAmount(class Intents.IINRequestPaymentIntentHandling This, class Intents.INRequestPaymentIntent intent, class System.Action`1&lt;class Intents.INRequestPaymentCurrencyAmountResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINRequestPaymentIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INRequestPaymentIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INRequestPaymentCurrencyAmountResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V110))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize resolution of a currency and amount.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INRequestPaymentIntentHandling_Extensions" Member="M:MonoTouch.Intents.INRequestPaymentIntentHandling_Extensions.ResolveCurrencyAmount(MonoTouch.Intents.IINRequestPaymentIntentHandling,MonoTouch.Intents.INRequestPaymentIntent,System.Action{MonoTouch.Intents.INRequestPaymentCurrencyAmountResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINRequestPaymentIntentHandling" />
      </Targets>
      <Member MemberName="ResolveNote">
        <MemberSignature Language="C#" Value="public static void ResolveNote (this Intents.IINRequestPaymentIntentHandling This, Intents.INRequestPaymentIntent intent, Action&lt;Intents.INStringResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveNote(class Intents.IINRequestPaymentIntentHandling This, class Intents.INRequestPaymentIntent intent, class System.Action`1&lt;class Intents.INStringResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINRequestPaymentIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INRequestPaymentIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INStringResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V46))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of a note to accompany the request.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INRequestPaymentIntentHandling_Extensions" Member="M:MonoTouch.Intents.INRequestPaymentIntentHandling_Extensions.ResolveNote(MonoTouch.Intents.IINRequestPaymentIntentHandling,MonoTouch.Intents.INRequestPaymentIntent,System.Action{MonoTouch.Intents.INStringResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINRequestPaymentIntentHandling" />
      </Targets>
      <Member MemberName="ResolvePayer">
        <MemberSignature Language="C#" Value="public static void ResolvePayer (this Intents.IINRequestPaymentIntentHandling This, Intents.INRequestPaymentIntent intent, Action&lt;Intents.INPersonResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolvePayer(class Intents.IINRequestPaymentIntentHandling This, class Intents.INRequestPaymentIntent intent, class System.Action`1&lt;class Intents.INPersonResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINRequestPaymentIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INRequestPaymentIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INPersonResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V76))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of the payer.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INRequestPaymentIntentHandling_Extensions" Member="M:MonoTouch.Intents.INRequestPaymentIntentHandling_Extensions.ResolvePayer(MonoTouch.Intents.IINRequestPaymentIntentHandling,MonoTouch.Intents.INRequestPaymentIntent,System.Action{MonoTouch.Intents.INPersonResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINRequestPaymentIntentHandling" />
      </Targets>
      <Member MemberName="ResolvePayer">
        <MemberSignature Language="C#" Value="public static void ResolvePayer (this Intents.IINRequestPaymentIntentHandling This, Intents.INRequestPaymentIntent intent, Action&lt;Intents.INRequestPaymentPayerResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolvePayer(class Intents.IINRequestPaymentIntentHandling This, class Intents.INRequestPaymentIntent intent, class System.Action`1&lt;class Intents.INRequestPaymentPayerResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINRequestPaymentIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INRequestPaymentIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INRequestPaymentPayerResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V108))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize the resolution of a payer.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INRequestPaymentIntentHandling_Extensions" Member="M:MonoTouch.Intents.INRequestPaymentIntentHandling_Extensions.ResolvePayer(MonoTouch.Intents.IINRequestPaymentIntentHandling,MonoTouch.Intents.INRequestPaymentIntent,System.Action{MonoTouch.Intents.INRequestPaymentPayerResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINRequestRideIntentHandling" />
      </Targets>
      <Member MemberName="ConfirmRequestRide">
        <MemberSignature Language="C#" Value="public static void ConfirmRequestRide (this Intents.IINRequestRideIntentHandling This, Intents.INRequestRideIntent intent, Action&lt;Intents.INRequestRideIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfirmRequestRide(class Intents.IINRequestRideIntentHandling This, class Intents.INRequestRideIntent intent, class System.Action`1&lt;class Intents.INRequestRideIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINRequestRideIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INRequestRideIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INRequestRideIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V78))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the confirmation of a ride request.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INRequestRideIntentHandling_Extensions" Member="M:MonoTouch.Intents.INRequestRideIntentHandling_Extensions.ConfirmRequestRide(MonoTouch.Intents.IINRequestRideIntentHandling,MonoTouch.Intents.INRequestRideIntent,System.Action{MonoTouch.Intents.INRequestRideIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINRequestRideIntentHandling" />
      </Targets>
      <Member MemberName="ResolveDropOffLocation">
        <MemberSignature Language="C#" Value="public static void ResolveDropOffLocation (this Intents.IINRequestRideIntentHandling This, Intents.INRequestRideIntent intent, Action&lt;Intents.INPlacemarkResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveDropOffLocation(class Intents.IINRequestRideIntentHandling This, class Intents.INRequestRideIntent intent, class System.Action`1&lt;class Intents.INPlacemarkResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINRequestRideIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INRequestRideIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INPlacemarkResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V65))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of the dropoff location.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INRequestRideIntentHandling_Extensions" Member="M:MonoTouch.Intents.INRequestRideIntentHandling_Extensions.ResolveDropOffLocation(MonoTouch.Intents.IINRequestRideIntentHandling,MonoTouch.Intents.INRequestRideIntent,System.Action{MonoTouch.Intents.INPlacemarkResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINRequestRideIntentHandling" />
      </Targets>
      <Member MemberName="ResolvePartySize">
        <MemberSignature Language="C#" Value="public static void ResolvePartySize (this Intents.IINRequestRideIntentHandling This, Intents.INRequestRideIntent intent, Action&lt;Intents.INIntegerResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolvePartySize(class Intents.IINRequestRideIntentHandling This, class Intents.INRequestRideIntent intent, class System.Action`1&lt;class Intents.INIntegerResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINRequestRideIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INRequestRideIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INIntegerResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V44))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of the number of passengers in the party.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INRequestRideIntentHandling_Extensions" Member="M:MonoTouch.Intents.INRequestRideIntentHandling_Extensions.ResolvePartySize(MonoTouch.Intents.IINRequestRideIntentHandling,MonoTouch.Intents.INRequestRideIntent,System.Action{MonoTouch.Intents.INIntegerResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINRequestRideIntentHandling" />
      </Targets>
      <Member MemberName="ResolvePickupLocation">
        <MemberSignature Language="C#" Value="public static void ResolvePickupLocation (this Intents.IINRequestRideIntentHandling This, Intents.INRequestRideIntent intent, Action&lt;Intents.INPlacemarkResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolvePickupLocation(class Intents.IINRequestRideIntentHandling This, class Intents.INRequestRideIntent intent, class System.Action`1&lt;class Intents.INPlacemarkResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINRequestRideIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INRequestRideIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INPlacemarkResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V65))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of the pickup location.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INRequestRideIntentHandling_Extensions" Member="M:MonoTouch.Intents.INRequestRideIntentHandling_Extensions.ResolvePickupLocation(MonoTouch.Intents.IINRequestRideIntentHandling,MonoTouch.Intents.INRequestRideIntent,System.Action{MonoTouch.Intents.INPlacemarkResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINRequestRideIntentHandling" />
      </Targets>
      <Member MemberName="ResolveRideOptionName">
        <MemberSignature Language="C#" Value="public static void ResolveRideOptionName (this Intents.IINRequestRideIntentHandling This, Intents.INRequestRideIntent intent, Action&lt;Intents.INSpeakableStringResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveRideOptionName(class Intents.IINRequestRideIntentHandling This, class Intents.INRequestRideIntent intent, class System.Action`1&lt;class Intents.INSpeakableStringResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINRequestRideIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INRequestRideIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSpeakableStringResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V51))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of options related to the ride.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INRequestRideIntentHandling_Extensions" Member="M:MonoTouch.Intents.INRequestRideIntentHandling_Extensions.ResolveRideOptionName(MonoTouch.Intents.IINRequestRideIntentHandling,MonoTouch.Intents.INRequestRideIntent,System.Action{MonoTouch.Intents.INSpeakableStringResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINRequestRideIntentHandling" />
      </Targets>
      <Member MemberName="ResolveScheduledPickupTime">
        <MemberSignature Language="C#" Value="public static void ResolveScheduledPickupTime (this Intents.IINRequestRideIntentHandling This, Intents.INRequestRideIntent intent, Action&lt;Intents.INDateComponentsRangeResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveScheduledPickupTime(class Intents.IINRequestRideIntentHandling This, class Intents.INRequestRideIntent intent, class System.Action`1&lt;class Intents.INDateComponentsRangeResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINRequestRideIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INRequestRideIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INDateComponentsRangeResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V79))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this to customize resolution of scheduled pickup times.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INRequestRideIntentHandling_Extensions" Member="M:MonoTouch.Intents.INRequestRideIntentHandling_Extensions.ResolveScheduledPickupTime(MonoTouch.Intents.IINRequestRideIntentHandling,MonoTouch.Intents.INRequestRideIntent,System.Action{MonoTouch.Intents.INDateComponentsRangeResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINResumeWorkoutIntentHandling" />
      </Targets>
      <Member MemberName="ConfirmResumeWorkout">
        <MemberSignature Language="C#" Value="public static void ConfirmResumeWorkout (this Intents.IINResumeWorkoutIntentHandling This, Intents.INResumeWorkoutIntent intent, Action&lt;Intents.INResumeWorkoutIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfirmResumeWorkout(class Intents.IINResumeWorkoutIntentHandling This, class Intents.INResumeWorkoutIntent intent, class System.Action`1&lt;class Intents.INResumeWorkoutIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINResumeWorkoutIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INResumeWorkoutIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INResumeWorkoutIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V79))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the confirmation that the workout should resume.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INResumeWorkoutIntentHandling_Extensions" Member="M:MonoTouch.Intents.INResumeWorkoutIntentHandling_Extensions.ConfirmResumeWorkout(MonoTouch.Intents.IINResumeWorkoutIntentHandling,MonoTouch.Intents.INResumeWorkoutIntent,System.Action{MonoTouch.Intents.INResumeWorkoutIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINResumeWorkoutIntentHandling" />
      </Targets>
      <Member MemberName="ResolveWorkoutName">
        <MemberSignature Language="C#" Value="public static void ResolveWorkoutName (this Intents.IINResumeWorkoutIntentHandling This, Intents.INResumeWorkoutIntent intent, Action&lt;Intents.INSpeakableStringResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveWorkoutName(class Intents.IINResumeWorkoutIntentHandling This, class Intents.INResumeWorkoutIntent intent, class System.Action`1&lt;class Intents.INSpeakableStringResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINResumeWorkoutIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INResumeWorkoutIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSpeakableStringResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V51))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers can call this method to trigger validation of the workout name.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INResumeWorkoutIntentHandling_Extensions" Member="M:MonoTouch.Intents.INResumeWorkoutIntentHandling_Extensions.ResolveWorkoutName(MonoTouch.Intents.IINResumeWorkoutIntentHandling,MonoTouch.Intents.INResumeWorkoutIntent,System.Action{MonoTouch.Intents.INSpeakableStringResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSaveProfileInCarIntentHandling" />
      </Targets>
      <Member MemberName="ConfirmSaveProfileInCar">
        <MemberSignature Language="C#" Value="public static void ConfirmSaveProfileInCar (this Intents.IINSaveProfileInCarIntentHandling This, Intents.INSaveProfileInCarIntent intent, Action&lt;Intents.INSaveProfileInCarIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfirmSaveProfileInCar(class Intents.IINSaveProfileInCarIntentHandling This, class Intents.INSaveProfileInCarIntent intent, class System.Action`1&lt;class Intents.INSaveProfileInCarIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSaveProfileInCarIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSaveProfileInCarIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSaveProfileInCarIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V52))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the confirmation of the saving of a profile.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSaveProfileInCarIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSaveProfileInCarIntentHandling_Extensions.ConfirmSaveProfileInCar(MonoTouch.Intents.IINSaveProfileInCarIntentHandling,MonoTouch.Intents.INSaveProfileInCarIntent,System.Action{MonoTouch.Intents.INSaveProfileInCarIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSaveProfileInCarIntentHandling" />
      </Targets>
      <Member MemberName="ResolveProfileName">
        <MemberSignature Language="C#" Value="public static void ResolveProfileName (this Intents.IINSaveProfileInCarIntentHandling This, Intents.INSaveProfileInCarIntent intent, Action&lt;Intents.INStringResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveProfileName(class Intents.IINSaveProfileInCarIntentHandling This, class Intents.INSaveProfileInCarIntent intent, class System.Action`1&lt;class Intents.INStringResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSaveProfileInCarIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSaveProfileInCarIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INStringResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V49))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of the profile name.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSaveProfileInCarIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSaveProfileInCarIntentHandling_Extensions.ResolveProfileName(MonoTouch.Intents.IINSaveProfileInCarIntentHandling,MonoTouch.Intents.INSaveProfileInCarIntent,System.Action{MonoTouch.Intents.INStringResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSaveProfileInCarIntentHandling" />
      </Targets>
      <Member MemberName="ResolveProfileNumber">
        <MemberSignature Language="C#" Value="public static void ResolveProfileNumber (this Intents.IINSaveProfileInCarIntentHandling This, Intents.INSaveProfileInCarIntent intent, Action&lt;Intents.INIntegerResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveProfileNumber(class Intents.IINSaveProfileInCarIntentHandling This, class Intents.INSaveProfileInCarIntent intent, class System.Action`1&lt;class Intents.INIntegerResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSaveProfileInCarIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSaveProfileInCarIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INIntegerResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V44))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of the profile number.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSaveProfileInCarIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSaveProfileInCarIntentHandling_Extensions.ResolveProfileNumber(MonoTouch.Intents.IINSaveProfileInCarIntentHandling,MonoTouch.Intents.INSaveProfileInCarIntent,System.Action{MonoTouch.Intents.INIntegerResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchCallHistoryIntentHandling" />
      </Targets>
      <Member MemberName="ConfirmSearchCallHistory">
        <MemberSignature Language="C#" Value="public static void ConfirmSearchCallHistory (this Intents.IINSearchCallHistoryIntentHandling This, Intents.INSearchCallHistoryIntent intent, Action&lt;Intents.INSearchCallHistoryIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfirmSearchCallHistory(class Intents.IINSearchCallHistoryIntentHandling This, class Intents.INSearchCallHistoryIntent intent, class System.Action`1&lt;class Intents.INSearchCallHistoryIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchCallHistoryIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchCallHistoryIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSearchCallHistoryIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V47))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the confirmation of a call history search.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchCallHistoryIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchCallHistoryIntentHandling_Extensions.ConfirmSearchCallHistory(MonoTouch.Intents.IINSearchCallHistoryIntentHandling,MonoTouch.Intents.INSearchCallHistoryIntent,System.Action{MonoTouch.Intents.INSearchCallHistoryIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchCallHistoryIntentHandling" />
      </Targets>
      <Member MemberName="ResolveCallType">
        <MemberSignature Language="C#" Value="public static void ResolveCallType (this Intents.IINSearchCallHistoryIntentHandling This, Intents.INSearchCallHistoryIntent intent, Action&lt;Intents.INCallRecordTypeResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveCallType(class Intents.IINSearchCallHistoryIntentHandling This, class Intents.INSearchCallHistoryIntent intent, class System.Action`1&lt;class Intents.INCallRecordTypeResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchCallHistoryIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchCallHistoryIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INCallRecordTypeResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V80))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of the call type used in the search.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchCallHistoryIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchCallHistoryIntentHandling_Extensions.ResolveCallType(MonoTouch.Intents.IINSearchCallHistoryIntentHandling,MonoTouch.Intents.INSearchCallHistoryIntent,System.Action{MonoTouch.Intents.INCallRecordTypeResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchCallHistoryIntentHandling" />
      </Targets>
      <Member MemberName="ResolveCallTypes">
        <MemberSignature Language="C#" Value="public static void ResolveCallTypes (this Intents.IINSearchCallHistoryIntentHandling This, Intents.INSearchCallHistoryIntent intent, Action&lt;Intents.INCallRecordTypeOptionsResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveCallTypes(class Intents.IINSearchCallHistoryIntentHandling This, class Intents.INSearchCallHistoryIntent intent, class System.Action`1&lt;class Intents.INCallRecordTypeOptionsResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchCallHistoryIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchCallHistoryIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INCallRecordTypeOptionsResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V115))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to resolve call types for a history search.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchCallHistoryIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchCallHistoryIntentHandling_Extensions.ResolveCallTypes(MonoTouch.Intents.IINSearchCallHistoryIntentHandling,MonoTouch.Intents.INSearchCallHistoryIntent,System.Action{MonoTouch.Intents.INCallRecordTypeOptionsResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchCallHistoryIntentHandling" />
      </Targets>
      <Member MemberName="ResolveDateCreated">
        <MemberSignature Language="C#" Value="public static void ResolveDateCreated (this Intents.IINSearchCallHistoryIntentHandling This, Intents.INSearchCallHistoryIntent intent, Action&lt;Intents.INDateComponentsRangeResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveDateCreated(class Intents.IINSearchCallHistoryIntentHandling This, class Intents.INSearchCallHistoryIntent intent, class System.Action`1&lt;class Intents.INDateComponentsRangeResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchCallHistoryIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchCallHistoryIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INDateComponentsRangeResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V81))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the "date created" parameter of the search.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchCallHistoryIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchCallHistoryIntentHandling_Extensions.ResolveDateCreated(MonoTouch.Intents.IINSearchCallHistoryIntentHandling,MonoTouch.Intents.INSearchCallHistoryIntent,System.Action{MonoTouch.Intents.INDateComponentsRangeResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchCallHistoryIntentHandling" />
      </Targets>
      <Member MemberName="ResolveRecipient">
        <MemberSignature Language="C#" Value="public static void ResolveRecipient (this Intents.IINSearchCallHistoryIntentHandling This, Intents.INSearchCallHistoryIntent intent, Action&lt;Intents.INPersonResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveRecipient(class Intents.IINSearchCallHistoryIntentHandling This, class Intents.INSearchCallHistoryIntent intent, class System.Action`1&lt;class Intents.INPersonResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchCallHistoryIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchCallHistoryIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INPersonResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V76))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the recipient parameter of the search.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchCallHistoryIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchCallHistoryIntentHandling_Extensions.ResolveRecipient(MonoTouch.Intents.IINSearchCallHistoryIntentHandling,MonoTouch.Intents.INSearchCallHistoryIntent,System.Action{MonoTouch.Intents.INPersonResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchCallHistoryIntentHandling" />
      </Targets>
      <Member MemberName="ResolveUnseen">
        <MemberSignature Language="C#" Value="public static void ResolveUnseen (this Intents.IINSearchCallHistoryIntentHandling This, Intents.INSearchCallHistoryIntent intent, Action&lt;Intents.INBooleanResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveUnseen(class Intents.IINSearchCallHistoryIntentHandling This, class Intents.INSearchCallHistoryIntent intent, class System.Action`1&lt;class Intents.INBooleanResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchCallHistoryIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchCallHistoryIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INBooleanResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V116))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize resolution of whether the user or app may search for unseen calls.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchCallHistoryIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchCallHistoryIntentHandling_Extensions.ResolveUnseen(MonoTouch.Intents.IINSearchCallHistoryIntentHandling,MonoTouch.Intents.INSearchCallHistoryIntent,System.Action{MonoTouch.Intents.INBooleanResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchForAccountsIntentHandling" />
      </Targets>
      <Member MemberName="Confirm">
        <MemberSignature Language="C#" Value="public static void Confirm (this Intents.IINSearchForAccountsIntentHandling This, Intents.INSearchForAccountsIntent intent, Action&lt;Intents.INSearchForAccountsIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Confirm(class Intents.IINSearchForAccountsIntentHandling This, class Intents.INSearchForAccountsIntent intent, class System.Action`1&lt;class Intents.INSearchForAccountsIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchForAccountsIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchForAccountsIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSearchForAccountsIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V115))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to confirm whether local and remote resources are ready to perform the search.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchForAccountsIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchForAccountsIntentHandling_Extensions.Confirm(MonoTouch.Intents.IINSearchForAccountsIntentHandling,MonoTouch.Intents.INSearchForAccountsIntent,System.Action{MonoTouch.Intents.INSearchForAccountsIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchForAccountsIntentHandling" />
      </Targets>
      <Member MemberName="ResolveAccountNickname">
        <MemberSignature Language="C#" Value="public static void ResolveAccountNickname (this Intents.IINSearchForAccountsIntentHandling This, Intents.INSearchForAccountsIntent intent, Action&lt;Intents.INSpeakableStringResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveAccountNickname(class Intents.IINSearchForAccountsIntentHandling This, class Intents.INSearchForAccountsIntent intent, class System.Action`1&lt;class Intents.INSpeakableStringResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchForAccountsIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchForAccountsIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSpeakableStringResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V44))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize resolution of account nicknames.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchForAccountsIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchForAccountsIntentHandling_Extensions.ResolveAccountNickname(MonoTouch.Intents.IINSearchForAccountsIntentHandling,MonoTouch.Intents.INSearchForAccountsIntent,System.Action{MonoTouch.Intents.INSpeakableStringResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchForAccountsIntentHandling" />
      </Targets>
      <Member MemberName="ResolveAccountType">
        <MemberSignature Language="C#" Value="public static void ResolveAccountType (this Intents.IINSearchForAccountsIntentHandling This, Intents.INSearchForAccountsIntent intent, Action&lt;Intents.INAccountTypeResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveAccountType(class Intents.IINSearchForAccountsIntentHandling This, class Intents.INSearchForAccountsIntent intent, class System.Action`1&lt;class Intents.INAccountTypeResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchForAccountsIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchForAccountsIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INAccountTypeResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V117))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize resolution of account types.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchForAccountsIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchForAccountsIntentHandling_Extensions.ResolveAccountType(MonoTouch.Intents.IINSearchForAccountsIntentHandling,MonoTouch.Intents.INSearchForAccountsIntent,System.Action{MonoTouch.Intents.INAccountTypeResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchForAccountsIntentHandling" />
      </Targets>
      <Member MemberName="ResolveOrganizationName">
        <MemberSignature Language="C#" Value="public static void ResolveOrganizationName (this Intents.IINSearchForAccountsIntentHandling This, Intents.INSearchForAccountsIntent intent, Action&lt;Intents.INSpeakableStringResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveOrganizationName(class Intents.IINSearchForAccountsIntentHandling This, class Intents.INSearchForAccountsIntent intent, class System.Action`1&lt;class Intents.INSpeakableStringResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchForAccountsIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchForAccountsIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSpeakableStringResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V44))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize resolution of organization names.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchForAccountsIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchForAccountsIntentHandling_Extensions.ResolveOrganizationName(MonoTouch.Intents.IINSearchForAccountsIntentHandling,MonoTouch.Intents.INSearchForAccountsIntent,System.Action{MonoTouch.Intents.INSpeakableStringResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchForAccountsIntentHandling" />
      </Targets>
      <Member MemberName="ResolveRequestedBalanceType">
        <MemberSignature Language="C#" Value="public static void ResolveRequestedBalanceType (this Intents.IINSearchForAccountsIntentHandling This, Intents.INSearchForAccountsIntent intent, Action&lt;Intents.INBalanceTypeResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveRequestedBalanceType(class Intents.IINSearchForAccountsIntentHandling This, class Intents.INSearchForAccountsIntent intent, class System.Action`1&lt;class Intents.INBalanceTypeResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchForAccountsIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchForAccountsIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INBalanceTypeResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V118))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize resolution of requested balance types.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchForAccountsIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchForAccountsIntentHandling_Extensions.ResolveRequestedBalanceType(MonoTouch.Intents.IINSearchForAccountsIntentHandling,MonoTouch.Intents.INSearchForAccountsIntent,System.Action{MonoTouch.Intents.INBalanceTypeResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchForBillsIntentHandling" />
      </Targets>
      <Member MemberName="ConfirmSearch">
        <MemberSignature Language="C#" Value="public static void ConfirmSearch (this Intents.IINSearchForBillsIntentHandling This, Intents.INSearchForBillsIntent intent, Action&lt;Intents.INSearchForBillsIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfirmSearch(class Intents.IINSearchForBillsIntentHandling This, class Intents.INSearchForBillsIntent intent, class System.Action`1&lt;class Intents.INSearchForBillsIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchForBillsIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchForBillsIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSearchForBillsIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V92))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize search confirmation.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchForBillsIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchForBillsIntentHandling_Extensions.ConfirmSearch(MonoTouch.Intents.IINSearchForBillsIntentHandling,MonoTouch.Intents.INSearchForBillsIntent,System.Action{MonoTouch.Intents.INSearchForBillsIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchForBillsIntentHandling" />
      </Targets>
      <Member MemberName="HandleSearch">
        <MemberSignature Language="C#" Value="public static void HandleSearch (this Intents.IINSearchForBillsIntentHandling This, Intents.INSearchForBillsIntent intent, Action&lt;Intents.INSearchForBillsIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleSearch(class Intents.IINSearchForBillsIntentHandling This, class Intents.INSearchForBillsIntent intent, class System.Action`1&lt;class Intents.INSearchForBillsIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchForBillsIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchForBillsIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSearchForBillsIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V92))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize bill searches.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchForBillsIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchForBillsIntentHandling_Extensions.HandleSearch(MonoTouch.Intents.IINSearchForBillsIntentHandling,MonoTouch.Intents.INSearchForBillsIntent,System.Action{MonoTouch.Intents.INSearchForBillsIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchForBillsIntentHandling" />
      </Targets>
      <Member MemberName="ResolveBillPayee">
        <MemberSignature Language="C#" Value="public static void ResolveBillPayee (this Intents.IINSearchForBillsIntentHandling This, Intents.INSearchForBillsIntent intent, Action&lt;Intents.INBillPayeeResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveBillPayee(class Intents.IINSearchForBillsIntentHandling This, class Intents.INSearchForBillsIntent intent, class System.Action`1&lt;class Intents.INBillPayeeResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchForBillsIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchForBillsIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INBillPayeeResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V76))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize the resolution of the payee.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchForBillsIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchForBillsIntentHandling_Extensions.ResolveBillPayee(MonoTouch.Intents.IINSearchForBillsIntentHandling,MonoTouch.Intents.INSearchForBillsIntent,System.Action{MonoTouch.Intents.INBillPayeeResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchForBillsIntentHandling" />
      </Targets>
      <Member MemberName="ResolveBillType">
        <MemberSignature Language="C#" Value="public static void ResolveBillType (this Intents.IINSearchForBillsIntentHandling This, Intents.INSearchForBillsIntent intent, Action&lt;Intents.INBillTypeResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveBillType(class Intents.IINSearchForBillsIntentHandling This, class Intents.INSearchForBillsIntent intent, class System.Action`1&lt;class Intents.INBillTypeResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchForBillsIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchForBillsIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INBillTypeResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V80))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize the resolution of the bill type.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchForBillsIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchForBillsIntentHandling_Extensions.ResolveBillType(MonoTouch.Intents.IINSearchForBillsIntentHandling,MonoTouch.Intents.INSearchForBillsIntent,System.Action{MonoTouch.Intents.INBillTypeResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchForBillsIntentHandling" />
      </Targets>
      <Member MemberName="ResolveDueDateRange">
        <MemberSignature Language="C#" Value="public static void ResolveDueDateRange (this Intents.IINSearchForBillsIntentHandling This, Intents.INSearchForBillsIntent intent, Action&lt;Intents.INDateComponentsRangeResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveDueDateRange(class Intents.IINSearchForBillsIntentHandling This, class Intents.INSearchForBillsIntent intent, class System.Action`1&lt;class Intents.INDateComponentsRangeResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchForBillsIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchForBillsIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INDateComponentsRangeResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V79))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize the resolution of the range of due dates.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchForBillsIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchForBillsIntentHandling_Extensions.ResolveDueDateRange(MonoTouch.Intents.IINSearchForBillsIntentHandling,MonoTouch.Intents.INSearchForBillsIntent,System.Action{MonoTouch.Intents.INDateComponentsRangeResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchForBillsIntentHandling" />
      </Targets>
      <Member MemberName="ResolvePaymentDateRange">
        <MemberSignature Language="C#" Value="public static void ResolvePaymentDateRange (this Intents.IINSearchForBillsIntentHandling This, Intents.INSearchForBillsIntent intent, Action&lt;Intents.INDateComponentsRangeResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolvePaymentDateRange(class Intents.IINSearchForBillsIntentHandling This, class Intents.INSearchForBillsIntent intent, class System.Action`1&lt;class Intents.INDateComponentsRangeResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchForBillsIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchForBillsIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INDateComponentsRangeResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V79))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize the resolution of the date range of payments.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchForBillsIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchForBillsIntentHandling_Extensions.ResolvePaymentDateRange(MonoTouch.Intents.IINSearchForBillsIntentHandling,MonoTouch.Intents.INSearchForBillsIntent,System.Action{MonoTouch.Intents.INDateComponentsRangeResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchForBillsIntentHandling" />
      </Targets>
      <Member MemberName="ResolveStatus">
        <MemberSignature Language="C#" Value="public static void ResolveStatus (this Intents.IINSearchForBillsIntentHandling This, Intents.INSearchForBillsIntent intent, Action&lt;Intents.INPaymentStatusResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveStatus(class Intents.IINSearchForBillsIntentHandling This, class Intents.INSearchForBillsIntent intent, class System.Action`1&lt;class Intents.INPaymentStatusResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchForBillsIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchForBillsIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INPaymentStatusResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V93))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize the resolution of the bill status.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchForBillsIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchForBillsIntentHandling_Extensions.ResolveStatus(MonoTouch.Intents.IINSearchForBillsIntentHandling,MonoTouch.Intents.INSearchForBillsIntent,System.Action{MonoTouch.Intents.INPaymentStatusResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchForMessagesIntentHandling" />
      </Targets>
      <Member MemberName="ConfirmSearchForMessages">
        <MemberSignature Language="C#" Value="public static void ConfirmSearchForMessages (this Intents.IINSearchForMessagesIntentHandling This, Intents.INSearchForMessagesIntent intent, Action&lt;Intents.INSearchForMessagesIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfirmSearchForMessages(class Intents.IINSearchForMessagesIntentHandling This, class Intents.INSearchForMessagesIntent intent, class System.Action`1&lt;class Intents.INSearchForMessagesIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchForMessagesIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchForMessagesIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSearchForMessagesIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V66))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the confirmation of a message search.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchForMessagesIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchForMessagesIntentHandling_Extensions.ConfirmSearchForMessages(MonoTouch.Intents.IINSearchForMessagesIntentHandling,MonoTouch.Intents.INSearchForMessagesIntent,System.Action{MonoTouch.Intents.INSearchForMessagesIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchForMessagesIntentHandling" />
      </Targets>
      <Member MemberName="ResolveAttributes">
        <MemberSignature Language="C#" Value="public static void ResolveAttributes (this Intents.IINSearchForMessagesIntentHandling This, Intents.INSearchForMessagesIntent intent, Action&lt;Intents.INMessageAttributeOptionsResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveAttributes(class Intents.IINSearchForMessagesIntentHandling This, class Intents.INSearchForMessagesIntent intent, class System.Action`1&lt;class Intents.INMessageAttributeOptionsResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchForMessagesIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchForMessagesIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INMessageAttributeOptionsResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V83))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of attributes in the search.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchForMessagesIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchForMessagesIntentHandling_Extensions.ResolveAttributes(MonoTouch.Intents.IINSearchForMessagesIntentHandling,MonoTouch.Intents.INSearchForMessagesIntent,System.Action{MonoTouch.Intents.INMessageAttributeOptionsResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchForMessagesIntentHandling" />
      </Targets>
      <Member MemberName="ResolveDateTimeRange">
        <MemberSignature Language="C#" Value="public static void ResolveDateTimeRange (this Intents.IINSearchForMessagesIntentHandling This, Intents.INSearchForMessagesIntent intent, Action&lt;Intents.INDateComponentsRangeResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveDateTimeRange(class Intents.IINSearchForMessagesIntentHandling This, class Intents.INSearchForMessagesIntent intent, class System.Action`1&lt;class Intents.INDateComponentsRangeResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchForMessagesIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchForMessagesIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INDateComponentsRangeResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V81))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the date range used in the search.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchForMessagesIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchForMessagesIntentHandling_Extensions.ResolveDateTimeRange(MonoTouch.Intents.IINSearchForMessagesIntentHandling,MonoTouch.Intents.INSearchForMessagesIntent,System.Action{MonoTouch.Intents.INDateComponentsRangeResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchForMessagesIntentHandling" />
      </Targets>
      <Member MemberName="ResolveGroupNames">
        <MemberSignature Language="C#" Value="public static void ResolveGroupNames (this Intents.IINSearchForMessagesIntentHandling This, Intents.INSearchForMessagesIntent intent, Action&lt;Intents.INStringResolutionResult[]&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveGroupNames(class Intents.IINSearchForMessagesIntentHandling This, class Intents.INSearchForMessagesIntent intent, class System.Action`1&lt;class Intents.INStringResolutionResult[]&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchForMessagesIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchForMessagesIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INStringResolutionResult[]&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V84))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of the group names used in the search.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchForMessagesIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchForMessagesIntentHandling_Extensions.ResolveGroupNames(MonoTouch.Intents.IINSearchForMessagesIntentHandling,MonoTouch.Intents.INSearchForMessagesIntent,System.Action{MonoTouch.Intents.INStringResolutionResult[]})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchForMessagesIntentHandling" />
      </Targets>
      <Member MemberName="ResolveRecipients">
        <MemberSignature Language="C#" Value="public static void ResolveRecipients (this Intents.IINSearchForMessagesIntentHandling This, Intents.INSearchForMessagesIntent intent, Action&lt;Intents.INPersonResolutionResult[]&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveRecipients(class Intents.IINSearchForMessagesIntentHandling This, class Intents.INSearchForMessagesIntent intent, class System.Action`1&lt;class Intents.INPersonResolutionResult[]&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchForMessagesIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchForMessagesIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INPersonResolutionResult[]&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V82))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of recipients in the message search.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchForMessagesIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchForMessagesIntentHandling_Extensions.ResolveRecipients(MonoTouch.Intents.IINSearchForMessagesIntentHandling,MonoTouch.Intents.INSearchForMessagesIntent,System.Action{MonoTouch.Intents.INPersonResolutionResult[]})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchForMessagesIntentHandling" />
      </Targets>
      <Member MemberName="ResolveSenders">
        <MemberSignature Language="C#" Value="public static void ResolveSenders (this Intents.IINSearchForMessagesIntentHandling This, Intents.INSearchForMessagesIntent intent, Action&lt;Intents.INPersonResolutionResult[]&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveSenders(class Intents.IINSearchForMessagesIntentHandling This, class Intents.INSearchForMessagesIntent intent, class System.Action`1&lt;class Intents.INPersonResolutionResult[]&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchForMessagesIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchForMessagesIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INPersonResolutionResult[]&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V82))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of senders in the message search.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchForMessagesIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchForMessagesIntentHandling_Extensions.ResolveSenders(MonoTouch.Intents.IINSearchForMessagesIntentHandling,MonoTouch.Intents.INSearchForMessagesIntent,System.Action{MonoTouch.Intents.INPersonResolutionResult[]})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchForMessagesIntentHandling" />
      </Targets>
      <Member MemberName="ResolveSpeakableGroupNames">
        <MemberSignature Language="C#" Value="public static void ResolveSpeakableGroupNames (this Intents.IINSearchForMessagesIntentHandling This, Intents.INSearchForMessagesIntent intent, Action&lt;Intents.INSpeakableStringResolutionResult[]&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveSpeakableGroupNames(class Intents.IINSearchForMessagesIntentHandling This, class Intents.INSearchForMessagesIntent intent, class System.Action`1&lt;class Intents.INSpeakableStringResolutionResult[]&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchForMessagesIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchForMessagesIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSpeakableStringResolutionResult[]&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V48))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of speakable names for the groups that were named as recipients.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchForMessagesIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchForMessagesIntentHandling_Extensions.ResolveSpeakableGroupNames(MonoTouch.Intents.IINSearchForMessagesIntentHandling,MonoTouch.Intents.INSearchForMessagesIntent,System.Action{MonoTouch.Intents.INSpeakableStringResolutionResult[]})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchForNotebookItemsIntentHandling" />
      </Targets>
      <Member MemberName="Confirm">
        <MemberSignature Language="C#" Value="public static void Confirm (this Intents.IINSearchForNotebookItemsIntentHandling This, Intents.INSearchForNotebookItemsIntent intent, Action&lt;Intents.INSearchForNotebookItemsIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Confirm(class Intents.IINSearchForNotebookItemsIntentHandling This, class Intents.INSearchForNotebookItemsIntent intent, class System.Action`1&lt;class Intents.INSearchForNotebookItemsIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchForNotebookItemsIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchForNotebookItemsIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSearchForNotebookItemsIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V91))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to confirm whether local and remote resources are ready to perform the search.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchForNotebookItemsIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchForNotebookItemsIntentHandling_Extensions.Confirm(MonoTouch.Intents.IINSearchForNotebookItemsIntentHandling,MonoTouch.Intents.INSearchForNotebookItemsIntent,System.Action{MonoTouch.Intents.INSearchForNotebookItemsIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchForNotebookItemsIntentHandling" />
      </Targets>
      <Member MemberName="ResolveContent">
        <MemberSignature Language="C#" Value="public static void ResolveContent (this Intents.IINSearchForNotebookItemsIntentHandling This, Intents.INSearchForNotebookItemsIntent intent, Action&lt;Intents.INStringResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveContent(class Intents.IINSearchForNotebookItemsIntentHandling This, class Intents.INSearchForNotebookItemsIntent intent, class System.Action`1&lt;class Intents.INStringResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchForNotebookItemsIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchForNotebookItemsIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INStringResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V59))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize resolution of the search string.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchForNotebookItemsIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchForNotebookItemsIntentHandling_Extensions.ResolveContent(MonoTouch.Intents.IINSearchForNotebookItemsIntentHandling,MonoTouch.Intents.INSearchForNotebookItemsIntent,System.Action{MonoTouch.Intents.INStringResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchForNotebookItemsIntentHandling" />
      </Targets>
      <Member MemberName="ResolveDateSearchType">
        <MemberSignature Language="C#" Value="public static void ResolveDateSearchType (this Intents.IINSearchForNotebookItemsIntentHandling This, Intents.INSearchForNotebookItemsIntent intent, Action&lt;Intents.INDateSearchTypeResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveDateSearchType(class Intents.IINSearchForNotebookItemsIntentHandling This, class Intents.INSearchForNotebookItemsIntent intent, class System.Action`1&lt;class Intents.INDateSearchTypeResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchForNotebookItemsIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchForNotebookItemsIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INDateSearchTypeResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V127))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize resolution of the date type.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchForNotebookItemsIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchForNotebookItemsIntentHandling_Extensions.ResolveDateSearchType(MonoTouch.Intents.IINSearchForNotebookItemsIntentHandling,MonoTouch.Intents.INSearchForNotebookItemsIntent,System.Action{MonoTouch.Intents.INDateSearchTypeResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchForNotebookItemsIntentHandling" />
      </Targets>
      <Member MemberName="ResolveDateTime">
        <MemberSignature Language="C#" Value="public static void ResolveDateTime (this Intents.IINSearchForNotebookItemsIntentHandling This, Intents.INSearchForNotebookItemsIntent intent, Action&lt;Intents.INDateComponentsRangeResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveDateTime(class Intents.IINSearchForNotebookItemsIntentHandling This, class Intents.INSearchForNotebookItemsIntent intent, class System.Action`1&lt;class Intents.INDateComponentsRangeResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchForNotebookItemsIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchForNotebookItemsIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INDateComponentsRangeResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V97))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize resolution of the search time and date.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchForNotebookItemsIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchForNotebookItemsIntentHandling_Extensions.ResolveDateTime(MonoTouch.Intents.IINSearchForNotebookItemsIntentHandling,MonoTouch.Intents.INSearchForNotebookItemsIntent,System.Action{MonoTouch.Intents.INDateComponentsRangeResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchForNotebookItemsIntentHandling" />
      </Targets>
      <Member MemberName="ResolveItemType">
        <MemberSignature Language="C#" Value="public static void ResolveItemType (this Intents.IINSearchForNotebookItemsIntentHandling This, Intents.INSearchForNotebookItemsIntent intent, Action&lt;Intents.INNotebookItemTypeResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveItemType(class Intents.IINSearchForNotebookItemsIntentHandling This, class Intents.INSearchForNotebookItemsIntent intent, class System.Action`1&lt;class Intents.INNotebookItemTypeResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchForNotebookItemsIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchForNotebookItemsIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INNotebookItemTypeResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V124))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize resolution of the type of items to search for.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchForNotebookItemsIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchForNotebookItemsIntentHandling_Extensions.ResolveItemType(MonoTouch.Intents.IINSearchForNotebookItemsIntentHandling,MonoTouch.Intents.INSearchForNotebookItemsIntent,System.Action{MonoTouch.Intents.INNotebookItemTypeResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchForNotebookItemsIntentHandling" />
      </Targets>
      <Member MemberName="ResolveLocation">
        <MemberSignature Language="C#" Value="public static void ResolveLocation (this Intents.IINSearchForNotebookItemsIntentHandling This, Intents.INSearchForNotebookItemsIntent intent, Action&lt;Intents.INPlacemarkResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveLocation(class Intents.IINSearchForNotebookItemsIntentHandling This, class Intents.INSearchForNotebookItemsIntent intent, class System.Action`1&lt;class Intents.INPlacemarkResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchForNotebookItemsIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchForNotebookItemsIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INPlacemarkResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V86))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize resolution of the location of a location-based search.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchForNotebookItemsIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchForNotebookItemsIntentHandling_Extensions.ResolveLocation(MonoTouch.Intents.IINSearchForNotebookItemsIntentHandling,MonoTouch.Intents.INSearchForNotebookItemsIntent,System.Action{MonoTouch.Intents.INPlacemarkResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchForNotebookItemsIntentHandling" />
      </Targets>
      <Member MemberName="ResolveLocationSearchType">
        <MemberSignature Language="C#" Value="public static void ResolveLocationSearchType (this Intents.IINSearchForNotebookItemsIntentHandling This, Intents.INSearchForNotebookItemsIntent intent, Action&lt;Intents.INLocationSearchTypeResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveLocationSearchType(class Intents.IINSearchForNotebookItemsIntentHandling This, class Intents.INSearchForNotebookItemsIntent intent, class System.Action`1&lt;class Intents.INLocationSearchTypeResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchForNotebookItemsIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchForNotebookItemsIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INLocationSearchTypeResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V126))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize resolution of the location search type.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchForNotebookItemsIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchForNotebookItemsIntentHandling_Extensions.ResolveLocationSearchType(MonoTouch.Intents.IINSearchForNotebookItemsIntentHandling,MonoTouch.Intents.INSearchForNotebookItemsIntent,System.Action{MonoTouch.Intents.INLocationSearchTypeResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchForNotebookItemsIntentHandling" />
      </Targets>
      <Member MemberName="ResolveStatus">
        <MemberSignature Language="C#" Value="public static void ResolveStatus (this Intents.IINSearchForNotebookItemsIntentHandling This, Intents.INSearchForNotebookItemsIntent intent, Action&lt;Intents.INTaskStatusResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveStatus(class Intents.IINSearchForNotebookItemsIntentHandling This, class Intents.INSearchForNotebookItemsIntent intent, class System.Action`1&lt;class Intents.INTaskStatusResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchForNotebookItemsIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchForNotebookItemsIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INTaskStatusResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V125))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize resolution of the search status.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchForNotebookItemsIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchForNotebookItemsIntentHandling_Extensions.ResolveStatus(MonoTouch.Intents.IINSearchForNotebookItemsIntentHandling,MonoTouch.Intents.INSearchForNotebookItemsIntent,System.Action{MonoTouch.Intents.INTaskStatusResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchForNotebookItemsIntentHandling" />
      </Targets>
      <Member MemberName="ResolveTitle">
        <MemberSignature Language="C#" Value="public static void ResolveTitle (this Intents.IINSearchForNotebookItemsIntentHandling This, Intents.INSearchForNotebookItemsIntent intent, Action&lt;Intents.INSpeakableStringResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveTitle(class Intents.IINSearchForNotebookItemsIntentHandling This, class Intents.INSearchForNotebookItemsIntent intent, class System.Action`1&lt;class Intents.INSpeakableStringResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchForNotebookItemsIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchForNotebookItemsIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSpeakableStringResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V44))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize resolution of the title to search for.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchForNotebookItemsIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchForNotebookItemsIntentHandling_Extensions.ResolveTitle(MonoTouch.Intents.IINSearchForNotebookItemsIntentHandling,MonoTouch.Intents.INSearchForNotebookItemsIntent,System.Action{MonoTouch.Intents.INSpeakableStringResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchForPhotosIntentHandling" />
      </Targets>
      <Member MemberName="ConfirmSearchForPhotos">
        <MemberSignature Language="C#" Value="public static void ConfirmSearchForPhotos (this Intents.IINSearchForPhotosIntentHandling This, Intents.INSearchForPhotosIntent intent, Action&lt;Intents.INSearchForPhotosIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfirmSearchForPhotos(class Intents.IINSearchForPhotosIntentHandling This, class Intents.INSearchForPhotosIntent intent, class System.Action`1&lt;class Intents.INSearchForPhotosIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchForPhotosIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchForPhotosIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSearchForPhotosIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V72))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the confirmation of a photo search.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchForPhotosIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchForPhotosIntentHandling_Extensions.ConfirmSearchForPhotos(MonoTouch.Intents.IINSearchForPhotosIntentHandling,MonoTouch.Intents.INSearchForPhotosIntent,System.Action{MonoTouch.Intents.INSearchForPhotosIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchForPhotosIntentHandling" />
      </Targets>
      <Member MemberName="ResolveAlbumName">
        <MemberSignature Language="C#" Value="public static void ResolveAlbumName (this Intents.IINSearchForPhotosIntentHandling This, Intents.INSearchForPhotosIntent intent, Action&lt;Intents.INStringResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveAlbumName(class Intents.IINSearchForPhotosIntentHandling This, class Intents.INSearchForPhotosIntent intent, class System.Action`1&lt;class Intents.INStringResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchForPhotosIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchForPhotosIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INStringResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V46))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resoluition of a photo album name.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchForPhotosIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchForPhotosIntentHandling_Extensions.ResolveAlbumName(MonoTouch.Intents.IINSearchForPhotosIntentHandling,MonoTouch.Intents.INSearchForPhotosIntent,System.Action{MonoTouch.Intents.INStringResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchForPhotosIntentHandling" />
      </Targets>
      <Member MemberName="ResolveDateCreated">
        <MemberSignature Language="C#" Value="public static void ResolveDateCreated (this Intents.IINSearchForPhotosIntentHandling This, Intents.INSearchForPhotosIntent intent, Action&lt;Intents.INDateComponentsRangeResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveDateCreated(class Intents.IINSearchForPhotosIntentHandling This, class Intents.INSearchForPhotosIntent intent, class System.Action`1&lt;class Intents.INDateComponentsRangeResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchForPhotosIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchForPhotosIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INDateComponentsRangeResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V81))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of a date-created variable.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchForPhotosIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchForPhotosIntentHandling_Extensions.ResolveDateCreated(MonoTouch.Intents.IINSearchForPhotosIntentHandling,MonoTouch.Intents.INSearchForPhotosIntent,System.Action{MonoTouch.Intents.INDateComponentsRangeResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchForPhotosIntentHandling" />
      </Targets>
      <Member MemberName="ResolveLocationCreated">
        <MemberSignature Language="C#" Value="public static void ResolveLocationCreated (this Intents.IINSearchForPhotosIntentHandling This, Intents.INSearchForPhotosIntent intent, Action&lt;Intents.INPlacemarkResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveLocationCreated(class Intents.IINSearchForPhotosIntentHandling This, class Intents.INSearchForPhotosIntent intent, class System.Action`1&lt;class Intents.INPlacemarkResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchForPhotosIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchForPhotosIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INPlacemarkResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V65))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of the location-created variable.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchForPhotosIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchForPhotosIntentHandling_Extensions.ResolveLocationCreated(MonoTouch.Intents.IINSearchForPhotosIntentHandling,MonoTouch.Intents.INSearchForPhotosIntent,System.Action{MonoTouch.Intents.INPlacemarkResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchForPhotosIntentHandling" />
      </Targets>
      <Member MemberName="ResolvePeopleInPhoto">
        <MemberSignature Language="C#" Value="public static void ResolvePeopleInPhoto (this Intents.IINSearchForPhotosIntentHandling This, Intents.INSearchForPhotosIntent intent, Action&lt;Intents.INPersonResolutionResult[]&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolvePeopleInPhoto(class Intents.IINSearchForPhotosIntentHandling This, class Intents.INSearchForPhotosIntent intent, class System.Action`1&lt;class Intents.INPersonResolutionResult[]&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchForPhotosIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchForPhotosIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INPersonResolutionResult[]&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V82))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of people in the photo.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchForPhotosIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchForPhotosIntentHandling_Extensions.ResolvePeopleInPhoto(MonoTouch.Intents.IINSearchForPhotosIntentHandling,MonoTouch.Intents.INSearchForPhotosIntent,System.Action{MonoTouch.Intents.INPersonResolutionResult[]})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSearchForPhotosIntentHandling" />
      </Targets>
      <Member MemberName="ResolveSearchTerms">
        <MemberSignature Language="C#" Value="public static void ResolveSearchTerms (this Intents.IINSearchForPhotosIntentHandling This, Intents.INSearchForPhotosIntent intent, Action&lt;Intents.INStringResolutionResult[]&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveSearchTerms(class Intents.IINSearchForPhotosIntentHandling This, class Intents.INSearchForPhotosIntent intent, class System.Action`1&lt;class Intents.INStringResolutionResult[]&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSearchForPhotosIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSearchForPhotosIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INStringResolutionResult[]&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V123))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize resolution of the search terms.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSearchForPhotosIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSearchForPhotosIntentHandling_Extensions.ResolveSearchTerms(MonoTouch.Intents.IINSearchForPhotosIntentHandling,MonoTouch.Intents.INSearchForPhotosIntent,System.Action{MonoTouch.Intents.INStringResolutionResult[]})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSendMessageIntentHandling" />
      </Targets>
      <Member MemberName="ConfirmSendMessage">
        <MemberSignature Language="C#" Value="public static void ConfirmSendMessage (this Intents.IINSendMessageIntentHandling This, Intents.INSendMessageIntent intent, Action&lt;Intents.INSendMessageIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfirmSendMessage(class Intents.IINSendMessageIntentHandling This, class Intents.INSendMessageIntent intent, class System.Action`1&lt;class Intents.INSendMessageIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSendMessageIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSendMessageIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSendMessageIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V67))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the confirmation to send a message.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSendMessageIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSendMessageIntentHandling_Extensions.ConfirmSendMessage(MonoTouch.Intents.IINSendMessageIntentHandling,MonoTouch.Intents.INSendMessageIntent,System.Action{MonoTouch.Intents.INSendMessageIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSendMessageIntentHandling" />
      </Targets>
      <Member MemberName="ResolveContent">
        <MemberSignature Language="C#" Value="public static void ResolveContent (this Intents.IINSendMessageIntentHandling This, Intents.INSendMessageIntent intent, Action&lt;Intents.INStringResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveContent(class Intents.IINSendMessageIntentHandling This, class Intents.INSendMessageIntent intent, class System.Action`1&lt;class Intents.INStringResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSendMessageIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSendMessageIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INStringResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V46))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of the content of a message.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSendMessageIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSendMessageIntentHandling_Extensions.ResolveContent(MonoTouch.Intents.IINSendMessageIntentHandling,MonoTouch.Intents.INSendMessageIntent,System.Action{MonoTouch.Intents.INStringResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSendMessageIntentHandling" />
      </Targets>
      <Member MemberName="ResolveGroupName">
        <MemberSignature Language="C#" Value="public static void ResolveGroupName (this Intents.IINSendMessageIntentHandling This, Intents.INSendMessageIntent intent, Action&lt;Intents.INStringResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveGroupName(class Intents.IINSendMessageIntentHandling This, class Intents.INSendMessageIntent intent, class System.Action`1&lt;class Intents.INStringResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSendMessageIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSendMessageIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INStringResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V46))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of the group to which the message will be sent.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSendMessageIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSendMessageIntentHandling_Extensions.ResolveGroupName(MonoTouch.Intents.IINSendMessageIntentHandling,MonoTouch.Intents.INSendMessageIntent,System.Action{MonoTouch.Intents.INStringResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSendMessageIntentHandling" />
      </Targets>
      <Member MemberName="ResolveRecipients">
        <MemberSignature Language="C#" Value="public static void ResolveRecipients (this Intents.IINSendMessageIntentHandling This, Intents.INSendMessageIntent intent, Action&lt;Intents.INPersonResolutionResult[]&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveRecipients(class Intents.IINSendMessageIntentHandling This, class Intents.INSendMessageIntent intent, class System.Action`1&lt;class Intents.INPersonResolutionResult[]&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSendMessageIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSendMessageIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INPersonResolutionResult[]&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V82))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize the resolution of message recipients.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSendMessageIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSendMessageIntentHandling_Extensions.ResolveRecipients(MonoTouch.Intents.IINSendMessageIntentHandling,MonoTouch.Intents.INSendMessageIntent,System.Action{MonoTouch.Intents.INPersonResolutionResult[]})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSendMessageIntentHandling" />
      </Targets>
      <Member MemberName="ResolveRecipients">
        <MemberSignature Language="C#" Value="public static void ResolveRecipients (this Intents.IINSendMessageIntentHandling This, Intents.INSendMessageIntent intent, Action&lt;Intents.INSendMessageRecipientResolutionResult[]&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveRecipients(class Intents.IINSendMessageIntentHandling This, class Intents.INSendMessageIntent intent, class System.Action`1&lt;class Intents.INSendMessageRecipientResolutionResult[]&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSendMessageIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSendMessageIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSendMessageRecipientResolutionResult[]&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V128))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize the resolution of message recipients.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSendMessageIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSendMessageIntentHandling_Extensions.ResolveRecipients(MonoTouch.Intents.IINSendMessageIntentHandling,MonoTouch.Intents.INSendMessageIntent,System.Action{MonoTouch.Intents.INSendMessageRecipientResolutionResult[]})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSendMessageIntentHandling" />
      </Targets>
      <Member MemberName="ResolveSpeakableGroupName">
        <MemberSignature Language="C#" Value="public static void ResolveSpeakableGroupName (this Intents.IINSendMessageIntentHandling This, Intents.INSendMessageIntent intent, Action&lt;Intents.INSpeakableStringResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveSpeakableGroupName(class Intents.IINSendMessageIntentHandling This, class Intents.INSendMessageIntent intent, class System.Action`1&lt;class Intents.INSpeakableStringResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSendMessageIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSendMessageIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSpeakableStringResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V44))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize the resolution of the speakable group name.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSendMessageIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSendMessageIntentHandling_Extensions.ResolveSpeakableGroupName(MonoTouch.Intents.IINSendMessageIntentHandling,MonoTouch.Intents.INSendMessageIntent,System.Action{MonoTouch.Intents.INSpeakableStringResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSendPaymentIntentHandling" />
      </Targets>
      <Member MemberName="ConfirmSendPayment">
        <MemberSignature Language="C#" Value="public static void ConfirmSendPayment (this Intents.IINSendPaymentIntentHandling This, Intents.INSendPaymentIntent intent, Action&lt;Intents.INSendPaymentIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfirmSendPayment(class Intents.IINSendPaymentIntentHandling This, class Intents.INSendPaymentIntent intent, class System.Action`1&lt;class Intents.INSendPaymentIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSendPaymentIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSendPaymentIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSendPaymentIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V71))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the confirmation of a request to send a payment.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSendPaymentIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSendPaymentIntentHandling_Extensions.ConfirmSendPayment(MonoTouch.Intents.IINSendPaymentIntentHandling,MonoTouch.Intents.INSendPaymentIntent,System.Action{MonoTouch.Intents.INSendPaymentIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSendPaymentIntentHandling" />
      </Targets>
      <Member MemberName="ResolveCurrencyAmount">
        <MemberSignature Language="C#" Value="public static void ResolveCurrencyAmount (this Intents.IINSendPaymentIntentHandling This, Intents.INSendPaymentIntent intent, Action&lt;Intents.INCurrencyAmountResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveCurrencyAmount(class Intents.IINSendPaymentIntentHandling This, class Intents.INSendPaymentIntent intent, class System.Action`1&lt;class Intents.INCurrencyAmountResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSendPaymentIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSendPaymentIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INCurrencyAmountResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V77))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of a currency amount.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSendPaymentIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSendPaymentIntentHandling_Extensions.ResolveCurrencyAmount(MonoTouch.Intents.IINSendPaymentIntentHandling,MonoTouch.Intents.INSendPaymentIntent,System.Action{MonoTouch.Intents.INCurrencyAmountResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSendPaymentIntentHandling" />
      </Targets>
      <Member MemberName="ResolveCurrencyAmount">
        <MemberSignature Language="C#" Value="public static void ResolveCurrencyAmount (this Intents.IINSendPaymentIntentHandling This, Intents.INSendPaymentIntent intent, Action&lt;Intents.INSendPaymentCurrencyAmountResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveCurrencyAmount(class Intents.IINSendPaymentIntentHandling This, class Intents.INSendPaymentIntent intent, class System.Action`1&lt;class Intents.INSendPaymentCurrencyAmountResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSendPaymentIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSendPaymentIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSendPaymentCurrencyAmountResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V130))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize resolution of a currency and amount.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSendPaymentIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSendPaymentIntentHandling_Extensions.ResolveCurrencyAmount(MonoTouch.Intents.IINSendPaymentIntentHandling,MonoTouch.Intents.INSendPaymentIntent,System.Action{MonoTouch.Intents.INSendPaymentCurrencyAmountResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSendPaymentIntentHandling" />
      </Targets>
      <Member MemberName="ResolveNote">
        <MemberSignature Language="C#" Value="public static void ResolveNote (this Intents.IINSendPaymentIntentHandling This, Intents.INSendPaymentIntent intent, Action&lt;Intents.INStringResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveNote(class Intents.IINSendPaymentIntentHandling This, class Intents.INSendPaymentIntent intent, class System.Action`1&lt;class Intents.INStringResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSendPaymentIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSendPaymentIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INStringResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V46))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of a note associated with the payment.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSendPaymentIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSendPaymentIntentHandling_Extensions.ResolveNote(MonoTouch.Intents.IINSendPaymentIntentHandling,MonoTouch.Intents.INSendPaymentIntent,System.Action{MonoTouch.Intents.INStringResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSendPaymentIntentHandling" />
      </Targets>
      <Member MemberName="ResolvePayee">
        <MemberSignature Language="C#" Value="public static void ResolvePayee (this Intents.IINSendPaymentIntentHandling This, Intents.INSendPaymentIntent intent, Action&lt;Intents.INPersonResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolvePayee(class Intents.IINSendPaymentIntentHandling This, class Intents.INSendPaymentIntent intent, class System.Action`1&lt;class Intents.INPersonResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSendPaymentIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSendPaymentIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INPersonResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V76))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of the payee.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSendPaymentIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSendPaymentIntentHandling_Extensions.ResolvePayee(MonoTouch.Intents.IINSendPaymentIntentHandling,MonoTouch.Intents.INSendPaymentIntent,System.Action{MonoTouch.Intents.INPersonResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSendPaymentIntentHandling" />
      </Targets>
      <Member MemberName="ResolvePayee">
        <MemberSignature Language="C#" Value="public static void ResolvePayee (this Intents.IINSendPaymentIntentHandling This, Intents.INSendPaymentIntent intent, Action&lt;Intents.INSendPaymentPayeeResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolvePayee(class Intents.IINSendPaymentIntentHandling This, class Intents.INSendPaymentIntent intent, class System.Action`1&lt;class Intents.INSendPaymentPayeeResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSendPaymentIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSendPaymentIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSendPaymentPayeeResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V129))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize resolution of the payee.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSendPaymentIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSendPaymentIntentHandling_Extensions.ResolvePayee(MonoTouch.Intents.IINSendPaymentIntentHandling,MonoTouch.Intents.INSendPaymentIntent,System.Action{MonoTouch.Intents.INSendPaymentPayeeResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSendRideFeedbackIntentHandling" />
      </Targets>
      <Member MemberName="Confirm">
        <MemberSignature Language="C#" Value="public static void Confirm (this Intents.IINSendRideFeedbackIntentHandling This, Intents.INSendRideFeedbackIntent sendRideFeedbackIntent, Action&lt;Intents.INSendRideFeedbackIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Confirm(class Intents.IINSendRideFeedbackIntentHandling This, class Intents.INSendRideFeedbackIntent sendRideFeedbackIntent, class System.Action`1&lt;class Intents.INSendRideFeedbackIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSendRideFeedbackIntentHandling" RefType="this" />
          <Parameter Name="sendRideFeedbackIntent" Type="MonoTouch.Intents.INSendRideFeedbackIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSendRideFeedbackIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V130))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="sendRideFeedbackIntent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSendRideFeedbackIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSendRideFeedbackIntentHandling_Extensions.Confirm(MonoTouch.Intents.IINSendRideFeedbackIntentHandling,MonoTouch.Intents.INSendRideFeedbackIntent,System.Action{MonoTouch.Intents.INSendRideFeedbackIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetAudioSourceInCarIntentHandling" />
      </Targets>
      <Member MemberName="ConfirmSetAudioSourceInCar">
        <MemberSignature Language="C#" Value="public static void ConfirmSetAudioSourceInCar (this Intents.IINSetAudioSourceInCarIntentHandling This, Intents.INSetAudioSourceInCarIntent intent, Action&lt;Intents.INSetAudioSourceInCarIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfirmSetAudioSourceInCar(class Intents.IINSetAudioSourceInCarIntentHandling This, class Intents.INSetAudioSourceInCarIntent intent, class System.Action`1&lt;class Intents.INSetAudioSourceInCarIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetAudioSourceInCarIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetAudioSourceInCarIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSetAudioSourceInCarIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V53))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the confirmation of the audio source.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetAudioSourceInCarIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetAudioSourceInCarIntentHandling_Extensions.ConfirmSetAudioSourceInCar(MonoTouch.Intents.IINSetAudioSourceInCarIntentHandling,MonoTouch.Intents.INSetAudioSourceInCarIntent,System.Action{MonoTouch.Intents.INSetAudioSourceInCarIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetAudioSourceInCarIntentHandling" />
      </Targets>
      <Member MemberName="ResolveAudioSource">
        <MemberSignature Language="C#" Value="public static void ResolveAudioSource (this Intents.IINSetAudioSourceInCarIntentHandling This, Intents.INSetAudioSourceInCarIntent intent, Action&lt;Intents.INCarAudioSourceResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveAudioSource(class Intents.IINSetAudioSourceInCarIntentHandling This, class Intents.INSetAudioSourceInCarIntent intent, class System.Action`1&lt;class Intents.INCarAudioSourceResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetAudioSourceInCarIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetAudioSourceInCarIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INCarAudioSourceResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V85))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of the requested audio source.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetAudioSourceInCarIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetAudioSourceInCarIntentHandling_Extensions.ResolveAudioSource(MonoTouch.Intents.IINSetAudioSourceInCarIntentHandling,MonoTouch.Intents.INSetAudioSourceInCarIntent,System.Action{MonoTouch.Intents.INCarAudioSourceResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetAudioSourceInCarIntentHandling" />
      </Targets>
      <Member MemberName="ResolveRelativeAudioSourceReference">
        <MemberSignature Language="C#" Value="public static void ResolveRelativeAudioSourceReference (this Intents.IINSetAudioSourceInCarIntentHandling This, Intents.INSetAudioSourceInCarIntent intent, Action&lt;Intents.INRelativeReferenceResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveRelativeAudioSourceReference(class Intents.IINSetAudioSourceInCarIntentHandling This, class Intents.INSetAudioSourceInCarIntent intent, class System.Action`1&lt;class Intents.INRelativeReferenceResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetAudioSourceInCarIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetAudioSourceInCarIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INRelativeReferenceResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V86))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of a relative audio source (e.g, "next," "previous," etc.).</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetAudioSourceInCarIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetAudioSourceInCarIntentHandling_Extensions.ResolveRelativeAudioSourceReference(MonoTouch.Intents.IINSetAudioSourceInCarIntentHandling,MonoTouch.Intents.INSetAudioSourceInCarIntent,System.Action{MonoTouch.Intents.INRelativeReferenceResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetCarLockStatusIntentHandling" />
      </Targets>
      <Member MemberName="ConfirmSetCarLockStatus">
        <MemberSignature Language="C#" Value="public static void ConfirmSetCarLockStatus (this Intents.IINSetCarLockStatusIntentHandling This, Intents.INSetCarLockStatusIntent intent, Action&lt;Intents.INSetCarLockStatusIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfirmSetCarLockStatus(class Intents.IINSetCarLockStatusIntentHandling This, class Intents.INSetCarLockStatusIntent intent, class System.Action`1&lt;class Intents.INSetCarLockStatusIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetCarLockStatusIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetCarLockStatusIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSetCarLockStatusIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V56))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize confirmation of whether the app can lock and unlock the car.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetCarLockStatusIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetCarLockStatusIntentHandling_Extensions.ConfirmSetCarLockStatus(MonoTouch.Intents.IINSetCarLockStatusIntentHandling,MonoTouch.Intents.INSetCarLockStatusIntent,System.Action{MonoTouch.Intents.INSetCarLockStatusIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetCarLockStatusIntentHandling" />
      </Targets>
      <Member MemberName="ResolveCarName">
        <MemberSignature Language="C#" Value="public static void ResolveCarName (this Intents.IINSetCarLockStatusIntentHandling This, Intents.INSetCarLockStatusIntent intent, Action&lt;Intents.INSpeakableStringResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveCarName(class Intents.IINSetCarLockStatusIntentHandling This, class Intents.INSetCarLockStatusIntent intent, class System.Action`1&lt;class Intents.INSpeakableStringResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetCarLockStatusIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetCarLockStatusIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSpeakableStringResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V42))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize resolution of the car name.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetCarLockStatusIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetCarLockStatusIntentHandling_Extensions.ResolveCarName(MonoTouch.Intents.IINSetCarLockStatusIntentHandling,MonoTouch.Intents.INSetCarLockStatusIntent,System.Action{MonoTouch.Intents.INSpeakableStringResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetCarLockStatusIntentHandling" />
      </Targets>
      <Member MemberName="ResolveLocked">
        <MemberSignature Language="C#" Value="public static void ResolveLocked (this Intents.IINSetCarLockStatusIntentHandling This, Intents.INSetCarLockStatusIntent intent, Action&lt;Intents.INBooleanResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveLocked(class Intents.IINSetCarLockStatusIntentHandling This, class Intents.INSetCarLockStatusIntent intent, class System.Action`1&lt;class Intents.INBooleanResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetCarLockStatusIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetCarLockStatusIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INBooleanResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V99))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize resolution of the lock status.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetCarLockStatusIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetCarLockStatusIntentHandling_Extensions.ResolveLocked(MonoTouch.Intents.IINSetCarLockStatusIntentHandling,MonoTouch.Intents.INSetCarLockStatusIntent,System.Action{MonoTouch.Intents.INBooleanResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetClimateSettingsInCarIntentHandling" />
      </Targets>
      <Member MemberName="ConfirmSetClimateSettingsInCar">
        <MemberSignature Language="C#" Value="public static void ConfirmSetClimateSettingsInCar (this Intents.IINSetClimateSettingsInCarIntentHandling This, Intents.INSetClimateSettingsInCarIntent intent, Action&lt;Intents.INSetClimateSettingsInCarIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfirmSetClimateSettingsInCar(class Intents.IINSetClimateSettingsInCarIntentHandling This, class Intents.INSetClimateSettingsInCarIntent intent, class System.Action`1&lt;class Intents.INSetClimateSettingsInCarIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetClimateSettingsInCarIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetClimateSettingsInCarIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSetClimateSettingsInCarIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V54))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the confirmation of climate settings.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetClimateSettingsInCarIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetClimateSettingsInCarIntentHandling_Extensions.ConfirmSetClimateSettingsInCar(MonoTouch.Intents.IINSetClimateSettingsInCarIntentHandling,MonoTouch.Intents.INSetClimateSettingsInCarIntent,System.Action{MonoTouch.Intents.INSetClimateSettingsInCarIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetClimateSettingsInCarIntentHandling" />
      </Targets>
      <Member MemberName="ResolveAirCirculationMode">
        <MemberSignature Language="C#" Value="public static void ResolveAirCirculationMode (this Intents.IINSetClimateSettingsInCarIntentHandling This, Intents.INSetClimateSettingsInCarIntent intent, Action&lt;Intents.INCarAirCirculationModeResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveAirCirculationMode(class Intents.IINSetClimateSettingsInCarIntentHandling This, class Intents.INSetClimateSettingsInCarIntent intent, class System.Action`1&lt;class Intents.INCarAirCirculationModeResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetClimateSettingsInCarIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetClimateSettingsInCarIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INCarAirCirculationModeResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V88))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of the air circulation mode.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetClimateSettingsInCarIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetClimateSettingsInCarIntentHandling_Extensions.ResolveAirCirculationMode(MonoTouch.Intents.IINSetClimateSettingsInCarIntentHandling,MonoTouch.Intents.INSetClimateSettingsInCarIntent,System.Action{MonoTouch.Intents.INCarAirCirculationModeResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetClimateSettingsInCarIntentHandling" />
      </Targets>
      <Member MemberName="ResolveClimateZone">
        <MemberSignature Language="C#" Value="public static void ResolveClimateZone (this Intents.IINSetClimateSettingsInCarIntentHandling This, Intents.INSetClimateSettingsInCarIntent intent, Action&lt;Intents.INCarSeatResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveClimateZone(class Intents.IINSetClimateSettingsInCarIntentHandling This, class Intents.INSetClimateSettingsInCarIntent intent, class System.Action`1&lt;class Intents.INCarSeatResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetClimateSettingsInCarIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetClimateSettingsInCarIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INCarSeatResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V92))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of a requested climate zone.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetClimateSettingsInCarIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetClimateSettingsInCarIntentHandling_Extensions.ResolveClimateZone(MonoTouch.Intents.IINSetClimateSettingsInCarIntentHandling,MonoTouch.Intents.INSetClimateSettingsInCarIntent,System.Action{MonoTouch.Intents.INCarSeatResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetClimateSettingsInCarIntentHandling" />
      </Targets>
      <Member MemberName="ResolveEnableAirConditioner">
        <MemberSignature Language="C#" Value="public static void ResolveEnableAirConditioner (this Intents.IINSetClimateSettingsInCarIntentHandling This, Intents.INSetClimateSettingsInCarIntent intent, Action&lt;Intents.INBooleanResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveEnableAirConditioner(class Intents.IINSetClimateSettingsInCarIntentHandling This, class Intents.INSetClimateSettingsInCarIntent intent, class System.Action`1&lt;class Intents.INBooleanResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetClimateSettingsInCarIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetClimateSettingsInCarIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INBooleanResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V87))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of whether the air conditioner can be enabled.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetClimateSettingsInCarIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetClimateSettingsInCarIntentHandling_Extensions.ResolveEnableAirConditioner(MonoTouch.Intents.IINSetClimateSettingsInCarIntentHandling,MonoTouch.Intents.INSetClimateSettingsInCarIntent,System.Action{MonoTouch.Intents.INBooleanResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetClimateSettingsInCarIntentHandling" />
      </Targets>
      <Member MemberName="ResolveEnableAutoMode">
        <MemberSignature Language="C#" Value="public static void ResolveEnableAutoMode (this Intents.IINSetClimateSettingsInCarIntentHandling This, Intents.INSetClimateSettingsInCarIntent intent, Action&lt;Intents.INBooleanResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveEnableAutoMode(class Intents.IINSetClimateSettingsInCarIntentHandling This, class Intents.INSetClimateSettingsInCarIntent intent, class System.Action`1&lt;class Intents.INBooleanResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetClimateSettingsInCarIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetClimateSettingsInCarIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INBooleanResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V87))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of whether automatic mode can be enabled.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetClimateSettingsInCarIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetClimateSettingsInCarIntentHandling_Extensions.ResolveEnableAutoMode(MonoTouch.Intents.IINSetClimateSettingsInCarIntentHandling,MonoTouch.Intents.INSetClimateSettingsInCarIntent,System.Action{MonoTouch.Intents.INBooleanResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetClimateSettingsInCarIntentHandling" />
      </Targets>
      <Member MemberName="ResolveEnableClimateControl">
        <MemberSignature Language="C#" Value="public static void ResolveEnableClimateControl (this Intents.IINSetClimateSettingsInCarIntentHandling This, Intents.INSetClimateSettingsInCarIntent intent, Action&lt;Intents.INBooleanResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveEnableClimateControl(class Intents.IINSetClimateSettingsInCarIntentHandling This, class Intents.INSetClimateSettingsInCarIntent intent, class System.Action`1&lt;class Intents.INBooleanResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetClimateSettingsInCarIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetClimateSettingsInCarIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INBooleanResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V87))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of whether climate control can be enabled.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetClimateSettingsInCarIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetClimateSettingsInCarIntentHandling_Extensions.ResolveEnableClimateControl(MonoTouch.Intents.IINSetClimateSettingsInCarIntentHandling,MonoTouch.Intents.INSetClimateSettingsInCarIntent,System.Action{MonoTouch.Intents.INBooleanResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetClimateSettingsInCarIntentHandling" />
      </Targets>
      <Member MemberName="ResolveEnableFan">
        <MemberSignature Language="C#" Value="public static void ResolveEnableFan (this Intents.IINSetClimateSettingsInCarIntentHandling This, Intents.INSetClimateSettingsInCarIntent intent, Action&lt;Intents.INBooleanResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveEnableFan(class Intents.IINSetClimateSettingsInCarIntentHandling This, class Intents.INSetClimateSettingsInCarIntent intent, class System.Action`1&lt;class Intents.INBooleanResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetClimateSettingsInCarIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetClimateSettingsInCarIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INBooleanResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V87))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of whether the requested fan can be enabled.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetClimateSettingsInCarIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetClimateSettingsInCarIntentHandling_Extensions.ResolveEnableFan(MonoTouch.Intents.IINSetClimateSettingsInCarIntentHandling,MonoTouch.Intents.INSetClimateSettingsInCarIntent,System.Action{MonoTouch.Intents.INBooleanResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetClimateSettingsInCarIntentHandling" />
      </Targets>
      <Member MemberName="ResolveFanSpeedIndex">
        <MemberSignature Language="C#" Value="public static void ResolveFanSpeedIndex (this Intents.IINSetClimateSettingsInCarIntentHandling This, Intents.INSetClimateSettingsInCarIntent intent, Action&lt;Intents.INIntegerResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveFanSpeedIndex(class Intents.IINSetClimateSettingsInCarIntentHandling This, class Intents.INSetClimateSettingsInCarIntent intent, class System.Action`1&lt;class Intents.INIntegerResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetClimateSettingsInCarIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetClimateSettingsInCarIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INIntegerResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V44))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of a fan speed index.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetClimateSettingsInCarIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetClimateSettingsInCarIntentHandling_Extensions.ResolveFanSpeedIndex(MonoTouch.Intents.IINSetClimateSettingsInCarIntentHandling,MonoTouch.Intents.INSetClimateSettingsInCarIntent,System.Action{MonoTouch.Intents.INIntegerResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetClimateSettingsInCarIntentHandling" />
      </Targets>
      <Member MemberName="ResolveFanSpeedPercentage">
        <MemberSignature Language="C#" Value="public static void ResolveFanSpeedPercentage (this Intents.IINSetClimateSettingsInCarIntentHandling This, Intents.INSetClimateSettingsInCarIntent intent, Action&lt;Intents.INDoubleResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveFanSpeedPercentage(class Intents.IINSetClimateSettingsInCarIntentHandling This, class Intents.INSetClimateSettingsInCarIntent intent, class System.Action`1&lt;class Intents.INDoubleResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetClimateSettingsInCarIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetClimateSettingsInCarIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INDoubleResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V89))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of a fan speed, as a percentage.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetClimateSettingsInCarIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetClimateSettingsInCarIntentHandling_Extensions.ResolveFanSpeedPercentage(MonoTouch.Intents.IINSetClimateSettingsInCarIntentHandling,MonoTouch.Intents.INSetClimateSettingsInCarIntent,System.Action{MonoTouch.Intents.INDoubleResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetClimateSettingsInCarIntentHandling" />
      </Targets>
      <Member MemberName="ResolveRelativeFanSpeedSetting">
        <MemberSignature Language="C#" Value="public static void ResolveRelativeFanSpeedSetting (this Intents.IINSetClimateSettingsInCarIntentHandling This, Intents.INSetClimateSettingsInCarIntent intent, Action&lt;Intents.INRelativeSettingResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveRelativeFanSpeedSetting(class Intents.IINSetClimateSettingsInCarIntentHandling This, class Intents.INSetClimateSettingsInCarIntent intent, class System.Action`1&lt;class Intents.INRelativeSettingResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetClimateSettingsInCarIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetClimateSettingsInCarIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INRelativeSettingResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V90))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of a relative increase or decrease in the fan speed.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetClimateSettingsInCarIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetClimateSettingsInCarIntentHandling_Extensions.ResolveRelativeFanSpeedSetting(MonoTouch.Intents.IINSetClimateSettingsInCarIntentHandling,MonoTouch.Intents.INSetClimateSettingsInCarIntent,System.Action{MonoTouch.Intents.INRelativeSettingResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetClimateSettingsInCarIntentHandling" />
      </Targets>
      <Member MemberName="ResolveRelativeTemperatureSetting">
        <MemberSignature Language="C#" Value="public static void ResolveRelativeTemperatureSetting (this Intents.IINSetClimateSettingsInCarIntentHandling This, Intents.INSetClimateSettingsInCarIntent intent, Action&lt;Intents.INRelativeSettingResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveRelativeTemperatureSetting(class Intents.IINSetClimateSettingsInCarIntentHandling This, class Intents.INSetClimateSettingsInCarIntent intent, class System.Action`1&lt;class Intents.INRelativeSettingResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetClimateSettingsInCarIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetClimateSettingsInCarIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INRelativeSettingResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V90))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of a relative increase or decrease in temperature settings.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetClimateSettingsInCarIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetClimateSettingsInCarIntentHandling_Extensions.ResolveRelativeTemperatureSetting(MonoTouch.Intents.IINSetClimateSettingsInCarIntentHandling,MonoTouch.Intents.INSetClimateSettingsInCarIntent,System.Action{MonoTouch.Intents.INRelativeSettingResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetClimateSettingsInCarIntentHandling" />
      </Targets>
      <Member MemberName="ResolveTemperature">
        <MemberSignature Language="C#" Value="public static void ResolveTemperature (this Intents.IINSetClimateSettingsInCarIntentHandling This, Intents.INSetClimateSettingsInCarIntent intent, Action&lt;Intents.INTemperatureResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveTemperature(class Intents.IINSetClimateSettingsInCarIntentHandling This, class Intents.INSetClimateSettingsInCarIntent intent, class System.Action`1&lt;class Intents.INTemperatureResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetClimateSettingsInCarIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetClimateSettingsInCarIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INTemperatureResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V91))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of the specified temperature value.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetClimateSettingsInCarIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetClimateSettingsInCarIntentHandling_Extensions.ResolveTemperature(MonoTouch.Intents.IINSetClimateSettingsInCarIntentHandling,MonoTouch.Intents.INSetClimateSettingsInCarIntent,System.Action{MonoTouch.Intents.INTemperatureResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetDefrosterSettingsInCarIntentHandling" />
      </Targets>
      <Member MemberName="ConfirmSetDefrosterSettingsInCar">
        <MemberSignature Language="C#" Value="public static void ConfirmSetDefrosterSettingsInCar (this Intents.IINSetDefrosterSettingsInCarIntentHandling This, Intents.INSetDefrosterSettingsInCarIntent intent, Action&lt;Intents.INSetDefrosterSettingsInCarIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfirmSetDefrosterSettingsInCar(class Intents.IINSetDefrosterSettingsInCarIntentHandling This, class Intents.INSetDefrosterSettingsInCarIntent intent, class System.Action`1&lt;class Intents.INSetDefrosterSettingsInCarIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetDefrosterSettingsInCarIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetDefrosterSettingsInCarIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSetDefrosterSettingsInCarIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V55))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the confirmation of defroster settings.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetDefrosterSettingsInCarIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetDefrosterSettingsInCarIntentHandling_Extensions.ConfirmSetDefrosterSettingsInCar(MonoTouch.Intents.IINSetDefrosterSettingsInCarIntentHandling,MonoTouch.Intents.INSetDefrosterSettingsInCarIntent,System.Action{MonoTouch.Intents.INSetDefrosterSettingsInCarIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetDefrosterSettingsInCarIntentHandling" />
      </Targets>
      <Member MemberName="ResolveDefroster">
        <MemberSignature Language="C#" Value="public static void ResolveDefroster (this Intents.IINSetDefrosterSettingsInCarIntentHandling This, Intents.INSetDefrosterSettingsInCarIntent intent, Action&lt;Intents.INCarDefrosterResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveDefroster(class Intents.IINSetDefrosterSettingsInCarIntentHandling This, class Intents.INSetDefrosterSettingsInCarIntent intent, class System.Action`1&lt;class Intents.INCarDefrosterResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetDefrosterSettingsInCarIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetDefrosterSettingsInCarIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INCarDefrosterResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V93))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers can override this method to customize the resolution of the requested defroster.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetDefrosterSettingsInCarIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetDefrosterSettingsInCarIntentHandling_Extensions.ResolveDefroster(MonoTouch.Intents.IINSetDefrosterSettingsInCarIntentHandling,MonoTouch.Intents.INSetDefrosterSettingsInCarIntent,System.Action{MonoTouch.Intents.INCarDefrosterResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetDefrosterSettingsInCarIntentHandling" />
      </Targets>
      <Member MemberName="ResolveEnable">
        <MemberSignature Language="C#" Value="public static void ResolveEnable (this Intents.IINSetDefrosterSettingsInCarIntentHandling This, Intents.INSetDefrosterSettingsInCarIntent intent, Action&lt;Intents.INBooleanResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveEnable(class Intents.IINSetDefrosterSettingsInCarIntentHandling This, class Intents.INSetDefrosterSettingsInCarIntent intent, class System.Action`1&lt;class Intents.INBooleanResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetDefrosterSettingsInCarIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetDefrosterSettingsInCarIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INBooleanResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V87))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers can override this method to customize the resolution of whether the defroster can be enabled.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetDefrosterSettingsInCarIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetDefrosterSettingsInCarIntentHandling_Extensions.ResolveEnable(MonoTouch.Intents.IINSetDefrosterSettingsInCarIntentHandling,MonoTouch.Intents.INSetDefrosterSettingsInCarIntent,System.Action{MonoTouch.Intents.INBooleanResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetMessageAttributeIntentHandling" />
      </Targets>
      <Member MemberName="ConfirmSetMessageAttribute">
        <MemberSignature Language="C#" Value="public static void ConfirmSetMessageAttribute (this Intents.IINSetMessageAttributeIntentHandling This, Intents.INSetMessageAttributeIntent intent, Action&lt;Intents.INSetMessageAttributeIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfirmSetMessageAttribute(class Intents.IINSetMessageAttributeIntentHandling This, class Intents.INSetMessageAttributeIntent intent, class System.Action`1&lt;class Intents.INSetMessageAttributeIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetMessageAttributeIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetMessageAttributeIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSetMessageAttributeIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V68))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the confirmation of the setting of a message attribute.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetMessageAttributeIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetMessageAttributeIntentHandling_Extensions.ConfirmSetMessageAttribute(MonoTouch.Intents.IINSetMessageAttributeIntentHandling,MonoTouch.Intents.INSetMessageAttributeIntent,System.Action{MonoTouch.Intents.INSetMessageAttributeIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetMessageAttributeIntentHandling" />
      </Targets>
      <Member MemberName="ResolveAttribute">
        <MemberSignature Language="C#" Value="public static void ResolveAttribute (this Intents.IINSetMessageAttributeIntentHandling This, Intents.INSetMessageAttributeIntent intent, Action&lt;Intents.INMessageAttributeResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveAttribute(class Intents.IINSetMessageAttributeIntentHandling This, class Intents.INSetMessageAttributeIntent intent, class System.Action`1&lt;class Intents.INMessageAttributeResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetMessageAttributeIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetMessageAttributeIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INMessageAttributeResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V94))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of a message attribute.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetMessageAttributeIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetMessageAttributeIntentHandling_Extensions.ResolveAttribute(MonoTouch.Intents.IINSetMessageAttributeIntentHandling,MonoTouch.Intents.INSetMessageAttributeIntent,System.Action{MonoTouch.Intents.INMessageAttributeResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetProfileInCarIntentHandling" />
      </Targets>
      <Member MemberName="ConfirmSetProfileInCar">
        <MemberSignature Language="C#" Value="public static void ConfirmSetProfileInCar (this Intents.IINSetProfileInCarIntentHandling This, Intents.INSetProfileInCarIntent intent, Action&lt;Intents.INSetProfileInCarIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfirmSetProfileInCar(class Intents.IINSetProfileInCarIntentHandling This, class Intents.INSetProfileInCarIntent intent, class System.Action`1&lt;class Intents.INSetProfileInCarIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetProfileInCarIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetProfileInCarIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSetProfileInCarIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V56))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the confirmation of setting a profile.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetProfileInCarIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetProfileInCarIntentHandling_Extensions.ConfirmSetProfileInCar(MonoTouch.Intents.IINSetProfileInCarIntentHandling,MonoTouch.Intents.INSetProfileInCarIntent,System.Action{MonoTouch.Intents.INSetProfileInCarIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetProfileInCarIntentHandling" />
      </Targets>
      <Member MemberName="ResolveDefaultProfile">
        <MemberSignature Language="C#" Value="public static void ResolveDefaultProfile (this Intents.IINSetProfileInCarIntentHandling This, Intents.INSetProfileInCarIntent intent, Action&lt;Intents.INBooleanResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveDefaultProfile(class Intents.IINSetProfileInCarIntentHandling This, class Intents.INSetProfileInCarIntent intent, class System.Action`1&lt;class Intents.INBooleanResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetProfileInCarIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetProfileInCarIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INBooleanResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V87))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of the default profile.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetProfileInCarIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetProfileInCarIntentHandling_Extensions.ResolveDefaultProfile(MonoTouch.Intents.IINSetProfileInCarIntentHandling,MonoTouch.Intents.INSetProfileInCarIntent,System.Action{MonoTouch.Intents.INBooleanResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetProfileInCarIntentHandling" />
      </Targets>
      <Member MemberName="ResolveProfileName">
        <MemberSignature Language="C#" Value="public static void ResolveProfileName (this Intents.IINSetProfileInCarIntentHandling This, Intents.INSetProfileInCarIntent intent, Action&lt;Intents.INStringResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveProfileName(class Intents.IINSetProfileInCarIntentHandling This, class Intents.INSetProfileInCarIntent intent, class System.Action`1&lt;class Intents.INStringResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetProfileInCarIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetProfileInCarIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INStringResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V49))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of a profile name.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetProfileInCarIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetProfileInCarIntentHandling_Extensions.ResolveProfileName(MonoTouch.Intents.IINSetProfileInCarIntentHandling,MonoTouch.Intents.INSetProfileInCarIntent,System.Action{MonoTouch.Intents.INStringResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetProfileInCarIntentHandling" />
      </Targets>
      <Member MemberName="ResolveProfileNumber">
        <MemberSignature Language="C#" Value="public static void ResolveProfileNumber (this Intents.IINSetProfileInCarIntentHandling This, Intents.INSetProfileInCarIntent intent, Action&lt;Intents.INIntegerResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveProfileNumber(class Intents.IINSetProfileInCarIntentHandling This, class Intents.INSetProfileInCarIntent intent, class System.Action`1&lt;class Intents.INIntegerResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetProfileInCarIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetProfileInCarIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INIntegerResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V44))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the resolution of a profile number.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetProfileInCarIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetProfileInCarIntentHandling_Extensions.ResolveProfileNumber(MonoTouch.Intents.IINSetProfileInCarIntentHandling,MonoTouch.Intents.INSetProfileInCarIntent,System.Action{MonoTouch.Intents.INIntegerResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetRadioStationIntentHandling" />
      </Targets>
      <Member MemberName="ConfirmSetRadioStation">
        <MemberSignature Language="C#" Value="public static void ConfirmSetRadioStation (this Intents.IINSetRadioStationIntentHandling This, Intents.INSetRadioStationIntent intent, Action&lt;Intents.INSetRadioStationIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfirmSetRadioStation(class Intents.IINSetRadioStationIntentHandling This, class Intents.INSetRadioStationIntent intent, class System.Action`1&lt;class Intents.INSetRadioStationIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetRadioStationIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetRadioStationIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSetRadioStationIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V75))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers can override this method to customize the confirmation of a radio station change.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetRadioStationIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetRadioStationIntentHandling_Extensions.ConfirmSetRadioStation(MonoTouch.Intents.IINSetRadioStationIntentHandling,MonoTouch.Intents.INSetRadioStationIntent,System.Action{MonoTouch.Intents.INSetRadioStationIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetRadioStationIntentHandling" />
      </Targets>
      <Member MemberName="ResolveChannel">
        <MemberSignature Language="C#" Value="public static void ResolveChannel (this Intents.IINSetRadioStationIntentHandling This, Intents.INSetRadioStationIntent intent, Action&lt;Intents.INStringResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveChannel(class Intents.IINSetRadioStationIntentHandling This, class Intents.INSetRadioStationIntent intent, class System.Action`1&lt;class Intents.INStringResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetRadioStationIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetRadioStationIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INStringResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V46))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers can override this method to customize the resolution of a radio channel.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetRadioStationIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetRadioStationIntentHandling_Extensions.ResolveChannel(MonoTouch.Intents.IINSetRadioStationIntentHandling,MonoTouch.Intents.INSetRadioStationIntent,System.Action{MonoTouch.Intents.INStringResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetRadioStationIntentHandling" />
      </Targets>
      <Member MemberName="ResolveFrequency">
        <MemberSignature Language="C#" Value="public static void ResolveFrequency (this Intents.IINSetRadioStationIntentHandling This, Intents.INSetRadioStationIntent intent, Action&lt;Intents.INDoubleResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveFrequency(class Intents.IINSetRadioStationIntentHandling This, class Intents.INSetRadioStationIntent intent, class System.Action`1&lt;class Intents.INDoubleResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetRadioStationIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetRadioStationIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INDoubleResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V89))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers can override this method to customize the resolution of a radio frequency.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetRadioStationIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetRadioStationIntentHandling_Extensions.ResolveFrequency(MonoTouch.Intents.IINSetRadioStationIntentHandling,MonoTouch.Intents.INSetRadioStationIntent,System.Action{MonoTouch.Intents.INDoubleResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetRadioStationIntentHandling" />
      </Targets>
      <Member MemberName="ResolvePresetNumber">
        <MemberSignature Language="C#" Value="public static void ResolvePresetNumber (this Intents.IINSetRadioStationIntentHandling This, Intents.INSetRadioStationIntent intent, Action&lt;Intents.INIntegerResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolvePresetNumber(class Intents.IINSetRadioStationIntentHandling This, class Intents.INSetRadioStationIntent intent, class System.Action`1&lt;class Intents.INIntegerResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetRadioStationIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetRadioStationIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INIntegerResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V44))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers can override this method to customize the resolution of a radio preset.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetRadioStationIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetRadioStationIntentHandling_Extensions.ResolvePresetNumber(MonoTouch.Intents.IINSetRadioStationIntentHandling,MonoTouch.Intents.INSetRadioStationIntent,System.Action{MonoTouch.Intents.INIntegerResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetRadioStationIntentHandling" />
      </Targets>
      <Member MemberName="ResolveRadioType">
        <MemberSignature Language="C#" Value="public static void ResolveRadioType (this Intents.IINSetRadioStationIntentHandling This, Intents.INSetRadioStationIntent intent, Action&lt;Intents.INRadioTypeResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveRadioType(class Intents.IINSetRadioStationIntentHandling This, class Intents.INSetRadioStationIntent intent, class System.Action`1&lt;class Intents.INRadioTypeResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetRadioStationIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetRadioStationIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INRadioTypeResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V95))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers can override this method to customize the resolution of what kind of radio is available.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetRadioStationIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetRadioStationIntentHandling_Extensions.ResolveRadioType(MonoTouch.Intents.IINSetRadioStationIntentHandling,MonoTouch.Intents.INSetRadioStationIntent,System.Action{MonoTouch.Intents.INRadioTypeResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetRadioStationIntentHandling" />
      </Targets>
      <Member MemberName="ResolveStationName">
        <MemberSignature Language="C#" Value="public static void ResolveStationName (this Intents.IINSetRadioStationIntentHandling This, Intents.INSetRadioStationIntent intent, Action&lt;Intents.INStringResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveStationName(class Intents.IINSetRadioStationIntentHandling This, class Intents.INSetRadioStationIntent intent, class System.Action`1&lt;class Intents.INStringResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetRadioStationIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetRadioStationIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INStringResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V46))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers can override this method to customize the resolution of a radio station name.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetRadioStationIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetRadioStationIntentHandling_Extensions.ResolveStationName(MonoTouch.Intents.IINSetRadioStationIntentHandling,MonoTouch.Intents.INSetRadioStationIntent,System.Action{MonoTouch.Intents.INStringResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetSeatSettingsInCarIntentHandling" />
      </Targets>
      <Member MemberName="ConfirmSetSeatSettingsInCar">
        <MemberSignature Language="C#" Value="public static void ConfirmSetSeatSettingsInCar (this Intents.IINSetSeatSettingsInCarIntentHandling This, Intents.INSetSeatSettingsInCarIntent intent, Action&lt;Intents.INSetSeatSettingsInCarIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfirmSetSeatSettingsInCar(class Intents.IINSetSeatSettingsInCarIntentHandling This, class Intents.INSetSeatSettingsInCarIntent intent, class System.Action`1&lt;class Intents.INSetSeatSettingsInCarIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetSeatSettingsInCarIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetSeatSettingsInCarIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSetSeatSettingsInCarIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V57))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers can override this method to customize the confirmation of a change in seat settings.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetSeatSettingsInCarIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetSeatSettingsInCarIntentHandling_Extensions.ConfirmSetSeatSettingsInCar(MonoTouch.Intents.IINSetSeatSettingsInCarIntentHandling,MonoTouch.Intents.INSetSeatSettingsInCarIntent,System.Action{MonoTouch.Intents.INSetSeatSettingsInCarIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetSeatSettingsInCarIntentHandling" />
      </Targets>
      <Member MemberName="ResolveEnableCooling">
        <MemberSignature Language="C#" Value="public static void ResolveEnableCooling (this Intents.IINSetSeatSettingsInCarIntentHandling This, Intents.INSetSeatSettingsInCarIntent intent, Action&lt;Intents.INBooleanResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveEnableCooling(class Intents.IINSetSeatSettingsInCarIntentHandling This, class Intents.INSetSeatSettingsInCarIntent intent, class System.Action`1&lt;class Intents.INBooleanResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetSeatSettingsInCarIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetSeatSettingsInCarIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INBooleanResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V87))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers can override this method to customize the resolution of whether seat cooling can be enabled.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetSeatSettingsInCarIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetSeatSettingsInCarIntentHandling_Extensions.ResolveEnableCooling(MonoTouch.Intents.IINSetSeatSettingsInCarIntentHandling,MonoTouch.Intents.INSetSeatSettingsInCarIntent,System.Action{MonoTouch.Intents.INBooleanResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetSeatSettingsInCarIntentHandling" />
      </Targets>
      <Member MemberName="ResolveEnableHeating">
        <MemberSignature Language="C#" Value="public static void ResolveEnableHeating (this Intents.IINSetSeatSettingsInCarIntentHandling This, Intents.INSetSeatSettingsInCarIntent intent, Action&lt;Intents.INBooleanResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveEnableHeating(class Intents.IINSetSeatSettingsInCarIntentHandling This, class Intents.INSetSeatSettingsInCarIntent intent, class System.Action`1&lt;class Intents.INBooleanResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetSeatSettingsInCarIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetSeatSettingsInCarIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INBooleanResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V87))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers can override this method to customize the resolution of whether seat heating can be enabled.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetSeatSettingsInCarIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetSeatSettingsInCarIntentHandling_Extensions.ResolveEnableHeating(MonoTouch.Intents.IINSetSeatSettingsInCarIntentHandling,MonoTouch.Intents.INSetSeatSettingsInCarIntent,System.Action{MonoTouch.Intents.INBooleanResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetSeatSettingsInCarIntentHandling" />
      </Targets>
      <Member MemberName="ResolveEnableMassage">
        <MemberSignature Language="C#" Value="public static void ResolveEnableMassage (this Intents.IINSetSeatSettingsInCarIntentHandling This, Intents.INSetSeatSettingsInCarIntent intent, Action&lt;Intents.INBooleanResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveEnableMassage(class Intents.IINSetSeatSettingsInCarIntentHandling This, class Intents.INSetSeatSettingsInCarIntent intent, class System.Action`1&lt;class Intents.INBooleanResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetSeatSettingsInCarIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetSeatSettingsInCarIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INBooleanResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V87))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers can override this method to customize the resolution of whether seat massage can be enabled.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetSeatSettingsInCarIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetSeatSettingsInCarIntentHandling_Extensions.ResolveEnableMassage(MonoTouch.Intents.IINSetSeatSettingsInCarIntentHandling,MonoTouch.Intents.INSetSeatSettingsInCarIntent,System.Action{MonoTouch.Intents.INBooleanResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetSeatSettingsInCarIntentHandling" />
      </Targets>
      <Member MemberName="ResolveLevel">
        <MemberSignature Language="C#" Value="public static void ResolveLevel (this Intents.IINSetSeatSettingsInCarIntentHandling This, Intents.INSetSeatSettingsInCarIntent intent, Action&lt;Intents.INIntegerResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveLevel(class Intents.IINSetSeatSettingsInCarIntentHandling This, class Intents.INSetSeatSettingsInCarIntent intent, class System.Action`1&lt;class Intents.INIntegerResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetSeatSettingsInCarIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetSeatSettingsInCarIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INIntegerResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V44))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers can override this method to customize the resolution of setting the absolute level of the requested service.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetSeatSettingsInCarIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetSeatSettingsInCarIntentHandling_Extensions.ResolveLevel(MonoTouch.Intents.IINSetSeatSettingsInCarIntentHandling,MonoTouch.Intents.INSetSeatSettingsInCarIntent,System.Action{MonoTouch.Intents.INIntegerResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetSeatSettingsInCarIntentHandling" />
      </Targets>
      <Member MemberName="ResolveRelativeLevelSetting">
        <MemberSignature Language="C#" Value="public static void ResolveRelativeLevelSetting (this Intents.IINSetSeatSettingsInCarIntentHandling This, Intents.INSetSeatSettingsInCarIntent intent, Action&lt;Intents.INRelativeSettingResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveRelativeLevelSetting(class Intents.IINSetSeatSettingsInCarIntentHandling This, class Intents.INSetSeatSettingsInCarIntent intent, class System.Action`1&lt;class Intents.INRelativeSettingResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetSeatSettingsInCarIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetSeatSettingsInCarIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INRelativeSettingResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V90))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers can override this method to customize the resolution of setting a relative level of the requested service.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetSeatSettingsInCarIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetSeatSettingsInCarIntentHandling_Extensions.ResolveRelativeLevelSetting(MonoTouch.Intents.IINSetSeatSettingsInCarIntentHandling,MonoTouch.Intents.INSetSeatSettingsInCarIntent,System.Action{MonoTouch.Intents.INRelativeSettingResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetSeatSettingsInCarIntentHandling" />
      </Targets>
      <Member MemberName="ResolveSeat">
        <MemberSignature Language="C#" Value="public static void ResolveSeat (this Intents.IINSetSeatSettingsInCarIntentHandling This, Intents.INSetSeatSettingsInCarIntent intent, Action&lt;Intents.INCarSeatResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveSeat(class Intents.IINSetSeatSettingsInCarIntentHandling This, class Intents.INSetSeatSettingsInCarIntent intent, class System.Action`1&lt;class Intents.INCarSeatResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetSeatSettingsInCarIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetSeatSettingsInCarIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INCarSeatResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V92))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers can override this method to customize the resolution of choosing a particular seat.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetSeatSettingsInCarIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetSeatSettingsInCarIntentHandling_Extensions.ResolveSeat(MonoTouch.Intents.IINSetSeatSettingsInCarIntentHandling,MonoTouch.Intents.INSetSeatSettingsInCarIntent,System.Action{MonoTouch.Intents.INCarSeatResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetTaskAttributeIntentHandling" />
      </Targets>
      <Member MemberName="Confirm">
        <MemberSignature Language="C#" Value="public static void Confirm (this Intents.IINSetTaskAttributeIntentHandling This, Intents.INSetTaskAttributeIntent intent, Action&lt;Intents.INSetTaskAttributeIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Confirm(class Intents.IINSetTaskAttributeIntentHandling This, class Intents.INSetTaskAttributeIntent intent, class System.Action`1&lt;class Intents.INSetTaskAttributeIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetTaskAttributeIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetTaskAttributeIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSetTaskAttributeIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V92))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to confirm whether local and remote resources are ready to update the attributes.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetTaskAttributeIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetTaskAttributeIntentHandling_Extensions.Confirm(MonoTouch.Intents.IINSetTaskAttributeIntentHandling,MonoTouch.Intents.INSetTaskAttributeIntent,System.Action{MonoTouch.Intents.INSetTaskAttributeIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetTaskAttributeIntentHandling" />
      </Targets>
      <Member MemberName="ResolveSpatialEventTrigger">
        <MemberSignature Language="C#" Value="public static void ResolveSpatialEventTrigger (this Intents.IINSetTaskAttributeIntentHandling This, Intents.INSetTaskAttributeIntent intent, Action&lt;Intents.INSpatialEventTriggerResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveSpatialEventTrigger(class Intents.IINSetTaskAttributeIntentHandling This, class Intents.INSetTaskAttributeIntent intent, class System.Action`1&lt;class Intents.INSpatialEventTriggerResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetTaskAttributeIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetTaskAttributeIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSpatialEventTriggerResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V49))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize the resolution of a spatial event trigger.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetTaskAttributeIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetTaskAttributeIntentHandling_Extensions.ResolveSpatialEventTrigger(MonoTouch.Intents.IINSetTaskAttributeIntentHandling,MonoTouch.Intents.INSetTaskAttributeIntent,System.Action{MonoTouch.Intents.INSpatialEventTriggerResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetTaskAttributeIntentHandling" />
      </Targets>
      <Member MemberName="ResolveStatus">
        <MemberSignature Language="C#" Value="public static void ResolveStatus (this Intents.IINSetTaskAttributeIntentHandling This, Intents.INSetTaskAttributeIntent intent, Action&lt;Intents.INTaskStatusResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveStatus(class Intents.IINSetTaskAttributeIntentHandling This, class Intents.INSetTaskAttributeIntent intent, class System.Action`1&lt;class Intents.INTaskStatusResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetTaskAttributeIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetTaskAttributeIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INTaskStatusResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V125))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize the resolution of the task status.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetTaskAttributeIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetTaskAttributeIntentHandling_Extensions.ResolveStatus(MonoTouch.Intents.IINSetTaskAttributeIntentHandling,MonoTouch.Intents.INSetTaskAttributeIntent,System.Action{MonoTouch.Intents.INTaskStatusResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetTaskAttributeIntentHandling" />
      </Targets>
      <Member MemberName="ResolveTargetTask">
        <MemberSignature Language="C#" Value="public static void ResolveTargetTask (this Intents.IINSetTaskAttributeIntentHandling This, Intents.INSetTaskAttributeIntent intent, Action&lt;Intents.INTaskResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveTargetTask(class Intents.IINSetTaskAttributeIntentHandling This, class Intents.INSetTaskAttributeIntent intent, class System.Action`1&lt;class Intents.INTaskResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetTaskAttributeIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetTaskAttributeIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INTaskResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V141))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize resolution of the task to update.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetTaskAttributeIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetTaskAttributeIntentHandling_Extensions.ResolveTargetTask(MonoTouch.Intents.IINSetTaskAttributeIntentHandling,MonoTouch.Intents.INSetTaskAttributeIntent,System.Action{MonoTouch.Intents.INTaskResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSetTaskAttributeIntentHandling" />
      </Targets>
      <Member MemberName="ResolveTemporalEventTrigger">
        <MemberSignature Language="C#" Value="public static void ResolveTemporalEventTrigger (this Intents.IINSetTaskAttributeIntentHandling This, Intents.INSetTaskAttributeIntent intent, Action&lt;Intents.INTemporalEventTriggerResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveTemporalEventTrigger(class Intents.IINSetTaskAttributeIntentHandling This, class Intents.INSetTaskAttributeIntent intent, class System.Action`1&lt;class Intents.INTemporalEventTriggerResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSetTaskAttributeIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INSetTaskAttributeIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INTemporalEventTriggerResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V50))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customise resolution of the temporal trigger.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSetTaskAttributeIntentHandling_Extensions" Member="M:MonoTouch.Intents.INSetTaskAttributeIntentHandling_Extensions.ResolveTemporalEventTrigger(MonoTouch.Intents.IINSetTaskAttributeIntentHandling,MonoTouch.Intents.INSetTaskAttributeIntent,System.Action{MonoTouch.Intents.INTemporalEventTriggerResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSpeakable" />
      </Targets>
      <Member MemberName="GetAlternativeSpeakableMatches">
        <MemberSignature Language="C#" Value="public static Intents.IINSpeakable[] GetAlternativeSpeakableMatches (this Intents.IINSpeakable This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Intents.IINSpeakable[] GetAlternativeSpeakableMatches(class Intents.IINSpeakable This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Intents.IINSpeakable[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSpeakable" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Gets an array of alternative matching phrases.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSpeakable_Extensions" Member="M:MonoTouch.Intents.INSpeakable_Extensions.GetAlternativeSpeakableMatches(MonoTouch.Intents.IINSpeakable)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINSpeakable" />
      </Targets>
      <Member MemberName="GetVocabularyIdentifier">
        <MemberSignature Language="C#" Value="public static string GetVocabularyIdentifier (this Intents.IINSpeakable This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetVocabularyIdentifier(class Intents.IINSpeakable This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINSpeakable" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Gets the identifier for this string in the app-specific vocabulary file.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INSpeakable_Extensions" Member="M:MonoTouch.Intents.INSpeakable_Extensions.GetVocabularyIdentifier(MonoTouch.Intents.IINSpeakable)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINStartAudioCallIntentHandling" />
      </Targets>
      <Member MemberName="ConfirmStartAudioCall">
        <MemberSignature Language="C#" Value="public static void ConfirmStartAudioCall (this Intents.IINStartAudioCallIntentHandling This, Intents.INStartAudioCallIntent intent, Action&lt;Intents.INStartAudioCallIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfirmStartAudioCall(class Intents.IINStartAudioCallIntentHandling This, class Intents.INStartAudioCallIntent intent, class System.Action`1&lt;class Intents.INStartAudioCallIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINStartAudioCallIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INStartAudioCallIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INStartAudioCallIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V48))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to customize the confirmation that an audio call should start.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INStartAudioCallIntentHandling_Extensions" Member="M:MonoTouch.Intents.INStartAudioCallIntentHandling_Extensions.ConfirmStartAudioCall(MonoTouch.Intents.IINStartAudioCallIntentHandling,MonoTouch.Intents.INStartAudioCallIntent,System.Action{MonoTouch.Intents.INStartAudioCallIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINStartAudioCallIntentHandling" />
      </Targets>
      <Member MemberName="ResolveContacts">
        <MemberSignature Language="C#" Value="public static void ResolveContacts (this Intents.IINStartAudioCallIntentHandling This, Intents.INStartAudioCallIntent intent, Action&lt;Intents.INPersonResolutionResult[]&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveContacts(class Intents.IINStartAudioCallIntentHandling This, class Intents.INStartAudioCallIntent intent, class System.Action`1&lt;class Intents.INPersonResolutionResult[]&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINStartAudioCallIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INStartAudioCallIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INPersonResolutionResult[]&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V82))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may override this method to resolve a specific contact based on the <paramref name="intent" />.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INStartAudioCallIntentHandling_Extensions" Member="M:MonoTouch.Intents.INStartAudioCallIntentHandling_Extensions.ResolveContacts(MonoTouch.Intents.IINStartAudioCallIntentHandling,MonoTouch.Intents.INStartAudioCallIntent,System.Action{MonoTouch.Intents.INPersonResolutionResult[]})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINStartAudioCallIntentHandling" />
      </Targets>
      <Member MemberName="ResolveDestinationType">
        <MemberSignature Language="C#" Value="public static void ResolveDestinationType (this Intents.IINStartAudioCallIntentHandling This, Intents.INStartAudioCallIntent intent, Action&lt;Intents.INCallDestinationTypeResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveDestinationType(class Intents.IINStartAudioCallIntentHandling This, class Intents.INStartAudioCallIntent intent, class System.Action`1&lt;class Intents.INCallDestinationTypeResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINStartAudioCallIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INStartAudioCallIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INCallDestinationTypeResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V142))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize resolution of the destination type.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INStartAudioCallIntentHandling_Extensions" Member="M:MonoTouch.Intents.INStartAudioCallIntentHandling_Extensions.ResolveDestinationType(MonoTouch.Intents.IINStartAudioCallIntentHandling,MonoTouch.Intents.INStartAudioCallIntent,System.Action{MonoTouch.Intents.INCallDestinationTypeResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINStartPhotoPlaybackIntentHandling" />
      </Targets>
      <Member MemberName="ConfirmStartPhotoPlayback">
        <MemberSignature Language="C#" Value="public static void ConfirmStartPhotoPlayback (this Intents.IINStartPhotoPlaybackIntentHandling This, Intents.INStartPhotoPlaybackIntent intent, Action&lt;Intents.INStartPhotoPlaybackIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfirmStartPhotoPlayback(class Intents.IINStartPhotoPlaybackIntentHandling This, class Intents.INStartPhotoPlaybackIntent intent, class System.Action`1&lt;class Intents.INStartPhotoPlaybackIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINStartPhotoPlaybackIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INStartPhotoPlaybackIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INStartPhotoPlaybackIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V73))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize the behavior of confirming that a photo playback session may start.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INStartPhotoPlaybackIntentHandling_Extensions" Member="M:MonoTouch.Intents.INStartPhotoPlaybackIntentHandling_Extensions.ConfirmStartPhotoPlayback(MonoTouch.Intents.IINStartPhotoPlaybackIntentHandling,MonoTouch.Intents.INStartPhotoPlaybackIntent,System.Action{MonoTouch.Intents.INStartPhotoPlaybackIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINStartPhotoPlaybackIntentHandling" />
      </Targets>
      <Member MemberName="ResolveAlbumName">
        <MemberSignature Language="C#" Value="public static void ResolveAlbumName (this Intents.IINStartPhotoPlaybackIntentHandling This, Intents.INStartPhotoPlaybackIntent intent, Action&lt;Intents.INStringResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveAlbumName(class Intents.IINStartPhotoPlaybackIntentHandling This, class Intents.INStartPhotoPlaybackIntent intent, class System.Action`1&lt;class Intents.INStringResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINStartPhotoPlaybackIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INStartPhotoPlaybackIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INStringResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V46))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to confirm that they can resolve the photo album name.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INStartPhotoPlaybackIntentHandling_Extensions" Member="M:MonoTouch.Intents.INStartPhotoPlaybackIntentHandling_Extensions.ResolveAlbumName(MonoTouch.Intents.IINStartPhotoPlaybackIntentHandling,MonoTouch.Intents.INStartPhotoPlaybackIntent,System.Action{MonoTouch.Intents.INStringResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINStartPhotoPlaybackIntentHandling" />
      </Targets>
      <Member MemberName="ResolveDateCreated">
        <MemberSignature Language="C#" Value="public static void ResolveDateCreated (this Intents.IINStartPhotoPlaybackIntentHandling This, Intents.INStartPhotoPlaybackIntent intent, Action&lt;Intents.INDateComponentsRangeResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveDateCreated(class Intents.IINStartPhotoPlaybackIntentHandling This, class Intents.INStartPhotoPlaybackIntent intent, class System.Action`1&lt;class Intents.INDateComponentsRangeResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINStartPhotoPlaybackIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INStartPhotoPlaybackIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INDateComponentsRangeResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V81))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this in order to customize the behavior of resolving the dates when the photos were taken.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INStartPhotoPlaybackIntentHandling_Extensions" Member="M:MonoTouch.Intents.INStartPhotoPlaybackIntentHandling_Extensions.ResolveDateCreated(MonoTouch.Intents.IINStartPhotoPlaybackIntentHandling,MonoTouch.Intents.INStartPhotoPlaybackIntent,System.Action{MonoTouch.Intents.INDateComponentsRangeResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINStartPhotoPlaybackIntentHandling" />
      </Targets>
      <Member MemberName="ResolveLocationCreated">
        <MemberSignature Language="C#" Value="public static void ResolveLocationCreated (this Intents.IINStartPhotoPlaybackIntentHandling This, Intents.INStartPhotoPlaybackIntent intent, Action&lt;Intents.INPlacemarkResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveLocationCreated(class Intents.IINStartPhotoPlaybackIntentHandling This, class Intents.INStartPhotoPlaybackIntent intent, class System.Action`1&lt;class Intents.INPlacemarkResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINStartPhotoPlaybackIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INStartPhotoPlaybackIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INPlacemarkResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V65))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this in order to customize the behavior of resolving the location where the photos were taken.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INStartPhotoPlaybackIntentHandling_Extensions" Member="M:MonoTouch.Intents.INStartPhotoPlaybackIntentHandling_Extensions.ResolveLocationCreated(MonoTouch.Intents.IINStartPhotoPlaybackIntentHandling,MonoTouch.Intents.INStartPhotoPlaybackIntent,System.Action{MonoTouch.Intents.INPlacemarkResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINStartPhotoPlaybackIntentHandling" />
      </Targets>
      <Member MemberName="ResolvePeopleInPhoto">
        <MemberSignature Language="C#" Value="public static void ResolvePeopleInPhoto (this Intents.IINStartPhotoPlaybackIntentHandling This, Intents.INStartPhotoPlaybackIntent intent, Action&lt;Intents.INPersonResolutionResult[]&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolvePeopleInPhoto(class Intents.IINStartPhotoPlaybackIntentHandling This, class Intents.INStartPhotoPlaybackIntent intent, class System.Action`1&lt;class Intents.INPersonResolutionResult[]&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINStartPhotoPlaybackIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INStartPhotoPlaybackIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INPersonResolutionResult[]&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V82))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this in order to customize the behavior of resolving the people in the photo.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INStartPhotoPlaybackIntentHandling_Extensions" Member="M:MonoTouch.Intents.INStartPhotoPlaybackIntentHandling_Extensions.ResolvePeopleInPhoto(MonoTouch.Intents.IINStartPhotoPlaybackIntentHandling,MonoTouch.Intents.INStartPhotoPlaybackIntent,System.Action{MonoTouch.Intents.INPersonResolutionResult[]})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINStartVideoCallIntentHandling" />
      </Targets>
      <Member MemberName="ConfirmStartVideoCall">
        <MemberSignature Language="C#" Value="public static void ConfirmStartVideoCall (this Intents.IINStartVideoCallIntentHandling This, Intents.INStartVideoCallIntent intent, Action&lt;Intents.INStartVideoCallIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfirmStartVideoCall(class Intents.IINStartVideoCallIntentHandling This, class Intents.INStartVideoCallIntent intent, class System.Action`1&lt;class Intents.INStartVideoCallIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINStartVideoCallIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INStartVideoCallIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INStartVideoCallIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V49))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize behavior during confirmation to start a video call.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INStartVideoCallIntentHandling_Extensions" Member="M:MonoTouch.Intents.INStartVideoCallIntentHandling_Extensions.ConfirmStartVideoCall(MonoTouch.Intents.IINStartVideoCallIntentHandling,MonoTouch.Intents.INStartVideoCallIntent,System.Action{MonoTouch.Intents.INStartVideoCallIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINStartVideoCallIntentHandling" />
      </Targets>
      <Member MemberName="ResolveContacts">
        <MemberSignature Language="C#" Value="public static void ResolveContacts (this Intents.IINStartVideoCallIntentHandling This, Intents.INStartVideoCallIntent intent, Action&lt;Intents.INPersonResolutionResult[]&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveContacts(class Intents.IINStartVideoCallIntentHandling This, class Intents.INStartVideoCallIntent intent, class System.Action`1&lt;class Intents.INPersonResolutionResult[]&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINStartVideoCallIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INStartVideoCallIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INPersonResolutionResult[]&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V82))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize the resolution of a contact.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INStartVideoCallIntentHandling_Extensions" Member="M:MonoTouch.Intents.INStartVideoCallIntentHandling_Extensions.ResolveContacts(MonoTouch.Intents.IINStartVideoCallIntentHandling,MonoTouch.Intents.INStartVideoCallIntent,System.Action{MonoTouch.Intents.INPersonResolutionResult[]})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINStartWorkoutIntentHandling" />
      </Targets>
      <Member MemberName="ConfirmStartWorkout">
        <MemberSignature Language="C#" Value="public static void ConfirmStartWorkout (this Intents.IINStartWorkoutIntentHandling This, Intents.INStartWorkoutIntent intent, Action&lt;Intents.INStartWorkoutIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfirmStartWorkout(class Intents.IINStartWorkoutIntentHandling This, class Intents.INStartWorkoutIntent intent, class System.Action`1&lt;class Intents.INStartWorkoutIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINStartWorkoutIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INStartWorkoutIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INStartWorkoutIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V96))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize a workout's starting confirmation.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INStartWorkoutIntentHandling_Extensions" Member="M:MonoTouch.Intents.INStartWorkoutIntentHandling_Extensions.ConfirmStartWorkout(MonoTouch.Intents.IINStartWorkoutIntentHandling,MonoTouch.Intents.INStartWorkoutIntent,System.Action{MonoTouch.Intents.INStartWorkoutIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINStartWorkoutIntentHandling" />
      </Targets>
      <Member MemberName="ResolveGoalValue">
        <MemberSignature Language="C#" Value="public static void ResolveGoalValue (this Intents.IINStartWorkoutIntentHandling This, Intents.INStartWorkoutIntent intent, Action&lt;Intents.INDoubleResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveGoalValue(class Intents.IINStartWorkoutIntentHandling This, class Intents.INStartWorkoutIntent intent, class System.Action`1&lt;class Intents.INDoubleResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINStartWorkoutIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INStartWorkoutIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INDoubleResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V89))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize the resolution of a workout goal.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INStartWorkoutIntentHandling_Extensions" Member="M:MonoTouch.Intents.INStartWorkoutIntentHandling_Extensions.ResolveGoalValue(MonoTouch.Intents.IINStartWorkoutIntentHandling,MonoTouch.Intents.INStartWorkoutIntent,System.Action{MonoTouch.Intents.INDoubleResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINStartWorkoutIntentHandling" />
      </Targets>
      <Member MemberName="ResolveIsOpenEnded">
        <MemberSignature Language="C#" Value="public static void ResolveIsOpenEnded (this Intents.IINStartWorkoutIntentHandling This, Intents.INStartWorkoutIntent intent, Action&lt;Intents.INBooleanResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveIsOpenEnded(class Intents.IINStartWorkoutIntentHandling This, class Intents.INStartWorkoutIntent intent, class System.Action`1&lt;class Intents.INBooleanResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINStartWorkoutIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INStartWorkoutIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INBooleanResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V87))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize the determination of whether a workout is open-ended.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INStartWorkoutIntentHandling_Extensions" Member="M:MonoTouch.Intents.INStartWorkoutIntentHandling_Extensions.ResolveIsOpenEnded(MonoTouch.Intents.IINStartWorkoutIntentHandling,MonoTouch.Intents.INStartWorkoutIntent,System.Action{MonoTouch.Intents.INBooleanResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINStartWorkoutIntentHandling" />
      </Targets>
      <Member MemberName="ResolveWorkoutGoalUnitType">
        <MemberSignature Language="C#" Value="public static void ResolveWorkoutGoalUnitType (this Intents.IINStartWorkoutIntentHandling This, Intents.INStartWorkoutIntent intent, Action&lt;Intents.INWorkoutGoalUnitTypeResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveWorkoutGoalUnitType(class Intents.IINStartWorkoutIntentHandling This, class Intents.INStartWorkoutIntent intent, class System.Action`1&lt;class Intents.INWorkoutGoalUnitTypeResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINStartWorkoutIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INStartWorkoutIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INWorkoutGoalUnitTypeResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V97))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize the resolution of the type of the workout goal.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INStartWorkoutIntentHandling_Extensions" Member="M:MonoTouch.Intents.INStartWorkoutIntentHandling_Extensions.ResolveWorkoutGoalUnitType(MonoTouch.Intents.IINStartWorkoutIntentHandling,MonoTouch.Intents.INStartWorkoutIntent,System.Action{MonoTouch.Intents.INWorkoutGoalUnitTypeResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINStartWorkoutIntentHandling" />
      </Targets>
      <Member MemberName="ResolveWorkoutLocationType">
        <MemberSignature Language="C#" Value="public static void ResolveWorkoutLocationType (this Intents.IINStartWorkoutIntentHandling This, Intents.INStartWorkoutIntent intent, Action&lt;Intents.INWorkoutLocationTypeResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveWorkoutLocationType(class Intents.IINStartWorkoutIntentHandling This, class Intents.INStartWorkoutIntent intent, class System.Action`1&lt;class Intents.INWorkoutLocationTypeResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINStartWorkoutIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INStartWorkoutIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INWorkoutLocationTypeResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V98))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize the resolution of the workout location.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INStartWorkoutIntentHandling_Extensions" Member="M:MonoTouch.Intents.INStartWorkoutIntentHandling_Extensions.ResolveWorkoutLocationType(MonoTouch.Intents.IINStartWorkoutIntentHandling,MonoTouch.Intents.INStartWorkoutIntent,System.Action{MonoTouch.Intents.INWorkoutLocationTypeResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINStartWorkoutIntentHandling" />
      </Targets>
      <Member MemberName="ResolveWorkoutName">
        <MemberSignature Language="C#" Value="public static void ResolveWorkoutName (this Intents.IINStartWorkoutIntentHandling This, Intents.INStartWorkoutIntent intent, Action&lt;Intents.INSpeakableStringResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveWorkoutName(class Intents.IINStartWorkoutIntentHandling This, class Intents.INStartWorkoutIntent intent, class System.Action`1&lt;class Intents.INSpeakableStringResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINStartWorkoutIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INStartWorkoutIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INSpeakableStringResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V51))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers can call this method to trigger validation of the workout name.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INStartWorkoutIntentHandling_Extensions" Member="M:MonoTouch.Intents.INStartWorkoutIntentHandling_Extensions.ResolveWorkoutName(MonoTouch.Intents.IINStartWorkoutIntentHandling,MonoTouch.Intents.INStartWorkoutIntent,System.Action{MonoTouch.Intents.INSpeakableStringResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINTransferMoneyIntentHandling" />
      </Targets>
      <Member MemberName="Confirm">
        <MemberSignature Language="C#" Value="public static void Confirm (this Intents.IINTransferMoneyIntentHandling This, Intents.INTransferMoneyIntent intent, Action&lt;Intents.INTransferMoneyIntentResponse&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Confirm(class Intents.IINTransferMoneyIntentHandling This, class Intents.INTransferMoneyIntent intent, class System.Action`1&lt;class Intents.INTransferMoneyIntentResponse&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINTransferMoneyIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INTransferMoneyIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INTransferMoneyIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V146))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to confirm whether local and remote resources are ready to perform the transfer.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INTransferMoneyIntentHandling_Extensions" Member="M:MonoTouch.Intents.INTransferMoneyIntentHandling_Extensions.Confirm(MonoTouch.Intents.IINTransferMoneyIntentHandling,MonoTouch.Intents.INTransferMoneyIntent,System.Action{MonoTouch.Intents.INTransferMoneyIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINTransferMoneyIntentHandling" />
      </Targets>
      <Member MemberName="ResolveFromAccount">
        <MemberSignature Language="C#" Value="public static void ResolveFromAccount (this Intents.IINTransferMoneyIntentHandling This, Intents.INTransferMoneyIntent intent, Action&lt;Intents.INPaymentAccountResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveFromAccount(class Intents.IINTransferMoneyIntentHandling This, class Intents.INTransferMoneyIntent intent, class System.Action`1&lt;class Intents.INPaymentAccountResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINTransferMoneyIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INTransferMoneyIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INPaymentAccountResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V95))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize resolution of the transfer amount.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INTransferMoneyIntentHandling_Extensions" Member="M:MonoTouch.Intents.INTransferMoneyIntentHandling_Extensions.ResolveFromAccount(MonoTouch.Intents.IINTransferMoneyIntentHandling,MonoTouch.Intents.INTransferMoneyIntent,System.Action{MonoTouch.Intents.INPaymentAccountResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINTransferMoneyIntentHandling" />
      </Targets>
      <Member MemberName="ResolveToAccount">
        <MemberSignature Language="C#" Value="public static void ResolveToAccount (this Intents.IINTransferMoneyIntentHandling This, Intents.INTransferMoneyIntent intent, Action&lt;Intents.INPaymentAccountResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveToAccount(class Intents.IINTransferMoneyIntentHandling This, class Intents.INTransferMoneyIntent intent, class System.Action`1&lt;class Intents.INPaymentAccountResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINTransferMoneyIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INTransferMoneyIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INPaymentAccountResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V95))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize resolution of the account that will receive the transfer.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INTransferMoneyIntentHandling_Extensions" Member="M:MonoTouch.Intents.INTransferMoneyIntentHandling_Extensions.ResolveToAccount(MonoTouch.Intents.IINTransferMoneyIntentHandling,MonoTouch.Intents.INTransferMoneyIntent,System.Action{MonoTouch.Intents.INPaymentAccountResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINTransferMoneyIntentHandling" />
      </Targets>
      <Member MemberName="ResolveTransactionAmount">
        <MemberSignature Language="C#" Value="public static void ResolveTransactionAmount (this Intents.IINTransferMoneyIntentHandling This, Intents.INTransferMoneyIntent intent, Action&lt;Intents.INPaymentAmountResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveTransactionAmount(class Intents.IINTransferMoneyIntentHandling This, class Intents.INTransferMoneyIntent intent, class System.Action`1&lt;class Intents.INPaymentAmountResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINTransferMoneyIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INTransferMoneyIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INPaymentAmountResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V96))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize the resolution of the amount of the transaction.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INTransferMoneyIntentHandling_Extensions" Member="M:MonoTouch.Intents.INTransferMoneyIntentHandling_Extensions.ResolveTransactionAmount(MonoTouch.Intents.IINTransferMoneyIntentHandling,MonoTouch.Intents.INTransferMoneyIntent,System.Action{MonoTouch.Intents.INPaymentAmountResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINTransferMoneyIntentHandling" />
      </Targets>
      <Member MemberName="ResolveTransactionNote">
        <MemberSignature Language="C#" Value="public static void ResolveTransactionNote (this Intents.IINTransferMoneyIntentHandling This, Intents.INTransferMoneyIntent intent, Action&lt;Intents.INStringResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveTransactionNote(class Intents.IINTransferMoneyIntentHandling This, class Intents.INTransferMoneyIntent intent, class System.Action`1&lt;class Intents.INStringResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINTransferMoneyIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INTransferMoneyIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INStringResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V59))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize resolution of a note for a transfer.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INTransferMoneyIntentHandling_Extensions" Member="M:MonoTouch.Intents.INTransferMoneyIntentHandling_Extensions.ResolveTransactionNote(MonoTouch.Intents.IINTransferMoneyIntentHandling,MonoTouch.Intents.INTransferMoneyIntent,System.Action{MonoTouch.Intents.INStringResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.IINTransferMoneyIntentHandling" />
      </Targets>
      <Member MemberName="ResolveTransactionScheduledDate">
        <MemberSignature Language="C#" Value="public static void ResolveTransactionScheduledDate (this Intents.IINTransferMoneyIntentHandling This, Intents.INTransferMoneyIntent intent, Action&lt;Intents.INDateComponentsRangeResolutionResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveTransactionScheduledDate(class Intents.IINTransferMoneyIntentHandling This, class Intents.INTransferMoneyIntent intent, class System.Action`1&lt;class Intents.INDateComponentsRangeResolutionResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Intents.IINTransferMoneyIntentHandling" RefType="this" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INTransferMoneyIntent" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Intents.INDateComponentsRangeResolutionResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V97))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Developers may implement this method to customize resolution of a scheduled transfer date.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INTransferMoneyIntentHandling_Extensions" Member="M:MonoTouch.Intents.INTransferMoneyIntentHandling_Extensions.ResolveTransactionScheduledDate(MonoTouch.Intents.IINTransferMoneyIntentHandling,MonoTouch.Intents.INTransferMoneyIntent,System.Action{MonoTouch.Intents.INDateComponentsRangeResolutionResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Intents.INWorkoutNameIdentifier" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this Intents.INWorkoutNameIdentifier self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype Intents.INWorkoutNameIdentifier self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.Intents.INWorkoutNameIdentifier" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>Gets the <see cref="T:Foundation.NSString" /> associated with <see langword="this" />.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.INWorkoutNameIdentifierExtensions" Member="M:MonoTouch.Intents.INWorkoutNameIdentifierExtensions.GetConstant(MonoTouch.Intents.INWorkoutNameIdentifier)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSUserActivity" />
      </Targets>
      <Member MemberName="GetInteraction">
        <MemberSignature Language="C#" Value="public static Intents.INInteraction GetInteraction (this Foundation.NSUserActivity This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Intents.INInteraction GetInteraction(class Foundation.NSUserActivity This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Intents.INInteraction</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSUserActivity" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Retrieves the <see cref="T:Intents.INInteraction" /> associated with <c>this</c><see cref="T:Foundation.NSUserActivity" />.</summary>
        </Docs>
        <Link Type="MonoTouch.Intents.NSUserActivity_IntentsAdditions" Member="M:MonoTouch.Intents.NSUserActivity_IntentsAdditions.GetInteraction(MonoTouch.Foundation.NSUserActivity)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.IntentsUI.IINUIHostedViewControlling" />
      </Targets>
      <Member MemberName="ConfigureView">
        <MemberSignature Language="C#" Value="public static void ConfigureView (this IntentsUI.IINUIHostedViewControlling This, Foundation.NSSet&lt;Intents.INParameter&gt; parameters, Intents.INInteraction interaction, IntentsUI.INUIInteractiveBehavior interactiveBehavior, IntentsUI.INUIHostedViewContext context, IntentsUI.INUIHostedViewControllingConfigureViewHandler completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConfigureView(class IntentsUI.IINUIHostedViewControlling This, class Foundation.NSSet`1&lt;class Intents.INParameter&gt; parameters, class Intents.INInteraction interaction, valuetype IntentsUI.INUIInteractiveBehavior interactiveBehavior, valuetype IntentsUI.INUIHostedViewContext context, class IntentsUI.INUIHostedViewControllingConfigureViewHandler completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.IntentsUI.IINUIHostedViewControlling" RefType="this" />
          <Parameter Name="parameters" Type="MonoTouch.Foundation.NSSet&lt;MonoTouch.Intents.INParameter&gt;" />
          <Parameter Name="interaction" Type="MonoTouch.Intents.INInteraction" />
          <Parameter Name="interactiveBehavior" Type="MonoTouch.IntentsUI.INUIInteractiveBehavior" />
          <Parameter Name="context" Type="MonoTouch.IntentsUI.INUIHostedViewContext" />
          <Parameter Name="completionHandler" Type="MonoTouch.IntentsUI.INUIHostedViewControllingConfigureViewHandler">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDINUIHostedViewControllingConfigureViewHandler))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="parameters">To be added.</param>
          <param name="interaction">To be added.</param>
          <param name="interactiveBehavior">To be added.</param>
          <param name="context">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.IntentsUI.INUIHostedViewControlling_Extensions" Member="M:MonoTouch.IntentsUI.INUIHostedViewControlling_Extensions.ConfigureView(MonoTouch.IntentsUI.IINUIHostedViewControlling,MonoTouch.Foundation.NSSet{MonoTouch.Intents.INParameter},MonoTouch.Intents.INInteraction,MonoTouch.IntentsUI.INUIInteractiveBehavior,MonoTouch.IntentsUI.INUIHostedViewContext,MonoTouch.IntentsUI.INUIHostedViewControllingConfigureViewHandler)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.IntentsUI.IINUIHostedViewSiriProviding" />
      </Targets>
      <Member MemberName="GetDisplaysMap">
        <MemberSignature Language="C#" Value="public static bool GetDisplaysMap (this IntentsUI.IINUIHostedViewSiriProviding This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetDisplaysMap(class IntentsUI.IINUIHostedViewSiriProviding This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.IntentsUI.IINUIHostedViewSiriProviding" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.IntentsUI.INUIHostedViewSiriProviding_Extensions" Member="M:MonoTouch.IntentsUI.INUIHostedViewSiriProviding_Extensions.GetDisplaysMap(MonoTouch.IntentsUI.IINUIHostedViewSiriProviding)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.IntentsUI.IINUIHostedViewSiriProviding" />
      </Targets>
      <Member MemberName="GetDisplaysMessage">
        <MemberSignature Language="C#" Value="public static bool GetDisplaysMessage (this IntentsUI.IINUIHostedViewSiriProviding This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetDisplaysMessage(class IntentsUI.IINUIHostedViewSiriProviding This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.IntentsUI.IINUIHostedViewSiriProviding" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.IntentsUI.INUIHostedViewSiriProviding_Extensions" Member="M:MonoTouch.IntentsUI.INUIHostedViewSiriProviding_Extensions.GetDisplaysMessage(MonoTouch.IntentsUI.IINUIHostedViewSiriProviding)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.IntentsUI.IINUIHostedViewSiriProviding" />
      </Targets>
      <Member MemberName="GetDisplaysPaymentTransaction">
        <MemberSignature Language="C#" Value="public static bool GetDisplaysPaymentTransaction (this IntentsUI.IINUIHostedViewSiriProviding This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetDisplaysPaymentTransaction(class IntentsUI.IINUIHostedViewSiriProviding This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.IntentsUI.IINUIHostedViewSiriProviding" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.IntentsUI.INUIHostedViewSiriProviding_Extensions" Member="M:MonoTouch.IntentsUI.INUIHostedViewSiriProviding_Extensions.GetDisplaysPaymentTransaction(MonoTouch.IntentsUI.IINUIHostedViewSiriProviding)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSExtensionContext" />
      </Targets>
      <Member MemberName="GetHostedViewMaximumAllowedSize">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize GetHostedViewMaximumAllowedSize (this Foundation.NSExtensionContext This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize GetHostedViewMaximumAllowedSize(class Foundation.NSExtensionContext This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSExtensionContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.IntentsUI.NSExtensionContext_INUIHostedViewControlling" Member="M:MonoTouch.IntentsUI.NSExtensionContext_INUIHostedViewControlling.GetHostedViewMaximumAllowedSize(MonoTouch.Foundation.NSExtensionContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSExtensionContext" />
      </Targets>
      <Member MemberName="GetHostedViewMinimumAllowedSize">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize GetHostedViewMinimumAllowedSize (this Foundation.NSExtensionContext This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize GetHostedViewMinimumAllowedSize(class Foundation.NSExtensionContext This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSExtensionContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.IntentsUI.NSExtensionContext_INUIHostedViewControlling" Member="M:MonoTouch.IntentsUI.NSExtensionContext_INUIHostedViewControlling.GetHostedViewMinimumAllowedSize(MonoTouch.Foundation.NSExtensionContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSExtensionContext" />
      </Targets>
      <Member MemberName="GetInterfaceParametersDescription">
        <MemberSignature Language="C#" Value="public static string GetInterfaceParametersDescription (this Foundation.NSExtensionContext This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetInterfaceParametersDescription(class Foundation.NSExtensionContext This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSExtensionContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.IntentsUI.NSExtensionContext_INUIHostedViewControlling" Member="M:MonoTouch.IntentsUI.NSExtensionContext_INUIHostedViewControlling.GetInterfaceParametersDescription(MonoTouch.Foundation.NSExtensionContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.LocalAuthentication.LAStatus" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this LocalAuthentication.LAStatus self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype LocalAuthentication.LAStatus self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.LocalAuthentication.LAStatus" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.LocalAuthentication.LAStatus value</summary>
        </Docs>
        <Link Type="MonoTouch.LocalAuthentication.LAStatusExtensions" Member="M:MonoTouch.LocalAuthentication.LAStatusExtensions.GetDomain(MonoTouch.LocalAuthentication.LAStatus)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKAnnotation" />
      </Targets>
      <Member MemberName="GetSubtitle">
        <MemberSignature Language="C#" Value="public static string GetSubtitle (this MapKit.IMKAnnotation This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetSubtitle(class MapKit.IMKAnnotation This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKAnnotation" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKAnnotation_Extensions" Member="M:MonoTouch.MapKit.MKAnnotation_Extensions.GetSubtitle(MonoTouch.MapKit.IMKAnnotation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKAnnotation" />
      </Targets>
      <Member MemberName="GetTitle">
        <MemberSignature Language="C#" Value="public static string GetTitle (this MapKit.IMKAnnotation This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTitle(class MapKit.IMKAnnotation This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKAnnotation" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKAnnotation_Extensions" Member="M:MonoTouch.MapKit.MKAnnotation_Extensions.GetTitle(MonoTouch.MapKit.IMKAnnotation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKAnnotation" />
      </Targets>
      <Member MemberName="SetCoordinate">
        <MemberSignature Language="C#" Value="public static void SetCoordinate (this MapKit.IMKAnnotation This, CoreLocation.CLLocationCoordinate2D value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCoordinate(class MapKit.IMKAnnotation This, valuetype CoreLocation.CLLocationCoordinate2D value) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKAnnotation" RefType="this" />
          <Parameter Name="value" Type="MonoTouch.CoreLocation.CLLocationCoordinate2D" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="value">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKAnnotation_Extensions" Member="M:MonoTouch.MapKit.MKAnnotation_Extensions.SetCoordinate(MonoTouch.MapKit.IMKAnnotation,MonoTouch.CoreLocation.CLLocationCoordinate2D)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.MKErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this MapKit.MKErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype MapKit.MKErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.MapKit.MKErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.MapKit.MKErrorCode value</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKErrorCodeExtensions" Member="M:MonoTouch.MapKit.MKErrorCodeExtensions.GetDomain(MonoTouch.MapKit.MKErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKLocalSearchCompleterDelegate" />
      </Targets>
      <Member MemberName="DidFail">
        <MemberSignature Language="C#" Value="public static void DidFail (this MapKit.IMKLocalSearchCompleterDelegate This, MapKit.MKLocalSearchCompleter completer, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFail(class MapKit.IMKLocalSearchCompleterDelegate This, class MapKit.MKLocalSearchCompleter completer, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKLocalSearchCompleterDelegate" RefType="this" />
          <Parameter Name="completer" Type="MonoTouch.MapKit.MKLocalSearchCompleter" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="completer">The search completer to which this delegate belongs.</param>
          <param name="error">The error that occured.</param>
          <summary>The search completer encountered an error while searching for completions.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKLocalSearchCompleterDelegate_Extensions" Member="M:MonoTouch.MapKit.MKLocalSearchCompleterDelegate_Extensions.DidFail(MonoTouch.MapKit.IMKLocalSearchCompleterDelegate,MonoTouch.MapKit.MKLocalSearchCompleter,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKLocalSearchCompleterDelegate" />
      </Targets>
      <Member MemberName="DidUpdateResults">
        <MemberSignature Language="C#" Value="public static void DidUpdateResults (this MapKit.IMKLocalSearchCompleterDelegate This, MapKit.MKLocalSearchCompleter completer);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateResults(class MapKit.IMKLocalSearchCompleterDelegate This, class MapKit.MKLocalSearchCompleter completer) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKLocalSearchCompleterDelegate" RefType="this" />
          <Parameter Name="completer" Type="MonoTouch.MapKit.MKLocalSearchCompleter" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="completer">The search completer to which this delegate belongs.</param>
          <summary>The search completer updated the results with new search completions.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKLocalSearchCompleterDelegate_Extensions" Member="M:MonoTouch.MapKit.MKLocalSearchCompleterDelegate_Extensions.DidUpdateResults(MonoTouch.MapKit.IMKLocalSearchCompleterDelegate,MonoTouch.MapKit.MKLocalSearchCompleter)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="CalloutAccessoryControlTapped">
        <MemberSignature Language="C#" Value="public static void CalloutAccessoryControlTapped (this MapKit.IMKMapViewDelegate This, MapKit.MKMapView mapView, MapKit.MKAnnotationView view, UIKit.UIControl control);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CalloutAccessoryControlTapped(class MapKit.IMKMapViewDelegate This, class MapKit.MKMapView mapView, class MapKit.MKAnnotationView view, class UIKit.UIControl control) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
          <Parameter Name="view" Type="MonoTouch.MapKit.MKAnnotationView" />
          <Parameter Name="control" Type="MonoTouch.UIKit.UIControl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <param name="view">To be added.</param>
          <param name="control">To be added.</param>
          <summary>Called when the callout accessory <paramref name="control" /> has been tapped.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.CalloutAccessoryControlTapped(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView,MonoTouch.MapKit.MKAnnotationView,MonoTouch.UIKit.UIControl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="ChangedDragState">
        <MemberSignature Language="C#" Value="public static void ChangedDragState (this MapKit.IMKMapViewDelegate This, MapKit.MKMapView mapView, MapKit.MKAnnotationView annotationView, MapKit.MKAnnotationViewDragState newState, MapKit.MKAnnotationViewDragState oldState);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangedDragState(class MapKit.IMKMapViewDelegate This, class MapKit.MKMapView mapView, class MapKit.MKAnnotationView annotationView, valuetype MapKit.MKAnnotationViewDragState newState, valuetype MapKit.MKAnnotationViewDragState oldState) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
          <Parameter Name="annotationView" Type="MonoTouch.MapKit.MKAnnotationView" />
          <Parameter Name="newState" Type="MonoTouch.MapKit.MKAnnotationViewDragState" />
          <Parameter Name="oldState" Type="MonoTouch.MapKit.MKAnnotationViewDragState" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <param name="annotationView">To be added.</param>
          <param name="newState">To be added.</param>
          <param name="oldState">To be added.</param>
          <summary>Called when the drag state has changed from <paramref name="oldState" /> to <paramref name="newState" />.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.ChangedDragState(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView,MonoTouch.MapKit.MKAnnotationView,MonoTouch.MapKit.MKAnnotationViewDragState,MonoTouch.MapKit.MKAnnotationViewDragState)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="CreateClusterAnnotation">
        <MemberSignature Language="C#" Value="public static MapKit.MKClusterAnnotation CreateClusterAnnotation (this MapKit.IMKMapViewDelegate This, MapKit.MKMapView mapView, MapKit.IMKAnnotation[] memberAnnotations);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MapKit.MKClusterAnnotation CreateClusterAnnotation(class MapKit.IMKMapViewDelegate This, class MapKit.MKMapView mapView, class MapKit.IMKAnnotation[] memberAnnotations) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.MapKit.MKClusterAnnotation</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
          <Parameter Name="memberAnnotations" Type="MonoTouch.MapKit.IMKAnnotation[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <param name="memberAnnotations">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.CreateClusterAnnotation(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView,MonoTouch.MapKit.IMKAnnotation[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="DidAddAnnotationViews">
        <MemberSignature Language="C#" Value="public static void DidAddAnnotationViews (this MapKit.IMKMapViewDelegate This, MapKit.MKMapView mapView, MapKit.MKAnnotationView[] views);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAddAnnotationViews(class MapKit.IMKMapViewDelegate This, class MapKit.MKMapView mapView, class MapKit.MKAnnotationView[] views) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
          <Parameter Name="views" Type="MonoTouch.MapKit.MKAnnotationView[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <param name="views">To be added.</param>
          <summary>Called when an annotation view (or views) have been added to <paramref name="mapView" />.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.DidAddAnnotationViews(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView,MonoTouch.MapKit.MKAnnotationView[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="DidAddOverlayRenderers">
        <MemberSignature Language="C#" Value="public static void DidAddOverlayRenderers (this MapKit.IMKMapViewDelegate This, MapKit.MKMapView mapView, MapKit.MKOverlayRenderer[] renderers);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAddOverlayRenderers(class MapKit.IMKMapViewDelegate This, class MapKit.MKMapView mapView, class MapKit.MKOverlayRenderer[] renderers) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
          <Parameter Name="renderers" Type="MonoTouch.MapKit.MKOverlayRenderer[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <param name="renderers">To be added.</param>
          <summary>Called when an overlay renderer (or renderers) have been added to <paramref name="mapView" />.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.DidAddOverlayRenderers(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView,MonoTouch.MapKit.MKOverlayRenderer[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="DidAddOverlayViews">
        <MemberSignature Language="C#" Value="public static void DidAddOverlayViews (this MapKit.IMKMapViewDelegate This, MapKit.MKMapView mapView, MapKit.MKOverlayView overlayViews);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAddOverlayViews(class MapKit.IMKMapViewDelegate This, class MapKit.MKMapView mapView, class MapKit.MKOverlayView overlayViews) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
          <Parameter Name="overlayViews" Type="MonoTouch.MapKit.MKOverlayView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <param name="overlayViews">To be added.</param>
          <summary>Called when <paramref name="overlayViews" /> have been added to <paramref name="mapView" />.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.DidAddOverlayViews(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView,MonoTouch.MapKit.MKOverlayView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="DidChangeUserTrackingMode">
        <MemberSignature Language="C#" Value="public static void DidChangeUserTrackingMode (this MapKit.IMKMapViewDelegate This, MapKit.MKMapView mapView, MapKit.MKUserTrackingMode mode, bool animated);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidChangeUserTrackingMode(class MapKit.IMKMapViewDelegate This, class MapKit.MKMapView mapView, valuetype MapKit.MKUserTrackingMode mode, bool animated) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
          <Parameter Name="mode" Type="MonoTouch.MapKit.MKUserTrackingMode" />
          <Parameter Name="animated" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <param name="mode">To be added.</param>
          <param name="animated">To be added.</param>
          <summary>Indicates a change in the active <see cref="T:MapKit.MKUserTrackingMode" />.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.DidChangeUserTrackingMode(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView,MonoTouch.MapKit.MKUserTrackingMode,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="DidDeselectAnnotationView">
        <MemberSignature Language="C#" Value="public static void DidDeselectAnnotationView (this MapKit.IMKMapViewDelegate This, MapKit.MKMapView mapView, MapKit.MKAnnotationView view);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDeselectAnnotationView(class MapKit.IMKMapViewDelegate This, class MapKit.MKMapView mapView, class MapKit.MKAnnotationView view) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
          <Parameter Name="view" Type="MonoTouch.MapKit.MKAnnotationView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <param name="view">To be added.</param>
          <summary>Indicates that <paramref name="view" /> has been deselected.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.DidDeselectAnnotationView(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView,MonoTouch.MapKit.MKAnnotationView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="DidFailToLocateUser">
        <MemberSignature Language="C#" Value="public static void DidFailToLocateUser (this MapKit.IMKMapViewDelegate This, MapKit.MKMapView mapView, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFailToLocateUser(class MapKit.IMKMapViewDelegate This, class MapKit.MKMapView mapView, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <param name="error">To be added.</param>
          <summary>Indicates that the attempt to locate the current user has failed due to <paramref name="error" />.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.DidFailToLocateUser(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="DidFinishRenderingMap">
        <MemberSignature Language="C#" Value="public static void DidFinishRenderingMap (this MapKit.IMKMapViewDelegate This, MapKit.MKMapView mapView, bool fullyRendered);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinishRenderingMap(class MapKit.IMKMapViewDelegate This, class MapKit.MKMapView mapView, bool fullyRendered) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
          <Parameter Name="fullyRendered" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <param name="fullyRendered">To be added.</param>
          <summary>Indicates that rendering of <paramref name="mapView" /> has completed.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.DidFinishRenderingMap(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="DidSelectAnnotationView">
        <MemberSignature Language="C#" Value="public static void DidSelectAnnotationView (this MapKit.IMKMapViewDelegate This, MapKit.MKMapView mapView, MapKit.MKAnnotationView view);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSelectAnnotationView(class MapKit.IMKMapViewDelegate This, class MapKit.MKMapView mapView, class MapKit.MKAnnotationView view) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
          <Parameter Name="view" Type="MonoTouch.MapKit.MKAnnotationView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <param name="view">To be added.</param>
          <summary>Indicates that the specified <see cref="T:MapKit.MKAnnotationView" /> has been selected.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.DidSelectAnnotationView(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView,MonoTouch.MapKit.MKAnnotationView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="DidStopLocatingUser">
        <MemberSignature Language="C#" Value="public static void DidStopLocatingUser (this MapKit.IMKMapViewDelegate This, MapKit.MKMapView mapView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidStopLocatingUser(class MapKit.IMKMapViewDelegate This, class MapKit.MKMapView mapView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <summary>Indicates the system has stopped attemptig to locate the user.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.DidStopLocatingUser(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="DidUpdateUserLocation">
        <MemberSignature Language="C#" Value="public static void DidUpdateUserLocation (this MapKit.IMKMapViewDelegate This, MapKit.MKMapView mapView, MapKit.MKUserLocation userLocation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateUserLocation(class MapKit.IMKMapViewDelegate This, class MapKit.MKMapView mapView, class MapKit.MKUserLocation userLocation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
          <Parameter Name="userLocation" Type="MonoTouch.MapKit.MKUserLocation" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <param name="userLocation">To be added.</param>
          <summary>Indicates the system has provided an update to the user's location.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.DidUpdateUserLocation(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView,MonoTouch.MapKit.MKUserLocation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="GetViewForAnnotation">
        <MemberSignature Language="C#" Value="public static MapKit.MKAnnotationView GetViewForAnnotation (this MapKit.IMKMapViewDelegate This, MapKit.MKMapView mapView, MapKit.IMKAnnotation annotation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MapKit.MKAnnotationView GetViewForAnnotation(class MapKit.IMKMapViewDelegate This, class MapKit.MKMapView mapView, class MapKit.IMKAnnotation annotation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.MapKit.MKAnnotationView</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
          <Parameter Name="annotation" Type="MonoTouch.MapKit.IMKAnnotation" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <param name="annotation">To be added.</param>
          <summary>Returns the <see cref="T:MapKit.MKAnnotationView" /> associated with the <paramref name="annotation" />.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.GetViewForAnnotation(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView,MonoTouch.MapKit.IMKAnnotation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="GetViewForOverlay">
        <MemberSignature Language="C#" Value="public static MapKit.MKOverlayView GetViewForOverlay (this MapKit.IMKMapViewDelegate This, MapKit.MKMapView mapView, MapKit.IMKOverlay overlay);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MapKit.MKOverlayView GetViewForOverlay(class MapKit.IMKMapViewDelegate This, class MapKit.MKMapView mapView, class MapKit.IMKOverlay overlay) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.MapKit.MKOverlayView</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
          <Parameter Name="overlay" Type="MonoTouch.MapKit.IMKOverlay" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <param name="overlay">To be added.</param>
          <summary>Use MKOverlayRenderer.RendererForOverlay instead</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.GetViewForOverlay(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView,MonoTouch.MapKit.IMKOverlay)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="LoadingMapFailed">
        <MemberSignature Language="C#" Value="public static void LoadingMapFailed (this MapKit.IMKMapViewDelegate This, MapKit.MKMapView mapView, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadingMapFailed(class MapKit.IMKMapViewDelegate This, class MapKit.MKMapView mapView, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <param name="error">To be added.</param>
          <summary>Indicates an <paramref name="error" /> caused loading to fail.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.LoadingMapFailed(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="MapLoaded">
        <MemberSignature Language="C#" Value="public static void MapLoaded (this MapKit.IMKMapViewDelegate This, MapKit.MKMapView mapView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MapLoaded(class MapKit.IMKMapViewDelegate This, class MapKit.MKMapView mapView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <summary>Indicates that loading of map data has completed.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.MapLoaded(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="OverlayRenderer">
        <MemberSignature Language="C#" Value="public static MapKit.MKOverlayRenderer OverlayRenderer (this MapKit.IMKMapViewDelegate This, MapKit.MKMapView mapView, MapKit.IMKOverlay overlay);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MapKit.MKOverlayRenderer OverlayRenderer(class MapKit.IMKMapViewDelegate This, class MapKit.MKMapView mapView, class MapKit.IMKOverlay overlay) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.MapKit.MKOverlayRenderer</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
          <Parameter Name="overlay" Type="MonoTouch.MapKit.IMKOverlay" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">The  being rendered.</param>
          <param name="overlay">The overlay requiring a renderer.</param>
          <summary>Calculates he <see cref="T:MapKit.MKOverlayRenderer" /> appropriate to the <paramref name="overlay" />.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.OverlayRenderer(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView,MonoTouch.MapKit.IMKOverlay)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="RegionChanged">
        <MemberSignature Language="C#" Value="public static void RegionChanged (this MapKit.IMKMapViewDelegate This, MapKit.MKMapView mapView, bool animated);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegionChanged(class MapKit.IMKMapViewDelegate This, class MapKit.MKMapView mapView, bool animated) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
          <Parameter Name="animated" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <param name="animated">To be added.</param>
          <summary>Indicates the region displayed by <paramref name="mapView" /> has changed.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.RegionChanged(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="RegionWillChange">
        <MemberSignature Language="C#" Value="public static void RegionWillChange (this MapKit.IMKMapViewDelegate This, MapKit.MKMapView mapView, bool animated);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegionWillChange(class MapKit.IMKMapViewDelegate This, class MapKit.MKMapView mapView, bool animated) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
          <Parameter Name="animated" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <param name="animated">To be added.</param>
          <summary>Indicates the region displayed by <paramref name="mapView" /> is about to change.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.RegionWillChange(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="WillStartLoadingMap">
        <MemberSignature Language="C#" Value="public static void WillStartLoadingMap (this MapKit.IMKMapViewDelegate This, MapKit.MKMapView mapView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillStartLoadingMap(class MapKit.IMKMapViewDelegate This, class MapKit.MKMapView mapView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <summary>Indicates that loading of map data is about to begin.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.WillStartLoadingMap(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="WillStartLocatingUser">
        <MemberSignature Language="C#" Value="public static void WillStartLocatingUser (this MapKit.IMKMapViewDelegate This, MapKit.MKMapView mapView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillStartLocatingUser(class MapKit.IMKMapViewDelegate This, class MapKit.MKMapView mapView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <summary>Indicates that the system will start attempting to locate the user.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.WillStartLocatingUser(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="WillStartRenderingMap">
        <MemberSignature Language="C#" Value="public static void WillStartRenderingMap (this MapKit.IMKMapViewDelegate This, MapKit.MKMapView mapView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillStartRenderingMap(class MapKit.IMKMapViewDelegate This, class MapKit.MKMapView mapView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <summary>Indicates that rendering of <paramref name="mapView" /> is about to begin.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.WillStartRenderingMap(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKOverlay" />
      </Targets>
      <Member MemberName="GetCanReplaceMapContent">
        <MemberSignature Language="C#" Value="public static bool GetCanReplaceMapContent (this MapKit.IMKOverlay This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetCanReplaceMapContent(class MapKit.IMKOverlay This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKOverlay" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKOverlay_Extensions" Member="M:MonoTouch.MapKit.MKOverlay_Extensions.GetCanReplaceMapContent(MonoTouch.MapKit.IMKOverlay)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKOverlay" />
      </Targets>
      <Member MemberName="Intersects">
        <MemberSignature Language="C#" Value="public static bool Intersects (this MapKit.IMKOverlay This, MapKit.MKMapRect rect);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Intersects(class MapKit.IMKOverlay This, valuetype MapKit.MKMapRect rect) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKOverlay" RefType="this" />
          <Parameter Name="rect" Type="MonoTouch.MapKit.MKMapRect" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="rect">The area being checked for intersection with this .</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKOverlay_Extensions" Member="M:MonoTouch.MapKit.MKOverlay_Extensions.Intersects(MonoTouch.MapKit.IMKOverlay,MonoTouch.MapKit.MKMapRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSUserActivity" />
      </Targets>
      <Member MemberName="GetMapItem">
        <MemberSignature Language="C#" Value="public static MapKit.MKMapItem GetMapItem (this Foundation.NSUserActivity This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MapKit.MKMapItem GetMapItem(class Foundation.NSUserActivity This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.MapKit.MKMapItem</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSUserActivity" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">The NSUserActivity on which this method operates.</param>
          <summary>Gets the mapkit item on <paramref name="This" />.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.NSUserActivity_MKMapItem" Member="M:MonoTouch.MapKit.NSUserActivity_MKMapItem.GetMapItem(MonoTouch.Foundation.NSUserActivity)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSUserActivity" />
      </Targets>
      <Member MemberName="SetMapItem">
        <MemberSignature Language="C#" Value="public static void SetMapItem (this Foundation.NSUserActivity This, MapKit.MKMapItem item);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetMapItem(class Foundation.NSUserActivity This, class MapKit.MKMapItem item) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSUserActivity" RefType="this" />
          <Parameter Name="item" Type="MonoTouch.MapKit.MKMapItem" />
        </Parameters>
        <Docs>
          <param name="This">The NSUserActivity on which this method operates.</param>
          <param name="item">The new mapkit item.</param>
          <summary>Sets the mapkit item on <paramref name="This" /> to <paramref name="item" />.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.NSUserActivity_MKMapItem" Member="M:MonoTouch.MapKit.NSUserActivity_MKMapItem.SetMapItem(MonoTouch.Foundation.NSUserActivity,MonoTouch.MapKit.MKMapItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MediaPlayer.MPErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this MediaPlayer.MPErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype MediaPlayer.MPErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.MediaPlayer.MPErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.MediaPlayer.MPErrorCode value</summary>
        </Docs>
        <Link Type="MonoTouch.MediaPlayer.MPErrorCodeExtensions" Member="M:MonoTouch.MediaPlayer.MPErrorCodeExtensions.GetDomain(MonoTouch.MediaPlayer.MPErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MediaPlayer.IMPMediaPickerControllerDelegate" />
      </Targets>
      <Member MemberName="MediaItemsPicked">
        <MemberSignature Language="C#" Value="public static void MediaItemsPicked (this MediaPlayer.IMPMediaPickerControllerDelegate This, MediaPlayer.MPMediaPickerController sender, MediaPlayer.MPMediaItemCollection mediaItemCollection);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MediaItemsPicked(class MediaPlayer.IMPMediaPickerControllerDelegate This, class MediaPlayer.MPMediaPickerController sender, class MediaPlayer.MPMediaItemCollection mediaItemCollection) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MediaPlayer.IMPMediaPickerControllerDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.MediaPlayer.MPMediaPickerController" />
          <Parameter Name="mediaItemCollection" Type="MonoTouch.MediaPlayer.MPMediaItemCollection" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <param name="mediaItemCollection">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MediaPlayer.MPMediaPickerControllerDelegate_Extensions" Member="M:MonoTouch.MediaPlayer.MPMediaPickerControllerDelegate_Extensions.MediaItemsPicked(MonoTouch.MediaPlayer.IMPMediaPickerControllerDelegate,MonoTouch.MediaPlayer.MPMediaPickerController,MonoTouch.MediaPlayer.MPMediaItemCollection)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MediaPlayer.IMPMediaPickerControllerDelegate" />
      </Targets>
      <Member MemberName="MediaPickerDidCancel">
        <MemberSignature Language="C#" Value="public static void MediaPickerDidCancel (this MediaPlayer.IMPMediaPickerControllerDelegate This, MediaPlayer.MPMediaPickerController sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MediaPickerDidCancel(class MediaPlayer.IMPMediaPickerControllerDelegate This, class MediaPlayer.MPMediaPickerController sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MediaPlayer.IMPMediaPickerControllerDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.MediaPlayer.MPMediaPickerController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MediaPlayer.MPMediaPickerControllerDelegate_Extensions" Member="M:MonoTouch.MediaPlayer.MPMediaPickerControllerDelegate_Extensions.MediaPickerDidCancel(MonoTouch.MediaPlayer.IMPMediaPickerControllerDelegate,MonoTouch.MediaPlayer.MPMediaPickerController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MediaPlayer.IMPPlayableContentDataSource" />
      </Targets>
      <Member MemberName="BeginLoadingChildItems">
        <MemberSignature Language="C#" Value="public static void BeginLoadingChildItems (this MediaPlayer.IMPPlayableContentDataSource This, Foundation.NSIndexPath indexPath, Action&lt;Foundation.NSError&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BeginLoadingChildItems(class MediaPlayer.IMPPlayableContentDataSource This, class Foundation.NSIndexPath indexPath, class System.Action`1&lt;class Foundation.NSError&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MediaPlayer.IMPPlayableContentDataSource" RefType="this" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSError&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V0))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="indexPath">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MediaPlayer.MPPlayableContentDataSource_Extensions" Member="M:MonoTouch.MediaPlayer.MPPlayableContentDataSource_Extensions.BeginLoadingChildItems(MonoTouch.MediaPlayer.IMPPlayableContentDataSource,MonoTouch.Foundation.NSIndexPath,System.Action{MonoTouch.Foundation.NSError})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MediaPlayer.IMPPlayableContentDataSource" />
      </Targets>
      <Member MemberName="ChildItemsDisplayPlaybackProgress">
        <MemberSignature Language="C#" Value="public static bool ChildItemsDisplayPlaybackProgress (this MediaPlayer.IMPPlayableContentDataSource This, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ChildItemsDisplayPlaybackProgress(class MediaPlayer.IMPPlayableContentDataSource This, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MediaPlayer.IMPPlayableContentDataSource" RefType="this" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="indexPath">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MediaPlayer.MPPlayableContentDataSource_Extensions" Member="M:MonoTouch.MediaPlayer.MPPlayableContentDataSource_Extensions.ChildItemsDisplayPlaybackProgress(MonoTouch.MediaPlayer.IMPPlayableContentDataSource,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MediaPlayer.IMPPlayableContentDataSource" />
      </Targets>
      <Member MemberName="GetContentItem">
        <MemberSignature Language="C#" Value="public static void GetContentItem (this MediaPlayer.IMPPlayableContentDataSource This, string identifier, Action&lt;MediaPlayer.MPContentItem,Foundation.NSError&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetContentItem(class MediaPlayer.IMPPlayableContentDataSource This, string identifier, class System.Action`2&lt;class MediaPlayer.MPContentItem, class Foundation.NSError&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MediaPlayer.IMPPlayableContentDataSource" RefType="this" />
          <Parameter Name="identifier" Type="System.String" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.MediaPlayer.MPContentItem,MonoTouch.Foundation.NSError&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V56))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="identifier">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MediaPlayer.MPPlayableContentDataSource_Extensions" Member="M:MonoTouch.MediaPlayer.MPPlayableContentDataSource_Extensions.GetContentItem(MonoTouch.MediaPlayer.IMPPlayableContentDataSource,System.String,System.Action{MonoTouch.MediaPlayer.MPContentItem,MonoTouch.Foundation.NSError})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MediaPlayer.IMPPlayableContentDataSource" />
      </Targets>
      <Member MemberName="GetContentItemAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;MediaPlayer.MPContentItem&gt; GetContentItemAsync (this MediaPlayer.IMPPlayableContentDataSource This, string identifier);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class MediaPlayer.MPContentItem&gt; GetContentItemAsync(class MediaPlayer.IMPPlayableContentDataSource This, string identifier) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;MonoTouch.MediaPlayer.MPContentItem&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MediaPlayer.IMPPlayableContentDataSource" RefType="this" />
          <Parameter Name="identifier" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="identifier">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MediaPlayer.MPPlayableContentDataSource_Extensions" Member="M:MonoTouch.MediaPlayer.MPPlayableContentDataSource_Extensions.GetContentItemAsync(MonoTouch.MediaPlayer.IMPPlayableContentDataSource,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MediaPlayer.IMPPlayableContentDelegate" />
      </Targets>
      <Member MemberName="ContextUpdated">
        <MemberSignature Language="C#" Value="public static void ContextUpdated (this MediaPlayer.IMPPlayableContentDelegate This, MediaPlayer.MPPlayableContentManager contentManager, MediaPlayer.MPPlayableContentManagerContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ContextUpdated(class MediaPlayer.IMPPlayableContentDelegate This, class MediaPlayer.MPPlayableContentManager contentManager, class MediaPlayer.MPPlayableContentManagerContext context) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MediaPlayer.IMPPlayableContentDelegate" RefType="this" />
          <Parameter Name="contentManager" Type="MonoTouch.MediaPlayer.MPPlayableContentManager" />
          <Parameter Name="context" Type="MonoTouch.MediaPlayer.MPPlayableContentManagerContext" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="contentManager">To be added.</param>
          <param name="context">To be added.</param>
          <summary>Method that is called after the context changes.</summary>
        </Docs>
        <Link Type="MonoTouch.MediaPlayer.MPPlayableContentDelegate_Extensions" Member="M:MonoTouch.MediaPlayer.MPPlayableContentDelegate_Extensions.ContextUpdated(MonoTouch.MediaPlayer.IMPPlayableContentDelegate,MonoTouch.MediaPlayer.MPPlayableContentManager,MonoTouch.MediaPlayer.MPPlayableContentManagerContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MediaPlayer.IMPPlayableContentDelegate" />
      </Targets>
      <Member MemberName="InitializePlaybackQueue">
        <MemberSignature Language="C#" Value="public static void InitializePlaybackQueue (this MediaPlayer.IMPPlayableContentDelegate This, MediaPlayer.MPPlayableContentManager contentManager, MediaPlayer.MPContentItem[] contentItems, Action&lt;Foundation.NSError&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InitializePlaybackQueue(class MediaPlayer.IMPPlayableContentDelegate This, class MediaPlayer.MPPlayableContentManager contentManager, class MediaPlayer.MPContentItem[] contentItems, class System.Action`1&lt;class Foundation.NSError&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MediaPlayer.IMPPlayableContentDelegate" RefType="this" />
          <Parameter Name="contentManager" Type="MonoTouch.MediaPlayer.MPPlayableContentManager" />
          <Parameter Name="contentItems" Type="MonoTouch.MediaPlayer.MPContentItem[]" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSError&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V11))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="contentManager">To be added.</param>
          <param name="contentItems">To be added.This parameter can be .</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MediaPlayer.MPPlayableContentDelegate_Extensions" Member="M:MonoTouch.MediaPlayer.MPPlayableContentDelegate_Extensions.InitializePlaybackQueue(MonoTouch.MediaPlayer.IMPPlayableContentDelegate,MonoTouch.MediaPlayer.MPPlayableContentManager,MonoTouch.MediaPlayer.MPContentItem[],System.Action{MonoTouch.Foundation.NSError})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MediaPlayer.IMPPlayableContentDelegate" />
      </Targets>
      <Member MemberName="InitializePlaybackQueue">
        <MemberSignature Language="C#" Value="public static void InitializePlaybackQueue (this MediaPlayer.IMPPlayableContentDelegate This, MediaPlayer.MPPlayableContentManager contentManager, Action&lt;Foundation.NSError&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InitializePlaybackQueue(class MediaPlayer.IMPPlayableContentDelegate This, class MediaPlayer.MPPlayableContentManager contentManager, class System.Action`1&lt;class Foundation.NSError&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MediaPlayer.IMPPlayableContentDelegate" RefType="this" />
          <Parameter Name="contentManager" Type="MonoTouch.MediaPlayer.MPPlayableContentManager" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSError&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V11))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="contentManager">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MediaPlayer.MPPlayableContentDelegate_Extensions" Member="M:MonoTouch.MediaPlayer.MPPlayableContentDelegate_Extensions.InitializePlaybackQueue(MonoTouch.MediaPlayer.IMPPlayableContentDelegate,MonoTouch.MediaPlayer.MPPlayableContentManager,System.Action{MonoTouch.Foundation.NSError})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MediaPlayer.IMPPlayableContentDelegate" />
      </Targets>
      <Member MemberName="InitiatePlaybackOfContentItem">
        <MemberSignature Language="C#" Value="public static void InitiatePlaybackOfContentItem (this MediaPlayer.IMPPlayableContentDelegate This, MediaPlayer.MPPlayableContentManager contentManager, Foundation.NSIndexPath indexPath, Action&lt;Foundation.NSError&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InitiatePlaybackOfContentItem(class MediaPlayer.IMPPlayableContentDelegate This, class MediaPlayer.MPPlayableContentManager contentManager, class Foundation.NSIndexPath indexPath, class System.Action`1&lt;class Foundation.NSError&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MediaPlayer.IMPPlayableContentDelegate" RefType="this" />
          <Parameter Name="contentManager" Type="MonoTouch.MediaPlayer.MPPlayableContentManager" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSError&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V7))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="contentManager">To be added.</param>
          <param name="indexPath">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>Method that is called to request item playback.</summary>
        </Docs>
        <Link Type="MonoTouch.MediaPlayer.MPPlayableContentDelegate_Extensions" Member="M:MonoTouch.MediaPlayer.MPPlayableContentDelegate_Extensions.InitiatePlaybackOfContentItem(MonoTouch.MediaPlayer.IMPPlayableContentDelegate,MonoTouch.MediaPlayer.MPPlayableContentManager,MonoTouch.Foundation.NSIndexPath,System.Action{MonoTouch.Foundation.NSError})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MediaPlayer.IMPPlayableContentDelegate" />
      </Targets>
      <Member MemberName="PlayableContentManager">
        <MemberSignature Language="C#" Value="public static void PlayableContentManager (this MediaPlayer.IMPPlayableContentDelegate This, MediaPlayer.MPPlayableContentManager contentManager, Foundation.NSIndexPath indexPath, Action&lt;Foundation.NSError&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PlayableContentManager(class MediaPlayer.IMPPlayableContentDelegate This, class MediaPlayer.MPPlayableContentManager contentManager, class Foundation.NSIndexPath indexPath, class System.Action`1&lt;class Foundation.NSError&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MediaPlayer.IMPPlayableContentDelegate" RefType="this" />
          <Parameter Name="contentManager" Type="MonoTouch.MediaPlayer.MPPlayableContentManager" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSError&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V0))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="contentManager">To be added.</param>
          <param name="indexPath">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MediaPlayer.MPPlayableContentDelegate_Extensions" Member="M:MonoTouch.MediaPlayer.MPPlayableContentDelegate_Extensions.PlayableContentManager(MonoTouch.MediaPlayer.IMPPlayableContentDelegate,MonoTouch.MediaPlayer.MPPlayableContentManager,MonoTouch.Foundation.NSIndexPath,System.Action{MonoTouch.Foundation.NSError})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSUserActivity" />
      </Targets>
      <Member MemberName="GetExternalMediaContentIdentifier">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetExternalMediaContentIdentifier (this Foundation.NSUserActivity This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetExternalMediaContentIdentifier(class Foundation.NSUserActivity This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSUserActivity" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MediaPlayer.NSUserActivity_MediaPlayerAdditions" Member="M:MonoTouch.MediaPlayer.NSUserActivity_MediaPlayerAdditions.GetExternalMediaContentIdentifier(MonoTouch.Foundation.NSUserActivity)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSUserActivity" />
      </Targets>
      <Member MemberName="SetExternalMediaContentIdentifier">
        <MemberSignature Language="C#" Value="public static void SetExternalMediaContentIdentifier (this Foundation.NSUserActivity This, Foundation.NSString identifier);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetExternalMediaContentIdentifier(class Foundation.NSUserActivity This, class Foundation.NSString identifier) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSUserActivity" RefType="this" />
          <Parameter Name="identifier" Type="MonoTouch.Foundation.NSString" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="identifier">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MediaPlayer.NSUserActivity_MediaPlayerAdditions" Member="M:MonoTouch.MediaPlayer.NSUserActivity_MediaPlayerAdditions.SetExternalMediaContentIdentifier(MonoTouch.Foundation.NSUserActivity,MonoTouch.Foundation.NSString)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreMedia.CMMediaType" />
      </Targets>
      <Member MemberName="GetLocalizedName">
        <MemberSignature Language="C#" Value="public static string GetLocalizedName (this CoreMedia.CMMediaType mediaType);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetLocalizedName(valuetype CoreMedia.CMMediaType mediaType) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="mediaType" Type="MonoTouch.CoreMedia.CMMediaType" RefType="this" />
        </Parameters>
        <Docs>
          <param name="mediaType">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MediaToolbox.MTFormatNames" Member="M:MonoTouch.MediaToolbox.MTFormatNames.GetLocalizedName(MonoTouch.CoreMedia.CMMediaType)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreMedia.CMMediaType" />
      </Targets>
      <Member MemberName="GetLocalizedName">
        <MemberSignature Language="C#" Value="public static string GetLocalizedName (this CoreMedia.CMMediaType mediaType, uint mediaSubType);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetLocalizedName(valuetype CoreMedia.CMMediaType mediaType, unsigned int32 mediaSubType) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="mediaType" Type="MonoTouch.CoreMedia.CMMediaType" RefType="this" />
          <Parameter Name="mediaSubType" Type="System.UInt32" />
        </Parameters>
        <Docs>
          <param name="mediaType">To be added.</param>
          <param name="mediaSubType">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MediaToolbox.MTFormatNames" Member="M:MonoTouch.MediaToolbox.MTFormatNames.GetLocalizedName(MonoTouch.CoreMedia.CMMediaType,System.UInt32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Messages.MSMessageErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this Messages.MSMessageErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype Messages.MSMessageErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.Messages.MSMessageErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.Messages.MSMessageErrorCode value</summary>
        </Docs>
        <Link Type="MonoTouch.Messages.MSMessageErrorCodeExtensions" Member="M:MonoTouch.Messages.MSMessageErrorCodeExtensions.GetDomain(MonoTouch.Messages.MSMessageErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MessageUI.MFMailComposeErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this MessageUI.MFMailComposeErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype MessageUI.MFMailComposeErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.MessageUI.MFMailComposeErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.MessageUI.MFMailComposeErrorCode value</summary>
        </Docs>
        <Link Type="MonoTouch.MessageUI.MFMailComposeErrorCodeExtensions" Member="M:MonoTouch.MessageUI.MFMailComposeErrorCodeExtensions.GetDomain(MonoTouch.MessageUI.MFMailComposeErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MessageUI.IMFMailComposeViewControllerDelegate" />
      </Targets>
      <Member MemberName="Finished">
        <MemberSignature Language="C#" Value="public static void Finished (this MessageUI.IMFMailComposeViewControllerDelegate This, MessageUI.MFMailComposeViewController controller, MessageUI.MFMailComposeResult result, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Finished(class MessageUI.IMFMailComposeViewControllerDelegate This, class MessageUI.MFMailComposeViewController controller, valuetype MessageUI.MFMailComposeResult result, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MessageUI.IMFMailComposeViewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.MessageUI.MFMailComposeViewController" />
          <Parameter Name="result" Type="MonoTouch.MessageUI.MFMailComposeResult" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="result">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MessageUI.MFMailComposeViewControllerDelegate_Extensions" Member="M:MonoTouch.MessageUI.MFMailComposeViewControllerDelegate_Extensions.Finished(MonoTouch.MessageUI.IMFMailComposeViewControllerDelegate,MonoTouch.MessageUI.MFMailComposeViewController,MonoTouch.MessageUI.MFMailComposeResult,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLArgumentEncoder" />
      </Targets>
      <Member MemberName="SetBuffers">
        <MemberSignature Language="C#" Value="public static void SetBuffers (this Metal.IMTLArgumentEncoder This, Metal.IMTLBuffer[] buffers, nint[] offsets, Foundation.NSRange range);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetBuffers(class Metal.IMTLArgumentEncoder This, class Metal.IMTLBuffer[] buffers, valuetype System.nint[] offsets, valuetype Foundation.NSRange range) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLArgumentEncoder" RefType="this" />
          <Parameter Name="buffers" Type="MonoTouch.Metal.IMTLBuffer[]" />
          <Parameter Name="offsets" Type="System.nint[]" />
          <Parameter Name="range" Type="MonoTouch.Foundation.NSRange" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="buffers">To be added.</param>
          <param name="offsets">To be added.</param>
          <param name="range">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLArgumentEncoder_Extensions" Member="M:MonoTouch.Metal.MTLArgumentEncoder_Extensions.SetBuffers(MonoTouch.Metal.IMTLArgumentEncoder,MonoTouch.Metal.IMTLBuffer[],System.nint[],MonoTouch.Foundation.NSRange)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLBlitCommandEncoder" />
      </Targets>
      <Member MemberName="CopyFromBuffer">
        <MemberSignature Language="C#" Value="public static void CopyFromBuffer (this Metal.IMTLBlitCommandEncoder This, Metal.IMTLBuffer sourceBuffer, nuint sourceOffset, nuint sourceBytesPerRow, nuint sourceBytesPerImage, Metal.MTLSize sourceSize, Metal.IMTLTexture destinationTexture, nuint destinationSlice, nuint destinationLevel, Metal.MTLOrigin destinationOrigin, Metal.MTLBlitOption options);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyFromBuffer(class Metal.IMTLBlitCommandEncoder This, class Metal.IMTLBuffer sourceBuffer, valuetype System.nuint sourceOffset, valuetype System.nuint sourceBytesPerRow, valuetype System.nuint sourceBytesPerImage, valuetype Metal.MTLSize sourceSize, class Metal.IMTLTexture destinationTexture, valuetype System.nuint destinationSlice, valuetype System.nuint destinationLevel, valuetype Metal.MTLOrigin destinationOrigin, valuetype Metal.MTLBlitOption options) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLBlitCommandEncoder" RefType="this" />
          <Parameter Name="sourceBuffer" Type="MonoTouch.Metal.IMTLBuffer" />
          <Parameter Name="sourceSize" Type="MonoTouch.Metal.MTLSize" />
          <Parameter Name="destinationTexture" Type="MonoTouch.Metal.IMTLTexture" />
          <Parameter Name="destinationOrigin" Type="MonoTouch.Metal.MTLOrigin" />
          <Parameter Name="options" Type="MonoTouch.Metal.MTLBlitOption" />
          <Parameter Name="sourceOffset" Type="System.nuint" />
          <Parameter Name="sourceBytesPerRow" Type="System.nuint" />
          <Parameter Name="sourceBytesPerImage" Type="System.nuint" />
          <Parameter Name="destinationSlice" Type="System.nuint" />
          <Parameter Name="destinationLevel" Type="System.nuint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="sourceBuffer">To be added.</param>
          <param name="sourceOffset">To be added.</param>
          <param name="sourceBytesPerRow">To be added.</param>
          <param name="sourceBytesPerImage">To be added.</param>
          <param name="sourceSize">To be added.</param>
          <param name="destinationTexture">To be added.</param>
          <param name="destinationSlice">To be added.</param>
          <param name="destinationLevel">To be added.</param>
          <param name="destinationOrigin">To be added.</param>
          <param name="options">To be added.</param>
          <summary>Copies data from one buffer to another.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLBlitCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLBlitCommandEncoder_Extensions.CopyFromBuffer(MonoTouch.Metal.IMTLBlitCommandEncoder,MonoTouch.Metal.IMTLBuffer,System.nuint,System.nuint,System.nuint,MonoTouch.Metal.MTLSize,MonoTouch.Metal.IMTLTexture,System.nuint,System.nuint,MonoTouch.Metal.MTLOrigin,MonoTouch.Metal.MTLBlitOption)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLBlitCommandEncoder" />
      </Targets>
      <Member MemberName="CopyFromTexture">
        <MemberSignature Language="C#" Value="public static void CopyFromTexture (this Metal.IMTLBlitCommandEncoder This, Metal.IMTLTexture sourceTexture, nuint sourceSlice, nuint sourceLevel, Metal.MTLOrigin sourceOrigin, Metal.MTLSize sourceSize, Metal.IMTLBuffer destinationBuffer, nuint destinationOffset, nuint destinatinBytesPerRow, nuint destinationBytesPerImage, Metal.MTLBlitOption options);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyFromTexture(class Metal.IMTLBlitCommandEncoder This, class Metal.IMTLTexture sourceTexture, valuetype System.nuint sourceSlice, valuetype System.nuint sourceLevel, valuetype Metal.MTLOrigin sourceOrigin, valuetype Metal.MTLSize sourceSize, class Metal.IMTLBuffer destinationBuffer, valuetype System.nuint destinationOffset, valuetype System.nuint destinatinBytesPerRow, valuetype System.nuint destinationBytesPerImage, valuetype Metal.MTLBlitOption options) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLBlitCommandEncoder" RefType="this" />
          <Parameter Name="sourceTexture" Type="MonoTouch.Metal.IMTLTexture" />
          <Parameter Name="sourceOrigin" Type="MonoTouch.Metal.MTLOrigin" />
          <Parameter Name="sourceSize" Type="MonoTouch.Metal.MTLSize" />
          <Parameter Name="destinationBuffer" Type="MonoTouch.Metal.IMTLBuffer" />
          <Parameter Name="options" Type="MonoTouch.Metal.MTLBlitOption" />
          <Parameter Name="sourceSlice" Type="System.nuint" />
          <Parameter Name="sourceLevel" Type="System.nuint" />
          <Parameter Name="destinationOffset" Type="System.nuint" />
          <Parameter Name="destinatinBytesPerRow" Type="System.nuint" />
          <Parameter Name="destinationBytesPerImage" Type="System.nuint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="sourceTexture">To be added.</param>
          <param name="sourceSlice">To be added.</param>
          <param name="sourceLevel">To be added.</param>
          <param name="sourceOrigin">To be added.</param>
          <param name="sourceSize">To be added.</param>
          <param name="destinationBuffer">To be added.</param>
          <param name="destinationOffset">To be added.</param>
          <param name="destinatinBytesPerRow">To be added.</param>
          <param name="destinationBytesPerImage">To be added.</param>
          <param name="options">To be added.</param>
          <summary>Copies data from a texture to a buffer.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLBlitCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLBlitCommandEncoder_Extensions.CopyFromTexture(MonoTouch.Metal.IMTLBlitCommandEncoder,MonoTouch.Metal.IMTLTexture,System.nuint,System.nuint,MonoTouch.Metal.MTLOrigin,MonoTouch.Metal.MTLSize,MonoTouch.Metal.IMTLBuffer,System.nuint,System.nuint,System.nuint,MonoTouch.Metal.MTLBlitOption)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLBlitCommandEncoder" />
      </Targets>
      <Member MemberName="Update">
        <MemberSignature Language="C#" Value="public static void Update (this Metal.IMTLBlitCommandEncoder This, Metal.IMTLFence fence);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Update(class Metal.IMTLBlitCommandEncoder This, class Metal.IMTLFence fence) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLBlitCommandEncoder" RefType="this" />
          <Parameter Name="fence" Type="MonoTouch.Metal.IMTLFence" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="fence">To be added.</param>
          <summary>Captures GPU work that was enqueuedd by the encoder for the specified <paramref name="fence" />.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLBlitCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLBlitCommandEncoder_Extensions.Update(MonoTouch.Metal.IMTLBlitCommandEncoder,MonoTouch.Metal.IMTLFence)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLBlitCommandEncoder" />
      </Targets>
      <Member MemberName="Wait">
        <MemberSignature Language="C#" Value="public static void Wait (this Metal.IMTLBlitCommandEncoder This, Metal.IMTLFence fence);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Wait(class Metal.IMTLBlitCommandEncoder This, class Metal.IMTLFence fence) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLBlitCommandEncoder" RefType="this" />
          <Parameter Name="fence" Type="MonoTouch.Metal.IMTLFence" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="fence">To be added.</param>
          <summary>Prevents additional GPU work by the encoder until the <paramref name="fence" /> is reached.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLBlitCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLBlitCommandEncoder_Extensions.Wait(MonoTouch.Metal.IMTLBlitCommandEncoder,MonoTouch.Metal.IMTLFence)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLBuffer" />
      </Targets>
      <Member MemberName="AddDebugMarker">
        <MemberSignature Language="C#" Value="public static void AddDebugMarker (this Metal.IMTLBuffer This, string marker, Foundation.NSRange range);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddDebugMarker(class Metal.IMTLBuffer This, string marker, valuetype Foundation.NSRange range) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLBuffer" RefType="this" />
          <Parameter Name="marker" Type="System.String" />
          <Parameter Name="range" Type="MonoTouch.Foundation.NSRange" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="marker">To be added.</param>
          <param name="range">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLBuffer_Extensions" Member="M:MonoTouch.Metal.MTLBuffer_Extensions.AddDebugMarker(MonoTouch.Metal.IMTLBuffer,System.String,MonoTouch.Foundation.NSRange)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLBuffer" />
      </Targets>
      <Member MemberName="RemoveAllDebugMarkers">
        <MemberSignature Language="C#" Value="public static void RemoveAllDebugMarkers (this Metal.IMTLBuffer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveAllDebugMarkers(class Metal.IMTLBuffer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLBuffer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLBuffer_Extensions" Member="M:MonoTouch.Metal.MTLBuffer_Extensions.RemoveAllDebugMarkers(MonoTouch.Metal.IMTLBuffer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLCommandBuffer" />
      </Targets>
      <Member MemberName="GetGpuEndTime">
        <MemberSignature Language="C#" Value="public static double GetGpuEndTime (this Metal.IMTLCommandBuffer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetGpuEndTime(class Metal.IMTLCommandBuffer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Double</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLCommandBuffer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the time, in seconds, when the GPU stopped running the command buffer.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLCommandBuffer_Extensions" Member="M:MonoTouch.Metal.MTLCommandBuffer_Extensions.GetGpuEndTime(MonoTouch.Metal.IMTLCommandBuffer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLCommandBuffer" />
      </Targets>
      <Member MemberName="GetGpuStartTime">
        <MemberSignature Language="C#" Value="public static double GetGpuStartTime (this Metal.IMTLCommandBuffer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetGpuStartTime(class Metal.IMTLCommandBuffer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Double</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLCommandBuffer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the time, in seconds, when the GPU started running the command buffer.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLCommandBuffer_Extensions" Member="M:MonoTouch.Metal.MTLCommandBuffer_Extensions.GetGpuStartTime(MonoTouch.Metal.IMTLCommandBuffer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLCommandBuffer" />
      </Targets>
      <Member MemberName="GetKernelEndTime">
        <MemberSignature Language="C#" Value="public static double GetKernelEndTime (this Metal.IMTLCommandBuffer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetKernelEndTime(class Metal.IMTLCommandBuffer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Double</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLCommandBuffer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the time, in seconds, when the GPU finished scheduling the command buffer.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLCommandBuffer_Extensions" Member="M:MonoTouch.Metal.MTLCommandBuffer_Extensions.GetKernelEndTime(MonoTouch.Metal.IMTLCommandBuffer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLCommandBuffer" />
      </Targets>
      <Member MemberName="GetKernelStartTime">
        <MemberSignature Language="C#" Value="public static double GetKernelStartTime (this Metal.IMTLCommandBuffer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetKernelStartTime(class Metal.IMTLCommandBuffer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Double</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLCommandBuffer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the time, in seconds, when the GPU started scheduling the command buffer.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLCommandBuffer_Extensions" Member="M:MonoTouch.Metal.MTLCommandBuffer_Extensions.GetKernelStartTime(MonoTouch.Metal.IMTLCommandBuffer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLCommandBuffer" />
      </Targets>
      <Member MemberName="PopDebugGroup">
        <MemberSignature Language="C#" Value="public static void PopDebugGroup (this Metal.IMTLCommandBuffer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PopDebugGroup(class Metal.IMTLCommandBuffer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLCommandBuffer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLCommandBuffer_Extensions" Member="M:MonoTouch.Metal.MTLCommandBuffer_Extensions.PopDebugGroup(MonoTouch.Metal.IMTLCommandBuffer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLCommandBuffer" />
      </Targets>
      <Member MemberName="PresentDrawableAfter">
        <MemberSignature Language="C#" Value="public static void PresentDrawableAfter (this Metal.IMTLCommandBuffer This, Metal.IMTLDrawable drawable, double duration);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PresentDrawableAfter(class Metal.IMTLCommandBuffer This, class Metal.IMTLDrawable drawable, float64 duration) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLCommandBuffer" RefType="this" />
          <Parameter Name="drawable" Type="MonoTouch.Metal.IMTLDrawable" />
          <Parameter Name="duration" Type="System.Double" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="drawable">To be added.</param>
          <param name="duration">To be added.</param>
          <summary>Presents the specified <paramref name="drawable" /> after the previous drawable has been displayed for <paramref name="duration" /> seconds.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLCommandBuffer_Extensions" Member="M:MonoTouch.Metal.MTLCommandBuffer_Extensions.PresentDrawableAfter(MonoTouch.Metal.IMTLCommandBuffer,MonoTouch.Metal.IMTLDrawable,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLCommandBuffer" />
      </Targets>
      <Member MemberName="PushDebugGroup">
        <MemberSignature Language="C#" Value="public static void PushDebugGroup (this Metal.IMTLCommandBuffer This, string string);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PushDebugGroup(class Metal.IMTLCommandBuffer This, string string) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLCommandBuffer" RefType="this" />
          <Parameter Name="string" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="string">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLCommandBuffer_Extensions" Member="M:MonoTouch.Metal.MTLCommandBuffer_Extensions.PushDebugGroup(MonoTouch.Metal.IMTLCommandBuffer,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.MTLCommandBufferError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this Metal.MTLCommandBufferError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype Metal.MTLCommandBufferError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.Metal.MTLCommandBufferError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.Metal.MTLCommandBufferError value</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLCommandBufferErrorExtensions" Member="M:MonoTouch.Metal.MTLCommandBufferErrorExtensions.GetDomain(MonoTouch.Metal.MTLCommandBufferError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLComputeCommandEncoder" />
      </Targets>
      <Member MemberName="DispatchThreadgroups">
        <MemberSignature Language="C#" Value="public static void DispatchThreadgroups (this Metal.IMTLComputeCommandEncoder This, Metal.IMTLBuffer indirectBuffer, nuint indirectBufferOffset, Metal.MTLSize threadsPerThreadgroup);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DispatchThreadgroups(class Metal.IMTLComputeCommandEncoder This, class Metal.IMTLBuffer indirectBuffer, valuetype System.nuint indirectBufferOffset, valuetype Metal.MTLSize threadsPerThreadgroup) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLComputeCommandEncoder" RefType="this" />
          <Parameter Name="indirectBuffer" Type="MonoTouch.Metal.IMTLBuffer" />
          <Parameter Name="threadsPerThreadgroup" Type="MonoTouch.Metal.MTLSize" />
          <Parameter Name="indirectBufferOffset" Type="System.nuint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="indirectBuffer">To be added.</param>
          <param name="indirectBufferOffset">To be added.</param>
          <param name="threadsPerThreadgroup">To be added.</param>
          <summary>Encodes a compute function for a threadgroup and stages them in an indirect buffer for faster access.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLComputeCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLComputeCommandEncoder_Extensions.DispatchThreadgroups(MonoTouch.Metal.IMTLComputeCommandEncoder,MonoTouch.Metal.IMTLBuffer,System.nuint,MonoTouch.Metal.MTLSize)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLComputeCommandEncoder" />
      </Targets>
      <Member MemberName="SetStage">
        <MemberSignature Language="C#" Value="public static void SetStage (this Metal.IMTLComputeCommandEncoder This, Metal.MTLRegion region);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStage(class Metal.IMTLComputeCommandEncoder This, valuetype Metal.MTLRegion region) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLComputeCommandEncoder" RefType="this" />
          <Parameter Name="region" Type="MonoTouch.Metal.MTLRegion" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="region">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLComputeCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLComputeCommandEncoder_Extensions.SetStage(MonoTouch.Metal.IMTLComputeCommandEncoder,MonoTouch.Metal.MTLRegion)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLComputeCommandEncoder" />
      </Targets>
      <Member MemberName="Update">
        <MemberSignature Language="C#" Value="public static void Update (this Metal.IMTLComputeCommandEncoder This, Metal.IMTLFence fence);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Update(class Metal.IMTLComputeCommandEncoder This, class Metal.IMTLFence fence) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLComputeCommandEncoder" RefType="this" />
          <Parameter Name="fence" Type="MonoTouch.Metal.IMTLFence" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="fence">To be added.</param>
          <summary>Captures all GPU work up to the current fence.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLComputeCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLComputeCommandEncoder_Extensions.Update(MonoTouch.Metal.IMTLComputeCommandEncoder,MonoTouch.Metal.IMTLFence)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLComputeCommandEncoder" />
      </Targets>
      <Member MemberName="UseHeap">
        <MemberSignature Language="C#" Value="public static void UseHeap (this Metal.IMTLComputeCommandEncoder This, Metal.IMTLHeap heap);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UseHeap(class Metal.IMTLComputeCommandEncoder This, class Metal.IMTLHeap heap) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLComputeCommandEncoder" RefType="this" />
          <Parameter Name="heap" Type="MonoTouch.Metal.IMTLHeap" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="heap">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLComputeCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLComputeCommandEncoder_Extensions.UseHeap(MonoTouch.Metal.IMTLComputeCommandEncoder,MonoTouch.Metal.IMTLHeap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLComputeCommandEncoder" />
      </Targets>
      <Member MemberName="UseHeaps">
        <MemberSignature Language="C#" Value="public static void UseHeaps (this Metal.IMTLComputeCommandEncoder This, Metal.IMTLHeap[] heaps, nuint count);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UseHeaps(class Metal.IMTLComputeCommandEncoder This, class Metal.IMTLHeap[] heaps, valuetype System.nuint count) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLComputeCommandEncoder" RefType="this" />
          <Parameter Name="heaps" Type="MonoTouch.Metal.IMTLHeap[]" />
          <Parameter Name="count" Type="System.nuint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="heaps">To be added.</param>
          <param name="count">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLComputeCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLComputeCommandEncoder_Extensions.UseHeaps(MonoTouch.Metal.IMTLComputeCommandEncoder,MonoTouch.Metal.IMTLHeap[],System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLComputeCommandEncoder" />
      </Targets>
      <Member MemberName="UseResource">
        <MemberSignature Language="C#" Value="public static void UseResource (this Metal.IMTLComputeCommandEncoder This, Metal.IMTLResource resource, Metal.MTLResourceUsage usage);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UseResource(class Metal.IMTLComputeCommandEncoder This, class Metal.IMTLResource resource, valuetype Metal.MTLResourceUsage usage) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLComputeCommandEncoder" RefType="this" />
          <Parameter Name="resource" Type="MonoTouch.Metal.IMTLResource" />
          <Parameter Name="usage" Type="MonoTouch.Metal.MTLResourceUsage" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="resource">To be added.</param>
          <param name="usage">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLComputeCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLComputeCommandEncoder_Extensions.UseResource(MonoTouch.Metal.IMTLComputeCommandEncoder,MonoTouch.Metal.IMTLResource,MonoTouch.Metal.MTLResourceUsage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLComputeCommandEncoder" />
      </Targets>
      <Member MemberName="UseResources">
        <MemberSignature Language="C#" Value="public static void UseResources (this Metal.IMTLComputeCommandEncoder This, Metal.IMTLResource[] resources, nuint count, Metal.MTLResourceUsage usage);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UseResources(class Metal.IMTLComputeCommandEncoder This, class Metal.IMTLResource[] resources, valuetype System.nuint count, valuetype Metal.MTLResourceUsage usage) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLComputeCommandEncoder" RefType="this" />
          <Parameter Name="resources" Type="MonoTouch.Metal.IMTLResource[]" />
          <Parameter Name="count" Type="System.nuint" />
          <Parameter Name="usage" Type="MonoTouch.Metal.MTLResourceUsage" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="resources">To be added.</param>
          <param name="count">To be added.</param>
          <param name="usage">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLComputeCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLComputeCommandEncoder_Extensions.UseResources(MonoTouch.Metal.IMTLComputeCommandEncoder,MonoTouch.Metal.IMTLResource[],System.nuint,MonoTouch.Metal.MTLResourceUsage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLComputeCommandEncoder" />
      </Targets>
      <Member MemberName="Wait">
        <MemberSignature Language="C#" Value="public static void Wait (this Metal.IMTLComputeCommandEncoder This, Metal.IMTLFence fence);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Wait(class Metal.IMTLComputeCommandEncoder This, class Metal.IMTLFence fence) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLComputeCommandEncoder" RefType="this" />
          <Parameter Name="fence" Type="MonoTouch.Metal.IMTLFence" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="fence">To be added.</param>
          <summary>Prevents additional GPU work by the encoder until the <paramref name="fence" /> is reached.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLComputeCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLComputeCommandEncoder_Extensions.Wait(MonoTouch.Metal.IMTLComputeCommandEncoder,MonoTouch.Metal.IMTLFence)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLComputePipelineState" />
      </Targets>
      <Member MemberName="GetLabel">
        <MemberSignature Language="C#" Value="public static string GetLabel (this Metal.IMTLComputePipelineState This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetLabel(class Metal.IMTLComputePipelineState This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLComputePipelineState" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLComputePipelineState_Extensions" Member="M:MonoTouch.Metal.MTLComputePipelineState_Extensions.GetLabel(MonoTouch.Metal.IMTLComputePipelineState)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLComputePipelineState" />
      </Targets>
      <Member MemberName="GetStaticThreadgroupMemoryLength">
        <MemberSignature Language="C#" Value="public static nuint GetStaticThreadgroupMemoryLength (this Metal.IMTLComputePipelineState This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nuint GetStaticThreadgroupMemoryLength(class Metal.IMTLComputePipelineState This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nuint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLComputePipelineState" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLComputePipelineState_Extensions" Member="M:MonoTouch.Metal.MTLComputePipelineState_Extensions.GetStaticThreadgroupMemoryLength(MonoTouch.Metal.IMTLComputePipelineState)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLDevice" />
      </Targets>
      <Member MemberName="CreateArgumentEncoder">
        <MemberSignature Language="C#" Value="public static Metal.IMTLArgumentEncoder CreateArgumentEncoder (this Metal.IMTLDevice This, Metal.MTLArgumentDescriptor[] arguments);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Metal.IMTLArgumentEncoder CreateArgumentEncoder(class Metal.IMTLDevice This, class Metal.MTLArgumentDescriptor[] arguments) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.IMTLArgumentEncoder</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLDevice" RefType="this" />
          <Parameter Name="arguments" Type="MonoTouch.Metal.MTLArgumentDescriptor[]" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="arguments">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLDevice_Extensions" Member="M:MonoTouch.Metal.MTLDevice_Extensions.CreateArgumentEncoder(MonoTouch.Metal.IMTLDevice,MonoTouch.Metal.MTLArgumentDescriptor[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLDevice" />
      </Targets>
      <Member MemberName="CreateBuffer&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static Metal.IMTLBuffer CreateBuffer&lt;T&gt; (this Metal.IMTLDevice This, T[] data, Metal.MTLResourceOptions options) where T : struct;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Metal.IMTLBuffer CreateBuffer&lt;struct .ctor (class System.ValueType) T&gt;(class Metal.IMTLDevice This, !!T[] data, valuetype Metal.MTLResourceOptions options) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.IMTLBuffer</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
              <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
              <BaseTypeName>System.ValueType</BaseTypeName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLDevice" RefType="this" />
          <Parameter Name="data" Type="T[]" />
          <Parameter Name="options" Type="MonoTouch.Metal.MTLResourceOptions" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="This">To be added.</param>
          <param name="data">To be added.</param>
          <param name="options">To be added.</param>
          <summary>Creates and returns a new buffer with a copy of the specified data.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLDevice_Extensions" Member="M:MonoTouch.Metal.MTLDevice_Extensions.CreateBuffer``1(MonoTouch.Metal.IMTLDevice,``0[],MonoTouch.Metal.MTLResourceOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLDevice" />
      </Targets>
      <Member MemberName="CreateBufferNoCopy&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static Metal.IMTLBuffer CreateBufferNoCopy&lt;T&gt; (this Metal.IMTLDevice This, T[] data, Metal.MTLResourceOptions options, Metal.MTLDeallocator deallocator) where T : struct;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Metal.IMTLBuffer CreateBufferNoCopy&lt;struct .ctor (class System.ValueType) T&gt;(class Metal.IMTLDevice This, !!T[] data, valuetype Metal.MTLResourceOptions options, class Metal.MTLDeallocator deallocator) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.IMTLBuffer</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
              <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
              <BaseTypeName>System.ValueType</BaseTypeName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLDevice" RefType="this" />
          <Parameter Name="data" Type="T[]" />
          <Parameter Name="options" Type="MonoTouch.Metal.MTLResourceOptions" />
          <Parameter Name="deallocator" Type="MonoTouch.Metal.MTLDeallocator" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="This">To be added.</param>
          <param name="data">To be added.</param>
          <param name="options">To be added.</param>
          <param name="deallocator">To be added.</param>
          <summary>Creates and returns a new buffer that is wrapped around the specified data, and runs an optional <paramref name="deallocator" /> when the memory is deallocated.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLDevice_Extensions" Member="M:MonoTouch.Metal.MTLDevice_Extensions.CreateBufferNoCopy``1(MonoTouch.Metal.IMTLDevice,``0[],MonoTouch.Metal.MTLResourceOptions,MonoTouch.Metal.MTLDeallocator)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLDevice" />
      </Targets>
      <Member MemberName="CreateComputePipelineState">
        <MemberSignature Language="C#" Value="public static Metal.IMTLComputePipelineState CreateComputePipelineState (this Metal.IMTLDevice This, Metal.MTLComputePipelineDescriptor descriptor, Metal.MTLPipelineOption options, out Metal.MTLComputePipelineReflection reflection, out Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Metal.IMTLComputePipelineState CreateComputePipelineState(class Metal.IMTLDevice This, class Metal.MTLComputePipelineDescriptor descriptor, valuetype Metal.MTLPipelineOption options, class Metal.MTLComputePipelineReflection reflection, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.IMTLComputePipelineState</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLDevice" RefType="this" />
          <Parameter Name="descriptor" Type="MonoTouch.Metal.MTLComputePipelineDescriptor" />
          <Parameter Name="options" Type="MonoTouch.Metal.MTLPipelineOption" />
          <Parameter Name="reflection" Type="MonoTouch.Metal.MTLComputePipelineReflection&amp;" RefType="out" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="descriptor">To be added.</param>
          <param name="options">To be added.</param>
          <param name="reflection">To be added.</param>
          <param name="error">To be added.</param>
          <summary>Creates a new pipeline state from the specified compute pipeline descriptor, options, and completion handler, and stores reflection information in the <paramref name="reflection" /><see langword="out" /> parameter.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLDevice_Extensions" Member="M:MonoTouch.Metal.MTLDevice_Extensions.CreateComputePipelineState(MonoTouch.Metal.IMTLDevice,MonoTouch.Metal.MTLComputePipelineDescriptor,MonoTouch.Metal.MTLPipelineOption,MonoTouch.Metal.MTLComputePipelineReflection@,MonoTouch.Foundation.NSError@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLDevice" />
      </Targets>
      <Member MemberName="CreateComputePipelineState">
        <MemberSignature Language="C#" Value="public static void CreateComputePipelineState (this Metal.IMTLDevice This, Metal.MTLComputePipelineDescriptor descriptor, Metal.MTLPipelineOption options, Metal.MTLNewComputePipelineStateWithReflectionCompletionHandler completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateComputePipelineState(class Metal.IMTLDevice This, class Metal.MTLComputePipelineDescriptor descriptor, valuetype Metal.MTLPipelineOption options, class Metal.MTLNewComputePipelineStateWithReflectionCompletionHandler completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLDevice" RefType="this" />
          <Parameter Name="descriptor" Type="MonoTouch.Metal.MTLComputePipelineDescriptor" />
          <Parameter Name="options" Type="MonoTouch.Metal.MTLPipelineOption" />
          <Parameter Name="completionHandler" Type="MonoTouch.Metal.MTLNewComputePipelineStateWithReflectionCompletionHandler">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDMTLNewComputePipelineStateWithReflectionCompletionHandler))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="descriptor">To be added.</param>
          <param name="options">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>Creates a new pipeline state from the specified compute pipeline descriptor, options, and completion handler.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLDevice_Extensions" Member="M:MonoTouch.Metal.MTLDevice_Extensions.CreateComputePipelineState(MonoTouch.Metal.IMTLDevice,MonoTouch.Metal.MTLComputePipelineDescriptor,MonoTouch.Metal.MTLPipelineOption,MonoTouch.Metal.MTLNewComputePipelineStateWithReflectionCompletionHandler)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLDevice" />
      </Targets>
      <Member MemberName="CreateFence">
        <MemberSignature Language="C#" Value="public static Metal.IMTLFence CreateFence (this Metal.IMTLDevice This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Metal.IMTLFence CreateFence(class Metal.IMTLDevice This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.IMTLFence</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLDevice" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Creates and returns a new fence for tracking and managing dependencies between command encoders.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLDevice_Extensions" Member="M:MonoTouch.Metal.MTLDevice_Extensions.CreateFence(MonoTouch.Metal.IMTLDevice)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLDevice" />
      </Targets>
      <Member MemberName="CreateHeap">
        <MemberSignature Language="C#" Value="public static Metal.IMTLHeap CreateHeap (this Metal.IMTLDevice This, Metal.MTLHeapDescriptor descriptor);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Metal.IMTLHeap CreateHeap(class Metal.IMTLDevice This, class Metal.MTLHeapDescriptor descriptor) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.IMTLHeap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLDevice" RefType="this" />
          <Parameter Name="descriptor" Type="MonoTouch.Metal.MTLHeapDescriptor" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="descriptor">To be added.</param>
          <summary>Creates and returns a new heap.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLDevice_Extensions" Member="M:MonoTouch.Metal.MTLDevice_Extensions.CreateHeap(MonoTouch.Metal.IMTLDevice,MonoTouch.Metal.MTLHeapDescriptor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLDevice" />
      </Targets>
      <Member MemberName="CreateLibrary">
        <MemberSignature Language="C#" Value="public static Metal.IMTLLibrary CreateLibrary (this Metal.IMTLDevice This, Foundation.NSBundle bundle, out Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Metal.IMTLLibrary CreateLibrary(class Metal.IMTLDevice This, class Foundation.NSBundle bundle, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.IMTLLibrary</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLDevice" RefType="this" />
          <Parameter Name="bundle" Type="MonoTouch.Foundation.NSBundle" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="bundle">To be added.</param>
          <param name="error">To be added.</param>
          <summary>Creates and returns a new library from the functions in the specified bumble.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLDevice_Extensions" Member="M:MonoTouch.Metal.MTLDevice_Extensions.CreateLibrary(MonoTouch.Metal.IMTLDevice,MonoTouch.Foundation.NSBundle,MonoTouch.Foundation.NSError@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLDevice" />
      </Targets>
      <Member MemberName="CreateLibrary">
        <MemberSignature Language="C#" Value="public static Metal.IMTLLibrary CreateLibrary (this Metal.IMTLDevice This, Foundation.NSUrl url, out Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Metal.IMTLLibrary CreateLibrary(class Metal.IMTLDevice This, class Foundation.NSUrl url, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.IMTLLibrary</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLDevice" RefType="this" />
          <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="url">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLDevice_Extensions" Member="M:MonoTouch.Metal.MTLDevice_Extensions.CreateLibrary(MonoTouch.Metal.IMTLDevice,MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSError@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLDevice" />
      </Targets>
      <Member MemberName="CreateTexture">
        <MemberSignature Language="C#" Value="public static Metal.IMTLTexture CreateTexture (this Metal.IMTLDevice This, Metal.MTLTextureDescriptor descriptor, IOSurface.IOSurface iosurface, nuint plane);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Metal.IMTLTexture CreateTexture(class Metal.IMTLDevice This, class Metal.MTLTextureDescriptor descriptor, class IOSurface.IOSurface iosurface, valuetype System.nuint plane) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.IMTLTexture</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLDevice" RefType="this" />
          <Parameter Name="descriptor" Type="MonoTouch.Metal.MTLTextureDescriptor" />
          <Parameter Name="iosurface" Type="MonoTouch.IOSurface.IOSurface" />
          <Parameter Name="plane" Type="System.nuint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="descriptor">To be added.</param>
          <param name="iosurface">To be added.</param>
          <param name="plane">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLDevice_Extensions" Member="M:MonoTouch.Metal.MTLDevice_Extensions.CreateTexture(MonoTouch.Metal.IMTLDevice,MonoTouch.Metal.MTLTextureDescriptor,MonoTouch.IOSurface.IOSurface,System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLDevice" />
      </Targets>
      <Member MemberName="GetArgumentBuffersSupport">
        <MemberSignature Language="C#" Value="public static Metal.MTLArgumentBuffersTier GetArgumentBuffersSupport (this Metal.IMTLDevice This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Metal.MTLArgumentBuffersTier GetArgumentBuffersSupport(class Metal.IMTLDevice This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.MTLArgumentBuffersTier</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLDevice" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLDevice_Extensions" Member="M:MonoTouch.Metal.MTLDevice_Extensions.GetArgumentBuffersSupport(MonoTouch.Metal.IMTLDevice)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLDevice" />
      </Targets>
      <Member MemberName="GetCurrentAllocatedSize">
        <MemberSignature Language="C#" Value="public static nuint GetCurrentAllocatedSize (this Metal.IMTLDevice This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nuint GetCurrentAllocatedSize(class Metal.IMTLDevice This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nuint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLDevice" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLDevice_Extensions" Member="M:MonoTouch.Metal.MTLDevice_Extensions.GetCurrentAllocatedSize(MonoTouch.Metal.IMTLDevice)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLDevice" />
      </Targets>
      <Member MemberName="GetDefaultSamplePositions">
        <MemberSignature Language="C#" Value="public static void GetDefaultSamplePositions (this Metal.IMTLDevice This, Metal.MTLSamplePosition[] positions, nuint count);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetDefaultSamplePositions(class Metal.IMTLDevice This, valuetype Metal.MTLSamplePosition[] positions, valuetype System.nuint count) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLDevice" RefType="this" />
          <Parameter Name="positions" Type="MonoTouch.Metal.MTLSamplePosition[]" />
          <Parameter Name="count" Type="System.nuint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="positions">To be added.</param>
          <param name="count">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLDevice_Extensions" Member="M:MonoTouch.Metal.MTLDevice_Extensions.GetDefaultSamplePositions(MonoTouch.Metal.IMTLDevice,MonoTouch.Metal.MTLSamplePosition[],System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLDevice" />
      </Targets>
      <Member MemberName="GetDefaultSamplePositions">
        <MemberSignature Language="C#" Value="public static void GetDefaultSamplePositions (this Metal.IMTLDevice This, IntPtr positions, nuint count);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetDefaultSamplePositions(class Metal.IMTLDevice This, native int positions, valuetype System.nuint count) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLDevice" RefType="this" />
          <Parameter Name="positions" Type="System.IntPtr" />
          <Parameter Name="count" Type="System.nuint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="positions">To be added.</param>
          <param name="count">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLDevice_Extensions" Member="M:MonoTouch.Metal.MTLDevice_Extensions.GetDefaultSamplePositions(MonoTouch.Metal.IMTLDevice,System.IntPtr,System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLDevice" />
      </Targets>
      <Member MemberName="GetHeapBufferSizeAndAlignWithLength">
        <MemberSignature Language="C#" Value="public static Metal.MTLSizeAndAlign GetHeapBufferSizeAndAlignWithLength (this Metal.IMTLDevice This, nuint length, Metal.MTLResourceOptions options);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Metal.MTLSizeAndAlign GetHeapBufferSizeAndAlignWithLength(class Metal.IMTLDevice This, valuetype System.nuint length, valuetype Metal.MTLResourceOptions options) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.MTLSizeAndAlign</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLDevice" RefType="this" />
          <Parameter Name="options" Type="MonoTouch.Metal.MTLResourceOptions" />
          <Parameter Name="length" Type="System.nuint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="length">To be added.</param>
          <param name="options">To be added.</param>
          <summary>Gets the size and alignment of a buffer with size <paramref name="length" />, when allocated from a heap.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLDevice_Extensions" Member="M:MonoTouch.Metal.MTLDevice_Extensions.GetHeapBufferSizeAndAlignWithLength(MonoTouch.Metal.IMTLDevice,System.nuint,MonoTouch.Metal.MTLResourceOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLDevice" />
      </Targets>
      <Member MemberName="GetHeapTextureSizeAndAlign">
        <MemberSignature Language="C#" Value="public static Metal.MTLSizeAndAlign GetHeapTextureSizeAndAlign (this Metal.IMTLDevice This, Metal.MTLTextureDescriptor desc);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Metal.MTLSizeAndAlign GetHeapTextureSizeAndAlign(class Metal.IMTLDevice This, class Metal.MTLTextureDescriptor desc) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.MTLSizeAndAlign</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLDevice" RefType="this" />
          <Parameter Name="desc" Type="MonoTouch.Metal.MTLTextureDescriptor" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="desc">To be added.</param>
          <summary>Gets the size and alignment of a texture with specified description, when allocated from a heap.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLDevice_Extensions" Member="M:MonoTouch.Metal.MTLDevice_Extensions.GetHeapTextureSizeAndAlign(MonoTouch.Metal.IMTLDevice,MonoTouch.Metal.MTLTextureDescriptor)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLDevice" />
      </Targets>
      <Member MemberName="GetMaxThreadgroupMemoryLength">
        <MemberSignature Language="C#" Value="public static nuint GetMaxThreadgroupMemoryLength (this Metal.IMTLDevice This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nuint GetMaxThreadgroupMemoryLength(class Metal.IMTLDevice This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nuint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLDevice" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLDevice_Extensions" Member="M:MonoTouch.Metal.MTLDevice_Extensions.GetMaxThreadgroupMemoryLength(MonoTouch.Metal.IMTLDevice)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLDevice" />
      </Targets>
      <Member MemberName="GetMaxThreadsPerThreadgroup">
        <MemberSignature Language="C#" Value="public static Metal.MTLSize GetMaxThreadsPerThreadgroup (this Metal.IMTLDevice This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Metal.MTLSize GetMaxThreadsPerThreadgroup(class Metal.IMTLDevice This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.MTLSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLDevice" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the number of threads per threadgroup on the device.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLDevice_Extensions" Member="M:MonoTouch.Metal.MTLDevice_Extensions.GetMaxThreadsPerThreadgroup(MonoTouch.Metal.IMTLDevice)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLDevice" />
      </Targets>
      <Member MemberName="GetMinimumLinearTextureAlignment">
        <MemberSignature Language="C#" Value="public static nuint GetMinimumLinearTextureAlignment (this Metal.IMTLDevice This, Metal.MTLPixelFormat format);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nuint GetMinimumLinearTextureAlignment(class Metal.IMTLDevice This, valuetype Metal.MTLPixelFormat format) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nuint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLDevice" RefType="this" />
          <Parameter Name="format" Type="MonoTouch.Metal.MTLPixelFormat" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="format">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLDevice_Extensions" Member="M:MonoTouch.Metal.MTLDevice_Extensions.GetMinimumLinearTextureAlignment(MonoTouch.Metal.IMTLDevice,MonoTouch.Metal.MTLPixelFormat)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLDevice" />
      </Targets>
      <Member MemberName="GetProgrammableSamplePositionsSupported">
        <MemberSignature Language="C#" Value="public static bool GetProgrammableSamplePositionsSupported (this Metal.IMTLDevice This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetProgrammableSamplePositionsSupported(class Metal.IMTLDevice This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLDevice" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLDevice_Extensions" Member="M:MonoTouch.Metal.MTLDevice_Extensions.GetProgrammableSamplePositionsSupported(MonoTouch.Metal.IMTLDevice)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLDevice" />
      </Targets>
      <Member MemberName="GetRasterOrderGroupsSupported">
        <MemberSignature Language="C#" Value="public static bool GetRasterOrderGroupsSupported (this Metal.IMTLDevice This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetRasterOrderGroupsSupported(class Metal.IMTLDevice This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLDevice" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLDevice_Extensions" Member="M:MonoTouch.Metal.MTLDevice_Extensions.GetRasterOrderGroupsSupported(MonoTouch.Metal.IMTLDevice)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLDevice" />
      </Targets>
      <Member MemberName="GetReadWriteTextureSupport">
        <MemberSignature Language="C#" Value="public static Metal.MTLReadWriteTextureTier GetReadWriteTextureSupport (this Metal.IMTLDevice This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Metal.MTLReadWriteTextureTier GetReadWriteTextureSupport(class Metal.IMTLDevice This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.MTLReadWriteTextureTier</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLDevice" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLDevice_Extensions" Member="M:MonoTouch.Metal.MTLDevice_Extensions.GetReadWriteTextureSupport(MonoTouch.Metal.IMTLDevice)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLDevice" />
      </Targets>
      <Member MemberName="GetRegistryId">
        <MemberSignature Language="C#" Value="public static ulong GetRegistryId (this Metal.IMTLDevice This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 GetRegistryId(class Metal.IMTLDevice This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.UInt64</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLDevice" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLDevice_Extensions" Member="M:MonoTouch.Metal.MTLDevice_Extensions.GetRegistryId(MonoTouch.Metal.IMTLDevice)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLDevice" />
      </Targets>
      <Member MemberName="SupportsTextureSampleCount">
        <MemberSignature Language="C#" Value="public static bool SupportsTextureSampleCount (this Metal.IMTLDevice This, nuint sampleCount);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SupportsTextureSampleCount(class Metal.IMTLDevice This, valuetype System.nuint sampleCount) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLDevice" RefType="this" />
          <Parameter Name="sampleCount" Type="System.nuint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="sampleCount">To be added.</param>
          <summary>Returns a Boolean value that tells whether the device supports the specified texture count.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLDevice_Extensions" Member="M:MonoTouch.Metal.MTLDevice_Extensions.SupportsTextureSampleCount(MonoTouch.Metal.IMTLDevice,System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLDrawable" />
      </Targets>
      <Member MemberName="AddPresentedHandler">
        <MemberSignature Language="C#" Value="public static void AddPresentedHandler (this Metal.IMTLDrawable This, Action&lt;Metal.IMTLDrawable&gt; block);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPresentedHandler(class Metal.IMTLDrawable This, class System.Action`1&lt;class Metal.IMTLDrawable&gt; block) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLDrawable" RefType="this" />
          <Parameter Name="block" Type="System.Action&lt;MonoTouch.Metal.IMTLDrawable&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V115))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="block">To be added.</param>
          <summary>Causes the provided <paramref name="block" /> to be run after the drawable is displayed.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLDrawable_Extensions" Member="M:MonoTouch.Metal.MTLDrawable_Extensions.AddPresentedHandler(MonoTouch.Metal.IMTLDrawable,System.Action{MonoTouch.Metal.IMTLDrawable})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLDrawable" />
      </Targets>
      <Member MemberName="GetDrawableID">
        <MemberSignature Language="C#" Value="public static nuint GetDrawableID (this Metal.IMTLDrawable This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nuint GetDrawableID(class Metal.IMTLDrawable This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nuint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLDrawable" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the positive integer that identifies the drawable.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLDrawable_Extensions" Member="M:MonoTouch.Metal.MTLDrawable_Extensions.GetDrawableID(MonoTouch.Metal.IMTLDrawable)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLDrawable" />
      </Targets>
      <Member MemberName="GetPresentedTime">
        <MemberSignature Language="C#" Value="public static double GetPresentedTime (this Metal.IMTLDrawable This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetPresentedTime(class Metal.IMTLDrawable This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Double</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLDrawable" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the time, in seconds, when the host displayed this drawable.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLDrawable_Extensions" Member="M:MonoTouch.Metal.MTLDrawable_Extensions.GetPresentedTime(MonoTouch.Metal.IMTLDrawable)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLDrawable" />
      </Targets>
      <Member MemberName="PresentAfter">
        <MemberSignature Language="C#" Value="public static void PresentAfter (this Metal.IMTLDrawable This, double duration);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PresentAfter(class Metal.IMTLDrawable This, float64 duration) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLDrawable" RefType="this" />
          <Parameter Name="duration" Type="System.Double" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="duration">To be added.</param>
          <summary>Causes the drawable to be presented at least <paramref name="duration" /> seconds after the previous drawable has been presented.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLDrawable_Extensions" Member="M:MonoTouch.Metal.MTLDrawable_Extensions.PresentAfter(MonoTouch.Metal.IMTLDrawable,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLFunction" />
      </Targets>
      <Member MemberName="CreateArgumentEncoder">
        <MemberSignature Language="C#" Value="public static Metal.IMTLArgumentEncoder CreateArgumentEncoder (this Metal.IMTLFunction This, nuint bufferIndex);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Metal.IMTLArgumentEncoder CreateArgumentEncoder(class Metal.IMTLFunction This, valuetype System.nuint bufferIndex) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.IMTLArgumentEncoder</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLFunction" RefType="this" />
          <Parameter Name="bufferIndex" Type="System.nuint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="bufferIndex">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLFunction_Extensions" Member="M:MonoTouch.Metal.MTLFunction_Extensions.CreateArgumentEncoder(MonoTouch.Metal.IMTLFunction,System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLFunction" />
      </Targets>
      <Member MemberName="CreateArgumentEncoder">
        <MemberSignature Language="C#" Value="public static Metal.IMTLArgumentEncoder CreateArgumentEncoder (this Metal.IMTLFunction This, nuint bufferIndex, out Metal.MTLArgument reflection);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Metal.IMTLArgumentEncoder CreateArgumentEncoder(class Metal.IMTLFunction This, valuetype System.nuint bufferIndex, class Metal.MTLArgument reflection) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.IMTLArgumentEncoder</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLFunction" RefType="this" />
          <Parameter Name="bufferIndex" Type="System.nuint" />
          <Parameter Name="reflection" Type="MonoTouch.Metal.MTLArgument&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="bufferIndex">To be added.</param>
          <param name="reflection">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLFunction_Extensions" Member="M:MonoTouch.Metal.MTLFunction_Extensions.CreateArgumentEncoder(MonoTouch.Metal.IMTLFunction,System.nuint,MonoTouch.Metal.MTLArgument@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLFunction" />
      </Targets>
      <Member MemberName="GetFunctionConstants">
        <MemberSignature Language="C#" Value="public static Foundation.NSDictionary&lt;Foundation.NSString,Metal.MTLFunctionConstant&gt; GetFunctionConstants (this Metal.IMTLFunction This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSDictionary`2&lt;class Foundation.NSString, class Metal.MTLFunctionConstant&gt; GetFunctionConstants(class Metal.IMTLFunction This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSDictionary&lt;MonoTouch.Foundation.NSString,MonoTouch.Metal.MTLFunctionConstant&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLFunction" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLFunction_Extensions" Member="M:MonoTouch.Metal.MTLFunction_Extensions.GetFunctionConstants(MonoTouch.Metal.IMTLFunction)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLFunction" />
      </Targets>
      <Member MemberName="GetLabel">
        <MemberSignature Language="C#" Value="public static string GetLabel (this Metal.IMTLFunction This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetLabel(class Metal.IMTLFunction This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLFunction" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLFunction_Extensions" Member="M:MonoTouch.Metal.MTLFunction_Extensions.GetLabel(MonoTouch.Metal.IMTLFunction)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLFunction" />
      </Targets>
      <Member MemberName="GetPatchControlPointCount">
        <MemberSignature Language="C#" Value="public static nint GetPatchControlPointCount (this Metal.IMTLFunction This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nint GetPatchControlPointCount(class Metal.IMTLFunction This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLFunction" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLFunction_Extensions" Member="M:MonoTouch.Metal.MTLFunction_Extensions.GetPatchControlPointCount(MonoTouch.Metal.IMTLFunction)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLFunction" />
      </Targets>
      <Member MemberName="GetPatchType">
        <MemberSignature Language="C#" Value="public static Metal.MTLPatchType GetPatchType (this Metal.IMTLFunction This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Metal.MTLPatchType GetPatchType(class Metal.IMTLFunction This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.MTLPatchType</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLFunction" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLFunction_Extensions" Member="M:MonoTouch.Metal.MTLFunction_Extensions.GetPatchType(MonoTouch.Metal.IMTLFunction)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLFunction" />
      </Targets>
      <Member MemberName="GetStageInputAttributes">
        <MemberSignature Language="C#" Value="public static Metal.MTLAttribute[] GetStageInputAttributes (this Metal.IMTLFunction This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Metal.MTLAttribute[] GetStageInputAttributes(class Metal.IMTLFunction This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.MTLAttribute[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLFunction" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLFunction_Extensions" Member="M:MonoTouch.Metal.MTLFunction_Extensions.GetStageInputAttributes(MonoTouch.Metal.IMTLFunction)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLFunction" />
      </Targets>
      <Member MemberName="SetLabel">
        <MemberSignature Language="C#" Value="public static void SetLabel (this Metal.IMTLFunction This, string value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetLabel(class Metal.IMTLFunction This, string value) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLFunction" RefType="this" />
          <Parameter Name="value" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="value">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLFunction_Extensions" Member="M:MonoTouch.Metal.MTLFunction_Extensions.SetLabel(MonoTouch.Metal.IMTLFunction,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLHeap" />
      </Targets>
      <Member MemberName="GetCurrentAllocatedSize">
        <MemberSignature Language="C#" Value="public static nuint GetCurrentAllocatedSize (this Metal.IMTLHeap This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nuint GetCurrentAllocatedSize(class Metal.IMTLHeap This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nuint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLHeap" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLHeap_Extensions" Member="M:MonoTouch.Metal.MTLHeap_Extensions.GetCurrentAllocatedSize(MonoTouch.Metal.IMTLHeap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLLibrary" />
      </Targets>
      <Member MemberName="CreateFunction">
        <MemberSignature Language="C#" Value="public static Metal.IMTLFunction CreateFunction (this Metal.IMTLLibrary This, string name, Metal.MTLFunctionConstantValues constantValues, out Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Metal.IMTLFunction CreateFunction(class Metal.IMTLLibrary This, string name, class Metal.MTLFunctionConstantValues constantValues, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.IMTLFunction</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLLibrary" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="constantValues" Type="MonoTouch.Metal.MTLFunctionConstantValues" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="name">To be added.</param>
          <param name="constantValues">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLLibrary_Extensions" Member="M:MonoTouch.Metal.MTLLibrary_Extensions.CreateFunction(MonoTouch.Metal.IMTLLibrary,System.String,MonoTouch.Metal.MTLFunctionConstantValues,MonoTouch.Foundation.NSError@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLLibrary" />
      </Targets>
      <Member MemberName="CreateFunction">
        <MemberSignature Language="C#" Value="public static void CreateFunction (this Metal.IMTLLibrary This, string name, Metal.MTLFunctionConstantValues constantValues, Action&lt;Metal.IMTLFunction,Foundation.NSError&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateFunction(class Metal.IMTLLibrary This, string name, class Metal.MTLFunctionConstantValues constantValues, class System.Action`2&lt;class Metal.IMTLFunction, class Foundation.NSError&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLLibrary" RefType="this" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="constantValues" Type="MonoTouch.Metal.MTLFunctionConstantValues" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Metal.IMTLFunction,MonoTouch.Foundation.NSError&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V66))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="name">To be added.</param>
          <param name="constantValues">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLLibrary_Extensions" Member="M:MonoTouch.Metal.MTLLibrary_Extensions.CreateFunction(MonoTouch.Metal.IMTLLibrary,System.String,MonoTouch.Metal.MTLFunctionConstantValues,System.Action{MonoTouch.Metal.IMTLFunction,MonoTouch.Foundation.NSError})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.MTLLibraryError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this Metal.MTLLibraryError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype Metal.MTLLibraryError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.Metal.MTLLibraryError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.Metal.MTLLibraryError value</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLLibraryErrorExtensions" Member="M:MonoTouch.Metal.MTLLibraryErrorExtensions.GetDomain(MonoTouch.Metal.MTLLibraryError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLParallelRenderCommandEncoder" />
      </Targets>
      <Member MemberName="SetColorStoreAction">
        <MemberSignature Language="C#" Value="public static void SetColorStoreAction (this Metal.IMTLParallelRenderCommandEncoder This, Metal.MTLStoreAction storeAction, nuint colorAttachmentIndex);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetColorStoreAction(class Metal.IMTLParallelRenderCommandEncoder This, valuetype Metal.MTLStoreAction storeAction, valuetype System.nuint colorAttachmentIndex) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLParallelRenderCommandEncoder" RefType="this" />
          <Parameter Name="storeAction" Type="MonoTouch.Metal.MTLStoreAction" />
          <Parameter Name="colorAttachmentIndex" Type="System.nuint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="storeAction">To be added.</param>
          <param name="colorAttachmentIndex">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLParallelRenderCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLParallelRenderCommandEncoder_Extensions.SetColorStoreAction(MonoTouch.Metal.IMTLParallelRenderCommandEncoder,MonoTouch.Metal.MTLStoreAction,System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLParallelRenderCommandEncoder" />
      </Targets>
      <Member MemberName="SetColorStoreActionOptions">
        <MemberSignature Language="C#" Value="public static void SetColorStoreActionOptions (this Metal.IMTLParallelRenderCommandEncoder This, Metal.MTLStoreActionOptions storeActionOptions, nuint colorAttachmentIndex);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetColorStoreActionOptions(class Metal.IMTLParallelRenderCommandEncoder This, valuetype Metal.MTLStoreActionOptions storeActionOptions, valuetype System.nuint colorAttachmentIndex) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLParallelRenderCommandEncoder" RefType="this" />
          <Parameter Name="storeActionOptions" Type="MonoTouch.Metal.MTLStoreActionOptions" />
          <Parameter Name="colorAttachmentIndex" Type="System.nuint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="storeActionOptions">To be added.</param>
          <param name="colorAttachmentIndex">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLParallelRenderCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLParallelRenderCommandEncoder_Extensions.SetColorStoreActionOptions(MonoTouch.Metal.IMTLParallelRenderCommandEncoder,MonoTouch.Metal.MTLStoreActionOptions,System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLParallelRenderCommandEncoder" />
      </Targets>
      <Member MemberName="SetDepthStoreAction">
        <MemberSignature Language="C#" Value="public static void SetDepthStoreAction (this Metal.IMTLParallelRenderCommandEncoder This, Metal.MTLStoreAction storeAction);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDepthStoreAction(class Metal.IMTLParallelRenderCommandEncoder This, valuetype Metal.MTLStoreAction storeAction) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLParallelRenderCommandEncoder" RefType="this" />
          <Parameter Name="storeAction" Type="MonoTouch.Metal.MTLStoreAction" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="storeAction">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLParallelRenderCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLParallelRenderCommandEncoder_Extensions.SetDepthStoreAction(MonoTouch.Metal.IMTLParallelRenderCommandEncoder,MonoTouch.Metal.MTLStoreAction)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLParallelRenderCommandEncoder" />
      </Targets>
      <Member MemberName="SetDepthStoreActionOptions">
        <MemberSignature Language="C#" Value="public static void SetDepthStoreActionOptions (this Metal.IMTLParallelRenderCommandEncoder This, Metal.MTLStoreActionOptions storeActionOptions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDepthStoreActionOptions(class Metal.IMTLParallelRenderCommandEncoder This, valuetype Metal.MTLStoreActionOptions storeActionOptions) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLParallelRenderCommandEncoder" RefType="this" />
          <Parameter Name="storeActionOptions" Type="MonoTouch.Metal.MTLStoreActionOptions" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="storeActionOptions">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLParallelRenderCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLParallelRenderCommandEncoder_Extensions.SetDepthStoreActionOptions(MonoTouch.Metal.IMTLParallelRenderCommandEncoder,MonoTouch.Metal.MTLStoreActionOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLParallelRenderCommandEncoder" />
      </Targets>
      <Member MemberName="SetStencilStoreAction">
        <MemberSignature Language="C#" Value="public static void SetStencilStoreAction (this Metal.IMTLParallelRenderCommandEncoder This, Metal.MTLStoreAction storeAction);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStencilStoreAction(class Metal.IMTLParallelRenderCommandEncoder This, valuetype Metal.MTLStoreAction storeAction) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLParallelRenderCommandEncoder" RefType="this" />
          <Parameter Name="storeAction" Type="MonoTouch.Metal.MTLStoreAction" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="storeAction">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLParallelRenderCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLParallelRenderCommandEncoder_Extensions.SetStencilStoreAction(MonoTouch.Metal.IMTLParallelRenderCommandEncoder,MonoTouch.Metal.MTLStoreAction)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLParallelRenderCommandEncoder" />
      </Targets>
      <Member MemberName="SetStencilStoreActionOptions">
        <MemberSignature Language="C#" Value="public static void SetStencilStoreActionOptions (this Metal.IMTLParallelRenderCommandEncoder This, Metal.MTLStoreActionOptions storeActionOptions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStencilStoreActionOptions(class Metal.IMTLParallelRenderCommandEncoder This, valuetype Metal.MTLStoreActionOptions storeActionOptions) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLParallelRenderCommandEncoder" RefType="this" />
          <Parameter Name="storeActionOptions" Type="MonoTouch.Metal.MTLStoreActionOptions" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="storeActionOptions">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLParallelRenderCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLParallelRenderCommandEncoder_Extensions.SetStencilStoreActionOptions(MonoTouch.Metal.IMTLParallelRenderCommandEncoder,MonoTouch.Metal.MTLStoreActionOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLRenderCommandEncoder" />
      </Targets>
      <Member MemberName="DrawIndexedPatches">
        <MemberSignature Language="C#" Value="public static void DrawIndexedPatches (this Metal.IMTLRenderCommandEncoder This, nuint numberOfPatchControlPoints, nuint patchStart, nuint patchCount, Metal.IMTLBuffer patchIndexBuffer, nuint patchIndexBufferOffset, Metal.IMTLBuffer controlPointIndexBuffer, nuint controlPointIndexBufferOffset, nuint instanceCount, nuint baseInstance);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawIndexedPatches(class Metal.IMTLRenderCommandEncoder This, valuetype System.nuint numberOfPatchControlPoints, valuetype System.nuint patchStart, valuetype System.nuint patchCount, class Metal.IMTLBuffer patchIndexBuffer, valuetype System.nuint patchIndexBufferOffset, class Metal.IMTLBuffer controlPointIndexBuffer, valuetype System.nuint controlPointIndexBufferOffset, valuetype System.nuint instanceCount, valuetype System.nuint baseInstance) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLRenderCommandEncoder" RefType="this" />
          <Parameter Name="patchIndexBuffer" Type="MonoTouch.Metal.IMTLBuffer" />
          <Parameter Name="controlPointIndexBuffer" Type="MonoTouch.Metal.IMTLBuffer" />
          <Parameter Name="numberOfPatchControlPoints" Type="System.nuint" />
          <Parameter Name="patchStart" Type="System.nuint" />
          <Parameter Name="patchCount" Type="System.nuint" />
          <Parameter Name="patchIndexBufferOffset" Type="System.nuint" />
          <Parameter Name="controlPointIndexBufferOffset" Type="System.nuint" />
          <Parameter Name="instanceCount" Type="System.nuint" />
          <Parameter Name="baseInstance" Type="System.nuint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="numberOfPatchControlPoints">To be added.</param>
          <param name="patchStart">To be added.</param>
          <param name="patchCount">To be added.</param>
          <param name="patchIndexBuffer">To be added.</param>
          <param name="patchIndexBufferOffset">To be added.</param>
          <param name="controlPointIndexBuffer">To be added.</param>
          <param name="controlPointIndexBufferOffset">To be added.</param>
          <param name="instanceCount">To be added.</param>
          <param name="baseInstance">To be added.</param>
          <summary>Draws tessellated patches.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLRenderCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLRenderCommandEncoder_Extensions.DrawIndexedPatches(MonoTouch.Metal.IMTLRenderCommandEncoder,System.nuint,System.nuint,System.nuint,MonoTouch.Metal.IMTLBuffer,System.nuint,MonoTouch.Metal.IMTLBuffer,System.nuint,System.nuint,System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLRenderCommandEncoder" />
      </Targets>
      <Member MemberName="DrawIndexedPrimitives">
        <MemberSignature Language="C#" Value="public static void DrawIndexedPrimitives (this Metal.IMTLRenderCommandEncoder This, Metal.MTLPrimitiveType primitiveType, Metal.MTLIndexType indexType, Metal.IMTLBuffer indexBuffer, nuint indexBufferOffset, Metal.IMTLBuffer indirectBuffer, nuint indirectBufferOffset);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawIndexedPrimitives(class Metal.IMTLRenderCommandEncoder This, valuetype Metal.MTLPrimitiveType primitiveType, valuetype Metal.MTLIndexType indexType, class Metal.IMTLBuffer indexBuffer, valuetype System.nuint indexBufferOffset, class Metal.IMTLBuffer indirectBuffer, valuetype System.nuint indirectBufferOffset) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLRenderCommandEncoder" RefType="this" />
          <Parameter Name="primitiveType" Type="MonoTouch.Metal.MTLPrimitiveType" />
          <Parameter Name="indexType" Type="MonoTouch.Metal.MTLIndexType" />
          <Parameter Name="indexBuffer" Type="MonoTouch.Metal.IMTLBuffer" />
          <Parameter Name="indirectBuffer" Type="MonoTouch.Metal.IMTLBuffer" />
          <Parameter Name="indexBufferOffset" Type="System.nuint" />
          <Parameter Name="indirectBufferOffset" Type="System.nuint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="primitiveType">To be added.</param>
          <param name="indexType">To be added.</param>
          <param name="indexBuffer">To be added.</param>
          <param name="indexBufferOffset">To be added.</param>
          <param name="indirectBuffer">To be added.</param>
          <param name="indirectBufferOffset">To be added.</param>
          <summary>Draws a range of primitives.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLRenderCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLRenderCommandEncoder_Extensions.DrawIndexedPrimitives(MonoTouch.Metal.IMTLRenderCommandEncoder,MonoTouch.Metal.MTLPrimitiveType,MonoTouch.Metal.MTLIndexType,MonoTouch.Metal.IMTLBuffer,System.nuint,MonoTouch.Metal.IMTLBuffer,System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLRenderCommandEncoder" />
      </Targets>
      <Member MemberName="DrawIndexedPrimitives">
        <MemberSignature Language="C#" Value="public static void DrawIndexedPrimitives (this Metal.IMTLRenderCommandEncoder This, Metal.MTLPrimitiveType primitiveType, nuint indexCount, Metal.MTLIndexType indexType, Metal.IMTLBuffer indexBuffer, nuint indexBufferOffset, nuint instanceCount, nint baseVertex, nuint baseInstance);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawIndexedPrimitives(class Metal.IMTLRenderCommandEncoder This, valuetype Metal.MTLPrimitiveType primitiveType, valuetype System.nuint indexCount, valuetype Metal.MTLIndexType indexType, class Metal.IMTLBuffer indexBuffer, valuetype System.nuint indexBufferOffset, valuetype System.nuint instanceCount, valuetype System.nint baseVertex, valuetype System.nuint baseInstance) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLRenderCommandEncoder" RefType="this" />
          <Parameter Name="primitiveType" Type="MonoTouch.Metal.MTLPrimitiveType" />
          <Parameter Name="indexType" Type="MonoTouch.Metal.MTLIndexType" />
          <Parameter Name="indexBuffer" Type="MonoTouch.Metal.IMTLBuffer" />
          <Parameter Name="indexCount" Type="System.nuint" />
          <Parameter Name="indexBufferOffset" Type="System.nuint" />
          <Parameter Name="instanceCount" Type="System.nuint" />
          <Parameter Name="baseVertex" Type="System.nint" />
          <Parameter Name="baseInstance" Type="System.nuint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="primitiveType">To be added.</param>
          <param name="indexCount">To be added.</param>
          <param name="indexType">To be added.</param>
          <param name="indexBuffer">To be added.</param>
          <param name="indexBufferOffset">To be added.</param>
          <param name="instanceCount">To be added.</param>
          <param name="baseVertex">To be added.</param>
          <param name="baseInstance">To be added.</param>
          <summary>Draws a range of primitives.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLRenderCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLRenderCommandEncoder_Extensions.DrawIndexedPrimitives(MonoTouch.Metal.IMTLRenderCommandEncoder,MonoTouch.Metal.MTLPrimitiveType,System.nuint,MonoTouch.Metal.MTLIndexType,MonoTouch.Metal.IMTLBuffer,System.nuint,System.nuint,System.nint,System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLRenderCommandEncoder" />
      </Targets>
      <Member MemberName="DrawPatches">
        <MemberSignature Language="C#" Value="public static void DrawPatches (this Metal.IMTLRenderCommandEncoder This, nuint numberOfPatchControlPoints, nuint patchStart, nuint patchCount, Metal.IMTLBuffer patchIndexBuffer, nuint patchIndexBufferOffset, nuint instanceCount, nuint baseInstance);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawPatches(class Metal.IMTLRenderCommandEncoder This, valuetype System.nuint numberOfPatchControlPoints, valuetype System.nuint patchStart, valuetype System.nuint patchCount, class Metal.IMTLBuffer patchIndexBuffer, valuetype System.nuint patchIndexBufferOffset, valuetype System.nuint instanceCount, valuetype System.nuint baseInstance) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLRenderCommandEncoder" RefType="this" />
          <Parameter Name="patchIndexBuffer" Type="MonoTouch.Metal.IMTLBuffer" />
          <Parameter Name="numberOfPatchControlPoints" Type="System.nuint" />
          <Parameter Name="patchStart" Type="System.nuint" />
          <Parameter Name="patchCount" Type="System.nuint" />
          <Parameter Name="patchIndexBufferOffset" Type="System.nuint" />
          <Parameter Name="instanceCount" Type="System.nuint" />
          <Parameter Name="baseInstance" Type="System.nuint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="numberOfPatchControlPoints">To be added.</param>
          <param name="patchStart">To be added.</param>
          <param name="patchCount">To be added.</param>
          <param name="patchIndexBuffer">To be added.</param>
          <param name="patchIndexBufferOffset">To be added.</param>
          <param name="instanceCount">To be added.</param>
          <param name="baseInstance">To be added.</param>
          <summary>Draws tessellated patches.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLRenderCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLRenderCommandEncoder_Extensions.DrawPatches(MonoTouch.Metal.IMTLRenderCommandEncoder,System.nuint,System.nuint,System.nuint,MonoTouch.Metal.IMTLBuffer,System.nuint,System.nuint,System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLRenderCommandEncoder" />
      </Targets>
      <Member MemberName="DrawPrimitives">
        <MemberSignature Language="C#" Value="public static void DrawPrimitives (this Metal.IMTLRenderCommandEncoder This, Metal.MTLPrimitiveType primitiveType, Metal.IMTLBuffer indirectBuffer, nuint indirectBufferOffset);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawPrimitives(class Metal.IMTLRenderCommandEncoder This, valuetype Metal.MTLPrimitiveType primitiveType, class Metal.IMTLBuffer indirectBuffer, valuetype System.nuint indirectBufferOffset) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLRenderCommandEncoder" RefType="this" />
          <Parameter Name="primitiveType" Type="MonoTouch.Metal.MTLPrimitiveType" />
          <Parameter Name="indirectBuffer" Type="MonoTouch.Metal.IMTLBuffer" />
          <Parameter Name="indirectBufferOffset" Type="System.nuint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="primitiveType">To be added.</param>
          <param name="indirectBuffer">To be added.</param>
          <param name="indirectBufferOffset">To be added.</param>
          <summary>Draws a range of primitives.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLRenderCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLRenderCommandEncoder_Extensions.DrawPrimitives(MonoTouch.Metal.IMTLRenderCommandEncoder,MonoTouch.Metal.MTLPrimitiveType,MonoTouch.Metal.IMTLBuffer,System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLRenderCommandEncoder" />
      </Targets>
      <Member MemberName="DrawPrimitives">
        <MemberSignature Language="C#" Value="public static void DrawPrimitives (this Metal.IMTLRenderCommandEncoder This, Metal.MTLPrimitiveType primitiveType, nuint vertexStart, nuint vertexCount, nuint instanceCount, nuint baseInstance);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawPrimitives(class Metal.IMTLRenderCommandEncoder This, valuetype Metal.MTLPrimitiveType primitiveType, valuetype System.nuint vertexStart, valuetype System.nuint vertexCount, valuetype System.nuint instanceCount, valuetype System.nuint baseInstance) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLRenderCommandEncoder" RefType="this" />
          <Parameter Name="primitiveType" Type="MonoTouch.Metal.MTLPrimitiveType" />
          <Parameter Name="vertexStart" Type="System.nuint" />
          <Parameter Name="vertexCount" Type="System.nuint" />
          <Parameter Name="instanceCount" Type="System.nuint" />
          <Parameter Name="baseInstance" Type="System.nuint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="primitiveType">To be added.</param>
          <param name="vertexStart">To be added.</param>
          <param name="vertexCount">To be added.</param>
          <param name="instanceCount">To be added.</param>
          <param name="baseInstance">To be added.</param>
          <summary>Draws a range of primitives.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLRenderCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLRenderCommandEncoder_Extensions.DrawPrimitives(MonoTouch.Metal.IMTLRenderCommandEncoder,MonoTouch.Metal.MTLPrimitiveType,System.nuint,System.nuint,System.nuint,System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLRenderCommandEncoder" />
      </Targets>
      <Member MemberName="SetColorStoreAction">
        <MemberSignature Language="C#" Value="public static void SetColorStoreAction (this Metal.IMTLRenderCommandEncoder This, Metal.MTLStoreAction storeAction, nuint colorAttachmentIndex);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetColorStoreAction(class Metal.IMTLRenderCommandEncoder This, valuetype Metal.MTLStoreAction storeAction, valuetype System.nuint colorAttachmentIndex) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLRenderCommandEncoder" RefType="this" />
          <Parameter Name="storeAction" Type="MonoTouch.Metal.MTLStoreAction" />
          <Parameter Name="colorAttachmentIndex" Type="System.nuint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="storeAction">To be added.</param>
          <param name="colorAttachmentIndex">To be added.</param>
          <summary>Sets a value that controls how color results are handled after a rendering pass.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLRenderCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLRenderCommandEncoder_Extensions.SetColorStoreAction(MonoTouch.Metal.IMTLRenderCommandEncoder,MonoTouch.Metal.MTLStoreAction,System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLRenderCommandEncoder" />
      </Targets>
      <Member MemberName="SetColorStoreActionOptions">
        <MemberSignature Language="C#" Value="public static void SetColorStoreActionOptions (this Metal.IMTLRenderCommandEncoder This, Metal.MTLStoreActionOptions storeActionOptions, nuint colorAttachmentIndex);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetColorStoreActionOptions(class Metal.IMTLRenderCommandEncoder This, valuetype Metal.MTLStoreActionOptions storeActionOptions, valuetype System.nuint colorAttachmentIndex) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLRenderCommandEncoder" RefType="this" />
          <Parameter Name="storeActionOptions" Type="MonoTouch.Metal.MTLStoreActionOptions" />
          <Parameter Name="colorAttachmentIndex" Type="System.nuint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="storeActionOptions">To be added.</param>
          <param name="colorAttachmentIndex">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLRenderCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLRenderCommandEncoder_Extensions.SetColorStoreActionOptions(MonoTouch.Metal.IMTLRenderCommandEncoder,MonoTouch.Metal.MTLStoreActionOptions,System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLRenderCommandEncoder" />
      </Targets>
      <Member MemberName="SetDepthClipMode">
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDepthClipMode(class Metal.IMTLRenderCommandEncoder This, valuetype Metal.MTLDepthClipMode depthClipMode) cil managed" />
        <MemberSignature Language="C#" Value="public static void SetDepthClipMode (this Metal.IMTLRenderCommandEncoder This, Metal.MTLDepthClipMode depthClipMode);" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLRenderCommandEncoder" RefType="this" />
          <Parameter Name="depthClipMode" Type="MonoTouch.Metal.MTLDepthClipMode" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="depthClipMode">To be added.</param>
          <summary>Sets a value that controls how clipped values are handled.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLRenderCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLRenderCommandEncoder_Extensions.SetDepthClipMode(MonoTouch.Metal.IMTLRenderCommandEncoder,MonoTouch.Metal.MTLDepthClipMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLRenderCommandEncoder" />
      </Targets>
      <Member MemberName="SetDepthStoreAction">
        <MemberSignature Language="C#" Value="public static void SetDepthStoreAction (this Metal.IMTLRenderCommandEncoder This, Metal.MTLStoreAction storeAction);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDepthStoreAction(class Metal.IMTLRenderCommandEncoder This, valuetype Metal.MTLStoreAction storeAction) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLRenderCommandEncoder" RefType="this" />
          <Parameter Name="storeAction" Type="MonoTouch.Metal.MTLStoreAction" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="storeAction">To be added.</param>
          <summary>Sets a value that controls how depth results are handled after a rendering pass.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLRenderCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLRenderCommandEncoder_Extensions.SetDepthStoreAction(MonoTouch.Metal.IMTLRenderCommandEncoder,MonoTouch.Metal.MTLStoreAction)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLRenderCommandEncoder" />
      </Targets>
      <Member MemberName="SetDepthStoreActionOptions">
        <MemberSignature Language="C#" Value="public static void SetDepthStoreActionOptions (this Metal.IMTLRenderCommandEncoder This, Metal.MTLStoreActionOptions storeActionOptions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDepthStoreActionOptions(class Metal.IMTLRenderCommandEncoder This, valuetype Metal.MTLStoreActionOptions storeActionOptions) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLRenderCommandEncoder" RefType="this" />
          <Parameter Name="storeActionOptions" Type="MonoTouch.Metal.MTLStoreActionOptions" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="storeActionOptions">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLRenderCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLRenderCommandEncoder_Extensions.SetDepthStoreActionOptions(MonoTouch.Metal.IMTLRenderCommandEncoder,MonoTouch.Metal.MTLStoreActionOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLRenderCommandEncoder" />
      </Targets>
      <Member MemberName="SetStencilFrontReferenceValue">
        <MemberSignature Language="C#" Value="public static void SetStencilFrontReferenceValue (this Metal.IMTLRenderCommandEncoder This, uint frontReferenceValue, uint backReferenceValue);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStencilFrontReferenceValue(class Metal.IMTLRenderCommandEncoder This, unsigned int32 frontReferenceValue, unsigned int32 backReferenceValue) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLRenderCommandEncoder" RefType="this" />
          <Parameter Name="frontReferenceValue" Type="System.UInt32" />
          <Parameter Name="backReferenceValue" Type="System.UInt32" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="frontReferenceValue">To be added.</param>
          <param name="backReferenceValue">To be added.</param>
          <summary>Sets the front and back reference stencil values.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLRenderCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLRenderCommandEncoder_Extensions.SetStencilFrontReferenceValue(MonoTouch.Metal.IMTLRenderCommandEncoder,System.UInt32,System.UInt32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLRenderCommandEncoder" />
      </Targets>
      <Member MemberName="SetStencilStoreAction">
        <MemberSignature Language="C#" Value="public static void SetStencilStoreAction (this Metal.IMTLRenderCommandEncoder This, Metal.MTLStoreAction storeAction);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStencilStoreAction(class Metal.IMTLRenderCommandEncoder This, valuetype Metal.MTLStoreAction storeAction) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLRenderCommandEncoder" RefType="this" />
          <Parameter Name="storeAction" Type="MonoTouch.Metal.MTLStoreAction" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="storeAction">To be added.</param>
          <summary>Sets a value that controls how stencil results are handled after a rendering pass.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLRenderCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLRenderCommandEncoder_Extensions.SetStencilStoreAction(MonoTouch.Metal.IMTLRenderCommandEncoder,MonoTouch.Metal.MTLStoreAction)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLRenderCommandEncoder" />
      </Targets>
      <Member MemberName="SetStencilStoreActionOptions">
        <MemberSignature Language="C#" Value="public static void SetStencilStoreActionOptions (this Metal.IMTLRenderCommandEncoder This, Metal.MTLStoreActionOptions storeActionOptions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStencilStoreActionOptions(class Metal.IMTLRenderCommandEncoder This, valuetype Metal.MTLStoreActionOptions storeActionOptions) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLRenderCommandEncoder" RefType="this" />
          <Parameter Name="storeActionOptions" Type="MonoTouch.Metal.MTLStoreActionOptions" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="storeActionOptions">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLRenderCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLRenderCommandEncoder_Extensions.SetStencilStoreActionOptions(MonoTouch.Metal.IMTLRenderCommandEncoder,MonoTouch.Metal.MTLStoreActionOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLRenderCommandEncoder" />
      </Targets>
      <Member MemberName="SetTessellationFactorBuffer">
        <MemberSignature Language="C#" Value="public static void SetTessellationFactorBuffer (this Metal.IMTLRenderCommandEncoder This, Metal.IMTLBuffer buffer, nuint offset, nuint instanceStride);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTessellationFactorBuffer(class Metal.IMTLRenderCommandEncoder This, class Metal.IMTLBuffer buffer, valuetype System.nuint offset, valuetype System.nuint instanceStride) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLRenderCommandEncoder" RefType="this" />
          <Parameter Name="buffer" Type="MonoTouch.Metal.IMTLBuffer" />
          <Parameter Name="offset" Type="System.nuint" />
          <Parameter Name="instanceStride" Type="System.nuint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="buffer">To be added.</param>
          <param name="offset">To be added.</param>
          <param name="instanceStride">To be added.</param>
          <summary>Sets the offset and stride value for a tessellation buffer.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLRenderCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLRenderCommandEncoder_Extensions.SetTessellationFactorBuffer(MonoTouch.Metal.IMTLRenderCommandEncoder,MonoTouch.Metal.IMTLBuffer,System.nuint,System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLRenderCommandEncoder" />
      </Targets>
      <Member MemberName="SetTessellationFactorScale">
        <MemberSignature Language="C#" Value="public static void SetTessellationFactorScale (this Metal.IMTLRenderCommandEncoder This, float scale);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTessellationFactorScale(class Metal.IMTLRenderCommandEncoder This, float32 scale) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLRenderCommandEncoder" RefType="this" />
          <Parameter Name="scale" Type="System.Single" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="scale">To be added.</param>
          <summary>Sets the offset and stride value for a tessellation buffer.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLRenderCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLRenderCommandEncoder_Extensions.SetTessellationFactorScale(MonoTouch.Metal.IMTLRenderCommandEncoder,System.Single)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLRenderCommandEncoder" />
      </Targets>
      <Member MemberName="Update">
        <MemberSignature Language="C#" Value="public static void Update (this Metal.IMTLRenderCommandEncoder This, Metal.IMTLFence fence, Metal.MTLRenderStages stages);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Update(class Metal.IMTLRenderCommandEncoder This, class Metal.IMTLFence fence, valuetype Metal.MTLRenderStages stages) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLRenderCommandEncoder" RefType="this" />
          <Parameter Name="fence" Type="MonoTouch.Metal.IMTLFence" />
          <Parameter Name="stages" Type="MonoTouch.Metal.MTLRenderStages" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="fence">To be added.</param>
          <param name="stages">To be added.</param>
          <summary>Captures all GPU work up to the current fence.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLRenderCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLRenderCommandEncoder_Extensions.Update(MonoTouch.Metal.IMTLRenderCommandEncoder,MonoTouch.Metal.IMTLFence,MonoTouch.Metal.MTLRenderStages)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLRenderCommandEncoder" />
      </Targets>
      <Member MemberName="UseHeap">
        <MemberSignature Language="C#" Value="public static void UseHeap (this Metal.IMTLRenderCommandEncoder This, Metal.IMTLHeap heap);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UseHeap(class Metal.IMTLRenderCommandEncoder This, class Metal.IMTLHeap heap) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLRenderCommandEncoder" RefType="this" />
          <Parameter Name="heap" Type="MonoTouch.Metal.IMTLHeap" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="heap">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLRenderCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLRenderCommandEncoder_Extensions.UseHeap(MonoTouch.Metal.IMTLRenderCommandEncoder,MonoTouch.Metal.IMTLHeap)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLRenderCommandEncoder" />
      </Targets>
      <Member MemberName="UseHeaps">
        <MemberSignature Language="C#" Value="public static void UseHeaps (this Metal.IMTLRenderCommandEncoder This, Metal.IMTLHeap[] heaps, nuint count);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UseHeaps(class Metal.IMTLRenderCommandEncoder This, class Metal.IMTLHeap[] heaps, valuetype System.nuint count) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLRenderCommandEncoder" RefType="this" />
          <Parameter Name="heaps" Type="MonoTouch.Metal.IMTLHeap[]" />
          <Parameter Name="count" Type="System.nuint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="heaps">To be added.</param>
          <param name="count">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLRenderCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLRenderCommandEncoder_Extensions.UseHeaps(MonoTouch.Metal.IMTLRenderCommandEncoder,MonoTouch.Metal.IMTLHeap[],System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLRenderCommandEncoder" />
      </Targets>
      <Member MemberName="UseResource">
        <MemberSignature Language="C#" Value="public static void UseResource (this Metal.IMTLRenderCommandEncoder This, Metal.IMTLResource resource, Metal.MTLResourceUsage usage);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UseResource(class Metal.IMTLRenderCommandEncoder This, class Metal.IMTLResource resource, valuetype Metal.MTLResourceUsage usage) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLRenderCommandEncoder" RefType="this" />
          <Parameter Name="resource" Type="MonoTouch.Metal.IMTLResource" />
          <Parameter Name="usage" Type="MonoTouch.Metal.MTLResourceUsage" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="resource">To be added.</param>
          <param name="usage">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLRenderCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLRenderCommandEncoder_Extensions.UseResource(MonoTouch.Metal.IMTLRenderCommandEncoder,MonoTouch.Metal.IMTLResource,MonoTouch.Metal.MTLResourceUsage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLRenderCommandEncoder" />
      </Targets>
      <Member MemberName="UseResources">
        <MemberSignature Language="C#" Value="public static void UseResources (this Metal.IMTLRenderCommandEncoder This, Metal.IMTLResource[] resources, nuint count, Metal.MTLResourceUsage usage);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UseResources(class Metal.IMTLRenderCommandEncoder This, class Metal.IMTLResource[] resources, valuetype System.nuint count, valuetype Metal.MTLResourceUsage usage) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLRenderCommandEncoder" RefType="this" />
          <Parameter Name="resources" Type="MonoTouch.Metal.IMTLResource[]" />
          <Parameter Name="count" Type="System.nuint" />
          <Parameter Name="usage" Type="MonoTouch.Metal.MTLResourceUsage" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="resources">To be added.</param>
          <param name="count">To be added.</param>
          <param name="usage">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLRenderCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLRenderCommandEncoder_Extensions.UseResources(MonoTouch.Metal.IMTLRenderCommandEncoder,MonoTouch.Metal.IMTLResource[],System.nuint,MonoTouch.Metal.MTLResourceUsage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLRenderCommandEncoder" />
      </Targets>
      <Member MemberName="Wait">
        <MemberSignature Language="C#" Value="public static void Wait (this Metal.IMTLRenderCommandEncoder This, Metal.IMTLFence fence, Metal.MTLRenderStages stages);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Wait(class Metal.IMTLRenderCommandEncoder This, class Metal.IMTLFence fence, valuetype Metal.MTLRenderStages stages) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLRenderCommandEncoder" RefType="this" />
          <Parameter Name="fence" Type="MonoTouch.Metal.IMTLFence" />
          <Parameter Name="stages" Type="MonoTouch.Metal.MTLRenderStages" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="fence">To be added.</param>
          <param name="stages">To be added.</param>
          <summary>Prevents additional GPU work by the encoder until the <paramref name="fence" /> is reached.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLRenderCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLRenderCommandEncoder_Extensions.Wait(MonoTouch.Metal.IMTLRenderCommandEncoder,MonoTouch.Metal.IMTLFence,MonoTouch.Metal.MTLRenderStages)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.MTLRenderPipelineError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this Metal.MTLRenderPipelineError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype Metal.MTLRenderPipelineError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.Metal.MTLRenderPipelineError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.Metal.MTLRenderPipelineError value</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLRenderPipelineErrorExtensions" Member="M:MonoTouch.Metal.MTLRenderPipelineErrorExtensions.GetDomain(MonoTouch.Metal.MTLRenderPipelineError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLResource" />
      </Targets>
      <Member MemberName="GetAllocatedSize">
        <MemberSignature Language="C#" Value="public static nuint GetAllocatedSize (this Metal.IMTLResource This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nuint GetAllocatedSize(class Metal.IMTLResource This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nuint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLResource" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLResource_Extensions" Member="M:MonoTouch.Metal.MTLResource_Extensions.GetAllocatedSize(MonoTouch.Metal.IMTLResource)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLResource" />
      </Targets>
      <Member MemberName="GetHeap">
        <MemberSignature Language="C#" Value="public static Metal.IMTLHeap GetHeap (this Metal.IMTLResource This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Metal.IMTLHeap GetHeap(class Metal.IMTLResource This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.IMTLHeap</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLResource" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the heap that sub-allocated the resource.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLResource_Extensions" Member="M:MonoTouch.Metal.MTLResource_Extensions.GetHeap(MonoTouch.Metal.IMTLResource)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLResource" />
      </Targets>
      <Member MemberName="GetIsAliasable">
        <MemberSignature Language="C#" Value="public static bool GetIsAliasable (this Metal.IMTLResource This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsAliasable(class Metal.IMTLResource This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLResource" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns a Boolean value that tells whether future sub-allocations can alias the resource's memory.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLResource_Extensions" Member="M:MonoTouch.Metal.MTLResource_Extensions.GetIsAliasable(MonoTouch.Metal.IMTLResource)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLResource" />
      </Targets>
      <Member MemberName="GetStorageMode">
        <MemberSignature Language="C#" Value="public static Metal.MTLStorageMode GetStorageMode (this Metal.IMTLResource This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Metal.MTLStorageMode GetStorageMode(class Metal.IMTLResource This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.MTLStorageMode</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLResource" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns a description of the location and permissions of the resource.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLResource_Extensions" Member="M:MonoTouch.Metal.MTLResource_Extensions.GetStorageMode(MonoTouch.Metal.IMTLResource)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLResource" />
      </Targets>
      <Member MemberName="MakeAliasable">
        <MemberSignature Language="C#" Value="public static void MakeAliasable (this Metal.IMTLResource This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MakeAliasable(class Metal.IMTLResource This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLResource" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Makes the resource aliasable.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLResource_Extensions" Member="M:MonoTouch.Metal.MTLResource_Extensions.MakeAliasable(MonoTouch.Metal.IMTLResource)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLTexture" />
      </Targets>
      <Member MemberName="CreateTextureView">
        <MemberSignature Language="C#" Value="public static Metal.IMTLTexture CreateTextureView (this Metal.IMTLTexture This, Metal.MTLPixelFormat pixelFormat, Metal.MTLTextureType textureType, Foundation.NSRange levelRange, Foundation.NSRange sliceRange);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Metal.IMTLTexture CreateTextureView(class Metal.IMTLTexture This, valuetype Metal.MTLPixelFormat pixelFormat, valuetype Metal.MTLTextureType textureType, valuetype Foundation.NSRange levelRange, valuetype Foundation.NSRange sliceRange) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.IMTLTexture</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLTexture" RefType="this" />
          <Parameter Name="pixelFormat" Type="MonoTouch.Metal.MTLPixelFormat" />
          <Parameter Name="textureType" Type="MonoTouch.Metal.MTLTextureType" />
          <Parameter Name="levelRange" Type="MonoTouch.Foundation.NSRange" />
          <Parameter Name="sliceRange" Type="MonoTouch.Foundation.NSRange" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="pixelFormat">To be added.</param>
          <param name="textureType">To be added.</param>
          <param name="levelRange">To be added.</param>
          <param name="sliceRange">To be added.</param>
          <summary>Creates and returns a Metal texture that shares the same memory as the source object, but that is interpreted with the new pixel format.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLTexture_Extensions" Member="M:MonoTouch.Metal.MTLTexture_Extensions.CreateTextureView(MonoTouch.Metal.IMTLTexture,MonoTouch.Metal.MTLPixelFormat,MonoTouch.Metal.MTLTextureType,MonoTouch.Foundation.NSRange,MonoTouch.Foundation.NSRange)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLTexture" />
      </Targets>
      <Member MemberName="GetBuffer">
        <MemberSignature Language="C#" Value="public static Metal.IMTLBuffer GetBuffer (this Metal.IMTLTexture This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Metal.IMTLBuffer GetBuffer(class Metal.IMTLTexture This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.IMTLBuffer</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLTexture" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the buffer for the target texture.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLTexture_Extensions" Member="M:MonoTouch.Metal.MTLTexture_Extensions.GetBuffer(MonoTouch.Metal.IMTLTexture)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLTexture" />
      </Targets>
      <Member MemberName="GetBufferBytesPerRow">
        <MemberSignature Language="C#" Value="public static nuint GetBufferBytesPerRow (this Metal.IMTLTexture This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nuint GetBufferBytesPerRow(class Metal.IMTLTexture This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nuint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLTexture" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Gets the bytes per row in the buffer for the target texture.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLTexture_Extensions" Member="M:MonoTouch.Metal.MTLTexture_Extensions.GetBufferBytesPerRow(MonoTouch.Metal.IMTLTexture)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLTexture" />
      </Targets>
      <Member MemberName="GetBufferOffset">
        <MemberSignature Language="C#" Value="public static nuint GetBufferOffset (this Metal.IMTLTexture This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nuint GetBufferOffset(class Metal.IMTLTexture This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nuint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLTexture" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Gets the offset into the parent texture where the the target texture data begins.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLTexture_Extensions" Member="M:MonoTouch.Metal.MTLTexture_Extensions.GetBufferOffset(MonoTouch.Metal.IMTLTexture)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLTexture" />
      </Targets>
      <Member MemberName="GetIOSurface">
        <MemberSignature Language="C#" Value="public static IOSurface.IOSurface GetIOSurface (this Metal.IMTLTexture This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class IOSurface.IOSurface GetIOSurface(class Metal.IMTLTexture This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.IOSurface.IOSurface</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLTexture" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLTexture_Extensions" Member="M:MonoTouch.Metal.MTLTexture_Extensions.GetIOSurface(MonoTouch.Metal.IMTLTexture)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLTexture" />
      </Targets>
      <Member MemberName="GetIOSurfacePlane">
        <MemberSignature Language="C#" Value="public static nuint GetIOSurfacePlane (this Metal.IMTLTexture This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nuint GetIOSurfacePlane(class Metal.IMTLTexture This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nuint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLTexture" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLTexture_Extensions" Member="M:MonoTouch.Metal.MTLTexture_Extensions.GetIOSurfacePlane(MonoTouch.Metal.IMTLTexture)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLTexture" />
      </Targets>
      <Member MemberName="GetParentRelativeLevel">
        <MemberSignature Language="C#" Value="public static nuint GetParentRelativeLevel (this Metal.IMTLTexture This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nuint GetParentRelativeLevel(class Metal.IMTLTexture This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nuint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLTexture" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the base level of the parent texture from which the target texture was created.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLTexture_Extensions" Member="M:MonoTouch.Metal.MTLTexture_Extensions.GetParentRelativeLevel(MonoTouch.Metal.IMTLTexture)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLTexture" />
      </Targets>
      <Member MemberName="GetParentRelativeSlice">
        <MemberSignature Language="C#" Value="public static nuint GetParentRelativeSlice (this Metal.IMTLTexture This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nuint GetParentRelativeSlice(class Metal.IMTLTexture This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nuint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLTexture" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the base slice of the parent texture from which the target texture was created.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLTexture_Extensions" Member="M:MonoTouch.Metal.MTLTexture_Extensions.GetParentRelativeSlice(MonoTouch.Metal.IMTLTexture)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLTexture" />
      </Targets>
      <Member MemberName="GetParentTexture">
        <MemberSignature Language="C#" Value="public static Metal.IMTLTexture GetParentTexture (this Metal.IMTLTexture This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Metal.IMTLTexture GetParentTexture(class Metal.IMTLTexture This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.IMTLTexture</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLTexture" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the parent texture.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLTexture_Extensions" Member="M:MonoTouch.Metal.MTLTexture_Extensions.GetParentTexture(MonoTouch.Metal.IMTLTexture)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLTexture" />
      </Targets>
      <Member MemberName="GetUsage">
        <MemberSignature Language="C#" Value="public static Metal.MTLTextureUsage GetUsage (this Metal.IMTLTexture This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Metal.MTLTextureUsage GetUsage(class Metal.IMTLTexture This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.MTLTextureUsage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLTexture" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Gets a description of how the texture can be used. (For example, as a write target for compute shaders.)</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLTexture_Extensions" Member="M:MonoTouch.Metal.MTLTexture_Extensions.GetUsage(MonoTouch.Metal.IMTLTexture)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.MTLVertexFormat" />
      </Targets>
      <Member MemberName="ToModelVertexFormat">
        <MemberSignature Language="C#" Value="public static ModelIO.MDLVertexFormat ToModelVertexFormat (this Metal.MTLVertexFormat vertexFormat);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype ModelIO.MDLVertexFormat ToModelVertexFormat(valuetype Metal.MTLVertexFormat vertexFormat) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.ModelIO.MDLVertexFormat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="vertexFormat" Type="MonoTouch.Metal.MTLVertexFormat" RefType="this" />
        </Parameters>
        <Docs>
          <param name="vertexFormat">To be added.</param>
          <summary>Converts from the current to the desired <paramref name="vertexFormat" />.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLVertexFormatExtensions" Member="M:MonoTouch.Metal.MTLVertexFormatExtensions.ToModelVertexFormat(MonoTouch.Metal.MTLVertexFormat)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MetalKit.MTKTextureLoaderCubeLayout" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this MetalKit.MTKTextureLoaderCubeLayout self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype MetalKit.MTKTextureLoaderCubeLayout self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.MetalKit.MTKTextureLoaderCubeLayout" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MetalKit.MTKTextureLoaderCubeLayoutExtensions" Member="M:MonoTouch.MetalKit.MTKTextureLoaderCubeLayoutExtensions.GetConstant(MonoTouch.MetalKit.MTKTextureLoaderCubeLayout)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MetalKit.MTKTextureLoaderOrigin" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this MetalKit.MTKTextureLoaderOrigin self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype MetalKit.MTKTextureLoaderOrigin self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.MetalKit.MTKTextureLoaderOrigin" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MetalKit.MTKTextureLoaderOriginExtensions" Member="M:MonoTouch.MetalKit.MTKTextureLoaderOriginExtensions.GetConstant(MonoTouch.MetalKit.MTKTextureLoaderOrigin)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ModelIO.IMDLLightProbeIrradianceDataSource" />
      </Targets>
      <Member MemberName="GetSphericalHarmonicsCoefficients">
        <MemberSignature Language="C#" Value="public static Foundation.NSData GetSphericalHarmonicsCoefficients (this ModelIO.IMDLLightProbeIrradianceDataSource This, OpenTK.Vector3 position);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSData GetSphericalHarmonicsCoefficients(class ModelIO.IMDLLightProbeIrradianceDataSource This, valuetype OpenTK.Vector3 position) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSData</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ModelIO.IMDLLightProbeIrradianceDataSource" RefType="this" />
          <Parameter Name="position" Type="MonoTouch.OpenTK.Vector3" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="position">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ModelIO.MDLLightProbeIrradianceDataSource_Extensions" Member="M:MonoTouch.ModelIO.MDLLightProbeIrradianceDataSource_Extensions.GetSphericalHarmonicsCoefficients(MonoTouch.ModelIO.IMDLLightProbeIrradianceDataSource,MonoTouch.OpenTK.Vector3)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ModelIO.IMDLLightProbeIrradianceDataSource" />
      </Targets>
      <Member MemberName="GetSphericalHarmonicsLevel">
        <MemberSignature Language="C#" Value="public static nuint GetSphericalHarmonicsLevel (this ModelIO.IMDLLightProbeIrradianceDataSource This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nuint GetSphericalHarmonicsLevel(class ModelIO.IMDLLightProbeIrradianceDataSource This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nuint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ModelIO.IMDLLightProbeIrradianceDataSource" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ModelIO.MDLLightProbeIrradianceDataSource_Extensions" Member="M:MonoTouch.ModelIO.MDLLightProbeIrradianceDataSource_Extensions.GetSphericalHarmonicsLevel(MonoTouch.ModelIO.IMDLLightProbeIrradianceDataSource)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ModelIO.IMDLLightProbeIrradianceDataSource" />
      </Targets>
      <Member MemberName="SetSphericalHarmonicsLevel">
        <MemberSignature Language="C#" Value="public static void SetSphericalHarmonicsLevel (this ModelIO.IMDLLightProbeIrradianceDataSource This, nuint value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetSphericalHarmonicsLevel(class ModelIO.IMDLLightProbeIrradianceDataSource This, valuetype System.nuint value) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ModelIO.IMDLLightProbeIrradianceDataSource" RefType="this" />
          <Parameter Name="value" Type="System.nuint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="value">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ModelIO.MDLLightProbeIrradianceDataSource_Extensions" Member="M:MonoTouch.ModelIO.MDLLightProbeIrradianceDataSource_Extensions.SetSphericalHarmonicsLevel(MonoTouch.ModelIO.IMDLLightProbeIrradianceDataSource,System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ModelIO.IMDLMeshBuffer" />
      </Targets>
      <Member MemberName="GetAllocator">
        <MemberSignature Language="C#" Value="public static ModelIO.IMDLMeshBufferAllocator GetAllocator (this ModelIO.IMDLMeshBuffer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class ModelIO.IMDLMeshBufferAllocator GetAllocator(class ModelIO.IMDLMeshBuffer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.ModelIO.IMDLMeshBufferAllocator</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ModelIO.IMDLMeshBuffer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the allocator that was used to allocate memory for the mesh buffer..</summary>
        </Docs>
        <Link Type="MonoTouch.ModelIO.MDLMeshBuffer_Extensions" Member="M:MonoTouch.ModelIO.MDLMeshBuffer_Extensions.GetAllocator(MonoTouch.ModelIO.IMDLMeshBuffer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ModelIO.IMDLMeshBuffer" />
      </Targets>
      <Member MemberName="GetLength">
        <MemberSignature Language="C#" Value="public static nuint GetLength (this ModelIO.IMDLMeshBuffer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nuint GetLength(class ModelIO.IMDLMeshBuffer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nuint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ModelIO.IMDLMeshBuffer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the length of the buffer, in bytes.</summary>
        </Docs>
        <Link Type="MonoTouch.ModelIO.MDLMeshBuffer_Extensions" Member="M:MonoTouch.ModelIO.MDLMeshBuffer_Extensions.GetLength(MonoTouch.ModelIO.IMDLMeshBuffer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ModelIO.IMDLMeshBuffer" />
      </Targets>
      <Member MemberName="GetType">
        <MemberSignature Language="C#" Value="public static ModelIO.MDLMeshBufferType GetType (this ModelIO.IMDLMeshBuffer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype ModelIO.MDLMeshBufferType GetType(class ModelIO.IMDLMeshBuffer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.ModelIO.MDLMeshBufferType</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ModelIO.IMDLMeshBuffer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns a value that indicates whether the buffer contains indices or vertices.</summary>
        </Docs>
        <Link Type="MonoTouch.ModelIO.MDLMeshBuffer_Extensions" Member="M:MonoTouch.ModelIO.MDLMeshBuffer_Extensions.GetType(MonoTouch.ModelIO.IMDLMeshBuffer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ModelIO.IMDLMeshBuffer" />
      </Targets>
      <Member MemberName="GetZone">
        <MemberSignature Language="C#" Value="public static ModelIO.IMDLMeshBufferZone GetZone (this ModelIO.IMDLMeshBuffer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class ModelIO.IMDLMeshBufferZone GetZone(class ModelIO.IMDLMeshBuffer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.ModelIO.IMDLMeshBufferZone</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ModelIO.IMDLMeshBuffer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the memory pool that the buffer occupies..</summary>
        </Docs>
        <Link Type="MonoTouch.ModelIO.MDLMeshBuffer_Extensions" Member="M:MonoTouch.ModelIO.MDLMeshBuffer_Extensions.GetZone(MonoTouch.ModelIO.IMDLMeshBuffer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ModelIO.IMDLMeshBufferZone" />
      </Targets>
      <Member MemberName="GetAllocator">
        <MemberSignature Language="C#" Value="public static ModelIO.IMDLMeshBufferAllocator GetAllocator (this ModelIO.IMDLMeshBufferZone This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class ModelIO.IMDLMeshBufferAllocator GetAllocator(class ModelIO.IMDLMeshBufferZone This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.ModelIO.IMDLMeshBufferAllocator</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ModelIO.IMDLMeshBufferZone" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Gets the allocator that created the zone.</summary>
        </Docs>
        <Link Type="MonoTouch.ModelIO.MDLMeshBufferZone_Extensions" Member="M:MonoTouch.ModelIO.MDLMeshBufferZone_Extensions.GetAllocator(MonoTouch.ModelIO.IMDLMeshBufferZone)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ModelIO.IMDLMeshBufferZone" />
      </Targets>
      <Member MemberName="GetCapacity">
        <MemberSignature Language="C#" Value="public static nuint GetCapacity (this ModelIO.IMDLMeshBufferZone This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nuint GetCapacity(class ModelIO.IMDLMeshBufferZone This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nuint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ModelIO.IMDLMeshBufferZone" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Gets the capacity of the zone, in bytes.</summary>
        </Docs>
        <Link Type="MonoTouch.ModelIO.MDLMeshBufferZone_Extensions" Member="M:MonoTouch.ModelIO.MDLMeshBufferZone_Extensions.GetCapacity(MonoTouch.ModelIO.IMDLMeshBufferZone)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ModelIO.IMDLObjectContainerComponent" />
      </Targets>
      <Member MemberName="GetCount">
        <MemberSignature Language="C#" Value="public static nuint GetCount (this ModelIO.IMDLObjectContainerComponent This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nuint GetCount(class ModelIO.IMDLObjectContainerComponent This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nuint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ModelIO.IMDLObjectContainerComponent" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Gets the number of objects in the container.</summary>
        </Docs>
        <Link Type="MonoTouch.ModelIO.MDLObjectContainerComponent_Extensions" Member="M:MonoTouch.ModelIO.MDLObjectContainerComponent_Extensions.GetCount(MonoTouch.ModelIO.IMDLObjectContainerComponent)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ModelIO.IMDLObjectContainerComponent" />
      </Targets>
      <Member MemberName="GetObject">
        <MemberSignature Language="C#" Value="public static ModelIO.MDLObject GetObject (this ModelIO.IMDLObjectContainerComponent This, nuint index);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class ModelIO.MDLObject GetObject(class ModelIO.IMDLObjectContainerComponent This, valuetype System.nuint index) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.ModelIO.MDLObject</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ModelIO.IMDLObjectContainerComponent" RefType="this" />
          <Parameter Name="index" Type="System.nuint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="index">To be added.</param>
          <summary>Returns the object at the specified <paramref name="index" />.</summary>
        </Docs>
        <Link Type="MonoTouch.ModelIO.MDLObjectContainerComponent_Extensions" Member="M:MonoTouch.ModelIO.MDLObjectContainerComponent_Extensions.GetObject(MonoTouch.ModelIO.IMDLObjectContainerComponent,System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ModelIO.IMDLTransformComponent" />
      </Targets>
      <Member MemberName="GetKeyTimes">
        <MemberSignature Language="C#" Value="public static Foundation.NSNumber[] GetKeyTimes (this ModelIO.IMDLTransformComponent This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSNumber[] GetKeyTimes(class ModelIO.IMDLTransformComponent This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSNumber[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ModelIO.IMDLTransformComponent" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ModelIO.MDLTransformComponent_Extensions" Member="M:MonoTouch.ModelIO.MDLTransformComponent_Extensions.GetKeyTimes(MonoTouch.ModelIO.IMDLTransformComponent)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ModelIO.IMDLTransformComponent" />
      </Targets>
      <Member MemberName="GetLocalTransform">
        <MemberSignature Language="C#" Value="public static OpenTK.Matrix4 GetLocalTransform (this ModelIO.IMDLTransformComponent This, double atTime);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype OpenTK.Matrix4 GetLocalTransform(class ModelIO.IMDLTransformComponent This, float64 atTime) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.OpenTK.Matrix4</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ModelIO.IMDLTransformComponent" RefType="this" />
          <Parameter Name="atTime" Type="System.Double" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="atTime">To be added.</param>
          <summary>Gets the local transform at the specified time.</summary>
        </Docs>
        <Link Type="MonoTouch.ModelIO.MDLTransformComponent_Extensions" Member="M:MonoTouch.ModelIO.MDLTransformComponent_Extensions.GetLocalTransform(MonoTouch.ModelIO.IMDLTransformComponent,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ModelIO.IMDLTransformComponent" />
      </Targets>
      <Member MemberName="GetLocalTransform4x4">
        <MemberSignature Language="C#" Value="public static OpenTK.NMatrix4 GetLocalTransform4x4 (this ModelIO.IMDLTransformComponent This, double time);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype OpenTK.NMatrix4 GetLocalTransform4x4(class ModelIO.IMDLTransformComponent This, float64 time) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.OpenTK.NMatrix4</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ModelIO.IMDLTransformComponent" RefType="this" />
          <Parameter Name="time" Type="System.Double" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="time">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ModelIO.MDLTransformComponent_Extensions" Member="M:MonoTouch.ModelIO.MDLTransformComponent_Extensions.GetLocalTransform4x4(MonoTouch.ModelIO.IMDLTransformComponent,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ModelIO.IMDLTransformComponent" />
      </Targets>
      <Member MemberName="GetMatrix4x4">
        <MemberSignature Language="C#" Value="public static OpenTK.NMatrix4 GetMatrix4x4 (this ModelIO.IMDLTransformComponent self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype OpenTK.NMatrix4 GetMatrix4x4(class ModelIO.IMDLTransformComponent self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.OpenTK.NMatrix4</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.ModelIO.IMDLTransformComponent" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ModelIO.MDLTransformComponent_Extensions" Member="M:MonoTouch.ModelIO.MDLTransformComponent_Extensions.GetMatrix4x4(MonoTouch.ModelIO.IMDLTransformComponent)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ModelIO.IMDLTransformComponent" />
      </Targets>
      <Member MemberName="GetResetsTransform">
        <MemberSignature Language="C#" Value="public static bool GetResetsTransform (this ModelIO.IMDLTransformComponent This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetResetsTransform(class ModelIO.IMDLTransformComponent This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ModelIO.IMDLTransformComponent" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ModelIO.MDLTransformComponent_Extensions" Member="M:MonoTouch.ModelIO.MDLTransformComponent_Extensions.GetResetsTransform(MonoTouch.ModelIO.IMDLTransformComponent)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ModelIO.IMDLTransformComponent" />
      </Targets>
      <Member MemberName="SetLocalTransform">
        <MemberSignature Language="C#" Value="public static void SetLocalTransform (this ModelIO.IMDLTransformComponent This, OpenTK.Matrix4 transform);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetLocalTransform(class ModelIO.IMDLTransformComponent This, valuetype OpenTK.Matrix4 transform) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ModelIO.IMDLTransformComponent" RefType="this" />
          <Parameter Name="transform" Type="MonoTouch.OpenTK.Matrix4" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="transform">To be added.</param>
          <summary>Replaces all transform information, including time-based transforms, with the specified static transform.</summary>
        </Docs>
        <Link Type="MonoTouch.ModelIO.MDLTransformComponent_Extensions" Member="M:MonoTouch.ModelIO.MDLTransformComponent_Extensions.SetLocalTransform(MonoTouch.ModelIO.IMDLTransformComponent,MonoTouch.OpenTK.Matrix4)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ModelIO.IMDLTransformComponent" />
      </Targets>
      <Member MemberName="SetLocalTransform">
        <MemberSignature Language="C#" Value="public static void SetLocalTransform (this ModelIO.IMDLTransformComponent This, OpenTK.Matrix4 transform, double time);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetLocalTransform(class ModelIO.IMDLTransformComponent This, valuetype OpenTK.Matrix4 transform, float64 time) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ModelIO.IMDLTransformComponent" RefType="this" />
          <Parameter Name="time" Type="System.Double" />
          <Parameter Name="transform" Type="MonoTouch.OpenTK.Matrix4" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="transform">To be added.</param>
          <param name="time">To be added.</param>
          <summary>Inserts the specified transform at the specified time.</summary>
        </Docs>
        <Link Type="MonoTouch.ModelIO.MDLTransformComponent_Extensions" Member="M:MonoTouch.ModelIO.MDLTransformComponent_Extensions.SetLocalTransform(MonoTouch.ModelIO.IMDLTransformComponent,MonoTouch.OpenTK.Matrix4,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ModelIO.IMDLTransformComponent" />
      </Targets>
      <Member MemberName="SetLocalTransform4x4">
        <MemberSignature Language="C#" Value="public static void SetLocalTransform4x4 (this ModelIO.IMDLTransformComponent This, OpenTK.NMatrix4 transform);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetLocalTransform4x4(class ModelIO.IMDLTransformComponent This, valuetype OpenTK.NMatrix4 transform) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ModelIO.IMDLTransformComponent" RefType="this" />
          <Parameter Name="transform" Type="MonoTouch.OpenTK.NMatrix4" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="transform">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ModelIO.MDLTransformComponent_Extensions" Member="M:MonoTouch.ModelIO.MDLTransformComponent_Extensions.SetLocalTransform4x4(MonoTouch.ModelIO.IMDLTransformComponent,MonoTouch.OpenTK.NMatrix4)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ModelIO.IMDLTransformComponent" />
      </Targets>
      <Member MemberName="SetLocalTransform4x4">
        <MemberSignature Language="C#" Value="public static void SetLocalTransform4x4 (this ModelIO.IMDLTransformComponent This, OpenTK.NMatrix4 transform, double time);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetLocalTransform4x4(class ModelIO.IMDLTransformComponent This, valuetype OpenTK.NMatrix4 transform, float64 time) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ModelIO.IMDLTransformComponent" RefType="this" />
          <Parameter Name="transform" Type="MonoTouch.OpenTK.NMatrix4" />
          <Parameter Name="time" Type="System.Double" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="transform">To be added.</param>
          <param name="time">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ModelIO.MDLTransformComponent_Extensions" Member="M:MonoTouch.ModelIO.MDLTransformComponent_Extensions.SetLocalTransform4x4(MonoTouch.ModelIO.IMDLTransformComponent,MonoTouch.OpenTK.NMatrix4,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ModelIO.IMDLTransformComponent" />
      </Targets>
      <Member MemberName="SetMatrix4x4">
        <MemberSignature Language="C#" Value="public static void SetMatrix4x4 (this ModelIO.IMDLTransformComponent self, OpenTK.NMatrix4 value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetMatrix4x4(class ModelIO.IMDLTransformComponent self, valuetype OpenTK.NMatrix4 value) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.ModelIO.IMDLTransformComponent" RefType="this" />
          <Parameter Name="value" Type="MonoTouch.OpenTK.NMatrix4" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <param name="value">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ModelIO.MDLTransformComponent_Extensions" Member="M:MonoTouch.ModelIO.MDLTransformComponent_Extensions.SetMatrix4x4(MonoTouch.ModelIO.IMDLTransformComponent,MonoTouch.OpenTK.NMatrix4)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ModelIO.IMDLTransformComponent" />
      </Targets>
      <Member MemberName="SetResetsTransform">
        <MemberSignature Language="C#" Value="public static void SetResetsTransform (this ModelIO.IMDLTransformComponent This, bool value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetResetsTransform(class ModelIO.IMDLTransformComponent This, bool value) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ModelIO.IMDLTransformComponent" RefType="this" />
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="value">To be added.</param>
          <summary>Inserts the specified transform at the specified time.</summary>
        </Docs>
        <Link Type="MonoTouch.ModelIO.MDLTransformComponent_Extensions" Member="M:MonoTouch.ModelIO.MDLTransformComponent_Extensions.SetResetsTransform(MonoTouch.ModelIO.IMDLTransformComponent,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ModelIO.MDLVertexFormat" />
      </Targets>
      <Member MemberName="ToMetalVertexFormat">
        <MemberSignature Language="C#" Value="public static Metal.MTLVertexFormat ToMetalVertexFormat (this ModelIO.MDLVertexFormat vertexFormat);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Metal.MTLVertexFormat ToMetalVertexFormat(valuetype ModelIO.MDLVertexFormat vertexFormat) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.MTLVertexFormat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="vertexFormat" Type="MonoTouch.ModelIO.MDLVertexFormat" RefType="this" />
        </Parameters>
        <Docs>
          <param name="vertexFormat">To be added.</param>
          <summary>Converts the current vertex format into the specified <paramref name="vertexFormat" />.</summary>
        </Docs>
        <Link Type="MonoTouch.ModelIO.MDLVertexFormatExtensions" Member="M:MonoTouch.ModelIO.MDLVertexFormatExtensions.ToMetalVertexFormat(MonoTouch.ModelIO.MDLVertexFormat)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MultipeerConnectivity.IMCAdvertiserAssistantDelegate" />
      </Targets>
      <Member MemberName="DidDismissInvitation">
        <MemberSignature Language="C#" Value="public static void DidDismissInvitation (this MultipeerConnectivity.IMCAdvertiserAssistantDelegate This, MultipeerConnectivity.MCAdvertiserAssistant advertiserAssistant);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDismissInvitation(class MultipeerConnectivity.IMCAdvertiserAssistantDelegate This, class MultipeerConnectivity.MCAdvertiserAssistant advertiserAssistant) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MultipeerConnectivity.IMCAdvertiserAssistantDelegate" RefType="this" />
          <Parameter Name="advertiserAssistant" Type="MonoTouch.MultipeerConnectivity.MCAdvertiserAssistant" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="advertiserAssistant">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MultipeerConnectivity.MCAdvertiserAssistantDelegate_Extensions" Member="M:MonoTouch.MultipeerConnectivity.MCAdvertiserAssistantDelegate_Extensions.DidDismissInvitation(MonoTouch.MultipeerConnectivity.IMCAdvertiserAssistantDelegate,MonoTouch.MultipeerConnectivity.MCAdvertiserAssistant)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MultipeerConnectivity.IMCAdvertiserAssistantDelegate" />
      </Targets>
      <Member MemberName="WillPresentInvitation">
        <MemberSignature Language="C#" Value="public static void WillPresentInvitation (this MultipeerConnectivity.IMCAdvertiserAssistantDelegate This, MultipeerConnectivity.MCAdvertiserAssistant advertiserAssistant);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillPresentInvitation(class MultipeerConnectivity.IMCAdvertiserAssistantDelegate This, class MultipeerConnectivity.MCAdvertiserAssistant advertiserAssistant) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MultipeerConnectivity.IMCAdvertiserAssistantDelegate" RefType="this" />
          <Parameter Name="advertiserAssistant" Type="MonoTouch.MultipeerConnectivity.MCAdvertiserAssistant" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="advertiserAssistant">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MultipeerConnectivity.MCAdvertiserAssistantDelegate_Extensions" Member="M:MonoTouch.MultipeerConnectivity.MCAdvertiserAssistantDelegate_Extensions.WillPresentInvitation(MonoTouch.MultipeerConnectivity.IMCAdvertiserAssistantDelegate,MonoTouch.MultipeerConnectivity.MCAdvertiserAssistant)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MultipeerConnectivity.IMCBrowserViewControllerDelegate" />
      </Targets>
      <Member MemberName="ShouldPresentNearbyPeer">
        <MemberSignature Language="C#" Value="public static bool ShouldPresentNearbyPeer (this MultipeerConnectivity.IMCBrowserViewControllerDelegate This, MultipeerConnectivity.MCBrowserViewController browserViewController, MultipeerConnectivity.MCPeerID peerID, Foundation.NSDictionary info);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldPresentNearbyPeer(class MultipeerConnectivity.IMCBrowserViewControllerDelegate This, class MultipeerConnectivity.MCBrowserViewController browserViewController, class MultipeerConnectivity.MCPeerID peerID, class Foundation.NSDictionary info) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MultipeerConnectivity.IMCBrowserViewControllerDelegate" RefType="this" />
          <Parameter Name="browserViewController" Type="MonoTouch.MultipeerConnectivity.MCBrowserViewController" />
          <Parameter Name="peerID" Type="MonoTouch.MultipeerConnectivity.MCPeerID" />
          <Parameter Name="info" Type="MonoTouch.Foundation.NSDictionary" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="browserViewController">To be added.</param>
          <param name="peerID">To be added.</param>
          <param name="info">To be added.This parameter can be .</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MultipeerConnectivity.MCBrowserViewControllerDelegate_Extensions" Member="M:MonoTouch.MultipeerConnectivity.MCBrowserViewControllerDelegate_Extensions.ShouldPresentNearbyPeer(MonoTouch.MultipeerConnectivity.IMCBrowserViewControllerDelegate,MonoTouch.MultipeerConnectivity.MCBrowserViewController,MonoTouch.MultipeerConnectivity.MCPeerID,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MultipeerConnectivity.MCError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this MultipeerConnectivity.MCError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype MultipeerConnectivity.MCError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.MultipeerConnectivity.MCError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.MultipeerConnectivity.MCError value</summary>
        </Docs>
        <Link Type="MonoTouch.MultipeerConnectivity.MCErrorExtensions" Member="M:MonoTouch.MultipeerConnectivity.MCErrorExtensions.GetDomain(MonoTouch.MultipeerConnectivity.MCError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MultipeerConnectivity.IMCNearbyServiceAdvertiserDelegate" />
      </Targets>
      <Member MemberName="DidNotStartAdvertisingPeer">
        <MemberSignature Language="C#" Value="public static void DidNotStartAdvertisingPeer (this MultipeerConnectivity.IMCNearbyServiceAdvertiserDelegate This, MultipeerConnectivity.MCNearbyServiceAdvertiser advertiser, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidNotStartAdvertisingPeer(class MultipeerConnectivity.IMCNearbyServiceAdvertiserDelegate This, class MultipeerConnectivity.MCNearbyServiceAdvertiser advertiser, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MultipeerConnectivity.IMCNearbyServiceAdvertiserDelegate" RefType="this" />
          <Parameter Name="advertiser" Type="MonoTouch.MultipeerConnectivity.MCNearbyServiceAdvertiser" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="advertiser">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MultipeerConnectivity.MCNearbyServiceAdvertiserDelegate_Extensions" Member="M:MonoTouch.MultipeerConnectivity.MCNearbyServiceAdvertiserDelegate_Extensions.DidNotStartAdvertisingPeer(MonoTouch.MultipeerConnectivity.IMCNearbyServiceAdvertiserDelegate,MonoTouch.MultipeerConnectivity.MCNearbyServiceAdvertiser,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MultipeerConnectivity.IMCNearbyServiceBrowserDelegate" />
      </Targets>
      <Member MemberName="DidNotStartBrowsingForPeers">
        <MemberSignature Language="C#" Value="public static void DidNotStartBrowsingForPeers (this MultipeerConnectivity.IMCNearbyServiceBrowserDelegate This, MultipeerConnectivity.MCNearbyServiceBrowser browser, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidNotStartBrowsingForPeers(class MultipeerConnectivity.IMCNearbyServiceBrowserDelegate This, class MultipeerConnectivity.MCNearbyServiceBrowser browser, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MultipeerConnectivity.IMCNearbyServiceBrowserDelegate" RefType="this" />
          <Parameter Name="browser" Type="MonoTouch.MultipeerConnectivity.MCNearbyServiceBrowser" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="browser">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MultipeerConnectivity.MCNearbyServiceBrowserDelegate_Extensions" Member="M:MonoTouch.MultipeerConnectivity.MCNearbyServiceBrowserDelegate_Extensions.DidNotStartBrowsingForPeers(MonoTouch.MultipeerConnectivity.IMCNearbyServiceBrowserDelegate,MonoTouch.MultipeerConnectivity.MCNearbyServiceBrowser,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MultipeerConnectivity.IMCSessionDelegate" />
      </Targets>
      <Member MemberName="DidReceiveCertificate">
        <MemberSignature Language="C#" Value="public static bool DidReceiveCertificate (this MultipeerConnectivity.IMCSessionDelegate This, MultipeerConnectivity.MCSession session, Security.SecCertificate[] certificate, MultipeerConnectivity.MCPeerID peerID, Action&lt;bool&gt; certificateHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DidReceiveCertificate(class MultipeerConnectivity.IMCSessionDelegate This, class MultipeerConnectivity.MCSession session, class Security.SecCertificate[] certificate, class MultipeerConnectivity.MCPeerID peerID, class System.Action`1&lt;bool&gt; certificateHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MultipeerConnectivity.IMCSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.MultipeerConnectivity.MCSession" />
          <Parameter Name="certificate" Type="MonoTouch.Security.SecCertificate[]" />
          <Parameter Name="peerID" Type="MonoTouch.MultipeerConnectivity.MCPeerID" />
          <Parameter Name="certificateHandler" Type="System.Action&lt;System.Boolean&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V12))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="certificate">To be added.This parameter can be .</param>
          <param name="peerID">To be added.</param>
          <param name="certificateHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MultipeerConnectivity.MCSessionDelegate_Extensions" Member="M:MonoTouch.MultipeerConnectivity.MCSessionDelegate_Extensions.DidReceiveCertificate(MonoTouch.MultipeerConnectivity.IMCSessionDelegate,MonoTouch.MultipeerConnectivity.MCSession,MonoTouch.Security.SecCertificate[],MonoTouch.MultipeerConnectivity.MCPeerID,System.Action{System.Boolean})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.NetworkExtension.NEAppProxyFlowError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this NetworkExtension.NEAppProxyFlowError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype NetworkExtension.NEAppProxyFlowError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.NetworkExtension.NEAppProxyFlowError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.NetworkExtension.NEAppProxyFlowError value</summary>
        </Docs>
        <Link Type="MonoTouch.NetworkExtension.NEAppProxyFlowErrorExtensions" Member="M:MonoTouch.NetworkExtension.NEAppProxyFlowErrorExtensions.GetDomain(MonoTouch.NetworkExtension.NEAppProxyFlowError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.NetworkExtension.NEFilterManagerError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this NetworkExtension.NEFilterManagerError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype NetworkExtension.NEFilterManagerError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.NetworkExtension.NEFilterManagerError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.NetworkExtension.NEFilterManagerError value</summary>
        </Docs>
        <Link Type="MonoTouch.NetworkExtension.NEFilterManagerErrorExtensions" Member="M:MonoTouch.NetworkExtension.NEFilterManagerErrorExtensions.GetDomain(MonoTouch.NetworkExtension.NEFilterManagerError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.NetworkExtension.NETunnelProviderError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this NetworkExtension.NETunnelProviderError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype NetworkExtension.NETunnelProviderError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.NetworkExtension.NETunnelProviderError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.NetworkExtension.NETunnelProviderError value</summary>
        </Docs>
        <Link Type="MonoTouch.NetworkExtension.NETunnelProviderErrorExtensions" Member="M:MonoTouch.NetworkExtension.NETunnelProviderErrorExtensions.GetDomain(MonoTouch.NetworkExtension.NETunnelProviderError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.NetworkExtension.NEVpnError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this NetworkExtension.NEVpnError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype NetworkExtension.NEVpnError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.NetworkExtension.NEVpnError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.NetworkExtension.NEVpnError value</summary>
        </Docs>
        <Link Type="MonoTouch.NetworkExtension.NEVpnErrorExtensions" Member="M:MonoTouch.NetworkExtension.NEVpnErrorExtensions.GetDomain(MonoTouch.NetworkExtension.NEVpnError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSMutableUrlRequest" />
      </Targets>
      <Member MemberName="BindTo">
        <MemberSignature Language="C#" Value="public static void BindTo (this Foundation.NSMutableUrlRequest This, NetworkExtension.NEHotspotHelperCommand command);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BindTo(class Foundation.NSMutableUrlRequest This, class NetworkExtension.NEHotspotHelperCommand command) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSMutableUrlRequest" RefType="this" />
          <Parameter Name="command" Type="MonoTouch.NetworkExtension.NEHotspotHelperCommand" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="command">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.NetworkExtension.NSMutableURLRequest_NEHotspotHelper" Member="M:MonoTouch.NetworkExtension.NSMutableURLRequest_NEHotspotHelper.BindTo(MonoTouch.Foundation.NSMutableUrlRequest,MonoTouch.NetworkExtension.NEHotspotHelperCommand)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate" />
      </Targets>
      <Member MemberName="EvaluateTrust">
        <MemberSignature Language="C#" Value="public static void EvaluateTrust (this NetworkExtension.INWTcpConnectionAuthenticationDelegate This, NetworkExtension.NWTcpConnection connection, Foundation.NSArray peerCertificateChain, Action&lt;Security.SecTrust&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EvaluateTrust(class NetworkExtension.INWTcpConnectionAuthenticationDelegate This, class NetworkExtension.NWTcpConnection connection, class Foundation.NSArray peerCertificateChain, class System.Action`1&lt;class Security.SecTrust&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.NetworkExtension.NWTcpConnection" />
          <Parameter Name="peerCertificateChain" Type="MonoTouch.Foundation.NSArray" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Security.SecTrust&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V24))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="connection">To be added.</param>
          <param name="peerCertificateChain">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>When implemented by the developer, overrides the default trust evaluation.</summary>
        </Docs>
        <Link Type="MonoTouch.NetworkExtension.NWTcpConnectionAuthenticationDelegate_Extensions" Member="M:MonoTouch.NetworkExtension.NWTcpConnectionAuthenticationDelegate_Extensions.EvaluateTrust(MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate,MonoTouch.NetworkExtension.NWTcpConnection,MonoTouch.Foundation.NSArray,System.Action{MonoTouch.Security.SecTrust})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate" />
      </Targets>
      <Member MemberName="EvaluateTrustAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Security.SecTrust&gt; EvaluateTrustAsync (this NetworkExtension.INWTcpConnectionAuthenticationDelegate This, NetworkExtension.NWTcpConnection connection, Foundation.NSArray peerCertificateChain);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Security.SecTrust&gt; EvaluateTrustAsync(class NetworkExtension.INWTcpConnectionAuthenticationDelegate This, class NetworkExtension.NWTcpConnection connection, class Foundation.NSArray peerCertificateChain) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;MonoTouch.Security.SecTrust&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.NetworkExtension.NWTcpConnection" />
          <Parameter Name="peerCertificateChain" Type="MonoTouch.Foundation.NSArray" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="connection">To be added.</param>
          <param name="peerCertificateChain">To be added.</param>
          <summary>When implemented by the developer, returns a task that overrides the default trust evaluation.</summary>
        </Docs>
        <Link Type="MonoTouch.NetworkExtension.NWTcpConnectionAuthenticationDelegate_Extensions" Member="M:MonoTouch.NetworkExtension.NWTcpConnectionAuthenticationDelegate_Extensions.EvaluateTrustAsync(MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate,MonoTouch.NetworkExtension.NWTcpConnection,MonoTouch.Foundation.NSArray)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate" />
      </Targets>
      <Member MemberName="ProvideIdentity">
        <MemberSignature Language="C#" Value="public static void ProvideIdentity (this NetworkExtension.INWTcpConnectionAuthenticationDelegate This, NetworkExtension.NWTcpConnection connection, Action&lt;Security.SecIdentity,Foundation.NSArray&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ProvideIdentity(class NetworkExtension.INWTcpConnectionAuthenticationDelegate This, class NetworkExtension.NWTcpConnection connection, class System.Action`2&lt;class Security.SecIdentity, class Foundation.NSArray&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.NetworkExtension.NWTcpConnection" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Security.SecIdentity,MonoTouch.Foundation.NSArray&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V42))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="connection">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>ethod that is called to provide an identity and an optional certificate.</summary>
        </Docs>
        <Link Type="MonoTouch.NetworkExtension.NWTcpConnectionAuthenticationDelegate_Extensions" Member="M:MonoTouch.NetworkExtension.NWTcpConnectionAuthenticationDelegate_Extensions.ProvideIdentity(MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate,MonoTouch.NetworkExtension.NWTcpConnection,System.Action{MonoTouch.Security.SecIdentity,MonoTouch.Foundation.NSArray})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate" />
      </Targets>
      <Member MemberName="ShouldEvaluateTrust">
        <MemberSignature Language="C#" Value="public static bool ShouldEvaluateTrust (this NetworkExtension.INWTcpConnectionAuthenticationDelegate This, NetworkExtension.NWTcpConnection connection);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldEvaluateTrust(class NetworkExtension.INWTcpConnectionAuthenticationDelegate This, class NetworkExtension.NWTcpConnection connection) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.NetworkExtension.NWTcpConnection" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="connection">To be added.</param>
          <summary>Method that is called to inform the delegate that it should evaluate trust.</summary>
        </Docs>
        <Link Type="MonoTouch.NetworkExtension.NWTcpConnectionAuthenticationDelegate_Extensions" Member="M:MonoTouch.NetworkExtension.NWTcpConnectionAuthenticationDelegate_Extensions.ShouldEvaluateTrust(MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate,MonoTouch.NetworkExtension.NWTcpConnection)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate" />
      </Targets>
      <Member MemberName="ShouldProvideIdentity">
        <MemberSignature Language="C#" Value="public static bool ShouldProvideIdentity (this NetworkExtension.INWTcpConnectionAuthenticationDelegate This, NetworkExtension.NWTcpConnection connection);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldProvideIdentity(class NetworkExtension.INWTcpConnectionAuthenticationDelegate This, class NetworkExtension.NWTcpConnection connection) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.NetworkExtension.NWTcpConnection" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="connection">To be added.</param>
          <summary>Method that is called to inform the delegate that it should provide identity information.</summary>
        </Docs>
        <Link Type="MonoTouch.NetworkExtension.NWTcpConnectionAuthenticationDelegate_Extensions" Member="M:MonoTouch.NetworkExtension.NWTcpConnectionAuthenticationDelegate_Extensions.ShouldProvideIdentity(MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate,MonoTouch.NetworkExtension.NWTcpConnection)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.NotificationCenter.INCWidgetProviding" />
      </Targets>
      <Member MemberName="GetWidgetMarginInsets">
        <MemberSignature Language="C#" Value="public static UIKit.UIEdgeInsets GetWidgetMarginInsets (this NotificationCenter.INCWidgetProviding This, UIKit.UIEdgeInsets defaultMarginInsets);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UIEdgeInsets GetWidgetMarginInsets(class NotificationCenter.INCWidgetProviding This, valuetype UIKit.UIEdgeInsets defaultMarginInsets) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIEdgeInsets</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.NotificationCenter.INCWidgetProviding" RefType="this" />
          <Parameter Name="defaultMarginInsets" Type="MonoTouch.UIKit.UIEdgeInsets" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="defaultMarginInsets">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.NotificationCenter.NCWidgetProviding_Extensions" Member="M:MonoTouch.NotificationCenter.NCWidgetProviding_Extensions.GetWidgetMarginInsets(MonoTouch.NotificationCenter.INCWidgetProviding,MonoTouch.UIKit.UIEdgeInsets)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.NotificationCenter.INCWidgetProviding" />
      </Targets>
      <Member MemberName="WidgetActiveDisplayModeDidChange">
        <MemberSignature Language="C#" Value="public static void WidgetActiveDisplayModeDidChange (this NotificationCenter.INCWidgetProviding This, NotificationCenter.NCWidgetDisplayMode activeDisplayMode, CoreGraphics.CGSize maxSize);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WidgetActiveDisplayModeDidChange(class NotificationCenter.INCWidgetProviding This, valuetype NotificationCenter.NCWidgetDisplayMode activeDisplayMode, valuetype CoreGraphics.CGSize maxSize) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.NotificationCenter.INCWidgetProviding" RefType="this" />
          <Parameter Name="activeDisplayMode" Type="MonoTouch.NotificationCenter.NCWidgetDisplayMode" />
          <Parameter Name="maxSize" Type="MonoTouch.CoreGraphics.CGSize" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="activeDisplayMode">To be added.</param>
          <param name="maxSize">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.NotificationCenter.NCWidgetProviding_Extensions" Member="M:MonoTouch.NotificationCenter.NCWidgetProviding_Extensions.WidgetActiveDisplayModeDidChange(MonoTouch.NotificationCenter.INCWidgetProviding,MonoTouch.NotificationCenter.NCWidgetDisplayMode,MonoTouch.CoreGraphics.CGSize)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.NotificationCenter.INCWidgetProviding" />
      </Targets>
      <Member MemberName="WidgetPerformUpdate">
        <MemberSignature Language="C#" Value="public static void WidgetPerformUpdate (this NotificationCenter.INCWidgetProviding This, Action&lt;NotificationCenter.NCUpdateResult&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WidgetPerformUpdate(class NotificationCenter.INCWidgetProviding This, class System.Action`1&lt;valuetype NotificationCenter.NCUpdateResult&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.NotificationCenter.INCWidgetProviding" RefType="this" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.NotificationCenter.NCUpdateResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V1))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.NotificationCenter.NCWidgetProviding_Extensions" Member="M:MonoTouch.NotificationCenter.NCWidgetProviding_Extensions.WidgetPerformUpdate(MonoTouch.NotificationCenter.INCWidgetProviding,System.Action{MonoTouch.NotificationCenter.NCUpdateResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSExtensionContext" />
      </Targets>
      <Member MemberName="GetWidgetActiveDisplayMode">
        <MemberSignature Language="C#" Value="public static NotificationCenter.NCWidgetDisplayMode GetWidgetActiveDisplayMode (this Foundation.NSExtensionContext This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype NotificationCenter.NCWidgetDisplayMode GetWidgetActiveDisplayMode(class Foundation.NSExtensionContext This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.NotificationCenter.NCWidgetDisplayMode</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSExtensionContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">The extension context on which this method operates.</param>
          <summary>Returns the current display mode for the widget.</summary>
        </Docs>
        <Link Type="MonoTouch.NotificationCenter.NSExtensionContext_NCWidgetAdditions" Member="M:MonoTouch.NotificationCenter.NSExtensionContext_NCWidgetAdditions.GetWidgetActiveDisplayMode(MonoTouch.Foundation.NSExtensionContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSExtensionContext" />
      </Targets>
      <Member MemberName="GetWidgetLargestAvailableDisplayMode">
        <MemberSignature Language="C#" Value="public static NotificationCenter.NCWidgetDisplayMode GetWidgetLargestAvailableDisplayMode (this Foundation.NSExtensionContext This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype NotificationCenter.NCWidgetDisplayMode GetWidgetLargestAvailableDisplayMode(class Foundation.NSExtensionContext This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.NotificationCenter.NCWidgetDisplayMode</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSExtensionContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">The extension context on which this method operates.</param>
          <summary>Returns the largest available display mode for the widget.</summary>
        </Docs>
        <Link Type="MonoTouch.NotificationCenter.NSExtensionContext_NCWidgetAdditions" Member="M:MonoTouch.NotificationCenter.NSExtensionContext_NCWidgetAdditions.GetWidgetLargestAvailableDisplayMode(MonoTouch.Foundation.NSExtensionContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSExtensionContext" />
      </Targets>
      <Member MemberName="GetWidgetMaximumSize">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize GetWidgetMaximumSize (this Foundation.NSExtensionContext This, NotificationCenter.NCWidgetDisplayMode displayMode);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize GetWidgetMaximumSize(class Foundation.NSExtensionContext This, valuetype NotificationCenter.NCWidgetDisplayMode displayMode) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSExtensionContext" RefType="this" />
          <Parameter Name="displayMode" Type="MonoTouch.NotificationCenter.NCWidgetDisplayMode" />
        </Parameters>
        <Docs>
          <param name="This">The extension context on which this method operates.</param>
          <param name="displayMode">The display mode to query.</param>
          <summary>Returns the maximum size of the widget for the specified display mode.</summary>
        </Docs>
        <Link Type="MonoTouch.NotificationCenter.NSExtensionContext_NCWidgetAdditions" Member="M:MonoTouch.NotificationCenter.NSExtensionContext_NCWidgetAdditions.GetWidgetMaximumSize(MonoTouch.Foundation.NSExtensionContext,MonoTouch.NotificationCenter.NCWidgetDisplayMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSExtensionContext" />
      </Targets>
      <Member MemberName="SetWidgetLargestAvailableDisplayMode">
        <MemberSignature Language="C#" Value="public static void SetWidgetLargestAvailableDisplayMode (this Foundation.NSExtensionContext This, NotificationCenter.NCWidgetDisplayMode mode);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetWidgetLargestAvailableDisplayMode(class Foundation.NSExtensionContext This, valuetype NotificationCenter.NCWidgetDisplayMode mode) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSExtensionContext" RefType="this" />
          <Parameter Name="mode" Type="MonoTouch.NotificationCenter.NCWidgetDisplayMode" />
        </Parameters>
        <Docs>
          <param name="This">The extension context on which this method operates.</param>
          <param name="mode">The display mode to set.</param>
          <summary>Sets the largest available display mode for the widget.</summary>
        </Docs>
        <Link Type="MonoTouch.NotificationCenter.NSExtensionContext_NCWidgetAdditions" Member="M:MonoTouch.NotificationCenter.NSExtensionContext_NCWidgetAdditions.SetWidgetLargestAvailableDisplayMode(MonoTouch.Foundation.NSExtensionContext,MonoTouch.NotificationCenter.NCWidgetDisplayMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ObjCRuntime.Platform" />
      </Targets>
      <Member MemberName="CompareIosVersion">
        <MemberSignature Language="C#" Value="public static int CompareIosVersion (this ObjCRuntime.Platform a, ObjCRuntime.Platform b);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CompareIosVersion(valuetype ObjCRuntime.Platform a, valuetype ObjCRuntime.Platform b) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="MonoTouch.ObjCRuntime.Platform" RefType="this" />
          <Parameter Name="b" Type="MonoTouch.ObjCRuntime.Platform" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="b">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ObjCRuntime.PlatformHelper" Member="M:MonoTouch.ObjCRuntime.PlatformHelper.CompareIosVersion(MonoTouch.ObjCRuntime.Platform,MonoTouch.ObjCRuntime.Platform)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ObjCRuntime.Platform" />
      </Targets>
      <Member MemberName="CompareMacVersion">
        <MemberSignature Language="C#" Value="public static int CompareMacVersion (this ObjCRuntime.Platform a, ObjCRuntime.Platform b);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CompareMacVersion(valuetype ObjCRuntime.Platform a, valuetype ObjCRuntime.Platform b) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="MonoTouch.ObjCRuntime.Platform" RefType="this" />
          <Parameter Name="b" Type="MonoTouch.ObjCRuntime.Platform" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="b">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ObjCRuntime.PlatformHelper" Member="M:MonoTouch.ObjCRuntime.PlatformHelper.CompareMacVersion(MonoTouch.ObjCRuntime.Platform,MonoTouch.ObjCRuntime.Platform)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ObjCRuntime.Platform" />
      </Targets>
      <Member MemberName="Is64BitOnlyOnCurrentPlatform">
        <MemberSignature Language="C#" Value="public static bool Is64BitOnlyOnCurrentPlatform (this ObjCRuntime.Platform platform);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Is64BitOnlyOnCurrentPlatform(valuetype ObjCRuntime.Platform platform) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="platform" Type="MonoTouch.ObjCRuntime.Platform" RefType="this" />
        </Parameters>
        <Docs>
          <param name="platform">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ObjCRuntime.PlatformHelper" Member="M:MonoTouch.ObjCRuntime.PlatformHelper.Is64BitOnlyOnCurrentPlatform(MonoTouch.ObjCRuntime.Platform)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ObjCRuntime.Platform" />
      </Targets>
      <Member MemberName="IsIos">
        <MemberSignature Language="C#" Value="public static bool IsIos (this ObjCRuntime.Platform platform);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsIos(valuetype ObjCRuntime.Platform platform) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="platform" Type="MonoTouch.ObjCRuntime.Platform" RefType="this" />
        </Parameters>
        <Docs>
          <param name="platform">Platform to probe.</param>
          <summary>Determines if the specified platform is iOS.</summary>
        </Docs>
        <Link Type="MonoTouch.ObjCRuntime.PlatformHelper" Member="M:MonoTouch.ObjCRuntime.PlatformHelper.IsIos(MonoTouch.ObjCRuntime.Platform)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ObjCRuntime.Platform" />
      </Targets>
      <Member MemberName="IsMac">
        <MemberSignature Language="C#" Value="public static bool IsMac (this ObjCRuntime.Platform platform);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsMac(valuetype ObjCRuntime.Platform platform) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="platform" Type="MonoTouch.ObjCRuntime.Platform" RefType="this" />
        </Parameters>
        <Docs>
          <param name="platform">Platform to probe.</param>
          <summary>Determines if the specified platform is MacOS.</summary>
        </Docs>
        <Link Type="MonoTouch.ObjCRuntime.PlatformHelper" Member="M:MonoTouch.ObjCRuntime.PlatformHelper.IsMac(MonoTouch.ObjCRuntime.Platform)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ObjCRuntime.Platform" />
      </Targets>
      <Member MemberName="IsValid">
        <MemberSignature Language="C#" Value="public static bool IsValid (this ObjCRuntime.Platform platform);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValid(valuetype ObjCRuntime.Platform platform) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="platform" Type="MonoTouch.ObjCRuntime.Platform" RefType="this" />
        </Parameters>
        <Docs>
          <param name="platform">Platform to probe.</param>
          <summary>Validates the Platform value against known API versions.</summary>
        </Docs>
        <Link Type="MonoTouch.ObjCRuntime.PlatformHelper" Member="M:MonoTouch.ObjCRuntime.PlatformHelper.IsValid(MonoTouch.ObjCRuntime.Platform)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ObjCRuntime.Platform" />
      </Targets>
      <Member MemberName="ToArch">
        <MemberSignature Language="C#" Value="public static ObjCRuntime.Platform ToArch (this ObjCRuntime.Platform platform);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype ObjCRuntime.Platform ToArch(valuetype ObjCRuntime.Platform platform) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.ObjCRuntime.Platform</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="platform" Type="MonoTouch.ObjCRuntime.Platform" RefType="this" />
        </Parameters>
        <Docs>
          <param name="platform">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ObjCRuntime.PlatformHelper" Member="M:MonoTouch.ObjCRuntime.PlatformHelper.ToArch(MonoTouch.ObjCRuntime.Platform)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ObjCRuntime.Platform" />
      </Targets>
      <Member MemberName="ToIosArch">
        <MemberSignature Language="C#" Value="public static ObjCRuntime.Platform ToIosArch (this ObjCRuntime.Platform platform);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype ObjCRuntime.Platform ToIosArch(valuetype ObjCRuntime.Platform platform) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.ObjCRuntime.Platform</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="platform" Type="MonoTouch.ObjCRuntime.Platform" RefType="this" />
        </Parameters>
        <Docs>
          <param name="platform">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ObjCRuntime.PlatformHelper" Member="M:MonoTouch.ObjCRuntime.PlatformHelper.ToIosArch(MonoTouch.ObjCRuntime.Platform)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ObjCRuntime.Platform" />
      </Targets>
      <Member MemberName="ToIosVersion">
        <MemberSignature Language="C#" Value="public static ObjCRuntime.Platform ToIosVersion (this ObjCRuntime.Platform platform);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype ObjCRuntime.Platform ToIosVersion(valuetype ObjCRuntime.Platform platform) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.ObjCRuntime.Platform</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="platform" Type="MonoTouch.ObjCRuntime.Platform" RefType="this" />
        </Parameters>
        <Docs>
          <param name="platform">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ObjCRuntime.PlatformHelper" Member="M:MonoTouch.ObjCRuntime.PlatformHelper.ToIosVersion(MonoTouch.ObjCRuntime.Platform)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ObjCRuntime.Platform" />
      </Targets>
      <Member MemberName="ToMacArch">
        <MemberSignature Language="C#" Value="public static ObjCRuntime.Platform ToMacArch (this ObjCRuntime.Platform platform);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype ObjCRuntime.Platform ToMacArch(valuetype ObjCRuntime.Platform platform) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.ObjCRuntime.Platform</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="platform" Type="MonoTouch.ObjCRuntime.Platform" RefType="this" />
        </Parameters>
        <Docs>
          <param name="platform">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ObjCRuntime.PlatformHelper" Member="M:MonoTouch.ObjCRuntime.PlatformHelper.ToMacArch(MonoTouch.ObjCRuntime.Platform)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ObjCRuntime.Platform" />
      </Targets>
      <Member MemberName="ToMacVersion">
        <MemberSignature Language="C#" Value="public static ObjCRuntime.Platform ToMacVersion (this ObjCRuntime.Platform platform);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype ObjCRuntime.Platform ToMacVersion(valuetype ObjCRuntime.Platform platform) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.ObjCRuntime.Platform</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="platform" Type="MonoTouch.ObjCRuntime.Platform" RefType="this" />
        </Parameters>
        <Docs>
          <param name="platform">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ObjCRuntime.PlatformHelper" Member="M:MonoTouch.ObjCRuntime.PlatformHelper.ToMacVersion(MonoTouch.ObjCRuntime.Platform)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ObjCRuntime.Platform" />
      </Targets>
      <Member MemberName="ToVersion">
        <MemberSignature Language="C#" Value="public static ObjCRuntime.Platform ToVersion (this ObjCRuntime.Platform platform);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype ObjCRuntime.Platform ToVersion(valuetype ObjCRuntime.Platform platform) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.ObjCRuntime.Platform</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="platform" Type="MonoTouch.ObjCRuntime.Platform" RefType="this" />
        </Parameters>
        <Docs>
          <param name="platform">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ObjCRuntime.PlatformHelper" Member="M:MonoTouch.ObjCRuntime.PlatformHelper.ToVersion(MonoTouch.ObjCRuntime.Platform)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PassKit.IPKAddPassesViewControllerDelegate" />
      </Targets>
      <Member MemberName="Finished">
        <MemberSignature Language="C#" Value="public static void Finished (this PassKit.IPKAddPassesViewControllerDelegate This, PassKit.PKAddPassesViewController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Finished(class PassKit.IPKAddPassesViewControllerDelegate This, class PassKit.PKAddPassesViewController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PassKit.IPKAddPassesViewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.PassKit.PKAddPassesViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.PassKit.PKAddPassesViewControllerDelegate_Extensions" Member="M:MonoTouch.PassKit.PKAddPassesViewControllerDelegate_Extensions.Finished(MonoTouch.PassKit.IPKAddPassesViewControllerDelegate,MonoTouch.PassKit.PKAddPassesViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PassKit.PKContactFields" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this PassKit.PKContactFields self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype PassKit.PKContactFields self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.PassKit.PKContactFields" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>Gets a constant string that represents the enumeration value.</summary>
        </Docs>
        <Link Type="MonoTouch.PassKit.PKContactFieldsExtensions" Member="M:MonoTouch.PassKit.PKContactFieldsExtensions.GetConstant(MonoTouch.PassKit.PKContactFields)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PassKit.PKPassKitErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this PassKit.PKPassKitErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype PassKit.PKPassKitErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.PassKit.PKPassKitErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.PassKit.PKPassKitErrorCode value</summary>
        </Docs>
        <Link Type="MonoTouch.PassKit.PKPassKitErrorCodeExtensions" Member="M:MonoTouch.PassKit.PKPassKitErrorCodeExtensions.GetDomain(MonoTouch.PassKit.PKPassKitErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PassKit.IPKPaymentAuthorizationControllerDelegate" />
      </Targets>
      <Member MemberName="DidAuthorizePayment">
        <MemberSignature Language="C#" Value="public static void DidAuthorizePayment (this PassKit.IPKPaymentAuthorizationControllerDelegate This, PassKit.PKPaymentAuthorizationController controller, PassKit.PKPayment payment, Action&lt;PassKit.PKPaymentAuthorizationResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAuthorizePayment(class PassKit.IPKPaymentAuthorizationControllerDelegate This, class PassKit.PKPaymentAuthorizationController controller, class PassKit.PKPayment payment, class System.Action`1&lt;class PassKit.PKPaymentAuthorizationResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PassKit.IPKPaymentAuthorizationControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.PassKit.PKPaymentAuthorizationController" />
          <Parameter Name="payment" Type="MonoTouch.PassKit.PKPayment" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.PassKit.PKPaymentAuthorizationResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V160))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="payment">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.PassKit.PKPaymentAuthorizationControllerDelegate_Extensions" Member="M:MonoTouch.PassKit.PKPaymentAuthorizationControllerDelegate_Extensions.DidAuthorizePayment(MonoTouch.PassKit.IPKPaymentAuthorizationControllerDelegate,MonoTouch.PassKit.PKPaymentAuthorizationController,MonoTouch.PassKit.PKPayment,System.Action{MonoTouch.PassKit.PKPaymentAuthorizationResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PassKit.IPKPaymentAuthorizationControllerDelegate" />
      </Targets>
      <Member MemberName="DidSelectPaymentMethod">
        <MemberSignature Language="C#" Value="public static void DidSelectPaymentMethod (this PassKit.IPKPaymentAuthorizationControllerDelegate This, PassKit.PKPaymentAuthorizationController controller, PassKit.PKPaymentMethod paymentMethod, Action&lt;PassKit.PKPaymentRequestPaymentMethodUpdate&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSelectPaymentMethod(class PassKit.IPKPaymentAuthorizationControllerDelegate This, class PassKit.PKPaymentAuthorizationController controller, class PassKit.PKPaymentMethod paymentMethod, class System.Action`1&lt;class PassKit.PKPaymentRequestPaymentMethodUpdate&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PassKit.IPKPaymentAuthorizationControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.PassKit.PKPaymentAuthorizationController" />
          <Parameter Name="paymentMethod" Type="MonoTouch.PassKit.PKPaymentMethod" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.PassKit.PKPaymentRequestPaymentMethodUpdate&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V161))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="paymentMethod">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.PassKit.PKPaymentAuthorizationControllerDelegate_Extensions" Member="M:MonoTouch.PassKit.PKPaymentAuthorizationControllerDelegate_Extensions.DidSelectPaymentMethod(MonoTouch.PassKit.IPKPaymentAuthorizationControllerDelegate,MonoTouch.PassKit.PKPaymentAuthorizationController,MonoTouch.PassKit.PKPaymentMethod,System.Action{MonoTouch.PassKit.PKPaymentRequestPaymentMethodUpdate})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PassKit.IPKPaymentAuthorizationControllerDelegate" />
      </Targets>
      <Member MemberName="DidSelectPaymentMethod">
        <MemberSignature Language="C#" Value="public static void DidSelectPaymentMethod (this PassKit.IPKPaymentAuthorizationControllerDelegate This, PassKit.PKPaymentAuthorizationController controller, PassKit.PKPaymentMethod paymentMethod, Action&lt;PassKit.PKPaymentSummaryItem[]&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSelectPaymentMethod(class PassKit.IPKPaymentAuthorizationControllerDelegate This, class PassKit.PKPaymentAuthorizationController controller, class PassKit.PKPaymentMethod paymentMethod, class System.Action`1&lt;class PassKit.PKPaymentSummaryItem[]&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PassKit.IPKPaymentAuthorizationControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.PassKit.PKPaymentAuthorizationController" />
          <Parameter Name="paymentMethod" Type="MonoTouch.PassKit.PKPaymentMethod" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.PassKit.PKPaymentSummaryItem[]&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V38))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">The controller that owns this delegate.</param>
          <param name="paymentMethod">The payment method that was selected.</param>
          <param name="completion">A handler that takes a list of updated payment summary items.</param>
          <summary>Mehod that is called when the user selects a payment method.</summary>
        </Docs>
        <Link Type="MonoTouch.PassKit.PKPaymentAuthorizationControllerDelegate_Extensions" Member="M:MonoTouch.PassKit.PKPaymentAuthorizationControllerDelegate_Extensions.DidSelectPaymentMethod(MonoTouch.PassKit.IPKPaymentAuthorizationControllerDelegate,MonoTouch.PassKit.PKPaymentAuthorizationController,MonoTouch.PassKit.PKPaymentMethod,System.Action{MonoTouch.PassKit.PKPaymentSummaryItem[]})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PassKit.IPKPaymentAuthorizationControllerDelegate" />
      </Targets>
      <Member MemberName="DidSelectShippingContact">
        <MemberSignature Language="C#" Value="public static void DidSelectShippingContact (this PassKit.IPKPaymentAuthorizationControllerDelegate This, PassKit.PKPaymentAuthorizationController controller, PassKit.PKContact contact, Action&lt;PassKit.PKPaymentAuthorizationStatus,PassKit.PKShippingMethod[],PassKit.PKPaymentSummaryItem[]&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSelectShippingContact(class PassKit.IPKPaymentAuthorizationControllerDelegate This, class PassKit.PKPaymentAuthorizationController controller, class PassKit.PKContact contact, class System.Action`3&lt;valuetype PassKit.PKPaymentAuthorizationStatus, class PassKit.PKShippingMethod[], class PassKit.PKPaymentSummaryItem[]&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PassKit.IPKPaymentAuthorizationControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.PassKit.PKPaymentAuthorizationController" />
          <Parameter Name="contact" Type="MonoTouch.PassKit.PKContact" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.PassKit.PKPaymentAuthorizationStatus,MonoTouch.PassKit.PKShippingMethod[],MonoTouch.PassKit.PKPaymentSummaryItem[]&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity3V8))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">The controller that owns this delegate.</param>
          <param name="contact">The new shipping address.</param>
          <param name="completion">A handler that takes the payment authorization status, a list of updated shipping method objects, and a list of updated payment summary items.</param>
          <summary>Method that is called when a user selects a contact to ship to.</summary>
        </Docs>
        <Link Type="MonoTouch.PassKit.PKPaymentAuthorizationControllerDelegate_Extensions" Member="M:MonoTouch.PassKit.PKPaymentAuthorizationControllerDelegate_Extensions.DidSelectShippingContact(MonoTouch.PassKit.IPKPaymentAuthorizationControllerDelegate,MonoTouch.PassKit.PKPaymentAuthorizationController,MonoTouch.PassKit.PKContact,System.Action{MonoTouch.PassKit.PKPaymentAuthorizationStatus,MonoTouch.PassKit.PKShippingMethod[],MonoTouch.PassKit.PKPaymentSummaryItem[]})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PassKit.IPKPaymentAuthorizationControllerDelegate" />
      </Targets>
      <Member MemberName="DidSelectShippingContact">
        <MemberSignature Language="C#" Value="public static void DidSelectShippingContact (this PassKit.IPKPaymentAuthorizationControllerDelegate This, PassKit.PKPaymentAuthorizationController controller, PassKit.PKContact contact, Action&lt;PassKit.PKPaymentRequestShippingContactUpdate&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSelectShippingContact(class PassKit.IPKPaymentAuthorizationControllerDelegate This, class PassKit.PKPaymentAuthorizationController controller, class PassKit.PKContact contact, class System.Action`1&lt;class PassKit.PKPaymentRequestShippingContactUpdate&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PassKit.IPKPaymentAuthorizationControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.PassKit.PKPaymentAuthorizationController" />
          <Parameter Name="contact" Type="MonoTouch.PassKit.PKContact" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.PassKit.PKPaymentRequestShippingContactUpdate&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V162))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="contact">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.PassKit.PKPaymentAuthorizationControllerDelegate_Extensions" Member="M:MonoTouch.PassKit.PKPaymentAuthorizationControllerDelegate_Extensions.DidSelectShippingContact(MonoTouch.PassKit.IPKPaymentAuthorizationControllerDelegate,MonoTouch.PassKit.PKPaymentAuthorizationController,MonoTouch.PassKit.PKContact,System.Action{MonoTouch.PassKit.PKPaymentRequestShippingContactUpdate})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PassKit.IPKPaymentAuthorizationControllerDelegate" />
      </Targets>
      <Member MemberName="DidSelectShippingMethod">
        <MemberSignature Language="C#" Value="public static void DidSelectShippingMethod (this PassKit.IPKPaymentAuthorizationControllerDelegate This, PassKit.PKPaymentAuthorizationController controller, PassKit.PKPaymentMethod paymentMethod, Action&lt;PassKit.PKPaymentRequestPaymentMethodUpdate&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSelectShippingMethod(class PassKit.IPKPaymentAuthorizationControllerDelegate This, class PassKit.PKPaymentAuthorizationController controller, class PassKit.PKPaymentMethod paymentMethod, class System.Action`1&lt;class PassKit.PKPaymentRequestPaymentMethodUpdate&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PassKit.IPKPaymentAuthorizationControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.PassKit.PKPaymentAuthorizationController" />
          <Parameter Name="paymentMethod" Type="MonoTouch.PassKit.PKPaymentMethod" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.PassKit.PKPaymentRequestPaymentMethodUpdate&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V161))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="paymentMethod">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.PassKit.PKPaymentAuthorizationControllerDelegate_Extensions" Member="M:MonoTouch.PassKit.PKPaymentAuthorizationControllerDelegate_Extensions.DidSelectShippingMethod(MonoTouch.PassKit.IPKPaymentAuthorizationControllerDelegate,MonoTouch.PassKit.PKPaymentAuthorizationController,MonoTouch.PassKit.PKPaymentMethod,System.Action{MonoTouch.PassKit.PKPaymentRequestPaymentMethodUpdate})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PassKit.IPKPaymentAuthorizationControllerDelegate" />
      </Targets>
      <Member MemberName="DidSelectShippingMethod">
        <MemberSignature Language="C#" Value="public static void DidSelectShippingMethod (this PassKit.IPKPaymentAuthorizationControllerDelegate This, PassKit.PKPaymentAuthorizationController controller, PassKit.PKShippingMethod shippingMethod, Action&lt;PassKit.PKPaymentAuthorizationStatus,PassKit.PKPaymentSummaryItem[]&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSelectShippingMethod(class PassKit.IPKPaymentAuthorizationControllerDelegate This, class PassKit.PKPaymentAuthorizationController controller, class PassKit.PKShippingMethod shippingMethod, class System.Action`2&lt;valuetype PassKit.PKPaymentAuthorizationStatus, class PassKit.PKPaymentSummaryItem[]&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PassKit.IPKPaymentAuthorizationControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.PassKit.PKPaymentAuthorizationController" />
          <Parameter Name="shippingMethod" Type="MonoTouch.PassKit.PKShippingMethod" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.PassKit.PKPaymentAuthorizationStatus,MonoTouch.PassKit.PKPaymentSummaryItem[]&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V63))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">The controller that owns this delegate.</param>
          <param name="shippingMethod">The new shipping method.</param>
          <param name="completion">A handler that takes the authorization status for the payment and a list of updated payment summary items.</param>
          <summary>Method that is called when a user selects a new shipping method.</summary>
        </Docs>
        <Link Type="MonoTouch.PassKit.PKPaymentAuthorizationControllerDelegate_Extensions" Member="M:MonoTouch.PassKit.PKPaymentAuthorizationControllerDelegate_Extensions.DidSelectShippingMethod(MonoTouch.PassKit.IPKPaymentAuthorizationControllerDelegate,MonoTouch.PassKit.PKPaymentAuthorizationController,MonoTouch.PassKit.PKShippingMethod,System.Action{MonoTouch.PassKit.PKPaymentAuthorizationStatus,MonoTouch.PassKit.PKPaymentSummaryItem[]})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PassKit.IPKPaymentAuthorizationControllerDelegate" />
      </Targets>
      <Member MemberName="WillAuthorizePayment">
        <MemberSignature Language="C#" Value="public static void WillAuthorizePayment (this PassKit.IPKPaymentAuthorizationControllerDelegate This, PassKit.PKPaymentAuthorizationController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillAuthorizePayment(class PassKit.IPKPaymentAuthorizationControllerDelegate This, class PassKit.PKPaymentAuthorizationController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PassKit.IPKPaymentAuthorizationControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.PassKit.PKPaymentAuthorizationController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">The controller that owns this delegate.</param>
          <summary>Method that is called when the user is authorizing a payment request.</summary>
        </Docs>
        <Link Type="MonoTouch.PassKit.PKPaymentAuthorizationControllerDelegate_Extensions" Member="M:MonoTouch.PassKit.PKPaymentAuthorizationControllerDelegate_Extensions.WillAuthorizePayment(MonoTouch.PassKit.IPKPaymentAuthorizationControllerDelegate,MonoTouch.PassKit.PKPaymentAuthorizationController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate" />
      </Targets>
      <Member MemberName="DidAuthorizePayment2">
        <MemberSignature Language="C#" Value="public static void DidAuthorizePayment2 (this PassKit.IPKPaymentAuthorizationViewControllerDelegate This, PassKit.PKPaymentAuthorizationViewController controller, PassKit.PKPayment payment, Action&lt;PassKit.PKPaymentAuthorizationResult&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAuthorizePayment2(class PassKit.IPKPaymentAuthorizationViewControllerDelegate This, class PassKit.PKPaymentAuthorizationViewController controller, class PassKit.PKPayment payment, class System.Action`1&lt;class PassKit.PKPaymentAuthorizationResult&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.PassKit.PKPaymentAuthorizationViewController" />
          <Parameter Name="payment" Type="MonoTouch.PassKit.PKPayment" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.PassKit.PKPaymentAuthorizationResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V160))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="payment">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.PassKit.PKPaymentAuthorizationViewControllerDelegate_Extensions" Member="M:MonoTouch.PassKit.PKPaymentAuthorizationViewControllerDelegate_Extensions.DidAuthorizePayment2(MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate,MonoTouch.PassKit.PKPaymentAuthorizationViewController,MonoTouch.PassKit.PKPayment,System.Action{MonoTouch.PassKit.PKPaymentAuthorizationResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate" />
      </Targets>
      <Member MemberName="DidSelectPaymentMethod">
        <MemberSignature Language="C#" Value="public static void DidSelectPaymentMethod (this PassKit.IPKPaymentAuthorizationViewControllerDelegate This, PassKit.PKPaymentAuthorizationViewController controller, PassKit.PKPaymentMethod paymentMethod, Action&lt;PassKit.PKPaymentSummaryItem[]&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSelectPaymentMethod(class PassKit.IPKPaymentAuthorizationViewControllerDelegate This, class PassKit.PKPaymentAuthorizationViewController controller, class PassKit.PKPaymentMethod paymentMethod, class System.Action`1&lt;class PassKit.PKPaymentSummaryItem[]&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.PassKit.PKPaymentAuthorizationViewController" />
          <Parameter Name="paymentMethod" Type="MonoTouch.PassKit.PKPaymentMethod" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.PassKit.PKPaymentSummaryItem[]&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V31))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="paymentMethod">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Called after the user has selected a payment method.</summary>
        </Docs>
        <Link Type="MonoTouch.PassKit.PKPaymentAuthorizationViewControllerDelegate_Extensions" Member="M:MonoTouch.PassKit.PKPaymentAuthorizationViewControllerDelegate_Extensions.DidSelectPaymentMethod(MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate,MonoTouch.PassKit.PKPaymentAuthorizationViewController,MonoTouch.PassKit.PKPaymentMethod,System.Action{MonoTouch.PassKit.PKPaymentSummaryItem[]})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate" />
      </Targets>
      <Member MemberName="DidSelectPaymentMethod2">
        <MemberSignature Language="C#" Value="public static void DidSelectPaymentMethod2 (this PassKit.IPKPaymentAuthorizationViewControllerDelegate This, PassKit.PKPaymentAuthorizationViewController controller, PassKit.PKPaymentMethod paymentMethod, Action&lt;PassKit.PKPaymentRequestPaymentMethodUpdate&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSelectPaymentMethod2(class PassKit.IPKPaymentAuthorizationViewControllerDelegate This, class PassKit.PKPaymentAuthorizationViewController controller, class PassKit.PKPaymentMethod paymentMethod, class System.Action`1&lt;class PassKit.PKPaymentRequestPaymentMethodUpdate&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.PassKit.PKPaymentAuthorizationViewController" />
          <Parameter Name="paymentMethod" Type="MonoTouch.PassKit.PKPaymentMethod" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.PassKit.PKPaymentRequestPaymentMethodUpdate&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V161))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="paymentMethod">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.PassKit.PKPaymentAuthorizationViewControllerDelegate_Extensions" Member="M:MonoTouch.PassKit.PKPaymentAuthorizationViewControllerDelegate_Extensions.DidSelectPaymentMethod2(MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate,MonoTouch.PassKit.PKPaymentAuthorizationViewController,MonoTouch.PassKit.PKPaymentMethod,System.Action{MonoTouch.PassKit.PKPaymentRequestPaymentMethodUpdate})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate" />
      </Targets>
      <Member MemberName="DidSelectShippingAddress">
        <MemberSignature Language="C#" Value="public static void DidSelectShippingAddress (this PassKit.IPKPaymentAuthorizationViewControllerDelegate This, PassKit.PKPaymentAuthorizationViewController controller, AddressBook.ABRecord address, PassKit.PKPaymentShippingAddressSelected completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSelectShippingAddress(class PassKit.IPKPaymentAuthorizationViewControllerDelegate This, class PassKit.PKPaymentAuthorizationViewController controller, class AddressBook.ABRecord address, class PassKit.PKPaymentShippingAddressSelected completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.PassKit.PKPaymentAuthorizationViewController" />
          <Parameter Name="address" Type="MonoTouch.AddressBook.ABRecord" />
          <Parameter Name="completion" Type="MonoTouch.PassKit.PKPaymentShippingAddressSelected">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDPKPaymentShippingAddressSelected))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="address">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Indicates the user selected a shipping address.</summary>
        </Docs>
        <Link Type="MonoTouch.PassKit.PKPaymentAuthorizationViewControllerDelegate_Extensions" Member="M:MonoTouch.PassKit.PKPaymentAuthorizationViewControllerDelegate_Extensions.DidSelectShippingAddress(MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate,MonoTouch.PassKit.PKPaymentAuthorizationViewController,MonoTouch.AddressBook.ABRecord,MonoTouch.PassKit.PKPaymentShippingAddressSelected)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate" />
      </Targets>
      <Member MemberName="DidSelectShippingContact">
        <MemberSignature Language="C#" Value="public static void DidSelectShippingContact (this PassKit.IPKPaymentAuthorizationViewControllerDelegate This, PassKit.PKPaymentAuthorizationViewController controller, PassKit.PKContact contact, PassKit.PKPaymentShippingAddressSelected completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSelectShippingContact(class PassKit.IPKPaymentAuthorizationViewControllerDelegate This, class PassKit.PKPaymentAuthorizationViewController controller, class PassKit.PKContact contact, class PassKit.PKPaymentShippingAddressSelected completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.PassKit.PKPaymentAuthorizationViewController" />
          <Parameter Name="contact" Type="MonoTouch.PassKit.PKContact" />
          <Parameter Name="completion" Type="MonoTouch.PassKit.PKPaymentShippingAddressSelected">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDPKPaymentShippingAddressSelected))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="contact">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Called after the user has selected a shipping contact.</summary>
        </Docs>
        <Link Type="MonoTouch.PassKit.PKPaymentAuthorizationViewControllerDelegate_Extensions" Member="M:MonoTouch.PassKit.PKPaymentAuthorizationViewControllerDelegate_Extensions.DidSelectShippingContact(MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate,MonoTouch.PassKit.PKPaymentAuthorizationViewController,MonoTouch.PassKit.PKContact,MonoTouch.PassKit.PKPaymentShippingAddressSelected)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate" />
      </Targets>
      <Member MemberName="DidSelectShippingContact2">
        <MemberSignature Language="C#" Value="public static void DidSelectShippingContact2 (this PassKit.IPKPaymentAuthorizationViewControllerDelegate This, PassKit.PKPaymentAuthorizationViewController controller, PassKit.PKContact contact, Action&lt;PassKit.PKPaymentRequestShippingContactUpdate&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSelectShippingContact2(class PassKit.IPKPaymentAuthorizationViewControllerDelegate This, class PassKit.PKPaymentAuthorizationViewController controller, class PassKit.PKContact contact, class System.Action`1&lt;class PassKit.PKPaymentRequestShippingContactUpdate&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.PassKit.PKPaymentAuthorizationViewController" />
          <Parameter Name="contact" Type="MonoTouch.PassKit.PKContact" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.PassKit.PKPaymentRequestShippingContactUpdate&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V162))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="contact">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.PassKit.PKPaymentAuthorizationViewControllerDelegate_Extensions" Member="M:MonoTouch.PassKit.PKPaymentAuthorizationViewControllerDelegate_Extensions.DidSelectShippingContact2(MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate,MonoTouch.PassKit.PKPaymentAuthorizationViewController,MonoTouch.PassKit.PKContact,System.Action{MonoTouch.PassKit.PKPaymentRequestShippingContactUpdate})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate" />
      </Targets>
      <Member MemberName="DidSelectShippingMethod">
        <MemberSignature Language="C#" Value="public static void DidSelectShippingMethod (this PassKit.IPKPaymentAuthorizationViewControllerDelegate This, PassKit.PKPaymentAuthorizationViewController controller, PassKit.PKShippingMethod shippingMethod, PassKit.PKPaymentShippingMethodSelected completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSelectShippingMethod(class PassKit.IPKPaymentAuthorizationViewControllerDelegate This, class PassKit.PKPaymentAuthorizationViewController controller, class PassKit.PKShippingMethod shippingMethod, class PassKit.PKPaymentShippingMethodSelected completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.PassKit.PKPaymentAuthorizationViewController" />
          <Parameter Name="shippingMethod" Type="MonoTouch.PassKit.PKShippingMethod" />
          <Parameter Name="completion" Type="MonoTouch.PassKit.PKPaymentShippingMethodSelected">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDPKPaymentShippingMethodSelected))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="shippingMethod">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Indicates the user selected a shippingmethod.</summary>
        </Docs>
        <Link Type="MonoTouch.PassKit.PKPaymentAuthorizationViewControllerDelegate_Extensions" Member="M:MonoTouch.PassKit.PKPaymentAuthorizationViewControllerDelegate_Extensions.DidSelectShippingMethod(MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate,MonoTouch.PassKit.PKPaymentAuthorizationViewController,MonoTouch.PassKit.PKShippingMethod,MonoTouch.PassKit.PKPaymentShippingMethodSelected)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate" />
      </Targets>
      <Member MemberName="DidSelectShippingMethod2">
        <MemberSignature Language="C#" Value="public static void DidSelectShippingMethod2 (this PassKit.IPKPaymentAuthorizationViewControllerDelegate This, PassKit.PKPaymentAuthorizationViewController controller, PassKit.PKShippingMethod shippingMethod, Action&lt;PassKit.PKPaymentRequestShippingMethodUpdate&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSelectShippingMethod2(class PassKit.IPKPaymentAuthorizationViewControllerDelegate This, class PassKit.PKPaymentAuthorizationViewController controller, class PassKit.PKShippingMethod shippingMethod, class System.Action`1&lt;class PassKit.PKPaymentRequestShippingMethodUpdate&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.PassKit.PKPaymentAuthorizationViewController" />
          <Parameter Name="shippingMethod" Type="MonoTouch.PassKit.PKShippingMethod" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.PassKit.PKPaymentRequestShippingMethodUpdate&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V164))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="shippingMethod">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.PassKit.PKPaymentAuthorizationViewControllerDelegate_Extensions" Member="M:MonoTouch.PassKit.PKPaymentAuthorizationViewControllerDelegate_Extensions.DidSelectShippingMethod2(MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate,MonoTouch.PassKit.PKPaymentAuthorizationViewController,MonoTouch.PassKit.PKShippingMethod,System.Action{MonoTouch.PassKit.PKPaymentRequestShippingMethodUpdate})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PassKit.PKPaymentErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this PassKit.PKPaymentErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype PassKit.PKPaymentErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.PassKit.PKPaymentErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.PassKit.PKPaymentErrorCode value</summary>
        </Docs>
        <Link Type="MonoTouch.PassKit.PKPaymentErrorCodeExtensions" Member="M:MonoTouch.PassKit.PKPaymentErrorCodeExtensions.GetDomain(MonoTouch.PassKit.PKPaymentErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PdfKit.PdfAnnotationHighlightingMode" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this PdfKit.PdfAnnotationHighlightingMode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype PdfKit.PdfAnnotationHighlightingMode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.PdfKit.PdfAnnotationHighlightingMode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.PdfKit.PdfAnnotationHighlightingModeExtensions" Member="M:MonoTouch.PdfKit.PdfAnnotationHighlightingModeExtensions.GetConstant(MonoTouch.PdfKit.PdfAnnotationHighlightingMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PdfKit.PdfAnnotationKey" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this PdfKit.PdfAnnotationKey self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype PdfKit.PdfAnnotationKey self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.PdfKit.PdfAnnotationKey" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.PdfKit.PdfAnnotationKeyExtensions" Member="M:MonoTouch.PdfKit.PdfAnnotationKeyExtensions.GetConstant(MonoTouch.PdfKit.PdfAnnotationKey)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PdfKit.PdfAnnotationLineEndingStyle" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this PdfKit.PdfAnnotationLineEndingStyle self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype PdfKit.PdfAnnotationLineEndingStyle self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.PdfKit.PdfAnnotationLineEndingStyle" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.PdfKit.PdfAnnotationLineEndingStyleExtensions" Member="M:MonoTouch.PdfKit.PdfAnnotationLineEndingStyleExtensions.GetConstant(MonoTouch.PdfKit.PdfAnnotationLineEndingStyle)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PdfKit.PdfAnnotationSubtype" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this PdfKit.PdfAnnotationSubtype self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype PdfKit.PdfAnnotationSubtype self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.PdfKit.PdfAnnotationSubtype" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.PdfKit.PdfAnnotationSubtypeExtensions" Member="M:MonoTouch.PdfKit.PdfAnnotationSubtypeExtensions.GetConstant(MonoTouch.PdfKit.PdfAnnotationSubtype)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PdfKit.PdfAnnotationTextIconType" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this PdfKit.PdfAnnotationTextIconType self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype PdfKit.PdfAnnotationTextIconType self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.PdfKit.PdfAnnotationTextIconType" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.PdfKit.PdfAnnotationTextIconTypeExtensions" Member="M:MonoTouch.PdfKit.PdfAnnotationTextIconTypeExtensions.GetConstant(MonoTouch.PdfKit.PdfAnnotationTextIconType)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PdfKit.PdfAnnotationWidgetSubtype" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this PdfKit.PdfAnnotationWidgetSubtype self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype PdfKit.PdfAnnotationWidgetSubtype self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.PdfKit.PdfAnnotationWidgetSubtype" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.PdfKit.PdfAnnotationWidgetSubtypeExtensions" Member="M:MonoTouch.PdfKit.PdfAnnotationWidgetSubtypeExtensions.GetConstant(MonoTouch.PdfKit.PdfAnnotationWidgetSubtype)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PdfKit.IPdfDocumentDelegate" />
      </Targets>
      <Member MemberName="DidBeginDocumentFind">
        <MemberSignature Language="C#" Value="public static void DidBeginDocumentFind (this PdfKit.IPdfDocumentDelegate This, Foundation.NSNotification notification);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidBeginDocumentFind(class PdfKit.IPdfDocumentDelegate This, class Foundation.NSNotification notification) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PdfKit.IPdfDocumentDelegate" RefType="this" />
          <Parameter Name="notification" Type="MonoTouch.Foundation.NSNotification" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="notification">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.PdfKit.PdfDocumentDelegate_Extensions" Member="M:MonoTouch.PdfKit.PdfDocumentDelegate_Extensions.DidBeginDocumentFind(MonoTouch.PdfKit.IPdfDocumentDelegate,MonoTouch.Foundation.NSNotification)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PdfKit.IPdfDocumentDelegate" />
      </Targets>
      <Member MemberName="DidMatchString">
        <MemberSignature Language="C#" Value="public static void DidMatchString (this PdfKit.IPdfDocumentDelegate This, PdfKit.PdfSelection sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidMatchString(class PdfKit.IPdfDocumentDelegate This, class PdfKit.PdfSelection sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PdfKit.IPdfDocumentDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.PdfKit.PdfSelection" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="sender">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.PdfKit.PdfDocumentDelegate_Extensions" Member="M:MonoTouch.PdfKit.PdfDocumentDelegate_Extensions.DidMatchString(MonoTouch.PdfKit.IPdfDocumentDelegate,MonoTouch.PdfKit.PdfSelection)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PdfKit.IPdfDocumentDelegate" />
      </Targets>
      <Member MemberName="DidUnlock">
        <MemberSignature Language="C#" Value="public static void DidUnlock (this PdfKit.IPdfDocumentDelegate This, Foundation.NSNotification notification);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUnlock(class PdfKit.IPdfDocumentDelegate This, class Foundation.NSNotification notification) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PdfKit.IPdfDocumentDelegate" RefType="this" />
          <Parameter Name="notification" Type="MonoTouch.Foundation.NSNotification" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="notification">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.PdfKit.PdfDocumentDelegate_Extensions" Member="M:MonoTouch.PdfKit.PdfDocumentDelegate_Extensions.DidUnlock(MonoTouch.PdfKit.IPdfDocumentDelegate,MonoTouch.Foundation.NSNotification)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PdfKit.IPdfDocumentDelegate" />
      </Targets>
      <Member MemberName="FindFinished">
        <MemberSignature Language="C#" Value="public static void FindFinished (this PdfKit.IPdfDocumentDelegate This, Foundation.NSNotification notification);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FindFinished(class PdfKit.IPdfDocumentDelegate This, class Foundation.NSNotification notification) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PdfKit.IPdfDocumentDelegate" RefType="this" />
          <Parameter Name="notification" Type="MonoTouch.Foundation.NSNotification" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="notification">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.PdfKit.PdfDocumentDelegate_Extensions" Member="M:MonoTouch.PdfKit.PdfDocumentDelegate_Extensions.FindFinished(MonoTouch.PdfKit.IPdfDocumentDelegate,MonoTouch.Foundation.NSNotification)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PdfKit.IPdfDocumentDelegate" />
      </Targets>
      <Member MemberName="GetClassForAnnotationType">
        <MemberSignature Language="C#" Value="public static ObjCRuntime.Class GetClassForAnnotationType (this PdfKit.IPdfDocumentDelegate This, string annotationType);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class ObjCRuntime.Class GetClassForAnnotationType(class PdfKit.IPdfDocumentDelegate This, string annotationType) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.ObjCRuntime.Class</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PdfKit.IPdfDocumentDelegate" RefType="this" />
          <Parameter Name="annotationType" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="annotationType">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.PdfKit.PdfDocumentDelegate_Extensions" Member="M:MonoTouch.PdfKit.PdfDocumentDelegate_Extensions.GetClassForAnnotationType(MonoTouch.PdfKit.IPdfDocumentDelegate,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PdfKit.IPdfDocumentDelegate" />
      </Targets>
      <Member MemberName="GetClassForPage">
        <MemberSignature Language="C#" Value="public static ObjCRuntime.Class GetClassForPage (this PdfKit.IPdfDocumentDelegate This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class ObjCRuntime.Class GetClassForPage(class PdfKit.IPdfDocumentDelegate This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.ObjCRuntime.Class</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PdfKit.IPdfDocumentDelegate" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.PdfKit.PdfDocumentDelegate_Extensions" Member="M:MonoTouch.PdfKit.PdfDocumentDelegate_Extensions.GetClassForPage(MonoTouch.PdfKit.IPdfDocumentDelegate)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PdfKit.IPdfDocumentDelegate" />
      </Targets>
      <Member MemberName="MatchFound">
        <MemberSignature Language="C#" Value="public static void MatchFound (this PdfKit.IPdfDocumentDelegate This, Foundation.NSNotification notification);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MatchFound(class PdfKit.IPdfDocumentDelegate This, class Foundation.NSNotification notification) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PdfKit.IPdfDocumentDelegate" RefType="this" />
          <Parameter Name="notification" Type="MonoTouch.Foundation.NSNotification" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="notification">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.PdfKit.PdfDocumentDelegate_Extensions" Member="M:MonoTouch.PdfKit.PdfDocumentDelegate_Extensions.MatchFound(MonoTouch.PdfKit.IPdfDocumentDelegate,MonoTouch.Foundation.NSNotification)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PdfKit.IPdfDocumentDelegate" />
      </Targets>
      <Member MemberName="PageFindFinished">
        <MemberSignature Language="C#" Value="public static void PageFindFinished (this PdfKit.IPdfDocumentDelegate This, Foundation.NSNotification notification);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PageFindFinished(class PdfKit.IPdfDocumentDelegate This, class Foundation.NSNotification notification) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PdfKit.IPdfDocumentDelegate" RefType="this" />
          <Parameter Name="notification" Type="MonoTouch.Foundation.NSNotification" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="notification">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.PdfKit.PdfDocumentDelegate_Extensions" Member="M:MonoTouch.PdfKit.PdfDocumentDelegate_Extensions.PageFindFinished(MonoTouch.PdfKit.IPdfDocumentDelegate,MonoTouch.Foundation.NSNotification)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PdfKit.IPdfDocumentDelegate" />
      </Targets>
      <Member MemberName="PageFindStarted">
        <MemberSignature Language="C#" Value="public static void PageFindStarted (this PdfKit.IPdfDocumentDelegate This, Foundation.NSNotification notification);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PageFindStarted(class PdfKit.IPdfDocumentDelegate This, class Foundation.NSNotification notification) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PdfKit.IPdfDocumentDelegate" RefType="this" />
          <Parameter Name="notification" Type="MonoTouch.Foundation.NSNotification" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="notification">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.PdfKit.PdfDocumentDelegate_Extensions" Member="M:MonoTouch.PdfKit.PdfDocumentDelegate_Extensions.PageFindStarted(MonoTouch.PdfKit.IPdfDocumentDelegate,MonoTouch.Foundation.NSNotification)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PdfKit.IPdfViewDelegate" />
      </Targets>
      <Member MemberName="OpenPdf">
        <MemberSignature Language="C#" Value="public static void OpenPdf (this PdfKit.IPdfViewDelegate This, PdfKit.PdfView sender, PdfKit.PdfActionRemoteGoTo action);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OpenPdf(class PdfKit.IPdfViewDelegate This, class PdfKit.PdfView sender, class PdfKit.PdfActionRemoteGoTo action) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PdfKit.IPdfViewDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.PdfKit.PdfView" />
          <Parameter Name="action" Type="MonoTouch.PdfKit.PdfActionRemoteGoTo" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="sender">To be added.</param>
          <param name="action">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.PdfKit.PdfViewDelegate_Extensions" Member="M:MonoTouch.PdfKit.PdfViewDelegate_Extensions.OpenPdf(MonoTouch.PdfKit.IPdfViewDelegate,MonoTouch.PdfKit.PdfView,MonoTouch.PdfKit.PdfActionRemoteGoTo)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PdfKit.IPdfViewDelegate" />
      </Targets>
      <Member MemberName="PerformFind">
        <MemberSignature Language="C#" Value="public static void PerformFind (this PdfKit.IPdfViewDelegate This, PdfKit.PdfView sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformFind(class PdfKit.IPdfViewDelegate This, class PdfKit.PdfView sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PdfKit.IPdfViewDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.PdfKit.PdfView" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="sender">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.PdfKit.PdfViewDelegate_Extensions" Member="M:MonoTouch.PdfKit.PdfViewDelegate_Extensions.PerformFind(MonoTouch.PdfKit.IPdfViewDelegate,MonoTouch.PdfKit.PdfView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PdfKit.IPdfViewDelegate" />
      </Targets>
      <Member MemberName="PerformGoToPage">
        <MemberSignature Language="C#" Value="public static void PerformGoToPage (this PdfKit.IPdfViewDelegate This, PdfKit.PdfView sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformGoToPage(class PdfKit.IPdfViewDelegate This, class PdfKit.PdfView sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PdfKit.IPdfViewDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.PdfKit.PdfView" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="sender">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.PdfKit.PdfViewDelegate_Extensions" Member="M:MonoTouch.PdfKit.PdfViewDelegate_Extensions.PerformGoToPage(MonoTouch.PdfKit.IPdfViewDelegate,MonoTouch.PdfKit.PdfView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PdfKit.IPdfViewDelegate" />
      </Targets>
      <Member MemberName="WillClickOnLink">
        <MemberSignature Language="C#" Value="public static void WillClickOnLink (this PdfKit.IPdfViewDelegate This, PdfKit.PdfView sender, Foundation.NSUrl url);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillClickOnLink(class PdfKit.IPdfViewDelegate This, class PdfKit.PdfView sender, class Foundation.NSUrl url) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PdfKit.IPdfViewDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.PdfKit.PdfView" />
          <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="sender">To be added.</param>
          <param name="url">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.PdfKit.PdfViewDelegate_Extensions" Member="M:MonoTouch.PdfKit.PdfViewDelegate_Extensions.WillClickOnLink(MonoTouch.PdfKit.IPdfViewDelegate,MonoTouch.PdfKit.PdfView,MonoTouch.Foundation.NSUrl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Photos.PHAsset" />
      </Targets>
      <Member MemberName="CancelContentEditingInputRequest">
        <MemberSignature Language="C#" Value="public static void CancelContentEditingInputRequest (this Photos.PHAsset This, nuint requestID);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CancelContentEditingInputRequest(class Photos.PHAsset This, valuetype System.nuint requestID) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Photos.PHAsset" RefType="this" />
          <Parameter Name="requestID" Type="System.nuint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="requestID">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Photos.PHAssetContentEditingInputExtensions" Member="M:MonoTouch.Photos.PHAssetContentEditingInputExtensions.CancelContentEditingInputRequest(MonoTouch.Photos.PHAsset,System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Photos.PHAsset" />
      </Targets>
      <Member MemberName="RequestContentEditingInput">
        <MemberSignature Language="C#" Value="public static nuint RequestContentEditingInput (this Photos.PHAsset This, Photos.PHContentEditingInputRequestOptions options, Photos.PHContentEditingHandler completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nuint RequestContentEditingInput(class Photos.PHAsset This, class Photos.PHContentEditingInputRequestOptions options, class Photos.PHContentEditingHandler completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nuint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Photos.PHAsset" RefType="this" />
          <Parameter Name="options" Type="MonoTouch.Photos.PHContentEditingInputRequestOptions" />
          <Parameter Name="completionHandler" Type="MonoTouch.Photos.PHContentEditingHandler">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDPHContentEditingHandler))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="options">
            <para>To be added.</para>
            <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
          </param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Photos.PHAssetContentEditingInputExtensions" Member="M:MonoTouch.Photos.PHAssetContentEditingInputExtensions.RequestContentEditingInput(MonoTouch.Photos.PHAsset,MonoTouch.Photos.PHContentEditingInputRequestOptions,MonoTouch.Photos.PHContentEditingHandler)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PhotosUI.IPHLivePhotoViewDelegate" />
      </Targets>
      <Member MemberName="DidEndPlayback">
        <MemberSignature Language="C#" Value="public static void DidEndPlayback (this PhotosUI.IPHLivePhotoViewDelegate This, PhotosUI.PHLivePhotoView livePhotoView, PhotosUI.PHLivePhotoViewPlaybackStyle playbackStyle);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidEndPlayback(class PhotosUI.IPHLivePhotoViewDelegate This, class PhotosUI.PHLivePhotoView livePhotoView, valuetype PhotosUI.PHLivePhotoViewPlaybackStyle playbackStyle) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PhotosUI.IPHLivePhotoViewDelegate" RefType="this" />
          <Parameter Name="livePhotoView" Type="MonoTouch.PhotosUI.PHLivePhotoView" />
          <Parameter Name="playbackStyle" Type="MonoTouch.PhotosUI.PHLivePhotoViewPlaybackStyle" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="livePhotoView">To be added.</param>
          <param name="playbackStyle">To be added.</param>
          <summary>Method that is called aftr playback ends.</summary>
        </Docs>
        <Link Type="MonoTouch.PhotosUI.PHLivePhotoViewDelegate_Extensions" Member="M:MonoTouch.PhotosUI.PHLivePhotoViewDelegate_Extensions.DidEndPlayback(MonoTouch.PhotosUI.IPHLivePhotoViewDelegate,MonoTouch.PhotosUI.PHLivePhotoView,MonoTouch.PhotosUI.PHLivePhotoViewPlaybackStyle)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PhotosUI.IPHLivePhotoViewDelegate" />
      </Targets>
      <Member MemberName="WillBeginPlayback">
        <MemberSignature Language="C#" Value="public static void WillBeginPlayback (this PhotosUI.IPHLivePhotoViewDelegate This, PhotosUI.PHLivePhotoView livePhotoView, PhotosUI.PHLivePhotoViewPlaybackStyle playbackStyle);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillBeginPlayback(class PhotosUI.IPHLivePhotoViewDelegate This, class PhotosUI.PHLivePhotoView livePhotoView, valuetype PhotosUI.PHLivePhotoViewPlaybackStyle playbackStyle) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PhotosUI.IPHLivePhotoViewDelegate" RefType="this" />
          <Parameter Name="livePhotoView" Type="MonoTouch.PhotosUI.PHLivePhotoView" />
          <Parameter Name="playbackStyle" Type="MonoTouch.PhotosUI.PHLivePhotoViewPlaybackStyle" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="livePhotoView">To be added.</param>
          <param name="playbackStyle">To be added.</param>
          <summary>Method that is called just before playback begins.</summary>
        </Docs>
        <Link Type="MonoTouch.PhotosUI.PHLivePhotoViewDelegate_Extensions" Member="M:MonoTouch.PhotosUI.PHLivePhotoViewDelegate_Extensions.WillBeginPlayback(MonoTouch.PhotosUI.IPHLivePhotoViewDelegate,MonoTouch.PhotosUI.PHLivePhotoView,MonoTouch.PhotosUI.PHLivePhotoViewPlaybackStyle)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PushKit.IPKPushRegistryDelegate" />
      </Targets>
      <Member MemberName="DidInvalidatePushToken">
        <MemberSignature Language="C#" Value="public static void DidInvalidatePushToken (this PushKit.IPKPushRegistryDelegate This, PushKit.PKPushRegistry registry, string type);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidInvalidatePushToken(class PushKit.IPKPushRegistryDelegate This, class PushKit.PKPushRegistry registry, string type) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PushKit.IPKPushRegistryDelegate" RefType="this" />
          <Parameter Name="registry" Type="MonoTouch.PushKit.PKPushRegistry" />
          <Parameter Name="type" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="registry">To be added.</param>
          <param name="type">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.PushKit.PKPushRegistryDelegate_Extensions" Member="M:MonoTouch.PushKit.PKPushRegistryDelegate_Extensions.DidInvalidatePushToken(MonoTouch.PushKit.IPKPushRegistryDelegate,MonoTouch.PushKit.PKPushRegistry,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PushKit.IPKPushRegistryDelegate" />
      </Targets>
      <Member MemberName="DidReceiveIncomingPush">
        <MemberSignature Language="C#" Value="public static void DidReceiveIncomingPush (this PushKit.IPKPushRegistryDelegate This, PushKit.PKPushRegistry registry, PushKit.PKPushPayload payload, string type, Action completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveIncomingPush(class PushKit.IPKPushRegistryDelegate This, class PushKit.PKPushRegistry registry, class PushKit.PKPushPayload payload, string type, class System.Action completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PushKit.IPKPushRegistryDelegate" RefType="this" />
          <Parameter Name="registry" Type="MonoTouch.PushKit.PKPushRegistry" />
          <Parameter Name="payload" Type="MonoTouch.PushKit.PKPushPayload" />
          <Parameter Name="type" Type="System.String" />
          <Parameter Name="completion" Type="System.Action">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAction))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="registry">To be added.</param>
          <param name="payload">To be added.</param>
          <param name="type">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.PushKit.PKPushRegistryDelegate_Extensions" Member="M:MonoTouch.PushKit.PKPushRegistryDelegate_Extensions.DidReceiveIncomingPush(MonoTouch.PushKit.IPKPushRegistryDelegate,MonoTouch.PushKit.PKPushRegistry,MonoTouch.PushKit.PKPushPayload,System.String,System.Action)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.QuickLook.IQLPreviewControllerDelegate" />
      </Targets>
      <Member MemberName="DidDismiss">
        <MemberSignature Language="C#" Value="public static void DidDismiss (this QuickLook.IQLPreviewControllerDelegate This, QuickLook.QLPreviewController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDismiss(class QuickLook.IQLPreviewControllerDelegate This, class QuickLook.QLPreviewController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.QuickLook.IQLPreviewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.QuickLook.QLPreviewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.QuickLook.QLPreviewControllerDelegate_Extensions" Member="M:MonoTouch.QuickLook.QLPreviewControllerDelegate_Extensions.DidDismiss(MonoTouch.QuickLook.IQLPreviewControllerDelegate,MonoTouch.QuickLook.QLPreviewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.QuickLook.IQLPreviewControllerDelegate" />
      </Targets>
      <Member MemberName="FrameForPreviewItem">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGRect FrameForPreviewItem (this QuickLook.IQLPreviewControllerDelegate This, QuickLook.QLPreviewController controller, QuickLook.IQLPreviewItem item, ref UIKit.UIView view);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGRect FrameForPreviewItem(class QuickLook.IQLPreviewControllerDelegate This, class QuickLook.QLPreviewController controller, class QuickLook.IQLPreviewItem item, class UIKit.UIView view) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.QuickLook.IQLPreviewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.QuickLook.QLPreviewController" />
          <Parameter Name="item" Type="MonoTouch.QuickLook.IQLPreviewItem" />
          <Parameter Name="view" Type="MonoTouch.UIKit.UIView&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="item">To be added.</param>
          <param name="view">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.QuickLook.QLPreviewControllerDelegate_Extensions" Member="M:MonoTouch.QuickLook.QLPreviewControllerDelegate_Extensions.FrameForPreviewItem(MonoTouch.QuickLook.IQLPreviewControllerDelegate,MonoTouch.QuickLook.QLPreviewController,MonoTouch.QuickLook.IQLPreviewItem,MonoTouch.UIKit.UIView@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.QuickLook.IQLPreviewControllerDelegate" />
      </Targets>
      <Member MemberName="ShouldOpenUrl">
        <MemberSignature Language="C#" Value="public static bool ShouldOpenUrl (this QuickLook.IQLPreviewControllerDelegate This, QuickLook.QLPreviewController controller, Foundation.NSUrl url, QuickLook.IQLPreviewItem item);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldOpenUrl(class QuickLook.IQLPreviewControllerDelegate This, class QuickLook.QLPreviewController controller, class Foundation.NSUrl url, class QuickLook.IQLPreviewItem item) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.QuickLook.IQLPreviewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.QuickLook.QLPreviewController" />
          <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="item" Type="MonoTouch.QuickLook.IQLPreviewItem" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="url">To be added.</param>
          <param name="item">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.QuickLook.QLPreviewControllerDelegate_Extensions" Member="M:MonoTouch.QuickLook.QLPreviewControllerDelegate_Extensions.ShouldOpenUrl(MonoTouch.QuickLook.IQLPreviewControllerDelegate,MonoTouch.QuickLook.QLPreviewController,MonoTouch.Foundation.NSUrl,MonoTouch.QuickLook.IQLPreviewItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.QuickLook.IQLPreviewControllerDelegate" />
      </Targets>
      <Member MemberName="TransitionImageForPreviewItem">
        <MemberSignature Language="C#" Value="public static UIKit.UIImage TransitionImageForPreviewItem (this QuickLook.IQLPreviewControllerDelegate This, QuickLook.QLPreviewController controller, QuickLook.IQLPreviewItem item, CoreGraphics.CGRect contentRect);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIImage TransitionImageForPreviewItem(class QuickLook.IQLPreviewControllerDelegate This, class QuickLook.QLPreviewController controller, class QuickLook.IQLPreviewItem item, valuetype CoreGraphics.CGRect contentRect) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.QuickLook.IQLPreviewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.QuickLook.QLPreviewController" />
          <Parameter Name="item" Type="MonoTouch.QuickLook.IQLPreviewItem" />
          <Parameter Name="contentRect" Type="MonoTouch.CoreGraphics.CGRect" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="item">To be added.</param>
          <param name="contentRect">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.QuickLook.QLPreviewControllerDelegate_Extensions" Member="M:MonoTouch.QuickLook.QLPreviewControllerDelegate_Extensions.TransitionImageForPreviewItem(MonoTouch.QuickLook.IQLPreviewControllerDelegate,MonoTouch.QuickLook.QLPreviewController,MonoTouch.QuickLook.IQLPreviewItem,MonoTouch.CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.QuickLook.IQLPreviewControllerDelegate" />
      </Targets>
      <Member MemberName="TransitionViewForPreviewItem">
        <MemberSignature Language="C#" Value="public static UIKit.UIView TransitionViewForPreviewItem (this QuickLook.IQLPreviewControllerDelegate This, QuickLook.QLPreviewController controller, QuickLook.IQLPreviewItem item);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIView TransitionViewForPreviewItem(class QuickLook.IQLPreviewControllerDelegate This, class QuickLook.QLPreviewController controller, class QuickLook.IQLPreviewItem item) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIView</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.QuickLook.IQLPreviewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.QuickLook.QLPreviewController" />
          <Parameter Name="item" Type="MonoTouch.QuickLook.IQLPreviewItem" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="item">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.QuickLook.QLPreviewControllerDelegate_Extensions" Member="M:MonoTouch.QuickLook.QLPreviewControllerDelegate_Extensions.TransitionViewForPreviewItem(MonoTouch.QuickLook.IQLPreviewControllerDelegate,MonoTouch.QuickLook.QLPreviewController,MonoTouch.QuickLook.IQLPreviewItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.QuickLook.IQLPreviewControllerDelegate" />
      </Targets>
      <Member MemberName="WillDismiss">
        <MemberSignature Language="C#" Value="public static void WillDismiss (this QuickLook.IQLPreviewControllerDelegate This, QuickLook.QLPreviewController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillDismiss(class QuickLook.IQLPreviewControllerDelegate This, class QuickLook.QLPreviewController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.QuickLook.IQLPreviewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.QuickLook.QLPreviewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.QuickLook.QLPreviewControllerDelegate_Extensions" Member="M:MonoTouch.QuickLook.QLPreviewControllerDelegate_Extensions.WillDismiss(MonoTouch.QuickLook.IQLPreviewControllerDelegate,MonoTouch.QuickLook.QLPreviewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.QuickLook.IQLPreviewingController" />
      </Targets>
      <Member MemberName="PreparePreviewOfFile">
        <MemberSignature Language="C#" Value="public static void PreparePreviewOfFile (this QuickLook.IQLPreviewingController This, Foundation.NSUrl url, Action&lt;Foundation.NSError&gt; handler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PreparePreviewOfFile(class QuickLook.IQLPreviewingController This, class Foundation.NSUrl url, class System.Action`1&lt;class Foundation.NSError&gt; handler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.QuickLook.IQLPreviewingController" RefType="this" />
          <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="handler" Type="System.Action&lt;MonoTouch.Foundation.NSError&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V8))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="url">To be added.</param>
          <param name="handler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.QuickLook.QLPreviewingController_Extensions" Member="M:MonoTouch.QuickLook.QLPreviewingController_Extensions.PreparePreviewOfFile(MonoTouch.QuickLook.IQLPreviewingController,MonoTouch.Foundation.NSUrl,System.Action{MonoTouch.Foundation.NSError})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.QuickLook.IQLPreviewingController" />
      </Targets>
      <Member MemberName="PreparePreviewOfSearchableItem">
        <MemberSignature Language="C#" Value="public static void PreparePreviewOfSearchableItem (this QuickLook.IQLPreviewingController This, string identifier, string queryString, Action&lt;Foundation.NSError&gt; handler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PreparePreviewOfSearchableItem(class QuickLook.IQLPreviewingController This, string identifier, string queryString, class System.Action`1&lt;class Foundation.NSError&gt; handler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.QuickLook.IQLPreviewingController" RefType="this" />
          <Parameter Name="identifier" Type="System.String" />
          <Parameter Name="queryString" Type="System.String" />
          <Parameter Name="handler" Type="System.Action&lt;MonoTouch.Foundation.NSError&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V8))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="identifier">To be added.</param>
          <param name="queryString">To be added.</param>
          <param name="handler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.QuickLook.QLPreviewingController_Extensions" Member="M:MonoTouch.QuickLook.QLPreviewingController_Extensions.PreparePreviewOfSearchableItem(MonoTouch.QuickLook.IQLPreviewingController,System.String,System.String,System.Action{MonoTouch.Foundation.NSError})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSExtensionContext" />
      </Targets>
      <Member MemberName="CompleteRequest">
        <MemberSignature Language="C#" Value="public static void CompleteRequest (this Foundation.NSExtensionContext This, Foundation.NSUrl broadcastURL, Foundation.NSDictionary&lt;Foundation.NSString,Foundation.INSCoding&gt; setupInfo);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompleteRequest(class Foundation.NSExtensionContext This, class Foundation.NSUrl broadcastURL, class Foundation.NSDictionary`2&lt;class Foundation.NSString, class Foundation.INSCoding&gt; setupInfo) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSExtensionContext" RefType="this" />
          <Parameter Name="broadcastURL" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="setupInfo" Type="MonoTouch.Foundation.NSDictionary&lt;MonoTouch.Foundation.NSString,MonoTouch.Foundation.INSCoding&gt;" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="broadcastURL">To be added.</param>
          <param name="setupInfo">
            <para>To be added.</para>
            <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
          </param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ReplayKit.NSExtensionContext_RPBroadcastExtension" Member="M:MonoTouch.ReplayKit.NSExtensionContext_RPBroadcastExtension.CompleteRequest(MonoTouch.Foundation.NSExtensionContext,MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSDictionary{MonoTouch.Foundation.NSString,MonoTouch.Foundation.INSCoding})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSExtensionContext" />
      </Targets>
      <Member MemberName="CompleteRequest">
        <MemberSignature Language="C#" Value="public static void CompleteRequest (this Foundation.NSExtensionContext This, Foundation.NSUrl broadcastURL, ReplayKit.RPBroadcastConfiguration broadcastConfiguration, Foundation.NSDictionary&lt;Foundation.NSString,Foundation.INSCoding&gt; setupInfo);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompleteRequest(class Foundation.NSExtensionContext This, class Foundation.NSUrl broadcastURL, class ReplayKit.RPBroadcastConfiguration broadcastConfiguration, class Foundation.NSDictionary`2&lt;class Foundation.NSString, class Foundation.INSCoding&gt; setupInfo) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSExtensionContext" RefType="this" />
          <Parameter Name="broadcastURL" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="broadcastConfiguration" Type="MonoTouch.ReplayKit.RPBroadcastConfiguration" />
          <Parameter Name="setupInfo" Type="MonoTouch.Foundation.NSDictionary&lt;MonoTouch.Foundation.NSString,MonoTouch.Foundation.INSCoding&gt;" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="broadcastURL">To be added.</param>
          <param name="broadcastConfiguration">To be added.</param>
          <param name="setupInfo">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ReplayKit.NSExtensionContext_RPBroadcastExtension" Member="M:MonoTouch.ReplayKit.NSExtensionContext_RPBroadcastExtension.CompleteRequest(MonoTouch.Foundation.NSExtensionContext,MonoTouch.Foundation.NSUrl,MonoTouch.ReplayKit.RPBroadcastConfiguration,MonoTouch.Foundation.NSDictionary{MonoTouch.Foundation.NSString,MonoTouch.Foundation.INSCoding})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSExtensionContext" />
      </Targets>
      <Member MemberName="LoadBroadcastingApplicationInfo">
        <MemberSignature Language="C#" Value="public static void LoadBroadcastingApplicationInfo (this Foundation.NSExtensionContext This, ReplayKit.LoadBroadcastingHandler handler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadBroadcastingApplicationInfo(class Foundation.NSExtensionContext This, class ReplayKit.LoadBroadcastingHandler handler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSExtensionContext" RefType="this" />
          <Parameter Name="handler" Type="MonoTouch.ReplayKit.LoadBroadcastingHandler">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDLoadBroadcastingHandler))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="handler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ReplayKit.NSExtensionContext_RPBroadcastExtension" Member="M:MonoTouch.ReplayKit.NSExtensionContext_RPBroadcastExtension.LoadBroadcastingApplicationInfo(MonoTouch.Foundation.NSExtensionContext,MonoTouch.ReplayKit.LoadBroadcastingHandler)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ReplayKit.IRPBroadcastControllerDelegate" />
      </Targets>
      <Member MemberName="DidFinish">
        <MemberSignature Language="C#" Value="public static void DidFinish (this ReplayKit.IRPBroadcastControllerDelegate This, ReplayKit.RPBroadcastController broadcastController, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinish(class ReplayKit.IRPBroadcastControllerDelegate This, class ReplayKit.RPBroadcastController broadcastController, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ReplayKit.IRPBroadcastControllerDelegate" RefType="this" />
          <Parameter Name="broadcastController" Type="MonoTouch.ReplayKit.RPBroadcastController" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="broadcastController">The controller for the broadcast that finsihed.</param>
          <param name="error">The error, if any, that ended the broadcast.This parameter can be .</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ReplayKit.RPBroadcastControllerDelegate_Extensions" Member="M:MonoTouch.ReplayKit.RPBroadcastControllerDelegate_Extensions.DidFinish(MonoTouch.ReplayKit.IRPBroadcastControllerDelegate,MonoTouch.ReplayKit.RPBroadcastController,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ReplayKit.IRPBroadcastControllerDelegate" />
      </Targets>
      <Member MemberName="DidUpdateBroadcastUrl">
        <MemberSignature Language="C#" Value="public static void DidUpdateBroadcastUrl (this ReplayKit.IRPBroadcastControllerDelegate This, ReplayKit.RPBroadcastController broadcastController, Foundation.NSUrl broadcastUrl);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateBroadcastUrl(class ReplayKit.IRPBroadcastControllerDelegate This, class ReplayKit.RPBroadcastController broadcastController, class Foundation.NSUrl broadcastUrl) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ReplayKit.IRPBroadcastControllerDelegate" RefType="this" />
          <Parameter Name="broadcastController" Type="MonoTouch.ReplayKit.RPBroadcastController" />
          <Parameter Name="broadcastUrl" Type="MonoTouch.Foundation.NSUrl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="broadcastController">To be added.</param>
          <param name="broadcastUrl">To be added.</param>
          <summary>Method that is called when the broadcast URL is updated.</summary>
        </Docs>
        <Link Type="MonoTouch.ReplayKit.RPBroadcastControllerDelegate_Extensions" Member="M:MonoTouch.ReplayKit.RPBroadcastControllerDelegate_Extensions.DidUpdateBroadcastUrl(MonoTouch.ReplayKit.IRPBroadcastControllerDelegate,MonoTouch.ReplayKit.RPBroadcastController,MonoTouch.Foundation.NSUrl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ReplayKit.IRPBroadcastControllerDelegate" />
      </Targets>
      <Member MemberName="DidUpdateServiceInfo">
        <MemberSignature Language="C#" Value="public static void DidUpdateServiceInfo (this ReplayKit.IRPBroadcastControllerDelegate This, ReplayKit.RPBroadcastController broadcastController, Foundation.NSDictionary&lt;Foundation.NSString,Foundation.INSCoding&gt; serviceInfo);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateServiceInfo(class ReplayKit.IRPBroadcastControllerDelegate This, class ReplayKit.RPBroadcastController broadcastController, class Foundation.NSDictionary`2&lt;class Foundation.NSString, class Foundation.INSCoding&gt; serviceInfo) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ReplayKit.IRPBroadcastControllerDelegate" RefType="this" />
          <Parameter Name="broadcastController" Type="MonoTouch.ReplayKit.RPBroadcastController" />
          <Parameter Name="serviceInfo" Type="MonoTouch.Foundation.NSDictionary&lt;MonoTouch.Foundation.NSString,MonoTouch.Foundation.INSCoding&gt;" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="broadcastController">To be added.</param>
          <param name="serviceInfo">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ReplayKit.RPBroadcastControllerDelegate_Extensions" Member="M:MonoTouch.ReplayKit.RPBroadcastControllerDelegate_Extensions.DidUpdateServiceInfo(MonoTouch.ReplayKit.IRPBroadcastControllerDelegate,MonoTouch.ReplayKit.RPBroadcastController,MonoTouch.Foundation.NSDictionary{MonoTouch.Foundation.NSString,MonoTouch.Foundation.INSCoding})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ReplayKit.IRPPreviewViewControllerDelegate" />
      </Targets>
      <Member MemberName="DidFinish">
        <MemberSignature Language="C#" Value="public static void DidFinish (this ReplayKit.IRPPreviewViewControllerDelegate This, ReplayKit.RPPreviewViewController previewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinish(class ReplayKit.IRPPreviewViewControllerDelegate This, class ReplayKit.RPPreviewViewController previewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ReplayKit.IRPPreviewViewControllerDelegate" RefType="this" />
          <Parameter Name="previewController" Type="MonoTouch.ReplayKit.RPPreviewViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="previewController">To be added.</param>
          <summary>Method that is called when the previewer is ready to be dismissed.</summary>
        </Docs>
        <Link Type="MonoTouch.ReplayKit.RPPreviewViewControllerDelegate_Extensions" Member="M:MonoTouch.ReplayKit.RPPreviewViewControllerDelegate_Extensions.DidFinish(MonoTouch.ReplayKit.IRPPreviewViewControllerDelegate,MonoTouch.ReplayKit.RPPreviewViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ReplayKit.IRPPreviewViewControllerDelegate" />
      </Targets>
      <Member MemberName="DidFinish">
        <MemberSignature Language="C#" Value="public static void DidFinish (this ReplayKit.IRPPreviewViewControllerDelegate This, ReplayKit.RPPreviewViewController previewController, Foundation.NSSet&lt;Foundation.NSString&gt; activityTypes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinish(class ReplayKit.IRPPreviewViewControllerDelegate This, class ReplayKit.RPPreviewViewController previewController, class Foundation.NSSet`1&lt;class Foundation.NSString&gt; activityTypes) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ReplayKit.IRPPreviewViewControllerDelegate" RefType="this" />
          <Parameter Name="previewController" Type="MonoTouch.ReplayKit.RPPreviewViewController" />
          <Parameter Name="activityTypes" Type="MonoTouch.Foundation.NSSet&lt;MonoTouch.Foundation.NSString&gt;" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="previewController">To be added.</param>
          <param name="activityTypes">To be added.</param>
          <summary>Method that is called when the previewer is ready to be dismissed.</summary>
        </Docs>
        <Link Type="MonoTouch.ReplayKit.RPPreviewViewControllerDelegate_Extensions" Member="M:MonoTouch.ReplayKit.RPPreviewViewControllerDelegate_Extensions.DidFinish(MonoTouch.ReplayKit.IRPPreviewViewControllerDelegate,MonoTouch.ReplayKit.RPPreviewViewController,MonoTouch.Foundation.NSSet{MonoTouch.Foundation.NSString})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ReplayKit.RPRecordingError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this ReplayKit.RPRecordingError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype ReplayKit.RPRecordingError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.ReplayKit.RPRecordingError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.ReplayKit.RPRecordingError value</summary>
        </Docs>
        <Link Type="MonoTouch.ReplayKit.RPRecordingErrorExtensions" Member="M:MonoTouch.ReplayKit.RPRecordingErrorExtensions.GetDomain(MonoTouch.ReplayKit.RPRecordingError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ReplayKit.IRPScreenRecorderDelegate" />
      </Targets>
      <Member MemberName="DidChangeAvailability">
        <MemberSignature Language="C#" Value="public static void DidChangeAvailability (this ReplayKit.IRPScreenRecorderDelegate This, ReplayKit.RPScreenRecorder screenRecorder);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidChangeAvailability(class ReplayKit.IRPScreenRecorderDelegate This, class ReplayKit.RPScreenRecorder screenRecorder) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ReplayKit.IRPScreenRecorderDelegate" RefType="this" />
          <Parameter Name="screenRecorder" Type="MonoTouch.ReplayKit.RPScreenRecorder" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="screenRecorder">To be added.</param>
          <summary>Method that is called when the availability status changes.</summary>
        </Docs>
        <Link Type="MonoTouch.ReplayKit.RPScreenRecorderDelegate_Extensions" Member="M:MonoTouch.ReplayKit.RPScreenRecorderDelegate_Extensions.DidChangeAvailability(MonoTouch.ReplayKit.IRPScreenRecorderDelegate,MonoTouch.ReplayKit.RPScreenRecorder)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ReplayKit.IRPScreenRecorderDelegate" />
      </Targets>
      <Member MemberName="DidStopRecording">
        <MemberSignature Language="C#" Value="public static void DidStopRecording (this ReplayKit.IRPScreenRecorderDelegate This, ReplayKit.RPScreenRecorder screenRecorder, Foundation.NSError error, ReplayKit.RPPreviewViewController previewViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidStopRecording(class ReplayKit.IRPScreenRecorderDelegate This, class ReplayKit.RPScreenRecorder screenRecorder, class Foundation.NSError error, class ReplayKit.RPPreviewViewController previewViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ReplayKit.IRPScreenRecorderDelegate" RefType="this" />
          <Parameter Name="screenRecorder" Type="MonoTouch.ReplayKit.RPScreenRecorder" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
          <Parameter Name="previewViewController" Type="MonoTouch.ReplayKit.RPPreviewViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="screenRecorder">To be added.</param>
          <param name="error">To be added.</param>
          <param name="previewViewController">To be added.This parameter can be .</param>
          <summary>Method that is called when the recording stops.</summary>
        </Docs>
        <Link Type="MonoTouch.ReplayKit.RPScreenRecorderDelegate_Extensions" Member="M:MonoTouch.ReplayKit.RPScreenRecorderDelegate_Extensions.DidStopRecording(MonoTouch.ReplayKit.IRPScreenRecorderDelegate,MonoTouch.ReplayKit.RPScreenRecorder,MonoTouch.Foundation.NSError,MonoTouch.ReplayKit.RPPreviewViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ReplayKit.IRPScreenRecorderDelegate" />
      </Targets>
      <Member MemberName="DidStopRecording">
        <MemberSignature Language="C#" Value="public static void DidStopRecording (this ReplayKit.IRPScreenRecorderDelegate This, ReplayKit.RPScreenRecorder screenRecorder, ReplayKit.RPPreviewViewController previewViewController, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidStopRecording(class ReplayKit.IRPScreenRecorderDelegate This, class ReplayKit.RPScreenRecorder screenRecorder, class ReplayKit.RPPreviewViewController previewViewController, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ReplayKit.IRPScreenRecorderDelegate" RefType="this" />
          <Parameter Name="screenRecorder" Type="MonoTouch.ReplayKit.RPScreenRecorder" />
          <Parameter Name="previewViewController" Type="MonoTouch.ReplayKit.RPPreviewViewController" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="screenRecorder">To be added.</param>
          <param name="previewViewController">To be added.This parameter can be .</param>
          <param name="error">To be added.This parameter can be .</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ReplayKit.RPScreenRecorderDelegate_Extensions" Member="M:MonoTouch.ReplayKit.RPScreenRecorderDelegate_Extensions.DidStopRecording(MonoTouch.ReplayKit.IRPScreenRecorderDelegate,MonoTouch.ReplayKit.RPScreenRecorder,MonoTouch.ReplayKit.RPPreviewViewController,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SafariServices.SFAuthenticationError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this SafariServices.SFAuthenticationError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype SafariServices.SFAuthenticationError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.SafariServices.SFAuthenticationError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.SafariServices.SFAuthenticationError value</summary>
        </Docs>
        <Link Type="MonoTouch.SafariServices.SFAuthenticationErrorExtensions" Member="M:MonoTouch.SafariServices.SFAuthenticationErrorExtensions.GetDomain(MonoTouch.SafariServices.SFAuthenticationError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SafariServices.SFContentBlockerErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this SafariServices.SFContentBlockerErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype SafariServices.SFContentBlockerErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.SafariServices.SFContentBlockerErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.SafariServices.SFContentBlockerErrorCode value</summary>
        </Docs>
        <Link Type="MonoTouch.SafariServices.SFContentBlockerErrorCodeExtensions" Member="M:MonoTouch.SafariServices.SFContentBlockerErrorCodeExtensions.GetDomain(MonoTouch.SafariServices.SFContentBlockerErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SafariServices.SFErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this SafariServices.SFErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype SafariServices.SFErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.SafariServices.SFErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.SafariServices.SFErrorCode value</summary>
        </Docs>
        <Link Type="MonoTouch.SafariServices.SFErrorCodeExtensions" Member="M:MonoTouch.SafariServices.SFErrorCodeExtensions.GetDomain(MonoTouch.SafariServices.SFErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SafariServices.ISFSafariViewControllerDelegate" />
      </Targets>
      <Member MemberName="DidCompleteInitialLoad">
        <MemberSignature Language="C#" Value="public static void DidCompleteInitialLoad (this SafariServices.ISFSafariViewControllerDelegate This, SafariServices.SFSafariViewController controller, bool didLoadSuccessfully);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidCompleteInitialLoad(class SafariServices.ISFSafariViewControllerDelegate This, class SafariServices.SFSafariViewController controller, bool didLoadSuccessfully) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SafariServices.ISFSafariViewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.SafariServices.SFSafariViewController" />
          <Parameter Name="didLoadSuccessfully" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="didLoadSuccessfully">To be added.</param>
          <summary>Method that is called after the first URL is loaded.</summary>
        </Docs>
        <Link Type="MonoTouch.SafariServices.SFSafariViewControllerDelegate_Extensions" Member="M:MonoTouch.SafariServices.SFSafariViewControllerDelegate_Extensions.DidCompleteInitialLoad(MonoTouch.SafariServices.ISFSafariViewControllerDelegate,MonoTouch.SafariServices.SFSafariViewController,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SafariServices.ISFSafariViewControllerDelegate" />
      </Targets>
      <Member MemberName="DidFinish">
        <MemberSignature Language="C#" Value="public static void DidFinish (this SafariServices.ISFSafariViewControllerDelegate This, SafariServices.SFSafariViewController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinish(class SafariServices.ISFSafariViewControllerDelegate This, class SafariServices.SFSafariViewController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SafariServices.ISFSafariViewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.SafariServices.SFSafariViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>Method that is called when the user dismisses the view.</summary>
        </Docs>
        <Link Type="MonoTouch.SafariServices.SFSafariViewControllerDelegate_Extensions" Member="M:MonoTouch.SafariServices.SFSafariViewControllerDelegate_Extensions.DidFinish(MonoTouch.SafariServices.ISFSafariViewControllerDelegate,MonoTouch.SafariServices.SFSafariViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SafariServices.ISFSafariViewControllerDelegate" />
      </Targets>
      <Member MemberName="GetActivityItems">
        <MemberSignature Language="C#" Value="public static UIKit.UIActivity[] GetActivityItems (this SafariServices.ISFSafariViewControllerDelegate This, SafariServices.SFSafariViewController controller, Foundation.NSUrl url, string title);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIActivity[] GetActivityItems(class SafariServices.ISFSafariViewControllerDelegate This, class SafariServices.SFSafariViewController controller, class Foundation.NSUrl url, string title) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIActivity[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SafariServices.ISFSafariViewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.SafariServices.SFSafariViewController" />
          <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="title" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="url">To be added.</param>
          <param name="title">To be added.This parameter can be .</param>
          <summary>Method that is called to retrieve the activity items for the requested action.</summary>
        </Docs>
        <Link Type="MonoTouch.SafariServices.SFSafariViewControllerDelegate_Extensions" Member="M:MonoTouch.SafariServices.SFSafariViewControllerDelegate_Extensions.GetActivityItems(MonoTouch.SafariServices.ISFSafariViewControllerDelegate,MonoTouch.SafariServices.SFSafariViewController,MonoTouch.Foundation.NSUrl,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SafariServices.ISFSafariViewControllerDelegate" />
      </Targets>
      <Member MemberName="GetExcludedActivityTypes">
        <MemberSignature Language="C#" Value="public static string[] GetExcludedActivityTypes (this SafariServices.ISFSafariViewControllerDelegate This, SafariServices.SFSafariViewController controller, Foundation.NSUrl url, string title);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetExcludedActivityTypes(class SafariServices.ISFSafariViewControllerDelegate This, class SafariServices.SFSafariViewController controller, class Foundation.NSUrl url, string title) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SafariServices.ISFSafariViewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.SafariServices.SFSafariViewController" />
          <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="title" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="url">To be added.</param>
          <param name="title">To be added.This parameter can be .</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SafariServices.SFSafariViewControllerDelegate_Extensions" Member="M:MonoTouch.SafariServices.SFSafariViewControllerDelegate_Extensions.GetExcludedActivityTypes(MonoTouch.SafariServices.ISFSafariViewControllerDelegate,MonoTouch.SafariServices.SFSafariViewController,MonoTouch.Foundation.NSUrl,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SafariServices.ISFSafariViewControllerDelegate" />
      </Targets>
      <Member MemberName="InitialLoadDidRedirectToUrl">
        <MemberSignature Language="C#" Value="public static void InitialLoadDidRedirectToUrl (this SafariServices.ISFSafariViewControllerDelegate This, SafariServices.SFSafariViewController controller, Foundation.NSUrl url);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InitialLoadDidRedirectToUrl(class SafariServices.ISFSafariViewControllerDelegate This, class SafariServices.SFSafariViewController controller, class Foundation.NSUrl url) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SafariServices.ISFSafariViewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.SafariServices.SFSafariViewController" />
          <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="url">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SafariServices.SFSafariViewControllerDelegate_Extensions" Member="M:MonoTouch.SafariServices.SFSafariViewControllerDelegate_Extensions.InitialLoadDidRedirectToUrl(MonoTouch.SafariServices.ISFSafariViewControllerDelegate,MonoTouch.SafariServices.SFSafariViewController,MonoTouch.Foundation.NSUrl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SafariServices.SSReadingListError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this SafariServices.SSReadingListError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype SafariServices.SSReadingListError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.SafariServices.SSReadingListError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.SafariServices.SSReadingListError value</summary>
        </Docs>
        <Link Type="MonoTouch.SafariServices.SSReadingListErrorExtensions" Member="M:MonoTouch.SafariServices.SSReadingListErrorExtensions.GetDomain(MonoTouch.SafariServices.SSReadingListError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNActionable" />
      </Targets>
      <Member MemberName="GetActionKeys">
        <MemberSignature Language="C#" Value="public static string[] GetActionKeys (this SceneKit.ISCNActionable This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetActionKeys(class SceneKit.ISCNActionable This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNActionable" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNActionable_Extensions" Member="M:MonoTouch.SceneKit.SCNActionable_Extensions.GetActionKeys(MonoTouch.SceneKit.ISCNActionable)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNAnimatable" />
      </Targets>
      <Member MemberName="SetSpeed">
        <MemberSignature Language="C#" Value="public static void SetSpeed (this SceneKit.ISCNAnimatable This, nfloat speed, Foundation.NSString key);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetSpeed(class SceneKit.ISCNAnimatable This, valuetype System.nfloat speed, class Foundation.NSString key) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNAnimatable" RefType="this" />
          <Parameter Name="key" Type="MonoTouch.Foundation.NSString" />
          <Parameter Name="speed" Type="System.nfloat" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="speed">To be added.</param>
          <param name="key">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNAnimatable_Extensions" Member="M:MonoTouch.SceneKit.SCNAnimatable_Extensions.SetSpeed(MonoTouch.SceneKit.ISCNAnimatable,System.nfloat,MonoTouch.Foundation.NSString)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNCameraControllerDelegate" />
      </Targets>
      <Member MemberName="CameraInertiaDidEnd">
        <MemberSignature Language="C#" Value="public static void CameraInertiaDidEnd (this SceneKit.ISCNCameraControllerDelegate This, SceneKit.SCNCameraController cameraController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CameraInertiaDidEnd(class SceneKit.ISCNCameraControllerDelegate This, class SceneKit.SCNCameraController cameraController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNCameraControllerDelegate" RefType="this" />
          <Parameter Name="cameraController" Type="MonoTouch.SceneKit.SCNCameraController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="cameraController">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNCameraControllerDelegate_Extensions" Member="M:MonoTouch.SceneKit.SCNCameraControllerDelegate_Extensions.CameraInertiaDidEnd(MonoTouch.SceneKit.ISCNCameraControllerDelegate,MonoTouch.SceneKit.SCNCameraController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNCameraControllerDelegate" />
      </Targets>
      <Member MemberName="CameraInertiaWillStart">
        <MemberSignature Language="C#" Value="public static void CameraInertiaWillStart (this SceneKit.ISCNCameraControllerDelegate This, SceneKit.SCNCameraController cameraController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CameraInertiaWillStart(class SceneKit.ISCNCameraControllerDelegate This, class SceneKit.SCNCameraController cameraController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNCameraControllerDelegate" RefType="this" />
          <Parameter Name="cameraController" Type="MonoTouch.SceneKit.SCNCameraController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="cameraController">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNCameraControllerDelegate_Extensions" Member="M:MonoTouch.SceneKit.SCNCameraControllerDelegate_Extensions.CameraInertiaWillStart(MonoTouch.SceneKit.ISCNCameraControllerDelegate,MonoTouch.SceneKit.SCNCameraController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.SCNErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this SceneKit.SCNErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype SceneKit.SCNErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.SceneKit.SCNErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.SceneKit.SCNErrorCode value</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNErrorCodeExtensions" Member="M:MonoTouch.SceneKit.SCNErrorCodeExtensions.GetDomain(MonoTouch.SceneKit.SCNErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNNodeRendererDelegate" />
      </Targets>
      <Member MemberName="Render">
        <MemberSignature Language="C#" Value="public static void Render (this SceneKit.ISCNNodeRendererDelegate This, SceneKit.SCNNode node, SceneKit.SCNRenderer renderer, Foundation.NSDictionary arguments);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Render(class SceneKit.ISCNNodeRendererDelegate This, class SceneKit.SCNNode node, class SceneKit.SCNRenderer renderer, class Foundation.NSDictionary arguments) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNNodeRendererDelegate" RefType="this" />
          <Parameter Name="node" Type="MonoTouch.SceneKit.SCNNode" />
          <Parameter Name="renderer" Type="MonoTouch.SceneKit.SCNRenderer" />
          <Parameter Name="arguments" Type="MonoTouch.Foundation.NSDictionary" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="node">To be added.</param>
          <param name="renderer">To be added.</param>
          <param name="arguments">To be added.This parameter can be .</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNNodeRendererDelegate_Extensions" Member="M:MonoTouch.SceneKit.SCNNodeRendererDelegate_Extensions.Render(MonoTouch.SceneKit.ISCNNodeRendererDelegate,MonoTouch.SceneKit.SCNNode,MonoTouch.SceneKit.SCNRenderer,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNPhysicsContactDelegate" />
      </Targets>
      <Member MemberName="DidBeginContact">
        <MemberSignature Language="C#" Value="public static void DidBeginContact (this SceneKit.ISCNPhysicsContactDelegate This, SceneKit.SCNPhysicsWorld world, SceneKit.SCNPhysicsContact contact);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidBeginContact(class SceneKit.ISCNPhysicsContactDelegate This, class SceneKit.SCNPhysicsWorld world, class SceneKit.SCNPhysicsContact contact) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNPhysicsContactDelegate" RefType="this" />
          <Parameter Name="world" Type="MonoTouch.SceneKit.SCNPhysicsWorld" />
          <Parameter Name="contact" Type="MonoTouch.SceneKit.SCNPhysicsContact" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="world">To be added.</param>
          <param name="contact">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNPhysicsContactDelegate_Extensions" Member="M:MonoTouch.SceneKit.SCNPhysicsContactDelegate_Extensions.DidBeginContact(MonoTouch.SceneKit.ISCNPhysicsContactDelegate,MonoTouch.SceneKit.SCNPhysicsWorld,MonoTouch.SceneKit.SCNPhysicsContact)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNPhysicsContactDelegate" />
      </Targets>
      <Member MemberName="DidEndContact">
        <MemberSignature Language="C#" Value="public static void DidEndContact (this SceneKit.ISCNPhysicsContactDelegate This, SceneKit.SCNPhysicsWorld world, SceneKit.SCNPhysicsContact contact);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidEndContact(class SceneKit.ISCNPhysicsContactDelegate This, class SceneKit.SCNPhysicsWorld world, class SceneKit.SCNPhysicsContact contact) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNPhysicsContactDelegate" RefType="this" />
          <Parameter Name="world" Type="MonoTouch.SceneKit.SCNPhysicsWorld" />
          <Parameter Name="contact" Type="MonoTouch.SceneKit.SCNPhysicsContact" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="world">To be added.</param>
          <param name="contact">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNPhysicsContactDelegate_Extensions" Member="M:MonoTouch.SceneKit.SCNPhysicsContactDelegate_Extensions.DidEndContact(MonoTouch.SceneKit.ISCNPhysicsContactDelegate,MonoTouch.SceneKit.SCNPhysicsWorld,MonoTouch.SceneKit.SCNPhysicsContact)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNPhysicsContactDelegate" />
      </Targets>
      <Member MemberName="DidUpdateContact">
        <MemberSignature Language="C#" Value="public static void DidUpdateContact (this SceneKit.ISCNPhysicsContactDelegate This, SceneKit.SCNPhysicsWorld world, SceneKit.SCNPhysicsContact contact);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateContact(class SceneKit.ISCNPhysicsContactDelegate This, class SceneKit.SCNPhysicsWorld world, class SceneKit.SCNPhysicsContact contact) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNPhysicsContactDelegate" RefType="this" />
          <Parameter Name="world" Type="MonoTouch.SceneKit.SCNPhysicsWorld" />
          <Parameter Name="contact" Type="MonoTouch.SceneKit.SCNPhysicsContact" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="world">To be added.</param>
          <param name="contact">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNPhysicsContactDelegate_Extensions" Member="M:MonoTouch.SceneKit.SCNPhysicsContactDelegate_Extensions.DidUpdateContact(MonoTouch.SceneKit.ISCNPhysicsContactDelegate,MonoTouch.SceneKit.SCNPhysicsWorld,MonoTouch.SceneKit.SCNPhysicsContact)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNProgramDelegate" />
      </Targets>
      <Member MemberName="HandleError">
        <MemberSignature Language="C#" Value="public static void HandleError (this SceneKit.ISCNProgramDelegate This, SceneKit.SCNProgram program, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleError(class SceneKit.ISCNProgramDelegate This, class SceneKit.SCNProgram program, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNProgramDelegate" RefType="this" />
          <Parameter Name="program" Type="MonoTouch.SceneKit.SCNProgram" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="program">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNProgramDelegate_Extensions" Member="M:MonoTouch.SceneKit.SCNProgramDelegate_Extensions.HandleError(MonoTouch.SceneKit.ISCNProgramDelegate,MonoTouch.SceneKit.SCNProgram,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneExportDelegate" />
      </Targets>
      <Member MemberName="WriteImage">
        <MemberSignature Language="C#" Value="public static Foundation.NSUrl WriteImage (this SceneKit.ISCNSceneExportDelegate This, UIKit.UIImage image, Foundation.NSUrl documentUrl, Foundation.NSUrl originalImageUrl);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSUrl WriteImage(class SceneKit.ISCNSceneExportDelegate This, class UIKit.UIImage image, class Foundation.NSUrl documentUrl, class Foundation.NSUrl originalImageUrl) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSUrl</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneExportDelegate" RefType="this" />
          <Parameter Name="image" Type="MonoTouch.UIKit.UIImage" />
          <Parameter Name="documentURL" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="originalImageURL" Type="MonoTouch.Foundation.NSUrl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="image">To be added.</param>
          <param name="documentUrl">To be added.</param>
          <param name="originalImageUrl">To be added.This parameter can be .</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneExportDelegate_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneExportDelegate_Extensions.WriteImage(MonoTouch.SceneKit.ISCNSceneExportDelegate,MonoTouch.UIKit.UIImage,MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSUrl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRenderer" />
      </Targets>
      <Member MemberName="GetAudioEngine">
        <MemberSignature Language="C#" Value="public static AVFoundation.AVAudioEngine GetAudioEngine (this SceneKit.ISCNSceneRenderer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AVFoundation.AVAudioEngine GetAudioEngine(class SceneKit.ISCNSceneRenderer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.AVFoundation.AVAudioEngine</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRenderer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the audio engine that is used to render sounds in the scene</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRenderer_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRenderer_Extensions.GetAudioEngine(MonoTouch.SceneKit.ISCNSceneRenderer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRenderer" />
      </Targets>
      <Member MemberName="GetAudioEnvironmentNode">
        <MemberSignature Language="C#" Value="public static AVFoundation.AVAudioEnvironmentNode GetAudioEnvironmentNode (this SceneKit.ISCNSceneRenderer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class AVFoundation.AVAudioEnvironmentNode GetAudioEnvironmentNode(class SceneKit.ISCNSceneRenderer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.AVFoundation.AVAudioEnvironmentNode</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRenderer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the audio environment node for the scene..</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRenderer_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRenderer_Extensions.GetAudioEnvironmentNode(MonoTouch.SceneKit.ISCNSceneRenderer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRenderer" />
      </Targets>
      <Member MemberName="GetAudioListener">
        <MemberSignature Language="C#" Value="public static SceneKit.SCNNode GetAudioListener (this SceneKit.ISCNSceneRenderer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SceneKit.SCNNode GetAudioListener(class SceneKit.ISCNSceneRenderer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.SceneKit.SCNNode</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRenderer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the node that represents the position of the listener in the scene.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRenderer_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRenderer_Extensions.GetAudioListener(MonoTouch.SceneKit.ISCNSceneRenderer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRenderer" />
      </Targets>
      <Member MemberName="GetColorPixelFormat">
        <MemberSignature Language="C#" Value="public static Metal.MTLPixelFormat GetColorPixelFormat (this SceneKit.ISCNSceneRenderer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Metal.MTLPixelFormat GetColorPixelFormat(class SceneKit.ISCNSceneRenderer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.MTLPixelFormat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRenderer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the format for color pixels..</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRenderer_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRenderer_Extensions.GetColorPixelFormat(MonoTouch.SceneKit.ISCNSceneRenderer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRenderer" />
      </Targets>
      <Member MemberName="GetCommandQueue">
        <MemberSignature Language="C#" Value="public static Metal.IMTLCommandQueue GetCommandQueue (this SceneKit.ISCNSceneRenderer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Metal.IMTLCommandQueue GetCommandQueue(class SceneKit.ISCNSceneRenderer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.IMTLCommandQueue</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRenderer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the command queue..</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRenderer_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRenderer_Extensions.GetCommandQueue(MonoTouch.SceneKit.ISCNSceneRenderer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRenderer" />
      </Targets>
      <Member MemberName="GetCurrentRenderCommandEncoder">
        <MemberSignature Language="C#" Value="public static Metal.IMTLRenderCommandEncoder GetCurrentRenderCommandEncoder (this SceneKit.ISCNSceneRenderer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Metal.IMTLRenderCommandEncoder GetCurrentRenderCommandEncoder(class SceneKit.ISCNSceneRenderer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.IMTLRenderCommandEncoder</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRenderer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the current command encoder that is used for rendering.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRenderer_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRenderer_Extensions.GetCurrentRenderCommandEncoder(MonoTouch.SceneKit.ISCNSceneRenderer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRenderer" />
      </Targets>
      <Member MemberName="GetDebugOptions">
        <MemberSignature Language="C#" Value="public static SceneKit.SCNDebugOptions GetDebugOptions (this SceneKit.ISCNSceneRenderer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SceneKit.SCNDebugOptions GetDebugOptions(class SceneKit.ISCNSceneRenderer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.SceneKit.SCNDebugOptions</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRenderer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns a value that controls which, if any, debug overlays to show in the rendered output..</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRenderer_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRenderer_Extensions.GetDebugOptions(MonoTouch.SceneKit.ISCNSceneRenderer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRenderer" />
      </Targets>
      <Member MemberName="GetDepthPixelFormat">
        <MemberSignature Language="C#" Value="public static Metal.MTLPixelFormat GetDepthPixelFormat (this SceneKit.ISCNSceneRenderer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Metal.MTLPixelFormat GetDepthPixelFormat(class SceneKit.ISCNSceneRenderer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.MTLPixelFormat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRenderer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the format for depth pixels.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRenderer_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRenderer_Extensions.GetDepthPixelFormat(MonoTouch.SceneKit.ISCNSceneRenderer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRenderer" />
      </Targets>
      <Member MemberName="GetDevice">
        <MemberSignature Language="C#" Value="public static Metal.IMTLDevice GetDevice (this SceneKit.ISCNSceneRenderer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Metal.IMTLDevice GetDevice(class SceneKit.ISCNSceneRenderer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.IMTLDevice</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRenderer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the metal device that is used for rendering.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRenderer_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRenderer_Extensions.GetDevice(MonoTouch.SceneKit.ISCNSceneRenderer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRenderer" />
      </Targets>
      <Member MemberName="GetNodesInsideFrustum">
        <MemberSignature Language="C#" Value="public static SceneKit.SCNNode[] GetNodesInsideFrustum (this SceneKit.ISCNSceneRenderer This, SceneKit.SCNNode pointOfView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SceneKit.SCNNode[] GetNodesInsideFrustum(class SceneKit.ISCNSceneRenderer This, class SceneKit.SCNNode pointOfView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.SceneKit.SCNNode[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRenderer" RefType="this" />
          <Parameter Name="pointOfView" Type="MonoTouch.SceneKit.SCNNode" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pointOfView">To be added.</param>
          <summary>Returns the nodes that are contained in the frustrum that is defined by the provided node.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRenderer_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRenderer_Extensions.GetNodesInsideFrustum(MonoTouch.SceneKit.ISCNSceneRenderer,MonoTouch.SceneKit.SCNNode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRenderer" />
      </Targets>
      <Member MemberName="GetRenderingApi">
        <MemberSignature Language="C#" Value="public static SceneKit.SCNRenderingApi GetRenderingApi (this SceneKit.ISCNSceneRenderer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype SceneKit.SCNRenderingApi GetRenderingApi(class SceneKit.ISCNSceneRenderer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.SceneKit.SCNRenderingApi</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRenderer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the rendering API that is used to render the scene.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRenderer_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRenderer_Extensions.GetRenderingApi(MonoTouch.SceneKit.ISCNSceneRenderer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRenderer" />
      </Targets>
      <Member MemberName="GetStencilPixelFormat">
        <MemberSignature Language="C#" Value="public static Metal.MTLPixelFormat GetStencilPixelFormat (this SceneKit.ISCNSceneRenderer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Metal.MTLPixelFormat GetStencilPixelFormat(class SceneKit.ISCNSceneRenderer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.MTLPixelFormat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRenderer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the format for stencil pixels..</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRenderer_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRenderer_Extensions.GetStencilPixelFormat(MonoTouch.SceneKit.ISCNSceneRenderer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRenderer" />
      </Targets>
      <Member MemberName="PrepareAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; PrepareAsync (this SceneKit.ISCNSceneRenderer This, Foundation.NSObject[] objects);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; PrepareAsync(class SceneKit.ISCNSceneRenderer This, class Foundation.NSObject[] objects) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRenderer" RefType="this" />
          <Parameter Name="objects" Type="MonoTouch.Foundation.NSObject[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="objects">To be added.</param>
          <summary>Asynchronously prepares content for smoothly rendering a new animated scene, returning a task that indicates whether scene preparation succeeded.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRenderer_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRenderer_Extensions.PrepareAsync(MonoTouch.SceneKit.ISCNSceneRenderer,MonoTouch.Foundation.NSObject[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRenderer" />
      </Targets>
      <Member MemberName="PresentScene">
        <MemberSignature Language="C#" Value="public static void PresentScene (this SceneKit.ISCNSceneRenderer This, SceneKit.SCNScene scene, SpriteKit.SKTransition transition, SceneKit.SCNNode pointOfView, Action completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PresentScene(class SceneKit.ISCNSceneRenderer This, class SceneKit.SCNScene scene, class SpriteKit.SKTransition transition, class SceneKit.SCNNode pointOfView, class System.Action completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRenderer" RefType="this" />
          <Parameter Name="scene" Type="MonoTouch.SceneKit.SCNScene" />
          <Parameter Name="transition" Type="MonoTouch.SpriteKit.SKTransition" />
          <Parameter Name="pointOfView" Type="MonoTouch.SceneKit.SCNNode" />
          <Parameter Name="completionHandler" Type="System.Action">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAction))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scene">To be added.</param>
          <param name="transition">To be added.</param>
          <param name="pointOfView">To be added.This parameter can be .</param>
          <param name="completionHandler">To be added.This parameter can be .</param>
          <summary>Displays the provided scene.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRenderer_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRenderer_Extensions.PresentScene(MonoTouch.SceneKit.ISCNSceneRenderer,MonoTouch.SceneKit.SCNScene,MonoTouch.SpriteKit.SKTransition,MonoTouch.SceneKit.SCNNode,System.Action)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRenderer" />
      </Targets>
      <Member MemberName="PresentSceneAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task PresentSceneAsync (this SceneKit.ISCNSceneRenderer This, SceneKit.SCNScene scene, SpriteKit.SKTransition transition, SceneKit.SCNNode pointOfView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task PresentSceneAsync(class SceneKit.ISCNSceneRenderer This, class SceneKit.SCNScene scene, class SpriteKit.SKTransition transition, class SceneKit.SCNNode pointOfView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRenderer" RefType="this" />
          <Parameter Name="scene" Type="MonoTouch.SceneKit.SCNScene" />
          <Parameter Name="transition" Type="MonoTouch.SpriteKit.SKTransition" />
          <Parameter Name="pointOfView" Type="MonoTouch.SceneKit.SCNNode" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scene">To be added.</param>
          <param name="transition">To be added.</param>
          <param name="pointOfView">To be added.This parameter can be .</param>
          <summary>Asynchronously presents the scene, returning a task that represents the operation.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRenderer_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRenderer_Extensions.PresentSceneAsync(MonoTouch.SceneKit.ISCNSceneRenderer,MonoTouch.SceneKit.SCNScene,MonoTouch.SpriteKit.SKTransition,MonoTouch.SceneKit.SCNNode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRenderer" />
      </Targets>
      <Member MemberName="SetAudioListener">
        <MemberSignature Language="C#" Value="public static void SetAudioListener (this SceneKit.ISCNSceneRenderer This, SceneKit.SCNNode value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAudioListener(class SceneKit.ISCNSceneRenderer This, class SceneKit.SCNNode value) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRenderer" RefType="this" />
          <Parameter Name="value" Type="MonoTouch.SceneKit.SCNNode" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="value">To be added.</param>
          <summary>Sets the node that represents the position of the listener in the scene.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRenderer_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRenderer_Extensions.SetAudioListener(MonoTouch.SceneKit.ISCNSceneRenderer,MonoTouch.SceneKit.SCNNode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRenderer" />
      </Targets>
      <Member MemberName="SetDebugOptions">
        <MemberSignature Language="C#" Value="public static void SetDebugOptions (this SceneKit.ISCNSceneRenderer This, SceneKit.SCNDebugOptions value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDebugOptions(class SceneKit.ISCNSceneRenderer This, valuetype SceneKit.SCNDebugOptions value) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRenderer" RefType="this" />
          <Parameter Name="value" Type="MonoTouch.SceneKit.SCNDebugOptions" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="value">To be added.</param>
          <summary>Sets a value that controls which, if any, debug overlays to show in the rendered output.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRenderer_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRenderer_Extensions.SetDebugOptions(MonoTouch.SceneKit.ISCNSceneRenderer,MonoTouch.SceneKit.SCNDebugOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRendererDelegate" />
      </Targets>
      <Member MemberName="DidApplyAnimations">
        <MemberSignature Language="C#" Value="public static void DidApplyAnimations (this SceneKit.ISCNSceneRendererDelegate This, SceneKit.ISCNSceneRenderer renderer, double timeInSeconds);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidApplyAnimations(class SceneKit.ISCNSceneRendererDelegate This, class SceneKit.ISCNSceneRenderer renderer, float64 timeInSeconds) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRendererDelegate" RefType="this" />
          <Parameter Name="renderer" Type="MonoTouch.SceneKit.ISCNSceneRenderer" />
          <Parameter Name="timeInSeconds" Type="System.Double" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="renderer">To be added.</param>
          <param name="timeInSeconds">To be added.</param>
          <summary>Developers may override this method to react to the completion of animations.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRendererDelegate_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRendererDelegate_Extensions.DidApplyAnimations(MonoTouch.SceneKit.ISCNSceneRendererDelegate,MonoTouch.SceneKit.ISCNSceneRenderer,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRendererDelegate" />
      </Targets>
      <Member MemberName="DidApplyConstraints">
        <MemberSignature Language="C#" Value="public static void DidApplyConstraints (this SceneKit.ISCNSceneRendererDelegate This, SceneKit.ISCNSceneRenderer renderer, double atTime);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidApplyConstraints(class SceneKit.ISCNSceneRendererDelegate This, class SceneKit.ISCNSceneRenderer renderer, float64 atTime) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRendererDelegate" RefType="this" />
          <Parameter Name="renderer" Type="MonoTouch.SceneKit.ISCNSceneRenderer" />
          <Parameter Name="atTime" Type="System.Double" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="renderer">To be added.</param>
          <param name="atTime">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRendererDelegate_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRendererDelegate_Extensions.DidApplyConstraints(MonoTouch.SceneKit.ISCNSceneRendererDelegate,MonoTouch.SceneKit.ISCNSceneRenderer,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRendererDelegate" />
      </Targets>
      <Member MemberName="DidRenderScene">
        <MemberSignature Language="C#" Value="public static void DidRenderScene (this SceneKit.ISCNSceneRendererDelegate This, SceneKit.ISCNSceneRenderer renderer, SceneKit.SCNScene scene, double timeInSeconds);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRenderScene(class SceneKit.ISCNSceneRendererDelegate This, class SceneKit.ISCNSceneRenderer renderer, class SceneKit.SCNScene scene, float64 timeInSeconds) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRendererDelegate" RefType="this" />
          <Parameter Name="renderer" Type="MonoTouch.SceneKit.ISCNSceneRenderer" />
          <Parameter Name="scene" Type="MonoTouch.SceneKit.SCNScene" />
          <Parameter Name="timeInSeconds" Type="System.Double" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="renderer">To be added.</param>
          <param name="scene">To be added.</param>
          <param name="timeInSeconds">To be added.</param>
          <summary>This method is called shortly after the scene has been rendered.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRendererDelegate_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRendererDelegate_Extensions.DidRenderScene(MonoTouch.SceneKit.ISCNSceneRendererDelegate,MonoTouch.SceneKit.ISCNSceneRenderer,MonoTouch.SceneKit.SCNScene,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRendererDelegate" />
      </Targets>
      <Member MemberName="DidSimulatePhysics">
        <MemberSignature Language="C#" Value="public static void DidSimulatePhysics (this SceneKit.ISCNSceneRendererDelegate This, SceneKit.ISCNSceneRenderer renderer, double timeInSeconds);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSimulatePhysics(class SceneKit.ISCNSceneRendererDelegate This, class SceneKit.ISCNSceneRenderer renderer, float64 timeInSeconds) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRendererDelegate" RefType="this" />
          <Parameter Name="renderer" Type="MonoTouch.SceneKit.ISCNSceneRenderer" />
          <Parameter Name="timeInSeconds" Type="System.Double" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="renderer">To be added.</param>
          <param name="timeInSeconds">To be added.</param>
          <summary>This method is called shortly after physics have been simulated.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRendererDelegate_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRendererDelegate_Extensions.DidSimulatePhysics(MonoTouch.SceneKit.ISCNSceneRendererDelegate,MonoTouch.SceneKit.ISCNSceneRenderer,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRendererDelegate" />
      </Targets>
      <Member MemberName="Update">
        <MemberSignature Language="C#" Value="public static void Update (this SceneKit.ISCNSceneRendererDelegate This, SceneKit.ISCNSceneRenderer renderer, double timeInSeconds);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Update(class SceneKit.ISCNSceneRendererDelegate This, class SceneKit.ISCNSceneRenderer renderer, float64 timeInSeconds) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRendererDelegate" RefType="this" />
          <Parameter Name="renderer" Type="MonoTouch.SceneKit.ISCNSceneRenderer" />
          <Parameter Name="timeInSeconds" Type="System.Double" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="renderer">To be added.</param>
          <param name="timeInSeconds">To be added.</param>
          <summary>Developers may override this method to perform processing prior to any actions, animations, or physics simulations.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRendererDelegate_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRendererDelegate_Extensions.Update(MonoTouch.SceneKit.ISCNSceneRendererDelegate,MonoTouch.SceneKit.ISCNSceneRenderer,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRendererDelegate" />
      </Targets>
      <Member MemberName="WillRenderScene">
        <MemberSignature Language="C#" Value="public static void WillRenderScene (this SceneKit.ISCNSceneRendererDelegate This, SceneKit.ISCNSceneRenderer renderer, SceneKit.SCNScene scene, double timeInSeconds);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillRenderScene(class SceneKit.ISCNSceneRendererDelegate This, class SceneKit.ISCNSceneRenderer renderer, class SceneKit.SCNScene scene, float64 timeInSeconds) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRendererDelegate" RefType="this" />
          <Parameter Name="renderer" Type="MonoTouch.SceneKit.ISCNSceneRenderer" />
          <Parameter Name="scene" Type="MonoTouch.SceneKit.SCNScene" />
          <Parameter Name="timeInSeconds" Type="System.Double" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="renderer">To be added.</param>
          <param name="scene">To be added.</param>
          <param name="timeInSeconds">To be added.</param>
          <summary>Developers may override this method to do processing immediately prior to the rendering of the scene.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRendererDelegate_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRendererDelegate_Extensions.WillRenderScene(MonoTouch.SceneKit.ISCNSceneRendererDelegate,MonoTouch.SceneKit.ISCNSceneRenderer,MonoTouch.SceneKit.SCNScene,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNShadable" />
      </Targets>
      <Member MemberName="GetProgram">
        <MemberSignature Language="C#" Value="public static SceneKit.SCNProgram GetProgram (this SceneKit.ISCNShadable This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class SceneKit.SCNProgram GetProgram(class SceneKit.ISCNShadable This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.SceneKit.SCNProgram</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNShadable" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNShadable_Extensions" Member="M:MonoTouch.SceneKit.SCNShadable_Extensions.GetProgram(MonoTouch.SceneKit.ISCNShadable)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNShadable" />
      </Targets>
      <Member MemberName="GetWeakShaderModifiers">
        <MemberSignature Language="C#" Value="public static Foundation.NSDictionary GetWeakShaderModifiers (this SceneKit.ISCNShadable This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSDictionary GetWeakShaderModifiers(class SceneKit.ISCNShadable This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSDictionary</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNShadable" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNShadable_Extensions" Member="M:MonoTouch.SceneKit.SCNShadable_Extensions.GetWeakShaderModifiers(MonoTouch.SceneKit.ISCNShadable)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNShadable" />
      </Targets>
      <Member MemberName="HandleBinding">
        <MemberSignature Language="C#" Value="public static void HandleBinding (this SceneKit.ISCNShadable This, string symbol, SceneKit.SCNBindingHandler handler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleBinding(class SceneKit.ISCNShadable This, string symbol, class SceneKit.SCNBindingHandler handler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNShadable" RefType="this" />
          <Parameter Name="symbol" Type="System.String" />
          <Parameter Name="handler" Type="MonoTouch.SceneKit.SCNBindingHandler">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDSCNBindingHandler))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="symbol">To be added.</param>
          <param name="handler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNShadable_Extensions" Member="M:MonoTouch.SceneKit.SCNShadable_Extensions.HandleBinding(MonoTouch.SceneKit.ISCNShadable,System.String,MonoTouch.SceneKit.SCNBindingHandler)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNShadable" />
      </Targets>
      <Member MemberName="HandleUnbinding">
        <MemberSignature Language="C#" Value="public static void HandleUnbinding (this SceneKit.ISCNShadable This, string symbol, SceneKit.SCNBindingHandler handler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleUnbinding(class SceneKit.ISCNShadable This, string symbol, class SceneKit.SCNBindingHandler handler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNShadable" RefType="this" />
          <Parameter Name="symbol" Type="System.String" />
          <Parameter Name="handler" Type="MonoTouch.SceneKit.SCNBindingHandler">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDSCNBindingHandler))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="symbol">To be added.</param>
          <param name="handler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNShadable_Extensions" Member="M:MonoTouch.SceneKit.SCNShadable_Extensions.HandleUnbinding(MonoTouch.SceneKit.ISCNShadable,System.String,MonoTouch.SceneKit.SCNBindingHandler)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNShadable" />
      </Targets>
      <Member MemberName="SetProgram">
        <MemberSignature Language="C#" Value="public static void SetProgram (this SceneKit.ISCNShadable This, SceneKit.SCNProgram value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetProgram(class SceneKit.ISCNShadable This, class SceneKit.SCNProgram value) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNShadable" RefType="this" />
          <Parameter Name="value" Type="MonoTouch.SceneKit.SCNProgram" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="value">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNShadable_Extensions" Member="M:MonoTouch.SceneKit.SCNShadable_Extensions.SetProgram(MonoTouch.SceneKit.ISCNShadable,MonoTouch.SceneKit.SCNProgram)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNShadable" />
      </Targets>
      <Member MemberName="SetWeakShaderModifiers">
        <MemberSignature Language="C#" Value="public static void SetWeakShaderModifiers (this SceneKit.ISCNShadable This, Foundation.NSDictionary value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetWeakShaderModifiers(class SceneKit.ISCNShadable This, class Foundation.NSDictionary value) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNShadable" RefType="this" />
          <Parameter Name="value" Type="MonoTouch.Foundation.NSDictionary" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="value">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNShadable_Extensions" Member="M:MonoTouch.SceneKit.SCNShadable_Extensions.SetWeakShaderModifiers(MonoTouch.SceneKit.ISCNShadable,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Security.SecAuthenticationUI" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this Security.SecAuthenticationUI self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype Security.SecAuthenticationUI self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.Security.SecAuthenticationUI" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Security.SecAuthenticationUIExtensions" Member="M:MonoTouch.Security.SecAuthenticationUIExtensions.GetConstant(MonoTouch.Security.SecAuthenticationUI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Security.SecKeyAlgorithm" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this Security.SecKeyAlgorithm self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype Security.SecKeyAlgorithm self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.Security.SecKeyAlgorithm" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Security.SecKeyAlgorithmExtensions" Member="M:MonoTouch.Security.SecKeyAlgorithmExtensions.GetConstant(MonoTouch.Security.SecKeyAlgorithm)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Security.SecKeyClass" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this Security.SecKeyClass self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype Security.SecKeyClass self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.Security.SecKeyClass" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Security.SecKeyClassExtensions" Member="M:MonoTouch.Security.SecKeyClassExtensions.GetConstant(MonoTouch.Security.SecKeyClass)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Security.SecKeyType" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this Security.SecKeyType self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype Security.SecKeyType self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.Security.SecKeyType" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Security.SecKeyTypeExtensions" Member="M:MonoTouch.Security.SecKeyTypeExtensions.GetConstant(MonoTouch.Security.SecKeyType)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Security.SecTokenID" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this Security.SecTokenID self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype Security.SecTokenID self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.Security.SecTokenID" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Security.SecTokenIDExtensions" Member="M:MonoTouch.Security.SecTokenIDExtensions.GetConstant(MonoTouch.Security.SecTokenID)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Security.SslSessionConfig" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this Security.SslSessionConfig self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype Security.SslSessionConfig self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.Security.SslSessionConfig" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Security.SslSessionConfigExtensions" Member="M:MonoTouch.Security.SslSessionConfigExtensions.GetConstant(MonoTouch.Security.SslSessionConfig)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate" />
      </Targets>
      <Member MemberName="DidDetectSpeech">
        <MemberSignature Language="C#" Value="public static void DidDetectSpeech (this Speech.ISFSpeechRecognitionTaskDelegate This, Speech.SFSpeechRecognitionTask task);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDetectSpeech(class Speech.ISFSpeechRecognitionTaskDelegate This, class Speech.SFSpeechRecognitionTask task) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate" RefType="this" />
          <Parameter Name="task" Type="MonoTouch.Speech.SFSpeechRecognitionTask" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="task">The  for which this is the delegate object.</param>
          <summary>The system calls this method periodically as speech is detected.</summary>
        </Docs>
        <Link Type="MonoTouch.Speech.SFSpeechRecognitionTaskDelegate_Extensions" Member="M:MonoTouch.Speech.SFSpeechRecognitionTaskDelegate_Extensions.DidDetectSpeech(MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate,MonoTouch.Speech.SFSpeechRecognitionTask)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate" />
      </Targets>
      <Member MemberName="DidFinishRecognition">
        <MemberSignature Language="C#" Value="public static void DidFinishRecognition (this Speech.ISFSpeechRecognitionTaskDelegate This, Speech.SFSpeechRecognitionTask task, Speech.SFSpeechRecognitionResult recognitionResult);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinishRecognition(class Speech.ISFSpeechRecognitionTaskDelegate This, class Speech.SFSpeechRecognitionTask task, class Speech.SFSpeechRecognitionResult recognitionResult) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate" RefType="this" />
          <Parameter Name="task" Type="MonoTouch.Speech.SFSpeechRecognitionTask" />
          <Parameter Name="recognitionResult" Type="MonoTouch.Speech.SFSpeechRecognitionResult" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="task">The  for which this is the delegate object.</param>
          <param name="recognitionResult">To be added.</param>
          <summary>The system calls this method  after it has completed recognition.</summary>
        </Docs>
        <Link Type="MonoTouch.Speech.SFSpeechRecognitionTaskDelegate_Extensions" Member="M:MonoTouch.Speech.SFSpeechRecognitionTaskDelegate_Extensions.DidFinishRecognition(MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate,MonoTouch.Speech.SFSpeechRecognitionTask,MonoTouch.Speech.SFSpeechRecognitionResult)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate" />
      </Targets>
      <Member MemberName="DidFinishSuccessfully">
        <MemberSignature Language="C#" Value="public static void DidFinishSuccessfully (this Speech.ISFSpeechRecognitionTaskDelegate This, Speech.SFSpeechRecognitionTask task, bool successfully);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinishSuccessfully(class Speech.ISFSpeechRecognitionTaskDelegate This, class Speech.SFSpeechRecognitionTask task, bool successfully) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate" RefType="this" />
          <Parameter Name="task" Type="MonoTouch.Speech.SFSpeechRecognitionTask" />
          <Parameter Name="successfully" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="task">The  for which this is the delegate object.</param>
          <param name="successfully"> if the speech recognition ended without error or cancellation.</param>
          <summary>The system calls this method after the <paramref name="task" /> has finished.</summary>
        </Docs>
        <Link Type="MonoTouch.Speech.SFSpeechRecognitionTaskDelegate_Extensions" Member="M:MonoTouch.Speech.SFSpeechRecognitionTaskDelegate_Extensions.DidFinishSuccessfully(MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate,MonoTouch.Speech.SFSpeechRecognitionTask,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate" />
      </Targets>
      <Member MemberName="DidHypothesizeTranscription">
        <MemberSignature Language="C#" Value="public static void DidHypothesizeTranscription (this Speech.ISFSpeechRecognitionTaskDelegate This, Speech.SFSpeechRecognitionTask task, Speech.SFTranscription transcription);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidHypothesizeTranscription(class Speech.ISFSpeechRecognitionTaskDelegate This, class Speech.SFSpeechRecognitionTask task, class Speech.SFTranscription transcription) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate" RefType="this" />
          <Parameter Name="task" Type="MonoTouch.Speech.SFSpeechRecognitionTask" />
          <Parameter Name="transcription" Type="MonoTouch.Speech.SFTranscription" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="task">The  for which this is the delegate object.</param>
          <param name="transcription">To be added.</param>
          <summary>The system calls this method periodically, as the speech recognition attempts to refine the results.</summary>
        </Docs>
        <Link Type="MonoTouch.Speech.SFSpeechRecognitionTaskDelegate_Extensions" Member="M:MonoTouch.Speech.SFSpeechRecognitionTaskDelegate_Extensions.DidHypothesizeTranscription(MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate,MonoTouch.Speech.SFSpeechRecognitionTask,MonoTouch.Speech.SFTranscription)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate" />
      </Targets>
      <Member MemberName="FinishedReadingAudio">
        <MemberSignature Language="C#" Value="public static void FinishedReadingAudio (this Speech.ISFSpeechRecognitionTaskDelegate This, Speech.SFSpeechRecognitionTask task);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FinishedReadingAudio(class Speech.ISFSpeechRecognitionTaskDelegate This, class Speech.SFSpeechRecognitionTask task) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate" RefType="this" />
          <Parameter Name="task" Type="MonoTouch.Speech.SFSpeechRecognitionTask" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="task">The  for which this is the delegate object.</param>
          <summary>Called by the system after the audio input has finished.</summary>
        </Docs>
        <Link Type="MonoTouch.Speech.SFSpeechRecognitionTaskDelegate_Extensions" Member="M:MonoTouch.Speech.SFSpeechRecognitionTaskDelegate_Extensions.FinishedReadingAudio(MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate,MonoTouch.Speech.SFSpeechRecognitionTask)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate" />
      </Targets>
      <Member MemberName="WasCancelled">
        <MemberSignature Language="C#" Value="public static void WasCancelled (this Speech.ISFSpeechRecognitionTaskDelegate This, Speech.SFSpeechRecognitionTask task);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WasCancelled(class Speech.ISFSpeechRecognitionTaskDelegate This, class Speech.SFSpeechRecognitionTask task) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate" RefType="this" />
          <Parameter Name="task" Type="MonoTouch.Speech.SFSpeechRecognitionTask" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="task">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Speech.SFSpeechRecognitionTaskDelegate_Extensions" Member="M:MonoTouch.Speech.SFSpeechRecognitionTaskDelegate_Extensions.WasCancelled(MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate,MonoTouch.Speech.SFSpeechRecognitionTask)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Speech.ISFSpeechRecognizerDelegate" />
      </Targets>
      <Member MemberName="AvailabilityDidChange">
        <MemberSignature Language="C#" Value="public static void AvailabilityDidChange (this Speech.ISFSpeechRecognizerDelegate This, Speech.SFSpeechRecognizer speechRecognizer, bool available);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AvailabilityDidChange(class Speech.ISFSpeechRecognizerDelegate This, class Speech.SFSpeechRecognizer speechRecognizer, bool available) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Speech.ISFSpeechRecognizerDelegate" RefType="this" />
          <Parameter Name="speechRecognizer" Type="MonoTouch.Speech.SFSpeechRecognizer" />
          <Parameter Name="available" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="speechRecognizer">To be added.</param>
          <param name="available"> if speech recognition is permitted.</param>
          <summary>The system calls this when the availability of speech recognition has been changed.</summary>
        </Docs>
        <Link Type="MonoTouch.Speech.SFSpeechRecognizerDelegate_Extensions" Member="M:MonoTouch.Speech.SFSpeechRecognizerDelegate_Extensions.AvailabilityDidChange(MonoTouch.Speech.ISFSpeechRecognizerDelegate,MonoTouch.Speech.SFSpeechRecognizer,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UITouch" />
      </Targets>
      <Member MemberName="LocationInNode">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGPoint LocationInNode (this UIKit.UITouch This, SpriteKit.SKNode node);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGPoint LocationInNode(class UIKit.UITouch This, class SpriteKit.SKNode node) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGPoint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UITouch" RefType="this" />
          <Parameter Name="node" Type="MonoTouch.SpriteKit.SKNode" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="node">To be added.</param>
          <summary>The current position of <c>this</c> in the coordinate system of <paramref name="node" />.</summary>
        </Docs>
        <Link Type="MonoTouch.SpriteKit.SKNodeTouches_UITouch" Member="M:MonoTouch.SpriteKit.SKNodeTouches_UITouch.LocationInNode(MonoTouch.UIKit.UITouch,MonoTouch.SpriteKit.SKNode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UITouch" />
      </Targets>
      <Member MemberName="PreviousLocationInNode">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGPoint PreviousLocationInNode (this UIKit.UITouch This, SpriteKit.SKNode node);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGPoint PreviousLocationInNode(class UIKit.UITouch This, class SpriteKit.SKNode node) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGPoint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UITouch" RefType="this" />
          <Parameter Name="node" Type="MonoTouch.SpriteKit.SKNode" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="node">To be added.</param>
          <summary>The previous location of <c>this</c> in the coordinate system of <paramref name="node" />.</summary>
        </Docs>
        <Link Type="MonoTouch.SpriteKit.SKNodeTouches_UITouch" Member="M:MonoTouch.SpriteKit.SKNodeTouches_UITouch.PreviousLocationInNode(MonoTouch.UIKit.UITouch,MonoTouch.SpriteKit.SKNode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SpriteKit.ISKPhysicsContactDelegate" />
      </Targets>
      <Member MemberName="DidBeginContact">
        <MemberSignature Language="C#" Value="public static void DidBeginContact (this SpriteKit.ISKPhysicsContactDelegate This, SpriteKit.SKPhysicsContact contact);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidBeginContact(class SpriteKit.ISKPhysicsContactDelegate This, class SpriteKit.SKPhysicsContact contact) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SpriteKit.ISKPhysicsContactDelegate" RefType="this" />
          <Parameter Name="contact" Type="MonoTouch.SpriteKit.SKPhysicsContact" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="contact">To be added.</param>
          <summary>Method that is called when contact is started.</summary>
        </Docs>
        <Link Type="MonoTouch.SpriteKit.SKPhysicsContactDelegate_Extensions" Member="M:MonoTouch.SpriteKit.SKPhysicsContactDelegate_Extensions.DidBeginContact(MonoTouch.SpriteKit.ISKPhysicsContactDelegate,MonoTouch.SpriteKit.SKPhysicsContact)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SpriteKit.ISKPhysicsContactDelegate" />
      </Targets>
      <Member MemberName="DidEndContact">
        <MemberSignature Language="C#" Value="public static void DidEndContact (this SpriteKit.ISKPhysicsContactDelegate This, SpriteKit.SKPhysicsContact contact);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidEndContact(class SpriteKit.ISKPhysicsContactDelegate This, class SpriteKit.SKPhysicsContact contact) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SpriteKit.ISKPhysicsContactDelegate" RefType="this" />
          <Parameter Name="contact" Type="MonoTouch.SpriteKit.SKPhysicsContact" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="contact">To be added.</param>
          <summary>Method that is called after contact ends.</summary>
        </Docs>
        <Link Type="MonoTouch.SpriteKit.SKPhysicsContactDelegate_Extensions" Member="M:MonoTouch.SpriteKit.SKPhysicsContactDelegate_Extensions.DidEndContact(MonoTouch.SpriteKit.ISKPhysicsContactDelegate,MonoTouch.SpriteKit.SKPhysicsContact)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SpriteKit.ISKSceneDelegate" />
      </Targets>
      <Member MemberName="DidApplyConstraints">
        <MemberSignature Language="C#" Value="public static void DidApplyConstraints (this SpriteKit.ISKSceneDelegate This, SpriteKit.SKScene scene);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidApplyConstraints(class SpriteKit.ISKSceneDelegate This, class SpriteKit.SKScene scene) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SpriteKit.ISKSceneDelegate" RefType="this" />
          <Parameter Name="scene" Type="MonoTouch.SpriteKit.SKScene" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scene">To be added.</param>
          <summary>Method that is called after constraints are applied to <paramref name="scene" />.</summary>
        </Docs>
        <Link Type="MonoTouch.SpriteKit.SKSceneDelegate_Extensions" Member="M:MonoTouch.SpriteKit.SKSceneDelegate_Extensions.DidApplyConstraints(MonoTouch.SpriteKit.ISKSceneDelegate,MonoTouch.SpriteKit.SKScene)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SpriteKit.ISKSceneDelegate" />
      </Targets>
      <Member MemberName="DidEvaluateActions">
        <MemberSignature Language="C#" Value="public static void DidEvaluateActions (this SpriteKit.ISKSceneDelegate This, SpriteKit.SKScene scene);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidEvaluateActions(class SpriteKit.ISKSceneDelegate This, class SpriteKit.SKScene scene) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SpriteKit.ISKSceneDelegate" RefType="this" />
          <Parameter Name="scene" Type="MonoTouch.SpriteKit.SKScene" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scene">To be added.</param>
          <summary>Method that is called after all scene actions are evaluated for <paramref name="scene" />.</summary>
        </Docs>
        <Link Type="MonoTouch.SpriteKit.SKSceneDelegate_Extensions" Member="M:MonoTouch.SpriteKit.SKSceneDelegate_Extensions.DidEvaluateActions(MonoTouch.SpriteKit.ISKSceneDelegate,MonoTouch.SpriteKit.SKScene)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SpriteKit.ISKSceneDelegate" />
      </Targets>
      <Member MemberName="DidFinishUpdate">
        <MemberSignature Language="C#" Value="public static void DidFinishUpdate (this SpriteKit.ISKSceneDelegate This, SpriteKit.SKScene scene);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinishUpdate(class SpriteKit.ISKSceneDelegate This, class SpriteKit.SKScene scene) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SpriteKit.ISKSceneDelegate" RefType="this" />
          <Parameter Name="scene" Type="MonoTouch.SpriteKit.SKScene" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scene">To be added.</param>
          <summary>Method that is called after the <paramref name="scene" /> is updated.</summary>
        </Docs>
        <Link Type="MonoTouch.SpriteKit.SKSceneDelegate_Extensions" Member="M:MonoTouch.SpriteKit.SKSceneDelegate_Extensions.DidFinishUpdate(MonoTouch.SpriteKit.ISKSceneDelegate,MonoTouch.SpriteKit.SKScene)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SpriteKit.ISKSceneDelegate" />
      </Targets>
      <Member MemberName="DidSimulatePhysics">
        <MemberSignature Language="C#" Value="public static void DidSimulatePhysics (this SpriteKit.ISKSceneDelegate This, SpriteKit.SKScene scene);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSimulatePhysics(class SpriteKit.ISKSceneDelegate This, class SpriteKit.SKScene scene) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SpriteKit.ISKSceneDelegate" RefType="this" />
          <Parameter Name="scene" Type="MonoTouch.SpriteKit.SKScene" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scene">To be added.</param>
          <summary>Method that is called after physics simulation for <paramref name="scene" /> is complete.</summary>
        </Docs>
        <Link Type="MonoTouch.SpriteKit.SKSceneDelegate_Extensions" Member="M:MonoTouch.SpriteKit.SKSceneDelegate_Extensions.DidSimulatePhysics(MonoTouch.SpriteKit.ISKSceneDelegate,MonoTouch.SpriteKit.SKScene)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SpriteKit.ISKSceneDelegate" />
      </Targets>
      <Member MemberName="Update">
        <MemberSignature Language="C#" Value="public static void Update (this SpriteKit.ISKSceneDelegate This, double currentTime, SpriteKit.SKScene scene);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Update(class SpriteKit.ISKSceneDelegate This, float64 currentTime, class SpriteKit.SKScene scene) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SpriteKit.ISKSceneDelegate" RefType="this" />
          <Parameter Name="currentTime" Type="System.Double" />
          <Parameter Name="scene" Type="MonoTouch.SpriteKit.SKScene" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="currentTime">To be added.</param>
          <param name="scene">To be added.</param>
          <summary>Method that is called once per frame, if <paramref name="scene" /> is presented and not paused, before any animation takes place.</summary>
        </Docs>
        <Link Type="MonoTouch.SpriteKit.SKSceneDelegate_Extensions" Member="M:MonoTouch.SpriteKit.SKSceneDelegate_Extensions.Update(MonoTouch.SpriteKit.ISKSceneDelegate,System.Double,MonoTouch.SpriteKit.SKScene)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SpriteKit.ISKViewDelegate" />
      </Targets>
      <Member MemberName="ShouldRender">
        <MemberSignature Language="C#" Value="public static bool ShouldRender (this SpriteKit.ISKViewDelegate This, SpriteKit.SKView view, double time);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldRender(class SpriteKit.ISKViewDelegate This, class SpriteKit.SKView view, float64 time) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SpriteKit.ISKViewDelegate" RefType="this" />
          <Parameter Name="view" Type="MonoTouch.SpriteKit.SKView" />
          <Parameter Name="time" Type="System.Double" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="view">To be added.</param>
          <param name="time">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SpriteKit.SKViewDelegate_Extensions" Member="M:MonoTouch.SpriteKit.SKViewDelegate_Extensions.ShouldRender(MonoTouch.SpriteKit.ISKViewDelegate,MonoTouch.SpriteKit.SKView,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.StoreKit.SKCloudServiceSetupAction" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this StoreKit.SKCloudServiceSetupAction self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype StoreKit.SKCloudServiceSetupAction self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.StoreKit.SKCloudServiceSetupAction" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>Returns the constant string for the value.</summary>
        </Docs>
        <Link Type="MonoTouch.StoreKit.SKCloudServiceSetupActionExtensions" Member="M:MonoTouch.StoreKit.SKCloudServiceSetupActionExtensions.GetConstant(MonoTouch.StoreKit.SKCloudServiceSetupAction)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.StoreKit.SKCloudServiceSetupMessageIdentifier" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this StoreKit.SKCloudServiceSetupMessageIdentifier self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype StoreKit.SKCloudServiceSetupMessageIdentifier self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.StoreKit.SKCloudServiceSetupMessageIdentifier" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>Returns the constant string for the value.</summary>
        </Docs>
        <Link Type="MonoTouch.StoreKit.SKCloudServiceSetupMessageIdentifierExtensions" Member="M:MonoTouch.StoreKit.SKCloudServiceSetupMessageIdentifierExtensions.GetConstant(MonoTouch.StoreKit.SKCloudServiceSetupMessageIdentifier)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.StoreKit.ISKCloudServiceSetupViewControllerDelegate" />
      </Targets>
      <Member MemberName="DidDismiss">
        <MemberSignature Language="C#" Value="public static void DidDismiss (this StoreKit.ISKCloudServiceSetupViewControllerDelegate This, StoreKit.SKCloudServiceSetupViewController cloudServiceSetupViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDismiss(class StoreKit.ISKCloudServiceSetupViewControllerDelegate This, class StoreKit.SKCloudServiceSetupViewController cloudServiceSetupViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.StoreKit.ISKCloudServiceSetupViewControllerDelegate" RefType="this" />
          <Parameter Name="cloudServiceSetupViewController" Type="MonoTouch.StoreKit.SKCloudServiceSetupViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="cloudServiceSetupViewController">To be added.</param>
          <summary>Method that is called after the setup view has been dismissed.</summary>
        </Docs>
        <Link Type="MonoTouch.StoreKit.SKCloudServiceSetupViewControllerDelegate_Extensions" Member="M:MonoTouch.StoreKit.SKCloudServiceSetupViewControllerDelegate_Extensions.DidDismiss(MonoTouch.StoreKit.ISKCloudServiceSetupViewControllerDelegate,MonoTouch.StoreKit.SKCloudServiceSetupViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.StoreKit.SKError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this StoreKit.SKError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype StoreKit.SKError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.StoreKit.SKError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.StoreKit.SKError value</summary>
        </Docs>
        <Link Type="MonoTouch.StoreKit.SKErrorExtensions" Member="M:MonoTouch.StoreKit.SKErrorExtensions.GetDomain(MonoTouch.StoreKit.SKError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.StoreKit.ISKPaymentTransactionObserver" />
      </Targets>
      <Member MemberName="RemovedTransactions">
        <MemberSignature Language="C#" Value="public static void RemovedTransactions (this StoreKit.ISKPaymentTransactionObserver This, StoreKit.SKPaymentQueue queue, StoreKit.SKPaymentTransaction[] transactions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovedTransactions(class StoreKit.ISKPaymentTransactionObserver This, class StoreKit.SKPaymentQueue queue, class StoreKit.SKPaymentTransaction[] transactions) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.StoreKit.ISKPaymentTransactionObserver" RefType="this" />
          <Parameter Name="queue" Type="MonoTouch.StoreKit.SKPaymentQueue" />
          <Parameter Name="transactions" Type="MonoTouch.StoreKit.SKPaymentTransaction[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="queue">To be added.</param>
          <param name="transactions">To be added.</param>
          <summary>Method that is called after transactions have been removed from the queue.</summary>
        </Docs>
        <Link Type="MonoTouch.StoreKit.SKPaymentTransactionObserver_Extensions" Member="M:MonoTouch.StoreKit.SKPaymentTransactionObserver_Extensions.RemovedTransactions(MonoTouch.StoreKit.ISKPaymentTransactionObserver,MonoTouch.StoreKit.SKPaymentQueue,MonoTouch.StoreKit.SKPaymentTransaction[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.StoreKit.ISKPaymentTransactionObserver" />
      </Targets>
      <Member MemberName="RestoreCompletedTransactionsFailedWithError">
        <MemberSignature Language="C#" Value="public static void RestoreCompletedTransactionsFailedWithError (this StoreKit.ISKPaymentTransactionObserver This, StoreKit.SKPaymentQueue queue, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RestoreCompletedTransactionsFailedWithError(class StoreKit.ISKPaymentTransactionObserver This, class StoreKit.SKPaymentQueue queue, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.StoreKit.ISKPaymentTransactionObserver" RefType="this" />
          <Parameter Name="queue" Type="MonoTouch.StoreKit.SKPaymentQueue" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="queue">To be added.</param>
          <param name="error">To be added.</param>
          <summary>Method that is called when an error occurs while restoring transactions.</summary>
        </Docs>
        <Link Type="MonoTouch.StoreKit.SKPaymentTransactionObserver_Extensions" Member="M:MonoTouch.StoreKit.SKPaymentTransactionObserver_Extensions.RestoreCompletedTransactionsFailedWithError(MonoTouch.StoreKit.ISKPaymentTransactionObserver,MonoTouch.StoreKit.SKPaymentQueue,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.StoreKit.ISKPaymentTransactionObserver" />
      </Targets>
      <Member MemberName="RestoreCompletedTransactionsFinished">
        <MemberSignature Language="C#" Value="public static void RestoreCompletedTransactionsFinished (this StoreKit.ISKPaymentTransactionObserver This, StoreKit.SKPaymentQueue queue);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RestoreCompletedTransactionsFinished(class StoreKit.ISKPaymentTransactionObserver This, class StoreKit.SKPaymentQueue queue) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.StoreKit.ISKPaymentTransactionObserver" RefType="this" />
          <Parameter Name="queue" Type="MonoTouch.StoreKit.SKPaymentQueue" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="queue">To be added.</param>
          <summary>Method that is called after transactions have been restored.</summary>
        </Docs>
        <Link Type="MonoTouch.StoreKit.SKPaymentTransactionObserver_Extensions" Member="M:MonoTouch.StoreKit.SKPaymentTransactionObserver_Extensions.RestoreCompletedTransactionsFinished(MonoTouch.StoreKit.ISKPaymentTransactionObserver,MonoTouch.StoreKit.SKPaymentQueue)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.StoreKit.ISKPaymentTransactionObserver" />
      </Targets>
      <Member MemberName="ShouldAddStorePayment">
        <MemberSignature Language="C#" Value="public static bool ShouldAddStorePayment (this StoreKit.ISKPaymentTransactionObserver This, StoreKit.SKPaymentQueue queue, StoreKit.SKPayment payment, StoreKit.SKProduct product);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldAddStorePayment(class StoreKit.ISKPaymentTransactionObserver This, class StoreKit.SKPaymentQueue queue, class StoreKit.SKPayment payment, class StoreKit.SKProduct product) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.StoreKit.ISKPaymentTransactionObserver" RefType="this" />
          <Parameter Name="queue" Type="MonoTouch.StoreKit.SKPaymentQueue" />
          <Parameter Name="payment" Type="MonoTouch.StoreKit.SKPayment" />
          <Parameter Name="product" Type="MonoTouch.StoreKit.SKProduct" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="queue">To be added.</param>
          <param name="payment">To be added.</param>
          <param name="product">To be added.</param>
          <summary>Called to indicate that the user has started an in-app App Store purchase.</summary>
        </Docs>
        <Link Type="MonoTouch.StoreKit.SKPaymentTransactionObserver_Extensions" Member="M:MonoTouch.StoreKit.SKPaymentTransactionObserver_Extensions.ShouldAddStorePayment(MonoTouch.StoreKit.ISKPaymentTransactionObserver,MonoTouch.StoreKit.SKPaymentQueue,MonoTouch.StoreKit.SKPayment,MonoTouch.StoreKit.SKProduct)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.StoreKit.ISKPaymentTransactionObserver" />
      </Targets>
      <Member MemberName="UpdatedDownloads">
        <MemberSignature Language="C#" Value="public static void UpdatedDownloads (this StoreKit.ISKPaymentTransactionObserver This, StoreKit.SKPaymentQueue queue, StoreKit.SKDownload[] downloads);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdatedDownloads(class StoreKit.ISKPaymentTransactionObserver This, class StoreKit.SKPaymentQueue queue, class StoreKit.SKDownload[] downloads) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.StoreKit.ISKPaymentTransactionObserver" RefType="this" />
          <Parameter Name="queue" Type="MonoTouch.StoreKit.SKPaymentQueue" />
          <Parameter Name="downloads" Type="MonoTouch.StoreKit.SKDownload[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="queue">To be added.</param>
          <param name="downloads">To be added.</param>
          <summary>Method that is called when one or more downloads has been updated by the queue.</summary>
        </Docs>
        <Link Type="MonoTouch.StoreKit.SKPaymentTransactionObserver_Extensions" Member="M:MonoTouch.StoreKit.SKPaymentTransactionObserver_Extensions.UpdatedDownloads(MonoTouch.StoreKit.ISKPaymentTransactionObserver,MonoTouch.StoreKit.SKPaymentQueue,MonoTouch.StoreKit.SKDownload[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.StoreKit.ISKRequestDelegate" />
      </Targets>
      <Member MemberName="RequestFailed">
        <MemberSignature Language="C#" Value="public static void RequestFailed (this StoreKit.ISKRequestDelegate This, StoreKit.SKRequest request, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RequestFailed(class StoreKit.ISKRequestDelegate This, class StoreKit.SKRequest request, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.StoreKit.ISKRequestDelegate" RefType="this" />
          <Parameter Name="request" Type="MonoTouch.StoreKit.SKRequest" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="request">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.StoreKit.SKRequestDelegate_Extensions" Member="M:MonoTouch.StoreKit.SKRequestDelegate_Extensions.RequestFailed(MonoTouch.StoreKit.ISKRequestDelegate,MonoTouch.StoreKit.SKRequest,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.StoreKit.ISKRequestDelegate" />
      </Targets>
      <Member MemberName="RequestFinished">
        <MemberSignature Language="C#" Value="public static void RequestFinished (this StoreKit.ISKRequestDelegate This, StoreKit.SKRequest request);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RequestFinished(class StoreKit.ISKRequestDelegate This, class StoreKit.SKRequest request) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.StoreKit.ISKRequestDelegate" RefType="this" />
          <Parameter Name="request" Type="MonoTouch.StoreKit.SKRequest" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="request">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.StoreKit.SKRequestDelegate_Extensions" Member="M:MonoTouch.StoreKit.SKRequestDelegate_Extensions.RequestFinished(MonoTouch.StoreKit.ISKRequestDelegate,MonoTouch.StoreKit.SKRequest)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.StoreKit.ISKStoreProductViewControllerDelegate" />
      </Targets>
      <Member MemberName="Finished">
        <MemberSignature Language="C#" Value="public static void Finished (this StoreKit.ISKStoreProductViewControllerDelegate This, StoreKit.SKStoreProductViewController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Finished(class StoreKit.ISKStoreProductViewControllerDelegate This, class StoreKit.SKStoreProductViewController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.StoreKit.ISKStoreProductViewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.StoreKit.SKStoreProductViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.StoreKit.SKStoreProductViewControllerDelegate_Extensions" Member="M:MonoTouch.StoreKit.SKStoreProductViewControllerDelegate_Extensions.Finished(MonoTouch.StoreKit.ISKStoreProductViewControllerDelegate,MonoTouch.StoreKit.SKStoreProductViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSAttributedString" />
      </Targets>
      <Member MemberName="ContainsAttachments">
        <MemberSignature Language="C#" Value="public static bool ContainsAttachments (this Foundation.NSAttributedString This, Foundation.NSRange range);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsAttachments(class Foundation.NSAttributedString This, valuetype Foundation.NSRange range) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSAttributedString" RefType="this" />
          <Parameter Name="range" Type="MonoTouch.Foundation.NSRange" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="range">To be added.</param>
          <summary>Returns <see langword="true" /> if the current <see cref="T:Foundation.NSAttributedString" /> contains attachments in the specified <paramref name="range" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSAttributedString_NSAttributedStringKitAdditions" Member="M:MonoTouch.UIKit.NSAttributedString_NSAttributedStringKitAdditions.ContainsAttachments(MonoTouch.Foundation.NSAttributedString,MonoTouch.Foundation.NSRange)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSCoder" />
      </Targets>
      <Member MemberName="DecodeCGAffineTransform">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGAffineTransform DecodeCGAffineTransform (this Foundation.NSCoder This, string key);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGAffineTransform DecodeCGAffineTransform(class Foundation.NSCoder This, string key) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGAffineTransform</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSCoder" RefType="this" />
          <Parameter Name="key" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">MonoTouch.Foundation.NSCoder.</param>
          <param name="key">Key identified with the affine transform.</param>
          <summary>Decodes and then returns the affine transform structure that is associated with the designated key.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding" Member="M:MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding.DecodeCGAffineTransform(MonoTouch.Foundation.NSCoder,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSCoder" />
      </Targets>
      <Member MemberName="DecodeCGPoint">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGPoint DecodeCGPoint (this Foundation.NSCoder This, string key);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGPoint DecodeCGPoint(class Foundation.NSCoder This, string key) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGPoint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSCoder" RefType="this" />
          <Parameter Name="key" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">MonoTouch.Foundation.NSCoder.</param>
          <param name="key">Key that is identified with the point.</param>
          <summary>Decodes and then returns the point structure that is associated with the designated key.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding" Member="M:MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding.DecodeCGPoint(MonoTouch.Foundation.NSCoder,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSCoder" />
      </Targets>
      <Member MemberName="DecodeCGRect">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGRect DecodeCGRect (this Foundation.NSCoder This, string key);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGRect DecodeCGRect(class Foundation.NSCoder This, string key) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSCoder" RefType="this" />
          <Parameter Name="key" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">MonoTouch.Foundation.NSCoder.</param>
          <param name="key">Key that is identified with the affine transform.</param>
          <summary>Decodes and then returns the rectangle structure that is associated with the designated key.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding" Member="M:MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding.DecodeCGRect(MonoTouch.Foundation.NSCoder,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSCoder" />
      </Targets>
      <Member MemberName="DecodeCGSize">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize DecodeCGSize (this Foundation.NSCoder This, string key);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize DecodeCGSize(class Foundation.NSCoder This, string key) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSCoder" RefType="this" />
          <Parameter Name="key" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">MonoTouch.Foundation.NSCoder.</param>
          <param name="key">Key that is identified with the rect.</param>
          <summary>Decodes and then returns the size structure that is associated with the designated key.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding" Member="M:MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding.DecodeCGSize(MonoTouch.Foundation.NSCoder,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSCoder" />
      </Targets>
      <Member MemberName="DecodeCGVector">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGVector DecodeCGVector (this Foundation.NSCoder This, string key);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGVector DecodeCGVector(class Foundation.NSCoder This, string key) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGVector</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSCoder" RefType="this" />
          <Parameter Name="key" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">MonoTouch.Foundation.NSCoder.</param>
          <param name="key">Key that is identified with the vector.</param>
          <summary>Decodes and then returns the vector structure that is associated with the designated key.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding" Member="M:MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding.DecodeCGVector(MonoTouch.Foundation.NSCoder,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSCoder" />
      </Targets>
      <Member MemberName="DecodeDirectionalEdgeInsets">
        <MemberSignature Language="C#" Value="public static UIKit.NSDirectionalEdgeInsets DecodeDirectionalEdgeInsets (this Foundation.NSCoder This, string key);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.NSDirectionalEdgeInsets DecodeDirectionalEdgeInsets(class Foundation.NSCoder This, string key) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.NSDirectionalEdgeInsets</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSCoder" RefType="this" />
          <Parameter Name="key" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="key">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding" Member="M:MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding.DecodeDirectionalEdgeInsets(MonoTouch.Foundation.NSCoder,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSCoder" />
      </Targets>
      <Member MemberName="DecodeUIEdgeInsets">
        <MemberSignature Language="C#" Value="public static UIKit.UIEdgeInsets DecodeUIEdgeInsets (this Foundation.NSCoder This, string key);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UIEdgeInsets DecodeUIEdgeInsets(class Foundation.NSCoder This, string key) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIEdgeInsets</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSCoder" RefType="this" />
          <Parameter Name="key" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">MonoTouch.Foundation.NSCoder.</param>
          <param name="key">Key that is identified with the edge insets.</param>
          <summary>Decodes and then returns the edge insets that are associated with the designated key.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding" Member="M:MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding.DecodeUIEdgeInsets(MonoTouch.Foundation.NSCoder,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSCoder" />
      </Targets>
      <Member MemberName="DecodeUIOffsetForKey">
        <MemberSignature Language="C#" Value="public static UIKit.UIOffset DecodeUIOffsetForKey (this Foundation.NSCoder This, string key);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UIOffset DecodeUIOffsetForKey(class Foundation.NSCoder This, string key) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIOffset</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSCoder" RefType="this" />
          <Parameter Name="key" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">MonoTouch.Foundation.NSCoder.</param>
          <param name="key">Key that is identified with the offset.</param>
          <summary>Decodes and then returns the offset that is associated with the designated key.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding" Member="M:MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding.DecodeUIOffsetForKey(MonoTouch.Foundation.NSCoder,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSCoder" />
      </Targets>
      <Member MemberName="Encode">
        <MemberSignature Language="C#" Value="public static void Encode (this Foundation.NSCoder This, CoreGraphics.CGAffineTransform transform, string forKey);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Encode(class Foundation.NSCoder This, valuetype CoreGraphics.CGAffineTransform transform, string forKey) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSCoder" RefType="this" />
          <Parameter Name="transform" Type="MonoTouch.CoreGraphics.CGAffineTransform" />
          <Parameter Name="forKey" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">MonoTouch.Foundation.NSCoder.</param>
          <param name="transform">The specified affine transform.</param>
          <param name="forKey">Designated key in the receiver archive.</param>
          <summary>Encodes the affine transform and also associates it with the designated key.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding" Member="M:MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding.Encode(MonoTouch.Foundation.NSCoder,MonoTouch.CoreGraphics.CGAffineTransform,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSCoder" />
      </Targets>
      <Member MemberName="Encode">
        <MemberSignature Language="C#" Value="public static void Encode (this Foundation.NSCoder This, CoreGraphics.CGPoint point, string forKey);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Encode(class Foundation.NSCoder This, valuetype CoreGraphics.CGPoint point, string forKey) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSCoder" RefType="this" />
          <Parameter Name="forKey" Type="System.String" />
          <Parameter Name="point" Type="MonoTouch.CoreGraphics.CGPoint" />
        </Parameters>
        <Docs>
          <param name="This">MonoTouch.Foundation.NSCoder.</param>
          <param name="point">The specified point.</param>
          <param name="forKey">Designated key in the receiver archive.</param>
          <summary>Encodes the point and also associates it with the designated key.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding" Member="M:MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding.Encode(MonoTouch.Foundation.NSCoder,MonoTouch.CoreGraphics.CGPoint,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSCoder" />
      </Targets>
      <Member MemberName="Encode">
        <MemberSignature Language="C#" Value="public static void Encode (this Foundation.NSCoder This, CoreGraphics.CGRect rect, string forKey);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Encode(class Foundation.NSCoder This, valuetype CoreGraphics.CGRect rect, string forKey) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSCoder" RefType="this" />
          <Parameter Name="forKey" Type="System.String" />
          <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" />
        </Parameters>
        <Docs>
          <param name="This">MonoTouch.Foundation.NSCoder.</param>
          <param name="rect">The specified rectangle.</param>
          <param name="forKey">Designated key in the receiver archive.</param>
          <summary>Encodes the rectangle and also associates it with the designated key.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding" Member="M:MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding.Encode(MonoTouch.Foundation.NSCoder,MonoTouch.CoreGraphics.CGRect,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSCoder" />
      </Targets>
      <Member MemberName="Encode">
        <MemberSignature Language="C#" Value="public static void Encode (this Foundation.NSCoder This, CoreGraphics.CGSize size, string forKey);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Encode(class Foundation.NSCoder This, valuetype CoreGraphics.CGSize size, string forKey) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSCoder" RefType="this" />
          <Parameter Name="forKey" Type="System.String" />
          <Parameter Name="size" Type="MonoTouch.CoreGraphics.CGSize" />
        </Parameters>
        <Docs>
          <param name="This">MonoTouch.Foundation.NSCoder.</param>
          <param name="size">The specified size.</param>
          <param name="forKey">Designated key in the receiver archive.</param>
          <summary>Encodes the size and also associates it with the designated key.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding" Member="M:MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding.Encode(MonoTouch.Foundation.NSCoder,MonoTouch.CoreGraphics.CGSize,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSCoder" />
      </Targets>
      <Member MemberName="Encode">
        <MemberSignature Language="C#" Value="public static void Encode (this Foundation.NSCoder This, CoreGraphics.CGVector vector, string forKey);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Encode(class Foundation.NSCoder This, valuetype CoreGraphics.CGVector vector, string forKey) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSCoder" RefType="this" />
          <Parameter Name="vector" Type="MonoTouch.CoreGraphics.CGVector" />
          <Parameter Name="forKey" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">MonoTouch.Foundation.NSCoder.</param>
          <param name="vector">The specified vector.</param>
          <param name="forKey">Designated key in the receiver archive.</param>
          <summary>Encodes the vector and also associates it with the designated key.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding" Member="M:MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding.Encode(MonoTouch.Foundation.NSCoder,MonoTouch.CoreGraphics.CGVector,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSCoder" />
      </Targets>
      <Member MemberName="Encode">
        <MemberSignature Language="C#" Value="public static void Encode (this Foundation.NSCoder This, UIKit.NSDirectionalEdgeInsets directionalEdgeInsets, string forKey);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Encode(class Foundation.NSCoder This, valuetype UIKit.NSDirectionalEdgeInsets directionalEdgeInsets, string forKey) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSCoder" RefType="this" />
          <Parameter Name="directionalEdgeInsets" Type="MonoTouch.UIKit.NSDirectionalEdgeInsets" />
          <Parameter Name="forKey" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="directionalEdgeInsets">To be added.</param>
          <param name="forKey">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding" Member="M:MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding.Encode(MonoTouch.Foundation.NSCoder,MonoTouch.UIKit.NSDirectionalEdgeInsets,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSCoder" />
      </Targets>
      <Member MemberName="Encode">
        <MemberSignature Language="C#" Value="public static void Encode (this Foundation.NSCoder This, UIKit.UIEdgeInsets edgeInsets, string forKey);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Encode(class Foundation.NSCoder This, valuetype UIKit.UIEdgeInsets edgeInsets, string forKey) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSCoder" RefType="this" />
          <Parameter Name="edgeInsets" Type="MonoTouch.UIKit.UIEdgeInsets" />
          <Parameter Name="forKey" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">MonoTouch.Foundation.NSCoder.</param>
          <param name="edgeInsets">The specified edge insets.</param>
          <param name="forKey">Designated key in the receiver archive.</param>
          <summary>Encodes the edge insets and also associates them with the designated key.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding" Member="M:MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding.Encode(MonoTouch.Foundation.NSCoder,MonoTouch.UIKit.UIEdgeInsets,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSCoder" />
      </Targets>
      <Member MemberName="Encode">
        <MemberSignature Language="C#" Value="public static void Encode (this Foundation.NSCoder This, UIKit.UIOffset uiOffset, string forKey);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Encode(class Foundation.NSCoder This, valuetype UIKit.UIOffset uiOffset, string forKey) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSCoder" RefType="this" />
          <Parameter Name="uiOffset" Type="MonoTouch.UIKit.UIOffset" />
          <Parameter Name="forKey" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">MonoTouch.Foundation.NSCoder.</param>
          <param name="uiOffset">The specified offset.</param>
          <param name="forKey">Designated key in the receiver archive.</param>
          <summary>Encodes the offset and also associates it with the designated key.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding" Member="M:MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding.Encode(MonoTouch.Foundation.NSCoder,MonoTouch.UIKit.UIOffset,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="DrawString">
        <MemberSignature Language="C#" Value="public static void DrawString (this Foundation.NSString This, CoreGraphics.CGRect rect, Foundation.NSStringDrawingOptions options, UIKit.UIStringAttributes attributes, Foundation.NSStringDrawingContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawString(class Foundation.NSString This, valuetype CoreGraphics.CGRect rect, valuetype Foundation.NSStringDrawingOptions options, class UIKit.UIStringAttributes attributes, class Foundation.NSStringDrawingContext context) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="options" Type="MonoTouch.Foundation.NSStringDrawingOptions" />
          <Parameter Name="attributes" Type="MonoTouch.UIKit.UIStringAttributes" />
          <Parameter Name="context" Type="MonoTouch.Foundation.NSStringDrawingContext" />
          <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="rect">To be added.</param>
          <param name="options">To be added.</param>
          <param name="attributes">To be added.</param>
          <param name="context">To be added.</param>
          <summary>Draws the string in the specified rect, with the specified options.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSExtendedStringDrawing" Member="M:MonoTouch.UIKit.NSExtendedStringDrawing.DrawString(MonoTouch.Foundation.NSString,MonoTouch.CoreGraphics.CGRect,MonoTouch.Foundation.NSStringDrawingOptions,MonoTouch.UIKit.UIStringAttributes,MonoTouch.Foundation.NSStringDrawingContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="GetBoundingRect">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGRect GetBoundingRect (this Foundation.NSString This, CoreGraphics.CGSize size, Foundation.NSStringDrawingOptions options, UIKit.UIStringAttributes attributes, Foundation.NSStringDrawingContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGRect GetBoundingRect(class Foundation.NSString This, valuetype CoreGraphics.CGSize size, valuetype Foundation.NSStringDrawingOptions options, class UIKit.UIStringAttributes attributes, class Foundation.NSStringDrawingContext context) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="options" Type="MonoTouch.Foundation.NSStringDrawingOptions" />
          <Parameter Name="attributes" Type="MonoTouch.UIKit.UIStringAttributes" />
          <Parameter Name="context" Type="MonoTouch.Foundation.NSStringDrawingContext" />
          <Parameter Name="size" Type="MonoTouch.CoreGraphics.CGSize" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="size">To be added.</param>
          <param name="options">To be added.</param>
          <param name="attributes">To be added.</param>
          <param name="context">To be added.</param>
          <summary>The bounding box for the string, given the specified options.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSExtendedStringDrawing" Member="M:MonoTouch.UIKit.NSExtendedStringDrawing.GetBoundingRect(MonoTouch.Foundation.NSString,MonoTouch.CoreGraphics.CGSize,MonoTouch.Foundation.NSStringDrawingOptions,MonoTouch.UIKit.UIStringAttributes,MonoTouch.Foundation.NSStringDrawingContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="WeakDrawString">
        <MemberSignature Language="C#" Value="public static void WeakDrawString (this Foundation.NSString This, CoreGraphics.CGRect rect, Foundation.NSStringDrawingOptions options, Foundation.NSDictionary attributes, Foundation.NSStringDrawingContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WeakDrawString(class Foundation.NSString This, valuetype CoreGraphics.CGRect rect, valuetype Foundation.NSStringDrawingOptions options, class Foundation.NSDictionary attributes, class Foundation.NSStringDrawingContext context) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="options" Type="MonoTouch.Foundation.NSStringDrawingOptions" />
          <Parameter Name="attributes" Type="MonoTouch.Foundation.NSDictionary" />
          <Parameter Name="context" Type="MonoTouch.Foundation.NSStringDrawingContext" />
          <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="rect">To be added.</param>
          <param name="options">To be added.</param>
          <param name="attributes">To be added.</param>
          <param name="context">
            <para>To be added.</para>
            <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
          </param>
          <summary>Draws the string in the specified <paramref name="context" /> in the given <paramref name="rect" /> and with the specified <paramref name="options" /> and <paramref name="attributes" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSExtendedStringDrawing" Member="M:MonoTouch.UIKit.NSExtendedStringDrawing.WeakDrawString(MonoTouch.Foundation.NSString,MonoTouch.CoreGraphics.CGRect,MonoTouch.Foundation.NSStringDrawingOptions,MonoTouch.Foundation.NSDictionary,MonoTouch.Foundation.NSStringDrawingContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="WeakGetBoundingRect">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGRect WeakGetBoundingRect (this Foundation.NSString This, CoreGraphics.CGSize size, Foundation.NSStringDrawingOptions options, Foundation.NSDictionary attributes, Foundation.NSStringDrawingContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGRect WeakGetBoundingRect(class Foundation.NSString This, valuetype CoreGraphics.CGSize size, valuetype Foundation.NSStringDrawingOptions options, class Foundation.NSDictionary attributes, class Foundation.NSStringDrawingContext context) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="options" Type="MonoTouch.Foundation.NSStringDrawingOptions" />
          <Parameter Name="attributes" Type="MonoTouch.Foundation.NSDictionary" />
          <Parameter Name="context" Type="MonoTouch.Foundation.NSStringDrawingContext" />
          <Parameter Name="size" Type="MonoTouch.CoreGraphics.CGSize" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="size">To be added.</param>
          <param name="options">To be added.</param>
          <param name="attributes">To be added.</param>
          <param name="context">
            <para>To be added.</para>
            <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
          </param>
          <summary>The bounding box for the string, given the specified options.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSExtendedStringDrawing" Member="M:MonoTouch.UIKit.NSExtendedStringDrawing.WeakGetBoundingRect(MonoTouch.Foundation.NSString,MonoTouch.CoreGraphics.CGSize,MonoTouch.Foundation.NSStringDrawingOptions,MonoTouch.Foundation.NSDictionary,MonoTouch.Foundation.NSStringDrawingContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.NSLayoutConstraint" />
      </Targets>
      <Member MemberName="GetIdentifier">
        <MemberSignature Language="C#" Value="public static string GetIdentifier (this UIKit.NSLayoutConstraint This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetIdentifier(class UIKit.NSLayoutConstraint This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.NSLayoutConstraint" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSIdentifier" Member="M:MonoTouch.UIKit.NSIdentifier.GetIdentifier(MonoTouch.UIKit.NSLayoutConstraint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.NSLayoutConstraint" />
      </Targets>
      <Member MemberName="Identifier">
        <MemberSignature Language="C#" Value="public static string Identifier (this UIKit.NSLayoutConstraint This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Identifier(class UIKit.NSLayoutConstraint This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.NSLayoutConstraint" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns an identifier that can be used to request an item.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSIdentifier" Member="M:MonoTouch.UIKit.NSIdentifier.Identifier(MonoTouch.UIKit.NSLayoutConstraint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.NSLayoutConstraint" />
      </Targets>
      <Member MemberName="SetIdentifier">
        <MemberSignature Language="C#" Value="public static void SetIdentifier (this UIKit.NSLayoutConstraint This, string id);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIdentifier(class UIKit.NSLayoutConstraint This, string id) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.NSLayoutConstraint" RefType="this" />
          <Parameter Name="id" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="id">
            <para>To be added.</para>
            <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
          </param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSIdentifier" Member="M:MonoTouch.UIKit.NSIdentifier.SetIdentifier(MonoTouch.UIKit.NSLayoutConstraint,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.INSLayoutManagerDelegate" />
      </Targets>
      <Member MemberName="BoundingBoxForControlGlyph">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGRect BoundingBoxForControlGlyph (this UIKit.INSLayoutManagerDelegate This, UIKit.NSLayoutManager layoutManager, nuint glyphIndex, UIKit.NSTextContainer textContainer, CoreGraphics.CGRect proposedRect, CoreGraphics.CGPoint glyphPosition, nuint charIndex);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGRect BoundingBoxForControlGlyph(class UIKit.INSLayoutManagerDelegate This, class UIKit.NSLayoutManager layoutManager, valuetype System.nuint glyphIndex, class UIKit.NSTextContainer textContainer, valuetype CoreGraphics.CGRect proposedRect, valuetype CoreGraphics.CGPoint glyphPosition, valuetype System.nuint charIndex) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.INSLayoutManagerDelegate" RefType="this" />
          <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
          <Parameter Name="textContainer" Type="MonoTouch.UIKit.NSTextContainer" />
          <Parameter Name="glyphIndex" Type="System.nuint" />
          <Parameter Name="proposedRect" Type="MonoTouch.CoreGraphics.CGRect" />
          <Parameter Name="glyphPosition" Type="MonoTouch.CoreGraphics.CGPoint" />
          <Parameter Name="charIndex" Type="System.nuint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="layoutManager">To be added.</param>
          <param name="glyphIndex">To be added.</param>
          <param name="textContainer">To be added.</param>
          <param name="proposedRect">To be added.</param>
          <param name="glyphPosition">To be added.</param>
          <param name="charIndex">To be added.</param>
          <summary>The <see cref="T:System.Drawing.RectangleF" /> bounding the specified control glyph.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions" Member="M:MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions.BoundingBoxForControlGlyph(MonoTouch.UIKit.INSLayoutManagerDelegate,MonoTouch.UIKit.NSLayoutManager,System.nuint,MonoTouch.UIKit.NSTextContainer,MonoTouch.CoreGraphics.CGRect,MonoTouch.CoreGraphics.CGPoint,System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.INSLayoutManagerDelegate" />
      </Targets>
      <Member MemberName="DidChangeGeometry">
        <MemberSignature Language="C#" Value="public static void DidChangeGeometry (this UIKit.INSLayoutManagerDelegate This, UIKit.NSLayoutManager layoutManager, UIKit.NSTextContainer textContainer, CoreGraphics.CGSize oldSize);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidChangeGeometry(class UIKit.INSLayoutManagerDelegate This, class UIKit.NSLayoutManager layoutManager, class UIKit.NSTextContainer textContainer, valuetype CoreGraphics.CGSize oldSize) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.INSLayoutManagerDelegate" RefType="this" />
          <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
          <Parameter Name="textContainer" Type="MonoTouch.UIKit.NSTextContainer" />
          <Parameter Name="oldSize" Type="MonoTouch.CoreGraphics.CGSize" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="layoutManager">To be added.</param>
          <param name="textContainer">To be added.</param>
          <param name="oldSize">To be added.</param>
          <summary>The geometry of <paramref name="textContainer" /> changed from <paramref name="oldSize" />, and <paramref name="layoutManager" /> will invalidate the layout.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions" Member="M:MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions.DidChangeGeometry(MonoTouch.UIKit.INSLayoutManagerDelegate,MonoTouch.UIKit.NSLayoutManager,MonoTouch.UIKit.NSTextContainer,MonoTouch.CoreGraphics.CGSize)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.INSLayoutManagerDelegate" />
      </Targets>
      <Member MemberName="DidCompleteLayout">
        <MemberSignature Language="C#" Value="public static void DidCompleteLayout (this UIKit.INSLayoutManagerDelegate This, UIKit.NSLayoutManager layoutManager, UIKit.NSTextContainer textContainer, bool layoutFinishedFlag);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidCompleteLayout(class UIKit.INSLayoutManagerDelegate This, class UIKit.NSLayoutManager layoutManager, class UIKit.NSTextContainer textContainer, bool layoutFinishedFlag) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.INSLayoutManagerDelegate" RefType="this" />
          <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
          <Parameter Name="textContainer" Type="MonoTouch.UIKit.NSTextContainer" />
          <Parameter Name="layoutFinishedFlag" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="layoutManager">To be added.</param>
          <param name="textContainer">To be added.</param>
          <param name="layoutFinishedFlag">To be added.</param>
          <summary>Indicates that the specified NSLayoutManager has finished laying out text in the specified text container.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions" Member="M:MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions.DidCompleteLayout(MonoTouch.UIKit.INSLayoutManagerDelegate,MonoTouch.UIKit.NSLayoutManager,MonoTouch.UIKit.NSTextContainer,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.INSLayoutManagerDelegate" />
      </Targets>
      <Member MemberName="DidInvalidatedLayout">
        <MemberSignature Language="C#" Value="public static void DidInvalidatedLayout (this UIKit.INSLayoutManagerDelegate This, UIKit.NSLayoutManager sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidInvalidatedLayout(class UIKit.INSLayoutManagerDelegate This, class UIKit.NSLayoutManager sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.INSLayoutManagerDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.UIKit.NSLayoutManager" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <summary>Indicates that the NSLayoutManager has invalidated layout information (not glyph information).</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions" Member="M:MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions.DidInvalidatedLayout(MonoTouch.UIKit.INSLayoutManagerDelegate,MonoTouch.UIKit.NSLayoutManager)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.INSLayoutManagerDelegate" />
      </Targets>
      <Member MemberName="LineSpacingAfterGlyphAtIndex">
        <MemberSignature Language="C#" Value="public static nfloat LineSpacingAfterGlyphAtIndex (this UIKit.INSLayoutManagerDelegate This, UIKit.NSLayoutManager layoutManager, nuint glyphIndex, CoreGraphics.CGRect rect);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat LineSpacingAfterGlyphAtIndex(class UIKit.INSLayoutManagerDelegate This, class UIKit.NSLayoutManager layoutManager, valuetype System.nuint glyphIndex, valuetype CoreGraphics.CGRect rect) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.INSLayoutManagerDelegate" RefType="this" />
          <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
          <Parameter Name="glyphIndex" Type="System.nuint" />
          <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="layoutManager">To be added.</param>
          <param name="glyphIndex">To be added.</param>
          <param name="rect">To be added.</param>
          <summary>The line spacing after the line ending with the specified glyph index.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions" Member="M:MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions.LineSpacingAfterGlyphAtIndex(MonoTouch.UIKit.INSLayoutManagerDelegate,MonoTouch.UIKit.NSLayoutManager,System.nuint,MonoTouch.CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.INSLayoutManagerDelegate" />
      </Targets>
      <Member MemberName="ParagraphSpacingAfterGlyphAtIndex">
        <MemberSignature Language="C#" Value="public static nfloat ParagraphSpacingAfterGlyphAtIndex (this UIKit.INSLayoutManagerDelegate This, UIKit.NSLayoutManager layoutManager, nuint glyphIndex, CoreGraphics.CGRect rect);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat ParagraphSpacingAfterGlyphAtIndex(class UIKit.INSLayoutManagerDelegate This, class UIKit.NSLayoutManager layoutManager, valuetype System.nuint glyphIndex, valuetype CoreGraphics.CGRect rect) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.INSLayoutManagerDelegate" RefType="this" />
          <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
          <Parameter Name="glyphIndex" Type="System.nuint" />
          <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="layoutManager">To be added.</param>
          <param name="glyphIndex">To be added.</param>
          <param name="rect">To be added.</param>
          <summary>The paragraph spacing after the line ending with the specified glyph index.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions" Member="M:MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions.ParagraphSpacingAfterGlyphAtIndex(MonoTouch.UIKit.INSLayoutManagerDelegate,MonoTouch.UIKit.NSLayoutManager,System.nuint,MonoTouch.CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.INSLayoutManagerDelegate" />
      </Targets>
      <Member MemberName="ParagraphSpacingBeforeGlyphAtIndex">
        <MemberSignature Language="C#" Value="public static nfloat ParagraphSpacingBeforeGlyphAtIndex (this UIKit.INSLayoutManagerDelegate This, UIKit.NSLayoutManager layoutManager, nuint glyphIndex, CoreGraphics.CGRect rect);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat ParagraphSpacingBeforeGlyphAtIndex(class UIKit.INSLayoutManagerDelegate This, class UIKit.NSLayoutManager layoutManager, valuetype System.nuint glyphIndex, valuetype CoreGraphics.CGRect rect) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.INSLayoutManagerDelegate" RefType="this" />
          <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
          <Parameter Name="glyphIndex" Type="System.nuint" />
          <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="layoutManager">To be added.</param>
          <param name="glyphIndex">To be added.</param>
          <param name="rect">To be added.</param>
          <summary>The paragraph spacing before the line starting with the specified glyph index.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions" Member="M:MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions.ParagraphSpacingBeforeGlyphAtIndex(MonoTouch.UIKit.INSLayoutManagerDelegate,MonoTouch.UIKit.NSLayoutManager,System.nuint,MonoTouch.CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.INSLayoutManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldBreakLineByHyphenatingBeforeCharacter">
        <MemberSignature Language="C#" Value="public static bool ShouldBreakLineByHyphenatingBeforeCharacter (this UIKit.INSLayoutManagerDelegate This, UIKit.NSLayoutManager layoutManager, nuint charIndex);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldBreakLineByHyphenatingBeforeCharacter(class UIKit.INSLayoutManagerDelegate This, class UIKit.NSLayoutManager layoutManager, valuetype System.nuint charIndex) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.INSLayoutManagerDelegate" RefType="this" />
          <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
          <Parameter Name="charIndex" Type="System.nuint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="layoutManager">To be added.</param>
          <param name="charIndex">To be added.</param>
          <summary>Whether a line should break with a hyphen at the specified point. Called frequently.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions" Member="M:MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions.ShouldBreakLineByHyphenatingBeforeCharacter(MonoTouch.UIKit.INSLayoutManagerDelegate,MonoTouch.UIKit.NSLayoutManager,System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.INSLayoutManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldBreakLineByWordBeforeCharacter">
        <MemberSignature Language="C#" Value="public static bool ShouldBreakLineByWordBeforeCharacter (this UIKit.INSLayoutManagerDelegate This, UIKit.NSLayoutManager layoutManager, nuint charIndex);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldBreakLineByWordBeforeCharacter(class UIKit.INSLayoutManagerDelegate This, class UIKit.NSLayoutManager layoutManager, valuetype System.nuint charIndex) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.INSLayoutManagerDelegate" RefType="this" />
          <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
          <Parameter Name="charIndex" Type="System.nuint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="layoutManager">To be added.</param>
          <param name="charIndex">To be added.</param>
          <summary>Whether a line should have a soft line break. Called frequently.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions" Member="M:MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions.ShouldBreakLineByWordBeforeCharacter(MonoTouch.UIKit.INSLayoutManagerDelegate,MonoTouch.UIKit.NSLayoutManager,System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.INSLayoutManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldGenerateGlyphs">
        <MemberSignature Language="C#" Value="public static nuint ShouldGenerateGlyphs (this UIKit.INSLayoutManagerDelegate This, UIKit.NSLayoutManager layoutManager, IntPtr glyphBuffer, IntPtr props, IntPtr charIndexes, UIKit.UIFont aFont, Foundation.NSRange glyphRange);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nuint ShouldGenerateGlyphs(class UIKit.INSLayoutManagerDelegate This, class UIKit.NSLayoutManager layoutManager, native int glyphBuffer, native int props, native int charIndexes, class UIKit.UIFont aFont, valuetype Foundation.NSRange glyphRange) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nuint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.INSLayoutManagerDelegate" RefType="this" />
          <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
          <Parameter Name="glyphBuffer" Type="System.IntPtr" />
          <Parameter Name="props" Type="System.IntPtr" />
          <Parameter Name="charIndexes" Type="System.IntPtr" />
          <Parameter Name="aFont" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="glyphRange" Type="MonoTouch.Foundation.NSRange" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="layoutManager">To be added.</param>
          <param name="glyphBuffer">To be added.</param>
          <param name="props">To be added.</param>
          <param name="charIndexes">To be added.</param>
          <param name="aFont">To be added.</param>
          <param name="glyphRange">To be added.</param>
          <summary>When overridden, allows the app developer to customize the initial glyph generation process.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions" Member="M:MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions.ShouldGenerateGlyphs(MonoTouch.UIKit.INSLayoutManagerDelegate,MonoTouch.UIKit.NSLayoutManager,System.IntPtr,System.IntPtr,System.IntPtr,MonoTouch.UIKit.UIFont,MonoTouch.Foundation.NSRange)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.INSLayoutManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldSetLineFragmentRect">
        <MemberSignature Language="C#" Value="public static bool ShouldSetLineFragmentRect (this UIKit.INSLayoutManagerDelegate This, UIKit.NSLayoutManager layoutManager, ref CoreGraphics.CGRect lineFragmentRect, ref CoreGraphics.CGRect lineFragmentUsedRect, ref nfloat baselineOffset, UIKit.NSTextContainer textContainer, Foundation.NSRange glyphRange);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldSetLineFragmentRect(class UIKit.INSLayoutManagerDelegate This, class UIKit.NSLayoutManager layoutManager, valuetype CoreGraphics.CGRect lineFragmentRect, valuetype CoreGraphics.CGRect lineFragmentUsedRect, valuetype System.nfloat baselineOffset, class UIKit.NSTextContainer textContainer, valuetype Foundation.NSRange glyphRange) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.INSLayoutManagerDelegate" RefType="this" />
          <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
          <Parameter Name="textContainer" Type="MonoTouch.UIKit.NSTextContainer" />
          <Parameter Name="glyphRange" Type="MonoTouch.Foundation.NSRange" />
          <Parameter Name="lineFragmentRect" Type="MonoTouch.CoreGraphics.CGRect&amp;" RefType="ref" />
          <Parameter Name="lineFragmentUsedRect" Type="MonoTouch.CoreGraphics.CGRect&amp;" RefType="ref" />
          <Parameter Name="baselineOffset" Type="System.nfloat&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="layoutManager">To be added.</param>
          <param name="lineFragmentRect">To be added.</param>
          <param name="lineFragmentUsedRect">To be added.</param>
          <param name="baselineOffset">To be added.</param>
          <param name="textContainer">To be added.</param>
          <param name="glyphRange">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions" Member="M:MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions.ShouldSetLineFragmentRect(MonoTouch.UIKit.INSLayoutManagerDelegate,MonoTouch.UIKit.NSLayoutManager,MonoTouch.CoreGraphics.CGRect@,MonoTouch.CoreGraphics.CGRect@,System.nfloat@,MonoTouch.UIKit.NSTextContainer,MonoTouch.Foundation.NSRange)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.INSLayoutManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldUseAction">
        <MemberSignature Language="C#" Value="public static UIKit.NSControlCharacterAction ShouldUseAction (this UIKit.INSLayoutManagerDelegate This, UIKit.NSLayoutManager layoutManager, UIKit.NSControlCharacterAction action, nuint charIndex);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.NSControlCharacterAction ShouldUseAction(class UIKit.INSLayoutManagerDelegate This, class UIKit.NSLayoutManager layoutManager, valuetype UIKit.NSControlCharacterAction action, valuetype System.nuint charIndex) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.NSControlCharacterAction</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.INSLayoutManagerDelegate" RefType="this" />
          <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
          <Parameter Name="action" Type="MonoTouch.UIKit.NSControlCharacterAction" />
          <Parameter Name="charIndex" Type="System.nuint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="layoutManager">To be added.</param>
          <param name="action">To be added.</param>
          <param name="charIndex">To be added.</param>
          <summary>The control character action for the control character at the specified index.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions" Member="M:MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions.ShouldUseAction(MonoTouch.UIKit.INSLayoutManagerDelegate,MonoTouch.UIKit.NSLayoutManager,MonoTouch.UIKit.NSControlCharacterAction,System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSMutableAttributedString" />
      </Targets>
      <Member MemberName="FixAttributesInRange">
        <MemberSignature Language="C#" Value="public static void FixAttributesInRange (this Foundation.NSMutableAttributedString This, Foundation.NSRange range);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FixAttributesInRange(class Foundation.NSMutableAttributedString This, valuetype Foundation.NSRange range) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSMutableAttributedString" RefType="this" />
          <Parameter Name="range" Type="MonoTouch.Foundation.NSRange" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="range">To be added.</param>
          <summary>Cleans up inconsistencies that can accumulate over many edits.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSMutableAttributedStringKitAdditions" Member="M:MonoTouch.UIKit.NSMutableAttributedStringKitAdditions.FixAttributesInRange(MonoTouch.Foundation.NSMutableAttributedString,MonoTouch.Foundation.NSRange)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSObject" />
      </Targets>
      <Member MemberName="GetAccessibilityCustomRotors">
        <MemberSignature Language="C#" Value="public static UIKit.UIAccessibilityCustomRotor[] GetAccessibilityCustomRotors (this Foundation.NSObject This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIAccessibilityCustomRotor[] GetAccessibilityCustomRotors(class Foundation.NSObject This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIAccessibilityCustomRotor[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSObject" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSObject_UIAccessibilityCustomRotor" Member="M:MonoTouch.UIKit.NSObject_UIAccessibilityCustomRotor.GetAccessibilityCustomRotors(MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSObject" />
      </Targets>
      <Member MemberName="SetAccessibilityCustomRotors">
        <MemberSignature Language="C#" Value="public static void SetAccessibilityCustomRotors (this Foundation.NSObject This, UIKit.UIAccessibilityCustomRotor[] customRotors);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAccessibilityCustomRotors(class Foundation.NSObject This, class UIKit.UIAccessibilityCustomRotor[] customRotors) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSObject" RefType="this" />
          <Parameter Name="customRotors" Type="MonoTouch.UIKit.UIAccessibilityCustomRotor[]" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="customRotors">
            <para>To be added.</para>
            <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
          </param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSObject_UIAccessibilityCustomRotor" Member="M:MonoTouch.UIKit.NSObject_UIAccessibilityCustomRotor.SetAccessibilityCustomRotors(MonoTouch.Foundation.NSObject,MonoTouch.UIKit.UIAccessibilityCustomRotor[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="DrawString">
        <MemberSignature Language="C#" Value="public static void DrawString (this Foundation.NSString This, CoreGraphics.CGPoint point, UIKit.UIStringAttributes attributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawString(class Foundation.NSString This, valuetype CoreGraphics.CGPoint point, class UIKit.UIStringAttributes attributes) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="attributes" Type="MonoTouch.UIKit.UIStringAttributes" />
          <Parameter Name="point" Type="MonoTouch.CoreGraphics.CGPoint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="point">To be added.</param>
          <param name="attributes">To be added.</param>
          <summary>Draws the string at the specified <paramref name="point" /> and with the specified <paramref name="attributes" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSStringDrawing" Member="M:MonoTouch.UIKit.NSStringDrawing.DrawString(MonoTouch.Foundation.NSString,MonoTouch.CoreGraphics.CGPoint,MonoTouch.UIKit.UIStringAttributes)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="DrawString">
        <MemberSignature Language="C#" Value="public static void DrawString (this Foundation.NSString This, CoreGraphics.CGRect rect, UIKit.UIStringAttributes attributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawString(class Foundation.NSString This, valuetype CoreGraphics.CGRect rect, class UIKit.UIStringAttributes attributes) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="attributes" Type="MonoTouch.UIKit.UIStringAttributes" />
          <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="rect">To be added.</param>
          <param name="attributes">To be added.</param>
          <summary>Draws the string in the specified <paramref name="rect" /> and with the specified <paramref name="attributes" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSStringDrawing" Member="M:MonoTouch.UIKit.NSStringDrawing.DrawString(MonoTouch.Foundation.NSString,MonoTouch.CoreGraphics.CGRect,MonoTouch.UIKit.UIStringAttributes)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="GetSizeUsingAttributes">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize GetSizeUsingAttributes (this Foundation.NSString This, UIKit.UIStringAttributes attributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize GetSizeUsingAttributes(class Foundation.NSString This, class UIKit.UIStringAttributes attributes) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="attributes" Type="MonoTouch.UIKit.UIStringAttributes" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="attributes">To be added.</param>
          <summary>The SizeF of the string, if rendered with the specified <paramref name="attributes" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSStringDrawing" Member="M:MonoTouch.UIKit.NSStringDrawing.GetSizeUsingAttributes(MonoTouch.Foundation.NSString,MonoTouch.UIKit.UIStringAttributes)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="WeakDrawString">
        <MemberSignature Language="C#" Value="public static void WeakDrawString (this Foundation.NSString This, CoreGraphics.CGPoint point, Foundation.NSDictionary attributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WeakDrawString(class Foundation.NSString This, valuetype CoreGraphics.CGPoint point, class Foundation.NSDictionary attributes) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="attributes" Type="MonoTouch.Foundation.NSDictionary" />
          <Parameter Name="point" Type="MonoTouch.CoreGraphics.CGPoint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="point">To be added.</param>
          <param name="attributes">To be added.</param>
          <summary>Draws the string, in a rectangle that is anchored at <paramref name="point" />, with the specified <paramref name="attributes" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSStringDrawing" Member="M:MonoTouch.UIKit.NSStringDrawing.WeakDrawString(MonoTouch.Foundation.NSString,MonoTouch.CoreGraphics.CGPoint,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="WeakDrawString">
        <MemberSignature Language="C#" Value="public static void WeakDrawString (this Foundation.NSString This, CoreGraphics.CGRect rect, Foundation.NSDictionary attributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WeakDrawString(class Foundation.NSString This, valuetype CoreGraphics.CGRect rect, class Foundation.NSDictionary attributes) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="attributes" Type="MonoTouch.Foundation.NSDictionary" />
          <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="rect">To be added.</param>
          <param name="attributes">To be added.</param>
          <summary>Draws the string—in the rectangle <paramref name="rect" />—with the specified <paramref name="attributes" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSStringDrawing" Member="M:MonoTouch.UIKit.NSStringDrawing.WeakDrawString(MonoTouch.Foundation.NSString,MonoTouch.CoreGraphics.CGRect,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="WeakGetSizeUsingAttributes">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize WeakGetSizeUsingAttributes (this Foundation.NSString This, Foundation.NSDictionary attributes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize WeakGetSizeUsingAttributes(class Foundation.NSString This, class Foundation.NSDictionary attributes) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="attributes" Type="MonoTouch.Foundation.NSDictionary" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="attributes">To be added.</param>
          <summary>Returns the size of the rendered string.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSStringDrawing" Member="M:MonoTouch.UIKit.NSStringDrawing.WeakGetSizeUsingAttributes(MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.INSTextStorageDelegate" />
      </Targets>
      <Member MemberName="DidProcessEditing">
        <MemberSignature Language="C#" Value="public static void DidProcessEditing (this UIKit.INSTextStorageDelegate This, UIKit.NSTextStorage textStorage, UIKit.NSTextStorageEditActions editedMask, Foundation.NSRange editedRange, nint delta);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidProcessEditing(class UIKit.INSTextStorageDelegate This, class UIKit.NSTextStorage textStorage, valuetype UIKit.NSTextStorageEditActions editedMask, valuetype Foundation.NSRange editedRange, valuetype System.nint delta) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.INSTextStorageDelegate" RefType="this" />
          <Parameter Name="textStorage" Type="MonoTouch.UIKit.NSTextStorage" />
          <Parameter Name="editedMask" Type="MonoTouch.UIKit.NSTextStorageEditActions" />
          <Parameter Name="editedRange" Type="MonoTouch.Foundation.NSRange" />
          <Parameter Name="delta" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textStorage">To be added.</param>
          <param name="editedMask">To be added.</param>
          <param name="editedRange">To be added.</param>
          <param name="delta">To be added.</param>
          <summary>Indicates that editing has completed for the specified editedRange.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSTextStorageDelegate_Extensions" Member="M:MonoTouch.UIKit.NSTextStorageDelegate_Extensions.DidProcessEditing(MonoTouch.UIKit.INSTextStorageDelegate,MonoTouch.UIKit.NSTextStorage,MonoTouch.UIKit.NSTextStorageEditActions,MonoTouch.Foundation.NSRange,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.INSTextStorageDelegate" />
      </Targets>
      <Member MemberName="WillProcessEditing">
        <MemberSignature Language="C#" Value="public static void WillProcessEditing (this UIKit.INSTextStorageDelegate This, UIKit.NSTextStorage textStorage, UIKit.NSTextStorageEditActions editedMask, Foundation.NSRange editedRange, nint delta);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillProcessEditing(class UIKit.INSTextStorageDelegate This, class UIKit.NSTextStorage textStorage, valuetype UIKit.NSTextStorageEditActions editedMask, valuetype Foundation.NSRange editedRange, valuetype System.nint delta) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.INSTextStorageDelegate" RefType="this" />
          <Parameter Name="textStorage" Type="MonoTouch.UIKit.NSTextStorage" />
          <Parameter Name="editedMask" Type="MonoTouch.UIKit.NSTextStorageEditActions" />
          <Parameter Name="editedRange" Type="MonoTouch.Foundation.NSRange" />
          <Parameter Name="delta" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textStorage">To be added.</param>
          <param name="editedMask">To be added.</param>
          <param name="editedRange">To be added.</param>
          <param name="delta">To be added.</param>
          <summary>Indicates that processing of the editing on the specified editedRange is about to start.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSTextStorageDelegate_Extensions" Member="M:MonoTouch.UIKit.NSTextStorageDelegate_Extensions.WillProcessEditing(MonoTouch.UIKit.INSTextStorageDelegate,MonoTouch.UIKit.NSTextStorage,MonoTouch.UIKit.NSTextStorageEditActions,MonoTouch.Foundation.NSRange,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIViewController" />
      </Targets>
      <Member MemberName="GetTransitionCoordinator">
        <MemberSignature Language="C#" Value="public static UIKit.IUIViewControllerTransitionCoordinator GetTransitionCoordinator (this UIKit.UIViewController This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.IUIViewControllerTransitionCoordinator GetTransitionCoordinator(class UIKit.UIViewController This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.IUIViewControllerTransitionCoordinator</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UIViewController" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>The IUIViewControllerTransitionCoordinator coordinating the transition of the specified UIViewController.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.TransitionCoordinator_UIViewController" Member="M:MonoTouch.UIKit.TransitionCoordinator_UIViewController.GetTransitionCoordinator(MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAccelerometerDelegate" />
      </Targets>
      <Member MemberName="DidAccelerate">
        <MemberSignature Language="C#" Value="public static void DidAccelerate (this UIKit.IUIAccelerometerDelegate This, UIKit.UIAccelerometer accelerometer, UIKit.UIAcceleration acceleration);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAccelerate(class UIKit.IUIAccelerometerDelegate This, class UIKit.UIAccelerometer accelerometer, class UIKit.UIAcceleration acceleration) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAccelerometerDelegate" RefType="this" />
          <Parameter Name="accelerometer" Type="MonoTouch.UIKit.UIAccelerometer" />
          <Parameter Name="acceleration" Type="MonoTouch.UIKit.UIAcceleration" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="accelerometer">To be added.</param>
          <param name="acceleration">To be added.</param>
          <summary>Indicates that an acceleration measurement has occurred.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAccelerometerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIAccelerometerDelegate_Extensions.DidAccelerate(MonoTouch.UIKit.IUIAccelerometerDelegate,MonoTouch.UIKit.UIAccelerometer,MonoTouch.UIKit.UIAcceleration)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAccessibilityContainer" />
      </Targets>
      <Member MemberName="AccessibilityElementCount">
        <MemberSignature Language="C#" Value="public static nint AccessibilityElementCount (this UIKit.IUIAccessibilityContainer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nint AccessibilityElementCount(class UIKit.IUIAccessibilityContainer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAccessibilityContainer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the number of elements in the accessibility container.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAccessibilityContainer_Extensions" Member="M:MonoTouch.UIKit.UIAccessibilityContainer_Extensions.AccessibilityElementCount(MonoTouch.UIKit.IUIAccessibilityContainer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAccessibilityContainer" />
      </Targets>
      <Member MemberName="GetAccessibilityContainerType">
        <MemberSignature Language="C#" Value="public static UIKit.UIAccessibilityContainerType GetAccessibilityContainerType (this UIKit.IUIAccessibilityContainer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UIAccessibilityContainerType GetAccessibilityContainerType(class UIKit.IUIAccessibilityContainer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIAccessibilityContainerType</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAccessibilityContainer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAccessibilityContainer_Extensions" Member="M:MonoTouch.UIKit.UIAccessibilityContainer_Extensions.GetAccessibilityContainerType(MonoTouch.UIKit.IUIAccessibilityContainer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAccessibilityContainer" />
      </Targets>
      <Member MemberName="GetAccessibilityElementAt">
        <MemberSignature Language="C#" Value="public static Foundation.NSObject GetAccessibilityElementAt (this UIKit.IUIAccessibilityContainer This, nint index);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSObject GetAccessibilityElementAt(class UIKit.IUIAccessibilityContainer This, valuetype System.nint index) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSObject</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAccessibilityContainer" RefType="this" />
          <Parameter Name="index" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="index">To be added.</param>
          <summary>Returns the element at <paramref name="index" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAccessibilityContainer_Extensions" Member="M:MonoTouch.UIKit.UIAccessibilityContainer_Extensions.GetAccessibilityElementAt(MonoTouch.UIKit.IUIAccessibilityContainer,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAccessibilityContainer" />
      </Targets>
      <Member MemberName="GetAccessibilityElements">
        <MemberSignature Language="C#" Value="public static Foundation.NSObject GetAccessibilityElements (this UIKit.IUIAccessibilityContainer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSObject GetAccessibilityElements(class UIKit.IUIAccessibilityContainer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSObject</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAccessibilityContainer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the elements in the accessibility container.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAccessibilityContainer_Extensions" Member="M:MonoTouch.UIKit.UIAccessibilityContainer_Extensions.GetAccessibilityElements(MonoTouch.UIKit.IUIAccessibilityContainer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAccessibilityContainer" />
      </Targets>
      <Member MemberName="GetIndexOfAccessibilityElement">
        <MemberSignature Language="C#" Value="public static nint GetIndexOfAccessibilityElement (this UIKit.IUIAccessibilityContainer This, Foundation.NSObject element);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nint GetIndexOfAccessibilityElement(class UIKit.IUIAccessibilityContainer This, class Foundation.NSObject element) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAccessibilityContainer" RefType="this" />
          <Parameter Name="element" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="element">To be added.</param>
          <summary>Returns the index of <paramref name="element" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAccessibilityContainer_Extensions" Member="M:MonoTouch.UIKit.UIAccessibilityContainer_Extensions.GetIndexOfAccessibilityElement(MonoTouch.UIKit.IUIAccessibilityContainer,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAccessibilityContainer" />
      </Targets>
      <Member MemberName="SetAccessibilityContainerType">
        <MemberSignature Language="C#" Value="public static void SetAccessibilityContainerType (this UIKit.IUIAccessibilityContainer This, UIKit.UIAccessibilityContainerType value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAccessibilityContainerType(class UIKit.IUIAccessibilityContainer This, valuetype UIKit.UIAccessibilityContainerType value) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAccessibilityContainer" RefType="this" />
          <Parameter Name="value" Type="MonoTouch.UIKit.UIAccessibilityContainerType" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="value">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAccessibilityContainer_Extensions" Member="M:MonoTouch.UIKit.UIAccessibilityContainer_Extensions.SetAccessibilityContainerType(MonoTouch.UIKit.IUIAccessibilityContainer,MonoTouch.UIKit.UIAccessibilityContainerType)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAccessibilityContainer" />
      </Targets>
      <Member MemberName="SetAccessibilityElements">
        <MemberSignature Language="C#" Value="public static void SetAccessibilityElements (this UIKit.IUIAccessibilityContainer This, Foundation.NSObject elements);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAccessibilityElements(class UIKit.IUIAccessibilityContainer This, class Foundation.NSObject elements) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAccessibilityContainer" RefType="this" />
          <Parameter Name="elements" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="elements">To be added.</param>
          <summary>Assigns <paramref name="elements" /> to the contents of the accessibilty container.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAccessibilityContainer_Extensions" Member="M:MonoTouch.UIKit.UIAccessibilityContainer_Extensions.SetAccessibilityElements(MonoTouch.UIKit.IUIAccessibilityContainer,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAccessibilityContainerDataTable" />
      </Targets>
      <Member MemberName="GetAccessibilityHeaderElementsForColumn">
        <MemberSignature Language="C#" Value="public static UIKit.IUIAccessibilityContainerDataTableCell[] GetAccessibilityHeaderElementsForColumn (this UIKit.IUIAccessibilityContainerDataTable This, nuint column);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.IUIAccessibilityContainerDataTableCell[] GetAccessibilityHeaderElementsForColumn(class UIKit.IUIAccessibilityContainerDataTable This, valuetype System.nuint column) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.IUIAccessibilityContainerDataTableCell[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAccessibilityContainerDataTable" RefType="this" />
          <Parameter Name="column" Type="System.nuint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="column">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAccessibilityContainerDataTable_Extensions" Member="M:MonoTouch.UIKit.UIAccessibilityContainerDataTable_Extensions.GetAccessibilityHeaderElementsForColumn(MonoTouch.UIKit.IUIAccessibilityContainerDataTable,System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAccessibilityContainerDataTable" />
      </Targets>
      <Member MemberName="GetAccessibilityHeaderElementsForRow">
        <MemberSignature Language="C#" Value="public static UIKit.IUIAccessibilityContainerDataTableCell[] GetAccessibilityHeaderElementsForRow (this UIKit.IUIAccessibilityContainerDataTable This, nuint row);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.IUIAccessibilityContainerDataTableCell[] GetAccessibilityHeaderElementsForRow(class UIKit.IUIAccessibilityContainerDataTable This, valuetype System.nuint row) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.IUIAccessibilityContainerDataTableCell[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAccessibilityContainerDataTable" RefType="this" />
          <Parameter Name="row" Type="System.nuint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="row">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAccessibilityContainerDataTable_Extensions" Member="M:MonoTouch.UIKit.UIAccessibilityContainerDataTable_Extensions.GetAccessibilityHeaderElementsForRow(MonoTouch.UIKit.IUIAccessibilityContainerDataTable,System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAccessibilityReadingContent" />
      </Targets>
      <Member MemberName="GetAccessibilityAttributedContent">
        <MemberSignature Language="C#" Value="public static Foundation.NSAttributedString GetAccessibilityAttributedContent (this UIKit.IUIAccessibilityReadingContent This, nint lineNumber);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSAttributedString GetAccessibilityAttributedContent(class UIKit.IUIAccessibilityReadingContent This, valuetype System.nint lineNumber) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSAttributedString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAccessibilityReadingContent" RefType="this" />
          <Parameter Name="lineNumber" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="lineNumber">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAccessibilityReadingContent_Extensions" Member="M:MonoTouch.UIKit.UIAccessibilityReadingContent_Extensions.GetAccessibilityAttributedContent(MonoTouch.UIKit.IUIAccessibilityReadingContent,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAccessibilityReadingContent" />
      </Targets>
      <Member MemberName="GetAccessibilityAttributedPageContent">
        <MemberSignature Language="C#" Value="public static Foundation.NSAttributedString GetAccessibilityAttributedPageContent (this UIKit.IUIAccessibilityReadingContent This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSAttributedString GetAccessibilityAttributedPageContent(class UIKit.IUIAccessibilityReadingContent This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSAttributedString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAccessibilityReadingContent" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAccessibilityReadingContent_Extensions" Member="M:MonoTouch.UIKit.UIAccessibilityReadingContent_Extensions.GetAccessibilityAttributedPageContent(MonoTouch.UIKit.IUIAccessibilityReadingContent)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIActionSheetDelegate" />
      </Targets>
      <Member MemberName="Canceled">
        <MemberSignature Language="C#" Value="public static void Canceled (this UIKit.IUIActionSheetDelegate This, UIKit.UIActionSheet actionSheet);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Canceled(class UIKit.IUIActionSheetDelegate This, class UIKit.UIActionSheet actionSheet) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIActionSheetDelegate" RefType="this" />
          <Parameter Name="actionSheet" Type="MonoTouch.UIKit.UIActionSheet" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="actionSheet">To be added.</param>
          <summary>Indicates that the UIActionSheet was canceled.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIActionSheetDelegate_Extensions" Member="M:MonoTouch.UIKit.UIActionSheetDelegate_Extensions.Canceled(MonoTouch.UIKit.IUIActionSheetDelegate,MonoTouch.UIKit.UIActionSheet)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIActionSheetDelegate" />
      </Targets>
      <Member MemberName="Clicked">
        <MemberSignature Language="C#" Value="public static void Clicked (this UIKit.IUIActionSheetDelegate This, UIKit.UIActionSheet actionSheet, nint buttonIndex);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Clicked(class UIKit.IUIActionSheetDelegate This, class UIKit.UIActionSheet actionSheet, valuetype System.nint buttonIndex) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIActionSheetDelegate" RefType="this" />
          <Parameter Name="actionSheet" Type="MonoTouch.UIKit.UIActionSheet" />
          <Parameter Name="buttonIndex" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="actionSheet">To be added.</param>
          <param name="buttonIndex">To be added.</param>
          <summary>Indicates that the button at the buttonIndex was clicked.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIActionSheetDelegate_Extensions" Member="M:MonoTouch.UIKit.UIActionSheetDelegate_Extensions.Clicked(MonoTouch.UIKit.IUIActionSheetDelegate,MonoTouch.UIKit.UIActionSheet,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIActionSheetDelegate" />
      </Targets>
      <Member MemberName="Dismissed">
        <MemberSignature Language="C#" Value="public static void Dismissed (this UIKit.IUIActionSheetDelegate This, UIKit.UIActionSheet actionSheet, nint buttonIndex);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Dismissed(class UIKit.IUIActionSheetDelegate This, class UIKit.UIActionSheet actionSheet, valuetype System.nint buttonIndex) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIActionSheetDelegate" RefType="this" />
          <Parameter Name="actionSheet" Type="MonoTouch.UIKit.UIActionSheet" />
          <Parameter Name="buttonIndex" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="actionSheet">To be added.</param>
          <param name="buttonIndex">To be added.</param>
          <summary>Indicates that the action was dismissed from the screen due to pushing of the button at buttonIndex.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIActionSheetDelegate_Extensions" Member="M:MonoTouch.UIKit.UIActionSheetDelegate_Extensions.Dismissed(MonoTouch.UIKit.IUIActionSheetDelegate,MonoTouch.UIKit.UIActionSheet,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIActionSheetDelegate" />
      </Targets>
      <Member MemberName="Presented">
        <MemberSignature Language="C#" Value="public static void Presented (this UIKit.IUIActionSheetDelegate This, UIKit.UIActionSheet actionSheet);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Presented(class UIKit.IUIActionSheetDelegate This, class UIKit.UIActionSheet actionSheet) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIActionSheetDelegate" RefType="this" />
          <Parameter Name="actionSheet" Type="MonoTouch.UIKit.UIActionSheet" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="actionSheet">To be added.</param>
          <summary>Indicates that the action sheet was presented to the user.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIActionSheetDelegate_Extensions" Member="M:MonoTouch.UIKit.UIActionSheetDelegate_Extensions.Presented(MonoTouch.UIKit.IUIActionSheetDelegate,MonoTouch.UIKit.UIActionSheet)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIActionSheetDelegate" />
      </Targets>
      <Member MemberName="WillDismiss">
        <MemberSignature Language="C#" Value="public static void WillDismiss (this UIKit.IUIActionSheetDelegate This, UIKit.UIActionSheet actionSheet, nint buttonIndex);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillDismiss(class UIKit.IUIActionSheetDelegate This, class UIKit.UIActionSheet actionSheet, valuetype System.nint buttonIndex) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIActionSheetDelegate" RefType="this" />
          <Parameter Name="actionSheet" Type="MonoTouch.UIKit.UIActionSheet" />
          <Parameter Name="buttonIndex" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="actionSheet">To be added.</param>
          <param name="buttonIndex">To be added.</param>
          <summary>Indicates that the action sheet will shortly be dismissed due to pushing of the button at buttonIndex.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIActionSheetDelegate_Extensions" Member="M:MonoTouch.UIKit.UIActionSheetDelegate_Extensions.WillDismiss(MonoTouch.UIKit.IUIActionSheetDelegate,MonoTouch.UIKit.UIActionSheet,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIActionSheetDelegate" />
      </Targets>
      <Member MemberName="WillPresent">
        <MemberSignature Language="C#" Value="public static void WillPresent (this UIKit.IUIActionSheetDelegate This, UIKit.UIActionSheet actionSheet);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillPresent(class UIKit.IUIActionSheetDelegate This, class UIKit.UIActionSheet actionSheet) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIActionSheetDelegate" RefType="this" />
          <Parameter Name="actionSheet" Type="MonoTouch.UIKit.UIActionSheet" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="actionSheet">To be added.</param>
          <summary>Indicates that the action sheet is about to be presented.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIActionSheetDelegate_Extensions" Member="M:MonoTouch.UIKit.UIActionSheetDelegate_Extensions.WillPresent(MonoTouch.UIKit.IUIActionSheetDelegate,MonoTouch.UIKit.UIActionSheet)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIActivityItemSource" />
      </Targets>
      <Member MemberName="GetDataTypeIdentifierForActivity">
        <MemberSignature Language="C#" Value="public static string GetDataTypeIdentifierForActivity (this UIKit.IUIActivityItemSource This, UIKit.UIActivityViewController activityViewController, Foundation.NSString activityType);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDataTypeIdentifierForActivity(class UIKit.IUIActivityItemSource This, class UIKit.UIActivityViewController activityViewController, class Foundation.NSString activityType) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIActivityItemSource" RefType="this" />
          <Parameter Name="activityViewController" Type="MonoTouch.UIKit.UIActivityViewController" />
          <Parameter Name="activityType" Type="MonoTouch.Foundation.NSString" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="activityViewController">To be added.</param>
          <param name="activityType">To be added.This parameter can be .</param>
          <summary>If the specified  provides NSData, this method returns the Uniform Type Identifier (UTI) of the item.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIActivityItemSource_Extensions" Member="M:MonoTouch.UIKit.UIActivityItemSource_Extensions.GetDataTypeIdentifierForActivity(MonoTouch.UIKit.IUIActivityItemSource,MonoTouch.UIKit.UIActivityViewController,MonoTouch.Foundation.NSString)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIActivityItemSource" />
      </Targets>
      <Member MemberName="GetSubjectForActivity">
        <MemberSignature Language="C#" Value="public static string GetSubjectForActivity (this UIKit.IUIActivityItemSource This, UIKit.UIActivityViewController activityViewController, Foundation.NSString activityType);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetSubjectForActivity(class UIKit.IUIActivityItemSource This, class UIKit.UIActivityViewController activityViewController, class Foundation.NSString activityType) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIActivityItemSource" RefType="this" />
          <Parameter Name="activityViewController" Type="MonoTouch.UIKit.UIActivityViewController" />
          <Parameter Name="activityType" Type="MonoTouch.Foundation.NSString" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="activityViewController">To be added.</param>
          <param name="activityType">To be added.This parameter can be .</param>
          <summary>Returns the subject for the specified  .</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIActivityItemSource_Extensions" Member="M:MonoTouch.UIKit.UIActivityItemSource_Extensions.GetSubjectForActivity(MonoTouch.UIKit.IUIActivityItemSource,MonoTouch.UIKit.UIActivityViewController,MonoTouch.Foundation.NSString)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIActivityItemSource" />
      </Targets>
      <Member MemberName="GetThumbnailImageForActivity">
        <MemberSignature Language="C#" Value="public static UIKit.UIImage GetThumbnailImageForActivity (this UIKit.IUIActivityItemSource This, UIKit.UIActivityViewController activityViewController, Foundation.NSString activityType, CoreGraphics.CGSize suggestedSize);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIImage GetThumbnailImageForActivity(class UIKit.IUIActivityItemSource This, class UIKit.UIActivityViewController activityViewController, class Foundation.NSString activityType, valuetype CoreGraphics.CGSize suggestedSize) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIActivityItemSource" RefType="this" />
          <Parameter Name="activityViewController" Type="MonoTouch.UIKit.UIActivityViewController" />
          <Parameter Name="activityType" Type="MonoTouch.Foundation.NSString" />
          <Parameter Name="suggestedSize" Type="MonoTouch.CoreGraphics.CGSize" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="activityViewController">To be added.</param>
          <param name="activityType">To be added.This parameter can be .</param>
          <param name="suggestedSize">To be added.</param>
          <summary>Returns the preview image for the specified .</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIActivityItemSource_Extensions" Member="M:MonoTouch.UIKit.UIActivityItemSource_Extensions.GetThumbnailImageForActivity(MonoTouch.UIKit.IUIActivityItemSource,MonoTouch.UIKit.UIActivityViewController,MonoTouch.Foundation.NSString,MonoTouch.CoreGraphics.CGSize)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAdaptivePresentationControllerDelegate" />
      </Targets>
      <Member MemberName="GetAdaptivePresentationStyle">
        <MemberSignature Language="C#" Value="public static UIKit.UIModalPresentationStyle GetAdaptivePresentationStyle (this UIKit.IUIAdaptivePresentationControllerDelegate This, UIKit.UIPresentationController forPresentationController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UIModalPresentationStyle GetAdaptivePresentationStyle(class UIKit.IUIAdaptivePresentationControllerDelegate This, class UIKit.UIPresentationController forPresentationController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIModalPresentationStyle</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAdaptivePresentationControllerDelegate" RefType="this" />
          <Parameter Name="forPresentationController" Type="MonoTouch.UIKit.UIPresentationController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="forPresentationController">To be added.</param>
          <summary>Returns the new presentation style to use after a change to the <paramref name="forPresentationController" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAdaptivePresentationControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIAdaptivePresentationControllerDelegate_Extensions.GetAdaptivePresentationStyle(MonoTouch.UIKit.IUIAdaptivePresentationControllerDelegate,MonoTouch.UIKit.UIPresentationController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAdaptivePresentationControllerDelegate" />
      </Targets>
      <Member MemberName="GetAdaptivePresentationStyle">
        <MemberSignature Language="C#" Value="public static UIKit.UIModalPresentationStyle GetAdaptivePresentationStyle (this UIKit.IUIAdaptivePresentationControllerDelegate This, UIKit.UIPresentationController controller, UIKit.UITraitCollection traitCollection);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UIModalPresentationStyle GetAdaptivePresentationStyle(class UIKit.IUIAdaptivePresentationControllerDelegate This, class UIKit.UIPresentationController controller, class UIKit.UITraitCollection traitCollection) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIModalPresentationStyle</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAdaptivePresentationControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIPresentationController" />
          <Parameter Name="traitCollection" Type="MonoTouch.UIKit.UITraitCollection" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="traitCollection">To be added.</param>
          <summary>The presentation style to use for the specified <paramref name="controller" /> and <paramref name="traitCollection" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAdaptivePresentationControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIAdaptivePresentationControllerDelegate_Extensions.GetAdaptivePresentationStyle(MonoTouch.UIKit.IUIAdaptivePresentationControllerDelegate,MonoTouch.UIKit.UIPresentationController,MonoTouch.UIKit.UITraitCollection)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAdaptivePresentationControllerDelegate" />
      </Targets>
      <Member MemberName="GetViewControllerForAdaptivePresentation">
        <MemberSignature Language="C#" Value="public static UIKit.UIViewController GetViewControllerForAdaptivePresentation (this UIKit.IUIAdaptivePresentationControllerDelegate This, UIKit.UIPresentationController controller, UIKit.UIModalPresentationStyle style);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIViewController GetViewControllerForAdaptivePresentation(class UIKit.IUIAdaptivePresentationControllerDelegate This, class UIKit.UIPresentationController controller, valuetype UIKit.UIModalPresentationStyle style) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIViewController</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAdaptivePresentationControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIPresentationController" />
          <Parameter Name="style" Type="MonoTouch.UIKit.UIModalPresentationStyle" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="style">To be added.</param>
          <summary>The view controller to use for the specified <paramref name="style" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAdaptivePresentationControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIAdaptivePresentationControllerDelegate_Extensions.GetViewControllerForAdaptivePresentation(MonoTouch.UIKit.IUIAdaptivePresentationControllerDelegate,MonoTouch.UIKit.UIPresentationController,MonoTouch.UIKit.UIModalPresentationStyle)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAdaptivePresentationControllerDelegate" />
      </Targets>
      <Member MemberName="WillPresent">
        <MemberSignature Language="C#" Value="public static void WillPresent (this UIKit.IUIAdaptivePresentationControllerDelegate This, UIKit.UIPresentationController presentationController, UIKit.UIModalPresentationStyle style, UIKit.IUIViewControllerTransitionCoordinator transitionCoordinator);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillPresent(class UIKit.IUIAdaptivePresentationControllerDelegate This, class UIKit.UIPresentationController presentationController, valuetype UIKit.UIModalPresentationStyle style, class UIKit.IUIViewControllerTransitionCoordinator transitionCoordinator) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAdaptivePresentationControllerDelegate" RefType="this" />
          <Parameter Name="presentationController" Type="MonoTouch.UIKit.UIPresentationController" />
          <Parameter Name="style" Type="MonoTouch.UIKit.UIModalPresentationStyle" />
          <Parameter Name="transitionCoordinator" Type="MonoTouch.UIKit.IUIViewControllerTransitionCoordinator" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="presentationController">To be added.</param>
          <param name="style">To be added.</param>
          <param name="transitionCoordinator">To be added.</param>
          <summary>Called prior to presentation.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAdaptivePresentationControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIAdaptivePresentationControllerDelegate_Extensions.WillPresent(MonoTouch.UIKit.IUIAdaptivePresentationControllerDelegate,MonoTouch.UIKit.UIPresentationController,MonoTouch.UIKit.UIModalPresentationStyle,MonoTouch.UIKit.IUIViewControllerTransitionCoordinator)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAlertViewDelegate" />
      </Targets>
      <Member MemberName="Canceled">
        <MemberSignature Language="C#" Value="public static void Canceled (this UIKit.IUIAlertViewDelegate This, UIKit.UIAlertView alertView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Canceled(class UIKit.IUIAlertViewDelegate This, class UIKit.UIAlertView alertView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAlertViewDelegate" RefType="this" />
          <Parameter Name="alertView" Type="MonoTouch.UIKit.UIAlertView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="alertView">To be added.</param>
          <summary>Indicates that this UIAlertView is about to be canceled.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAlertViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIAlertViewDelegate_Extensions.Canceled(MonoTouch.UIKit.IUIAlertViewDelegate,MonoTouch.UIKit.UIAlertView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAlertViewDelegate" />
      </Targets>
      <Member MemberName="Clicked">
        <MemberSignature Language="C#" Value="public static void Clicked (this UIKit.IUIAlertViewDelegate This, UIKit.UIAlertView alertview, nint buttonIndex);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Clicked(class UIKit.IUIAlertViewDelegate This, class UIKit.UIAlertView alertview, valuetype System.nint buttonIndex) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAlertViewDelegate" RefType="this" />
          <Parameter Name="alertview" Type="MonoTouch.UIKit.UIAlertView" />
          <Parameter Name="buttonIndex" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="alertview">To be added.</param>
          <param name="buttonIndex">To be added.</param>
          <summary>Indicates that the user has clicked a button in this UIAlertView.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAlertViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIAlertViewDelegate_Extensions.Clicked(MonoTouch.UIKit.IUIAlertViewDelegate,MonoTouch.UIKit.UIAlertView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAlertViewDelegate" />
      </Targets>
      <Member MemberName="Dismissed">
        <MemberSignature Language="C#" Value="public static void Dismissed (this UIKit.IUIAlertViewDelegate This, UIKit.UIAlertView alertView, nint buttonIndex);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Dismissed(class UIKit.IUIAlertViewDelegate This, class UIKit.UIAlertView alertView, valuetype System.nint buttonIndex) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAlertViewDelegate" RefType="this" />
          <Parameter Name="alertView" Type="MonoTouch.UIKit.UIAlertView" />
          <Parameter Name="buttonIndex" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="alertView">To be added.</param>
          <param name="buttonIndex">To be added.</param>
          <summary>Indicates that this UIAlertView has been dismissed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAlertViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIAlertViewDelegate_Extensions.Dismissed(MonoTouch.UIKit.IUIAlertViewDelegate,MonoTouch.UIKit.UIAlertView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAlertViewDelegate" />
      </Targets>
      <Member MemberName="Presented">
        <MemberSignature Language="C#" Value="public static void Presented (this UIKit.IUIAlertViewDelegate This, UIKit.UIAlertView alertView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Presented(class UIKit.IUIAlertViewDelegate This, class UIKit.UIAlertView alertView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAlertViewDelegate" RefType="this" />
          <Parameter Name="alertView" Type="MonoTouch.UIKit.UIAlertView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="alertView">To be added.</param>
          <summary>Indicates that this UIAlertView has been presented to the application user.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAlertViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIAlertViewDelegate_Extensions.Presented(MonoTouch.UIKit.IUIAlertViewDelegate,MonoTouch.UIKit.UIAlertView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAlertViewDelegate" />
      </Targets>
      <Member MemberName="ShouldEnableFirstOtherButton">
        <MemberSignature Language="C#" Value="public static bool ShouldEnableFirstOtherButton (this UIKit.IUIAlertViewDelegate This, UIKit.UIAlertView alertView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldEnableFirstOtherButton(class UIKit.IUIAlertViewDelegate This, class UIKit.UIAlertView alertView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAlertViewDelegate" RefType="this" />
          <Parameter Name="alertView" Type="MonoTouch.UIKit.UIAlertView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="alertView">To be added.</param>
          <summary>Whether the first non-cancel button in this UIAlertView should be enabled.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAlertViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIAlertViewDelegate_Extensions.ShouldEnableFirstOtherButton(MonoTouch.UIKit.IUIAlertViewDelegate,MonoTouch.UIKit.UIAlertView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAlertViewDelegate" />
      </Targets>
      <Member MemberName="WillDismiss">
        <MemberSignature Language="C#" Value="public static void WillDismiss (this UIKit.IUIAlertViewDelegate This, UIKit.UIAlertView alertView, nint buttonIndex);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillDismiss(class UIKit.IUIAlertViewDelegate This, class UIKit.UIAlertView alertView, valuetype System.nint buttonIndex) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAlertViewDelegate" RefType="this" />
          <Parameter Name="alertView" Type="MonoTouch.UIKit.UIAlertView" />
          <Parameter Name="buttonIndex" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="alertView">To be added.</param>
          <param name="buttonIndex">To be added.</param>
          <summary>Indicates that this UIAlertView will shortly be dismissed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAlertViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIAlertViewDelegate_Extensions.WillDismiss(MonoTouch.UIKit.IUIAlertViewDelegate,MonoTouch.UIKit.UIAlertView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAlertViewDelegate" />
      </Targets>
      <Member MemberName="WillPresent">
        <MemberSignature Language="C#" Value="public static void WillPresent (this UIKit.IUIAlertViewDelegate This, UIKit.UIAlertView alertView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillPresent(class UIKit.IUIAlertViewDelegate This, class UIKit.UIAlertView alertView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAlertViewDelegate" RefType="this" />
          <Parameter Name="alertView" Type="MonoTouch.UIKit.UIAlertView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="alertView">To be added.</param>
          <summary>Indicates that this UIAlertView will shortly be presented to the application user.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAlertViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIAlertViewDelegate_Extensions.WillPresent(MonoTouch.UIKit.IUIAlertViewDelegate,MonoTouch.UIKit.UIAlertView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="AccessibilityPerformMagicTap">
        <MemberSignature Language="C#" Value="public static bool AccessibilityPerformMagicTap (this UIKit.IUIApplicationDelegate This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AccessibilityPerformMagicTap(class UIKit.IUIApplicationDelegate This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <summary>Performs the most important action of the app. Often, this is toggling the most important state of the app.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.AccessibilityPerformMagicTap(MonoTouch.UIKit.IUIApplicationDelegate)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="ApplicationSignificantTimeChange">
        <MemberSignature Language="C#" Value="public static void ApplicationSignificantTimeChange (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ApplicationSignificantTimeChange(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <summary>Indicates a significant change in time, such as midnight, change to Daylight Savings, or a shift in timezone.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.ApplicationSignificantTimeChange(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="ChangedStatusBarFrame">
        <MemberSignature Language="C#" Value="public static void ChangedStatusBarFrame (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, CoreGraphics.CGRect oldStatusBarFrame);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangedStatusBarFrame(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, valuetype CoreGraphics.CGRect oldStatusBarFrame) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="oldStatusBarFrame" Type="MonoTouch.CoreGraphics.CGRect" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <param name="oldStatusBarFrame">The status bar's previous Frame.</param>
          <summary>Indicates that the frame of the status bar has changed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.ChangedStatusBarFrame(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="ContinueUserActivity">
        <MemberSignature Language="C#" Value="public static bool ContinueUserActivity (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, Foundation.NSUserActivity userActivity, UIKit.UIApplicationRestorationHandler completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContinueUserActivity(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class Foundation.NSUserActivity userActivity, class UIKit.UIApplicationRestorationHandler completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="userActivity" Type="MonoTouch.Foundation.NSUserActivity" />
          <Parameter Name="completionHandler" Type="MonoTouch.UIKit.UIApplicationRestorationHandler">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDUIApplicationRestorationHandler))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">The  singleton.</param>
          <param name="userActivity">The user activity identifier.</param>
          <param name="completionHandler">System-provided callback that can be called with appropriate  or  objects.</param>
          <summary>Informs the app that there is data associated with continuing a task specified as a <see cref="T:Foundation.NSUserActivity" /> object, and then returns whether the app continued the activity.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.ContinueUserActivity(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.Foundation.NSUserActivity,MonoTouch.UIKit.UIApplicationRestorationHandler)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="DidChangeStatusBarOrientation">
        <MemberSignature Language="C#" Value="public static void DidChangeStatusBarOrientation (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, UIKit.UIInterfaceOrientation oldStatusBarOrientation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidChangeStatusBarOrientation(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, valuetype UIKit.UIInterfaceOrientation oldStatusBarOrientation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="oldStatusBarOrientation" Type="MonoTouch.UIKit.UIInterfaceOrientation" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <param name="oldStatusBarOrientation">The status bar's previous orientation.</param>
          <summary>Indicates that the orientation of the status bar has changed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.DidChangeStatusBarOrientation(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.UIKit.UIInterfaceOrientation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="DidDecodeRestorableState">
        <MemberSignature Language="C#" Value="public static void DidDecodeRestorableState (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, Foundation.NSCoder coder);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDecodeRestorableState(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class Foundation.NSCoder coder) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <param name="coder">To be added.</param>
          <summary>Indicates that the app should restore highest-level state.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.DidDecodeRestorableState(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.Foundation.NSCoder)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="DidEnterBackground">
        <MemberSignature Language="C#" Value="public static void DidEnterBackground (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidEnterBackground(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <summary>Indicates that the application has entered the background.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.DidEnterBackground(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="DidFailToContinueUserActivitiy">
        <MemberSignature Language="C#" Value="public static void DidFailToContinueUserActivitiy (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, string userActivityType, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFailToContinueUserActivitiy(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, string userActivityType, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="userActivityType" Type="System.String" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">To be added.</param>
          <param name="userActivityType">To be added.</param>
          <param name="error">To be added.</param>
          <summary>Informs the app that the activity of the <paramref name="userActivityType" /> type could not be continued, and specifies a <paramref name="error" /> as the reason for the failure.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.DidFailToContinueUserActivitiy(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,System.String,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="DidReceiveRemoteNotification">
        <MemberSignature Language="C#" Value="public static void DidReceiveRemoteNotification (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, Foundation.NSDictionary userInfo, Action&lt;UIKit.UIBackgroundFetchResult&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveRemoteNotification(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class Foundation.NSDictionary userInfo, class System.Action`1&lt;valuetype UIKit.UIBackgroundFetchResult&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="userInfo" Type="MonoTouch.Foundation.NSDictionary" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.UIKit.UIBackgroundFetchResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V4))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Handle to the UIApplication.</param>
          <param name="userInfo">To be added.</param>
          <param name="completionHandler">Callback to invoke to notify the operating system of the result of the background fetch operation.</param>
          <summary>Indicates that the app received a remote notification.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.DidReceiveRemoteNotification(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.Foundation.NSDictionary,System.Action{MonoTouch.UIKit.UIBackgroundFetchResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="DidRegisterUserNotificationSettings">
        <MemberSignature Language="C#" Value="public static void DidRegisterUserNotificationSettings (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, UIKit.UIUserNotificationSettings notificationSettings);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRegisterUserNotificationSettings(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class UIKit.UIUserNotificationSettings notificationSettings) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="notificationSettings" Type="MonoTouch.UIKit.UIUserNotificationSettings" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">To be added.</param>
          <param name="notificationSettings">To be added.</param>
          <summary>Informs the app of the type of notifications it can use, as a <see cref="T:UIKit.UIUserNotificationSettings" /> object.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.DidRegisterUserNotificationSettings(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.UIKit.UIUserNotificationSettings)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="FailedToRegisterForRemoteNotifications">
        <MemberSignature Language="C#" Value="public static void FailedToRegisterForRemoteNotifications (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FailedToRegisterForRemoteNotifications(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <param name="error">To be added.</param>
          <summary>Indicates that Apple Push Service did not successfully compete the registration process.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.FailedToRegisterForRemoteNotifications(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="FinishedLaunching">
        <MemberSignature Language="C#" Value="public static void FinishedLaunching (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FinishedLaunching(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <summary>The application has finished launching.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.FinishedLaunching(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="FinishedLaunching">
        <MemberSignature Language="C#" Value="public static bool FinishedLaunching (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, Foundation.NSDictionary launchOptions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool FinishedLaunching(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class Foundation.NSDictionary launchOptions) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="launchOptions" Type="MonoTouch.Foundation.NSDictionary" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <param name="launchOptions">An NSDictionary with the launch options, can be null.   Possible key values are UIApplication's LaunchOption static properties.</param>
          <summary>Indicates that launching has finished and the app will shortly begin running.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.FinishedLaunching(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="GetSupportedInterfaceOrientations">
        <MemberSignature Language="C#" Value="public static UIKit.UIInterfaceOrientationMask GetSupportedInterfaceOrientations (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, UIKit.UIWindow forWindow);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UIInterfaceOrientationMask GetSupportedInterfaceOrientations(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class UIKit.UIWindow forWindow) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIInterfaceOrientationMask</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="forWindow" Type="MonoTouch.UIKit.UIWindow">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.Transient</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <param name="forWindow">To be added.</param>
          <summary>The interface orientations supported by the app.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.GetSupportedInterfaceOrientations(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.UIKit.UIWindow)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="GetViewController">
        <MemberSignature Language="C#" Value="public static UIKit.UIViewController GetViewController (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, string[] restorationIdentifierComponents, Foundation.NSCoder coder);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIViewController GetViewController(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, string[] restorationIdentifierComponents, class Foundation.NSCoder coder) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIViewController</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="restorationIdentifierComponents" Type="System.String[]" />
          <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <param name="restorationIdentifierComponents">An array of identifiers that identify the path to the desired view controller, which should be last.</param>
          <param name="coder">To be added.</param>
          <summary>Retrieves the UIViewController identified by the last value in the restorationIdentifierComponents parameter.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.GetViewController(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,System.String[],MonoTouch.Foundation.NSCoder)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="GetWindow">
        <MemberSignature Language="C#" Value="public static UIKit.UIWindow GetWindow (this UIKit.IUIApplicationDelegate This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIWindow GetWindow(class UIKit.IUIApplicationDelegate This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIWindow</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.GetWindow(MonoTouch.UIKit.IUIApplicationDelegate)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="HandleAction">
        <MemberSignature Language="C#" Value="public static void HandleAction (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, string actionIdentifier, Foundation.NSDictionary remoteNotificationInfo, Foundation.NSDictionary responseInfo, Action completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleAction(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, string actionIdentifier, class Foundation.NSDictionary remoteNotificationInfo, class Foundation.NSDictionary responseInfo, class System.Action completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="actionIdentifier" Type="System.String" />
          <Parameter Name="remoteNotificationInfo" Type="MonoTouch.Foundation.NSDictionary" />
          <Parameter Name="responseInfo" Type="MonoTouch.Foundation.NSDictionary" />
          <Parameter Name="completionHandler" Type="System.Action">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAction))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">To be added.</param>
          <param name="actionIdentifier">To be added.</param>
          <param name="remoteNotificationInfo">To be added.</param>
          <param name="responseInfo">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>Informs the app of a custom action to perform based on a remote notification, and includes the <paramref name="actionIdentifier" /> value, <paramref name="remoteNoticationInfo" /> data from the notification, and <paramref name="completionHandler" /> for the app developer to run after performing the action.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.HandleAction(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,System.String,MonoTouch.Foundation.NSDictionary,MonoTouch.Foundation.NSDictionary,System.Action)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="HandleAction">
        <MemberSignature Language="C#" Value="public static void HandleAction (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, string actionIdentifier, Foundation.NSDictionary remoteNotificationInfo, Action completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleAction(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, string actionIdentifier, class Foundation.NSDictionary remoteNotificationInfo, class System.Action completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="actionIdentifier" Type="System.String" />
          <Parameter Name="remoteNotificationInfo" Type="MonoTouch.Foundation.NSDictionary" />
          <Parameter Name="completionHandler" Type="System.Action">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAction))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">To be added.</param>
          <param name="actionIdentifier">To be added.</param>
          <param name="remoteNotificationInfo">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>Informs the app of a custom action to perform based on a push notification, and includes the <paramref name="actionIdentifier" /> value, <paramref name="remoteNoticationInfo" /> data from the notification, and <paramref name="completionHandler" /> for the app developer to run after performing the action.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.HandleAction(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,System.String,MonoTouch.Foundation.NSDictionary,System.Action)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="HandleAction">
        <MemberSignature Language="C#" Value="public static void HandleAction (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, string actionIdentifier, UIKit.UILocalNotification localNotification, Foundation.NSDictionary responseInfo, Action completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleAction(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, string actionIdentifier, class UIKit.UILocalNotification localNotification, class Foundation.NSDictionary responseInfo, class System.Action completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="actionIdentifier" Type="System.String" />
          <Parameter Name="localNotification" Type="MonoTouch.UIKit.UILocalNotification" />
          <Parameter Name="responseInfo" Type="MonoTouch.Foundation.NSDictionary" />
          <Parameter Name="completionHandler" Type="System.Action">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAction))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">To be added.</param>
          <param name="actionIdentifier">To be added.</param>
          <param name="localNotification">To be added.</param>
          <param name="responseInfo">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>Informs the app of a custom action to perform based on a local notification, and includes the <paramref name="actionIdentifier" /> value, <paramref name="responseInfo" /> data from the notification, and <paramref name="completionHandler" /> for the app developer to run after performing the action.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.HandleAction(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,System.String,MonoTouch.UIKit.UILocalNotification,MonoTouch.Foundation.NSDictionary,System.Action)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="HandleAction">
        <MemberSignature Language="C#" Value="public static void HandleAction (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, string actionIdentifier, UIKit.UILocalNotification localNotification, Action completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleAction(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, string actionIdentifier, class UIKit.UILocalNotification localNotification, class System.Action completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="actionIdentifier" Type="System.String" />
          <Parameter Name="localNotification" Type="MonoTouch.UIKit.UILocalNotification" />
          <Parameter Name="completionHandler" Type="System.Action">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAction))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">To be added.</param>
          <param name="actionIdentifier">To be added.</param>
          <param name="localNotification">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>Informs the app that the user selected an action identified by the <paramref name="actionIdentifier" /> value from an alert of a <see cref="T:UIKit.UILocalNotification" /> object, and executes the <paramref name="completionHandler" /> block after it completes the action.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.HandleAction(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,System.String,MonoTouch.UIKit.UILocalNotification,System.Action)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="HandleEventsForBackgroundUrl">
        <MemberSignature Language="C#" Value="public static void HandleEventsForBackgroundUrl (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, string sessionIdentifier, Action completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleEventsForBackgroundUrl(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, string sessionIdentifier, class System.Action completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="sessionIdentifier" Type="System.String" />
          <Parameter Name="completionHandler" Type="System.Action">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAction))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">To be added.</param>
          <param name="sessionIdentifier">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>Raised when events relating to a background <see cref="T:UIKit.NSUrlSession" /> are waiting to be processed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.HandleEventsForBackgroundUrl(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,System.String,System.Action)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="HandleIntent">
        <MemberSignature Language="C#" Value="public static void HandleIntent (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, Intents.INIntent intent, Action&lt;Intents.INIntentResponse&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleIntent(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class Intents.INIntent intent, class System.Action`1&lt;class Intents.INIntentResponse&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="intent" Type="MonoTouch.Intents.INIntent" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Intents.INIntentResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V177))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">To be added.</param>
          <param name="intent">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.HandleIntent(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.Intents.INIntent,System.Action{MonoTouch.Intents.INIntentResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="HandleOpenURL">
        <MemberSignature Language="C#" Value="public static bool HandleOpenURL (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, Foundation.NSUrl url);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HandleOpenURL(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class Foundation.NSUrl url) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <param name="url">To be added.</param>
          <summary>Developers should use <see cref="M:UIKit.UIApplicationDelegate.OpenUrl" /> rather than this deprecated method.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.HandleOpenURL(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.Foundation.NSUrl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="HandleWatchKitExtensionRequest">
        <MemberSignature Language="C#" Value="public static void HandleWatchKitExtensionRequest (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, Foundation.NSDictionary userInfo, Action&lt;Foundation.NSDictionary&gt; reply);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleWatchKitExtensionRequest(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class Foundation.NSDictionary userInfo, class System.Action`1&lt;class Foundation.NSDictionary&gt; reply) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="userInfo" Type="MonoTouch.Foundation.NSDictionary" />
          <Parameter Name="reply" Type="System.Action&lt;MonoTouch.Foundation.NSDictionary&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V10))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">To be added.</param>
          <param name="userInfo">To be added.</param>
          <param name="reply">To be added.</param>
          <summary>A watchkit extension has made a request.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.HandleWatchKitExtensionRequest(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.Foundation.NSDictionary,System.Action{MonoTouch.Foundation.NSDictionary})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="OnActivated">
        <MemberSignature Language="C#" Value="public static void OnActivated (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OnActivated(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <summary>The app has moved from the inactive to actie state.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.OnActivated(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="OnResignActivation">
        <MemberSignature Language="C#" Value="public static void OnResignActivation (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OnResignActivation(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <summary>The app is about to move from the active state to the inactive state.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.OnResignActivation(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="OpenUrl">
        <MemberSignature Language="C#" Value="public static bool OpenUrl (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication app, Foundation.NSUrl url, Foundation.NSDictionary options);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool OpenUrl(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication app, class Foundation.NSUrl url, class Foundation.NSDictionary options) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="app" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="options" Type="MonoTouch.Foundation.NSDictionary" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="app">To be added.</param>
          <param name="url">To be added.</param>
          <param name="options">To be added.</param>
          <summary>Indicates that the application should open the specified <paramref name="url" /> with context from <paramref name="options" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.OpenUrl(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="OpenUrl">
        <MemberSignature Language="C#" Value="public static bool OpenUrl (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, Foundation.NSUrl url, string sourceApplication, Foundation.NSObject annotation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool OpenUrl(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class Foundation.NSUrl url, string sourceApplication, class Foundation.NSObject annotation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="sourceApplication" Type="System.String" />
          <Parameter Name="annotation" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to this application ().</param>
          <param name="url">The  specified by the calling application.</param>
          <param name="sourceApplication">The bundle ID of the calling application.</param>
          <param name="annotation">Optional property-list data passed by the calling application.</param>
          <summary>Loads a resource from the specified URL.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.OpenUrl(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.Foundation.NSUrl,System.String,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="PerformActionForShortcutItem">
        <MemberSignature Language="C#" Value="public static void PerformActionForShortcutItem (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, UIKit.UIApplicationShortcutItem shortcutItem, UIKit.UIOperationHandler completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformActionForShortcutItem(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class UIKit.UIApplicationShortcutItem shortcutItem, class UIKit.UIOperationHandler completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="shortcutItem" Type="MonoTouch.UIKit.UIApplicationShortcutItem" />
          <Parameter Name="completionHandler" Type="MonoTouch.UIKit.UIOperationHandler">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDUIOperationHandler))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">To be added.</param>
          <param name="shortcutItem">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>Called by the system when the user initiates a Home screen quick action, unless the interaction was handled in <see cref="M:UIKit.UIApplicationDelegate.WillFinishLaunching" /> or <see cref="M:UIKit.UIApplicationDelegate.DidFinishLaunching" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.PerformActionForShortcutItem(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.UIKit.UIApplicationShortcutItem,MonoTouch.UIKit.UIOperationHandler)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="PerformFetch">
        <MemberSignature Language="C#" Value="public static void PerformFetch (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, Action&lt;UIKit.UIBackgroundFetchResult&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformFetch(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class System.Action`1&lt;valuetype UIKit.UIBackgroundFetchResult&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.UIKit.UIBackgroundFetchResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V4))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Handle to the UIApplication.</param>
          <param name="completionHandler">Callback to invoke to notify the operating system of the result of the background fetch operation.</param>
          <summary>Indicates that the application can begin a fetch operation if it has data to download.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.PerformFetch(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,System.Action{MonoTouch.UIKit.UIBackgroundFetchResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="ProtectedDataDidBecomeAvailable">
        <MemberSignature Language="C#" Value="public static void ProtectedDataDidBecomeAvailable (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ProtectedDataDidBecomeAvailable(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <summary>Protected files are now available.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.ProtectedDataDidBecomeAvailable(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="ProtectedDataWillBecomeUnavailable">
        <MemberSignature Language="C#" Value="public static void ProtectedDataWillBecomeUnavailable (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ProtectedDataWillBecomeUnavailable(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <summary>Indicates that protected files are about to be encrypted and unavailable for reading.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.ProtectedDataWillBecomeUnavailable(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="ReceivedLocalNotification">
        <MemberSignature Language="C#" Value="public static void ReceivedLocalNotification (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, UIKit.UILocalNotification notification);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceivedLocalNotification(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class UIKit.UILocalNotification notification) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="notification" Type="MonoTouch.UIKit.UILocalNotification" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <param name="notification">To be added.</param>
          <summary>Indicates that the app received a local notification.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.ReceivedLocalNotification(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.UIKit.UILocalNotification)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="ReceivedRemoteNotification">
        <MemberSignature Language="C#" Value="public static void ReceivedRemoteNotification (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, Foundation.NSDictionary userInfo);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceivedRemoteNotification(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class Foundation.NSDictionary userInfo) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="userInfo" Type="MonoTouch.Foundation.NSDictionary" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <param name="userInfo">A dictionary whose "aps" key contains information related to the notification</param>
          <summary>Indicates that the app received a remote notification.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.ReceivedRemoteNotification(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="ReceiveMemoryWarning">
        <MemberSignature Language="C#" Value="public static void ReceiveMemoryWarning (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceiveMemoryWarning(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <summary>The app has received a low-memory warning from the system.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.ReceiveMemoryWarning(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="RegisteredForRemoteNotifications">
        <MemberSignature Language="C#" Value="public static void RegisteredForRemoteNotifications (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, Foundation.NSData deviceToken);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisteredForRemoteNotifications(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class Foundation.NSData deviceToken) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="deviceToken" Type="MonoTouch.Foundation.NSData" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <param name="deviceToken">To be added.</param>
          <summary>Indicates that the device successfully registered with Apple Push Service.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.RegisteredForRemoteNotifications(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.Foundation.NSData)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="SetWindow">
        <MemberSignature Language="C#" Value="public static void SetWindow (this UIKit.IUIApplicationDelegate This, UIKit.UIWindow value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetWindow(class UIKit.IUIApplicationDelegate This, class UIKit.UIWindow value) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="value" Type="MonoTouch.UIKit.UIWindow" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="value">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.SetWindow(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIWindow)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="ShouldAllowExtensionPointIdentifier">
        <MemberSignature Language="C#" Value="public static bool ShouldAllowExtensionPointIdentifier (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, Foundation.NSString extensionPointIdentifier);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldAllowExtensionPointIdentifier(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class Foundation.NSString extensionPointIdentifier) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="extensionPointIdentifier" Type="MonoTouch.Foundation.NSString" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">To be added.</param>
          <param name="extensionPointIdentifier">To be added.</param>
          <summary>Requests permission from the app to run app extensions based on the extension point identified by <paramref name="extensionPointIdentifier" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.ShouldAllowExtensionPointIdentifier(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.Foundation.NSString)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="ShouldRequestHealthAuthorization">
        <MemberSignature Language="C#" Value="public static void ShouldRequestHealthAuthorization (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ShouldRequestHealthAuthorization(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">To be added.</param>
          <summary>The system calls this method when the developer's app should ask the user for access to HealthKit data.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.ShouldRequestHealthAuthorization(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="ShouldRestoreApplicationState">
        <MemberSignature Language="C#" Value="public static bool ShouldRestoreApplicationState (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, Foundation.NSCoder coder);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldRestoreApplicationState(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class Foundation.NSCoder coder) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <param name="coder">To be added.</param>
          <summary>Whether the application should restore saved state information.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.ShouldRestoreApplicationState(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.Foundation.NSCoder)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="ShouldSaveApplicationState">
        <MemberSignature Language="C#" Value="public static bool ShouldSaveApplicationState (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, Foundation.NSCoder coder);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldSaveApplicationState(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class Foundation.NSCoder coder) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <param name="coder">To be added.</param>
          <summary>Whether the application should save application state information.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.ShouldSaveApplicationState(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.Foundation.NSCoder)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="UserActivityUpdated">
        <MemberSignature Language="C#" Value="public static void UserActivityUpdated (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, Foundation.NSUserActivity userActivity);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UserActivityUpdated(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class Foundation.NSUserActivity userActivity) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="userActivity" Type="MonoTouch.Foundation.NSUserActivity" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">To be added.</param>
          <param name="userActivity">To be added.</param>
          <summary>Informs the app that the <see cref="T:Foundation.NSUserActivity" /> object in <paramref name="userActivity" /> has been updated.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.UserActivityUpdated(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.Foundation.NSUserActivity)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="UserDidAcceptCloudKitShare">
        <MemberSignature Language="C#" Value="public static void UserDidAcceptCloudKitShare (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, CloudKit.CKShareMetadata cloudKitShareMetadata);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UserDidAcceptCloudKitShare(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class CloudKit.CKShareMetadata cloudKitShareMetadata) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="cloudKitShareMetadata" Type="MonoTouch.CloudKit.CKShareMetadata" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">To be added.</param>
          <param name="cloudKitShareMetadata">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.UserDidAcceptCloudKitShare(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.CloudKit.CKShareMetadata)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="WillChangeStatusBarFrame">
        <MemberSignature Language="C#" Value="public static void WillChangeStatusBarFrame (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, CoreGraphics.CGRect newStatusBarFrame);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillChangeStatusBarFrame(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, valuetype CoreGraphics.CGRect newStatusBarFrame) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="newStatusBarFrame" Type="MonoTouch.CoreGraphics.CGRect" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <param name="newStatusBarFrame">To be added.</param>
          <summary>Indicates that the frame of the status bar is about to change.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.WillChangeStatusBarFrame(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="WillChangeStatusBarOrientation">
        <MemberSignature Language="C#" Value="public static void WillChangeStatusBarOrientation (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, UIKit.UIInterfaceOrientation newStatusBarOrientation, double duration);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillChangeStatusBarOrientation(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, valuetype UIKit.UIInterfaceOrientation newStatusBarOrientation, float64 duration) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="newStatusBarOrientation" Type="MonoTouch.UIKit.UIInterfaceOrientation" />
          <Parameter Name="duration" Type="System.Double" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <param name="newStatusBarOrientation">To be added.</param>
          <param name="duration">To be added.</param>
          <summary>Indicates that the orientation of the status bar is about to change.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.WillChangeStatusBarOrientation(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.UIKit.UIInterfaceOrientation,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="WillContinueUserActivity">
        <MemberSignature Language="C#" Value="public static bool WillContinueUserActivity (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, string userActivityType);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WillContinueUserActivity(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, string userActivityType) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="userActivityType" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">The  singleton for the app.</param>
          <param name="userActivityType">The user activity identifier.</param>
          <summary>Informs the app that the user is attempting to continue a <paramref name="userActivityType" /> action for which data might not be available, and returns to notify the user that the app will continue the activity.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.WillContinueUserActivity(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="WillEncodeRestorableState">
        <MemberSignature Language="C#" Value="public static void WillEncodeRestorableState (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, Foundation.NSCoder coder);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillEncodeRestorableState(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class Foundation.NSCoder coder) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <param name="coder">To be added.</param>
          <summary>Indicates that the app is about to store application state data.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.WillEncodeRestorableState(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.Foundation.NSCoder)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="WillEnterForeground">
        <MemberSignature Language="C#" Value="public static void WillEnterForeground (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillEnterForeground(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <summary>Indicates that the application is about to enter the foreground.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.WillEnterForeground(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="WillFinishLaunching">
        <MemberSignature Language="C#" Value="public static bool WillFinishLaunching (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application, Foundation.NSDictionary launchOptions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WillFinishLaunching(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application, class Foundation.NSDictionary launchOptions) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="launchOptions" Type="MonoTouch.Foundation.NSDictionary" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <param name="launchOptions">An NSDictionary with the launch options, can be null.   Possible key values are UIApplication's LaunchOption static properties.</param>
          <summary>Indicates that the app is about to finish its launching procedures.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.WillFinishLaunching(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="WillTerminate">
        <MemberSignature Language="C#" Value="public static void WillTerminate (this UIKit.IUIApplicationDelegate This, UIKit.UIApplication application);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillTerminate(class UIKit.IUIApplicationDelegate This, class UIKit.UIApplication application) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <summary>Indicates that the app is about to terminate.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.WillTerminate(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIBarPositioningDelegate" />
      </Targets>
      <Member MemberName="GetPositionForBar">
        <MemberSignature Language="C#" Value="public static UIKit.UIBarPosition GetPositionForBar (this UIKit.IUIBarPositioningDelegate This, UIKit.IUIBarPositioning barPositioning);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UIBarPosition GetPositionForBar(class UIKit.IUIBarPositioningDelegate This, class UIKit.IUIBarPositioning barPositioning) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIBarPosition</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIBarPositioningDelegate" RefType="this" />
          <Parameter Name="barPositioning" Type="MonoTouch.UIKit.IUIBarPositioning" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="barPositioning">To be added.</param>
          <summary>Returns the position for <paramref name="barPositioning" /> after it has been added to the user interface.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIBarPositioningDelegate_Extensions" Member="M:MonoTouch.UIKit.UIBarPositioningDelegate_Extensions.GetPositionForBar(MonoTouch.UIKit.IUIBarPositioningDelegate,MonoTouch.UIKit.IUIBarPositioning)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICloudSharingControllerDelegate" />
      </Targets>
      <Member MemberName="DidSaveShare">
        <MemberSignature Language="C#" Value="public static void DidSaveShare (this UIKit.IUICloudSharingControllerDelegate This, UIKit.UICloudSharingController csc);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSaveShare(class UIKit.IUICloudSharingControllerDelegate This, class UIKit.UICloudSharingController csc) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICloudSharingControllerDelegate" RefType="this" />
          <Parameter Name="csc" Type="MonoTouch.UIKit.UICloudSharingController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="csc">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICloudSharingControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UICloudSharingControllerDelegate_Extensions.DidSaveShare(MonoTouch.UIKit.IUICloudSharingControllerDelegate,MonoTouch.UIKit.UICloudSharingController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICloudSharingControllerDelegate" />
      </Targets>
      <Member MemberName="DidStopSharing">
        <MemberSignature Language="C#" Value="public static void DidStopSharing (this UIKit.IUICloudSharingControllerDelegate This, UIKit.UICloudSharingController csc);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidStopSharing(class UIKit.IUICloudSharingControllerDelegate This, class UIKit.UICloudSharingController csc) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICloudSharingControllerDelegate" RefType="this" />
          <Parameter Name="csc" Type="MonoTouch.UIKit.UICloudSharingController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="csc">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICloudSharingControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UICloudSharingControllerDelegate_Extensions.DidStopSharing(MonoTouch.UIKit.IUICloudSharingControllerDelegate,MonoTouch.UIKit.UICloudSharingController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICloudSharingControllerDelegate" />
      </Targets>
      <Member MemberName="GetItemThumbnailData">
        <MemberSignature Language="C#" Value="public static Foundation.NSData GetItemThumbnailData (this UIKit.IUICloudSharingControllerDelegate This, UIKit.UICloudSharingController csc);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSData GetItemThumbnailData(class UIKit.IUICloudSharingControllerDelegate This, class UIKit.UICloudSharingController csc) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSData</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICloudSharingControllerDelegate" RefType="this" />
          <Parameter Name="csc" Type="MonoTouch.UIKit.UICloudSharingController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="csc">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICloudSharingControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UICloudSharingControllerDelegate_Extensions.GetItemThumbnailData(MonoTouch.UIKit.IUICloudSharingControllerDelegate,MonoTouch.UIKit.UICloudSharingController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICloudSharingControllerDelegate" />
      </Targets>
      <Member MemberName="GetItemType">
        <MemberSignature Language="C#" Value="public static string GetItemType (this UIKit.IUICloudSharingControllerDelegate This, UIKit.UICloudSharingController csc);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetItemType(class UIKit.IUICloudSharingControllerDelegate This, class UIKit.UICloudSharingController csc) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICloudSharingControllerDelegate" RefType="this" />
          <Parameter Name="csc" Type="MonoTouch.UIKit.UICloudSharingController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="csc">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICloudSharingControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UICloudSharingControllerDelegate_Extensions.GetItemType(MonoTouch.UIKit.IUICloudSharingControllerDelegate,MonoTouch.UIKit.UICloudSharingController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDataSource" />
      </Targets>
      <Member MemberName="CanMoveItem">
        <MemberSignature Language="C#" Value="public static bool CanMoveItem (this UIKit.IUICollectionViewDataSource This, UIKit.UICollectionView collectionView, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanMoveItem(class UIKit.IUICollectionViewDataSource This, class UIKit.UICollectionView collectionView, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDataSource" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDataSource_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDataSource_Extensions.CanMoveItem(MonoTouch.UIKit.IUICollectionViewDataSource,MonoTouch.UIKit.UICollectionView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDataSource" />
      </Targets>
      <Member MemberName="GetIndexPath">
        <MemberSignature Language="C#" Value="public static Foundation.NSIndexPath GetIndexPath (this UIKit.IUICollectionViewDataSource This, UIKit.UICollectionView collectionView, string title, nint atIndex);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSIndexPath GetIndexPath(class UIKit.IUICollectionViewDataSource This, class UIKit.UICollectionView collectionView, string title, valuetype System.nint atIndex) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSIndexPath</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDataSource" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="title" Type="System.String" />
          <Parameter Name="atIndex" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="title">To be added.</param>
          <param name="atIndex">To be added.</param>
          <summary>Requests the index path for the item in the collection view at the specified index with the specified title.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDataSource_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDataSource_Extensions.GetIndexPath(MonoTouch.UIKit.IUICollectionViewDataSource,MonoTouch.UIKit.UICollectionView,System.String,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDataSource" />
      </Targets>
      <Member MemberName="GetIndexTitles">
        <MemberSignature Language="C#" Value="public static string[] GetIndexTitles (this UIKit.IUICollectionViewDataSource This, UIKit.UICollectionView collectionView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetIndexTitles(class UIKit.IUICollectionViewDataSource This, class UIKit.UICollectionView collectionView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDataSource" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <summary>Requests the index titles for the items in the specified collection view.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDataSource_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDataSource_Extensions.GetIndexTitles(MonoTouch.UIKit.IUICollectionViewDataSource,MonoTouch.UIKit.UICollectionView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDataSource" />
      </Targets>
      <Member MemberName="GetViewForSupplementaryElement">
        <MemberSignature Language="C#" Value="public static UIKit.UICollectionReusableView GetViewForSupplementaryElement (this UIKit.IUICollectionViewDataSource This, UIKit.UICollectionView collectionView, Foundation.NSString elementKind, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UICollectionReusableView GetViewForSupplementaryElement(class UIKit.IUICollectionViewDataSource This, class UIKit.UICollectionView collectionView, class Foundation.NSString elementKind, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UICollectionReusableView</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDataSource" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="elementKind" Type="MonoTouch.Foundation.NSString" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="elementKind">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>The reusable view used for the supplementary element at the specified indexPath.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDataSource_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDataSource_Extensions.GetViewForSupplementaryElement(MonoTouch.UIKit.IUICollectionViewDataSource,MonoTouch.UIKit.UICollectionView,MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDataSource" />
      </Targets>
      <Member MemberName="MoveItem">
        <MemberSignature Language="C#" Value="public static void MoveItem (this UIKit.IUICollectionViewDataSource This, UIKit.UICollectionView collectionView, Foundation.NSIndexPath sourceIndexPath, Foundation.NSIndexPath destinationIndexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveItem(class UIKit.IUICollectionViewDataSource This, class UIKit.UICollectionView collectionView, class Foundation.NSIndexPath sourceIndexPath, class Foundation.NSIndexPath destinationIndexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDataSource" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="sourceIndexPath" Type="MonoTouch.Foundation.NSIndexPath" />
          <Parameter Name="destinationIndexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="sourceIndexPath">To be added.</param>
          <param name="destinationIndexPath">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDataSource_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDataSource_Extensions.MoveItem(MonoTouch.UIKit.IUICollectionViewDataSource,MonoTouch.UIKit.UICollectionView,MonoTouch.Foundation.NSIndexPath,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDataSource" />
      </Targets>
      <Member MemberName="NumberOfSections">
        <MemberSignature Language="C#" Value="public static nint NumberOfSections (this UIKit.IUICollectionViewDataSource This, UIKit.UICollectionView collectionView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nint NumberOfSections(class UIKit.IUICollectionViewDataSource This, class UIKit.UICollectionView collectionView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDataSource" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <summary>The number of sections in this UICollectionViewDataSource.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDataSource_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDataSource_Extensions.NumberOfSections(MonoTouch.UIKit.IUICollectionViewDataSource,MonoTouch.UIKit.UICollectionView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDataSourcePrefetching" />
      </Targets>
      <Member MemberName="CancelPrefetching">
        <MemberSignature Language="C#" Value="public static void CancelPrefetching (this UIKit.IUICollectionViewDataSourcePrefetching This, UIKit.UICollectionView collectionView, Foundation.NSIndexPath[] indexPaths);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CancelPrefetching(class UIKit.IUICollectionViewDataSourcePrefetching This, class UIKit.UICollectionView collectionView, class Foundation.NSIndexPath[] indexPaths) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDataSourcePrefetching" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="indexPaths" Type="MonoTouch.Foundation.NSIndexPath[]" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="collectionView">To be added.</param>
          <param name="indexPaths">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDataSourcePrefetching_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDataSourcePrefetching_Extensions.CancelPrefetching(MonoTouch.UIKit.IUICollectionViewDataSourcePrefetching,MonoTouch.UIKit.UICollectionView,MonoTouch.Foundation.NSIndexPath[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="CanFocusItem">
        <MemberSignature Language="C#" Value="public static bool CanFocusItem (this UIKit.IUICollectionViewDelegate This, UIKit.UICollectionView collectionView, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanFocusItem(class UIKit.IUICollectionViewDelegate This, class UIKit.UICollectionView collectionView, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">The  is associated with this.</param>
          <param name="indexPath">The  of the item being checked.</param>
          <summary>Whether the item at <paramref name="indexPath" /> can be focused.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.CanFocusItem(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="CanPerformAction">
        <MemberSignature Language="C#" Value="public static bool CanPerformAction (this UIKit.IUICollectionViewDelegate This, UIKit.UICollectionView collectionView, ObjCRuntime.Selector action, Foundation.NSIndexPath indexPath, Foundation.NSObject sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanPerformAction(class UIKit.IUICollectionViewDelegate This, class UIKit.UICollectionView collectionView, class ObjCRuntime.Selector action, class Foundation.NSIndexPath indexPath, class Foundation.NSObject sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="action" Type="MonoTouch.ObjCRuntime.Selector" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="action">To be added.</param>
          <param name="indexPath">To be added.</param>
          <param name="sender">To be added.</param>
          <summary>Whether the cell at the specified <paramref name="indexPath" /> supports the specified action.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.CanPerformAction(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.ObjCRuntime.Selector,MonoTouch.Foundation.NSIndexPath,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="CellDisplayingEnded">
        <MemberSignature Language="C#" Value="public static void CellDisplayingEnded (this UIKit.IUICollectionViewDelegate This, UIKit.UICollectionView collectionView, UIKit.UICollectionViewCell cell, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CellDisplayingEnded(class UIKit.IUICollectionViewDelegate This, class UIKit.UICollectionView collectionView, class UIKit.UICollectionViewCell cell, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="cell" Type="MonoTouch.UIKit.UICollectionViewCell" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="cell">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>Indicates that the cell at the specified indexPath has been removed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.CellDisplayingEnded(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.UIKit.UICollectionViewCell,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="DidUpdateFocus">
        <MemberSignature Language="C#" Value="public static void DidUpdateFocus (this UIKit.IUICollectionViewDelegate This, UIKit.UICollectionView collectionView, UIKit.UICollectionViewFocusUpdateContext context, UIKit.UIFocusAnimationCoordinator coordinator);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateFocus(class UIKit.IUICollectionViewDelegate This, class UIKit.UICollectionView collectionView, class UIKit.UICollectionViewFocusUpdateContext context, class UIKit.UIFocusAnimationCoordinator coordinator) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="context" Type="MonoTouch.UIKit.UICollectionViewFocusUpdateContext" />
          <Parameter Name="coordinator" Type="MonoTouch.UIKit.UIFocusAnimationCoordinator" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="context">Metadata for the focus change.</param>
          <param name="coordinator">The  coordinating the focus-change animations.</param>
          <summary>Indicates that the focus changed as detailed in the <paramref name="context" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.DidUpdateFocus(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.UIKit.UICollectionViewFocusUpdateContext,MonoTouch.UIKit.UIFocusAnimationCoordinator)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="GetIndexPathForPreferredFocusedView">
        <MemberSignature Language="C#" Value="public static Foundation.NSIndexPath GetIndexPathForPreferredFocusedView (this UIKit.IUICollectionViewDelegate This, UIKit.UICollectionView collectionView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSIndexPath GetIndexPathForPreferredFocusedView(class UIKit.IUICollectionViewDelegate This, class UIKit.UICollectionView collectionView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSIndexPath</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <summary>When overridden, allows the developer to specify the item that should initially receive focus.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.GetIndexPathForPreferredFocusedView(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="GetTargetContentOffset">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGPoint GetTargetContentOffset (this UIKit.IUICollectionViewDelegate This, UIKit.UICollectionView collectionView, CoreGraphics.CGPoint proposedContentOffset);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGPoint GetTargetContentOffset(class UIKit.IUICollectionViewDelegate This, class UIKit.UICollectionView collectionView, valuetype CoreGraphics.CGPoint proposedContentOffset) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGPoint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="proposedContentOffset" Type="MonoTouch.CoreGraphics.CGPoint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="proposedContentOffset">To be added.</param>
          <summary>When overridden, allows the developer to modify the content offset for layout and animation changes.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.GetTargetContentOffset(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.CoreGraphics.CGPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="GetTargetIndexPathForMove">
        <MemberSignature Language="C#" Value="public static Foundation.NSIndexPath GetTargetIndexPathForMove (this UIKit.IUICollectionViewDelegate This, UIKit.UICollectionView collectionView, Foundation.NSIndexPath originalIndexPath, Foundation.NSIndexPath proposedIndexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSIndexPath GetTargetIndexPathForMove(class UIKit.IUICollectionViewDelegate This, class UIKit.UICollectionView collectionView, class Foundation.NSIndexPath originalIndexPath, class Foundation.NSIndexPath proposedIndexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSIndexPath</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="originalIndexPath" Type="MonoTouch.Foundation.NSIndexPath" />
          <Parameter Name="proposedIndexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="originalIndexPath">To be added.</param>
          <param name="proposedIndexPath">To be added.</param>
          <summary>When overridden, allows the developer to modify the final location of a moved item. (For instance, to disallow a move to a particular <paramref name="proposedIndexPath" />.)</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.GetTargetIndexPathForMove(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.Foundation.NSIndexPath,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="ItemDeselected">
        <MemberSignature Language="C#" Value="public static void ItemDeselected (this UIKit.IUICollectionViewDelegate This, UIKit.UICollectionView collectionView, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ItemDeselected(class UIKit.IUICollectionViewDelegate This, class UIKit.UICollectionView collectionView, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>Indicates that the cell at the specified indexPath has been deselected.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.ItemDeselected(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="ItemHighlighted">
        <MemberSignature Language="C#" Value="public static void ItemHighlighted (this UIKit.IUICollectionViewDelegate This, UIKit.UICollectionView collectionView, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ItemHighlighted(class UIKit.IUICollectionViewDelegate This, class UIKit.UICollectionView collectionView, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>Indicates that the cell at the specified indexPath has been highlighted.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.ItemHighlighted(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="ItemSelected">
        <MemberSignature Language="C#" Value="public static void ItemSelected (this UIKit.IUICollectionViewDelegate This, UIKit.UICollectionView collectionView, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ItemSelected(class UIKit.IUICollectionViewDelegate This, class UIKit.UICollectionView collectionView, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>Indicates that the cell at the specified indexPath has been selected.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.ItemSelected(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="ItemUnhighlighted">
        <MemberSignature Language="C#" Value="public static void ItemUnhighlighted (this UIKit.IUICollectionViewDelegate This, UIKit.UICollectionView collectionView, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ItemUnhighlighted(class UIKit.IUICollectionViewDelegate This, class UIKit.UICollectionView collectionView, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>Indicates that the cell at the specified indexPath has been unhighlighted.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.ItemUnhighlighted(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="PerformAction">
        <MemberSignature Language="C#" Value="public static void PerformAction (this UIKit.IUICollectionViewDelegate This, UIKit.UICollectionView collectionView, ObjCRuntime.Selector action, Foundation.NSIndexPath indexPath, Foundation.NSObject sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformAction(class UIKit.IUICollectionViewDelegate This, class UIKit.UICollectionView collectionView, class ObjCRuntime.Selector action, class Foundation.NSIndexPath indexPath, class Foundation.NSObject sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="action" Type="MonoTouch.ObjCRuntime.Selector" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="action">To be added.</param>
          <param name="indexPath">To be added.</param>
          <param name="sender">To be added.</param>
          <summary>Whether the cell at the specified indexPath supports the specified Copy or Paste action.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.PerformAction(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.ObjCRuntime.Selector,MonoTouch.Foundation.NSIndexPath,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="ShouldDeselectItem">
        <MemberSignature Language="C#" Value="public static bool ShouldDeselectItem (this UIKit.IUICollectionViewDelegate This, UIKit.UICollectionView collectionView, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldDeselectItem(class UIKit.IUICollectionViewDelegate This, class UIKit.UICollectionView collectionView, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>Whether the cell at the specified indexPath should allow itself to be deselected.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.ShouldDeselectItem(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="ShouldHighlightItem">
        <MemberSignature Language="C#" Value="public static bool ShouldHighlightItem (this UIKit.IUICollectionViewDelegate This, UIKit.UICollectionView collectionView, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldHighlightItem(class UIKit.IUICollectionViewDelegate This, class UIKit.UICollectionView collectionView, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>Whether the cell at the specified indexPath should allow itself to be highlighted.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.ShouldHighlightItem(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="ShouldSelectItem">
        <MemberSignature Language="C#" Value="public static bool ShouldSelectItem (this UIKit.IUICollectionViewDelegate This, UIKit.UICollectionView collectionView, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldSelectItem(class UIKit.IUICollectionViewDelegate This, class UIKit.UICollectionView collectionView, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>Whether the cell at the specified indexPath allows itself to be selected.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.ShouldSelectItem(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="ShouldShowMenu">
        <MemberSignature Language="C#" Value="public static bool ShouldShowMenu (this UIKit.IUICollectionViewDelegate This, UIKit.UICollectionView collectionView, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldShowMenu(class UIKit.IUICollectionViewDelegate This, class UIKit.UICollectionView collectionView, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>Whether the cell at the specified indexPath should show an Action menu.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.ShouldShowMenu(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="ShouldSpringLoadItem">
        <MemberSignature Language="C#" Value="public static bool ShouldSpringLoadItem (this UIKit.IUICollectionViewDelegate This, UIKit.UICollectionView collectionView, Foundation.NSIndexPath indexPath, UIKit.IUISpringLoadedInteractionContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldSpringLoadItem(class UIKit.IUICollectionViewDelegate This, class UIKit.UICollectionView collectionView, class Foundation.NSIndexPath indexPath, class UIKit.IUISpringLoadedInteractionContext context) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
          <Parameter Name="context" Type="MonoTouch.UIKit.IUISpringLoadedInteractionContext" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="indexPath">To be added.</param>
          <param name="context">To be added.</param>
          <summary>Method that is called to indicate whether the identified item should springload in the specified context.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.ShouldSpringLoadItem(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.Foundation.NSIndexPath,MonoTouch.UIKit.IUISpringLoadedInteractionContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="ShouldUpdateFocus">
        <MemberSignature Language="C#" Value="public static bool ShouldUpdateFocus (this UIKit.IUICollectionViewDelegate This, UIKit.UICollectionView collectionView, UIKit.UICollectionViewFocusUpdateContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldUpdateFocus(class UIKit.IUICollectionViewDelegate This, class UIKit.UICollectionView collectionView, class UIKit.UICollectionViewFocusUpdateContext context) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="context" Type="MonoTouch.UIKit.UICollectionViewFocusUpdateContext" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="context">To be added.</param>
          <summary>When overridden, allows the developer to prevent the focus change specified in <paramref name="context" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.ShouldUpdateFocus(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.UIKit.UICollectionViewFocusUpdateContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="SupplementaryViewDisplayingEnded">
        <MemberSignature Language="C#" Value="public static void SupplementaryViewDisplayingEnded (this UIKit.IUICollectionViewDelegate This, UIKit.UICollectionView collectionView, UIKit.UICollectionReusableView view, Foundation.NSString elementKind, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SupplementaryViewDisplayingEnded(class UIKit.IUICollectionViewDelegate This, class UIKit.UICollectionView collectionView, class UIKit.UICollectionReusableView view, class Foundation.NSString elementKind, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="view" Type="MonoTouch.UIKit.UICollectionReusableView" />
          <Parameter Name="elementKind" Type="MonoTouch.Foundation.NSString" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="view">To be added.</param>
          <param name="elementKind">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>Indicates that the supplementary view at the specified indexPath has been removed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.SupplementaryViewDisplayingEnded(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.UIKit.UICollectionReusableView,MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="TransitionLayout">
        <MemberSignature Language="C#" Value="public static UIKit.UICollectionViewTransitionLayout TransitionLayout (this UIKit.IUICollectionViewDelegate This, UIKit.UICollectionView collectionView, UIKit.UICollectionViewLayout fromLayout, UIKit.UICollectionViewLayout toLayout);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UICollectionViewTransitionLayout TransitionLayout(class UIKit.IUICollectionViewDelegate This, class UIKit.UICollectionView collectionView, class UIKit.UICollectionViewLayout fromLayout, class UIKit.UICollectionViewLayout toLayout) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UICollectionViewTransitionLayout</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="fromLayout" Type="MonoTouch.UIKit.UICollectionViewLayout" />
          <Parameter Name="toLayout" Type="MonoTouch.UIKit.UICollectionViewLayout" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="fromLayout">To be added.</param>
          <param name="toLayout">To be added.</param>
          <summary>The UICollectionViewTransitionLayout to be used when moving from the specified fromLayout to the toLayout.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.TransitionLayout(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.UIKit.UICollectionViewLayout,MonoTouch.UIKit.UICollectionViewLayout)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="WillDisplayCell">
        <MemberSignature Language="C#" Value="public static void WillDisplayCell (this UIKit.IUICollectionViewDelegate This, UIKit.UICollectionView collectionView, UIKit.UICollectionViewCell cell, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillDisplayCell(class UIKit.IUICollectionViewDelegate This, class UIKit.UICollectionView collectionView, class UIKit.UICollectionViewCell cell, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="cell" Type="MonoTouch.UIKit.UICollectionViewCell" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="cell">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>The <paramref name="cell" /> is about to be displayed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.WillDisplayCell(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.UIKit.UICollectionViewCell,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="WillDisplaySupplementaryView">
        <MemberSignature Language="C#" Value="public static void WillDisplaySupplementaryView (this UIKit.IUICollectionViewDelegate This, UIKit.UICollectionView collectionView, UIKit.UICollectionReusableView view, string elementKind, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillDisplaySupplementaryView(class UIKit.IUICollectionViewDelegate This, class UIKit.UICollectionView collectionView, class UIKit.UICollectionReusableView view, string elementKind, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="view" Type="MonoTouch.UIKit.UICollectionReusableView" />
          <Parameter Name="elementKind" Type="System.String" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="view">To be added.</param>
          <param name="elementKind">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>The supplementary <paramref name="view" /> is about to be displayed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.WillDisplaySupplementaryView(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.UIKit.UICollectionReusableView,System.String,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout" />
      </Targets>
      <Member MemberName="GetInsetForSection">
        <MemberSignature Language="C#" Value="public static UIKit.UIEdgeInsets GetInsetForSection (this UIKit.IUICollectionViewDelegateFlowLayout This, UIKit.UICollectionView collectionView, UIKit.UICollectionViewLayout layout, nint section);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UIEdgeInsets GetInsetForSection(class UIKit.IUICollectionViewDelegateFlowLayout This, class UIKit.UICollectionView collectionView, class UIKit.UICollectionViewLayout layout, valuetype System.nint section) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIEdgeInsets</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="layout" Type="MonoTouch.UIKit.UICollectionViewLayout" />
          <Parameter Name="section" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="layout">To be added.</param>
          <param name="section">To be added.</param>
          <summary>The margins to apply to content in the specified section.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegateFlowLayout_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegateFlowLayout_Extensions.GetInsetForSection(MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout,MonoTouch.UIKit.UICollectionView,MonoTouch.UIKit.UICollectionViewLayout,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout" />
      </Targets>
      <Member MemberName="GetMinimumInteritemSpacingForSection">
        <MemberSignature Language="C#" Value="public static nfloat GetMinimumInteritemSpacingForSection (this UIKit.IUICollectionViewDelegateFlowLayout This, UIKit.UICollectionView collectionView, UIKit.UICollectionViewLayout layout, nint section);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat GetMinimumInteritemSpacingForSection(class UIKit.IUICollectionViewDelegateFlowLayout This, class UIKit.UICollectionView collectionView, class UIKit.UICollectionViewLayout layout, valuetype System.nint section) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="layout" Type="MonoTouch.UIKit.UICollectionViewLayout" />
          <Parameter Name="section" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="layout">To be added.</param>
          <param name="section">To be added.</param>
          <summary>The spacing between items in the rows or columns of a section.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegateFlowLayout_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegateFlowLayout_Extensions.GetMinimumInteritemSpacingForSection(MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout,MonoTouch.UIKit.UICollectionView,MonoTouch.UIKit.UICollectionViewLayout,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout" />
      </Targets>
      <Member MemberName="GetMinimumLineSpacingForSection">
        <MemberSignature Language="C#" Value="public static nfloat GetMinimumLineSpacingForSection (this UIKit.IUICollectionViewDelegateFlowLayout This, UIKit.UICollectionView collectionView, UIKit.UICollectionViewLayout layout, nint section);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat GetMinimumLineSpacingForSection(class UIKit.IUICollectionViewDelegateFlowLayout This, class UIKit.UICollectionView collectionView, class UIKit.UICollectionViewLayout layout, valuetype System.nint section) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="layout" Type="MonoTouch.UIKit.UICollectionViewLayout" />
          <Parameter Name="section" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="layout">To be added.</param>
          <param name="section">To be added.</param>
          <summary>The spacing between rows or columns of a section.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegateFlowLayout_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegateFlowLayout_Extensions.GetMinimumLineSpacingForSection(MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout,MonoTouch.UIKit.UICollectionView,MonoTouch.UIKit.UICollectionViewLayout,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout" />
      </Targets>
      <Member MemberName="GetReferenceSizeForFooter">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize GetReferenceSizeForFooter (this UIKit.IUICollectionViewDelegateFlowLayout This, UIKit.UICollectionView collectionView, UIKit.UICollectionViewLayout layout, nint section);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize GetReferenceSizeForFooter(class UIKit.IUICollectionViewDelegateFlowLayout This, class UIKit.UICollectionView collectionView, class UIKit.UICollectionViewLayout layout, valuetype System.nint section) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="layout" Type="MonoTouch.UIKit.UICollectionViewLayout" />
          <Parameter Name="section" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="layout">To be added.</param>
          <param name="section">To be added.</param>
          <summary>The size of the footer view for the specified section.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegateFlowLayout_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegateFlowLayout_Extensions.GetReferenceSizeForFooter(MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout,MonoTouch.UIKit.UICollectionView,MonoTouch.UIKit.UICollectionViewLayout,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout" />
      </Targets>
      <Member MemberName="GetReferenceSizeForHeader">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize GetReferenceSizeForHeader (this UIKit.IUICollectionViewDelegateFlowLayout This, UIKit.UICollectionView collectionView, UIKit.UICollectionViewLayout layout, nint section);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize GetReferenceSizeForHeader(class UIKit.IUICollectionViewDelegateFlowLayout This, class UIKit.UICollectionView collectionView, class UIKit.UICollectionViewLayout layout, valuetype System.nint section) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="layout" Type="MonoTouch.UIKit.UICollectionViewLayout" />
          <Parameter Name="section" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="layout">To be added.</param>
          <param name="section">To be added.</param>
          <summary>The size of the header view for the specified section.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegateFlowLayout_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegateFlowLayout_Extensions.GetReferenceSizeForHeader(MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout,MonoTouch.UIKit.UICollectionView,MonoTouch.UIKit.UICollectionViewLayout,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout" />
      </Targets>
      <Member MemberName="GetSizeForItem">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize GetSizeForItem (this UIKit.IUICollectionViewDelegateFlowLayout This, UIKit.UICollectionView collectionView, UIKit.UICollectionViewLayout layout, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize GetSizeForItem(class UIKit.IUICollectionViewDelegateFlowLayout This, class UIKit.UICollectionView collectionView, class UIKit.UICollectionViewLayout layout, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="layout" Type="MonoTouch.UIKit.UICollectionViewLayout" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="layout">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>The size of the specified item's cell.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegateFlowLayout_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegateFlowLayout_Extensions.GetSizeForItem(MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout,MonoTouch.UIKit.UICollectionView,MonoTouch.UIKit.UICollectionViewLayout,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDragDelegate" />
      </Targets>
      <Member MemberName="DragSessionAllowsMoveOperation">
        <MemberSignature Language="C#" Value="public static bool DragSessionAllowsMoveOperation (this UIKit.IUICollectionViewDragDelegate This, UIKit.UICollectionView collectionView, UIKit.IUIDragSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DragSessionAllowsMoveOperation(class UIKit.IUICollectionViewDragDelegate This, class UIKit.UICollectionView collectionView, class UIKit.IUIDragSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDragDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDragSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="session">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDragDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDragDelegate_Extensions.DragSessionAllowsMoveOperation(MonoTouch.UIKit.IUICollectionViewDragDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.UIKit.IUIDragSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDragDelegate" />
      </Targets>
      <Member MemberName="DragSessionDidEnd">
        <MemberSignature Language="C#" Value="public static void DragSessionDidEnd (this UIKit.IUICollectionViewDragDelegate This, UIKit.UICollectionView collectionView, UIKit.IUIDragSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DragSessionDidEnd(class UIKit.IUICollectionViewDragDelegate This, class UIKit.UICollectionView collectionView, class UIKit.IUIDragSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDragDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDragSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="session">To be added.</param>
          <summary>Method that is called when the user cancels or completes the drag session.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDragDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDragDelegate_Extensions.DragSessionDidEnd(MonoTouch.UIKit.IUICollectionViewDragDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.UIKit.IUIDragSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDragDelegate" />
      </Targets>
      <Member MemberName="DragSessionIsRestrictedToDraggingApplication">
        <MemberSignature Language="C#" Value="public static bool DragSessionIsRestrictedToDraggingApplication (this UIKit.IUICollectionViewDragDelegate This, UIKit.UICollectionView collectionView, UIKit.IUIDragSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DragSessionIsRestrictedToDraggingApplication(class UIKit.IUICollectionViewDragDelegate This, class UIKit.UICollectionView collectionView, class UIKit.IUIDragSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDragDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDragSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="session">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDragDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDragDelegate_Extensions.DragSessionIsRestrictedToDraggingApplication(MonoTouch.UIKit.IUICollectionViewDragDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.UIKit.IUIDragSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDragDelegate" />
      </Targets>
      <Member MemberName="DragSessionWillBegin">
        <MemberSignature Language="C#" Value="public static void DragSessionWillBegin (this UIKit.IUICollectionViewDragDelegate This, UIKit.UICollectionView collectionView, UIKit.IUIDragSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DragSessionWillBegin(class UIKit.IUICollectionViewDragDelegate This, class UIKit.UICollectionView collectionView, class UIKit.IUIDragSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDragDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDragSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="session">To be added.</param>
          <summary>Method that is called just before a drag session begins.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDragDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDragDelegate_Extensions.DragSessionWillBegin(MonoTouch.UIKit.IUICollectionViewDragDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.UIKit.IUIDragSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDragDelegate" />
      </Targets>
      <Member MemberName="GetDragPreviewParameters">
        <MemberSignature Language="C#" Value="public static UIKit.UIDragPreviewParameters GetDragPreviewParameters (this UIKit.IUICollectionViewDragDelegate This, UIKit.UICollectionView collectionView, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIDragPreviewParameters GetDragPreviewParameters(class UIKit.IUICollectionViewDragDelegate This, class UIKit.UICollectionView collectionView, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIDragPreviewParameters</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDragDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>Gets the preview parameters for the item at the specified index path.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDragDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDragDelegate_Extensions.GetDragPreviewParameters(MonoTouch.UIKit.IUICollectionViewDragDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDragDelegate" />
      </Targets>
      <Member MemberName="GetItemsForAddingToDragSession">
        <MemberSignature Language="C#" Value="public static UIKit.UIDragItem[] GetItemsForAddingToDragSession (this UIKit.IUICollectionViewDragDelegate This, UIKit.UICollectionView collectionView, UIKit.IUIDragSession session, Foundation.NSIndexPath indexPath, CoreGraphics.CGPoint point);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIDragItem[] GetItemsForAddingToDragSession(class UIKit.IUICollectionViewDragDelegate This, class UIKit.UICollectionView collectionView, class UIKit.IUIDragSession session, class Foundation.NSIndexPath indexPath, valuetype CoreGraphics.CGPoint point) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIDragItem[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDragDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDragSession" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
          <Parameter Name="point" Type="MonoTouch.CoreGraphics.CGPoint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="session">To be added.</param>
          <param name="indexPath">To be added.</param>
          <param name="point">To be added.</param>
          <summary>Adds the items at the index path to the drag session.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDragDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDragDelegate_Extensions.GetItemsForAddingToDragSession(MonoTouch.UIKit.IUICollectionViewDragDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.UIKit.IUIDragSession,MonoTouch.Foundation.NSIndexPath,MonoTouch.CoreGraphics.CGPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDropDelegate" />
      </Targets>
      <Member MemberName="CanHandleDropSession">
        <MemberSignature Language="C#" Value="public static bool CanHandleDropSession (this UIKit.IUICollectionViewDropDelegate This, UIKit.UICollectionView collectionView, UIKit.IUIDropSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanHandleDropSession(class UIKit.IUICollectionViewDropDelegate This, class UIKit.UICollectionView collectionView, class UIKit.IUIDropSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDropDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDropSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="session">To be added.</param>
          <summary>Returns a Boolean value that tells whether the collection view can handle drops from the data in the session.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDropDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDropDelegate_Extensions.CanHandleDropSession(MonoTouch.UIKit.IUICollectionViewDropDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.UIKit.IUIDropSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDropDelegate" />
      </Targets>
      <Member MemberName="DropSessionDidEnd">
        <MemberSignature Language="C#" Value="public static void DropSessionDidEnd (this UIKit.IUICollectionViewDropDelegate This, UIKit.UICollectionView collectionView, UIKit.IUIDropSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DropSessionDidEnd(class UIKit.IUICollectionViewDropDelegate This, class UIKit.UICollectionView collectionView, class UIKit.IUIDropSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDropDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDropSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="session">To be added.</param>
          <summary>Method that is called when the drop session ends.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDropDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDropDelegate_Extensions.DropSessionDidEnd(MonoTouch.UIKit.IUICollectionViewDropDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.UIKit.IUIDropSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDropDelegate" />
      </Targets>
      <Member MemberName="DropSessionDidEnter">
        <MemberSignature Language="C#" Value="public static void DropSessionDidEnter (this UIKit.IUICollectionViewDropDelegate This, UIKit.UICollectionView collectionView, UIKit.IUIDropSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DropSessionDidEnter(class UIKit.IUICollectionViewDropDelegate This, class UIKit.UICollectionView collectionView, class UIKit.IUIDropSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDropDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDropSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="session">To be added.</param>
          <summary>Method that is called when the drop point enters the collection view.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDropDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDropDelegate_Extensions.DropSessionDidEnter(MonoTouch.UIKit.IUICollectionViewDropDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.UIKit.IUIDropSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDropDelegate" />
      </Targets>
      <Member MemberName="DropSessionDidExit">
        <MemberSignature Language="C#" Value="public static void DropSessionDidExit (this UIKit.IUICollectionViewDropDelegate This, UIKit.UICollectionView collectionView, UIKit.IUIDropSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DropSessionDidExit(class UIKit.IUICollectionViewDropDelegate This, class UIKit.UICollectionView collectionView, class UIKit.IUIDropSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDropDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDropSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="session">To be added.</param>
          <summary>Method that is called when the drop point leaves the collection view.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDropDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDropDelegate_Extensions.DropSessionDidExit(MonoTouch.UIKit.IUICollectionViewDropDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.UIKit.IUIDropSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDropDelegate" />
      </Targets>
      <Member MemberName="DropSessionDidUpdate">
        <MemberSignature Language="C#" Value="public static UIKit.UICollectionViewDropProposal DropSessionDidUpdate (this UIKit.IUICollectionViewDropDelegate This, UIKit.UICollectionView collectionView, UIKit.IUIDropSession session, Foundation.NSIndexPath destinationIndexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UICollectionViewDropProposal DropSessionDidUpdate(class UIKit.IUICollectionViewDropDelegate This, class UIKit.UICollectionView collectionView, class UIKit.IUIDropSession session, class Foundation.NSIndexPath destinationIndexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UICollectionViewDropProposal</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDropDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDropSession" />
          <Parameter Name="destinationIndexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="session">To be added.</param>
          <param name="destinationIndexPath">To be added.This parameter can be .</param>
          <summary>Method that is called when the drop point over the collection view changes.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDropDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDropDelegate_Extensions.DropSessionDidUpdate(MonoTouch.UIKit.IUICollectionViewDropDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.UIKit.IUIDropSession,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDropDelegate" />
      </Targets>
      <Member MemberName="GetDropPreviewParameters">
        <MemberSignature Language="C#" Value="public static UIKit.UIDragPreviewParameters GetDropPreviewParameters (this UIKit.IUICollectionViewDropDelegate This, UIKit.UICollectionView collectionView, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIDragPreviewParameters GetDropPreviewParameters(class UIKit.IUICollectionViewDropDelegate This, class UIKit.UICollectionView collectionView, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIDragPreviewParameters</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDropDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>Returns the drag preview parameters for the item at the specified index path.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDropDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDropDelegate_Extensions.GetDropPreviewParameters(MonoTouch.UIKit.IUICollectionViewDropDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollisionBehaviorDelegate" />
      </Targets>
      <Member MemberName="BeganBoundaryContact">
        <MemberSignature Language="C#" Value="public static void BeganBoundaryContact (this UIKit.IUICollisionBehaviorDelegate This, UIKit.UICollisionBehavior behavior, UIKit.IUIDynamicItem dynamicItem, Foundation.NSObject boundaryIdentifier, CoreGraphics.CGPoint atPoint);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BeganBoundaryContact(class UIKit.IUICollisionBehaviorDelegate This, class UIKit.UICollisionBehavior behavior, class UIKit.IUIDynamicItem dynamicItem, class Foundation.NSObject boundaryIdentifier, valuetype CoreGraphics.CGPoint atPoint) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollisionBehaviorDelegate" RefType="this" />
          <Parameter Name="behavior" Type="MonoTouch.UIKit.UICollisionBehavior" />
          <Parameter Name="dynamicItem" Type="MonoTouch.UIKit.IUIDynamicItem" />
          <Parameter Name="boundaryIdentifier" Type="MonoTouch.Foundation.NSObject" />
          <Parameter Name="atPoint" Type="MonoTouch.CoreGraphics.CGPoint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="behavior">To be added.</param>
          <param name="dynamicItem">To be added.</param>
          <param name="boundaryIdentifier">The identifier of the boundary collided with. If , the collision was with the reference boundary.This parameter can be .</param>
          <param name="atPoint">To be added.</param>
          <summary>Indicates that boundary contact has begun between the dynamicItem and the boundaryIdentifier.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollisionBehaviorDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollisionBehaviorDelegate_Extensions.BeganBoundaryContact(MonoTouch.UIKit.IUICollisionBehaviorDelegate,MonoTouch.UIKit.UICollisionBehavior,MonoTouch.UIKit.IUIDynamicItem,MonoTouch.Foundation.NSObject,MonoTouch.CoreGraphics.CGPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollisionBehaviorDelegate" />
      </Targets>
      <Member MemberName="BeganContact">
        <MemberSignature Language="C#" Value="public static void BeganContact (this UIKit.IUICollisionBehaviorDelegate This, UIKit.UICollisionBehavior behavior, UIKit.IUIDynamicItem firstItem, UIKit.IUIDynamicItem secondItem, CoreGraphics.CGPoint atPoint);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BeganContact(class UIKit.IUICollisionBehaviorDelegate This, class UIKit.UICollisionBehavior behavior, class UIKit.IUIDynamicItem firstItem, class UIKit.IUIDynamicItem secondItem, valuetype CoreGraphics.CGPoint atPoint) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollisionBehaviorDelegate" RefType="this" />
          <Parameter Name="behavior" Type="MonoTouch.UIKit.UICollisionBehavior" />
          <Parameter Name="firstItem" Type="MonoTouch.UIKit.IUIDynamicItem" />
          <Parameter Name="secondItem" Type="MonoTouch.UIKit.IUIDynamicItem" />
          <Parameter Name="atPoint" Type="MonoTouch.CoreGraphics.CGPoint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="behavior">To be added.</param>
          <param name="firstItem">To be added.</param>
          <param name="secondItem">To be added.</param>
          <param name="atPoint">To be added.</param>
          <summary>Indicates that contact between dynamic items has begun.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollisionBehaviorDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollisionBehaviorDelegate_Extensions.BeganContact(MonoTouch.UIKit.IUICollisionBehaviorDelegate,MonoTouch.UIKit.UICollisionBehavior,MonoTouch.UIKit.IUIDynamicItem,MonoTouch.UIKit.IUIDynamicItem,MonoTouch.CoreGraphics.CGPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollisionBehaviorDelegate" />
      </Targets>
      <Member MemberName="EndedBoundaryContact">
        <MemberSignature Language="C#" Value="public static void EndedBoundaryContact (this UIKit.IUICollisionBehaviorDelegate This, UIKit.UICollisionBehavior behavior, UIKit.IUIDynamicItem dynamicItem, Foundation.NSObject boundaryIdentifier);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndedBoundaryContact(class UIKit.IUICollisionBehaviorDelegate This, class UIKit.UICollisionBehavior behavior, class UIKit.IUIDynamicItem dynamicItem, class Foundation.NSObject boundaryIdentifier) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollisionBehaviorDelegate" RefType="this" />
          <Parameter Name="behavior" Type="MonoTouch.UIKit.UICollisionBehavior" />
          <Parameter Name="dynamicItem" Type="MonoTouch.UIKit.IUIDynamicItem" />
          <Parameter Name="boundaryIdentifier" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="behavior">To be added.</param>
          <param name="dynamicItem">To be added.</param>
          <param name="boundaryIdentifier">The identifier of the boundary collided with. If , the collision was with the reference boundary.This parameter can be .</param>
          <summary>Indicates that the dynamicItem has stopped contacting the boundary.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollisionBehaviorDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollisionBehaviorDelegate_Extensions.EndedBoundaryContact(MonoTouch.UIKit.IUICollisionBehaviorDelegate,MonoTouch.UIKit.UICollisionBehavior,MonoTouch.UIKit.IUIDynamicItem,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollisionBehaviorDelegate" />
      </Targets>
      <Member MemberName="EndedContact">
        <MemberSignature Language="C#" Value="public static void EndedContact (this UIKit.IUICollisionBehaviorDelegate This, UIKit.UICollisionBehavior behavior, UIKit.IUIDynamicItem firstItem, UIKit.IUIDynamicItem secondItem);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndedContact(class UIKit.IUICollisionBehaviorDelegate This, class UIKit.UICollisionBehavior behavior, class UIKit.IUIDynamicItem firstItem, class UIKit.IUIDynamicItem secondItem) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollisionBehaviorDelegate" RefType="this" />
          <Parameter Name="behavior" Type="MonoTouch.UIKit.UICollisionBehavior" />
          <Parameter Name="firstItem" Type="MonoTouch.UIKit.IUIDynamicItem" />
          <Parameter Name="secondItem" Type="MonoTouch.UIKit.IUIDynamicItem" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="behavior">To be added.</param>
          <param name="firstItem">To be added.</param>
          <param name="secondItem">To be added.</param>
          <summary>Indicates that the two dynamic items have stopped contacting each other.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollisionBehaviorDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollisionBehaviorDelegate_Extensions.EndedContact(MonoTouch.UIKit.IUICollisionBehaviorDelegate,MonoTouch.UIKit.UICollisionBehavior,MonoTouch.UIKit.IUIDynamicItem,MonoTouch.UIKit.IUIDynamicItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIContentSizeCategory" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this UIKit.UIContentSizeCategory self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype UIKit.UIContentSizeCategory self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.UIKit.UIContentSizeCategory" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIContentSizeCategoryExtensions" Member="M:MonoTouch.UIKit.UIContentSizeCategoryExtensions.GetConstant(MonoTouch.UIKit.UIContentSizeCategory)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIDeviceOrientation" />
      </Targets>
      <Member MemberName="IsFlat">
        <MemberSignature Language="C#" Value="public static bool IsFlat (this UIKit.UIDeviceOrientation orientation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsFlat(valuetype UIKit.UIDeviceOrientation orientation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="orientation" Type="MonoTouch.UIKit.UIDeviceOrientation" RefType="this" />
        </Parameters>
        <Docs>
          <param name="orientation">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDeviceOrientationExtensions" Member="M:MonoTouch.UIKit.UIDeviceOrientationExtensions.IsFlat(MonoTouch.UIKit.UIDeviceOrientation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIDeviceOrientation" />
      </Targets>
      <Member MemberName="IsLandscape">
        <MemberSignature Language="C#" Value="public static bool IsLandscape (this UIKit.UIDeviceOrientation orientation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLandscape(valuetype UIKit.UIDeviceOrientation orientation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="orientation" Type="MonoTouch.UIKit.UIDeviceOrientation" RefType="this" />
        </Parameters>
        <Docs>
          <param name="orientation">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDeviceOrientationExtensions" Member="M:MonoTouch.UIKit.UIDeviceOrientationExtensions.IsLandscape(MonoTouch.UIKit.UIDeviceOrientation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIDeviceOrientation" />
      </Targets>
      <Member MemberName="IsPortrait">
        <MemberSignature Language="C#" Value="public static bool IsPortrait (this UIKit.UIDeviceOrientation orientation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPortrait(valuetype UIKit.UIDeviceOrientation orientation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="orientation" Type="MonoTouch.UIKit.UIDeviceOrientation" RefType="this" />
        </Parameters>
        <Docs>
          <param name="orientation">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDeviceOrientationExtensions" Member="M:MonoTouch.UIKit.UIDeviceOrientationExtensions.IsPortrait(MonoTouch.UIKit.UIDeviceOrientation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIDocumentBrowserErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this UIKit.UIDocumentBrowserErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype UIKit.UIDocumentBrowserErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.UIKit.UIDocumentBrowserErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.UIKit.UIDocumentBrowserErrorCode value</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDocumentBrowserErrorCodeExtensions" Member="M:MonoTouch.UIKit.UIDocumentBrowserErrorCodeExtensions.GetDomain(MonoTouch.UIKit.UIDocumentBrowserErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDocumentBrowserViewControllerDelegate" />
      </Targets>
      <Member MemberName="DidImportDocument">
        <MemberSignature Language="C#" Value="public static void DidImportDocument (this UIKit.IUIDocumentBrowserViewControllerDelegate This, UIKit.UIDocumentBrowserViewController controller, Foundation.NSUrl sourceUrl, Foundation.NSUrl destinationUrl);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidImportDocument(class UIKit.IUIDocumentBrowserViewControllerDelegate This, class UIKit.UIDocumentBrowserViewController controller, class Foundation.NSUrl sourceUrl, class Foundation.NSUrl destinationUrl) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentBrowserViewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentBrowserViewController" />
          <Parameter Name="sourceUrl" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="destinationUrl" Type="MonoTouch.Foundation.NSUrl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="sourceUrl">To be added.</param>
          <param name="destinationUrl">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDocumentBrowserViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDocumentBrowserViewControllerDelegate_Extensions.DidImportDocument(MonoTouch.UIKit.IUIDocumentBrowserViewControllerDelegate,MonoTouch.UIKit.UIDocumentBrowserViewController,MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSUrl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDocumentBrowserViewControllerDelegate" />
      </Targets>
      <Member MemberName="DidPickDocumentUrls">
        <MemberSignature Language="C#" Value="public static void DidPickDocumentUrls (this UIKit.IUIDocumentBrowserViewControllerDelegate This, UIKit.UIDocumentBrowserViewController controller, Foundation.NSUrl[] documentUrls);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidPickDocumentUrls(class UIKit.IUIDocumentBrowserViewControllerDelegate This, class UIKit.UIDocumentBrowserViewController controller, class Foundation.NSUrl[] documentUrls) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentBrowserViewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentBrowserViewController" />
          <Parameter Name="documentUrls" Type="MonoTouch.Foundation.NSUrl[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="documentUrls">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDocumentBrowserViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDocumentBrowserViewControllerDelegate_Extensions.DidPickDocumentUrls(MonoTouch.UIKit.IUIDocumentBrowserViewControllerDelegate,MonoTouch.UIKit.UIDocumentBrowserViewController,MonoTouch.Foundation.NSUrl[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDocumentBrowserViewControllerDelegate" />
      </Targets>
      <Member MemberName="DidRequestDocumentCreation">
        <MemberSignature Language="C#" Value="public static void DidRequestDocumentCreation (this UIKit.IUIDocumentBrowserViewControllerDelegate This, UIKit.UIDocumentBrowserViewController controller, Action&lt;Foundation.NSUrl,UIKit.UIDocumentBrowserImportMode&gt; importHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRequestDocumentCreation(class UIKit.IUIDocumentBrowserViewControllerDelegate This, class UIKit.UIDocumentBrowserViewController controller, class System.Action`2&lt;class Foundation.NSUrl, valuetype UIKit.UIDocumentBrowserImportMode&gt; importHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentBrowserViewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentBrowserViewController" />
          <Parameter Name="importHandler" Type="System.Action&lt;MonoTouch.Foundation.NSUrl,MonoTouch.UIKit.UIDocumentBrowserImportMode&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V94))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="importHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDocumentBrowserViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDocumentBrowserViewControllerDelegate_Extensions.DidRequestDocumentCreation(MonoTouch.UIKit.IUIDocumentBrowserViewControllerDelegate,MonoTouch.UIKit.UIDocumentBrowserViewController,System.Action{MonoTouch.Foundation.NSUrl,MonoTouch.UIKit.UIDocumentBrowserImportMode})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDocumentBrowserViewControllerDelegate" />
      </Targets>
      <Member MemberName="FailedToImportDocument">
        <MemberSignature Language="C#" Value="public static void FailedToImportDocument (this UIKit.IUIDocumentBrowserViewControllerDelegate This, UIKit.UIDocumentBrowserViewController controller, Foundation.NSUrl documentUrl, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FailedToImportDocument(class UIKit.IUIDocumentBrowserViewControllerDelegate This, class UIKit.UIDocumentBrowserViewController controller, class Foundation.NSUrl documentUrl, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentBrowserViewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentBrowserViewController" />
          <Parameter Name="documentUrl" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="documentUrl">To be added.</param>
          <param name="error">To be added.This parameter can be .</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDocumentBrowserViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDocumentBrowserViewControllerDelegate_Extensions.FailedToImportDocument(MonoTouch.UIKit.IUIDocumentBrowserViewControllerDelegate,MonoTouch.UIKit.UIDocumentBrowserViewController,MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDocumentBrowserViewControllerDelegate" />
      </Targets>
      <Member MemberName="GetApplicationActivities">
        <MemberSignature Language="C#" Value="public static UIKit.UIActivity[] GetApplicationActivities (this UIKit.IUIDocumentBrowserViewControllerDelegate This, UIKit.UIDocumentBrowserViewController controller, Foundation.NSUrl[] documentUrls);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIActivity[] GetApplicationActivities(class UIKit.IUIDocumentBrowserViewControllerDelegate This, class UIKit.UIDocumentBrowserViewController controller, class Foundation.NSUrl[] documentUrls) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIActivity[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentBrowserViewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentBrowserViewController" />
          <Parameter Name="documentUrls" Type="MonoTouch.Foundation.NSUrl[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="documentUrls">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDocumentBrowserViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDocumentBrowserViewControllerDelegate_Extensions.GetApplicationActivities(MonoTouch.UIKit.IUIDocumentBrowserViewControllerDelegate,MonoTouch.UIKit.UIDocumentBrowserViewController,MonoTouch.Foundation.NSUrl[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDocumentBrowserViewControllerDelegate" />
      </Targets>
      <Member MemberName="WillPresent">
        <MemberSignature Language="C#" Value="public static void WillPresent (this UIKit.IUIDocumentBrowserViewControllerDelegate This, UIKit.UIDocumentBrowserViewController controller, UIKit.UIActivityViewController activityViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillPresent(class UIKit.IUIDocumentBrowserViewControllerDelegate This, class UIKit.UIDocumentBrowserViewController controller, class UIKit.UIActivityViewController activityViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentBrowserViewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentBrowserViewController" />
          <Parameter Name="activityViewController" Type="MonoTouch.UIKit.UIActivityViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="activityViewController">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDocumentBrowserViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDocumentBrowserViewControllerDelegate_Extensions.WillPresent(MonoTouch.UIKit.IUIDocumentBrowserViewControllerDelegate,MonoTouch.UIKit.UIDocumentBrowserViewController,MonoTouch.UIKit.UIActivityViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="CanPerformAction">
        <MemberSignature Language="C#" Value="public static bool CanPerformAction (this UIKit.IUIDocumentInteractionControllerDelegate This, UIKit.UIDocumentInteractionController controller, ObjCRuntime.Selector action);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanPerformAction(class UIKit.IUIDocumentInteractionControllerDelegate This, class UIKit.UIDocumentInteractionController controller, class ObjCRuntime.Selector action) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentInteractionController" />
          <Parameter Name="action" Type="MonoTouch.ObjCRuntime.Selector" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="action">To be added.This parameter can be .</param>
          <summary>Developers should not use this deprecated method, which determines whether the specified controller should support the specified action.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions.CanPerformAction(MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate,MonoTouch.UIKit.UIDocumentInteractionController,MonoTouch.ObjCRuntime.Selector)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="DidDismissOpenInMenu">
        <MemberSignature Language="C#" Value="public static void DidDismissOpenInMenu (this UIKit.IUIDocumentInteractionControllerDelegate This, UIKit.UIDocumentInteractionController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDismissOpenInMenu(class UIKit.IUIDocumentInteractionControllerDelegate This, class UIKit.UIDocumentInteractionController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentInteractionController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>Indicates that the controller has dismissed its "Open In..." menu.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions.DidDismissOpenInMenu(MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate,MonoTouch.UIKit.UIDocumentInteractionController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="DidDismissOptionsMenu">
        <MemberSignature Language="C#" Value="public static void DidDismissOptionsMenu (this UIKit.IUIDocumentInteractionControllerDelegate This, UIKit.UIDocumentInteractionController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDismissOptionsMenu(class UIKit.IUIDocumentInteractionControllerDelegate This, class UIKit.UIDocumentInteractionController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentInteractionController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>Indicates that the controller has dismissed its "Options" menu.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions.DidDismissOptionsMenu(MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate,MonoTouch.UIKit.UIDocumentInteractionController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="DidEndPreview">
        <MemberSignature Language="C#" Value="public static void DidEndPreview (this UIKit.IUIDocumentInteractionControllerDelegate This, UIKit.UIDocumentInteractionController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidEndPreview(class UIKit.IUIDocumentInteractionControllerDelegate This, class UIKit.UIDocumentInteractionController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentInteractionController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>Indicates that the controller has ended its document preview.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions.DidEndPreview(MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate,MonoTouch.UIKit.UIDocumentInteractionController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="DidEndSendingToApplication">
        <MemberSignature Language="C#" Value="public static void DidEndSendingToApplication (this UIKit.IUIDocumentInteractionControllerDelegate This, UIKit.UIDocumentInteractionController controller, string application);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidEndSendingToApplication(class UIKit.IUIDocumentInteractionControllerDelegate This, class UIKit.UIDocumentInteractionController controller, string application) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentInteractionController" />
          <Parameter Name="application" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="application">To be added.This parameter can be .</param>
          <summary>Indicates that the controller's document has been handed off to the specified application.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions.DidEndSendingToApplication(MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate,MonoTouch.UIKit.UIDocumentInteractionController,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="PerformAction">
        <MemberSignature Language="C#" Value="public static bool PerformAction (this UIKit.IUIDocumentInteractionControllerDelegate This, UIKit.UIDocumentInteractionController controller, ObjCRuntime.Selector action);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool PerformAction(class UIKit.IUIDocumentInteractionControllerDelegate This, class UIKit.UIDocumentInteractionController controller, class ObjCRuntime.Selector action) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentInteractionController" />
          <Parameter Name="action" Type="MonoTouch.ObjCRuntime.Selector" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="action">To be added.This parameter can be .</param>
          <summary>Application developers should not use this deprecated method, which performs the specified action on the specified controller.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions.PerformAction(MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate,MonoTouch.UIKit.UIDocumentInteractionController,MonoTouch.ObjCRuntime.Selector)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="RectangleForPreview">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGRect RectangleForPreview (this UIKit.IUIDocumentInteractionControllerDelegate This, UIKit.UIDocumentInteractionController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGRect RectangleForPreview(class UIKit.IUIDocumentInteractionControllerDelegate This, class UIKit.UIDocumentInteractionController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentInteractionController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>The RectangleF used as the starting point for animating the display of a document preview.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions.RectangleForPreview(MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate,MonoTouch.UIKit.UIDocumentInteractionController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="ViewControllerForPreview">
        <MemberSignature Language="C#" Value="public static UIKit.UIViewController ViewControllerForPreview (this UIKit.IUIDocumentInteractionControllerDelegate This, UIKit.UIDocumentInteractionController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIViewController ViewControllerForPreview(class UIKit.IUIDocumentInteractionControllerDelegate This, class UIKit.UIDocumentInteractionController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIViewController</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentInteractionController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>The UIViewController that provides the document preview.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions.ViewControllerForPreview(MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate,MonoTouch.UIKit.UIDocumentInteractionController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="ViewForPreview">
        <MemberSignature Language="C#" Value="public static UIKit.UIView ViewForPreview (this UIKit.IUIDocumentInteractionControllerDelegate This, UIKit.UIDocumentInteractionController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIView ViewForPreview(class UIKit.IUIDocumentInteractionControllerDelegate This, class UIKit.UIDocumentInteractionController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIView</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentInteractionController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>The UIView to use as the starting point for the animation preview. If null, the preview fades into place.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions.ViewForPreview(MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate,MonoTouch.UIKit.UIDocumentInteractionController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="WillBeginPreview">
        <MemberSignature Language="C#" Value="public static void WillBeginPreview (this UIKit.IUIDocumentInteractionControllerDelegate This, UIKit.UIDocumentInteractionController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillBeginPreview(class UIKit.IUIDocumentInteractionControllerDelegate This, class UIKit.UIDocumentInteractionController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentInteractionController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>Indicates that document preview is about to start.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions.WillBeginPreview(MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate,MonoTouch.UIKit.UIDocumentInteractionController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="WillBeginSendingToApplication">
        <MemberSignature Language="C#" Value="public static void WillBeginSendingToApplication (this UIKit.IUIDocumentInteractionControllerDelegate This, UIKit.UIDocumentInteractionController controller, string application);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillBeginSendingToApplication(class UIKit.IUIDocumentInteractionControllerDelegate This, class UIKit.UIDocumentInteractionController controller, string application) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentInteractionController" />
          <Parameter Name="application" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="application">To be added.This parameter can be .</param>
          <summary>Indicates that the controller's document is about to be handed off to the specified application.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions.WillBeginSendingToApplication(MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate,MonoTouch.UIKit.UIDocumentInteractionController,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="WillPresentOpenInMenu">
        <MemberSignature Language="C#" Value="public static void WillPresentOpenInMenu (this UIKit.IUIDocumentInteractionControllerDelegate This, UIKit.UIDocumentInteractionController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillPresentOpenInMenu(class UIKit.IUIDocumentInteractionControllerDelegate This, class UIKit.UIDocumentInteractionController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentInteractionController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>Indicates that the "Open In..." menu is about to be presented to the app user.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions.WillPresentOpenInMenu(MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate,MonoTouch.UIKit.UIDocumentInteractionController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="WillPresentOptionsMenu">
        <MemberSignature Language="C#" Value="public static void WillPresentOptionsMenu (this UIKit.IUIDocumentInteractionControllerDelegate This, UIKit.UIDocumentInteractionController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillPresentOptionsMenu(class UIKit.IUIDocumentInteractionControllerDelegate This, class UIKit.UIDocumentInteractionController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentInteractionController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>Indicates that the "Options" menu is about to be presented to the app user.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions.WillPresentOptionsMenu(MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate,MonoTouch.UIKit.UIDocumentInteractionController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDocumentPickerDelegate" />
      </Targets>
      <Member MemberName="DidPickDocument">
        <MemberSignature Language="C#" Value="public static void DidPickDocument (this UIKit.IUIDocumentPickerDelegate This, UIKit.UIDocumentPickerViewController controller, Foundation.NSUrl[] urls);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidPickDocument(class UIKit.IUIDocumentPickerDelegate This, class UIKit.UIDocumentPickerViewController controller, class Foundation.NSUrl[] urls) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentPickerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentPickerViewController" />
          <Parameter Name="urls" Type="MonoTouch.Foundation.NSUrl[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="urls">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDocumentPickerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDocumentPickerDelegate_Extensions.DidPickDocument(MonoTouch.UIKit.IUIDocumentPickerDelegate,MonoTouch.UIKit.UIDocumentPickerViewController,MonoTouch.Foundation.NSUrl[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDocumentPickerDelegate" />
      </Targets>
      <Member MemberName="WasCancelled">
        <MemberSignature Language="C#" Value="public static void WasCancelled (this UIKit.IUIDocumentPickerDelegate This, UIKit.UIDocumentPickerViewController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WasCancelled(class UIKit.IUIDocumentPickerDelegate This, class UIKit.UIDocumentPickerViewController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentPickerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentPickerViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>The user dismissed the picker.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDocumentPickerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDocumentPickerDelegate_Extensions.WasCancelled(MonoTouch.UIKit.IUIDocumentPickerDelegate,MonoTouch.UIKit.UIDocumentPickerViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDragDropSession" />
      </Targets>
      <Member MemberName="CanLoadObjects">
        <MemberSignature Language="C#" Value="public static bool CanLoadObjects (this UIKit.IUIDragDropSession session, Type type);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanLoadObjects(class UIKit.IUIDragDropSession session, class System.Type type) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDragDropSession" RefType="this" />
          <Parameter Name="type" Type="System.Type" />
        </Parameters>
        <Docs>
          <param name="session">To be added.</param>
          <param name="type">To be added.</param>
          <summary>Returns <see langword="true" /> if the specified <paramref name="session" /> can instantiate items of the specified <paramref name="type" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDragDropSessionExtensions" Member="M:MonoTouch.UIKit.UIDragDropSessionExtensions.CanLoadObjects(MonoTouch.UIKit.IUIDragDropSession,System.Type)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDropSession" />
      </Targets>
      <Member MemberName="LoadObjects&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static Foundation.NSProgress LoadObjects&lt;T&gt; (this UIKit.IUIDropSession session, Action&lt;T[]&gt; completion) where T : Foundation.NSObject, Foundation.INSItemProviderReading;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSProgress LoadObjects&lt;(class Foundation.NSObject, class Foundation.INSItemProviderReading) T&gt;(class UIKit.IUIDropSession session, class System.Action`1&lt;!!T[]&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSProgress</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <BaseTypeName>Foundation.NSObject</BaseTypeName>
              <InterfaceName>Foundation.INSItemProviderReading</InterfaceName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDropSession" RefType="this" />
          <Parameter Name="completion" Type="System.Action&lt;T[]&gt;" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="session">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDragDropSessionExtensions" Member="M:MonoTouch.UIKit.UIDragDropSessionExtensions.LoadObjects``1(MonoTouch.UIKit.IUIDropSession,System.Action{``0[]})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDragInteractionDelegate" />
      </Targets>
      <Member MemberName="GetItemsForAddingToSession">
        <MemberSignature Language="C#" Value="public static UIKit.UIDragItem[] GetItemsForAddingToSession (this UIKit.IUIDragInteractionDelegate This, UIKit.UIDragInteraction interaction, UIKit.IUIDragSession session, CoreGraphics.CGPoint point);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIDragItem[] GetItemsForAddingToSession(class UIKit.IUIDragInteractionDelegate This, class UIKit.UIDragInteraction interaction, class UIKit.IUIDragSession session, valuetype CoreGraphics.CGPoint point) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIDragItem[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDragInteractionDelegate" RefType="this" />
          <Parameter Name="interaction" Type="MonoTouch.UIKit.UIDragInteraction" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDragSession" />
          <Parameter Name="point" Type="MonoTouch.CoreGraphics.CGPoint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="interaction">To be added.</param>
          <param name="session">To be added.</param>
          <param name="point">To be added.</param>
          <summary>Method that is called to add drag items to a drag session in response to a gesture by the user.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDragInteractionDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDragInteractionDelegate_Extensions.GetItemsForAddingToSession(MonoTouch.UIKit.IUIDragInteractionDelegate,MonoTouch.UIKit.UIDragInteraction,MonoTouch.UIKit.IUIDragSession,MonoTouch.CoreGraphics.CGPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDragInteractionDelegate" />
      </Targets>
      <Member MemberName="GetPreviewForCancellingItem">
        <MemberSignature Language="C#" Value="public static UIKit.UITargetedDragPreview GetPreviewForCancellingItem (this UIKit.IUIDragInteractionDelegate This, UIKit.UIDragInteraction interaction, UIKit.UIDragItem item, UIKit.UITargetedDragPreview defaultPreview);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UITargetedDragPreview GetPreviewForCancellingItem(class UIKit.IUIDragInteractionDelegate This, class UIKit.UIDragInteraction interaction, class UIKit.UIDragItem item, class UIKit.UITargetedDragPreview defaultPreview) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UITargetedDragPreview</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDragInteractionDelegate" RefType="this" />
          <Parameter Name="interaction" Type="MonoTouch.UIKit.UIDragInteraction" />
          <Parameter Name="item" Type="MonoTouch.UIKit.UIDragItem" />
          <Parameter Name="defaultPreview" Type="MonoTouch.UIKit.UITargetedDragPreview" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="interaction">To be added.</param>
          <param name="item">To be added.</param>
          <param name="defaultPreview">To be added.</param>
          <summary>Method that is called for each visible item in a drag session when the user cancels the drag session.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDragInteractionDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDragInteractionDelegate_Extensions.GetPreviewForCancellingItem(MonoTouch.UIKit.IUIDragInteractionDelegate,MonoTouch.UIKit.UIDragInteraction,MonoTouch.UIKit.UIDragItem,MonoTouch.UIKit.UITargetedDragPreview)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDragInteractionDelegate" />
      </Targets>
      <Member MemberName="GetPreviewForLiftingItem">
        <MemberSignature Language="C#" Value="public static UIKit.UITargetedDragPreview GetPreviewForLiftingItem (this UIKit.IUIDragInteractionDelegate This, UIKit.UIDragInteraction interaction, UIKit.UIDragItem item, UIKit.IUIDragSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UITargetedDragPreview GetPreviewForLiftingItem(class UIKit.IUIDragInteractionDelegate This, class UIKit.UIDragInteraction interaction, class UIKit.UIDragItem item, class UIKit.IUIDragSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UITargetedDragPreview</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDragInteractionDelegate" RefType="this" />
          <Parameter Name="interaction" Type="MonoTouch.UIKit.UIDragInteraction" />
          <Parameter Name="item" Type="MonoTouch.UIKit.UIDragItem" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDragSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="interaction">To be added.</param>
          <param name="item">To be added.</param>
          <param name="session">To be added.</param>
          <summary>Method that is called to get a targeted drag preview for animating the lift.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDragInteractionDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDragInteractionDelegate_Extensions.GetPreviewForLiftingItem(MonoTouch.UIKit.IUIDragInteractionDelegate,MonoTouch.UIKit.UIDragInteraction,MonoTouch.UIKit.UIDragItem,MonoTouch.UIKit.IUIDragSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDragInteractionDelegate" />
      </Targets>
      <Member MemberName="GetSessionForAddingItems">
        <MemberSignature Language="C#" Value="public static UIKit.IUIDragSession GetSessionForAddingItems (this UIKit.IUIDragInteractionDelegate This, UIKit.UIDragInteraction interaction, UIKit.IUIDragSession[] sessions, CoreGraphics.CGPoint point);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.IUIDragSession GetSessionForAddingItems(class UIKit.IUIDragInteractionDelegate This, class UIKit.UIDragInteraction interaction, class UIKit.IUIDragSession[] sessions, valuetype CoreGraphics.CGPoint point) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.IUIDragSession</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDragInteractionDelegate" RefType="this" />
          <Parameter Name="interaction" Type="MonoTouch.UIKit.UIDragInteraction" />
          <Parameter Name="sessions" Type="MonoTouch.UIKit.IUIDragSession[]" />
          <Parameter Name="point" Type="MonoTouch.CoreGraphics.CGPoint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="interaction">To be added.</param>
          <param name="sessions">To be added.</param>
          <param name="point">To be added.</param>
          <summary>Method that is called to disambiguate to which session to add items when multiple sessions are active.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDragInteractionDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDragInteractionDelegate_Extensions.GetSessionForAddingItems(MonoTouch.UIKit.IUIDragInteractionDelegate,MonoTouch.UIKit.UIDragInteraction,MonoTouch.UIKit.IUIDragSession[],MonoTouch.CoreGraphics.CGPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDragInteractionDelegate" />
      </Targets>
      <Member MemberName="PrefersFullSizePreviews">
        <MemberSignature Language="C#" Value="public static bool PrefersFullSizePreviews (this UIKit.IUIDragInteractionDelegate This, UIKit.UIDragInteraction interaction, UIKit.IUIDragSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool PrefersFullSizePreviews(class UIKit.IUIDragInteractionDelegate This, class UIKit.UIDragInteraction interaction, class UIKit.IUIDragSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDragInteractionDelegate" RefType="this" />
          <Parameter Name="interaction" Type="MonoTouch.UIKit.UIDragInteraction" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDragSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="interaction">To be added.</param>
          <param name="session">To be added.</param>
          <summary>Method that is called to find out whether the application prefers full size previews in the source view.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDragInteractionDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDragInteractionDelegate_Extensions.PrefersFullSizePreviews(MonoTouch.UIKit.IUIDragInteractionDelegate,MonoTouch.UIKit.UIDragInteraction,MonoTouch.UIKit.IUIDragSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDragInteractionDelegate" />
      </Targets>
      <Member MemberName="SessionAllowsMoveOperation">
        <MemberSignature Language="C#" Value="public static bool SessionAllowsMoveOperation (this UIKit.IUIDragInteractionDelegate This, UIKit.UIDragInteraction interaction, UIKit.IUIDragSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SessionAllowsMoveOperation(class UIKit.IUIDragInteractionDelegate This, class UIKit.UIDragInteraction interaction, class UIKit.IUIDragSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDragInteractionDelegate" RefType="this" />
          <Parameter Name="interaction" Type="MonoTouch.UIKit.UIDragInteraction" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDragSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="interaction">To be added.</param>
          <param name="session">To be added.</param>
          <summary>Method that is called to find out if the session allows items to be moved, instead of copied.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDragInteractionDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDragInteractionDelegate_Extensions.SessionAllowsMoveOperation(MonoTouch.UIKit.IUIDragInteractionDelegate,MonoTouch.UIKit.UIDragInteraction,MonoTouch.UIKit.IUIDragSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDragInteractionDelegate" />
      </Targets>
      <Member MemberName="SessionDidEnd">
        <MemberSignature Language="C#" Value="public static void SessionDidEnd (this UIKit.IUIDragInteractionDelegate This, UIKit.UIDragInteraction interaction, UIKit.IUIDragSession session, UIKit.UIDropOperation operation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SessionDidEnd(class UIKit.IUIDragInteractionDelegate This, class UIKit.UIDragInteraction interaction, class UIKit.IUIDragSession session, valuetype UIKit.UIDropOperation operation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDragInteractionDelegate" RefType="this" />
          <Parameter Name="interaction" Type="MonoTouch.UIKit.UIDragInteraction" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDragSession" />
          <Parameter Name="operation" Type="MonoTouch.UIKit.UIDropOperation" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="interaction">To be added.</param>
          <param name="session">To be added.</param>
          <param name="operation">To be added.</param>
          <summary>Method that is called when the drag session ends.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDragInteractionDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDragInteractionDelegate_Extensions.SessionDidEnd(MonoTouch.UIKit.IUIDragInteractionDelegate,MonoTouch.UIKit.UIDragInteraction,MonoTouch.UIKit.IUIDragSession,MonoTouch.UIKit.UIDropOperation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDragInteractionDelegate" />
      </Targets>
      <Member MemberName="SessionDidMove">
        <MemberSignature Language="C#" Value="public static void SessionDidMove (this UIKit.IUIDragInteractionDelegate This, UIKit.UIDragInteraction interaction, UIKit.IUIDragSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SessionDidMove(class UIKit.IUIDragInteractionDelegate This, class UIKit.UIDragInteraction interaction, class UIKit.IUIDragSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDragInteractionDelegate" RefType="this" />
          <Parameter Name="interaction" Type="MonoTouch.UIKit.UIDragInteraction" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDragSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="interaction">To be added.</param>
          <param name="session">To be added.</param>
          <summary>Method that is called when the drag point moves.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDragInteractionDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDragInteractionDelegate_Extensions.SessionDidMove(MonoTouch.UIKit.IUIDragInteractionDelegate,MonoTouch.UIKit.UIDragInteraction,MonoTouch.UIKit.IUIDragSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDragInteractionDelegate" />
      </Targets>
      <Member MemberName="SessionDidTransferItems">
        <MemberSignature Language="C#" Value="public static void SessionDidTransferItems (this UIKit.IUIDragInteractionDelegate This, UIKit.UIDragInteraction interaction, UIKit.IUIDragSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SessionDidTransferItems(class UIKit.IUIDragInteractionDelegate This, class UIKit.UIDragInteraction interaction, class UIKit.IUIDragSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDragInteractionDelegate" RefType="this" />
          <Parameter Name="interaction" Type="MonoTouch.UIKit.UIDragInteraction" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDragSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="interaction">To be added.</param>
          <param name="session">To be added.</param>
          <summary>Method that is called after the dropped items have been received.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDragInteractionDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDragInteractionDelegate_Extensions.SessionDidTransferItems(MonoTouch.UIKit.IUIDragInteractionDelegate,MonoTouch.UIKit.UIDragInteraction,MonoTouch.UIKit.IUIDragSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDragInteractionDelegate" />
      </Targets>
      <Member MemberName="SessionIsRestrictedToDraggingApplication">
        <MemberSignature Language="C#" Value="public static bool SessionIsRestrictedToDraggingApplication (this UIKit.IUIDragInteractionDelegate This, UIKit.UIDragInteraction interaction, UIKit.IUIDragSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SessionIsRestrictedToDraggingApplication(class UIKit.IUIDragInteractionDelegate This, class UIKit.UIDragInteraction interaction, class UIKit.IUIDragSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDragInteractionDelegate" RefType="this" />
          <Parameter Name="interaction" Type="MonoTouch.UIKit.UIDragInteraction" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDragSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="interaction">To be added.</param>
          <param name="session">To be added.</param>
          <summary>Method that is called to find out if the application only supports drag and drop operations to and from itself.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDragInteractionDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDragInteractionDelegate_Extensions.SessionIsRestrictedToDraggingApplication(MonoTouch.UIKit.IUIDragInteractionDelegate,MonoTouch.UIKit.UIDragInteraction,MonoTouch.UIKit.IUIDragSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDragInteractionDelegate" />
      </Targets>
      <Member MemberName="SessionWillBegin">
        <MemberSignature Language="C#" Value="public static void SessionWillBegin (this UIKit.IUIDragInteractionDelegate This, UIKit.UIDragInteraction interaction, UIKit.IUIDragSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SessionWillBegin(class UIKit.IUIDragInteractionDelegate This, class UIKit.UIDragInteraction interaction, class UIKit.IUIDragSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDragInteractionDelegate" RefType="this" />
          <Parameter Name="interaction" Type="MonoTouch.UIKit.UIDragInteraction" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDragSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="interaction">To be added.</param>
          <param name="session">To be added.</param>
          <summary>Method that is called when a session is about to begin.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDragInteractionDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDragInteractionDelegate_Extensions.SessionWillBegin(MonoTouch.UIKit.IUIDragInteractionDelegate,MonoTouch.UIKit.UIDragInteraction,MonoTouch.UIKit.IUIDragSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDragInteractionDelegate" />
      </Targets>
      <Member MemberName="SessionWillEnd">
        <MemberSignature Language="C#" Value="public static void SessionWillEnd (this UIKit.IUIDragInteractionDelegate This, UIKit.UIDragInteraction interaction, UIKit.IUIDragSession session, UIKit.UIDropOperation operation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SessionWillEnd(class UIKit.IUIDragInteractionDelegate This, class UIKit.UIDragInteraction interaction, class UIKit.IUIDragSession session, valuetype UIKit.UIDropOperation operation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDragInteractionDelegate" RefType="this" />
          <Parameter Name="interaction" Type="MonoTouch.UIKit.UIDragInteraction" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDragSession" />
          <Parameter Name="operation" Type="MonoTouch.UIKit.UIDropOperation" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="interaction">To be added.</param>
          <param name="session">To be added.</param>
          <param name="operation">To be added.</param>
          <summary>Method that is called when a session is about to end.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDragInteractionDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDragInteractionDelegate_Extensions.SessionWillEnd(MonoTouch.UIKit.IUIDragInteractionDelegate,MonoTouch.UIKit.UIDragInteraction,MonoTouch.UIKit.IUIDragSession,MonoTouch.UIKit.UIDropOperation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDragInteractionDelegate" />
      </Targets>
      <Member MemberName="WillAddItems">
        <MemberSignature Language="C#" Value="public static void WillAddItems (this UIKit.IUIDragInteractionDelegate This, UIKit.UIDragInteraction interaction, UIKit.IUIDragSession session, UIKit.UIDragItem[] items, UIKit.UIDragInteraction addingInteraction);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillAddItems(class UIKit.IUIDragInteractionDelegate This, class UIKit.UIDragInteraction interaction, class UIKit.IUIDragSession session, class UIKit.UIDragItem[] items, class UIKit.UIDragInteraction addingInteraction) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDragInteractionDelegate" RefType="this" />
          <Parameter Name="interaction" Type="MonoTouch.UIKit.UIDragInteraction" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDragSession" />
          <Parameter Name="items" Type="MonoTouch.UIKit.UIDragItem[]" />
          <Parameter Name="addingInteraction" Type="MonoTouch.UIKit.UIDragInteraction" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="interaction">To be added.</param>
          <param name="session">To be added.</param>
          <param name="items">To be added.</param>
          <param name="addingInteraction">To be added.</param>
          <summary>Method that is called when items are about to be added to the session.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDragInteractionDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDragInteractionDelegate_Extensions.WillAddItems(MonoTouch.UIKit.IUIDragInteractionDelegate,MonoTouch.UIKit.UIDragInteraction,MonoTouch.UIKit.IUIDragSession,MonoTouch.UIKit.UIDragItem[],MonoTouch.UIKit.UIDragInteraction)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDragInteractionDelegate" />
      </Targets>
      <Member MemberName="WillAnimateCancel">
        <MemberSignature Language="C#" Value="public static void WillAnimateCancel (this UIKit.IUIDragInteractionDelegate This, UIKit.UIDragInteraction interaction, UIKit.UIDragItem item, UIKit.IUIDragAnimating animator);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillAnimateCancel(class UIKit.IUIDragInteractionDelegate This, class UIKit.UIDragInteraction interaction, class UIKit.UIDragItem item, class UIKit.IUIDragAnimating animator) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDragInteractionDelegate" RefType="this" />
          <Parameter Name="interaction" Type="MonoTouch.UIKit.UIDragInteraction" />
          <Parameter Name="item" Type="MonoTouch.UIKit.UIDragItem" />
          <Parameter Name="animator" Type="MonoTouch.UIKit.IUIDragAnimating" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="interaction">To be added.</param>
          <param name="item">To be added.</param>
          <param name="animator">To be added.</param>
          <summary>Method that is called before the animation of each item in a cancellation begins.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDragInteractionDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDragInteractionDelegate_Extensions.WillAnimateCancel(MonoTouch.UIKit.IUIDragInteractionDelegate,MonoTouch.UIKit.UIDragInteraction,MonoTouch.UIKit.UIDragItem,MonoTouch.UIKit.IUIDragAnimating)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDragInteractionDelegate" />
      </Targets>
      <Member MemberName="WillAnimateLift">
        <MemberSignature Language="C#" Value="public static void WillAnimateLift (this UIKit.IUIDragInteractionDelegate This, UIKit.UIDragInteraction interaction, UIKit.IUIDragAnimating animator, UIKit.IUIDragSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillAnimateLift(class UIKit.IUIDragInteractionDelegate This, class UIKit.UIDragInteraction interaction, class UIKit.IUIDragAnimating animator, class UIKit.IUIDragSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDragInteractionDelegate" RefType="this" />
          <Parameter Name="interaction" Type="MonoTouch.UIKit.UIDragInteraction" />
          <Parameter Name="animator" Type="MonoTouch.UIKit.IUIDragAnimating" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDragSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="interaction">To be added.</param>
          <param name="animator">To be added.</param>
          <param name="session">To be added.</param>
          <summary>Method that is called before each item with a lift preview is about to lift.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDragInteractionDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDragInteractionDelegate_Extensions.WillAnimateLift(MonoTouch.UIKit.IUIDragInteractionDelegate,MonoTouch.UIKit.UIDragInteraction,MonoTouch.UIKit.IUIDragAnimating,MonoTouch.UIKit.IUIDragSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDropInteractionDelegate" />
      </Targets>
      <Member MemberName="CanHandleSession">
        <MemberSignature Language="C#" Value="public static bool CanHandleSession (this UIKit.IUIDropInteractionDelegate This, UIKit.UIDropInteraction interaction, UIKit.IUIDropSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanHandleSession(class UIKit.IUIDropInteractionDelegate This, class UIKit.UIDropInteraction interaction, class UIKit.IUIDropSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDropInteractionDelegate" RefType="this" />
          <Parameter Name="interaction" Type="MonoTouch.UIKit.UIDropInteraction" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDropSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="interaction">To be added.</param>
          <param name="session">To be added.</param>
          <summary>Returns <see langword="true" /> if the specified <paramref name="interaction" /> can handle the specified <paramref name="session" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDropInteractionDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDropInteractionDelegate_Extensions.CanHandleSession(MonoTouch.UIKit.IUIDropInteractionDelegate,MonoTouch.UIKit.UIDropInteraction,MonoTouch.UIKit.IUIDropSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDropInteractionDelegate" />
      </Targets>
      <Member MemberName="ConcludeDrop">
        <MemberSignature Language="C#" Value="public static void ConcludeDrop (this UIKit.IUIDropInteractionDelegate This, UIKit.UIDropInteraction interaction, UIKit.IUIDropSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConcludeDrop(class UIKit.IUIDropInteractionDelegate This, class UIKit.UIDropInteraction interaction, class UIKit.IUIDropSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDropInteractionDelegate" RefType="this" />
          <Parameter Name="interaction" Type="MonoTouch.UIKit.UIDropInteraction" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDropSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="interaction">To be added.</param>
          <param name="session">To be added.</param>
          <summary>Method that is called after the drop is performed and all animations have completed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDropInteractionDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDropInteractionDelegate_Extensions.ConcludeDrop(MonoTouch.UIKit.IUIDropInteractionDelegate,MonoTouch.UIKit.UIDropInteraction,MonoTouch.UIKit.IUIDropSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDropInteractionDelegate" />
      </Targets>
      <Member MemberName="GetPreviewForDroppingItem">
        <MemberSignature Language="C#" Value="public static UIKit.UITargetedDragPreview GetPreviewForDroppingItem (this UIKit.IUIDropInteractionDelegate This, UIKit.UIDropInteraction interaction, UIKit.UIDragItem item, UIKit.UITargetedDragPreview defaultPreview);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UITargetedDragPreview GetPreviewForDroppingItem(class UIKit.IUIDropInteractionDelegate This, class UIKit.UIDropInteraction interaction, class UIKit.UIDragItem item, class UIKit.UITargetedDragPreview defaultPreview) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UITargetedDragPreview</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDropInteractionDelegate" RefType="this" />
          <Parameter Name="interaction" Type="MonoTouch.UIKit.UIDropInteraction" />
          <Parameter Name="item" Type="MonoTouch.UIKit.UIDragItem" />
          <Parameter Name="defaultPreview" Type="MonoTouch.UIKit.UITargetedDragPreview" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="interaction">To be added.</param>
          <param name="item">To be added.</param>
          <param name="defaultPreview">To be added.</param>
          <summary>Method that is called for each drag item to allow the developer to provide a custom preview.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDropInteractionDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDropInteractionDelegate_Extensions.GetPreviewForDroppingItem(MonoTouch.UIKit.IUIDropInteractionDelegate,MonoTouch.UIKit.UIDropInteraction,MonoTouch.UIKit.UIDragItem,MonoTouch.UIKit.UITargetedDragPreview)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDropInteractionDelegate" />
      </Targets>
      <Member MemberName="PerformDrop">
        <MemberSignature Language="C#" Value="public static void PerformDrop (this UIKit.IUIDropInteractionDelegate This, UIKit.UIDropInteraction interaction, UIKit.IUIDropSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformDrop(class UIKit.IUIDropInteractionDelegate This, class UIKit.UIDropInteraction interaction, class UIKit.IUIDropSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDropInteractionDelegate" RefType="this" />
          <Parameter Name="interaction" Type="MonoTouch.UIKit.UIDropInteraction" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDropSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="interaction">To be added.</param>
          <param name="session">To be added.</param>
          <summary>Method that is called to consume data from the item providers in the drop session.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDropInteractionDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDropInteractionDelegate_Extensions.PerformDrop(MonoTouch.UIKit.IUIDropInteractionDelegate,MonoTouch.UIKit.UIDropInteraction,MonoTouch.UIKit.IUIDropSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDropInteractionDelegate" />
      </Targets>
      <Member MemberName="SessionDidEnd">
        <MemberSignature Language="C#" Value="public static void SessionDidEnd (this UIKit.IUIDropInteractionDelegate This, UIKit.UIDropInteraction interaction, UIKit.IUIDropSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SessionDidEnd(class UIKit.IUIDropInteractionDelegate This, class UIKit.UIDropInteraction interaction, class UIKit.IUIDropSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDropInteractionDelegate" RefType="this" />
          <Parameter Name="interaction" Type="MonoTouch.UIKit.UIDropInteraction" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDropSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="interaction">To be added.</param>
          <param name="session">To be added.</param>
          <summary>Method that is called to allow the developer to release all resources for the completed drop session.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDropInteractionDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDropInteractionDelegate_Extensions.SessionDidEnd(MonoTouch.UIKit.IUIDropInteractionDelegate,MonoTouch.UIKit.UIDropInteraction,MonoTouch.UIKit.IUIDropSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDropInteractionDelegate" />
      </Targets>
      <Member MemberName="SessionDidEnter">
        <MemberSignature Language="C#" Value="public static void SessionDidEnter (this UIKit.IUIDropInteractionDelegate This, UIKit.UIDropInteraction interaction, UIKit.IUIDropSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SessionDidEnter(class UIKit.IUIDropInteractionDelegate This, class UIKit.UIDropInteraction interaction, class UIKit.IUIDropSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDropInteractionDelegate" RefType="this" />
          <Parameter Name="interaction" Type="MonoTouch.UIKit.UIDropInteraction" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDropSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="interaction">To be added.</param>
          <param name="session">To be added.</param>
          <summary>Method that is called when the user drags the drop session into the view for the drop interaction.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDropInteractionDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDropInteractionDelegate_Extensions.SessionDidEnter(MonoTouch.UIKit.IUIDropInteractionDelegate,MonoTouch.UIKit.UIDropInteraction,MonoTouch.UIKit.IUIDropSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDropInteractionDelegate" />
      </Targets>
      <Member MemberName="SessionDidExit">
        <MemberSignature Language="C#" Value="public static void SessionDidExit (this UIKit.IUIDropInteractionDelegate This, UIKit.UIDropInteraction interaction, UIKit.IUIDropSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SessionDidExit(class UIKit.IUIDropInteractionDelegate This, class UIKit.UIDropInteraction interaction, class UIKit.IUIDropSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDropInteractionDelegate" RefType="this" />
          <Parameter Name="interaction" Type="MonoTouch.UIKit.UIDropInteraction" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDropSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="interaction">To be added.</param>
          <param name="session">To be added.</param>
          <summary>Method that is called when the user drags the drop session out of the view for the drop interaction.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDropInteractionDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDropInteractionDelegate_Extensions.SessionDidExit(MonoTouch.UIKit.IUIDropInteractionDelegate,MonoTouch.UIKit.UIDropInteraction,MonoTouch.UIKit.IUIDropSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDropInteractionDelegate" />
      </Targets>
      <Member MemberName="SessionDidUpdate">
        <MemberSignature Language="C#" Value="public static UIKit.UIDropProposal SessionDidUpdate (this UIKit.IUIDropInteractionDelegate This, UIKit.UIDropInteraction interaction, UIKit.IUIDropSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIDropProposal SessionDidUpdate(class UIKit.IUIDropInteractionDelegate This, class UIKit.UIDropInteraction interaction, class UIKit.IUIDropSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIDropProposal</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDropInteractionDelegate" RefType="this" />
          <Parameter Name="interaction" Type="MonoTouch.UIKit.UIDropInteraction" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDropSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="interaction">To be added.</param>
          <param name="session">To be added.</param>
          <summary>Method that is called when the touch point moves into or within the view, or when drag items are added while the touch point is within the view.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDropInteractionDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDropInteractionDelegate_Extensions.SessionDidUpdate(MonoTouch.UIKit.IUIDropInteractionDelegate,MonoTouch.UIKit.UIDropInteraction,MonoTouch.UIKit.IUIDropSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDropInteractionDelegate" />
      </Targets>
      <Member MemberName="WillAnimateDrop">
        <MemberSignature Language="C#" Value="public static void WillAnimateDrop (this UIKit.IUIDropInteractionDelegate This, UIKit.UIDropInteraction interaction, UIKit.UIDragItem item, UIKit.IUIDragAnimating animator);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillAnimateDrop(class UIKit.IUIDropInteractionDelegate This, class UIKit.UIDropInteraction interaction, class UIKit.UIDragItem item, class UIKit.IUIDragAnimating animator) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDropInteractionDelegate" RefType="this" />
          <Parameter Name="interaction" Type="MonoTouch.UIKit.UIDropInteraction" />
          <Parameter Name="item" Type="MonoTouch.UIKit.UIDragItem" />
          <Parameter Name="animator" Type="MonoTouch.UIKit.IUIDragAnimating" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="interaction">To be added.</param>
          <param name="item">To be added.</param>
          <param name="animator">To be added.</param>
          <summary>Method that is called for each visible drag item just before the drop is animated.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDropInteractionDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDropInteractionDelegate_Extensions.WillAnimateDrop(MonoTouch.UIKit.IUIDropInteractionDelegate,MonoTouch.UIKit.UIDropInteraction,MonoTouch.UIKit.UIDragItem,MonoTouch.UIKit.IUIDragAnimating)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDynamicItem" />
      </Targets>
      <Member MemberName="GetCollisionBoundingPath">
        <MemberSignature Language="C#" Value="public static UIKit.UIBezierPath GetCollisionBoundingPath (this UIKit.IUIDynamicItem This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIBezierPath GetCollisionBoundingPath(class UIKit.IUIDynamicItem This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIBezierPath</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDynamicItem" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the closed path that is used for collision detection.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDynamicItem_Extensions" Member="M:MonoTouch.UIKit.UIDynamicItem_Extensions.GetCollisionBoundingPath(MonoTouch.UIKit.IUIDynamicItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDynamicItem" />
      </Targets>
      <Member MemberName="GetCollisionBoundsType">
        <MemberSignature Language="C#" Value="public static UIKit.UIDynamicItemCollisionBoundsType GetCollisionBoundsType (this UIKit.IUIDynamicItem This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UIDynamicItemCollisionBoundsType GetCollisionBoundsType(class UIKit.IUIDynamicItem This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIDynamicItemCollisionBoundsType</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDynamicItem" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns a value that tells how collision bounds are specified.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDynamicItem_Extensions" Member="M:MonoTouch.UIKit.UIDynamicItem_Extensions.GetCollisionBoundsType(MonoTouch.UIKit.IUIDynamicItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIFocusEnvironment" />
      </Targets>
      <Member MemberName="GetPreferredFocusEnvironments">
        <MemberSignature Language="C#" Value="public static UIKit.IUIFocusEnvironment[] GetPreferredFocusEnvironments (this UIKit.IUIFocusEnvironment This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.IUIFocusEnvironment[] GetPreferredFocusEnvironments(class UIKit.IUIFocusEnvironment This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.IUIFocusEnvironment[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIFocusEnvironment" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">The focus environment on which this method operates.</param>
          <summary>Gets the list of focus environments, ordered by priority, that the environment prefers when updating the focus.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIFocusEnvironment_Extensions" Member="M:MonoTouch.UIKit.UIFocusEnvironment_Extensions.GetPreferredFocusEnvironments(MonoTouch.UIKit.IUIFocusEnvironment)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIFontTextStyle" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this UIKit.UIFontTextStyle self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype UIKit.UIFontTextStyle self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.UIKit.UIFontTextStyle" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>Returns the string constant for the enumeration value.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIFontTextStyleExtensions" Member="M:MonoTouch.UIKit.UIFontTextStyleExtensions.GetConstant(MonoTouch.UIKit.UIFontTextStyle)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIGestureRecognizerDelegate" />
      </Targets>
      <Member MemberName="ShouldBegin">
        <MemberSignature Language="C#" Value="public static bool ShouldBegin (this UIKit.IUIGestureRecognizerDelegate This, UIKit.UIGestureRecognizer recognizer);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldBegin(class UIKit.IUIGestureRecognizerDelegate This, class UIKit.UIGestureRecognizer recognizer) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIGestureRecognizerDelegate" RefType="this" />
          <Parameter Name="recognizer" Type="MonoTouch.UIKit.UIGestureRecognizer" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="recognizer">To be added.</param>
          <summary>Whether the gesture recognition should begin.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIGestureRecognizerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIGestureRecognizerDelegate_Extensions.ShouldBegin(MonoTouch.UIKit.IUIGestureRecognizerDelegate,MonoTouch.UIKit.UIGestureRecognizer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIGestureRecognizerDelegate" />
      </Targets>
      <Member MemberName="ShouldBeRequiredToFailBy">
        <MemberSignature Language="C#" Value="public static bool ShouldBeRequiredToFailBy (this UIKit.IUIGestureRecognizerDelegate This, UIKit.UIGestureRecognizer gestureRecognizer, UIKit.UIGestureRecognizer otherGestureRecognizer);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldBeRequiredToFailBy(class UIKit.IUIGestureRecognizerDelegate This, class UIKit.UIGestureRecognizer gestureRecognizer, class UIKit.UIGestureRecognizer otherGestureRecognizer) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIGestureRecognizerDelegate" RefType="this" />
          <Parameter Name="gestureRecognizer" Type="MonoTouch.UIKit.UIGestureRecognizer" />
          <Parameter Name="otherGestureRecognizer" Type="MonoTouch.UIKit.UIGestureRecognizer" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="gestureRecognizer">To be added.</param>
          <param name="otherGestureRecognizer">To be added.</param>
          <summary>Whether there is a dynamic failure requirement between the specified gesture recognizers.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIGestureRecognizerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIGestureRecognizerDelegate_Extensions.ShouldBeRequiredToFailBy(MonoTouch.UIKit.IUIGestureRecognizerDelegate,MonoTouch.UIKit.UIGestureRecognizer,MonoTouch.UIKit.UIGestureRecognizer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIGestureRecognizerDelegate" />
      </Targets>
      <Member MemberName="ShouldReceivePress">
        <MemberSignature Language="C#" Value="public static bool ShouldReceivePress (this UIKit.IUIGestureRecognizerDelegate This, UIKit.UIGestureRecognizer gestureRecognizer, UIKit.UIPress press);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldReceivePress(class UIKit.IUIGestureRecognizerDelegate This, class UIKit.UIGestureRecognizer gestureRecognizer, class UIKit.UIPress press) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIGestureRecognizerDelegate" RefType="this" />
          <Parameter Name="gestureRecognizer" Type="MonoTouch.UIKit.UIGestureRecognizer" />
          <Parameter Name="press" Type="MonoTouch.UIKit.UIPress" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="gestureRecognizer">To be added.</param>
          <param name="press">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIGestureRecognizerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIGestureRecognizerDelegate_Extensions.ShouldReceivePress(MonoTouch.UIKit.IUIGestureRecognizerDelegate,MonoTouch.UIKit.UIGestureRecognizer,MonoTouch.UIKit.UIPress)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIGestureRecognizerDelegate" />
      </Targets>
      <Member MemberName="ShouldReceiveTouch">
        <MemberSignature Language="C#" Value="public static bool ShouldReceiveTouch (this UIKit.IUIGestureRecognizerDelegate This, UIKit.UIGestureRecognizer recognizer, UIKit.UITouch touch);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldReceiveTouch(class UIKit.IUIGestureRecognizerDelegate This, class UIKit.UIGestureRecognizer recognizer, class UIKit.UITouch touch) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIGestureRecognizerDelegate" RefType="this" />
          <Parameter Name="recognizer" Type="MonoTouch.UIKit.UIGestureRecognizer" />
          <Parameter Name="touch" Type="MonoTouch.UIKit.UITouch" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="recognizer">To be added.</param>
          <param name="touch">To be added.</param>
          <summary>Whether the recognizer should receive the specified touch.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIGestureRecognizerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIGestureRecognizerDelegate_Extensions.ShouldReceiveTouch(MonoTouch.UIKit.IUIGestureRecognizerDelegate,MonoTouch.UIKit.UIGestureRecognizer,MonoTouch.UIKit.UITouch)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIGestureRecognizerDelegate" />
      </Targets>
      <Member MemberName="ShouldRecognizeSimultaneously">
        <MemberSignature Language="C#" Value="public static bool ShouldRecognizeSimultaneously (this UIKit.IUIGestureRecognizerDelegate This, UIKit.UIGestureRecognizer gestureRecognizer, UIKit.UIGestureRecognizer otherGestureRecognizer);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldRecognizeSimultaneously(class UIKit.IUIGestureRecognizerDelegate This, class UIKit.UIGestureRecognizer gestureRecognizer, class UIKit.UIGestureRecognizer otherGestureRecognizer) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIGestureRecognizerDelegate" RefType="this" />
          <Parameter Name="gestureRecognizer" Type="MonoTouch.UIKit.UIGestureRecognizer" />
          <Parameter Name="otherGestureRecognizer" Type="MonoTouch.UIKit.UIGestureRecognizer" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="gestureRecognizer">To be added.</param>
          <param name="otherGestureRecognizer">To be added.</param>
          <summary>Whether the two gesture recognizers should be allowed to recognize gestures simultaneously.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIGestureRecognizerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIGestureRecognizerDelegate_Extensions.ShouldRecognizeSimultaneously(MonoTouch.UIKit.IUIGestureRecognizerDelegate,MonoTouch.UIKit.UIGestureRecognizer,MonoTouch.UIKit.UIGestureRecognizer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIGestureRecognizerDelegate" />
      </Targets>
      <Member MemberName="ShouldRequireFailureOf">
        <MemberSignature Language="C#" Value="public static bool ShouldRequireFailureOf (this UIKit.IUIGestureRecognizerDelegate This, UIKit.UIGestureRecognizer gestureRecognizer, UIKit.UIGestureRecognizer otherGestureRecognizer);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldRequireFailureOf(class UIKit.IUIGestureRecognizerDelegate This, class UIKit.UIGestureRecognizer gestureRecognizer, class UIKit.UIGestureRecognizer otherGestureRecognizer) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIGestureRecognizerDelegate" RefType="this" />
          <Parameter Name="gestureRecognizer" Type="MonoTouch.UIKit.UIGestureRecognizer" />
          <Parameter Name="otherGestureRecognizer" Type="MonoTouch.UIKit.UIGestureRecognizer" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="gestureRecognizer">To be added.</param>
          <param name="otherGestureRecognizer">To be added.</param>
          <summary>Whether the specified gestureRecognizer should be required to fail by the otherGestureRecognizer.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIGestureRecognizerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIGestureRecognizerDelegate_Extensions.ShouldRequireFailureOf(MonoTouch.UIKit.IUIGestureRecognizerDelegate,MonoTouch.UIKit.UIGestureRecognizer,MonoTouch.UIKit.UIGestureRecognizer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIGuidedAccessRestrictionDelegate" />
      </Targets>
      <Member MemberName="GetDetailTextForGuidedAccessRestriction">
        <MemberSignature Language="C#" Value="public static string GetDetailTextForGuidedAccessRestriction (this UIKit.IUIGuidedAccessRestrictionDelegate This, string restrictionIdentifier);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDetailTextForGuidedAccessRestriction(class UIKit.IUIGuidedAccessRestrictionDelegate This, string restrictionIdentifier) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIGuidedAccessRestrictionDelegate" RefType="this" />
          <Parameter Name="restrictionIdentifier" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="restrictionIdentifier">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIGuidedAccessRestrictionDelegate_Extensions" Member="M:MonoTouch.UIKit.UIGuidedAccessRestrictionDelegate_Extensions.GetDetailTextForGuidedAccessRestriction(MonoTouch.UIKit.IUIGuidedAccessRestrictionDelegate,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIImagePickerControllerDelegate" />
      </Targets>
      <Member MemberName="Canceled">
        <MemberSignature Language="C#" Value="public static void Canceled (this UIKit.IUIImagePickerControllerDelegate This, UIKit.UIImagePickerController picker);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Canceled(class UIKit.IUIImagePickerControllerDelegate This, class UIKit.UIImagePickerController picker) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIImagePickerControllerDelegate" RefType="this" />
          <Parameter Name="picker" Type="MonoTouch.UIKit.UIImagePickerController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="picker">To be added.</param>
          <summary>Indicates that the user cancelled the media-picking operation.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIImagePickerControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIImagePickerControllerDelegate_Extensions.Canceled(MonoTouch.UIKit.IUIImagePickerControllerDelegate,MonoTouch.UIKit.UIImagePickerController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIImagePickerControllerDelegate" />
      </Targets>
      <Member MemberName="FinishedPickingImage">
        <MemberSignature Language="C#" Value="public static void FinishedPickingImage (this UIKit.IUIImagePickerControllerDelegate This, UIKit.UIImagePickerController picker, UIKit.UIImage image, Foundation.NSDictionary editingInfo);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FinishedPickingImage(class UIKit.IUIImagePickerControllerDelegate This, class UIKit.UIImagePickerController picker, class UIKit.UIImage image, class Foundation.NSDictionary editingInfo) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIImagePickerControllerDelegate" RefType="this" />
          <Parameter Name="picker" Type="MonoTouch.UIKit.UIImagePickerController" />
          <Parameter Name="image" Type="MonoTouch.UIKit.UIImage" />
          <Parameter Name="editingInfo" Type="MonoTouch.Foundation.NSDictionary" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="picker">To be added.</param>
          <param name="image">To be added.</param>
          <param name="editingInfo">To be added.</param>
          <summary>Indicates that the user has completed picking an image.|b</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIImagePickerControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIImagePickerControllerDelegate_Extensions.FinishedPickingImage(MonoTouch.UIKit.IUIImagePickerControllerDelegate,MonoTouch.UIKit.UIImagePickerController,MonoTouch.UIKit.UIImage,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIImagePickerControllerDelegate" />
      </Targets>
      <Member MemberName="FinishedPickingMedia">
        <MemberSignature Language="C#" Value="public static void FinishedPickingMedia (this UIKit.IUIImagePickerControllerDelegate This, UIKit.UIImagePickerController picker, Foundation.NSDictionary info);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FinishedPickingMedia(class UIKit.IUIImagePickerControllerDelegate This, class UIKit.UIImagePickerController picker, class Foundation.NSDictionary info) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIImagePickerControllerDelegate" RefType="this" />
          <Parameter Name="picker" Type="MonoTouch.UIKit.UIImagePickerController" />
          <Parameter Name="info" Type="MonoTouch.Foundation.NSDictionary" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="picker">To be added.</param>
          <param name="info">To be added.</param>
          <summary>Indicates that the user has picked a picture or movie.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIImagePickerControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIImagePickerControllerDelegate_Extensions.FinishedPickingMedia(MonoTouch.UIKit.IUIImagePickerControllerDelegate,MonoTouch.UIKit.UIImagePickerController,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIInterfaceOrientation" />
      </Targets>
      <Member MemberName="IsLandscape">
        <MemberSignature Language="C#" Value="public static bool IsLandscape (this UIKit.UIInterfaceOrientation orientation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLandscape(valuetype UIKit.UIInterfaceOrientation orientation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="orientation" Type="MonoTouch.UIKit.UIInterfaceOrientation" RefType="this" />
        </Parameters>
        <Docs>
          <param name="orientation">The value to operate on.</param>
          <summary>Determines if the origination is one of the landscape
        values.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIInterfaceOrientationExtensions" Member="M:MonoTouch.UIKit.UIInterfaceOrientationExtensions.IsLandscape(MonoTouch.UIKit.UIInterfaceOrientation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIInterfaceOrientation" />
      </Targets>
      <Member MemberName="IsPortrait">
        <MemberSignature Language="C#" Value="public static bool IsPortrait (this UIKit.UIInterfaceOrientation orientation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPortrait(valuetype UIKit.UIInterfaceOrientation orientation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="orientation" Type="MonoTouch.UIKit.UIInterfaceOrientation" RefType="this" />
        </Parameters>
        <Docs>
          <param name="orientation">The value to operate on.</param>
          <summary>Determines if the orientation is one of the portrait orientations.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIInterfaceOrientationExtensions" Member="M:MonoTouch.UIKit.UIInterfaceOrientationExtensions.IsPortrait(MonoTouch.UIKit.UIInterfaceOrientation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UILayoutGuide" />
      </Targets>
      <Member MemberName="GetConstraintsAffectingLayout">
        <MemberSignature Language="C#" Value="public static UIKit.NSLayoutConstraint[] GetConstraintsAffectingLayout (this UIKit.UILayoutGuide This, UIKit.UILayoutConstraintAxis axis);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.NSLayoutConstraint[] GetConstraintsAffectingLayout(class UIKit.UILayoutGuide This, valuetype UIKit.UILayoutConstraintAxis axis) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.NSLayoutConstraint[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UILayoutGuide" RefType="this" />
          <Parameter Name="axis" Type="MonoTouch.UIKit.UILayoutConstraintAxis" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="axis">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UILayoutGuide_UIConstraintBasedLayoutDebugging" Member="M:MonoTouch.UIKit.UILayoutGuide_UIConstraintBasedLayoutDebugging.GetConstraintsAffectingLayout(MonoTouch.UIKit.UILayoutGuide,MonoTouch.UIKit.UILayoutConstraintAxis)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UILayoutGuide" />
      </Targets>
      <Member MemberName="GetHasAmbiguousLayout">
        <MemberSignature Language="C#" Value="public static bool GetHasAmbiguousLayout (this UIKit.UILayoutGuide This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetHasAmbiguousLayout(class UIKit.UILayoutGuide This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UILayoutGuide" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UILayoutGuide_UIConstraintBasedLayoutDebugging" Member="M:MonoTouch.UIKit.UILayoutGuide_UIConstraintBasedLayoutDebugging.GetHasAmbiguousLayout(MonoTouch.UIKit.UILayoutGuide)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUILayoutSupport" />
      </Targets>
      <Member MemberName="GetBottomAnchor">
        <MemberSignature Language="C#" Value="public static UIKit.NSLayoutYAxisAnchor GetBottomAnchor (this UIKit.IUILayoutSupport This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.NSLayoutYAxisAnchor GetBottomAnchor(class UIKit.IUILayoutSupport This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.NSLayoutYAxisAnchor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUILayoutSupport" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the bottom edge of the guide</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UILayoutSupport_Extensions" Member="M:MonoTouch.UIKit.UILayoutSupport_Extensions.GetBottomAnchor(MonoTouch.UIKit.IUILayoutSupport)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUILayoutSupport" />
      </Targets>
      <Member MemberName="GetHeightAnchor">
        <MemberSignature Language="C#" Value="public static UIKit.NSLayoutDimension GetHeightAnchor (this UIKit.IUILayoutSupport This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.NSLayoutDimension GetHeightAnchor(class UIKit.IUILayoutSupport This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.NSLayoutDimension</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUILayoutSupport" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the height of the guide.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UILayoutSupport_Extensions" Member="M:MonoTouch.UIKit.UILayoutSupport_Extensions.GetHeightAnchor(MonoTouch.UIKit.IUILayoutSupport)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUILayoutSupport" />
      </Targets>
      <Member MemberName="GetTopAnchor">
        <MemberSignature Language="C#" Value="public static UIKit.NSLayoutYAxisAnchor GetTopAnchor (this UIKit.IUILayoutSupport This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.NSLayoutYAxisAnchor GetTopAnchor(class UIKit.IUILayoutSupport This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.NSLayoutYAxisAnchor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUILayoutSupport" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the top edge of the guide.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UILayoutSupport_Extensions" Member="M:MonoTouch.UIKit.UILayoutSupport_Extensions.GetTopAnchor(MonoTouch.UIKit.IUILayoutSupport)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUINavigationBarDelegate" />
      </Targets>
      <Member MemberName="DidPopItem">
        <MemberSignature Language="C#" Value="public static void DidPopItem (this UIKit.IUINavigationBarDelegate This, UIKit.UINavigationBar navigationBar, UIKit.UINavigationItem item);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidPopItem(class UIKit.IUINavigationBarDelegate This, class UIKit.UINavigationBar navigationBar, class UIKit.UINavigationItem item) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUINavigationBarDelegate" RefType="this" />
          <Parameter Name="navigationBar" Type="MonoTouch.UIKit.UINavigationBar" />
          <Parameter Name="item" Type="MonoTouch.UIKit.UINavigationItem" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="navigationBar">To be added.</param>
          <param name="item">To be added.</param>
          <summary>Called by the system shortly after the  has been popped from the navigation stack.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UINavigationBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UINavigationBarDelegate_Extensions.DidPopItem(MonoTouch.UIKit.IUINavigationBarDelegate,MonoTouch.UIKit.UINavigationBar,MonoTouch.UIKit.UINavigationItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUINavigationBarDelegate" />
      </Targets>
      <Member MemberName="DidPushItem">
        <MemberSignature Language="C#" Value="public static void DidPushItem (this UIKit.IUINavigationBarDelegate This, UIKit.UINavigationBar navigationBar, UIKit.UINavigationItem item);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidPushItem(class UIKit.IUINavigationBarDelegate This, class UIKit.UINavigationBar navigationBar, class UIKit.UINavigationItem item) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUINavigationBarDelegate" RefType="this" />
          <Parameter Name="navigationBar" Type="MonoTouch.UIKit.UINavigationBar" />
          <Parameter Name="item" Type="MonoTouch.UIKit.UINavigationItem" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="navigationBar">To be added.</param>
          <param name="item">To be added.</param>
          <summary>Called by the system shortly after the  has been pushed onto the navigation stack.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UINavigationBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UINavigationBarDelegate_Extensions.DidPushItem(MonoTouch.UIKit.IUINavigationBarDelegate,MonoTouch.UIKit.UINavigationBar,MonoTouch.UIKit.UINavigationItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUINavigationBarDelegate" />
      </Targets>
      <Member MemberName="ShouldPopItem">
        <MemberSignature Language="C#" Value="public static bool ShouldPopItem (this UIKit.IUINavigationBarDelegate This, UIKit.UINavigationBar navigationBar, UIKit.UINavigationItem item);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldPopItem(class UIKit.IUINavigationBarDelegate This, class UIKit.UINavigationBar navigationBar, class UIKit.UINavigationItem item) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUINavigationBarDelegate" RefType="this" />
          <Parameter Name="navigationBar" Type="MonoTouch.UIKit.UINavigationBar" />
          <Parameter Name="item" Type="MonoTouch.UIKit.UINavigationItem" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="navigationBar">To be added.</param>
          <param name="item">To be added.</param>
          <summary>Called by the system prior to popping the .</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UINavigationBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UINavigationBarDelegate_Extensions.ShouldPopItem(MonoTouch.UIKit.IUINavigationBarDelegate,MonoTouch.UIKit.UINavigationBar,MonoTouch.UIKit.UINavigationItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUINavigationBarDelegate" />
      </Targets>
      <Member MemberName="ShouldPushItem">
        <MemberSignature Language="C#" Value="public static bool ShouldPushItem (this UIKit.IUINavigationBarDelegate This, UIKit.UINavigationBar navigationBar, UIKit.UINavigationItem item);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldPushItem(class UIKit.IUINavigationBarDelegate This, class UIKit.UINavigationBar navigationBar, class UIKit.UINavigationItem item) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUINavigationBarDelegate" RefType="this" />
          <Parameter Name="navigationBar" Type="MonoTouch.UIKit.UINavigationBar" />
          <Parameter Name="item" Type="MonoTouch.UIKit.UINavigationItem" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="navigationBar">To be added.</param>
          <param name="item">To be added.</param>
          <summary>Called by the system prior to pushing the  onto the navigation stack.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UINavigationBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UINavigationBarDelegate_Extensions.ShouldPushItem(MonoTouch.UIKit.IUINavigationBarDelegate,MonoTouch.UIKit.UINavigationBar,MonoTouch.UIKit.UINavigationItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUINavigationControllerDelegate" />
      </Targets>
      <Member MemberName="DidShowViewController">
        <MemberSignature Language="C#" Value="public static void DidShowViewController (this UIKit.IUINavigationControllerDelegate This, UIKit.UINavigationController navigationController, UIKit.UIViewController viewController, bool animated);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidShowViewController(class UIKit.IUINavigationControllerDelegate This, class UIKit.UINavigationController navigationController, class UIKit.UIViewController viewController, bool animated) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUINavigationControllerDelegate" RefType="this" />
          <Parameter Name="navigationController" Type="MonoTouch.UIKit.UINavigationController" />
          <Parameter Name="viewController" Type="MonoTouch.UIKit.UIViewController" />
          <Parameter Name="animated" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="navigationController">To be added.</param>
          <param name="viewController">To be added.</param>
          <param name="animated">To be added.</param>
          <summary>Extension method called shortly after the <paramref name="viewController" /> has been made visible.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UINavigationControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UINavigationControllerDelegate_Extensions.DidShowViewController(MonoTouch.UIKit.IUINavigationControllerDelegate,MonoTouch.UIKit.UINavigationController,MonoTouch.UIKit.UIViewController,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUINavigationControllerDelegate" />
      </Targets>
      <Member MemberName="GetAnimationControllerForOperation">
        <MemberSignature Language="C#" Value="public static UIKit.IUIViewControllerAnimatedTransitioning GetAnimationControllerForOperation (this UIKit.IUINavigationControllerDelegate This, UIKit.UINavigationController navigationController, UIKit.UINavigationControllerOperation operation, UIKit.UIViewController fromViewController, UIKit.UIViewController toViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.IUIViewControllerAnimatedTransitioning GetAnimationControllerForOperation(class UIKit.IUINavigationControllerDelegate This, class UIKit.UINavigationController navigationController, valuetype UIKit.UINavigationControllerOperation operation, class UIKit.UIViewController fromViewController, class UIKit.UIViewController toViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUINavigationControllerDelegate" RefType="this" />
          <Parameter Name="navigationController" Type="MonoTouch.UIKit.UINavigationController" />
          <Parameter Name="operation" Type="MonoTouch.UIKit.UINavigationControllerOperation" />
          <Parameter Name="fromViewController" Type="MonoTouch.UIKit.UIViewController" />
          <Parameter Name="toViewController" Type="MonoTouch.UIKit.UIViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="navigationController">To be added.</param>
          <param name="operation">To be added.</param>
          <param name="fromViewController">To be added.</param>
          <param name="toViewController">To be added.</param>
          <summary>Called by the system to retrieve the transition animation for the <paramref name="operation" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UINavigationControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UINavigationControllerDelegate_Extensions.GetAnimationControllerForOperation(MonoTouch.UIKit.IUINavigationControllerDelegate,MonoTouch.UIKit.UINavigationController,MonoTouch.UIKit.UINavigationControllerOperation,MonoTouch.UIKit.UIViewController,MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUINavigationControllerDelegate" />
      </Targets>
      <Member MemberName="GetInteractionControllerForAnimationController">
        <MemberSignature Language="C#" Value="public static UIKit.IUIViewControllerInteractiveTransitioning GetInteractionControllerForAnimationController (this UIKit.IUINavigationControllerDelegate This, UIKit.UINavigationController navigationController, UIKit.IUIViewControllerAnimatedTransitioning animationController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.IUIViewControllerInteractiveTransitioning GetInteractionControllerForAnimationController(class UIKit.IUINavigationControllerDelegate This, class UIKit.UINavigationController navigationController, class UIKit.IUIViewControllerAnimatedTransitioning animationController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUINavigationControllerDelegate" RefType="this" />
          <Parameter Name="navigationController" Type="MonoTouch.UIKit.UINavigationController" />
          <Parameter Name="animationController" Type="MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="navigationController">To be added.</param>
          <param name="animationController">To be added.</param>
          <summary>Called by the system to retrieve an interactive transition animation.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UINavigationControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UINavigationControllerDelegate_Extensions.GetInteractionControllerForAnimationController(MonoTouch.UIKit.IUINavigationControllerDelegate,MonoTouch.UIKit.UINavigationController,MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUINavigationControllerDelegate" />
      </Targets>
      <Member MemberName="GetPreferredInterfaceOrientation">
        <MemberSignature Language="C#" Value="public static UIKit.UIInterfaceOrientation GetPreferredInterfaceOrientation (this UIKit.IUINavigationControllerDelegate This, UIKit.UINavigationController navigationController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UIInterfaceOrientation GetPreferredInterfaceOrientation(class UIKit.IUINavigationControllerDelegate This, class UIKit.UINavigationController navigationController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIInterfaceOrientation</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUINavigationControllerDelegate" RefType="this" />
          <Parameter Name="navigationController" Type="MonoTouch.UIKit.UINavigationController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="navigationController">To be added.</param>
          <summary>Can be overridden to set the preferred interface orientation of the .</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UINavigationControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UINavigationControllerDelegate_Extensions.GetPreferredInterfaceOrientation(MonoTouch.UIKit.IUINavigationControllerDelegate,MonoTouch.UIKit.UINavigationController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUINavigationControllerDelegate" />
      </Targets>
      <Member MemberName="SupportedInterfaceOrientations">
        <MemberSignature Language="C#" Value="public static UIKit.UIInterfaceOrientationMask SupportedInterfaceOrientations (this UIKit.IUINavigationControllerDelegate This, UIKit.UINavigationController navigationController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UIInterfaceOrientationMask SupportedInterfaceOrientations(class UIKit.IUINavigationControllerDelegate This, class UIKit.UINavigationController navigationController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIInterfaceOrientationMask</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUINavigationControllerDelegate" RefType="this" />
          <Parameter Name="navigationController" Type="MonoTouch.UIKit.UINavigationController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="navigationController">To be added.</param>
          <summary>Can be overridden to dynamically specify the supported orientations of the .</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UINavigationControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UINavigationControllerDelegate_Extensions.SupportedInterfaceOrientations(MonoTouch.UIKit.IUINavigationControllerDelegate,MonoTouch.UIKit.UINavigationController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUINavigationControllerDelegate" />
      </Targets>
      <Member MemberName="WillShowViewController">
        <MemberSignature Language="C#" Value="public static void WillShowViewController (this UIKit.IUINavigationControllerDelegate This, UIKit.UINavigationController navigationController, UIKit.UIViewController viewController, bool animated);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillShowViewController(class UIKit.IUINavigationControllerDelegate This, class UIKit.UINavigationController navigationController, class UIKit.UIViewController viewController, bool animated) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUINavigationControllerDelegate" RefType="this" />
          <Parameter Name="navigationController" Type="MonoTouch.UIKit.UINavigationController" />
          <Parameter Name="viewController" Type="MonoTouch.UIKit.UIViewController" />
          <Parameter Name="animated" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="navigationController">To be added.</param>
          <param name="viewController">To be added.</param>
          <param name="animated">To be added.</param>
          <summary>Called by the system shortly before the  is displayed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UINavigationControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UINavigationControllerDelegate_Extensions.WillShowViewController(MonoTouch.UIKit.IUINavigationControllerDelegate,MonoTouch.UIKit.UINavigationController,MonoTouch.UIKit.UIViewController,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPageViewControllerDataSource" />
      </Targets>
      <Member MemberName="GetPresentationCount">
        <MemberSignature Language="C#" Value="public static nint GetPresentationCount (this UIKit.IUIPageViewControllerDataSource This, UIKit.UIPageViewController pageViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nint GetPresentationCount(class UIKit.IUIPageViewControllerDataSource This, class UIKit.UIPageViewController pageViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPageViewControllerDataSource" RefType="this" />
          <Parameter Name="pageViewController" Type="MonoTouch.UIKit.UIPageViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pageViewController">To be added.</param>
          <summary>The number of pages to be shown in the page indicator.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPageViewControllerDataSource_Extensions" Member="M:MonoTouch.UIKit.UIPageViewControllerDataSource_Extensions.GetPresentationCount(MonoTouch.UIKit.IUIPageViewControllerDataSource,MonoTouch.UIKit.UIPageViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPageViewControllerDataSource" />
      </Targets>
      <Member MemberName="GetPresentationIndex">
        <MemberSignature Language="C#" Value="public static nint GetPresentationIndex (this UIKit.IUIPageViewControllerDataSource This, UIKit.UIPageViewController pageViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nint GetPresentationIndex(class UIKit.IUIPageViewControllerDataSource This, class UIKit.UIPageViewController pageViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPageViewControllerDataSource" RefType="this" />
          <Parameter Name="pageViewController" Type="MonoTouch.UIKit.UIPageViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pageViewController">To be added.</param>
          <summary>The index of the page to be highlighted in the page indicator.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPageViewControllerDataSource_Extensions" Member="M:MonoTouch.UIKit.UIPageViewControllerDataSource_Extensions.GetPresentationIndex(MonoTouch.UIKit.IUIPageViewControllerDataSource,MonoTouch.UIKit.UIPageViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPageViewControllerDelegate" />
      </Targets>
      <Member MemberName="DidFinishAnimating">
        <MemberSignature Language="C#" Value="public static void DidFinishAnimating (this UIKit.IUIPageViewControllerDelegate This, UIKit.UIPageViewController pageViewController, bool finished, UIKit.UIViewController[] previousViewControllers, bool completed);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinishAnimating(class UIKit.IUIPageViewControllerDelegate This, class UIKit.UIPageViewController pageViewController, bool finished, class UIKit.UIViewController[] previousViewControllers, bool completed) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPageViewControllerDelegate" RefType="this" />
          <Parameter Name="pageViewController" Type="MonoTouch.UIKit.UIPageViewController" />
          <Parameter Name="finished" Type="System.Boolean" />
          <Parameter Name="previousViewControllers" Type="MonoTouch.UIKit.UIViewController[]" />
          <Parameter Name="completed" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pageViewController">To be added.</param>
          <param name="finished">To be added.</param>
          <param name="previousViewControllers">To be added.</param>
          <param name="completed">To be added.</param>
          <summary>Indicates that animation has completed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPageViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPageViewControllerDelegate_Extensions.DidFinishAnimating(MonoTouch.UIKit.IUIPageViewControllerDelegate,MonoTouch.UIKit.UIPageViewController,System.Boolean,MonoTouch.UIKit.UIViewController[],System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPageViewControllerDelegate" />
      </Targets>
      <Member MemberName="GetPreferredInterfaceOrientationForPresentation">
        <MemberSignature Language="C#" Value="public static UIKit.UIInterfaceOrientation GetPreferredInterfaceOrientationForPresentation (this UIKit.IUIPageViewControllerDelegate This, UIKit.UIPageViewController pageViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UIInterfaceOrientation GetPreferredInterfaceOrientationForPresentation(class UIKit.IUIPageViewControllerDelegate This, class UIKit.UIPageViewController pageViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIInterfaceOrientation</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPageViewControllerDelegate" RefType="this" />
          <Parameter Name="pageViewController" Type="MonoTouch.UIKit.UIPageViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pageViewController">To be added.</param>
          <summary>The preferred orientation of the UIPageViewController.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPageViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPageViewControllerDelegate_Extensions.GetPreferredInterfaceOrientationForPresentation(MonoTouch.UIKit.IUIPageViewControllerDelegate,MonoTouch.UIKit.UIPageViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPageViewControllerDelegate" />
      </Targets>
      <Member MemberName="GetSpineLocation">
        <MemberSignature Language="C#" Value="public static UIKit.UIPageViewControllerSpineLocation GetSpineLocation (this UIKit.IUIPageViewControllerDelegate This, UIKit.UIPageViewController pageViewController, UIKit.UIInterfaceOrientation orientation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UIPageViewControllerSpineLocation GetSpineLocation(class UIKit.IUIPageViewControllerDelegate This, class UIKit.UIPageViewController pageViewController, valuetype UIKit.UIInterfaceOrientation orientation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIPageViewControllerSpineLocation</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPageViewControllerDelegate" RefType="this" />
          <Parameter Name="pageViewController" Type="MonoTouch.UIKit.UIPageViewController" />
          <Parameter Name="orientation" Type="MonoTouch.UIKit.UIInterfaceOrientation" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pageViewController">To be added.</param>
          <param name="orientation">To be added.</param>
          <summary>The location of the spine of the UIPageViewController.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPageViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPageViewControllerDelegate_Extensions.GetSpineLocation(MonoTouch.UIKit.IUIPageViewControllerDelegate,MonoTouch.UIKit.UIPageViewController,MonoTouch.UIKit.UIInterfaceOrientation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPageViewControllerDelegate" />
      </Targets>
      <Member MemberName="SupportedInterfaceOrientations">
        <MemberSignature Language="C#" Value="public static UIKit.UIInterfaceOrientationMask SupportedInterfaceOrientations (this UIKit.IUIPageViewControllerDelegate This, UIKit.UIPageViewController pageViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UIInterfaceOrientationMask SupportedInterfaceOrientations(class UIKit.IUIPageViewControllerDelegate This, class UIKit.UIPageViewController pageViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIInterfaceOrientationMask</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPageViewControllerDelegate" RefType="this" />
          <Parameter Name="pageViewController" Type="MonoTouch.UIKit.UIPageViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pageViewController">To be added.</param>
          <summary>The supported interface orientations.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPageViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPageViewControllerDelegate_Extensions.SupportedInterfaceOrientations(MonoTouch.UIKit.IUIPageViewControllerDelegate,MonoTouch.UIKit.UIPageViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPageViewControllerDelegate" />
      </Targets>
      <Member MemberName="WillTransition">
        <MemberSignature Language="C#" Value="public static void WillTransition (this UIKit.IUIPageViewControllerDelegate This, UIKit.UIPageViewController pageViewController, UIKit.UIViewController[] pendingViewControllers);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillTransition(class UIKit.IUIPageViewControllerDelegate This, class UIKit.UIPageViewController pageViewController, class UIKit.UIViewController[] pendingViewControllers) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPageViewControllerDelegate" RefType="this" />
          <Parameter Name="pageViewController" Type="MonoTouch.UIKit.UIPageViewController" />
          <Parameter Name="pendingViewControllers" Type="MonoTouch.UIKit.UIViewController[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pageViewController">To be added.</param>
          <param name="pendingViewControllers">To be added.</param>
          <summary>Indicates that a transition is about to begin.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPageViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPageViewControllerDelegate_Extensions.WillTransition(MonoTouch.UIKit.IUIPageViewControllerDelegate,MonoTouch.UIKit.UIPageViewController,MonoTouch.UIKit.UIViewController[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPasteConfigurationSupporting" />
      </Targets>
      <Member MemberName="CanPaste">
        <MemberSignature Language="C#" Value="public static bool CanPaste (this UIKit.IUIPasteConfigurationSupporting This, Foundation.NSItemProvider[] itemProviders);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanPaste(class UIKit.IUIPasteConfigurationSupporting This, class Foundation.NSItemProvider[] itemProviders) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPasteConfigurationSupporting" RefType="this" />
          <Parameter Name="itemProviders" Type="MonoTouch.Foundation.NSItemProvider[]" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="itemProviders">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPasteConfigurationSupporting_Extensions" Member="M:MonoTouch.UIKit.UIPasteConfigurationSupporting_Extensions.CanPaste(MonoTouch.UIKit.IUIPasteConfigurationSupporting,MonoTouch.Foundation.NSItemProvider[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPasteConfigurationSupporting" />
      </Targets>
      <Member MemberName="Paste">
        <MemberSignature Language="C#" Value="public static void Paste (this UIKit.IUIPasteConfigurationSupporting This, Foundation.NSItemProvider[] itemProviders);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Paste(class UIKit.IUIPasteConfigurationSupporting This, class Foundation.NSItemProvider[] itemProviders) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPasteConfigurationSupporting" RefType="this" />
          <Parameter Name="itemProviders" Type="MonoTouch.Foundation.NSItemProvider[]" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="itemProviders">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPasteConfigurationSupporting_Extensions" Member="M:MonoTouch.UIKit.UIPasteConfigurationSupporting_Extensions.Paste(MonoTouch.UIKit.IUIPasteConfigurationSupporting,MonoTouch.Foundation.NSItemProvider[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPickerViewAccessibilityDelegate" />
      </Targets>
      <Member MemberName="GetAccessibilityAttributedHint">
        <MemberSignature Language="C#" Value="public static Foundation.NSAttributedString GetAccessibilityAttributedHint (this UIKit.IUIPickerViewAccessibilityDelegate This, UIKit.UIPickerView pickerView, nint component);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSAttributedString GetAccessibilityAttributedHint(class UIKit.IUIPickerViewAccessibilityDelegate This, class UIKit.UIPickerView pickerView, valuetype System.nint component) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSAttributedString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPickerViewAccessibilityDelegate" RefType="this" />
          <Parameter Name="pickerView" Type="MonoTouch.UIKit.UIPickerView" />
          <Parameter Name="component" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pickerView">To be added.</param>
          <param name="component">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPickerViewAccessibilityDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPickerViewAccessibilityDelegate_Extensions.GetAccessibilityAttributedHint(MonoTouch.UIKit.IUIPickerViewAccessibilityDelegate,MonoTouch.UIKit.UIPickerView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPickerViewAccessibilityDelegate" />
      </Targets>
      <Member MemberName="GetAccessibilityAttributedLabel">
        <MemberSignature Language="C#" Value="public static Foundation.NSAttributedString GetAccessibilityAttributedLabel (this UIKit.IUIPickerViewAccessibilityDelegate This, UIKit.UIPickerView pickerView, nint component);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSAttributedString GetAccessibilityAttributedLabel(class UIKit.IUIPickerViewAccessibilityDelegate This, class UIKit.UIPickerView pickerView, valuetype System.nint component) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSAttributedString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPickerViewAccessibilityDelegate" RefType="this" />
          <Parameter Name="pickerView" Type="MonoTouch.UIKit.UIPickerView" />
          <Parameter Name="component" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pickerView">To be added.</param>
          <param name="component">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPickerViewAccessibilityDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPickerViewAccessibilityDelegate_Extensions.GetAccessibilityAttributedLabel(MonoTouch.UIKit.IUIPickerViewAccessibilityDelegate,MonoTouch.UIKit.UIPickerView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPickerViewAccessibilityDelegate" />
      </Targets>
      <Member MemberName="GetAccessibilityHint">
        <MemberSignature Language="C#" Value="public static string GetAccessibilityHint (this UIKit.IUIPickerViewAccessibilityDelegate This, UIKit.UIPickerView pickerView, nint component);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetAccessibilityHint(class UIKit.IUIPickerViewAccessibilityDelegate This, class UIKit.UIPickerView pickerView, valuetype System.nint component) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPickerViewAccessibilityDelegate" RefType="this" />
          <Parameter Name="pickerView" Type="MonoTouch.UIKit.UIPickerView" />
          <Parameter Name="component" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pickerView">To be added.</param>
          <param name="component">To be added.</param>
          <summary>Returns a description of what the <paramref name="component" /> action is on the <paramref name="pickerView" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPickerViewAccessibilityDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPickerViewAccessibilityDelegate_Extensions.GetAccessibilityHint(MonoTouch.UIKit.IUIPickerViewAccessibilityDelegate,MonoTouch.UIKit.UIPickerView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPickerViewAccessibilityDelegate" />
      </Targets>
      <Member MemberName="GetAccessibilityLabel">
        <MemberSignature Language="C#" Value="public static string GetAccessibilityLabel (this UIKit.IUIPickerViewAccessibilityDelegate This, UIKit.UIPickerView pickerView, nint acessibilityLabelForComponent);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetAccessibilityLabel(class UIKit.IUIPickerViewAccessibilityDelegate This, class UIKit.UIPickerView pickerView, valuetype System.nint acessibilityLabelForComponent) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPickerViewAccessibilityDelegate" RefType="this" />
          <Parameter Name="pickerView" Type="MonoTouch.UIKit.UIPickerView" />
          <Parameter Name="acessibilityLabelForComponent" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pickerView">To be added.</param>
          <param name="acessibilityLabelForComponent">To be added.</param>
          <summary>Returns the accessibility label for a component.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPickerViewAccessibilityDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPickerViewAccessibilityDelegate_Extensions.GetAccessibilityLabel(MonoTouch.UIKit.IUIPickerViewAccessibilityDelegate,MonoTouch.UIKit.UIPickerView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPickerViewDelegate" />
      </Targets>
      <Member MemberName="GetAttributedTitle">
        <MemberSignature Language="C#" Value="public static Foundation.NSAttributedString GetAttributedTitle (this UIKit.IUIPickerViewDelegate This, UIKit.UIPickerView pickerView, nint row, nint component);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSAttributedString GetAttributedTitle(class UIKit.IUIPickerViewDelegate This, class UIKit.UIPickerView pickerView, valuetype System.nint row, valuetype System.nint component) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSAttributedString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPickerViewDelegate" RefType="this" />
          <Parameter Name="pickerView" Type="MonoTouch.UIKit.UIPickerView" />
          <Parameter Name="row" Type="System.nint" />
          <Parameter Name="component" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pickerView">Reference to the view making this request.</param>
          <param name="row" />
          <param name="component" />
          <summary>Method invoked to get an attributed string for a particular component in the picker view.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPickerViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPickerViewDelegate_Extensions.GetAttributedTitle(MonoTouch.UIKit.IUIPickerViewDelegate,MonoTouch.UIKit.UIPickerView,System.nint,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPickerViewDelegate" />
      </Targets>
      <Member MemberName="GetComponentWidth">
        <MemberSignature Language="C#" Value="public static nfloat GetComponentWidth (this UIKit.IUIPickerViewDelegate This, UIKit.UIPickerView pickerView, nint component);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat GetComponentWidth(class UIKit.IUIPickerViewDelegate This, class UIKit.UIPickerView pickerView, valuetype System.nint component) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPickerViewDelegate" RefType="this" />
          <Parameter Name="pickerView" Type="MonoTouch.UIKit.UIPickerView" />
          <Parameter Name="component" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pickerView">To be added.</param>
          <param name="component">To be added.</param>
          <summary>The width of the component at the specified index.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPickerViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPickerViewDelegate_Extensions.GetComponentWidth(MonoTouch.UIKit.IUIPickerViewDelegate,MonoTouch.UIKit.UIPickerView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPickerViewDelegate" />
      </Targets>
      <Member MemberName="GetRowHeight">
        <MemberSignature Language="C#" Value="public static nfloat GetRowHeight (this UIKit.IUIPickerViewDelegate This, UIKit.UIPickerView pickerView, nint component);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat GetRowHeight(class UIKit.IUIPickerViewDelegate This, class UIKit.UIPickerView pickerView, valuetype System.nint component) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPickerViewDelegate" RefType="this" />
          <Parameter Name="pickerView" Type="MonoTouch.UIKit.UIPickerView" />
          <Parameter Name="component" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pickerView">To be added.</param>
          <param name="component">To be added.</param>
          <summary>The height of the component at the specified index.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPickerViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPickerViewDelegate_Extensions.GetRowHeight(MonoTouch.UIKit.IUIPickerViewDelegate,MonoTouch.UIKit.UIPickerView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPickerViewDelegate" />
      </Targets>
      <Member MemberName="GetTitle">
        <MemberSignature Language="C#" Value="public static string GetTitle (this UIKit.IUIPickerViewDelegate This, UIKit.UIPickerView pickerView, nint row, nint component);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTitle(class UIKit.IUIPickerViewDelegate This, class UIKit.UIPickerView pickerView, valuetype System.nint row, valuetype System.nint component) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPickerViewDelegate" RefType="this" />
          <Parameter Name="pickerView" Type="MonoTouch.UIKit.UIPickerView" />
          <Parameter Name="row" Type="System.nint" />
          <Parameter Name="component" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pickerView">To be added.</param>
          <param name="row">To be added.</param>
          <param name="component">To be added.</param>
          <summary>The title of the specified component in the specified row.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPickerViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPickerViewDelegate_Extensions.GetTitle(MonoTouch.UIKit.IUIPickerViewDelegate,MonoTouch.UIKit.UIPickerView,System.nint,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPickerViewDelegate" />
      </Targets>
      <Member MemberName="GetView">
        <MemberSignature Language="C#" Value="public static UIKit.UIView GetView (this UIKit.IUIPickerViewDelegate This, UIKit.UIPickerView pickerView, nint row, nint component, UIKit.UIView view);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIView GetView(class UIKit.IUIPickerViewDelegate This, class UIKit.UIPickerView pickerView, valuetype System.nint row, valuetype System.nint component, class UIKit.UIView view) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIView</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPickerViewDelegate" RefType="this" />
          <Parameter Name="pickerView" Type="MonoTouch.UIKit.UIPickerView" />
          <Parameter Name="view" Type="MonoTouch.UIKit.UIView" />
          <Parameter Name="row" Type="System.nint" />
          <Parameter Name="component" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pickerView">To be added.</param>
          <param name="row">To be added.</param>
          <param name="component">To be added.</param>
          <param name="view">To be added.</param>
          <summary>Retrieves the view for a given row and component. The last argument is the previously-used UIView, which is now hidden and cached.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPickerViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPickerViewDelegate_Extensions.GetView(MonoTouch.UIKit.IUIPickerViewDelegate,MonoTouch.UIKit.UIPickerView,System.nint,System.nint,MonoTouch.UIKit.UIView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPickerViewDelegate" />
      </Targets>
      <Member MemberName="Selected">
        <MemberSignature Language="C#" Value="public static void Selected (this UIKit.IUIPickerViewDelegate This, UIKit.UIPickerView pickerView, nint row, nint component);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Selected(class UIKit.IUIPickerViewDelegate This, class UIKit.UIPickerView pickerView, valuetype System.nint row, valuetype System.nint component) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPickerViewDelegate" RefType="this" />
          <Parameter Name="pickerView" Type="MonoTouch.UIKit.UIPickerView" />
          <Parameter Name="row" Type="System.nint" />
          <Parameter Name="component" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pickerView">To be added.</param>
          <param name="row">To be added.</param>
          <param name="component">To be added.</param>
          <summary>Indicates that the user has selected a row in the component.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPickerViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPickerViewDelegate_Extensions.Selected(MonoTouch.UIKit.IUIPickerViewDelegate,MonoTouch.UIKit.UIPickerView,System.nint,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPopoverControllerDelegate" />
      </Targets>
      <Member MemberName="DidDismiss">
        <MemberSignature Language="C#" Value="public static void DidDismiss (this UIKit.IUIPopoverControllerDelegate This, UIKit.UIPopoverController popoverController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDismiss(class UIKit.IUIPopoverControllerDelegate This, class UIKit.UIPopoverController popoverController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPopoverControllerDelegate" RefType="this" />
          <Parameter Name="popoverController" Type="MonoTouch.UIKit.UIPopoverController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="popoverController">To be added.</param>
          <summary>Indicates that the UIPopover was dismissed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPopoverControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPopoverControllerDelegate_Extensions.DidDismiss(MonoTouch.UIKit.IUIPopoverControllerDelegate,MonoTouch.UIKit.UIPopoverController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPopoverControllerDelegate" />
      </Targets>
      <Member MemberName="ShouldDismiss">
        <MemberSignature Language="C#" Value="public static bool ShouldDismiss (this UIKit.IUIPopoverControllerDelegate This, UIKit.UIPopoverController popoverController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldDismiss(class UIKit.IUIPopoverControllerDelegate This, class UIKit.UIPopoverController popoverController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPopoverControllerDelegate" RefType="this" />
          <Parameter Name="popoverController" Type="MonoTouch.UIKit.UIPopoverController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="popoverController">To be added.</param>
          <summary>Whether the popover should be dismissed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPopoverControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPopoverControllerDelegate_Extensions.ShouldDismiss(MonoTouch.UIKit.IUIPopoverControllerDelegate,MonoTouch.UIKit.UIPopoverController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPopoverControllerDelegate" />
      </Targets>
      <Member MemberName="WillReposition">
        <MemberSignature Language="C#" Value="public static void WillReposition (this UIKit.IUIPopoverControllerDelegate This, UIKit.UIPopoverController popoverController, ref CoreGraphics.CGRect rect, ref UIKit.UIView view);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillReposition(class UIKit.IUIPopoverControllerDelegate This, class UIKit.UIPopoverController popoverController, valuetype CoreGraphics.CGRect rect, class UIKit.UIView view) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPopoverControllerDelegate" RefType="this" />
          <Parameter Name="popoverController" Type="MonoTouch.UIKit.UIPopoverController" />
          <Parameter Name="view" Type="MonoTouch.UIKit.UIView&amp;" RefType="ref" />
          <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="popoverController">To be added.</param>
          <param name="rect">To be added.</param>
          <param name="view">To be added.</param>
          <summary>Indicates that the popover is about to change position.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPopoverControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPopoverControllerDelegate_Extensions.WillReposition(MonoTouch.UIKit.IUIPopoverControllerDelegate,MonoTouch.UIKit.UIPopoverController,MonoTouch.CoreGraphics.CGRect@,MonoTouch.UIKit.UIView@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPopoverPresentationControllerDelegate" />
      </Targets>
      <Member MemberName="DidDismissPopover">
        <MemberSignature Language="C#" Value="public static void DidDismissPopover (this UIKit.IUIPopoverPresentationControllerDelegate This, UIKit.UIPopoverPresentationController popoverPresentationController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDismissPopover(class UIKit.IUIPopoverPresentationControllerDelegate This, class UIKit.UIPopoverPresentationController popoverPresentationController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPopoverPresentationControllerDelegate" RefType="this" />
          <Parameter Name="popoverPresentationController" Type="MonoTouch.UIKit.UIPopoverPresentationController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="popoverPresentationController">To be added.</param>
          <summary>The popover that is controlled by <paramref name="popoverPresentationController" /> was dismissed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPopoverPresentationControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPopoverPresentationControllerDelegate_Extensions.DidDismissPopover(MonoTouch.UIKit.IUIPopoverPresentationControllerDelegate,MonoTouch.UIKit.UIPopoverPresentationController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPopoverPresentationControllerDelegate" />
      </Targets>
      <Member MemberName="PrepareForPopoverPresentation">
        <MemberSignature Language="C#" Value="public static void PrepareForPopoverPresentation (this UIKit.IUIPopoverPresentationControllerDelegate This, UIKit.UIPopoverPresentationController popoverPresentationController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PrepareForPopoverPresentation(class UIKit.IUIPopoverPresentationControllerDelegate This, class UIKit.UIPopoverPresentationController popoverPresentationController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPopoverPresentationControllerDelegate" RefType="this" />
          <Parameter Name="popoverPresentationController" Type="MonoTouch.UIKit.UIPopoverPresentationController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="popoverPresentationController">To be added.</param>
          <summary>The popover that is controlled by <paramref name="popoverPresentationController" /> will be presented soon.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPopoverPresentationControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPopoverPresentationControllerDelegate_Extensions.PrepareForPopoverPresentation(MonoTouch.UIKit.IUIPopoverPresentationControllerDelegate,MonoTouch.UIKit.UIPopoverPresentationController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPopoverPresentationControllerDelegate" />
      </Targets>
      <Member MemberName="ShouldDismissPopover">
        <MemberSignature Language="C#" Value="public static bool ShouldDismissPopover (this UIKit.IUIPopoverPresentationControllerDelegate This, UIKit.UIPopoverPresentationController popoverPresentationController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldDismissPopover(class UIKit.IUIPopoverPresentationControllerDelegate This, class UIKit.UIPopoverPresentationController popoverPresentationController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPopoverPresentationControllerDelegate" RefType="this" />
          <Parameter Name="popoverPresentationController" Type="MonoTouch.UIKit.UIPopoverPresentationController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="popoverPresentationController">To be added.</param>
          <summary>Asks if the popover that is controlled by <paramref name="popoverPresentationController" /> should be dismissed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPopoverPresentationControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPopoverPresentationControllerDelegate_Extensions.ShouldDismissPopover(MonoTouch.UIKit.IUIPopoverPresentationControllerDelegate,MonoTouch.UIKit.UIPopoverPresentationController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPopoverPresentationControllerDelegate" />
      </Targets>
      <Member MemberName="WillRepositionPopover">
        <MemberSignature Language="C#" Value="public static void WillRepositionPopover (this UIKit.IUIPopoverPresentationControllerDelegate This, UIKit.UIPopoverPresentationController popoverPresentationController, ref CoreGraphics.CGRect targetRect, ref UIKit.UIView inView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillRepositionPopover(class UIKit.IUIPopoverPresentationControllerDelegate This, class UIKit.UIPopoverPresentationController popoverPresentationController, valuetype CoreGraphics.CGRect targetRect, class UIKit.UIView inView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPopoverPresentationControllerDelegate" RefType="this" />
          <Parameter Name="popoverPresentationController" Type="MonoTouch.UIKit.UIPopoverPresentationController" />
          <Parameter Name="inView" Type="MonoTouch.UIKit.UIView&amp;" RefType="ref" />
          <Parameter Name="targetRect" Type="MonoTouch.CoreGraphics.CGRect&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="popoverPresentationController">To be added.</param>
          <param name="targetRect">To be added.</param>
          <param name="inView">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPopoverPresentationControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPopoverPresentationControllerDelegate_Extensions.WillRepositionPopover(MonoTouch.UIKit.IUIPopoverPresentationControllerDelegate,MonoTouch.UIKit.UIPopoverPresentationController,MonoTouch.CoreGraphics.CGRect@,MonoTouch.UIKit.UIView@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPreviewInteractionDelegate" />
      </Targets>
      <Member MemberName="DidUpdateCommit">
        <MemberSignature Language="C#" Value="public static void DidUpdateCommit (this UIKit.IUIPreviewInteractionDelegate This, UIKit.UIPreviewInteraction previewInteraction, nfloat transitionProgress, bool ended);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateCommit(class UIKit.IUIPreviewInteractionDelegate This, class UIKit.UIPreviewInteraction previewInteraction, valuetype System.nfloat transitionProgress, bool ended) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPreviewInteractionDelegate" RefType="this" />
          <Parameter Name="previewInteraction" Type="MonoTouch.UIKit.UIPreviewInteraction" />
          <Parameter Name="ended" Type="System.Boolean" />
          <Parameter Name="transitionProgress" Type="System.nfloat" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="previewInteraction">To be added.</param>
          <param name="transitionProgress">To be added.</param>
          <param name="ended">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPreviewInteractionDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPreviewInteractionDelegate_Extensions.DidUpdateCommit(MonoTouch.UIKit.IUIPreviewInteractionDelegate,MonoTouch.UIKit.UIPreviewInteraction,System.nfloat,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPreviewInteractionDelegate" />
      </Targets>
      <Member MemberName="ShouldBegin">
        <MemberSignature Language="C#" Value="public static bool ShouldBegin (this UIKit.IUIPreviewInteractionDelegate This, UIKit.UIPreviewInteraction previewInteraction);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldBegin(class UIKit.IUIPreviewInteractionDelegate This, class UIKit.UIPreviewInteraction previewInteraction) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPreviewInteractionDelegate" RefType="this" />
          <Parameter Name="previewInteraction" Type="MonoTouch.UIKit.UIPreviewInteraction" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="previewInteraction">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPreviewInteractionDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPreviewInteractionDelegate_Extensions.ShouldBegin(MonoTouch.UIKit.IUIPreviewInteractionDelegate,MonoTouch.UIKit.UIPreviewInteraction)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPrinterPickerControllerDelegate" />
      </Targets>
      <Member MemberName="DidDismiss">
        <MemberSignature Language="C#" Value="public static void DidDismiss (this UIKit.IUIPrinterPickerControllerDelegate This, UIKit.UIPrinterPickerController printerPickerController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDismiss(class UIKit.IUIPrinterPickerControllerDelegate This, class UIKit.UIPrinterPickerController printerPickerController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPrinterPickerControllerDelegate" RefType="this" />
          <Parameter Name="printerPickerController" Type="MonoTouch.UIKit.UIPrinterPickerController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="printerPickerController">The printer picker controller that is being displayed.</param>
          <summary>The <paramref name="printerPickerController" /> was dismissed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPrinterPickerControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPrinterPickerControllerDelegate_Extensions.DidDismiss(MonoTouch.UIKit.IUIPrinterPickerControllerDelegate,MonoTouch.UIKit.UIPrinterPickerController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPrinterPickerControllerDelegate" />
      </Targets>
      <Member MemberName="DidPresent">
        <MemberSignature Language="C#" Value="public static void DidPresent (this UIKit.IUIPrinterPickerControllerDelegate This, UIKit.UIPrinterPickerController printerPickerController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidPresent(class UIKit.IUIPrinterPickerControllerDelegate This, class UIKit.UIPrinterPickerController printerPickerController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPrinterPickerControllerDelegate" RefType="this" />
          <Parameter Name="printerPickerController" Type="MonoTouch.UIKit.UIPrinterPickerController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="printerPickerController">The printer picker controller that is being displayed.</param>
          <summary>TThe <paramref name="printerPickerController" /> was presented.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPrinterPickerControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPrinterPickerControllerDelegate_Extensions.DidPresent(MonoTouch.UIKit.IUIPrinterPickerControllerDelegate,MonoTouch.UIKit.UIPrinterPickerController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPrinterPickerControllerDelegate" />
      </Targets>
      <Member MemberName="DidSelectPrinter">
        <MemberSignature Language="C#" Value="public static void DidSelectPrinter (this UIKit.IUIPrinterPickerControllerDelegate This, UIKit.UIPrinterPickerController printerPickerController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSelectPrinter(class UIKit.IUIPrinterPickerControllerDelegate This, class UIKit.UIPrinterPickerController printerPickerController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPrinterPickerControllerDelegate" RefType="this" />
          <Parameter Name="printerPickerController" Type="MonoTouch.UIKit.UIPrinterPickerController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="printerPickerController">The printer picker controller that is being displayed.</param>
          <summary>The <paramref name="printerPickerController" /> selected a printer.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPrinterPickerControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPrinterPickerControllerDelegate_Extensions.DidSelectPrinter(MonoTouch.UIKit.IUIPrinterPickerControllerDelegate,MonoTouch.UIKit.UIPrinterPickerController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPrinterPickerControllerDelegate" />
      </Targets>
      <Member MemberName="GetParentViewController">
        <MemberSignature Language="C#" Value="public static UIKit.UIViewController GetParentViewController (this UIKit.IUIPrinterPickerControllerDelegate This, UIKit.UIPrinterPickerController printerPickerController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIViewController GetParentViewController(class UIKit.IUIPrinterPickerControllerDelegate This, class UIKit.UIPrinterPickerController printerPickerController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIViewController</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPrinterPickerControllerDelegate" RefType="this" />
          <Parameter Name="printerPickerController" Type="MonoTouch.UIKit.UIPrinterPickerController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="printerPickerController">The printer picker controller that is being displayed.</param>
          <summary>Gets the parent view controller of the <paramref name="printerPickerController" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPrinterPickerControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPrinterPickerControllerDelegate_Extensions.GetParentViewController(MonoTouch.UIKit.IUIPrinterPickerControllerDelegate,MonoTouch.UIKit.UIPrinterPickerController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPrinterPickerControllerDelegate" />
      </Targets>
      <Member MemberName="ShouldShowPrinter">
        <MemberSignature Language="C#" Value="public static bool ShouldShowPrinter (this UIKit.IUIPrinterPickerControllerDelegate This, UIKit.UIPrinterPickerController printerPickerController, UIKit.UIPrinter printer);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldShowPrinter(class UIKit.IUIPrinterPickerControllerDelegate This, class UIKit.UIPrinterPickerController printerPickerController, class UIKit.UIPrinter printer) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPrinterPickerControllerDelegate" RefType="this" />
          <Parameter Name="printerPickerController" Type="MonoTouch.UIKit.UIPrinterPickerController" />
          <Parameter Name="printer" Type="MonoTouch.UIKit.UIPrinter" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="printerPickerController">The printer picker controller that is being displayed.</param>
          <param name="printer">Designated printer for consideration by the delegate.</param>
          <summary>The <paramref name="printerPickerController" /> should show <paramref name="printer" /> to the user.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPrinterPickerControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPrinterPickerControllerDelegate_Extensions.ShouldShowPrinter(MonoTouch.UIKit.IUIPrinterPickerControllerDelegate,MonoTouch.UIKit.UIPrinterPickerController,MonoTouch.UIKit.UIPrinter)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPrinterPickerControllerDelegate" />
      </Targets>
      <Member MemberName="WillDismiss">
        <MemberSignature Language="C#" Value="public static void WillDismiss (this UIKit.IUIPrinterPickerControllerDelegate This, UIKit.UIPrinterPickerController printerPickerController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillDismiss(class UIKit.IUIPrinterPickerControllerDelegate This, class UIKit.UIPrinterPickerController printerPickerController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPrinterPickerControllerDelegate" RefType="this" />
          <Parameter Name="printerPickerController" Type="MonoTouch.UIKit.UIPrinterPickerController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="printerPickerController">The printer picker controller that is being displayed.</param>
          <summary>The <paramref name="printerPickerController" /> is about to be dismissed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPrinterPickerControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPrinterPickerControllerDelegate_Extensions.WillDismiss(MonoTouch.UIKit.IUIPrinterPickerControllerDelegate,MonoTouch.UIKit.UIPrinterPickerController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPrinterPickerControllerDelegate" />
      </Targets>
      <Member MemberName="WillPresent">
        <MemberSignature Language="C#" Value="public static void WillPresent (this UIKit.IUIPrinterPickerControllerDelegate This, UIKit.UIPrinterPickerController printerPickerController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillPresent(class UIKit.IUIPrinterPickerControllerDelegate This, class UIKit.UIPrinterPickerController printerPickerController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPrinterPickerControllerDelegate" RefType="this" />
          <Parameter Name="printerPickerController" Type="MonoTouch.UIKit.UIPrinterPickerController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="printerPickerController">The printer picker controller that is being displayed.</param>
          <summary>The <paramref name="printerPickerController" /> is about to be presented.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPrinterPickerControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPrinterPickerControllerDelegate_Extensions.WillPresent(MonoTouch.UIKit.IUIPrinterPickerControllerDelegate,MonoTouch.UIKit.UIPrinterPickerController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIPrintError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this UIKit.UIPrintError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype UIKit.UIPrintError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.UIKit.UIPrintError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.UIKit.UIPrintError value</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPrintErrorExtensions" Member="M:MonoTouch.UIKit.UIPrintErrorExtensions.GetDomain(MonoTouch.UIKit.UIPrintError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="ChooseCutterBehavior">
        <MemberSignature Language="C#" Value="public static UIKit.UIPrinterCutterBehavior ChooseCutterBehavior (this UIKit.IUIPrintInteractionControllerDelegate This, UIKit.UIPrintInteractionController printInteractionController, Foundation.NSNumber[] availableBehaviors);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UIPrinterCutterBehavior ChooseCutterBehavior(class UIKit.IUIPrintInteractionControllerDelegate This, class UIKit.UIPrintInteractionController printInteractionController, class Foundation.NSNumber[] availableBehaviors) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIPrinterCutterBehavior</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" RefType="this" />
          <Parameter Name="printInteractionController" Type="MonoTouch.UIKit.UIPrintInteractionController" />
          <Parameter Name="availableBehaviors" Type="MonoTouch.Foundation.NSNumber[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="printInteractionController">To be added.</param>
          <param name="availableBehaviors">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions.ChooseCutterBehavior(MonoTouch.UIKit.IUIPrintInteractionControllerDelegate,MonoTouch.UIKit.UIPrintInteractionController,MonoTouch.Foundation.NSNumber[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="ChoosePaper">
        <MemberSignature Language="C#" Value="public static UIKit.UIPrintPaper ChoosePaper (this UIKit.IUIPrintInteractionControllerDelegate This, UIKit.UIPrintInteractionController printInteractionController, UIKit.UIPrintPaper[] paperList);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIPrintPaper ChoosePaper(class UIKit.IUIPrintInteractionControllerDelegate This, class UIKit.UIPrintInteractionController printInteractionController, class UIKit.UIPrintPaper[] paperList) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIPrintPaper</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" RefType="this" />
          <Parameter Name="printInteractionController" Type="MonoTouch.UIKit.UIPrintInteractionController" />
          <Parameter Name="paperList" Type="MonoTouch.UIKit.UIPrintPaper[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="printInteractionController">To be added.</param>
          <param name="paperList">To be added.</param>
          <summary>Retrieves an object holding the paper size and printing area to use for a printing job.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions.ChoosePaper(MonoTouch.UIKit.IUIPrintInteractionControllerDelegate,MonoTouch.UIKit.UIPrintInteractionController,MonoTouch.UIKit.UIPrintPaper[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="CutLengthForPaper">
        <MemberSignature Language="C#" Value="public static nfloat CutLengthForPaper (this UIKit.IUIPrintInteractionControllerDelegate This, UIKit.UIPrintInteractionController printInteractionController, UIKit.UIPrintPaper paper);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat CutLengthForPaper(class UIKit.IUIPrintInteractionControllerDelegate This, class UIKit.UIPrintInteractionController printInteractionController, class UIKit.UIPrintPaper paper) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" RefType="this" />
          <Parameter Name="printInteractionController" Type="MonoTouch.UIKit.UIPrintInteractionController" />
          <Parameter Name="paper" Type="MonoTouch.UIKit.UIPrintPaper" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="printInteractionController">To be added.</param>
          <param name="paper">To be added.</param>
          <summary>The length to use when cutting the page.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions.CutLengthForPaper(MonoTouch.UIKit.IUIPrintInteractionControllerDelegate,MonoTouch.UIKit.UIPrintInteractionController,MonoTouch.UIKit.UIPrintPaper)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="DidDismissPrinterOptions">
        <MemberSignature Language="C#" Value="public static void DidDismissPrinterOptions (this UIKit.IUIPrintInteractionControllerDelegate This, UIKit.UIPrintInteractionController printInteractionController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDismissPrinterOptions(class UIKit.IUIPrintInteractionControllerDelegate This, class UIKit.UIPrintInteractionController printInteractionController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" RefType="this" />
          <Parameter Name="printInteractionController" Type="MonoTouch.UIKit.UIPrintInteractionController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="printInteractionController">To be added.</param>
          <summary>Indicates that the printer user interface has been dismissed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions.DidDismissPrinterOptions(MonoTouch.UIKit.IUIPrintInteractionControllerDelegate,MonoTouch.UIKit.UIPrintInteractionController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="DidFinishJob">
        <MemberSignature Language="C#" Value="public static void DidFinishJob (this UIKit.IUIPrintInteractionControllerDelegate This, UIKit.UIPrintInteractionController printInteractionController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinishJob(class UIKit.IUIPrintInteractionControllerDelegate This, class UIKit.UIPrintInteractionController printInteractionController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" RefType="this" />
          <Parameter Name="printInteractionController" Type="MonoTouch.UIKit.UIPrintInteractionController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="printInteractionController">To be added.</param>
          <summary>Indicates that the print job has ended.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions.DidFinishJob(MonoTouch.UIKit.IUIPrintInteractionControllerDelegate,MonoTouch.UIKit.UIPrintInteractionController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="DidPresentPrinterOptions">
        <MemberSignature Language="C#" Value="public static void DidPresentPrinterOptions (this UIKit.IUIPrintInteractionControllerDelegate This, UIKit.UIPrintInteractionController printInteractionController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidPresentPrinterOptions(class UIKit.IUIPrintInteractionControllerDelegate This, class UIKit.UIPrintInteractionController printInteractionController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" RefType="this" />
          <Parameter Name="printInteractionController" Type="MonoTouch.UIKit.UIPrintInteractionController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="printInteractionController">To be added.</param>
          <summary>Indicates that the printing-options user interface has been presented.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions.DidPresentPrinterOptions(MonoTouch.UIKit.IUIPrintInteractionControllerDelegate,MonoTouch.UIKit.UIPrintInteractionController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="GetViewController">
        <MemberSignature Language="C#" Value="public static UIKit.UIViewController GetViewController (this UIKit.IUIPrintInteractionControllerDelegate This, UIKit.UIPrintInteractionController printInteractionController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIViewController GetViewController(class UIKit.IUIPrintInteractionControllerDelegate This, class UIKit.UIPrintInteractionController printInteractionController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIViewController</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" RefType="this" />
          <Parameter Name="printInteractionController" Type="MonoTouch.UIKit.UIPrintInteractionController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="printInteractionController">To be added.</param>
          <summary>Returns the parent UIViewController for managing the printing-options view.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions.GetViewController(MonoTouch.UIKit.IUIPrintInteractionControllerDelegate,MonoTouch.UIKit.UIPrintInteractionController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="WillDismissPrinterOptions">
        <MemberSignature Language="C#" Value="public static void WillDismissPrinterOptions (this UIKit.IUIPrintInteractionControllerDelegate This, UIKit.UIPrintInteractionController printInteractionController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillDismissPrinterOptions(class UIKit.IUIPrintInteractionControllerDelegate This, class UIKit.UIPrintInteractionController printInteractionController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" RefType="this" />
          <Parameter Name="printInteractionController" Type="MonoTouch.UIKit.UIPrintInteractionController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="printInteractionController">To be added.</param>
          <summary>Indicates that the printing-options user interface will be dismissed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions.WillDismissPrinterOptions(MonoTouch.UIKit.IUIPrintInteractionControllerDelegate,MonoTouch.UIKit.UIPrintInteractionController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="WillPresentPrinterOptions">
        <MemberSignature Language="C#" Value="public static void WillPresentPrinterOptions (this UIKit.IUIPrintInteractionControllerDelegate This, UIKit.UIPrintInteractionController printInteractionController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillPresentPrinterOptions(class UIKit.IUIPrintInteractionControllerDelegate This, class UIKit.UIPrintInteractionController printInteractionController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" RefType="this" />
          <Parameter Name="printInteractionController" Type="MonoTouch.UIKit.UIPrintInteractionController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="printInteractionController">To be added.</param>
          <summary>Indicates that the printing-options interface is about to be displayed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions.WillPresentPrinterOptions(MonoTouch.UIKit.IUIPrintInteractionControllerDelegate,MonoTouch.UIKit.UIPrintInteractionController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="WillStartJob">
        <MemberSignature Language="C#" Value="public static void WillStartJob (this UIKit.IUIPrintInteractionControllerDelegate This, UIKit.UIPrintInteractionController printInteractionController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillStartJob(class UIKit.IUIPrintInteractionControllerDelegate This, class UIKit.UIPrintInteractionController printInteractionController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" RefType="this" />
          <Parameter Name="printInteractionController" Type="MonoTouch.UIKit.UIPrintInteractionController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="printInteractionController">To be added.</param>
          <summary>Indicates that the print job is about to begin.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions.WillStartJob(MonoTouch.UIKit.IUIPrintInteractionControllerDelegate,MonoTouch.UIKit.UIPrintInteractionController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIResponder" />
      </Targets>
      <Member MemberName="DecreaseSize">
        <MemberSignature Language="C#" Value="public static void DecreaseSize (this UIKit.UIResponder This, Foundation.NSObject sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DecreaseSize(class UIKit.UIResponder This, class Foundation.NSObject sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UIResponder" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="sender">
            <para>To be added.</para>
            <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
          </param>
          <summary>A hardware keyboard request (Command-minus) to decrease the size of the <see cref="T:UIKit.UIResponder" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIResponder_NSObjectExtension" Member="M:MonoTouch.UIKit.UIResponder_NSObjectExtension.DecreaseSize(MonoTouch.UIKit.UIResponder,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIResponder" />
      </Targets>
      <Member MemberName="IncreaseSize">
        <MemberSignature Language="C#" Value="public static void IncreaseSize (this UIKit.UIResponder This, Foundation.NSObject sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void IncreaseSize(class UIKit.UIResponder This, class Foundation.NSObject sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UIResponder" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="sender">
            <para>To be added.</para>
            <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
          </param>
          <summary>A hardware keyboard request (Command-plus) to increase the size of the <see cref="T:UIKit.UIResponder" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIResponder_NSObjectExtension" Member="M:MonoTouch.UIKit.UIResponder_NSObjectExtension.IncreaseSize(MonoTouch.UIKit.UIResponder,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIScrollViewAccessibilityDelegate" />
      </Targets>
      <Member MemberName="GetAccessibilityAttributedScrollStatus">
        <MemberSignature Language="C#" Value="public static Foundation.NSAttributedString GetAccessibilityAttributedScrollStatus (this UIKit.IUIScrollViewAccessibilityDelegate This, UIKit.UIScrollView scrollView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSAttributedString GetAccessibilityAttributedScrollStatus(class UIKit.IUIScrollViewAccessibilityDelegate This, class UIKit.UIScrollView scrollView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSAttributedString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIScrollViewAccessibilityDelegate" RefType="this" />
          <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scrollView">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIScrollViewAccessibilityDelegate_Extensions" Member="M:MonoTouch.UIKit.UIScrollViewAccessibilityDelegate_Extensions.GetAccessibilityAttributedScrollStatus(MonoTouch.UIKit.IUIScrollViewAccessibilityDelegate,MonoTouch.UIKit.UIScrollView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIScrollViewAccessibilityDelegate" />
      </Targets>
      <Member MemberName="GetAccessibilityScrollStatus">
        <MemberSignature Language="C#" Value="public static string GetAccessibilityScrollStatus (this UIKit.IUIScrollViewAccessibilityDelegate This, UIKit.UIScrollView scrollView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetAccessibilityScrollStatus(class UIKit.IUIScrollViewAccessibilityDelegate This, class UIKit.UIScrollView scrollView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIScrollViewAccessibilityDelegate" RefType="this" />
          <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scrollView">To be added.</param>
          <summary>Gets a string that represents the current relative progress through a document or collection of documents. (For example, "Volume 34 of 51.")</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIScrollViewAccessibilityDelegate_Extensions" Member="M:MonoTouch.UIKit.UIScrollViewAccessibilityDelegate_Extensions.GetAccessibilityScrollStatus(MonoTouch.UIKit.IUIScrollViewAccessibilityDelegate,MonoTouch.UIKit.UIScrollView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIScrollViewDelegate" />
      </Targets>
      <Member MemberName="DecelerationEnded">
        <MemberSignature Language="C#" Value="public static void DecelerationEnded (this UIKit.IUIScrollViewDelegate This, UIKit.UIScrollView scrollView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DecelerationEnded(class UIKit.IUIScrollViewDelegate This, class UIKit.UIScrollView scrollView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIScrollViewDelegate" RefType="this" />
          <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scrollView">Scroll view object that is decelerating the scrolling content.</param>
          <summary>Indicates that deceleration relating to a scroll event has ended.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIScrollViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIScrollViewDelegate_Extensions.DecelerationEnded(MonoTouch.UIKit.IUIScrollViewDelegate,MonoTouch.UIKit.UIScrollView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIScrollViewDelegate" />
      </Targets>
      <Member MemberName="DecelerationStarted">
        <MemberSignature Language="C#" Value="public static void DecelerationStarted (this UIKit.IUIScrollViewDelegate This, UIKit.UIScrollView scrollView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DecelerationStarted(class UIKit.IUIScrollViewDelegate This, class UIKit.UIScrollView scrollView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIScrollViewDelegate" RefType="this" />
          <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scrollView">Scroll view object that is decelerating the scrolling content.</param>
          <summary>Indicates that deceleration of a scrolling event has begun.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIScrollViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIScrollViewDelegate_Extensions.DecelerationStarted(MonoTouch.UIKit.IUIScrollViewDelegate,MonoTouch.UIKit.UIScrollView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIScrollViewDelegate" />
      </Targets>
      <Member MemberName="DidChangeAdjustedContentInset">
        <MemberSignature Language="C#" Value="public static void DidChangeAdjustedContentInset (this UIKit.IUIScrollViewDelegate This, UIKit.UIScrollView scrollView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidChangeAdjustedContentInset(class UIKit.IUIScrollViewDelegate This, class UIKit.UIScrollView scrollView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIScrollViewDelegate" RefType="this" />
          <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scrollView">To be added.</param>
          <summary>Method that is called when the inset values change.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIScrollViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIScrollViewDelegate_Extensions.DidChangeAdjustedContentInset(MonoTouch.UIKit.IUIScrollViewDelegate,MonoTouch.UIKit.UIScrollView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIScrollViewDelegate" />
      </Targets>
      <Member MemberName="DidZoom">
        <MemberSignature Language="C#" Value="public static void DidZoom (this UIKit.IUIScrollViewDelegate This, UIKit.UIScrollView scrollView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidZoom(class UIKit.IUIScrollViewDelegate This, class UIKit.UIScrollView scrollView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIScrollViewDelegate" RefType="this" />
          <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scrollView">Scroll view being zoomed.</param>
          <summary>Indicates that the specified scrollView has zoomed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIScrollViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIScrollViewDelegate_Extensions.DidZoom(MonoTouch.UIKit.IUIScrollViewDelegate,MonoTouch.UIKit.UIScrollView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIScrollViewDelegate" />
      </Targets>
      <Member MemberName="DraggingEnded">
        <MemberSignature Language="C#" Value="public static void DraggingEnded (this UIKit.IUIScrollViewDelegate This, UIKit.UIScrollView scrollView, bool willDecelerate);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DraggingEnded(class UIKit.IUIScrollViewDelegate This, class UIKit.UIScrollView scrollView, bool willDecelerate) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIScrollViewDelegate" RefType="this" />
          <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
          <Parameter Name="willDecelerate" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scrollView">Scroll view where the content finished scrolling.</param>
          <param name="willDecelerate"> if the scrolling movement will continue (but decelerate) after the user lifts their finger. If  then the scrolling stops immediately upon touch-up.</param>
          <summary>Indicates that dragging has completed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIScrollViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIScrollViewDelegate_Extensions.DraggingEnded(MonoTouch.UIKit.IUIScrollViewDelegate,MonoTouch.UIKit.UIScrollView,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIScrollViewDelegate" />
      </Targets>
      <Member MemberName="DraggingStarted">
        <MemberSignature Language="C#" Value="public static void DraggingStarted (this UIKit.IUIScrollViewDelegate This, UIKit.UIScrollView scrollView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DraggingStarted(class UIKit.IUIScrollViewDelegate This, class UIKit.UIScrollView scrollView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIScrollViewDelegate" RefType="this" />
          <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scrollView">Scroll view whose content is about to be scrolled.</param>
          <summary>Indicates that dragging has begun.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIScrollViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIScrollViewDelegate_Extensions.DraggingStarted(MonoTouch.UIKit.IUIScrollViewDelegate,MonoTouch.UIKit.UIScrollView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIScrollViewDelegate" />
      </Targets>
      <Member MemberName="ScrollAnimationEnded">
        <MemberSignature Language="C#" Value="public static void ScrollAnimationEnded (this UIKit.IUIScrollViewDelegate This, UIKit.UIScrollView scrollView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ScrollAnimationEnded(class UIKit.IUIScrollViewDelegate This, class UIKit.UIScrollView scrollView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIScrollViewDelegate" RefType="this" />
          <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scrollView">Scroll view that is performing a scrolling animation.</param>
          <summary>Indicates that all animations relating to scrolling have completed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIScrollViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIScrollViewDelegate_Extensions.ScrollAnimationEnded(MonoTouch.UIKit.IUIScrollViewDelegate,MonoTouch.UIKit.UIScrollView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIScrollViewDelegate" />
      </Targets>
      <Member MemberName="Scrolled">
        <MemberSignature Language="C#" Value="public static void Scrolled (this UIKit.IUIScrollViewDelegate This, UIKit.UIScrollView scrollView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scrolled(class UIKit.IUIScrollViewDelegate This, class UIKit.UIScrollView scrollView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIScrollViewDelegate" RefType="this" />
          <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scrollView">Scroll view where the scrolling occurred.</param>
          <summary>Indicates that the specified scrollView has scrolled.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIScrollViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIScrollViewDelegate_Extensions.Scrolled(MonoTouch.UIKit.IUIScrollViewDelegate,MonoTouch.UIKit.UIScrollView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIScrollViewDelegate" />
      </Targets>
      <Member MemberName="ScrolledToTop">
        <MemberSignature Language="C#" Value="public static void ScrolledToTop (this UIKit.IUIScrollViewDelegate This, UIKit.UIScrollView scrollView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ScrolledToTop(class UIKit.IUIScrollViewDelegate This, class UIKit.UIScrollView scrollView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIScrollViewDelegate" RefType="this" />
          <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scrollView">Scroll view that was scrolled.</param>
          <summary>Indicates that the specified scrollView's scrolling has ended at the top.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIScrollViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIScrollViewDelegate_Extensions.ScrolledToTop(MonoTouch.UIKit.IUIScrollViewDelegate,MonoTouch.UIKit.UIScrollView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIScrollViewDelegate" />
      </Targets>
      <Member MemberName="ShouldScrollToTop">
        <MemberSignature Language="C#" Value="public static bool ShouldScrollToTop (this UIKit.IUIScrollViewDelegate This, UIKit.UIScrollView scrollView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldScrollToTop(class UIKit.IUIScrollViewDelegate This, class UIKit.UIScrollView scrollView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIScrollViewDelegate" RefType="this" />
          <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scrollView">Scroll view requesting whether scroll is allowed.</param>
          <summary>Whether a scroll to the beginning of the scrollView should be permitted.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIScrollViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIScrollViewDelegate_Extensions.ShouldScrollToTop(MonoTouch.UIKit.IUIScrollViewDelegate,MonoTouch.UIKit.UIScrollView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIScrollViewDelegate" />
      </Targets>
      <Member MemberName="ViewForZoomingInScrollView">
        <MemberSignature Language="C#" Value="public static UIKit.UIView ViewForZoomingInScrollView (this UIKit.IUIScrollViewDelegate This, UIKit.UIScrollView scrollView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIView ViewForZoomingInScrollView(class UIKit.IUIScrollViewDelegate This, class UIKit.UIScrollView scrollView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIView</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIScrollViewDelegate" RefType="this" />
          <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scrollView">Scroll view displaying the content.</param>
          <summary>The UIView to scale when zooming is requested.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIScrollViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIScrollViewDelegate_Extensions.ViewForZoomingInScrollView(MonoTouch.UIKit.IUIScrollViewDelegate,MonoTouch.UIKit.UIScrollView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIScrollViewDelegate" />
      </Targets>
      <Member MemberName="WillEndDragging">
        <MemberSignature Language="C#" Value="public static void WillEndDragging (this UIKit.IUIScrollViewDelegate This, UIKit.UIScrollView scrollView, CoreGraphics.CGPoint velocity, ref CoreGraphics.CGPoint targetContentOffset);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillEndDragging(class UIKit.IUIScrollViewDelegate This, class UIKit.UIScrollView scrollView, valuetype CoreGraphics.CGPoint velocity, valuetype CoreGraphics.CGPoint targetContentOffset) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIScrollViewDelegate" RefType="this" />
          <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
          <Parameter Name="velocity" Type="MonoTouch.CoreGraphics.CGPoint" />
          <Parameter Name="targetContentOffset" Type="MonoTouch.CoreGraphics.CGPoint&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scrollView">Scroll view where user touch ended.</param>
          <param name="velocity">The velocity of the scroll view (in points) when the touch ended.</param>
          <param name="targetContentOffset">The expected offset when the scrolling action decelerates to a stop.</param>
          <summary>Indicates that dragging is about to end.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIScrollViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIScrollViewDelegate_Extensions.WillEndDragging(MonoTouch.UIKit.IUIScrollViewDelegate,MonoTouch.UIKit.UIScrollView,MonoTouch.CoreGraphics.CGPoint,MonoTouch.CoreGraphics.CGPoint@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIScrollViewDelegate" />
      </Targets>
      <Member MemberName="ZoomingEnded">
        <MemberSignature Language="C#" Value="public static void ZoomingEnded (this UIKit.IUIScrollViewDelegate This, UIKit.UIScrollView scrollView, UIKit.UIView withView, nfloat atScale);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZoomingEnded(class UIKit.IUIScrollViewDelegate This, class UIKit.UIScrollView scrollView, class UIKit.UIView withView, valuetype System.nfloat atScale) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIScrollViewDelegate" RefType="this" />
          <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
          <Parameter Name="withView" Type="MonoTouch.UIKit.UIView" />
          <Parameter Name="atScale" Type="System.nfloat" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scrollView">Scroll view containing the content being zoomed.</param>
          <param name="withView">View representing the content that needs to be scaled.</param>
          <param name="atScale">The scale factor to use. This value must be between the limits set by the  properties  and .</param>
          <summary>Indicates that zooming has completed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIScrollViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIScrollViewDelegate_Extensions.ZoomingEnded(MonoTouch.UIKit.IUIScrollViewDelegate,MonoTouch.UIKit.UIScrollView,MonoTouch.UIKit.UIView,System.nfloat)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIScrollViewDelegate" />
      </Targets>
      <Member MemberName="ZoomingStarted">
        <MemberSignature Language="C#" Value="public static void ZoomingStarted (this UIKit.IUIScrollViewDelegate This, UIKit.UIScrollView scrollView, UIKit.UIView view);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZoomingStarted(class UIKit.IUIScrollViewDelegate This, class UIKit.UIScrollView scrollView, class UIKit.UIView view) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIScrollViewDelegate" RefType="this" />
          <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
          <Parameter Name="view" Type="MonoTouch.UIKit.UIView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scrollView">Scroll view containing the content.</param>
          <param name="view">The content view about to be zoomed.</param>
          <summary>Indicates that zooming has begun.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIScrollViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIScrollViewDelegate_Extensions.ZoomingStarted(MonoTouch.UIKit.IUIScrollViewDelegate,MonoTouch.UIKit.UIScrollView,MonoTouch.UIKit.UIView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchBarDelegate" />
      </Targets>
      <Member MemberName="BookmarkButtonClicked">
        <MemberSignature Language="C#" Value="public static void BookmarkButtonClicked (this UIKit.IUISearchBarDelegate This, UIKit.UISearchBar searchBar);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BookmarkButtonClicked(class UIKit.IUISearchBarDelegate This, class UIKit.UISearchBar searchBar) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchBarDelegate" RefType="this" />
          <Parameter Name="searchBar" Type="MonoTouch.UIKit.UISearchBar" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchBar">To be added.</param>
          <summary>Indicates that the bookmark button was tapped.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchBarDelegate_Extensions.BookmarkButtonClicked(MonoTouch.UIKit.IUISearchBarDelegate,MonoTouch.UIKit.UISearchBar)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchBarDelegate" />
      </Targets>
      <Member MemberName="CancelButtonClicked">
        <MemberSignature Language="C#" Value="public static void CancelButtonClicked (this UIKit.IUISearchBarDelegate This, UIKit.UISearchBar searchBar);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CancelButtonClicked(class UIKit.IUISearchBarDelegate This, class UIKit.UISearchBar searchBar) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchBarDelegate" RefType="this" />
          <Parameter Name="searchBar" Type="MonoTouch.UIKit.UISearchBar" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchBar">To be added.</param>
          <summary>Indicates that the cancel button was tapped.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchBarDelegate_Extensions.CancelButtonClicked(MonoTouch.UIKit.IUISearchBarDelegate,MonoTouch.UIKit.UISearchBar)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchBarDelegate" />
      </Targets>
      <Member MemberName="ListButtonClicked">
        <MemberSignature Language="C#" Value="public static void ListButtonClicked (this UIKit.IUISearchBarDelegate This, UIKit.UISearchBar searchBar);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ListButtonClicked(class UIKit.IUISearchBarDelegate This, class UIKit.UISearchBar searchBar) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchBarDelegate" RefType="this" />
          <Parameter Name="searchBar" Type="MonoTouch.UIKit.UISearchBar" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchBar">To be added.</param>
          <summary>Indicates that the list button was tapped.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchBarDelegate_Extensions.ListButtonClicked(MonoTouch.UIKit.IUISearchBarDelegate,MonoTouch.UIKit.UISearchBar)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchBarDelegate" />
      </Targets>
      <Member MemberName="OnEditingStarted">
        <MemberSignature Language="C#" Value="public static void OnEditingStarted (this UIKit.IUISearchBarDelegate This, UIKit.UISearchBar searchBar);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OnEditingStarted(class UIKit.IUISearchBarDelegate This, class UIKit.UISearchBar searchBar) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchBarDelegate" RefType="this" />
          <Parameter Name="searchBar" Type="MonoTouch.UIKit.UISearchBar" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchBar">To be added.</param>
          <summary>Indicates that the user has begun editing the search text.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchBarDelegate_Extensions.OnEditingStarted(MonoTouch.UIKit.IUISearchBarDelegate,MonoTouch.UIKit.UISearchBar)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchBarDelegate" />
      </Targets>
      <Member MemberName="OnEditingStopped">
        <MemberSignature Language="C#" Value="public static void OnEditingStopped (this UIKit.IUISearchBarDelegate This, UIKit.UISearchBar searchBar);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OnEditingStopped(class UIKit.IUISearchBarDelegate This, class UIKit.UISearchBar searchBar) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchBarDelegate" RefType="this" />
          <Parameter Name="searchBar" Type="MonoTouch.UIKit.UISearchBar" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchBar">To be added.</param>
          <summary>Indicates that the user has stopped editing the text field.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchBarDelegate_Extensions.OnEditingStopped(MonoTouch.UIKit.IUISearchBarDelegate,MonoTouch.UIKit.UISearchBar)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchBarDelegate" />
      </Targets>
      <Member MemberName="SearchButtonClicked">
        <MemberSignature Language="C#" Value="public static void SearchButtonClicked (this UIKit.IUISearchBarDelegate This, UIKit.UISearchBar searchBar);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SearchButtonClicked(class UIKit.IUISearchBarDelegate This, class UIKit.UISearchBar searchBar) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchBarDelegate" RefType="this" />
          <Parameter Name="searchBar" Type="MonoTouch.UIKit.UISearchBar" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchBar">To be added.</param>
          <summary>Indicates that the search button was tapped.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchBarDelegate_Extensions.SearchButtonClicked(MonoTouch.UIKit.IUISearchBarDelegate,MonoTouch.UIKit.UISearchBar)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchBarDelegate" />
      </Targets>
      <Member MemberName="SelectedScopeButtonIndexChanged">
        <MemberSignature Language="C#" Value="public static void SelectedScopeButtonIndexChanged (this UIKit.IUISearchBarDelegate This, UIKit.UISearchBar searchBar, nint selectedScope);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SelectedScopeButtonIndexChanged(class UIKit.IUISearchBarDelegate This, class UIKit.UISearchBar searchBar, valuetype System.nint selectedScope) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchBarDelegate" RefType="this" />
          <Parameter Name="searchBar" Type="MonoTouch.UIKit.UISearchBar" />
          <Parameter Name="selectedScope" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchBar">To be added.</param>
          <param name="selectedScope">To be added.</param>
          <summary>Indicates that the user has changed the scope of the search.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchBarDelegate_Extensions.SelectedScopeButtonIndexChanged(MonoTouch.UIKit.IUISearchBarDelegate,MonoTouch.UIKit.UISearchBar,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchBarDelegate" />
      </Targets>
      <Member MemberName="ShouldBeginEditing">
        <MemberSignature Language="C#" Value="public static bool ShouldBeginEditing (this UIKit.IUISearchBarDelegate This, UIKit.UISearchBar searchBar);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldBeginEditing(class UIKit.IUISearchBarDelegate This, class UIKit.UISearchBar searchBar) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchBarDelegate" RefType="this" />
          <Parameter Name="searchBar" Type="MonoTouch.UIKit.UISearchBar" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchBar">To be added.</param>
          <summary>Whether editing of the search text should be allowed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchBarDelegate_Extensions.ShouldBeginEditing(MonoTouch.UIKit.IUISearchBarDelegate,MonoTouch.UIKit.UISearchBar)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchBarDelegate" />
      </Targets>
      <Member MemberName="ShouldChangeTextInRange">
        <MemberSignature Language="C#" Value="public static bool ShouldChangeTextInRange (this UIKit.IUISearchBarDelegate This, UIKit.UISearchBar searchBar, Foundation.NSRange range, string text);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldChangeTextInRange(class UIKit.IUISearchBarDelegate This, class UIKit.UISearchBar searchBar, valuetype Foundation.NSRange range, string text) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchBarDelegate" RefType="this" />
          <Parameter Name="searchBar" Type="MonoTouch.UIKit.UISearchBar" />
          <Parameter Name="range" Type="MonoTouch.Foundation.NSRange" />
          <Parameter Name="text" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchBar">To be added.</param>
          <param name="range">To be added.</param>
          <param name="text">To be added.</param>
          <summary>Whether the text in the specified range should be replaced with the specified text.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchBarDelegate_Extensions.ShouldChangeTextInRange(MonoTouch.UIKit.IUISearchBarDelegate,MonoTouch.UIKit.UISearchBar,MonoTouch.Foundation.NSRange,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchBarDelegate" />
      </Targets>
      <Member MemberName="ShouldEndEditing">
        <MemberSignature Language="C#" Value="public static bool ShouldEndEditing (this UIKit.IUISearchBarDelegate This, UIKit.UISearchBar searchBar);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldEndEditing(class UIKit.IUISearchBarDelegate This, class UIKit.UISearchBar searchBar) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchBarDelegate" RefType="this" />
          <Parameter Name="searchBar" Type="MonoTouch.UIKit.UISearchBar" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchBar">To be added.</param>
          <summary>Whether the editing of the search text should end.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchBarDelegate_Extensions.ShouldEndEditing(MonoTouch.UIKit.IUISearchBarDelegate,MonoTouch.UIKit.UISearchBar)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchBarDelegate" />
      </Targets>
      <Member MemberName="TextChanged">
        <MemberSignature Language="C#" Value="public static void TextChanged (this UIKit.IUISearchBarDelegate This, UIKit.UISearchBar searchBar, string searchText);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TextChanged(class UIKit.IUISearchBarDelegate This, class UIKit.UISearchBar searchBar, string searchText) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchBarDelegate" RefType="this" />
          <Parameter Name="searchBar" Type="MonoTouch.UIKit.UISearchBar" />
          <Parameter Name="searchText" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchBar">To be added.</param>
          <param name="searchText">To be added.</param>
          <summary>Indicates that the search text has changed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchBarDelegate_Extensions.TextChanged(MonoTouch.UIKit.IUISearchBarDelegate,MonoTouch.UIKit.UISearchBar,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchControllerDelegate" />
      </Targets>
      <Member MemberName="DidDismissSearchController">
        <MemberSignature Language="C#" Value="public static void DidDismissSearchController (this UIKit.IUISearchControllerDelegate This, UIKit.UISearchController searchController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDismissSearchController(class UIKit.IUISearchControllerDelegate This, class UIKit.UISearchController searchController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchControllerDelegate" RefType="this" />
          <Parameter Name="searchController" Type="MonoTouch.UIKit.UISearchController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchController">To be added.</param>
          <summary>The <paramref name="searchController" /> was dismissed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchControllerDelegate_Extensions.DidDismissSearchController(MonoTouch.UIKit.IUISearchControllerDelegate,MonoTouch.UIKit.UISearchController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchControllerDelegate" />
      </Targets>
      <Member MemberName="DidPresentSearchController">
        <MemberSignature Language="C#" Value="public static void DidPresentSearchController (this UIKit.IUISearchControllerDelegate This, UIKit.UISearchController searchController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidPresentSearchController(class UIKit.IUISearchControllerDelegate This, class UIKit.UISearchController searchController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchControllerDelegate" RefType="this" />
          <Parameter Name="searchController" Type="MonoTouch.UIKit.UISearchController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchController">To be added.</param>
          <summary>The <paramref name="searchController" /> was presented.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchControllerDelegate_Extensions.DidPresentSearchController(MonoTouch.UIKit.IUISearchControllerDelegate,MonoTouch.UIKit.UISearchController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchControllerDelegate" />
      </Targets>
      <Member MemberName="PresentSearchController">
        <MemberSignature Language="C#" Value="public static void PresentSearchController (this UIKit.IUISearchControllerDelegate This, UIKit.UISearchController searchController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PresentSearchController(class UIKit.IUISearchControllerDelegate This, class UIKit.UISearchController searchController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchControllerDelegate" RefType="this" />
          <Parameter Name="searchController" Type="MonoTouch.UIKit.UISearchController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchController">To be added.</param>
          <summary>Presents the <paramref name="searchController" /> to the user.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchControllerDelegate_Extensions.PresentSearchController(MonoTouch.UIKit.IUISearchControllerDelegate,MonoTouch.UIKit.UISearchController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchControllerDelegate" />
      </Targets>
      <Member MemberName="WillDismissSearchController">
        <MemberSignature Language="C#" Value="public static void WillDismissSearchController (this UIKit.IUISearchControllerDelegate This, UIKit.UISearchController searchController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillDismissSearchController(class UIKit.IUISearchControllerDelegate This, class UIKit.UISearchController searchController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchControllerDelegate" RefType="this" />
          <Parameter Name="searchController" Type="MonoTouch.UIKit.UISearchController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchController">To be added.</param>
          <summary>The <paramref name="searchController" /> is about to be dismissed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchControllerDelegate_Extensions.WillDismissSearchController(MonoTouch.UIKit.IUISearchControllerDelegate,MonoTouch.UIKit.UISearchController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchControllerDelegate" />
      </Targets>
      <Member MemberName="WillPresentSearchController">
        <MemberSignature Language="C#" Value="public static void WillPresentSearchController (this UIKit.IUISearchControllerDelegate This, UIKit.UISearchController searchController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillPresentSearchController(class UIKit.IUISearchControllerDelegate This, class UIKit.UISearchController searchController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchControllerDelegate" RefType="this" />
          <Parameter Name="searchController" Type="MonoTouch.UIKit.UISearchController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchController">To be added.</param>
          <summary>The <paramref name="searchController" /> is about to be presented.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchControllerDelegate_Extensions.WillPresentSearchController(MonoTouch.UIKit.IUISearchControllerDelegate,MonoTouch.UIKit.UISearchController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchDisplayDelegate" />
      </Targets>
      <Member MemberName="DidBeginSearch">
        <MemberSignature Language="C#" Value="public static void DidBeginSearch (this UIKit.IUISearchDisplayDelegate This, UIKit.UISearchDisplayController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidBeginSearch(class UIKit.IUISearchDisplayDelegate This, class UIKit.UISearchDisplayController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchDisplayDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UISearchDisplayController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>Indicates that searching has started.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchDisplayDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchDisplayDelegate_Extensions.DidBeginSearch(MonoTouch.UIKit.IUISearchDisplayDelegate,MonoTouch.UIKit.UISearchDisplayController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchDisplayDelegate" />
      </Targets>
      <Member MemberName="DidEndSearch">
        <MemberSignature Language="C#" Value="public static void DidEndSearch (this UIKit.IUISearchDisplayDelegate This, UIKit.UISearchDisplayController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidEndSearch(class UIKit.IUISearchDisplayDelegate This, class UIKit.UISearchDisplayController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchDisplayDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UISearchDisplayController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>Indicates that searching has ended.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchDisplayDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchDisplayDelegate_Extensions.DidEndSearch(MonoTouch.UIKit.IUISearchDisplayDelegate,MonoTouch.UIKit.UISearchDisplayController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchDisplayDelegate" />
      </Targets>
      <Member MemberName="DidHideSearchResults">
        <MemberSignature Language="C#" Value="public static void DidHideSearchResults (this UIKit.IUISearchDisplayDelegate This, UIKit.UISearchDisplayController controller, UIKit.UITableView tableView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidHideSearchResults(class UIKit.IUISearchDisplayDelegate This, class UIKit.UISearchDisplayController controller, class UIKit.UITableView tableView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchDisplayDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UISearchDisplayController" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="tableView">To be added.</param>
          <summary>Indicates that the controller hid its table view of results.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchDisplayDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchDisplayDelegate_Extensions.DidHideSearchResults(MonoTouch.UIKit.IUISearchDisplayDelegate,MonoTouch.UIKit.UISearchDisplayController,MonoTouch.UIKit.UITableView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchDisplayDelegate" />
      </Targets>
      <Member MemberName="DidLoadSearchResults">
        <MemberSignature Language="C#" Value="public static void DidLoadSearchResults (this UIKit.IUISearchDisplayDelegate This, UIKit.UISearchDisplayController controller, UIKit.UITableView tableView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidLoadSearchResults(class UIKit.IUISearchDisplayDelegate This, class UIKit.UISearchDisplayController controller, class UIKit.UITableView tableView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchDisplayDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UISearchDisplayController" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="tableView">To be added.</param>
          <summary>Indicates that the controller has loaded its UITableView of results.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchDisplayDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchDisplayDelegate_Extensions.DidLoadSearchResults(MonoTouch.UIKit.IUISearchDisplayDelegate,MonoTouch.UIKit.UISearchDisplayController,MonoTouch.UIKit.UITableView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchDisplayDelegate" />
      </Targets>
      <Member MemberName="DidShowSearchResults">
        <MemberSignature Language="C#" Value="public static void DidShowSearchResults (this UIKit.IUISearchDisplayDelegate This, UIKit.UISearchDisplayController controller, UIKit.UITableView tableView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidShowSearchResults(class UIKit.IUISearchDisplayDelegate This, class UIKit.UISearchDisplayController controller, class UIKit.UITableView tableView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchDisplayDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UISearchDisplayController" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="tableView">To be added.</param>
          <summary>Indicates that the controller has begun displayed its UITableView of results.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchDisplayDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchDisplayDelegate_Extensions.DidShowSearchResults(MonoTouch.UIKit.IUISearchDisplayDelegate,MonoTouch.UIKit.UISearchDisplayController,MonoTouch.UIKit.UITableView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchDisplayDelegate" />
      </Targets>
      <Member MemberName="ShouldReloadForSearchScope">
        <MemberSignature Language="C#" Value="public static bool ShouldReloadForSearchScope (this UIKit.IUISearchDisplayDelegate This, UIKit.UISearchDisplayController controller, nint forSearchOption);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldReloadForSearchScope(class UIKit.IUISearchDisplayDelegate This, class UIKit.UISearchDisplayController controller, valuetype System.nint forSearchOption) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchDisplayDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UISearchDisplayController" />
          <Parameter Name="forSearchOption" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="forSearchOption">To be added.</param>
          <summary>Whether data should be reloaded, given the change in search options.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchDisplayDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchDisplayDelegate_Extensions.ShouldReloadForSearchScope(MonoTouch.UIKit.IUISearchDisplayDelegate,MonoTouch.UIKit.UISearchDisplayController,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchDisplayDelegate" />
      </Targets>
      <Member MemberName="ShouldReloadForSearchString">
        <MemberSignature Language="C#" Value="public static bool ShouldReloadForSearchString (this UIKit.IUISearchDisplayDelegate This, UIKit.UISearchDisplayController controller, string forSearchString);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldReloadForSearchString(class UIKit.IUISearchDisplayDelegate This, class UIKit.UISearchDisplayController controller, string forSearchString) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchDisplayDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UISearchDisplayController" />
          <Parameter Name="forSearchString" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="forSearchString">To be added.</param>
          <summary>Whether data should be reloaded, given the change in search string.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchDisplayDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchDisplayDelegate_Extensions.ShouldReloadForSearchString(MonoTouch.UIKit.IUISearchDisplayDelegate,MonoTouch.UIKit.UISearchDisplayController,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchDisplayDelegate" />
      </Targets>
      <Member MemberName="WillBeginSearch">
        <MemberSignature Language="C#" Value="public static void WillBeginSearch (this UIKit.IUISearchDisplayDelegate This, UIKit.UISearchDisplayController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillBeginSearch(class UIKit.IUISearchDisplayDelegate This, class UIKit.UISearchDisplayController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchDisplayDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UISearchDisplayController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>Indicates that searching is about to start.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchDisplayDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchDisplayDelegate_Extensions.WillBeginSearch(MonoTouch.UIKit.IUISearchDisplayDelegate,MonoTouch.UIKit.UISearchDisplayController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchDisplayDelegate" />
      </Targets>
      <Member MemberName="WillEndSearch">
        <MemberSignature Language="C#" Value="public static void WillEndSearch (this UIKit.IUISearchDisplayDelegate This, UIKit.UISearchDisplayController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillEndSearch(class UIKit.IUISearchDisplayDelegate This, class UIKit.UISearchDisplayController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchDisplayDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UISearchDisplayController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>Indicates that search is about to finish.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchDisplayDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchDisplayDelegate_Extensions.WillEndSearch(MonoTouch.UIKit.IUISearchDisplayDelegate,MonoTouch.UIKit.UISearchDisplayController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchDisplayDelegate" />
      </Targets>
      <Member MemberName="WillHideSearchResults">
        <MemberSignature Language="C#" Value="public static void WillHideSearchResults (this UIKit.IUISearchDisplayDelegate This, UIKit.UISearchDisplayController controller, UIKit.UITableView tableView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillHideSearchResults(class UIKit.IUISearchDisplayDelegate This, class UIKit.UISearchDisplayController controller, class UIKit.UITableView tableView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchDisplayDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UISearchDisplayController" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="tableView">To be added.</param>
          <summary>Indicates that the controller is about to hide its UITableView of results.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchDisplayDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchDisplayDelegate_Extensions.WillHideSearchResults(MonoTouch.UIKit.IUISearchDisplayDelegate,MonoTouch.UIKit.UISearchDisplayController,MonoTouch.UIKit.UITableView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchDisplayDelegate" />
      </Targets>
      <Member MemberName="WillShowSearchResults">
        <MemberSignature Language="C#" Value="public static void WillShowSearchResults (this UIKit.IUISearchDisplayDelegate This, UIKit.UISearchDisplayController controller, UIKit.UITableView tableView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillShowSearchResults(class UIKit.IUISearchDisplayDelegate This, class UIKit.UISearchDisplayController controller, class UIKit.UITableView tableView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchDisplayDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UISearchDisplayController" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="tableView">To be added.</param>
          <summary>Indicates that the controller is about to show its UITableView of results.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchDisplayDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchDisplayDelegate_Extensions.WillShowSearchResults(MonoTouch.UIKit.IUISearchDisplayDelegate,MonoTouch.UIKit.UISearchDisplayController,MonoTouch.UIKit.UITableView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchDisplayDelegate" />
      </Targets>
      <Member MemberName="WillUnloadSearchResults">
        <MemberSignature Language="C#" Value="public static void WillUnloadSearchResults (this UIKit.IUISearchDisplayDelegate This, UIKit.UISearchDisplayController controller, UIKit.UITableView tableView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillUnloadSearchResults(class UIKit.IUISearchDisplayDelegate This, class UIKit.UISearchDisplayController controller, class UIKit.UITableView tableView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchDisplayDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UISearchDisplayController" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="tableView">To be added.</param>
          <summary>Indicates that the controller is about to unload its UITableView of results.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchDisplayDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchDisplayDelegate_Extensions.WillUnloadSearchResults(MonoTouch.UIKit.IUISearchDisplayDelegate,MonoTouch.UIKit.UISearchDisplayController,MonoTouch.UIKit.UITableView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIViewController" />
      </Targets>
      <Member MemberName="CollapseSecondaryViewController">
        <MemberSignature Language="C#" Value="public static void CollapseSecondaryViewController (this UIKit.UIViewController This, UIKit.UIViewController secondaryViewController, UIKit.UISplitViewController splitViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CollapseSecondaryViewController(class UIKit.UIViewController This, class UIKit.UIViewController secondaryViewController, class UIKit.UISplitViewController splitViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UIViewController" RefType="this" />
          <Parameter Name="secondaryViewController" Type="MonoTouch.UIKit.UIViewController" />
          <Parameter Name="splitViewController" Type="MonoTouch.UIKit.UISplitViewController" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="secondaryViewController">To be added.</param>
          <param name="splitViewController">To be added.</param>
          <summary>Collapses the secondary view controller on <paramref name="splitViewController" /></summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISplitViewController_UIViewController" Member="M:MonoTouch.UIKit.UISplitViewController_UIViewController.CollapseSecondaryViewController(MonoTouch.UIKit.UIViewController,MonoTouch.UIKit.UIViewController,MonoTouch.UIKit.UISplitViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIViewController" />
      </Targets>
      <Member MemberName="GetSplitViewController">
        <MemberSignature Language="C#" Value="public static UIKit.UISplitViewController GetSplitViewController (this UIKit.UIViewController This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UISplitViewController GetSplitViewController(class UIKit.UIViewController This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UISplitViewController</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UIViewController" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns te split view controller for the nested view controller.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISplitViewController_UIViewController" Member="M:MonoTouch.UIKit.UISplitViewController_UIViewController.GetSplitViewController(MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIViewController" />
      </Targets>
      <Member MemberName="SeparateSecondaryViewControllerForSplitViewController">
        <MemberSignature Language="C#" Value="public static UIKit.UIViewController SeparateSecondaryViewControllerForSplitViewController (this UIKit.UIViewController This, UIKit.UISplitViewController splitViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIViewController SeparateSecondaryViewControllerForSplitViewController(class UIKit.UIViewController This, class UIKit.UISplitViewController splitViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIViewController</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UIViewController" RefType="this" />
          <Parameter Name="splitViewController" Type="MonoTouch.UIKit.UISplitViewController" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="splitViewController">To be added.</param>
          <summary>Returns the separate secondary view controller for <paramref name="splitViewController" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISplitViewController_UIViewController" Member="M:MonoTouch.UIKit.UISplitViewController_UIViewController.SeparateSecondaryViewControllerForSplitViewController(MonoTouch.UIKit.UIViewController,MonoTouch.UIKit.UISplitViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISplitViewControllerDelegate" />
      </Targets>
      <Member MemberName="CollapseSecondViewController">
        <MemberSignature Language="C#" Value="public static bool CollapseSecondViewController (this UIKit.IUISplitViewControllerDelegate This, UIKit.UISplitViewController splitViewController, UIKit.UIViewController secondaryViewController, UIKit.UIViewController primaryViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CollapseSecondViewController(class UIKit.IUISplitViewControllerDelegate This, class UIKit.UISplitViewController splitViewController, class UIKit.UIViewController secondaryViewController, class UIKit.UIViewController primaryViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISplitViewControllerDelegate" RefType="this" />
          <Parameter Name="splitViewController" Type="MonoTouch.UIKit.UISplitViewController" />
          <Parameter Name="secondaryViewController" Type="MonoTouch.UIKit.UIViewController" />
          <Parameter Name="primaryViewController" Type="MonoTouch.UIKit.UIViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="splitViewController">Designates the split view controller with the collapsing interface.</param>
          <param name="secondaryViewController">Designates the secondary view controller for the split view interface.</param>
          <param name="primaryViewController">Designates the primary view controller for the split view interface.</param>
          <summary>Collapses the secondary view controller on <paramref name="splitViewController" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions.CollapseSecondViewController(MonoTouch.UIKit.IUISplitViewControllerDelegate,MonoTouch.UIKit.UISplitViewController,MonoTouch.UIKit.UIViewController,MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISplitViewControllerDelegate" />
      </Targets>
      <Member MemberName="EventShowDetailViewController">
        <MemberSignature Language="C#" Value="public static bool EventShowDetailViewController (this UIKit.IUISplitViewControllerDelegate This, UIKit.UISplitViewController splitViewController, UIKit.UIViewController vc, Foundation.NSObject sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool EventShowDetailViewController(class UIKit.IUISplitViewControllerDelegate This, class UIKit.UISplitViewController splitViewController, class UIKit.UIViewController vc, class Foundation.NSObject sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISplitViewControllerDelegate" RefType="this" />
          <Parameter Name="splitViewController" Type="MonoTouch.UIKit.UISplitViewController" />
          <Parameter Name="vc" Type="MonoTouch.UIKit.UIViewController" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="splitViewController">Designates the split view controller that has its secondary view being updated.</param>
          <param name="vc">The view controller that is being displayed in the secondary position.</param>
          <param name="sender">The action making the request.</param>
          <summary>Returns true if the delegate will display the detail view itself, rather than relying on <paramref name="splitViewController" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions.EventShowDetailViewController(MonoTouch.UIKit.IUISplitViewControllerDelegate,MonoTouch.UIKit.UISplitViewController,MonoTouch.UIKit.UIViewController,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISplitViewControllerDelegate" />
      </Targets>
      <Member MemberName="EventShowViewController">
        <MemberSignature Language="C#" Value="public static bool EventShowViewController (this UIKit.IUISplitViewControllerDelegate This, UIKit.UISplitViewController splitViewController, UIKit.UIViewController vc, Foundation.NSObject sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool EventShowViewController(class UIKit.IUISplitViewControllerDelegate This, class UIKit.UISplitViewController splitViewController, class UIKit.UIViewController vc, class Foundation.NSObject sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISplitViewControllerDelegate" RefType="this" />
          <Parameter Name="splitViewController" Type="MonoTouch.UIKit.UISplitViewController" />
          <Parameter Name="vc" Type="MonoTouch.UIKit.UIViewController" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="splitViewController">Designates the split view controller that has its primary view being updated.</param>
          <param name="vc">The view controller that is being displayed in the primary position.</param>
          <param name="sender">The action making the request.</param>
          <summary>Shows <paramref name="vc" /> in the primary position.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions.EventShowViewController(MonoTouch.UIKit.IUISplitViewControllerDelegate,MonoTouch.UIKit.UISplitViewController,MonoTouch.UIKit.UIViewController,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISplitViewControllerDelegate" />
      </Targets>
      <Member MemberName="GetPreferredInterfaceOrientationForPresentation">
        <MemberSignature Language="C#" Value="public static UIKit.UIInterfaceOrientation GetPreferredInterfaceOrientationForPresentation (this UIKit.IUISplitViewControllerDelegate This, UIKit.UISplitViewController splitViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UIInterfaceOrientation GetPreferredInterfaceOrientationForPresentation(class UIKit.IUISplitViewControllerDelegate This, class UIKit.UISplitViewController splitViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIInterfaceOrientation</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISplitViewControllerDelegate" RefType="this" />
          <Parameter Name="splitViewController" Type="MonoTouch.UIKit.UISplitViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="splitViewController">Designates the split view controller that will be presented onscreen.</param>
          <summary>Returns the preferred user interface orientation to use when presenting <paramref name="splitViewController" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions.GetPreferredInterfaceOrientationForPresentation(MonoTouch.UIKit.IUISplitViewControllerDelegate,MonoTouch.UIKit.UISplitViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISplitViewControllerDelegate" />
      </Targets>
      <Member MemberName="GetPrimaryViewControllerForCollapsingSplitViewController">
        <MemberSignature Language="C#" Value="public static UIKit.UIViewController GetPrimaryViewControllerForCollapsingSplitViewController (this UIKit.IUISplitViewControllerDelegate This, UIKit.UISplitViewController splitViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIViewController GetPrimaryViewControllerForCollapsingSplitViewController(class UIKit.IUISplitViewControllerDelegate This, class UIKit.UISplitViewController splitViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIViewController</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISplitViewControllerDelegate" RefType="this" />
          <Parameter Name="splitViewController" Type="MonoTouch.UIKit.UISplitViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="splitViewController">Designates the split view controller whose interface is collapsing.</param>
          <summary>Returns the primary view controller for the collapsing view controller <paramref name="splitViewController" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions.GetPrimaryViewControllerForCollapsingSplitViewController(MonoTouch.UIKit.IUISplitViewControllerDelegate,MonoTouch.UIKit.UISplitViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISplitViewControllerDelegate" />
      </Targets>
      <Member MemberName="GetPrimaryViewControllerForExpandingSplitViewController">
        <MemberSignature Language="C#" Value="public static UIKit.UIViewController GetPrimaryViewControllerForExpandingSplitViewController (this UIKit.IUISplitViewControllerDelegate This, UIKit.UISplitViewController splitViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIViewController GetPrimaryViewControllerForExpandingSplitViewController(class UIKit.IUISplitViewControllerDelegate This, class UIKit.UISplitViewController splitViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIViewController</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISplitViewControllerDelegate" RefType="this" />
          <Parameter Name="splitViewController" Type="MonoTouch.UIKit.UISplitViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="splitViewController">To be added.</param>
          <summary>Returns the primary view controller for the expanding view controller <paramref name="splitViewController" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions.GetPrimaryViewControllerForExpandingSplitViewController(MonoTouch.UIKit.IUISplitViewControllerDelegate,MonoTouch.UIKit.UISplitViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISplitViewControllerDelegate" />
      </Targets>
      <Member MemberName="GetTargetDisplayModeForAction">
        <MemberSignature Language="C#" Value="public static UIKit.UISplitViewControllerDisplayMode GetTargetDisplayModeForAction (this UIKit.IUISplitViewControllerDelegate This, UIKit.UISplitViewController svc);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UISplitViewControllerDisplayMode GetTargetDisplayModeForAction(class UIKit.IUISplitViewControllerDelegate This, class UIKit.UISplitViewController svc) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UISplitViewControllerDisplayMode</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISplitViewControllerDelegate" RefType="this" />
          <Parameter Name="svc" Type="MonoTouch.UIKit.UISplitViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="svc">Split view controller whose action might be triggered.</param>
          <summary>Returns the display mode for the <paramref name="svc" /> action.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions.GetTargetDisplayModeForAction(MonoTouch.UIKit.IUISplitViewControllerDelegate,MonoTouch.UIKit.UISplitViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISplitViewControllerDelegate" />
      </Targets>
      <Member MemberName="SeparateSecondaryViewController">
        <MemberSignature Language="C#" Value="public static UIKit.UIViewController SeparateSecondaryViewController (this UIKit.IUISplitViewControllerDelegate This, UIKit.UISplitViewController splitViewController, UIKit.UIViewController primaryViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIViewController SeparateSecondaryViewController(class UIKit.IUISplitViewControllerDelegate This, class UIKit.UISplitViewController splitViewController, class UIKit.UIViewController primaryViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIViewController</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISplitViewControllerDelegate" RefType="this" />
          <Parameter Name="splitViewController" Type="MonoTouch.UIKit.UISplitViewController" />
          <Parameter Name="primaryViewController" Type="MonoTouch.UIKit.UIViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="splitViewController">The split view controller with the expanding interface.</param>
          <param name="primaryViewController">Primary view controller specified for the expanded split view interface.</param>
          <summary>Returns a new secondary view controller to use in split-view mode, or nil to use the default.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions.SeparateSecondaryViewController(MonoTouch.UIKit.IUISplitViewControllerDelegate,MonoTouch.UIKit.UISplitViewController,MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISplitViewControllerDelegate" />
      </Targets>
      <Member MemberName="ShouldHideViewController">
        <MemberSignature Language="C#" Value="public static bool ShouldHideViewController (this UIKit.IUISplitViewControllerDelegate This, UIKit.UISplitViewController svc, UIKit.UIViewController viewController, UIKit.UIInterfaceOrientation inOrientation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldHideViewController(class UIKit.IUISplitViewControllerDelegate This, class UIKit.UISplitViewController svc, class UIKit.UIViewController viewController, valuetype UIKit.UIInterfaceOrientation inOrientation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISplitViewControllerDelegate" RefType="this" />
          <Parameter Name="svc" Type="MonoTouch.UIKit.UISplitViewController" />
          <Parameter Name="viewController" Type="MonoTouch.UIKit.UIViewController" />
          <Parameter Name="inOrientation" Type="MonoTouch.UIKit.UIInterfaceOrientation" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="svc">The designated split view controller whose action might be triggered.</param>
          <param name="viewController">The specified view controller.</param>
          <param name="inOrientation">The specified orientation.</param>
          <summary>Whether the specified viewController should be hidden in the specified orientation.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions.ShouldHideViewController(MonoTouch.UIKit.IUISplitViewControllerDelegate,MonoTouch.UIKit.UISplitViewController,MonoTouch.UIKit.UIViewController,MonoTouch.UIKit.UIInterfaceOrientation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISplitViewControllerDelegate" />
      </Targets>
      <Member MemberName="SupportedInterfaceOrientations">
        <MemberSignature Language="C#" Value="public static UIKit.UIInterfaceOrientationMask SupportedInterfaceOrientations (this UIKit.IUISplitViewControllerDelegate This, UIKit.UISplitViewController splitViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UIInterfaceOrientationMask SupportedInterfaceOrientations(class UIKit.IUISplitViewControllerDelegate This, class UIKit.UISplitViewController splitViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIInterfaceOrientationMask</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISplitViewControllerDelegate" RefType="this" />
          <Parameter Name="splitViewController" Type="MonoTouch.UIKit.UISplitViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="splitViewController">The split view controller.</param>
          <summary>Returns the supported interface orientations for <paramref name="splitViewController" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions.SupportedInterfaceOrientations(MonoTouch.UIKit.IUISplitViewControllerDelegate,MonoTouch.UIKit.UISplitViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISplitViewControllerDelegate" />
      </Targets>
      <Member MemberName="WillChangeDisplayMode">
        <MemberSignature Language="C#" Value="public static void WillChangeDisplayMode (this UIKit.IUISplitViewControllerDelegate This, UIKit.UISplitViewController svc, UIKit.UISplitViewControllerDisplayMode displayMode);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillChangeDisplayMode(class UIKit.IUISplitViewControllerDelegate This, class UIKit.UISplitViewController svc, valuetype UIKit.UISplitViewControllerDisplayMode displayMode) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISplitViewControllerDelegate" RefType="this" />
          <Parameter Name="svc" Type="MonoTouch.UIKit.UISplitViewController" />
          <Parameter Name="displayMode" Type="MonoTouch.UIKit.UISplitViewControllerDisplayMode" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="svc">The split view controller whose display mode is changing.</param>
          <param name="displayMode">TThe new display mode that will be applied.</param>
          <summary>The split view controller <paramref name="svc" /> will change its display mode to <paramref name="displayMode" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions.WillChangeDisplayMode(MonoTouch.UIKit.IUISplitViewControllerDelegate,MonoTouch.UIKit.UISplitViewController,MonoTouch.UIKit.UISplitViewControllerDisplayMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISplitViewControllerDelegate" />
      </Targets>
      <Member MemberName="WillHideViewController">
        <MemberSignature Language="C#" Value="public static void WillHideViewController (this UIKit.IUISplitViewControllerDelegate This, UIKit.UISplitViewController svc, UIKit.UIViewController aViewController, UIKit.UIBarButtonItem barButtonItem, UIKit.UIPopoverController pc);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillHideViewController(class UIKit.IUISplitViewControllerDelegate This, class UIKit.UISplitViewController svc, class UIKit.UIViewController aViewController, class UIKit.UIBarButtonItem barButtonItem, class UIKit.UIPopoverController pc) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISplitViewControllerDelegate" RefType="this" />
          <Parameter Name="svc" Type="MonoTouch.UIKit.UISplitViewController" />
          <Parameter Name="aViewController" Type="MonoTouch.UIKit.UIViewController" />
          <Parameter Name="barButtonItem" Type="MonoTouch.UIKit.UIBarButtonItem" />
          <Parameter Name="pc" Type="MonoTouch.UIKit.UIPopoverController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="svc">The split view controller whose display mode is changing.</param>
          <param name="aViewController">Specified view controller.</param>
          <param name="barButtonItem">An enumeration of the predefined s.</param>
          <param name="pc">Specified popover controller.</param>
          <summary>Indicates that the UISplitViewController is about to be hidden.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions.WillHideViewController(MonoTouch.UIKit.IUISplitViewControllerDelegate,MonoTouch.UIKit.UISplitViewController,MonoTouch.UIKit.UIViewController,MonoTouch.UIKit.UIBarButtonItem,MonoTouch.UIKit.UIPopoverController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISplitViewControllerDelegate" />
      </Targets>
      <Member MemberName="WillPresentViewController">
        <MemberSignature Language="C#" Value="public static void WillPresentViewController (this UIKit.IUISplitViewControllerDelegate This, UIKit.UISplitViewController svc, UIKit.UIPopoverController pc, UIKit.UIViewController aViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillPresentViewController(class UIKit.IUISplitViewControllerDelegate This, class UIKit.UISplitViewController svc, class UIKit.UIPopoverController pc, class UIKit.UIViewController aViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISplitViewControllerDelegate" RefType="this" />
          <Parameter Name="svc" Type="MonoTouch.UIKit.UISplitViewController" />
          <Parameter Name="pc" Type="MonoTouch.UIKit.UIPopoverController" />
          <Parameter Name="aViewController" Type="MonoTouch.UIKit.UIViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="svc">The split view controller whose display mode is changing.</param>
          <param name="pc">Specified popover controller.</param>
          <param name="aViewController">Specified view controller.</param>
          <summary>Indicates that the UISplitViewController is about to be presented.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions.WillPresentViewController(MonoTouch.UIKit.IUISplitViewControllerDelegate,MonoTouch.UIKit.UISplitViewController,MonoTouch.UIKit.UIPopoverController,MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISplitViewControllerDelegate" />
      </Targets>
      <Member MemberName="WillShowViewController">
        <MemberSignature Language="C#" Value="public static void WillShowViewController (this UIKit.IUISplitViewControllerDelegate This, UIKit.UISplitViewController svc, UIKit.UIViewController aViewController, UIKit.UIBarButtonItem button);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillShowViewController(class UIKit.IUISplitViewControllerDelegate This, class UIKit.UISplitViewController svc, class UIKit.UIViewController aViewController, class UIKit.UIBarButtonItem button) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISplitViewControllerDelegate" RefType="this" />
          <Parameter Name="svc" Type="MonoTouch.UIKit.UISplitViewController" />
          <Parameter Name="aViewController" Type="MonoTouch.UIKit.UIViewController" />
          <Parameter Name="button" Type="MonoTouch.UIKit.UIBarButtonItem" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="svc">The split view controller whose display mode is changing.</param>
          <param name="aViewController">Specified view controller.</param>
          <param name="button">An enumeration of the predefined s.</param>
          <summary>Indicates that the UISplitViewController is about to be shown.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions.WillShowViewController(MonoTouch.UIKit.IUISplitViewControllerDelegate,MonoTouch.UIKit.UISplitViewController,MonoTouch.UIKit.UIViewController,MonoTouch.UIKit.UIBarButtonItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISpringLoadedInteractionBehavior" />
      </Targets>
      <Member MemberName="InteractionDidFinish">
        <MemberSignature Language="C#" Value="public static void InteractionDidFinish (this UIKit.IUISpringLoadedInteractionBehavior This, UIKit.UISpringLoadedInteraction interaction);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InteractionDidFinish(class UIKit.IUISpringLoadedInteractionBehavior This, class UIKit.UISpringLoadedInteraction interaction) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISpringLoadedInteractionBehavior" RefType="this" />
          <Parameter Name="interaction" Type="MonoTouch.UIKit.UISpringLoadedInteraction" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="interaction">To be added.</param>
          <summary>Method that is called when the user cancels or carries out the spring-loaded interaction.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISpringLoadedInteractionBehavior_Extensions" Member="M:MonoTouch.UIKit.UISpringLoadedInteractionBehavior_Extensions.InteractionDidFinish(MonoTouch.UIKit.IUISpringLoadedInteractionBehavior,MonoTouch.UIKit.UISpringLoadedInteraction)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIStateRestoring" />
      </Targets>
      <Member MemberName="ApplicationFinishedRestoringState">
        <MemberSignature Language="C#" Value="public static void ApplicationFinishedRestoringState (this UIKit.IUIStateRestoring This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ApplicationFinishedRestoringState(class UIKit.IUIStateRestoring This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIStateRestoring" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <summary>Indicates that the application has finished restoring state.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStateRestoring_Extensions" Member="M:MonoTouch.UIKit.UIStateRestoring_Extensions.ApplicationFinishedRestoringState(MonoTouch.UIKit.IUIStateRestoring)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIStateRestoring" />
      </Targets>
      <Member MemberName="DecodeRestorableState">
        <MemberSignature Language="C#" Value="public static void DecodeRestorableState (this UIKit.IUIStateRestoring This, Foundation.NSCoder coder);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DecodeRestorableState(class UIKit.IUIStateRestoring This, class Foundation.NSCoder coder) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIStateRestoring" RefType="this" />
          <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="coder">To be added.</param>
          <summary>Decodes and restores state.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStateRestoring_Extensions" Member="M:MonoTouch.UIKit.UIStateRestoring_Extensions.DecodeRestorableState(MonoTouch.UIKit.IUIStateRestoring,MonoTouch.Foundation.NSCoder)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIStateRestoring" />
      </Targets>
      <Member MemberName="EncodeRestorableState">
        <MemberSignature Language="C#" Value="public static void EncodeRestorableState (this UIKit.IUIStateRestoring This, Foundation.NSCoder coder);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EncodeRestorableState(class UIKit.IUIStateRestoring This, class Foundation.NSCoder coder) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIStateRestoring" RefType="this" />
          <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="coder">To be added.</param>
          <summary>Encodes state-related information.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStateRestoring_Extensions" Member="M:MonoTouch.UIKit.UIStateRestoring_Extensions.EncodeRestorableState(MonoTouch.UIKit.IUIStateRestoring,MonoTouch.Foundation.NSCoder)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIStateRestoring" />
      </Targets>
      <Member MemberName="GetObjectRestorationClass">
        <MemberSignature Language="C#" Value="public static ObjCRuntime.Class GetObjectRestorationClass (this UIKit.IUIStateRestoring This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class ObjCRuntime.Class GetObjectRestorationClass(class UIKit.IUIStateRestoring This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.ObjCRuntime.Class</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIStateRestoring" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Gets the class that recreates the restored object.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStateRestoring_Extensions" Member="M:MonoTouch.UIKit.UIStateRestoring_Extensions.GetObjectRestorationClass(MonoTouch.UIKit.IUIStateRestoring)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIStateRestoring" />
      </Targets>
      <Member MemberName="GetRestorationParent">
        <MemberSignature Language="C#" Value="public static UIKit.IUIStateRestoring GetRestorationParent (this UIKit.IUIStateRestoring This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.IUIStateRestoring GetRestorationParent(class UIKit.IUIStateRestoring This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.IUIStateRestoring</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIStateRestoring" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Gets the parent of the object to restore.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStateRestoring_Extensions" Member="M:MonoTouch.UIKit.UIStateRestoring_Extensions.GetRestorationParent(MonoTouch.UIKit.IUIStateRestoring)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="DrawString">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize DrawString (this Foundation.NSString This, CoreGraphics.CGPoint point, UIKit.UIFont font);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize DrawString(class Foundation.NSString This, valuetype CoreGraphics.CGPoint point, class UIKit.UIFont font) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="point" Type="MonoTouch.CoreGraphics.CGPoint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="point">To be added.</param>
          <param name="font">To be added.</param>
          <summary>Draws the string at the specified <paramref name="point" />, using the <paramref name="font" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.DrawString(MonoTouch.Foundation.NSString,MonoTouch.CoreGraphics.CGPoint,MonoTouch.UIKit.UIFont)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="DrawString">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize DrawString (this Foundation.NSString This, CoreGraphics.CGPoint point, nfloat width, UIKit.UIFont font, UIKit.UILineBreakMode breakMode);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize DrawString(class Foundation.NSString This, valuetype CoreGraphics.CGPoint point, valuetype System.nfloat width, class UIKit.UIFont font, valuetype UIKit.UILineBreakMode breakMode) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="breakMode" Type="MonoTouch.UIKit.UILineBreakMode" />
          <Parameter Name="point" Type="MonoTouch.CoreGraphics.CGPoint" />
          <Parameter Name="width" Type="System.nfloat" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="point">To be added.</param>
          <param name="width">To be added.</param>
          <param name="font">To be added.</param>
          <param name="breakMode">To be added.</param>
          <summary>Draws the string, starting at the specified <paramref name="point" /> and extending <paramref name="width" />, using the <paramref name="font" />, with the specified line-breaking <paramref name="breakMode" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.DrawString(MonoTouch.Foundation.NSString,MonoTouch.CoreGraphics.CGPoint,System.nfloat,MonoTouch.UIKit.UIFont,MonoTouch.UIKit.UILineBreakMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="DrawString">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize DrawString (this Foundation.NSString This, CoreGraphics.CGPoint point, nfloat width, UIKit.UIFont font, nfloat fontSize, UIKit.UILineBreakMode breakMode, UIKit.UIBaselineAdjustment adjustment);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize DrawString(class Foundation.NSString This, valuetype CoreGraphics.CGPoint point, valuetype System.nfloat width, class UIKit.UIFont font, valuetype System.nfloat fontSize, valuetype UIKit.UILineBreakMode breakMode, valuetype UIKit.UIBaselineAdjustment adjustment) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="breakMode" Type="MonoTouch.UIKit.UILineBreakMode" />
          <Parameter Name="adjustment" Type="MonoTouch.UIKit.UIBaselineAdjustment" />
          <Parameter Name="point" Type="MonoTouch.CoreGraphics.CGPoint" />
          <Parameter Name="width" Type="System.nfloat" />
          <Parameter Name="fontSize" Type="System.nfloat" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="point">To be added.</param>
          <param name="width">To be added.</param>
          <param name="font">To be added.</param>
          <param name="fontSize">To be added.</param>
          <param name="breakMode">To be added.</param>
          <param name="adjustment">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.DrawString(MonoTouch.Foundation.NSString,MonoTouch.CoreGraphics.CGPoint,System.nfloat,MonoTouch.UIKit.UIFont,System.nfloat,MonoTouch.UIKit.UILineBreakMode,MonoTouch.UIKit.UIBaselineAdjustment)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="DrawString">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize DrawString (this Foundation.NSString This, CoreGraphics.CGPoint point, nfloat width, UIKit.UIFont font, nfloat minFontSize, ref nfloat actualFontSize, UIKit.UILineBreakMode breakMode, UIKit.UIBaselineAdjustment adjustment);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize DrawString(class Foundation.NSString This, valuetype CoreGraphics.CGPoint point, valuetype System.nfloat width, class UIKit.UIFont font, valuetype System.nfloat minFontSize, valuetype System.nfloat actualFontSize, valuetype UIKit.UILineBreakMode breakMode, valuetype UIKit.UIBaselineAdjustment adjustment) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="breakMode" Type="MonoTouch.UIKit.UILineBreakMode" />
          <Parameter Name="adjustment" Type="MonoTouch.UIKit.UIBaselineAdjustment" />
          <Parameter Name="point" Type="MonoTouch.CoreGraphics.CGPoint" />
          <Parameter Name="width" Type="System.nfloat" />
          <Parameter Name="minFontSize" Type="System.nfloat" />
          <Parameter Name="actualFontSize" Type="System.nfloat&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="point">To be added.</param>
          <param name="width">To be added.</param>
          <param name="font">To be added.</param>
          <param name="minFontSize">To be added.</param>
          <param name="actualFontSize">To be added.</param>
          <param name="breakMode">To be added.</param>
          <param name="adjustment">To be added.</param>
          <summary>Draws the string, starting at the specified <paramref name="point" /> with a baseline <paramref name="adjustment" /> and extending <paramref name="width" />, using the <paramref name="font" /> in the size range specified, with the specified line-breaking <paramref name="mode" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.DrawString(MonoTouch.Foundation.NSString,MonoTouch.CoreGraphics.CGPoint,System.nfloat,MonoTouch.UIKit.UIFont,System.nfloat,System.nfloat@,MonoTouch.UIKit.UILineBreakMode,MonoTouch.UIKit.UIBaselineAdjustment)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="DrawString">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize DrawString (this Foundation.NSString This, CoreGraphics.CGRect rect, UIKit.UIFont font);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize DrawString(class Foundation.NSString This, valuetype CoreGraphics.CGRect rect, class UIKit.UIFont font) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="rect">To be added.</param>
          <param name="font">To be added.</param>
          <summary>Draws the string in the <paramref name="rect" />, using the <paramref name="font" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.DrawString(MonoTouch.Foundation.NSString,MonoTouch.CoreGraphics.CGRect,MonoTouch.UIKit.UIFont)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="DrawString">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize DrawString (this Foundation.NSString This, CoreGraphics.CGRect rect, UIKit.UIFont font, UIKit.UILineBreakMode mode);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize DrawString(class Foundation.NSString This, valuetype CoreGraphics.CGRect rect, class UIKit.UIFont font, valuetype UIKit.UILineBreakMode mode) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="mode" Type="MonoTouch.UIKit.UILineBreakMode" />
          <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="rect">To be added.</param>
          <param name="font">To be added.</param>
          <param name="mode">To be added.</param>
          <summary>Draws the string in the specified <paramref name="rect" />, using the <paramref name="font" />, with the specified line-breaking <paramref name="mode" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.DrawString(MonoTouch.Foundation.NSString,MonoTouch.CoreGraphics.CGRect,MonoTouch.UIKit.UIFont,MonoTouch.UIKit.UILineBreakMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="DrawString">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize DrawString (this Foundation.NSString This, CoreGraphics.CGRect rect, UIKit.UIFont font, UIKit.UILineBreakMode mode, UIKit.UITextAlignment alignment);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize DrawString(class Foundation.NSString This, valuetype CoreGraphics.CGRect rect, class UIKit.UIFont font, valuetype UIKit.UILineBreakMode mode, valuetype UIKit.UITextAlignment alignment) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="mode" Type="MonoTouch.UIKit.UILineBreakMode" />
          <Parameter Name="alignment" Type="MonoTouch.UIKit.UITextAlignment" />
          <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="rect">To be added.</param>
          <param name="font">To be added.</param>
          <param name="mode">To be added.</param>
          <param name="alignment">To be added.</param>
          <summary>Draws the string in the specified <paramref name="rect" />, using the <paramref name="font" />, with the specified <paramref name="alignment" /> and line-breaking <paramref name="mode" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.DrawString(MonoTouch.Foundation.NSString,MonoTouch.CoreGraphics.CGRect,MonoTouch.UIKit.UIFont,MonoTouch.UIKit.UILineBreakMode,MonoTouch.UIKit.UITextAlignment)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.String" />
      </Targets>
      <Member MemberName="DrawString">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize DrawString (this string This, CoreGraphics.CGPoint point, UIKit.UIFont font);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize DrawString(string This, valuetype CoreGraphics.CGPoint point, class UIKit.UIFont font) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="System.String" RefType="this" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="point" Type="MonoTouch.CoreGraphics.CGPoint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="point">To be added.</param>
          <param name="font">To be added.</param>
          <summary>Draws the string at the specified <paramref name="point" />, using the <paramref name="font" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.DrawString(System.String,MonoTouch.CoreGraphics.CGPoint,MonoTouch.UIKit.UIFont)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.String" />
      </Targets>
      <Member MemberName="DrawString">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize DrawString (this string This, CoreGraphics.CGPoint point, nfloat width, UIKit.UIFont font, UIKit.UILineBreakMode breakMode);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize DrawString(string This, valuetype CoreGraphics.CGPoint point, valuetype System.nfloat width, class UIKit.UIFont font, valuetype UIKit.UILineBreakMode breakMode) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="System.String" RefType="this" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="breakMode" Type="MonoTouch.UIKit.UILineBreakMode" />
          <Parameter Name="point" Type="MonoTouch.CoreGraphics.CGPoint" />
          <Parameter Name="width" Type="System.nfloat" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="point">To be added.</param>
          <param name="width">To be added.</param>
          <param name="font">To be added.</param>
          <param name="breakMode">To be added.</param>
          <summary>Draws the string, starting at the specified <paramref name="point" /> and extending <paramref name="width" />, using the <paramref name="font" />, with the specified line-breaking <paramref name="breakMode" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.DrawString(System.String,MonoTouch.CoreGraphics.CGPoint,System.nfloat,MonoTouch.UIKit.UIFont,MonoTouch.UIKit.UILineBreakMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.String" />
      </Targets>
      <Member MemberName="DrawString">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize DrawString (this string This, CoreGraphics.CGPoint point, nfloat width, UIKit.UIFont font, nfloat fontSize, UIKit.UILineBreakMode breakMode, UIKit.UIBaselineAdjustment adjustment);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize DrawString(string This, valuetype CoreGraphics.CGPoint point, valuetype System.nfloat width, class UIKit.UIFont font, valuetype System.nfloat fontSize, valuetype UIKit.UILineBreakMode breakMode, valuetype UIKit.UIBaselineAdjustment adjustment) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="System.String" RefType="this" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="breakMode" Type="MonoTouch.UIKit.UILineBreakMode" />
          <Parameter Name="adjustment" Type="MonoTouch.UIKit.UIBaselineAdjustment" />
          <Parameter Name="point" Type="MonoTouch.CoreGraphics.CGPoint" />
          <Parameter Name="width" Type="System.nfloat" />
          <Parameter Name="fontSize" Type="System.nfloat" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="point">To be added.</param>
          <param name="width">To be added.</param>
          <param name="font">To be added.</param>
          <param name="fontSize">To be added.</param>
          <param name="breakMode">To be added.</param>
          <param name="adjustment">To be added.</param>
          <summary>Draws the string, starting at the specified <paramref name="point" /> with a baseline <paramref name="adjustment" /> and extending <paramref name="width" />, using the <paramref name="font" />, with the specified line-breaking <paramref name="mode" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.DrawString(System.String,MonoTouch.CoreGraphics.CGPoint,System.nfloat,MonoTouch.UIKit.UIFont,System.nfloat,MonoTouch.UIKit.UILineBreakMode,MonoTouch.UIKit.UIBaselineAdjustment)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.String" />
      </Targets>
      <Member MemberName="DrawString">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize DrawString (this string This, CoreGraphics.CGPoint point, nfloat width, UIKit.UIFont font, nfloat minFontSize, ref nfloat actualFontSize, UIKit.UILineBreakMode breakMode, UIKit.UIBaselineAdjustment adjustment);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize DrawString(string This, valuetype CoreGraphics.CGPoint point, valuetype System.nfloat width, class UIKit.UIFont font, valuetype System.nfloat minFontSize, valuetype System.nfloat actualFontSize, valuetype UIKit.UILineBreakMode breakMode, valuetype UIKit.UIBaselineAdjustment adjustment) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="System.String" RefType="this" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="breakMode" Type="MonoTouch.UIKit.UILineBreakMode" />
          <Parameter Name="adjustment" Type="MonoTouch.UIKit.UIBaselineAdjustment" />
          <Parameter Name="point" Type="MonoTouch.CoreGraphics.CGPoint" />
          <Parameter Name="width" Type="System.nfloat" />
          <Parameter Name="minFontSize" Type="System.nfloat" />
          <Parameter Name="actualFontSize" Type="System.nfloat&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="point">To be added.</param>
          <param name="width">To be added.</param>
          <param name="font">To be added.</param>
          <param name="minFontSize">To be added.</param>
          <param name="actualFontSize">To be added.</param>
          <param name="breakMode">To be added.</param>
          <param name="adjustment">To be added.</param>
          <summary>Draws the string, starting at the specified <paramref name="point" /> with a baseline <paramref name="adjustment" /> and extending <paramref name="width" />, using the <paramref name="font" /> in the size range (outputting <paramref name="actualFontSize" />), with the specified line-breaking <paramref name="mode" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.DrawString(System.String,MonoTouch.CoreGraphics.CGPoint,System.nfloat,MonoTouch.UIKit.UIFont,System.nfloat,System.nfloat@,MonoTouch.UIKit.UILineBreakMode,MonoTouch.UIKit.UIBaselineAdjustment)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.String" />
      </Targets>
      <Member MemberName="DrawString">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize DrawString (this string This, CoreGraphics.CGRect rect, UIKit.UIFont font);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize DrawString(string This, valuetype CoreGraphics.CGRect rect, class UIKit.UIFont font) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="System.String" RefType="this" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="rect">To be added.</param>
          <param name="font">To be added.</param>
          <summary>Draws the string in the specified <paramref name="rect" />, using the <paramref name="font" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.DrawString(System.String,MonoTouch.CoreGraphics.CGRect,MonoTouch.UIKit.UIFont)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.String" />
      </Targets>
      <Member MemberName="DrawString">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize DrawString (this string This, CoreGraphics.CGRect rect, UIKit.UIFont font, UIKit.UILineBreakMode mode);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize DrawString(string This, valuetype CoreGraphics.CGRect rect, class UIKit.UIFont font, valuetype UIKit.UILineBreakMode mode) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="System.String" RefType="this" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="mode" Type="MonoTouch.UIKit.UILineBreakMode" />
          <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="rect">To be added.</param>
          <param name="font">To be added.</param>
          <param name="mode">To be added.</param>
          <summary>Draws the string in the specified <paramref name="rect" />, using the <paramref name="font" />, with the specified line-breaking <paramref name="mode" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.DrawString(System.String,MonoTouch.CoreGraphics.CGRect,MonoTouch.UIKit.UIFont,MonoTouch.UIKit.UILineBreakMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.String" />
      </Targets>
      <Member MemberName="DrawString">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize DrawString (this string This, CoreGraphics.CGRect rect, UIKit.UIFont font, UIKit.UILineBreakMode mode, UIKit.UITextAlignment alignment);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize DrawString(string This, valuetype CoreGraphics.CGRect rect, class UIKit.UIFont font, valuetype UIKit.UILineBreakMode mode, valuetype UIKit.UITextAlignment alignment) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="System.String" RefType="this" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="mode" Type="MonoTouch.UIKit.UILineBreakMode" />
          <Parameter Name="alignment" Type="MonoTouch.UIKit.UITextAlignment" />
          <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="rect">To be added.</param>
          <param name="font">To be added.</param>
          <param name="mode">To be added.</param>
          <param name="alignment">To be added.</param>
          <summary>Draws the string in the specified <paramref name="rect" />, using the <paramref name="font" />, with the specified <paramref name="alignment" /> and line-breaking <paramref name="mode" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.DrawString(System.String,MonoTouch.CoreGraphics.CGRect,MonoTouch.UIKit.UIFont,MonoTouch.UIKit.UILineBreakMode,MonoTouch.UIKit.UITextAlignment)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="StringSize">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize StringSize (this Foundation.NSString This, UIKit.UIFont font);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize StringSize(class Foundation.NSString This, class UIKit.UIFont font) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="font">To be added.</param>
          <summary>The calculated size of the string if rendered with the <paramref name="font" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.StringSize(MonoTouch.Foundation.NSString,MonoTouch.UIKit.UIFont)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="StringSize">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize StringSize (this Foundation.NSString This, UIKit.UIFont font, CoreGraphics.CGSize constrainedToSize);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize StringSize(class Foundation.NSString This, class UIKit.UIFont font, valuetype CoreGraphics.CGSize constrainedToSize) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="constrainedToSize" Type="MonoTouch.CoreGraphics.CGSize" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="font">To be added.</param>
          <param name="constrainedToSize">To be added.</param>
          <summary>The calculated size of the string if rendered with the <paramref name="font" /> or <paramref name="constrainedToSize" />, whichever is smaller.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.StringSize(MonoTouch.Foundation.NSString,MonoTouch.UIKit.UIFont,MonoTouch.CoreGraphics.CGSize)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="StringSize">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize StringSize (this Foundation.NSString This, UIKit.UIFont font, CoreGraphics.CGSize constrainedToSize, UIKit.UILineBreakMode lineBreakMode);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize StringSize(class Foundation.NSString This, class UIKit.UIFont font, valuetype CoreGraphics.CGSize constrainedToSize, valuetype UIKit.UILineBreakMode lineBreakMode) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="lineBreakMode" Type="MonoTouch.UIKit.UILineBreakMode" />
          <Parameter Name="constrainedToSize" Type="MonoTouch.CoreGraphics.CGSize" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="font">To be added.</param>
          <param name="constrainedToSize">To be added.</param>
          <param name="lineBreakMode">To be added.</param>
          <summary>The smaller of <paramref name="constrainedToSize" /> or the size of the string rendered in <paramref name="font" /> with <paramref name="lineBreakMode" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.StringSize(MonoTouch.Foundation.NSString,MonoTouch.UIKit.UIFont,MonoTouch.CoreGraphics.CGSize,MonoTouch.UIKit.UILineBreakMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="StringSize">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize StringSize (this Foundation.NSString This, UIKit.UIFont font, nfloat forWidth, UIKit.UILineBreakMode breakMode);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize StringSize(class Foundation.NSString This, class UIKit.UIFont font, valuetype System.nfloat forWidth, valuetype UIKit.UILineBreakMode breakMode) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="breakMode" Type="MonoTouch.UIKit.UILineBreakMode" />
          <Parameter Name="forWidth" Type="System.nfloat" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="font">To be added.</param>
          <param name="forWidth">To be added.</param>
          <param name="breakMode">To be added.</param>
          <summary>The size of the string rendered in <paramref name="font" />, if constrained to <paramref name="forWidth" /> and with <paramref name="breakMode" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.StringSize(MonoTouch.Foundation.NSString,MonoTouch.UIKit.UIFont,System.nfloat,MonoTouch.UIKit.UILineBreakMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="StringSize">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize StringSize (this Foundation.NSString This, UIKit.UIFont font, nfloat minFontSize, ref nfloat actualFontSize, nfloat forWidth, UIKit.UILineBreakMode lineBreakMode);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize StringSize(class Foundation.NSString This, class UIKit.UIFont font, valuetype System.nfloat minFontSize, valuetype System.nfloat actualFontSize, valuetype System.nfloat forWidth, valuetype UIKit.UILineBreakMode lineBreakMode) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="lineBreakMode" Type="MonoTouch.UIKit.UILineBreakMode" />
          <Parameter Name="minFontSize" Type="System.nfloat" />
          <Parameter Name="actualFontSize" Type="System.nfloat&amp;" RefType="ref" />
          <Parameter Name="forWidth" Type="System.nfloat" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="font">To be added.</param>
          <param name="minFontSize">To be added.</param>
          <param name="actualFontSize">To be added.</param>
          <param name="forWidth">To be added.</param>
          <param name="lineBreakMode">To be added.</param>
          <summary>The calculated size of the string rendered with the <paramref name="font" /> in the specified size range, with <paramref name="lineBreakMode" /> and for width <paramref name="forWidth" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.StringSize(MonoTouch.Foundation.NSString,MonoTouch.UIKit.UIFont,System.nfloat,System.nfloat@,System.nfloat,MonoTouch.UIKit.UILineBreakMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.String" />
      </Targets>
      <Member MemberName="StringSize">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize StringSize (this string This, UIKit.UIFont font);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize StringSize(string This, class UIKit.UIFont font) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="System.String" RefType="this" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="font">To be added.</param>
          <summary>The calculated size of the string if rendered with the <paramref name="font" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.StringSize(System.String,MonoTouch.UIKit.UIFont)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.String" />
      </Targets>
      <Member MemberName="StringSize">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize StringSize (this string This, UIKit.UIFont font, CoreGraphics.CGSize constrainedToSize);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize StringSize(string This, class UIKit.UIFont font, valuetype CoreGraphics.CGSize constrainedToSize) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="System.String" RefType="this" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="constrainedToSize" Type="MonoTouch.CoreGraphics.CGSize" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="font">To be added.</param>
          <param name="constrainedToSize">To be added.</param>
          <summary>The calculated size of the string if rendered with the <paramref name="font" /> or <paramref name="constrainedToSize" />, whichever is smaller.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.StringSize(System.String,MonoTouch.UIKit.UIFont,MonoTouch.CoreGraphics.CGSize)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.String" />
      </Targets>
      <Member MemberName="StringSize">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize StringSize (this string This, UIKit.UIFont font, CoreGraphics.CGSize constrainedToSize, UIKit.UILineBreakMode lineBreakMode);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize StringSize(string This, class UIKit.UIFont font, valuetype CoreGraphics.CGSize constrainedToSize, valuetype UIKit.UILineBreakMode lineBreakMode) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="System.String" RefType="this" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="lineBreakMode" Type="MonoTouch.UIKit.UILineBreakMode" />
          <Parameter Name="constrainedToSize" Type="MonoTouch.CoreGraphics.CGSize" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="font">To be added.</param>
          <param name="constrainedToSize">To be added.</param>
          <param name="lineBreakMode">To be added.</param>
          <summary>The smaller of <paramref name="constrainedToSize" /> or the calculated size of the string rendered in <paramref name="font" /> with <paramref name="lineBreakMode" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.StringSize(System.String,MonoTouch.UIKit.UIFont,MonoTouch.CoreGraphics.CGSize,MonoTouch.UIKit.UILineBreakMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.String" />
      </Targets>
      <Member MemberName="StringSize">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize StringSize (this string This, UIKit.UIFont font, nfloat forWidth, UIKit.UILineBreakMode breakMode);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize StringSize(string This, class UIKit.UIFont font, valuetype System.nfloat forWidth, valuetype UIKit.UILineBreakMode breakMode) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="System.String" RefType="this" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="breakMode" Type="MonoTouch.UIKit.UILineBreakMode" />
          <Parameter Name="forWidth" Type="System.nfloat" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="font">To be added.</param>
          <param name="forWidth">To be added.</param>
          <param name="breakMode">To be added.</param>
          <summary>The size of the string rendered with <paramref name="font" /> and <paramref name="breakMode" />, for the width <paramref name="forWidth" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.StringSize(System.String,MonoTouch.UIKit.UIFont,System.nfloat,MonoTouch.UIKit.UILineBreakMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.String" />
      </Targets>
      <Member MemberName="StringSize">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGSize StringSize (this string This, UIKit.UIFont font, nfloat minFontSize, ref nfloat actualFontSize, nfloat forWidth, UIKit.UILineBreakMode lineBreakMode);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGSize StringSize(string This, class UIKit.UIFont font, valuetype System.nfloat minFontSize, valuetype System.nfloat actualFontSize, valuetype System.nfloat forWidth, valuetype UIKit.UILineBreakMode lineBreakMode) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="System.String" RefType="this" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="lineBreakMode" Type="MonoTouch.UIKit.UILineBreakMode" />
          <Parameter Name="minFontSize" Type="System.nfloat" />
          <Parameter Name="actualFontSize" Type="System.nfloat&amp;" RefType="ref" />
          <Parameter Name="forWidth" Type="System.nfloat" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="font">To be added.</param>
          <param name="minFontSize">To be added.</param>
          <param name="actualFontSize">To be added.</param>
          <param name="forWidth">To be added.</param>
          <param name="lineBreakMode">To be added.</param>
          <summary>The calculated size of the string rendered with the <paramref name="font" /> in the specified size range (outputting <paramref name="actualFontSize" />), with <paramref name="lineBreakMode" /> and for width <paramref name="forWidth" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.StringSize(System.String,MonoTouch.UIKit.UIFont,System.nfloat,System.nfloat@,System.nfloat,MonoTouch.UIKit.UILineBreakMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITabBarControllerDelegate" />
      </Targets>
      <Member MemberName="FinishedCustomizingViewControllers">
        <MemberSignature Language="C#" Value="public static void FinishedCustomizingViewControllers (this UIKit.IUITabBarControllerDelegate This, UIKit.UITabBarController tabBarController, UIKit.UIViewController[] viewControllers, bool changed);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FinishedCustomizingViewControllers(class UIKit.IUITabBarControllerDelegate This, class UIKit.UITabBarController tabBarController, class UIKit.UIViewController[] viewControllers, bool changed) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITabBarControllerDelegate" RefType="this" />
          <Parameter Name="tabBarController" Type="MonoTouch.UIKit.UITabBarController" />
          <Parameter Name="viewControllers" Type="MonoTouch.UIKit.UIViewController[]" />
          <Parameter Name="changed" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tabBarController">To be added.</param>
          <param name="viewControllers">To be added.</param>
          <param name="changed">To be added.</param>
          <summary>Indicates that the customization sheet was dismissed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITabBarControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UITabBarControllerDelegate_Extensions.FinishedCustomizingViewControllers(MonoTouch.UIKit.IUITabBarControllerDelegate,MonoTouch.UIKit.UITabBarController,MonoTouch.UIKit.UIViewController[],System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITabBarControllerDelegate" />
      </Targets>
      <Member MemberName="GetAnimationControllerForTransition">
        <MemberSignature Language="C#" Value="public static UIKit.IUIViewControllerAnimatedTransitioning GetAnimationControllerForTransition (this UIKit.IUITabBarControllerDelegate This, UIKit.UITabBarController tabBarController, UIKit.UIViewController fromViewController, UIKit.UIViewController toViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.IUIViewControllerAnimatedTransitioning GetAnimationControllerForTransition(class UIKit.IUITabBarControllerDelegate This, class UIKit.UITabBarController tabBarController, class UIKit.UIViewController fromViewController, class UIKit.UIViewController toViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITabBarControllerDelegate" RefType="this" />
          <Parameter Name="tabBarController" Type="MonoTouch.UIKit.UITabBarController" />
          <Parameter Name="fromViewController" Type="MonoTouch.UIKit.UIViewController" />
          <Parameter Name="toViewController" Type="MonoTouch.UIKit.UIViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tabBarController">To be added.</param>
          <param name="fromViewController">To be added.</param>
          <param name="toViewController">To be added.</param>
          <summary>Retrieves the UIViewControllerAnimatedTransitioning used during a non-interactive transition.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITabBarControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UITabBarControllerDelegate_Extensions.GetAnimationControllerForTransition(MonoTouch.UIKit.IUITabBarControllerDelegate,MonoTouch.UIKit.UITabBarController,MonoTouch.UIKit.UIViewController,MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITabBarControllerDelegate" />
      </Targets>
      <Member MemberName="GetInteractionControllerForAnimationController">
        <MemberSignature Language="C#" Value="public static UIKit.IUIViewControllerInteractiveTransitioning GetInteractionControllerForAnimationController (this UIKit.IUITabBarControllerDelegate This, UIKit.UITabBarController tabBarController, UIKit.IUIViewControllerAnimatedTransitioning animationController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.IUIViewControllerInteractiveTransitioning GetInteractionControllerForAnimationController(class UIKit.IUITabBarControllerDelegate This, class UIKit.UITabBarController tabBarController, class UIKit.IUIViewControllerAnimatedTransitioning animationController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITabBarControllerDelegate" RefType="this" />
          <Parameter Name="tabBarController" Type="MonoTouch.UIKit.UITabBarController" />
          <Parameter Name="animationController" Type="MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tabBarController">To be added.</param>
          <param name="animationController">To be added.</param>
          <summary>Retrieves the UIViewControllerInteractiveTransitioning used during an interactive transition.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITabBarControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UITabBarControllerDelegate_Extensions.GetInteractionControllerForAnimationController(MonoTouch.UIKit.IUITabBarControllerDelegate,MonoTouch.UIKit.UITabBarController,MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITabBarControllerDelegate" />
      </Targets>
      <Member MemberName="GetPreferredInterfaceOrientation">
        <MemberSignature Language="C#" Value="public static UIKit.UIInterfaceOrientation GetPreferredInterfaceOrientation (this UIKit.IUITabBarControllerDelegate This, UIKit.UITabBarController tabBarController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UIInterfaceOrientation GetPreferredInterfaceOrientation(class UIKit.IUITabBarControllerDelegate This, class UIKit.UITabBarController tabBarController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIInterfaceOrientation</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITabBarControllerDelegate" RefType="this" />
          <Parameter Name="tabBarController" Type="MonoTouch.UIKit.UITabBarController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tabBarController">To be added.</param>
          <summary>The preferred orientation for presentation of the tab bar controller.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITabBarControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UITabBarControllerDelegate_Extensions.GetPreferredInterfaceOrientation(MonoTouch.UIKit.IUITabBarControllerDelegate,MonoTouch.UIKit.UITabBarController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITabBarControllerDelegate" />
      </Targets>
      <Member MemberName="OnCustomizingViewControllers">
        <MemberSignature Language="C#" Value="public static void OnCustomizingViewControllers (this UIKit.IUITabBarControllerDelegate This, UIKit.UITabBarController tabBarController, UIKit.UIViewController[] viewControllers);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OnCustomizingViewControllers(class UIKit.IUITabBarControllerDelegate This, class UIKit.UITabBarController tabBarController, class UIKit.UIViewController[] viewControllers) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITabBarControllerDelegate" RefType="this" />
          <Parameter Name="tabBarController" Type="MonoTouch.UIKit.UITabBarController" />
          <Parameter Name="viewControllers" Type="MonoTouch.UIKit.UIViewController[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tabBarController">To be added.</param>
          <param name="viewControllers">To be added.</param>
          <summary>Indicates that the tab bar customization sheet is about to be displayed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITabBarControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UITabBarControllerDelegate_Extensions.OnCustomizingViewControllers(MonoTouch.UIKit.IUITabBarControllerDelegate,MonoTouch.UIKit.UITabBarController,MonoTouch.UIKit.UIViewController[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITabBarControllerDelegate" />
      </Targets>
      <Member MemberName="OnEndCustomizingViewControllers">
        <MemberSignature Language="C#" Value="public static void OnEndCustomizingViewControllers (this UIKit.IUITabBarControllerDelegate This, UIKit.UITabBarController tabBarController, UIKit.UIViewController[] viewControllers, bool changed);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OnEndCustomizingViewControllers(class UIKit.IUITabBarControllerDelegate This, class UIKit.UITabBarController tabBarController, class UIKit.UIViewController[] viewControllers, bool changed) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITabBarControllerDelegate" RefType="this" />
          <Parameter Name="tabBarController" Type="MonoTouch.UIKit.UITabBarController" />
          <Parameter Name="viewControllers" Type="MonoTouch.UIKit.UIViewController[]" />
          <Parameter Name="changed" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tabBarController">To be added.</param>
          <param name="viewControllers">To be added.</param>
          <param name="changed">To be added.</param>
          <summary>Indicates that the tab bar customization sheet is about to be dismissed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITabBarControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UITabBarControllerDelegate_Extensions.OnEndCustomizingViewControllers(MonoTouch.UIKit.IUITabBarControllerDelegate,MonoTouch.UIKit.UITabBarController,MonoTouch.UIKit.UIViewController[],System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITabBarControllerDelegate" />
      </Targets>
      <Member MemberName="ShouldSelectViewController">
        <MemberSignature Language="C#" Value="public static bool ShouldSelectViewController (this UIKit.IUITabBarControllerDelegate This, UIKit.UITabBarController tabBarController, UIKit.UIViewController viewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldSelectViewController(class UIKit.IUITabBarControllerDelegate This, class UIKit.UITabBarController tabBarController, class UIKit.UIViewController viewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITabBarControllerDelegate" RefType="this" />
          <Parameter Name="tabBarController" Type="MonoTouch.UIKit.UITabBarController" />
          <Parameter Name="viewController" Type="MonoTouch.UIKit.UIViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tabBarController">To be added.</param>
          <param name="viewController">To be added.</param>
          <summary>Whether the specified UIViewController should be made active.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITabBarControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UITabBarControllerDelegate_Extensions.ShouldSelectViewController(MonoTouch.UIKit.IUITabBarControllerDelegate,MonoTouch.UIKit.UITabBarController,MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITabBarControllerDelegate" />
      </Targets>
      <Member MemberName="SupportedInterfaceOrientations">
        <MemberSignature Language="C#" Value="public static UIKit.UIInterfaceOrientationMask SupportedInterfaceOrientations (this UIKit.IUITabBarControllerDelegate This, UIKit.UITabBarController tabBarController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UIInterfaceOrientationMask SupportedInterfaceOrientations(class UIKit.IUITabBarControllerDelegate This, class UIKit.UITabBarController tabBarController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIInterfaceOrientationMask</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITabBarControllerDelegate" RefType="this" />
          <Parameter Name="tabBarController" Type="MonoTouch.UIKit.UITabBarController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tabBarController">To be added.</param>
          <summary>The supported orientations for presentation of the tab bar controller.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITabBarControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UITabBarControllerDelegate_Extensions.SupportedInterfaceOrientations(MonoTouch.UIKit.IUITabBarControllerDelegate,MonoTouch.UIKit.UITabBarController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITabBarControllerDelegate" />
      </Targets>
      <Member MemberName="ViewControllerSelected">
        <MemberSignature Language="C#" Value="public static void ViewControllerSelected (this UIKit.IUITabBarControllerDelegate This, UIKit.UITabBarController tabBarController, UIKit.UIViewController viewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ViewControllerSelected(class UIKit.IUITabBarControllerDelegate This, class UIKit.UITabBarController tabBarController, class UIKit.UIViewController viewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITabBarControllerDelegate" RefType="this" />
          <Parameter Name="tabBarController" Type="MonoTouch.UIKit.UITabBarController" />
          <Parameter Name="viewController" Type="MonoTouch.UIKit.UIViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tabBarController">To be added.</param>
          <param name="viewController">To be added.</param>
          <summary>Indicates that the app user selected an item from the tab bar.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITabBarControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UITabBarControllerDelegate_Extensions.ViewControllerSelected(MonoTouch.UIKit.IUITabBarControllerDelegate,MonoTouch.UIKit.UITabBarController,MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITabBarDelegate" />
      </Targets>
      <Member MemberName="DidBeginCustomizingItems">
        <MemberSignature Language="C#" Value="public static void DidBeginCustomizingItems (this UIKit.IUITabBarDelegate This, UIKit.UITabBar tabbar, UIKit.UITabBarItem[] items);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidBeginCustomizingItems(class UIKit.IUITabBarDelegate This, class UIKit.UITabBar tabbar, class UIKit.UITabBarItem[] items) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITabBarDelegate" RefType="this" />
          <Parameter Name="tabbar" Type="MonoTouch.UIKit.UITabBar" />
          <Parameter Name="items" Type="MonoTouch.UIKit.UITabBarItem[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tabbar">To be added.</param>
          <param name="items">To be added.</param>
          <summary>Indicates that customizing the specified UITabBarItems has begun.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITabBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UITabBarDelegate_Extensions.DidBeginCustomizingItems(MonoTouch.UIKit.IUITabBarDelegate,MonoTouch.UIKit.UITabBar,MonoTouch.UIKit.UITabBarItem[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITabBarDelegate" />
      </Targets>
      <Member MemberName="DidEndCustomizingItems">
        <MemberSignature Language="C#" Value="public static void DidEndCustomizingItems (this UIKit.IUITabBarDelegate This, UIKit.UITabBar tabbar, UIKit.UITabBarItem[] items, bool changed);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidEndCustomizingItems(class UIKit.IUITabBarDelegate This, class UIKit.UITabBar tabbar, class UIKit.UITabBarItem[] items, bool changed) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITabBarDelegate" RefType="this" />
          <Parameter Name="tabbar" Type="MonoTouch.UIKit.UITabBar" />
          <Parameter Name="items" Type="MonoTouch.UIKit.UITabBarItem[]" />
          <Parameter Name="changed" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tabbar">To be added.</param>
          <param name="items">To be added.</param>
          <param name="changed">To be added.</param>
          <summary>Indicates that customization of the specified items has ended.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITabBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UITabBarDelegate_Extensions.DidEndCustomizingItems(MonoTouch.UIKit.IUITabBarDelegate,MonoTouch.UIKit.UITabBar,MonoTouch.UIKit.UITabBarItem[],System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITabBarDelegate" />
      </Targets>
      <Member MemberName="ItemSelected">
        <MemberSignature Language="C#" Value="public static void ItemSelected (this UIKit.IUITabBarDelegate This, UIKit.UITabBar tabbar, UIKit.UITabBarItem item);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ItemSelected(class UIKit.IUITabBarDelegate This, class UIKit.UITabBar tabbar, class UIKit.UITabBarItem item) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITabBarDelegate" RefType="this" />
          <Parameter Name="tabbar" Type="MonoTouch.UIKit.UITabBar" />
          <Parameter Name="item" Type="MonoTouch.UIKit.UITabBarItem" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tabbar">To be added.</param>
          <param name="item">To be added.</param>
          <summary>Indicates that the specified UITabBarItem was selected.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITabBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UITabBarDelegate_Extensions.ItemSelected(MonoTouch.UIKit.IUITabBarDelegate,MonoTouch.UIKit.UITabBar,MonoTouch.UIKit.UITabBarItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITabBarDelegate" />
      </Targets>
      <Member MemberName="WillBeginCustomizingItems">
        <MemberSignature Language="C#" Value="public static void WillBeginCustomizingItems (this UIKit.IUITabBarDelegate This, UIKit.UITabBar tabbar, UIKit.UITabBarItem[] items);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillBeginCustomizingItems(class UIKit.IUITabBarDelegate This, class UIKit.UITabBar tabbar, class UIKit.UITabBarItem[] items) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITabBarDelegate" RefType="this" />
          <Parameter Name="tabbar" Type="MonoTouch.UIKit.UITabBar" />
          <Parameter Name="items" Type="MonoTouch.UIKit.UITabBarItem[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tabbar">To be added.</param>
          <param name="items">To be added.</param>
          <summary>Indicates that customization is about to begin on the specified UITabBarItems.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITabBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UITabBarDelegate_Extensions.WillBeginCustomizingItems(MonoTouch.UIKit.IUITabBarDelegate,MonoTouch.UIKit.UITabBar,MonoTouch.UIKit.UITabBarItem[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITabBarDelegate" />
      </Targets>
      <Member MemberName="WillEndCustomizingItems">
        <MemberSignature Language="C#" Value="public static void WillEndCustomizingItems (this UIKit.IUITabBarDelegate This, UIKit.UITabBar tabbar, UIKit.UITabBarItem[] items, bool changed);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillEndCustomizingItems(class UIKit.IUITabBarDelegate This, class UIKit.UITabBar tabbar, class UIKit.UITabBarItem[] items, bool changed) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITabBarDelegate" RefType="this" />
          <Parameter Name="tabbar" Type="MonoTouch.UIKit.UITabBar" />
          <Parameter Name="items" Type="MonoTouch.UIKit.UITabBarItem[]" />
          <Parameter Name="changed" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tabbar">To be added.</param>
          <param name="items">To be added.</param>
          <param name="changed">To be added.</param>
          <summary>Indicates that customization is about to end on the specified UITabBarItems.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITabBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UITabBarDelegate_Extensions.WillEndCustomizingItems(MonoTouch.UIKit.IUITabBarDelegate,MonoTouch.UIKit.UITabBar,MonoTouch.UIKit.UITabBarItem[],System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDataSource" />
      </Targets>
      <Member MemberName="CanEditRow">
        <MemberSignature Language="C#" Value="public static bool CanEditRow (this UIKit.IUITableViewDataSource This, UIKit.UITableView tableView, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanEditRow(class UIKit.IUITableViewDataSource This, class UIKit.UITableView tableView, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDataSource" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view containing the row.</param>
          <param name="indexPath">Location of the row.</param>
          <summary>Whether the row located at  should be editable.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDataSource_Extensions" Member="M:MonoTouch.UIKit.UITableViewDataSource_Extensions.CanEditRow(MonoTouch.UIKit.IUITableViewDataSource,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDataSource" />
      </Targets>
      <Member MemberName="CanMoveRow">
        <MemberSignature Language="C#" Value="public static bool CanMoveRow (this UIKit.IUITableViewDataSource This, UIKit.UITableView tableView, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanMoveRow(class UIKit.IUITableViewDataSource This, class UIKit.UITableView tableView, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDataSource" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view containing the row.</param>
          <param name="indexPath">Location of the row.</param>
          <summary>Whether the row located at  can be moved to another location in the table view.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDataSource_Extensions" Member="M:MonoTouch.UIKit.UITableViewDataSource_Extensions.CanMoveRow(MonoTouch.UIKit.IUITableViewDataSource,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDataSource" />
      </Targets>
      <Member MemberName="CommitEditingStyle">
        <MemberSignature Language="C#" Value="public static void CommitEditingStyle (this UIKit.IUITableViewDataSource This, UIKit.UITableView tableView, UIKit.UITableViewCellEditingStyle editingStyle, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CommitEditingStyle(class UIKit.IUITableViewDataSource This, class UIKit.UITableView tableView, valuetype UIKit.UITableViewCellEditingStyle editingStyle, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDataSource" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="editingStyle" Type="MonoTouch.UIKit.UITableViewCellEditingStyle" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view requesting insertion or deletion.</param>
          <param name="editingStyle">Cell editing style requested for the row at , such as  or .</param>
          <param name="indexPath">Location of the row.</param>
          <summary>Commits the insertion or deletion of the specified row.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDataSource_Extensions" Member="M:MonoTouch.UIKit.UITableViewDataSource_Extensions.CommitEditingStyle(MonoTouch.UIKit.IUITableViewDataSource,MonoTouch.UIKit.UITableView,MonoTouch.UIKit.UITableViewCellEditingStyle,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDataSource" />
      </Targets>
      <Member MemberName="MoveRow">
        <MemberSignature Language="C#" Value="public static void MoveRow (this UIKit.IUITableViewDataSource This, UIKit.UITableView tableView, Foundation.NSIndexPath sourceIndexPath, Foundation.NSIndexPath destinationIndexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveRow(class UIKit.IUITableViewDataSource This, class UIKit.UITableView tableView, class Foundation.NSIndexPath sourceIndexPath, class Foundation.NSIndexPath destinationIndexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDataSource" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="sourceIndexPath" Type="MonoTouch.Foundation.NSIndexPath" />
          <Parameter Name="destinationIndexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view containing the row being moved.</param>
          <param name="sourceIndexPath">Location of the row to be moved.</param>
          <param name="destinationIndexPath">New location of the row.</param>
          <summary>Called when a row has been moved so that the data source can 'implement' the changed row position that has been performed in the user interface. This ensures the data is kept in-sync with what is being displayed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDataSource_Extensions" Member="M:MonoTouch.UIKit.UITableViewDataSource_Extensions.MoveRow(MonoTouch.UIKit.IUITableViewDataSource,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDataSource" />
      </Targets>
      <Member MemberName="NumberOfSections">
        <MemberSignature Language="C#" Value="public static nint NumberOfSections (this UIKit.IUITableViewDataSource This, UIKit.UITableView tableView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nint NumberOfSections(class UIKit.IUITableViewDataSource This, class UIKit.UITableView tableView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDataSource" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view displaying the sections.</param>
          <summary>Returns the number of sections that are required to display the data.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDataSource_Extensions" Member="M:MonoTouch.UIKit.UITableViewDataSource_Extensions.NumberOfSections(MonoTouch.UIKit.IUITableViewDataSource,MonoTouch.UIKit.UITableView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDataSource" />
      </Targets>
      <Member MemberName="SectionFor">
        <MemberSignature Language="C#" Value="public static nint SectionFor (this UIKit.IUITableViewDataSource This, UIKit.UITableView tableView, string title, nint atIndex);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nint SectionFor(class UIKit.IUITableViewDataSource This, class UIKit.UITableView tableView, string title, valuetype System.nint atIndex) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDataSource" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="title" Type="System.String" />
          <Parameter Name="atIndex" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view containing the section.</param>
          <param name="title">The title that's displayed in the table view's index.</param>
          <param name="atIndex">The index of the title in the array returned from the .</param>
          <summary>Returns the index of the section with the given  and .</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDataSource_Extensions" Member="M:MonoTouch.UIKit.UITableViewDataSource_Extensions.SectionFor(MonoTouch.UIKit.IUITableViewDataSource,MonoTouch.UIKit.UITableView,System.String,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDataSource" />
      </Targets>
      <Member MemberName="SectionIndexTitles">
        <MemberSignature Language="C#" Value="public static string[] SectionIndexTitles (this UIKit.IUITableViewDataSource This, UIKit.UITableView tableView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] SectionIndexTitles(class UIKit.IUITableViewDataSource This, class UIKit.UITableView tableView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDataSource" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view that is displaying the index.</param>
          <summary>Returns an array of titles to be displayed as an index on the table view.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDataSource_Extensions" Member="M:MonoTouch.UIKit.UITableViewDataSource_Extensions.SectionIndexTitles(MonoTouch.UIKit.IUITableViewDataSource,MonoTouch.UIKit.UITableView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDataSource" />
      </Targets>
      <Member MemberName="TitleForFooter">
        <MemberSignature Language="C#" Value="public static string TitleForFooter (this UIKit.IUITableViewDataSource This, UIKit.UITableView tableView, nint section);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TitleForFooter(class UIKit.IUITableViewDataSource This, class UIKit.UITableView tableView, valuetype System.nint section) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDataSource" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="section" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view containing the section.</param>
          <param name="section">Index of the section displaying the footer.</param>
          <summary>Called to populate the footer for the specified section.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDataSource_Extensions" Member="M:MonoTouch.UIKit.UITableViewDataSource_Extensions.TitleForFooter(MonoTouch.UIKit.IUITableViewDataSource,MonoTouch.UIKit.UITableView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDataSource" />
      </Targets>
      <Member MemberName="TitleForHeader">
        <MemberSignature Language="C#" Value="public static string TitleForHeader (this UIKit.IUITableViewDataSource This, UIKit.UITableView tableView, nint section);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TitleForHeader(class UIKit.IUITableViewDataSource This, class UIKit.UITableView tableView, valuetype System.nint section) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDataSource" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="section" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view containing the section.</param>
          <param name="section">Index of the section displaying the header.</param>
          <summary>Called to populate the header for the specified section.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDataSource_Extensions" Member="M:MonoTouch.UIKit.UITableViewDataSource_Extensions.TitleForHeader(MonoTouch.UIKit.IUITableViewDataSource,MonoTouch.UIKit.UITableView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDataSourcePrefetching" />
      </Targets>
      <Member MemberName="CancelPrefetching">
        <MemberSignature Language="C#" Value="public static void CancelPrefetching (this UIKit.IUITableViewDataSourcePrefetching This, UIKit.UITableView tableView, Foundation.NSIndexPath[] indexPaths);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CancelPrefetching(class UIKit.IUITableViewDataSourcePrefetching This, class UIKit.UITableView tableView, class Foundation.NSIndexPath[] indexPaths) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDataSourcePrefetching" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPaths" Type="MonoTouch.Foundation.NSIndexPath[]" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="tableView">To be added.</param>
          <param name="indexPaths">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDataSourcePrefetching_Extensions" Member="M:MonoTouch.UIKit.UITableViewDataSourcePrefetching_Extensions.CancelPrefetching(MonoTouch.UIKit.IUITableViewDataSourcePrefetching,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="AccessoryButtonTapped">
        <MemberSignature Language="C#" Value="public static void AccessoryButtonTapped (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AccessoryButtonTapped(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">The table view containing the row/cell accessory that has been tapped.</param>
          <param name="indexPath">The location of the row in the table view.</param>
          <summary>Indictes that the user has tapped the accessory / disclosure buttom at the specified indexPath.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.AccessoryButtonTapped(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="AccessoryForRow">
        <MemberSignature Language="C#" Value="public static UIKit.UITableViewCellAccessory AccessoryForRow (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UITableViewCellAccessory AccessoryForRow(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UITableViewCellAccessory</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view containing the rows.</param>
          <param name="indexPath">Location of the row.</param>
          <summary>The UITableViewCellAccessory for the specified indexPath.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.AccessoryForRow(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="CanFocusRow">
        <MemberSignature Language="C#" Value="public static bool CanFocusRow (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanFocusRow(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>Whether the row at the specified <paramref name="indexPath" /> may receive focus.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.CanFocusRow(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="CanPerformAction">
        <MemberSignature Language="C#" Value="public static bool CanPerformAction (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, ObjCRuntime.Selector action, Foundation.NSIndexPath indexPath, Foundation.NSObject sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanPerformAction(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, class ObjCRuntime.Selector action, class Foundation.NSIndexPath indexPath, class Foundation.NSObject sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="action" Type="MonoTouch.ObjCRuntime.Selector" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view containing the row.</param>
          <param name="action">A selector identifying the Copy or Paste method (ie.  or ).</param>
          <param name="indexPath">Location of the row.</param>
          <param name="sender">Object that initially triggere the Copy or Paste.</param>
          <summary>Whether the cell at the specified indexPath can perform the specified Copy or Paste operation.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.CanPerformAction(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.ObjCRuntime.Selector,MonoTouch.Foundation.NSIndexPath,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="CellDisplayingEnded">
        <MemberSignature Language="C#" Value="public static void CellDisplayingEnded (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, UIKit.UITableViewCell cell, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CellDisplayingEnded(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, class UIKit.UITableViewCell cell, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="cell" Type="MonoTouch.UIKit.UITableViewCell" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">The  being displayed.</param>
          <param name="cell">The  that has just been removed.</param>
          <param name="indexPath">The  specifying the .</param>
          <summary>Indicates that the cell has just been removed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.CellDisplayingEnded(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.UIKit.UITableViewCell,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="CustomizeMoveTarget">
        <MemberSignature Language="C#" Value="public static Foundation.NSIndexPath CustomizeMoveTarget (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, Foundation.NSIndexPath sourceIndexPath, Foundation.NSIndexPath proposedIndexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSIndexPath CustomizeMoveTarget(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, class Foundation.NSIndexPath sourceIndexPath, class Foundation.NSIndexPath proposedIndexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSIndexPath</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="sourceIndexPath" Type="MonoTouch.Foundation.NSIndexPath" />
          <Parameter Name="proposedIndexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view containing the row to be moved.</param>
          <param name="sourceIndexPath">The original location of the row being moved.</param>
          <param name="proposedIndexPath">The location in the table view where the row has been dropped. The location can be altered by this method.</param>
          <summary>Used to change a cell move destination, for example, to prevent dropping a cell in a certain position.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.CustomizeMoveTarget(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="DidEndEditing">
        <MemberSignature Language="C#" Value="public static void DidEndEditing (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidEndEditing(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view being edited.</param>
          <param name="indexPath">Location of the row.</param>
          <summary>Indicates that editing of the cell at the specified indexPath has finished.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.DidEndEditing(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="DidUpdateFocus">
        <MemberSignature Language="C#" Value="public static void DidUpdateFocus (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, UIKit.UITableViewFocusUpdateContext context, UIKit.UIFocusAnimationCoordinator coordinator);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateFocus(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, class UIKit.UITableViewFocusUpdateContext context, class UIKit.UIFocusAnimationCoordinator coordinator) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="context" Type="MonoTouch.UIKit.UITableViewFocusUpdateContext" />
          <Parameter Name="coordinator" Type="MonoTouch.UIKit.UIFocusAnimationCoordinator" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">To be added.</param>
          <param name="context">A  object containing metadata.</param>
          <param name="coordinator">A  object containing metadata.</param>
          <summary>Indicates that the focus changed as detailed in the <paramref name="context" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.DidUpdateFocus(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.UIKit.UITableViewFocusUpdateContext,MonoTouch.UIKit.UIFocusAnimationCoordinator)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="EditActionsForRow">
        <MemberSignature Language="C#" Value="public static UIKit.UITableViewRowAction[] EditActionsForRow (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UITableViewRowAction[] EditActionsForRow(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UITableViewRowAction[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>Returns an array of row actions to display after the user swipes the row in the <paramref name="tableView" /> table view that is identified by <paramref name="indexPath" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.EditActionsForRow(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="EditingStyleForRow">
        <MemberSignature Language="C#" Value="public static UIKit.UITableViewCellEditingStyle EditingStyleForRow (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UITableViewCellEditingStyle EditingStyleForRow(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UITableViewCellEditingStyle</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view that is going to be editable.</param>
          <param name="indexPath">Location of the row.</param>
          <summary>The UITableViewCellEditingStyle for the specified indexPath.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.EditingStyleForRow(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="EstimatedHeight">
        <MemberSignature Language="C#" Value="public static nfloat EstimatedHeight (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat EstimatedHeight(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>An estimate of the height for the specified indexPath. Implementations should perform minimal calculation, as it is called repeatedly.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.EstimatedHeight(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="EstimatedHeightForFooter">
        <MemberSignature Language="C#" Value="public static nfloat EstimatedHeightForFooter (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, nint section);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat EstimatedHeightForFooter(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, valuetype System.nint section) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="section" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">To be added.</param>
          <param name="section">To be added.</param>
          <summary>The estimated height of the footer of the specified section.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.EstimatedHeightForFooter(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="EstimatedHeightForHeader">
        <MemberSignature Language="C#" Value="public static nfloat EstimatedHeightForHeader (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, nint section);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat EstimatedHeightForHeader(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, valuetype System.nint section) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="section" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">To be added.</param>
          <param name="section">To be added.</param>
          <summary>The estimated height of the header of the specified section.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.EstimatedHeightForHeader(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="FooterViewDisplayingEnded">
        <MemberSignature Language="C#" Value="public static void FooterViewDisplayingEnded (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, UIKit.UIView footerView, nint section);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FooterViewDisplayingEnded(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, class UIKit.UIView footerView, valuetype System.nint section) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="footerView" Type="MonoTouch.UIKit.UIView" />
          <Parameter Name="section" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table to which the footer view belongs.</param>
          <param name="footerView">The  being removed.</param>
          <param name="section">The index of the section to which the  belonged.</param>
          <summary>Indicates that the footerView of the specified section has been removed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.FooterViewDisplayingEnded(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.UIKit.UIView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="GetHeightForFooter">
        <MemberSignature Language="C#" Value="public static nfloat GetHeightForFooter (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, nint section);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat GetHeightForFooter(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, valuetype System.nint section) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="section" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view.</param>
          <param name="section">Index of the section requiring a footer display.</param>
          <summary>The height of the footer for the specified section.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.GetHeightForFooter(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="GetHeightForHeader">
        <MemberSignature Language="C#" Value="public static nfloat GetHeightForHeader (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, nint section);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat GetHeightForHeader(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, valuetype System.nint section) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="section" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view.</param>
          <param name="section">Index of the section requiring a header display.</param>
          <summary>The height of the header for the specified section.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.GetHeightForHeader(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="GetHeightForRow">
        <MemberSignature Language="C#" Value="public static nfloat GetHeightForRow (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat GetHeightForRow(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view.</param>
          <param name="indexPath">Location of the row.</param>
          <summary>The height of the cell at the specified indexPath.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.GetHeightForRow(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="GetIndexPathForPreferredFocusedView">
        <MemberSignature Language="C#" Value="public static Foundation.NSIndexPath GetIndexPathForPreferredFocusedView (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSIndexPath GetIndexPathForPreferredFocusedView(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSIndexPath</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">To be added.</param>
          <summary>The index path of the table's preferred focus view.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.GetIndexPathForPreferredFocusedView(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="GetLeadingSwipeActionsConfiguration">
        <MemberSignature Language="C#" Value="public static UIKit.UISwipeActionsConfiguration GetLeadingSwipeActionsConfiguration (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UISwipeActionsConfiguration GetLeadingSwipeActionsConfiguration(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UISwipeActionsConfiguration</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>Returns the swipe action configuration for swipes that begin from the leading edge.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.GetLeadingSwipeActionsConfiguration(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="GetTrailingSwipeActionsConfiguration">
        <MemberSignature Language="C#" Value="public static UIKit.UISwipeActionsConfiguration GetTrailingSwipeActionsConfiguration (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UISwipeActionsConfiguration GetTrailingSwipeActionsConfiguration(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UISwipeActionsConfiguration</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>Returns the swipe action configuration for swipes that begin from the trailing edge.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.GetTrailingSwipeActionsConfiguration(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="GetViewForFooter">
        <MemberSignature Language="C#" Value="public static UIKit.UIView GetViewForFooter (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, nint section);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIView GetViewForFooter(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, valuetype System.nint section) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIView</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="section" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view containing the section.</param>
          <param name="section">Section index where the footer will be added.</param>
          <summary>The view used for the footer of the specified section.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.GetViewForFooter(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="GetViewForHeader">
        <MemberSignature Language="C#" Value="public static UIKit.UIView GetViewForHeader (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, nint section);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIView GetViewForHeader(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, valuetype System.nint section) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIView</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="section" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view containing the section.</param>
          <param name="section">Section index where the header will be added.</param>
          <summary>The view used for the header of the specified section.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.GetViewForHeader(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="HeaderViewDisplayingEnded">
        <MemberSignature Language="C#" Value="public static void HeaderViewDisplayingEnded (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, UIKit.UIView headerView, nint section);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HeaderViewDisplayingEnded(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, class UIKit.UIView headerView, valuetype System.nint section) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="headerView" Type="MonoTouch.UIKit.UIView" />
          <Parameter Name="section" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">The  to which the  belongs.</param>
          <param name="headerView">The  being removed.</param>
          <param name="section">An index indicating the section to which the  belongs.</param>
          <summary>Indicates that the header of the specified section has been removed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.HeaderViewDisplayingEnded(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.UIKit.UIView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="IndentationLevel">
        <MemberSignature Language="C#" Value="public static nint IndentationLevel (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nint IndentationLevel(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view containing the row.</param>
          <param name="indexPath">Location of the row.</param>
          <summary>The indentation level for the cell at the specified indexPath.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.IndentationLevel(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="PerformAction">
        <MemberSignature Language="C#" Value="public static void PerformAction (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, ObjCRuntime.Selector action, Foundation.NSIndexPath indexPath, Foundation.NSObject sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformAction(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, class ObjCRuntime.Selector action, class Foundation.NSIndexPath indexPath, class Foundation.NSObject sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="action" Type="MonoTouch.ObjCRuntime.Selector" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view containing the row.</param>
          <param name="action">A selector identifying the Copy or Paste method (ie.  or ).</param>
          <param name="indexPath">Location of the row where the copy or paste operation was selected.</param>
          <param name="sender">Object that triggered the copy or paste operation.</param>
          <summary>Performs the specified Copy or Paste action.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.PerformAction(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.ObjCRuntime.Selector,MonoTouch.Foundation.NSIndexPath,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="RowDeselected">
        <MemberSignature Language="C#" Value="public static void RowDeselected (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RowDeselected(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view containing the row.</param>
          <param name="indexPath">Location of the row that has become de-selected.</param>
          <summary>Indicates that the cell at the specified indexPath has been deselected.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.RowDeselected(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="RowHighlighted">
        <MemberSignature Language="C#" Value="public static void RowHighlighted (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, Foundation.NSIndexPath rowIndexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RowHighlighted(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, class Foundation.NSIndexPath rowIndexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="rowIndexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">The  containing the row.</param>
          <param name="rowIndexPath">Location of the row being highlighted.</param>
          <summary>Indicates that the cell at the specified indexPath has been highlighted.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.RowHighlighted(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="RowSelected">
        <MemberSignature Language="C#" Value="public static void RowSelected (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RowSelected(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view containing the row.</param>
          <param name="indexPath">Location of the row that has become selected.</param>
          <summary>Indicates that the call at the specified indexPath has been selected.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.RowSelected(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="RowUnhighlighted">
        <MemberSignature Language="C#" Value="public static void RowUnhighlighted (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, Foundation.NSIndexPath rowIndexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RowUnhighlighted(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, class Foundation.NSIndexPath rowIndexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="rowIndexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">The  containing the row.</param>
          <param name="rowIndexPath">The row being unhighlighted.</param>
          <summary>Indicates that the cell at the specified indexPath has been unhighlighted.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.RowUnhighlighted(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="ShouldHighlightRow">
        <MemberSignature Language="C#" Value="public static bool ShouldHighlightRow (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, Foundation.NSIndexPath rowIndexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldHighlightRow(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, class Foundation.NSIndexPath rowIndexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="rowIndexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">The  in which the row is located.</param>
          <param name="rowIndexPath">The location of the row being highlighted.</param>
          <summary>Whether the cell at the specified indexPath should be highlighted.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.ShouldHighlightRow(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="ShouldIndentWhileEditing">
        <MemberSignature Language="C#" Value="public static bool ShouldIndentWhileEditing (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldIndentWhileEditing(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view that contains the row.</param>
          <param name="indexPath">Location of the row.</param>
          <summary>Whether the cell at the specified indexPath should be indented while it is being edited.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.ShouldIndentWhileEditing(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="ShouldShowMenu">
        <MemberSignature Language="C#" Value="public static bool ShouldShowMenu (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, Foundation.NSIndexPath rowAtindexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldShowMenu(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, class Foundation.NSIndexPath rowAtindexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="rowAtindexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view containing the row.</param>
          <param name="rowAtindexPath">Location of the row that the user is selecting.</param>
          <summary>Whether the cell at the specified rowAtIndexPath should show an action menu.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.ShouldShowMenu(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="ShouldSpringLoadRow">
        <MemberSignature Language="C#" Value="public static bool ShouldSpringLoadRow (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, Foundation.NSIndexPath indexPath, UIKit.IUISpringLoadedInteractionContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldSpringLoadRow(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, class Foundation.NSIndexPath indexPath, class UIKit.IUISpringLoadedInteractionContext context) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
          <Parameter Name="context" Type="MonoTouch.UIKit.IUISpringLoadedInteractionContext" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">To be added.</param>
          <param name="indexPath">To be added.</param>
          <param name="context">To be added.</param>
          <summary>Method that is called to indicate whether the identified row should springload in the specified context.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.ShouldSpringLoadRow(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath,MonoTouch.UIKit.IUISpringLoadedInteractionContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="ShouldUpdateFocus">
        <MemberSignature Language="C#" Value="public static bool ShouldUpdateFocus (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, UIKit.UITableViewFocusUpdateContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldUpdateFocus(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, class UIKit.UITableViewFocusUpdateContext context) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="context" Type="MonoTouch.UIKit.UITableViewFocusUpdateContext" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">To be added.</param>
          <param name="context">To be added.</param>
          <summary>TCalled prior to the <paramref name="tableView" /> either losing or receiving focus. If either focus environment returns <see langword="false" />, the focus update is canceled.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.ShouldUpdateFocus(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.UIKit.UITableViewFocusUpdateContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="TitleForDeleteConfirmation">
        <MemberSignature Language="C#" Value="public static string TitleForDeleteConfirmation (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TitleForDeleteConfirmation(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view being edited.</param>
          <param name="indexPath">Location of the row that may be deleted.</param>
          <summary>When overridden, changes the default title of the delete confirmation button.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.TitleForDeleteConfirmation(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="WillBeginEditing">
        <MemberSignature Language="C#" Value="public static void WillBeginEditing (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillBeginEditing(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view about to be edited.</param>
          <param name="indexPath">Location of the row that has been swiped.</param>
          <summary>Indicates that the cell at the specified indexPath is about to be edited.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.WillBeginEditing(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="WillDeselectRow">
        <MemberSignature Language="C#" Value="public static Foundation.NSIndexPath WillDeselectRow (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSIndexPath WillDeselectRow(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSIndexPath</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">The table involved.</param>
          <param name="indexPath">The index path of the row about to be de-selected.</param>
          <summary>Indicates that the cell at the specified indexPath is about to be deselected.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.WillDeselectRow(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="WillDisplay">
        <MemberSignature Language="C#" Value="public static void WillDisplay (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, UIKit.UITableViewCell cell, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillDisplay(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, class UIKit.UITableViewCell cell, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="cell" Type="MonoTouch.UIKit.UITableViewCell" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view containing the row.</param>
          <param name="cell">Cell view that is going to be used to draw the row.</param>
          <param name="indexPath">Location of the row.</param>
          <summary>Indicates that the cell at the specified indexPath is about to be shown.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.WillDisplay(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.UIKit.UITableViewCell,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="WillDisplayFooterView">
        <MemberSignature Language="C#" Value="public static void WillDisplayFooterView (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, UIKit.UIView footerView, nint section);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillDisplayFooterView(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, class UIKit.UIView footerView, valuetype System.nint section) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="footerView" Type="MonoTouch.UIKit.UIView" />
          <Parameter Name="section" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">The  involved.</param>
          <param name="footerView">The  that will be used as the footer view.</param>
          <param name="section">The table section to which the footer view belongs.</param>
          <summary>Indicates that the footer view for the specified section is about to be shown.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.WillDisplayFooterView(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.UIKit.UIView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="WillDisplayHeaderView">
        <MemberSignature Language="C#" Value="public static void WillDisplayHeaderView (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, UIKit.UIView headerView, nint section);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillDisplayHeaderView(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, class UIKit.UIView headerView, valuetype System.nint section) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="headerView" Type="MonoTouch.UIKit.UIView" />
          <Parameter Name="section" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">The  involved.</param>
          <param name="headerView">The  that will be used as the header view.</param>
          <param name="section">The table section to which the header view belongs.</param>
          <summary>Indicates that the header view of the specified section is about to be shown.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.WillDisplayHeaderView(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.UIKit.UIView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="WillSelectRow">
        <MemberSignature Language="C#" Value="public static Foundation.NSIndexPath WillSelectRow (this UIKit.IUITableViewDelegate This, UIKit.UITableView tableView, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSIndexPath WillSelectRow(class UIKit.IUITableViewDelegate This, class UIKit.UITableView tableView, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSIndexPath</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view containing the row.</param>
          <param name="indexPath">Location of the row about to be selected.</param>
          <summary>Indicates the the cell at the specified indexPath is about to be selected.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.WillSelectRow(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDragDelegate" />
      </Targets>
      <Member MemberName="DragSessionAllowsMoveOperation">
        <MemberSignature Language="C#" Value="public static bool DragSessionAllowsMoveOperation (this UIKit.IUITableViewDragDelegate This, UIKit.UITableView tableView, UIKit.IUIDragSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DragSessionAllowsMoveOperation(class UIKit.IUITableViewDragDelegate This, class UIKit.UITableView tableView, class UIKit.IUIDragSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDragDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDragSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">To be added.</param>
          <param name="session">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDragDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDragDelegate_Extensions.DragSessionAllowsMoveOperation(MonoTouch.UIKit.IUITableViewDragDelegate,MonoTouch.UIKit.UITableView,MonoTouch.UIKit.IUIDragSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDragDelegate" />
      </Targets>
      <Member MemberName="DragSessionDidEnd">
        <MemberSignature Language="C#" Value="public static void DragSessionDidEnd (this UIKit.IUITableViewDragDelegate This, UIKit.UITableView tableView, UIKit.IUIDragSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DragSessionDidEnd(class UIKit.IUITableViewDragDelegate This, class UIKit.UITableView tableView, class UIKit.IUIDragSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDragDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDragSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">To be added.</param>
          <param name="session">To be added.</param>
          <summary>Method that is called when the user cancels or completes the drag session.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDragDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDragDelegate_Extensions.DragSessionDidEnd(MonoTouch.UIKit.IUITableViewDragDelegate,MonoTouch.UIKit.UITableView,MonoTouch.UIKit.IUIDragSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDragDelegate" />
      </Targets>
      <Member MemberName="DragSessionIsRestrictedToDraggingApplication">
        <MemberSignature Language="C#" Value="public static bool DragSessionIsRestrictedToDraggingApplication (this UIKit.IUITableViewDragDelegate This, UIKit.UITableView tableView, UIKit.IUIDragSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DragSessionIsRestrictedToDraggingApplication(class UIKit.IUITableViewDragDelegate This, class UIKit.UITableView tableView, class UIKit.IUIDragSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDragDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDragSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">To be added.</param>
          <param name="session">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDragDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDragDelegate_Extensions.DragSessionIsRestrictedToDraggingApplication(MonoTouch.UIKit.IUITableViewDragDelegate,MonoTouch.UIKit.UITableView,MonoTouch.UIKit.IUIDragSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDragDelegate" />
      </Targets>
      <Member MemberName="DragSessionWillBegin">
        <MemberSignature Language="C#" Value="public static void DragSessionWillBegin (this UIKit.IUITableViewDragDelegate This, UIKit.UITableView tableView, UIKit.IUIDragSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DragSessionWillBegin(class UIKit.IUITableViewDragDelegate This, class UIKit.UITableView tableView, class UIKit.IUIDragSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDragDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDragSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">To be added.</param>
          <param name="session">To be added.</param>
          <summary>Method that is called just before a drag session begins.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDragDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDragDelegate_Extensions.DragSessionWillBegin(MonoTouch.UIKit.IUITableViewDragDelegate,MonoTouch.UIKit.UITableView,MonoTouch.UIKit.IUIDragSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDragDelegate" />
      </Targets>
      <Member MemberName="GetDragPreviewParameters">
        <MemberSignature Language="C#" Value="public static UIKit.UIDragPreviewParameters GetDragPreviewParameters (this UIKit.IUITableViewDragDelegate This, UIKit.UITableView tableView, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIDragPreviewParameters GetDragPreviewParameters(class UIKit.IUITableViewDragDelegate This, class UIKit.UITableView tableView, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIDragPreviewParameters</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDragDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>Gets the preview parameters for the item at the specified index path.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDragDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDragDelegate_Extensions.GetDragPreviewParameters(MonoTouch.UIKit.IUITableViewDragDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDragDelegate" />
      </Targets>
      <Member MemberName="GetItemsForAddingToDragSession">
        <MemberSignature Language="C#" Value="public static UIKit.UIDragItem[] GetItemsForAddingToDragSession (this UIKit.IUITableViewDragDelegate This, UIKit.UITableView tableView, UIKit.IUIDragSession session, Foundation.NSIndexPath indexPath, CoreGraphics.CGPoint point);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIDragItem[] GetItemsForAddingToDragSession(class UIKit.IUITableViewDragDelegate This, class UIKit.UITableView tableView, class UIKit.IUIDragSession session, class Foundation.NSIndexPath indexPath, valuetype CoreGraphics.CGPoint point) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIDragItem[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDragDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDragSession" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
          <Parameter Name="point" Type="MonoTouch.CoreGraphics.CGPoint" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">To be added.</param>
          <param name="session">To be added.</param>
          <param name="indexPath">To be added.</param>
          <param name="point">To be added.</param>
          <summary>Adds the items at the index path to the drag session.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDragDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDragDelegate_Extensions.GetItemsForAddingToDragSession(MonoTouch.UIKit.IUITableViewDragDelegate,MonoTouch.UIKit.UITableView,MonoTouch.UIKit.IUIDragSession,MonoTouch.Foundation.NSIndexPath,MonoTouch.CoreGraphics.CGPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDropDelegate" />
      </Targets>
      <Member MemberName="CanHandleDropSession">
        <MemberSignature Language="C#" Value="public static bool CanHandleDropSession (this UIKit.IUITableViewDropDelegate This, UIKit.UITableView tableView, UIKit.IUIDropSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanHandleDropSession(class UIKit.IUITableViewDropDelegate This, class UIKit.UITableView tableView, class UIKit.IUIDropSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDropDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDropSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">To be added.</param>
          <param name="session">To be added.</param>
          <summary>Returns a Boolean value that tells whether the table view can handle drops from the data in the session.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDropDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDropDelegate_Extensions.CanHandleDropSession(MonoTouch.UIKit.IUITableViewDropDelegate,MonoTouch.UIKit.UITableView,MonoTouch.UIKit.IUIDropSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDropDelegate" />
      </Targets>
      <Member MemberName="DropSessionDidEnd">
        <MemberSignature Language="C#" Value="public static void DropSessionDidEnd (this UIKit.IUITableViewDropDelegate This, UIKit.UITableView tableView, UIKit.IUIDropSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DropSessionDidEnd(class UIKit.IUITableViewDropDelegate This, class UIKit.UITableView tableView, class UIKit.IUIDropSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDropDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDropSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">To be added.</param>
          <param name="session">To be added.</param>
          <summary>Method that is called when the drop session ends.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDropDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDropDelegate_Extensions.DropSessionDidEnd(MonoTouch.UIKit.IUITableViewDropDelegate,MonoTouch.UIKit.UITableView,MonoTouch.UIKit.IUIDropSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDropDelegate" />
      </Targets>
      <Member MemberName="DropSessionDidEnter">
        <MemberSignature Language="C#" Value="public static void DropSessionDidEnter (this UIKit.IUITableViewDropDelegate This, UIKit.UITableView tableView, UIKit.IUIDropSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DropSessionDidEnter(class UIKit.IUITableViewDropDelegate This, class UIKit.UITableView tableView, class UIKit.IUIDropSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDropDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDropSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">To be added.</param>
          <param name="session">To be added.</param>
          <summary>Method that is called when the drop point enters the table view.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDropDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDropDelegate_Extensions.DropSessionDidEnter(MonoTouch.UIKit.IUITableViewDropDelegate,MonoTouch.UIKit.UITableView,MonoTouch.UIKit.IUIDropSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDropDelegate" />
      </Targets>
      <Member MemberName="DropSessionDidExit">
        <MemberSignature Language="C#" Value="public static void DropSessionDidExit (this UIKit.IUITableViewDropDelegate This, UIKit.UITableView tableView, UIKit.IUIDropSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DropSessionDidExit(class UIKit.IUITableViewDropDelegate This, class UIKit.UITableView tableView, class UIKit.IUIDropSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDropDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDropSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">To be added.</param>
          <param name="session">To be added.</param>
          <summary>Method that is called when the drop point leaves the table view.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDropDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDropDelegate_Extensions.DropSessionDidExit(MonoTouch.UIKit.IUITableViewDropDelegate,MonoTouch.UIKit.UITableView,MonoTouch.UIKit.IUIDropSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDropDelegate" />
      </Targets>
      <Member MemberName="DropSessionDidUpdate">
        <MemberSignature Language="C#" Value="public static UIKit.UITableViewDropProposal DropSessionDidUpdate (this UIKit.IUITableViewDropDelegate This, UIKit.UITableView tableView, UIKit.IUIDropSession session, Foundation.NSIndexPath destinationIndexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UITableViewDropProposal DropSessionDidUpdate(class UIKit.IUITableViewDropDelegate This, class UIKit.UITableView tableView, class UIKit.IUIDropSession session, class Foundation.NSIndexPath destinationIndexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UITableViewDropProposal</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDropDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDropSession" />
          <Parameter Name="destinationIndexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">To be added.</param>
          <param name="session">To be added.</param>
          <param name="destinationIndexPath">To be added.This parameter can be .</param>
          <summary>Method that is called when the drop point over the table view changes.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDropDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDropDelegate_Extensions.DropSessionDidUpdate(MonoTouch.UIKit.IUITableViewDropDelegate,MonoTouch.UIKit.UITableView,MonoTouch.UIKit.IUIDropSession,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDropDelegate" />
      </Targets>
      <Member MemberName="GetDropPreviewParameters">
        <MemberSignature Language="C#" Value="public static UIKit.UIDragPreviewParameters GetDropPreviewParameters (this UIKit.IUITableViewDropDelegate This, UIKit.UITableView tableView, Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIDragPreviewParameters GetDropPreviewParameters(class UIKit.IUITableViewDropDelegate This, class UIKit.UITableView tableView, class Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIDragPreviewParameters</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDropDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>Returns the drag preview parameters for the item at the specified index path.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDropDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDropDelegate_Extensions.GetDropPreviewParameters(MonoTouch.UIKit.IUITableViewDropDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextDocumentProxy" />
      </Targets>
      <Member MemberName="GetDocumentIdentifier">
        <MemberSignature Language="C#" Value="public static Foundation.NSUuid GetDocumentIdentifier (this UIKit.IUITextDocumentProxy This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSUuid GetDocumentIdentifier(class UIKit.IUITextDocumentProxy This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSUuid</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextDocumentProxy" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the unique ID for the document.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextDocumentProxy_Extensions" Member="M:MonoTouch.UIKit.UITextDocumentProxy_Extensions.GetDocumentIdentifier(MonoTouch.UIKit.IUITextDocumentProxy)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextDocumentProxy" />
      </Targets>
      <Member MemberName="GetDocumentInputMode">
        <MemberSignature Language="C#" Value="public static UIKit.UITextInputMode GetDocumentInputMode (this UIKit.IUITextDocumentProxy This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UITextInputMode GetDocumentInputMode(class UIKit.IUITextDocumentProxy This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UITextInputMode</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextDocumentProxy" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the keyboard input mode.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextDocumentProxy_Extensions" Member="M:MonoTouch.UIKit.UITextDocumentProxy_Extensions.GetDocumentInputMode(MonoTouch.UIKit.IUITextDocumentProxy)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextDocumentProxy" />
      </Targets>
      <Member MemberName="GetSelectedText">
        <MemberSignature Language="C#" Value="public static string GetSelectedText (this UIKit.IUITextDocumentProxy This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetSelectedText(class UIKit.IUITextDocumentProxy This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextDocumentProxy" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns  the selected text.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextDocumentProxy_Extensions" Member="M:MonoTouch.UIKit.UITextDocumentProxy_Extensions.GetSelectedText(MonoTouch.UIKit.IUITextDocumentProxy)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextDragDelegate" />
      </Targets>
      <Member MemberName="DragSessionDidEnd">
        <MemberSignature Language="C#" Value="public static void DragSessionDidEnd (this UIKit.IUITextDragDelegate This, UIKit.IUITextDraggable textDraggableView, UIKit.IUIDragSession session, UIKit.UIDropOperation operation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DragSessionDidEnd(class UIKit.IUITextDragDelegate This, class UIKit.IUITextDraggable textDraggableView, class UIKit.IUIDragSession session, valuetype UIKit.UIDropOperation operation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextDragDelegate" RefType="this" />
          <Parameter Name="textDraggableView" Type="MonoTouch.UIKit.IUITextDraggable" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDragSession" />
          <Parameter Name="operation" Type="MonoTouch.UIKit.UIDropOperation" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textDraggableView">To be added.</param>
          <param name="session">To be added.</param>
          <param name="operation">To be added.</param>
          <summary>Method that is called when the user cancels or completes the drag session.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextDragDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextDragDelegate_Extensions.DragSessionDidEnd(MonoTouch.UIKit.IUITextDragDelegate,MonoTouch.UIKit.IUITextDraggable,MonoTouch.UIKit.IUIDragSession,MonoTouch.UIKit.UIDropOperation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextDragDelegate" />
      </Targets>
      <Member MemberName="DragSessionWillBegin">
        <MemberSignature Language="C#" Value="public static void DragSessionWillBegin (this UIKit.IUITextDragDelegate This, UIKit.IUITextDraggable textDraggableView, UIKit.IUIDragSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DragSessionWillBegin(class UIKit.IUITextDragDelegate This, class UIKit.IUITextDraggable textDraggableView, class UIKit.IUIDragSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextDragDelegate" RefType="this" />
          <Parameter Name="textDraggableView" Type="MonoTouch.UIKit.IUITextDraggable" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDragSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textDraggableView">To be added.</param>
          <param name="session">To be added.</param>
          <summary>Method that is called just before a drag session begins.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextDragDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextDragDelegate_Extensions.DragSessionWillBegin(MonoTouch.UIKit.IUITextDragDelegate,MonoTouch.UIKit.IUITextDraggable,MonoTouch.UIKit.IUIDragSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextDragDelegate" />
      </Targets>
      <Member MemberName="GetItemsForDrag">
        <MemberSignature Language="C#" Value="public static UIKit.UIDragItem[] GetItemsForDrag (this UIKit.IUITextDragDelegate This, UIKit.IUITextDraggable textDraggableView, UIKit.IUITextDragRequest dragRequest);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIDragItem[] GetItemsForDrag(class UIKit.IUITextDragDelegate This, class UIKit.IUITextDraggable textDraggableView, class UIKit.IUITextDragRequest dragRequest) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIDragItem[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextDragDelegate" RefType="this" />
          <Parameter Name="textDraggableView" Type="MonoTouch.UIKit.IUITextDraggable" />
          <Parameter Name="dragRequest" Type="MonoTouch.UIKit.IUITextDragRequest" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textDraggableView">To be added.</param>
          <param name="dragRequest">To be added.</param>
          <summary>Method that is called to get custom drag items.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextDragDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextDragDelegate_Extensions.GetItemsForDrag(MonoTouch.UIKit.IUITextDragDelegate,MonoTouch.UIKit.IUITextDraggable,MonoTouch.UIKit.IUITextDragRequest)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextDragDelegate" />
      </Targets>
      <Member MemberName="GetPreviewForLiftingItem">
        <MemberSignature Language="C#" Value="public static UIKit.UITargetedDragPreview GetPreviewForLiftingItem (this UIKit.IUITextDragDelegate This, UIKit.IUITextDraggable textDraggableView, UIKit.UIDragItem item, UIKit.IUIDragSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UITargetedDragPreview GetPreviewForLiftingItem(class UIKit.IUITextDragDelegate This, class UIKit.IUITextDraggable textDraggableView, class UIKit.UIDragItem item, class UIKit.IUIDragSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UITargetedDragPreview</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextDragDelegate" RefType="this" />
          <Parameter Name="textDraggableView" Type="MonoTouch.UIKit.IUITextDraggable" />
          <Parameter Name="item" Type="MonoTouch.UIKit.UIDragItem" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDragSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textDraggableView">To be added.</param>
          <param name="item">To be added.</param>
          <param name="session">To be added.</param>
          <summary>Method that is called to get a preview for the item that is lifting.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextDragDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextDragDelegate_Extensions.GetPreviewForLiftingItem(MonoTouch.UIKit.IUITextDragDelegate,MonoTouch.UIKit.IUITextDraggable,MonoTouch.UIKit.UIDragItem,MonoTouch.UIKit.IUIDragSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextDragDelegate" />
      </Targets>
      <Member MemberName="WillAnimateLift">
        <MemberSignature Language="C#" Value="public static void WillAnimateLift (this UIKit.IUITextDragDelegate This, UIKit.IUITextDraggable textDraggableView, UIKit.IUIDragAnimating animator, UIKit.IUIDragSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillAnimateLift(class UIKit.IUITextDragDelegate This, class UIKit.IUITextDraggable textDraggableView, class UIKit.IUIDragAnimating animator, class UIKit.IUIDragSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextDragDelegate" RefType="this" />
          <Parameter Name="textDraggableView" Type="MonoTouch.UIKit.IUITextDraggable" />
          <Parameter Name="animator" Type="MonoTouch.UIKit.IUIDragAnimating" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDragSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textDraggableView">To be added.</param>
          <param name="animator">To be added.</param>
          <param name="session">To be added.</param>
          <summary>Method that is called just before an item lift is animated.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextDragDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextDragDelegate_Extensions.WillAnimateLift(MonoTouch.UIKit.IUITextDragDelegate,MonoTouch.UIKit.IUITextDraggable,MonoTouch.UIKit.IUIDragAnimating,MonoTouch.UIKit.IUIDragSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextDropDelegate" />
      </Targets>
      <Member MemberName="DropSessionDidEnd">
        <MemberSignature Language="C#" Value="public static void DropSessionDidEnd (this UIKit.IUITextDropDelegate This, UIKit.IUITextDroppable textDroppableView, UIKit.IUIDropSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DropSessionDidEnd(class UIKit.IUITextDropDelegate This, class UIKit.IUITextDroppable textDroppableView, class UIKit.IUIDropSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextDropDelegate" RefType="this" />
          <Parameter Name="textDroppableView" Type="MonoTouch.UIKit.IUITextDroppable" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDropSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textDroppableView">To be added.</param>
          <param name="session">To be added.</param>
          <summary>Method that is called when the drop session ends.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextDropDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextDropDelegate_Extensions.DropSessionDidEnd(MonoTouch.UIKit.IUITextDropDelegate,MonoTouch.UIKit.IUITextDroppable,MonoTouch.UIKit.IUIDropSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextDropDelegate" />
      </Targets>
      <Member MemberName="DropSessionDidEnter">
        <MemberSignature Language="C#" Value="public static void DropSessionDidEnter (this UIKit.IUITextDropDelegate This, UIKit.IUITextDroppable textDroppableView, UIKit.IUIDropSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DropSessionDidEnter(class UIKit.IUITextDropDelegate This, class UIKit.IUITextDroppable textDroppableView, class UIKit.IUIDropSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextDropDelegate" RefType="this" />
          <Parameter Name="textDroppableView" Type="MonoTouch.UIKit.IUITextDroppable" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDropSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textDroppableView">To be added.</param>
          <param name="session">To be added.</param>
          <summary>Method that is called when the drop point enters the text view.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextDropDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextDropDelegate_Extensions.DropSessionDidEnter(MonoTouch.UIKit.IUITextDropDelegate,MonoTouch.UIKit.IUITextDroppable,MonoTouch.UIKit.IUIDropSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextDropDelegate" />
      </Targets>
      <Member MemberName="DropSessionDidExit">
        <MemberSignature Language="C#" Value="public static void DropSessionDidExit (this UIKit.IUITextDropDelegate This, UIKit.IUITextDroppable textDroppableView, UIKit.IUIDropSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DropSessionDidExit(class UIKit.IUITextDropDelegate This, class UIKit.IUITextDroppable textDroppableView, class UIKit.IUIDropSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextDropDelegate" RefType="this" />
          <Parameter Name="textDroppableView" Type="MonoTouch.UIKit.IUITextDroppable" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDropSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textDroppableView">To be added.</param>
          <param name="session">To be added.</param>
          <summary>Method that is called when the drop point leaves the text view.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextDropDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextDropDelegate_Extensions.DropSessionDidExit(MonoTouch.UIKit.IUITextDropDelegate,MonoTouch.UIKit.IUITextDroppable,MonoTouch.UIKit.IUIDropSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextDropDelegate" />
      </Targets>
      <Member MemberName="DropSessionDidUpdate">
        <MemberSignature Language="C#" Value="public static void DropSessionDidUpdate (this UIKit.IUITextDropDelegate This, UIKit.IUITextDroppable textDroppableView, UIKit.IUIDropSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DropSessionDidUpdate(class UIKit.IUITextDropDelegate This, class UIKit.IUITextDroppable textDroppableView, class UIKit.IUIDropSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextDropDelegate" RefType="this" />
          <Parameter Name="textDroppableView" Type="MonoTouch.UIKit.IUITextDroppable" />
          <Parameter Name="session" Type="MonoTouch.UIKit.IUIDropSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textDroppableView">To be added.</param>
          <param name="session">To be added.</param>
          <summary>Method that is called when the drop point over the text view changes.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextDropDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextDropDelegate_Extensions.DropSessionDidUpdate(MonoTouch.UIKit.IUITextDropDelegate,MonoTouch.UIKit.IUITextDroppable,MonoTouch.UIKit.IUIDropSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextDropDelegate" />
      </Targets>
      <Member MemberName="GetPreviewForDroppingAllItems">
        <MemberSignature Language="C#" Value="public static UIKit.UITargetedDragPreview GetPreviewForDroppingAllItems (this UIKit.IUITextDropDelegate This, UIKit.IUITextDroppable textDroppableView, UIKit.UITargetedDragPreview defaultPreview);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UITargetedDragPreview GetPreviewForDroppingAllItems(class UIKit.IUITextDropDelegate This, class UIKit.IUITextDroppable textDroppableView, class UIKit.UITargetedDragPreview defaultPreview) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UITargetedDragPreview</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextDropDelegate" RefType="this" />
          <Parameter Name="textDroppableView" Type="MonoTouch.UIKit.IUITextDroppable" />
          <Parameter Name="defaultPreview" Type="MonoTouch.UIKit.UITargetedDragPreview" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textDroppableView">To be added.</param>
          <param name="defaultPreview">To be added.</param>
          <summary>Method that is called once to get the drag preview to use for dropping all the items.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextDropDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextDropDelegate_Extensions.GetPreviewForDroppingAllItems(MonoTouch.UIKit.IUITextDropDelegate,MonoTouch.UIKit.IUITextDroppable,MonoTouch.UIKit.UITargetedDragPreview)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextDropDelegate" />
      </Targets>
      <Member MemberName="GetProposalForDrop">
        <MemberSignature Language="C#" Value="public static UIKit.UITextDropProposal GetProposalForDrop (this UIKit.IUITextDropDelegate This, UIKit.IUITextDroppable textDroppableView, UIKit.IUITextDropRequest drop);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UITextDropProposal GetProposalForDrop(class UIKit.IUITextDropDelegate This, class UIKit.IUITextDroppable textDroppableView, class UIKit.IUITextDropRequest drop) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UITextDropProposal</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextDropDelegate" RefType="this" />
          <Parameter Name="textDroppableView" Type="MonoTouch.UIKit.IUITextDroppable" />
          <Parameter Name="drop" Type="MonoTouch.UIKit.IUITextDropRequest" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textDroppableView">To be added.</param>
          <param name="drop">To be added.</param>
          <summary>Method that is called to get the drop proposal.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextDropDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextDropDelegate_Extensions.GetProposalForDrop(MonoTouch.UIKit.IUITextDropDelegate,MonoTouch.UIKit.IUITextDroppable,MonoTouch.UIKit.IUITextDropRequest)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextDropDelegate" />
      </Targets>
      <Member MemberName="WillBecomeEditable">
        <MemberSignature Language="C#" Value="public static UIKit.UITextDropEditability WillBecomeEditable (this UIKit.IUITextDropDelegate This, UIKit.IUITextDroppable textDroppableView, UIKit.IUITextDropRequest drop);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UITextDropEditability WillBecomeEditable(class UIKit.IUITextDropDelegate This, class UIKit.IUITextDroppable textDroppableView, class UIKit.IUITextDropRequest drop) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UITextDropEditability</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextDropDelegate" RefType="this" />
          <Parameter Name="textDroppableView" Type="MonoTouch.UIKit.IUITextDroppable" />
          <Parameter Name="drop" Type="MonoTouch.UIKit.IUITextDropRequest" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textDroppableView">To be added.</param>
          <param name="drop">To be added.</param>
          <summary>Method that is called to determine whether a non-editable text view can accept drops.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextDropDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextDropDelegate_Extensions.WillBecomeEditable(MonoTouch.UIKit.IUITextDropDelegate,MonoTouch.UIKit.IUITextDroppable,MonoTouch.UIKit.IUITextDropRequest)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextDropDelegate" />
      </Targets>
      <Member MemberName="WillPerformDrop">
        <MemberSignature Language="C#" Value="public static void WillPerformDrop (this UIKit.IUITextDropDelegate This, UIKit.IUITextDroppable textDroppableView, UIKit.IUITextDropRequest drop);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillPerformDrop(class UIKit.IUITextDropDelegate This, class UIKit.IUITextDroppable textDroppableView, class UIKit.IUITextDropRequest drop) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextDropDelegate" RefType="this" />
          <Parameter Name="textDroppableView" Type="MonoTouch.UIKit.IUITextDroppable" />
          <Parameter Name="drop" Type="MonoTouch.UIKit.IUITextDropRequest" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textDroppableView">To be added.</param>
          <param name="drop">To be added.</param>
          <summary>Method that is called just before the drop is performed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextDropDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextDropDelegate_Extensions.WillPerformDrop(MonoTouch.UIKit.IUITextDropDelegate,MonoTouch.UIKit.IUITextDroppable,MonoTouch.UIKit.IUITextDropRequest)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextFieldDelegate" />
      </Targets>
      <Member MemberName="EditingEnded">
        <MemberSignature Language="C#" Value="public static void EditingEnded (this UIKit.IUITextFieldDelegate This, UIKit.UITextField textField);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EditingEnded(class UIKit.IUITextFieldDelegate This, class UIKit.UITextField textField) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextFieldDelegate" RefType="this" />
          <Parameter Name="textField" Type="MonoTouch.UIKit.UITextField" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textField">To be added.</param>
          <summary>Indicates that editing has ended in the specified text field.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextFieldDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextFieldDelegate_Extensions.EditingEnded(MonoTouch.UIKit.IUITextFieldDelegate,MonoTouch.UIKit.UITextField)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextFieldDelegate" />
      </Targets>
      <Member MemberName="EditingEnded">
        <MemberSignature Language="C#" Value="public static void EditingEnded (this UIKit.IUITextFieldDelegate This, UIKit.UITextField textField, UIKit.UITextFieldDidEndEditingReason reason);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EditingEnded(class UIKit.IUITextFieldDelegate This, class UIKit.UITextField textField, valuetype UIKit.UITextFieldDidEndEditingReason reason) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextFieldDelegate" RefType="this" />
          <Parameter Name="textField" Type="MonoTouch.UIKit.UITextField" />
          <Parameter Name="reason" Type="MonoTouch.UIKit.UITextFieldDidEndEditingReason" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textField">To be added.</param>
          <param name="reason">To be added.</param>
          <summary>Indicates that editing has ended in the specified text field for the specified reason.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextFieldDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextFieldDelegate_Extensions.EditingEnded(MonoTouch.UIKit.IUITextFieldDelegate,MonoTouch.UIKit.UITextField,MonoTouch.UIKit.UITextFieldDidEndEditingReason)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextFieldDelegate" />
      </Targets>
      <Member MemberName="EditingStarted">
        <MemberSignature Language="C#" Value="public static void EditingStarted (this UIKit.IUITextFieldDelegate This, UIKit.UITextField textField);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EditingStarted(class UIKit.IUITextFieldDelegate This, class UIKit.UITextField textField) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextFieldDelegate" RefType="this" />
          <Parameter Name="textField" Type="MonoTouch.UIKit.UITextField" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textField">To be added.</param>
          <summary>Indicates that editing has begun on the specified text field.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextFieldDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextFieldDelegate_Extensions.EditingStarted(MonoTouch.UIKit.IUITextFieldDelegate,MonoTouch.UIKit.UITextField)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextFieldDelegate" />
      </Targets>
      <Member MemberName="ShouldBeginEditing">
        <MemberSignature Language="C#" Value="public static bool ShouldBeginEditing (this UIKit.IUITextFieldDelegate This, UIKit.UITextField textField);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldBeginEditing(class UIKit.IUITextFieldDelegate This, class UIKit.UITextField textField) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextFieldDelegate" RefType="this" />
          <Parameter Name="textField" Type="MonoTouch.UIKit.UITextField" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textField">To be added.</param>
          <summary>Whether editing should begin in the specified text field.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextFieldDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextFieldDelegate_Extensions.ShouldBeginEditing(MonoTouch.UIKit.IUITextFieldDelegate,MonoTouch.UIKit.UITextField)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextFieldDelegate" />
      </Targets>
      <Member MemberName="ShouldChangeCharacters">
        <MemberSignature Language="C#" Value="public static bool ShouldChangeCharacters (this UIKit.IUITextFieldDelegate This, UIKit.UITextField textField, Foundation.NSRange range, string replacementString);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldChangeCharacters(class UIKit.IUITextFieldDelegate This, class UIKit.UITextField textField, valuetype Foundation.NSRange range, string replacementString) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextFieldDelegate" RefType="this" />
          <Parameter Name="textField" Type="MonoTouch.UIKit.UITextField" />
          <Parameter Name="range" Type="MonoTouch.Foundation.NSRange" />
          <Parameter Name="replacementString" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textField">To be added.</param>
          <param name="range">To be added.</param>
          <param name="replacementString">To be added.</param>
          <summary>Whether the specified text should be changed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextFieldDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextFieldDelegate_Extensions.ShouldChangeCharacters(MonoTouch.UIKit.IUITextFieldDelegate,MonoTouch.UIKit.UITextField,MonoTouch.Foundation.NSRange,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextFieldDelegate" />
      </Targets>
      <Member MemberName="ShouldClear">
        <MemberSignature Language="C#" Value="public static bool ShouldClear (this UIKit.IUITextFieldDelegate This, UIKit.UITextField textField);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldClear(class UIKit.IUITextFieldDelegate This, class UIKit.UITextField textField) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextFieldDelegate" RefType="this" />
          <Parameter Name="textField" Type="MonoTouch.UIKit.UITextField" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textField">To be added.</param>
          <summary>Whether the specified text field's current contents should be removed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextFieldDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextFieldDelegate_Extensions.ShouldClear(MonoTouch.UIKit.IUITextFieldDelegate,MonoTouch.UIKit.UITextField)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextFieldDelegate" />
      </Targets>
      <Member MemberName="ShouldEndEditing">
        <MemberSignature Language="C#" Value="public static bool ShouldEndEditing (this UIKit.IUITextFieldDelegate This, UIKit.UITextField textField);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldEndEditing(class UIKit.IUITextFieldDelegate This, class UIKit.UITextField textField) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextFieldDelegate" RefType="this" />
          <Parameter Name="textField" Type="MonoTouch.UIKit.UITextField" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textField">To be added.</param>
          <summary>Whether editing should stop in the specified text field.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextFieldDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextFieldDelegate_Extensions.ShouldEndEditing(MonoTouch.UIKit.IUITextFieldDelegate,MonoTouch.UIKit.UITextField)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextFieldDelegate" />
      </Targets>
      <Member MemberName="ShouldReturn">
        <MemberSignature Language="C#" Value="public static bool ShouldReturn (this UIKit.IUITextFieldDelegate This, UIKit.UITextField textField);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldReturn(class UIKit.IUITextFieldDelegate This, class UIKit.UITextField textField) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextFieldDelegate" RefType="this" />
          <Parameter Name="textField" Type="MonoTouch.UIKit.UITextField" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textField">To be added.</param>
          <summary>Whether the text field should process the pressing of the return button.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextFieldDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextFieldDelegate_Extensions.ShouldReturn(MonoTouch.UIKit.IUITextFieldDelegate,MonoTouch.UIKit.UITextField)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInput" />
      </Targets>
      <Member MemberName="BeginFloatingCursor">
        <MemberSignature Language="C#" Value="public static void BeginFloatingCursor (this UIKit.IUITextInput This, CoreGraphics.CGPoint point);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BeginFloatingCursor(class UIKit.IUITextInput This, valuetype CoreGraphics.CGPoint point) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInput" RefType="this" />
          <Parameter Name="point" Type="MonoTouch.CoreGraphics.CGPoint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="point">To be added.</param>
          <summary>Begins displaying the floating cursor at the specified <paramref name="point" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInput_Extensions" Member="M:MonoTouch.UIKit.UITextInput_Extensions.BeginFloatingCursor(MonoTouch.UIKit.IUITextInput,MonoTouch.CoreGraphics.CGPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInput" />
      </Targets>
      <Member MemberName="DictationRecognitionFailed">
        <MemberSignature Language="C#" Value="public static void DictationRecognitionFailed (this UIKit.IUITextInput This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DictationRecognitionFailed(class UIKit.IUITextInput This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInput" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>The recognition of dictation failed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInput_Extensions" Member="M:MonoTouch.UIKit.UITextInput_Extensions.DictationRecognitionFailed(MonoTouch.UIKit.IUITextInput)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInput" />
      </Targets>
      <Member MemberName="DictationRecordingDidEnd">
        <MemberSignature Language="C#" Value="public static void DictationRecordingDidEnd (this UIKit.IUITextInput This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DictationRecordingDidEnd(class UIKit.IUITextInput This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInput" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>The recording of dictation ended.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInput_Extensions" Member="M:MonoTouch.UIKit.UITextInput_Extensions.DictationRecordingDidEnd(MonoTouch.UIKit.IUITextInput)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInput" />
      </Targets>
      <Member MemberName="EndFloatingCursor">
        <MemberSignature Language="C#" Value="public static void EndFloatingCursor (this UIKit.IUITextInput This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndFloatingCursor(class UIKit.IUITextInput This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInput" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Ends display of the floating cursor.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInput_Extensions" Member="M:MonoTouch.UIKit.UITextInput_Extensions.EndFloatingCursor(MonoTouch.UIKit.IUITextInput)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInput" />
      </Targets>
      <Member MemberName="GetCharacterOffsetOfPosition">
        <MemberSignature Language="C#" Value="public static nint GetCharacterOffsetOfPosition (this UIKit.IUITextInput This, UIKit.UITextPosition position, UIKit.UITextRange range);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nint GetCharacterOffsetOfPosition(class UIKit.IUITextInput This, class UIKit.UITextPosition position, class UIKit.UITextRange range) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInput" RefType="this" />
          <Parameter Name="position" Type="MonoTouch.UIKit.UITextPosition" />
          <Parameter Name="range" Type="MonoTouch.UIKit.UITextRange" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="position">To be added.</param>
          <param name="range">To be added.</param>
          <summary>Calculates and returns the offset into <paramref name="range" /> of the character that is in <paramref name="position" /> in the document.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInput_Extensions" Member="M:MonoTouch.UIKit.UITextInput_Extensions.GetCharacterOffsetOfPosition(MonoTouch.UIKit.IUITextInput,MonoTouch.UIKit.UITextPosition,MonoTouch.UIKit.UITextRange)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInput" />
      </Targets>
      <Member MemberName="GetFrameForDictationResultPlaceholder">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGRect GetFrameForDictationResultPlaceholder (this UIKit.IUITextInput This, Foundation.NSObject placeholder);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGRect GetFrameForDictationResultPlaceholder(class UIKit.IUITextInput This, class Foundation.NSObject placeholder) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInput" RefType="this" />
          <Parameter Name="placeholder" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="placeholder">To be added.</param>
          <summary>Returns the rectangle in which to display the animated dictation result placeholder.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInput_Extensions" Member="M:MonoTouch.UIKit.UITextInput_Extensions.GetFrameForDictationResultPlaceholder(MonoTouch.UIKit.IUITextInput,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInput" />
      </Targets>
      <Member MemberName="GetPosition">
        <MemberSignature Language="C#" Value="public static UIKit.UITextPosition GetPosition (this UIKit.IUITextInput This, UIKit.UITextRange withinRange, nint atCharacterOffset);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UITextPosition GetPosition(class UIKit.IUITextInput This, class UIKit.UITextRange withinRange, valuetype System.nint atCharacterOffset) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UITextPosition</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInput" RefType="this" />
          <Parameter Name="withinRange" Type="MonoTouch.UIKit.UITextRange" />
          <Parameter Name="atCharacterOffset" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="withinRange">To be added.</param>
          <param name="atCharacterOffset">To be added.</param>
          <summary>Calculates and returns the absolute position in the document that is <paramref name="atCharacterOffset" /> characters into <paramref name="withinRange" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInput_Extensions" Member="M:MonoTouch.UIKit.UITextInput_Extensions.GetPosition(MonoTouch.UIKit.IUITextInput,MonoTouch.UIKit.UITextRange,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInput" />
      </Targets>
      <Member MemberName="GetSelectionAffinity">
        <MemberSignature Language="C#" Value="public static UIKit.UITextStorageDirection GetSelectionAffinity (this UIKit.IUITextInput This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UITextStorageDirection GetSelectionAffinity(class UIKit.IUITextInput This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UITextStorageDirection</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInput" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Stops displaying the floating cursor.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInput_Extensions" Member="M:MonoTouch.UIKit.UITextInput_Extensions.GetSelectionAffinity(MonoTouch.UIKit.IUITextInput)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInput" />
      </Targets>
      <Member MemberName="GetTextInputView">
        <MemberSignature Language="C#" Value="public static UIKit.UIView GetTextInputView (this UIKit.IUITextInput This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIView GetTextInputView(class UIKit.IUITextInput This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIView</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInput" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the input view that provides the coordinate system for geometric operations within the text input.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInput_Extensions" Member="M:MonoTouch.UIKit.UITextInput_Extensions.GetTextInputView(MonoTouch.UIKit.IUITextInput)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInput" />
      </Targets>
      <Member MemberName="GetTextStyling">
        <MemberSignature Language="C#" Value="public static Foundation.NSDictionary GetTextStyling (this UIKit.IUITextInput This, UIKit.UITextPosition atPosition, UIKit.UITextStorageDirection inDirection);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSDictionary GetTextStyling(class UIKit.IUITextInput This, class UIKit.UITextPosition atPosition, valuetype UIKit.UITextStorageDirection inDirection) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSDictionary</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInput" RefType="this" />
          <Parameter Name="atPosition" Type="MonoTouch.UIKit.UITextPosition" />
          <Parameter Name="inDirection" Type="MonoTouch.UIKit.UITextStorageDirection" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="atPosition">To be added.</param>
          <param name="inDirection">To be added.</param>
          <summary>Returns a dictionary of style properties for text at the <paramref name="atPosition" /> position.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInput_Extensions" Member="M:MonoTouch.UIKit.UITextInput_Extensions.GetTextStyling(MonoTouch.UIKit.IUITextInput,MonoTouch.UIKit.UITextPosition,MonoTouch.UIKit.UITextStorageDirection)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInput" />
      </Targets>
      <Member MemberName="InsertDictationResult">
        <MemberSignature Language="C#" Value="public static void InsertDictationResult (this UIKit.IUITextInput This, Foundation.NSArray dictationResult);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InsertDictationResult(class UIKit.IUITextInput This, class Foundation.NSArray dictationResult) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInput" RefType="this" />
          <Parameter Name="dictationResult" Type="MonoTouch.Foundation.NSArray" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="dictationResult">To be added.</param>
          <summary>Inserts a dictation result at the current position.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInput_Extensions" Member="M:MonoTouch.UIKit.UITextInput_Extensions.InsertDictationResult(MonoTouch.UIKit.IUITextInput,MonoTouch.Foundation.NSArray)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInput" />
      </Targets>
      <Member MemberName="InsertDictationResultPlaceholder">
        <MemberSignature Language="C#" Value="public static Foundation.NSObject InsertDictationResultPlaceholder (this UIKit.IUITextInput This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSObject InsertDictationResultPlaceholder(class UIKit.IUITextInput This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSObject</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInput" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the placeholder object to use before dictation results are finished being generated.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInput_Extensions" Member="M:MonoTouch.UIKit.UITextInput_Extensions.InsertDictationResultPlaceholder(MonoTouch.UIKit.IUITextInput)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInput" />
      </Targets>
      <Member MemberName="RemoveDictationResultPlaceholder">
        <MemberSignature Language="C#" Value="public static void RemoveDictationResultPlaceholder (this UIKit.IUITextInput This, Foundation.NSObject placeholder, bool willInsertResult);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveDictationResultPlaceholder(class UIKit.IUITextInput This, class Foundation.NSObject placeholder, bool willInsertResult) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInput" RefType="this" />
          <Parameter Name="placeholder" Type="MonoTouch.Foundation.NSObject" />
          <Parameter Name="willInsertResult" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="placeholder">To be added.</param>
          <param name="willInsertResult">To be added.</param>
          <summary>The <paramref name="placeholder" /> is no longer needed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInput_Extensions" Member="M:MonoTouch.UIKit.UITextInput_Extensions.RemoveDictationResultPlaceholder(MonoTouch.UIKit.IUITextInput,MonoTouch.Foundation.NSObject,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInput" />
      </Targets>
      <Member MemberName="SetSelectionAffinity">
        <MemberSignature Language="C#" Value="public static void SetSelectionAffinity (this UIKit.IUITextInput This, UIKit.UITextStorageDirection value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetSelectionAffinity(class UIKit.IUITextInput This, valuetype UIKit.UITextStorageDirection value) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInput" RefType="this" />
          <Parameter Name="value" Type="MonoTouch.UIKit.UITextStorageDirection" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="value">To be added.</param>
          <summary>Sets a value that controls whether the cursor is displayed at the start of the last line or end of the second-to-last line of a multiline selection.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInput_Extensions" Member="M:MonoTouch.UIKit.UITextInput_Extensions.SetSelectionAffinity(MonoTouch.UIKit.IUITextInput,MonoTouch.UIKit.UITextStorageDirection)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInput" />
      </Targets>
      <Member MemberName="ShouldChangeTextInRange">
        <MemberSignature Language="C#" Value="public static bool ShouldChangeTextInRange (this UIKit.IUITextInput This, UIKit.UITextRange inRange, string replacementText);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldChangeTextInRange(class UIKit.IUITextInput This, class UIKit.UITextRange inRange, string replacementText) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInput" RefType="this" />
          <Parameter Name="inRange" Type="MonoTouch.UIKit.UITextRange" />
          <Parameter Name="replacementText" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="inRange">To be added.</param>
          <param name="replacementText">To be added.</param>
          <summary>Asks whether the text in <paramref name="inRange" /> should be replaced with <paramref name="replacementText" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInput_Extensions" Member="M:MonoTouch.UIKit.UITextInput_Extensions.ShouldChangeTextInRange(MonoTouch.UIKit.IUITextInput,MonoTouch.UIKit.UITextRange,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInput" />
      </Targets>
      <Member MemberName="UpdateFloatingCursor">
        <MemberSignature Language="C#" Value="public static void UpdateFloatingCursor (this UIKit.IUITextInput This, CoreGraphics.CGPoint point);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateFloatingCursor(class UIKit.IUITextInput This, valuetype CoreGraphics.CGPoint point) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInput" RefType="this" />
          <Parameter Name="point" Type="MonoTouch.CoreGraphics.CGPoint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="point">To be added.</param>
          <summary>Moves the floating curor to the specified <paramref name="point" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInput_Extensions" Member="M:MonoTouch.UIKit.UITextInput_Extensions.UpdateFloatingCursor(MonoTouch.UIKit.IUITextInput,MonoTouch.CoreGraphics.CGPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInputTraits" />
      </Targets>
      <Member MemberName="GetSmartDashesType">
        <MemberSignature Language="C#" Value="public static UIKit.UITextSmartDashesType GetSmartDashesType (this UIKit.IUITextInputTraits This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UITextSmartDashesType GetSmartDashesType(class UIKit.IUITextInputTraits This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UITextSmartDashesType</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInputTraits" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInputTraits_Extensions" Member="M:MonoTouch.UIKit.UITextInputTraits_Extensions.GetSmartDashesType(MonoTouch.UIKit.IUITextInputTraits)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInputTraits" />
      </Targets>
      <Member MemberName="GetSmartInsertDeleteType">
        <MemberSignature Language="C#" Value="public static UIKit.UITextSmartInsertDeleteType GetSmartInsertDeleteType (this UIKit.IUITextInputTraits This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UITextSmartInsertDeleteType GetSmartInsertDeleteType(class UIKit.IUITextInputTraits This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UITextSmartInsertDeleteType</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInputTraits" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInputTraits_Extensions" Member="M:MonoTouch.UIKit.UITextInputTraits_Extensions.GetSmartInsertDeleteType(MonoTouch.UIKit.IUITextInputTraits)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInputTraits" />
      </Targets>
      <Member MemberName="GetSmartQuotesType">
        <MemberSignature Language="C#" Value="public static UIKit.UITextSmartQuotesType GetSmartQuotesType (this UIKit.IUITextInputTraits This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UITextSmartQuotesType GetSmartQuotesType(class UIKit.IUITextInputTraits This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UITextSmartQuotesType</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInputTraits" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInputTraits_Extensions" Member="M:MonoTouch.UIKit.UITextInputTraits_Extensions.GetSmartQuotesType(MonoTouch.UIKit.IUITextInputTraits)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInputTraits" />
      </Targets>
      <Member MemberName="GetTextContentType">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetTextContentType (this UIKit.IUITextInputTraits This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetTextContentType(class UIKit.IUITextInputTraits This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInputTraits" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">The <see cref="T:UIKit.IUITextInputTraits" /> on which this method operates.</param>
          <summary>Gets the semantic of the expected input, which allows the system to, for example, provide custom keyboards.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInputTraits_Extensions" Member="M:MonoTouch.UIKit.UITextInputTraits_Extensions.GetTextContentType(MonoTouch.UIKit.IUITextInputTraits)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInputTraits" />
      </Targets>
      <Member MemberName="SetSmartDashesType">
        <MemberSignature Language="C#" Value="public static void SetSmartDashesType (this UIKit.IUITextInputTraits This, UIKit.UITextSmartDashesType value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetSmartDashesType(class UIKit.IUITextInputTraits This, valuetype UIKit.UITextSmartDashesType value) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInputTraits" RefType="this" />
          <Parameter Name="value" Type="MonoTouch.UIKit.UITextSmartDashesType" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="value">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInputTraits_Extensions" Member="M:MonoTouch.UIKit.UITextInputTraits_Extensions.SetSmartDashesType(MonoTouch.UIKit.IUITextInputTraits,MonoTouch.UIKit.UITextSmartDashesType)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInputTraits" />
      </Targets>
      <Member MemberName="SetSmartInsertDeleteType">
        <MemberSignature Language="C#" Value="public static void SetSmartInsertDeleteType (this UIKit.IUITextInputTraits This, UIKit.UITextSmartInsertDeleteType value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetSmartInsertDeleteType(class UIKit.IUITextInputTraits This, valuetype UIKit.UITextSmartInsertDeleteType value) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInputTraits" RefType="this" />
          <Parameter Name="value" Type="MonoTouch.UIKit.UITextSmartInsertDeleteType" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="value">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInputTraits_Extensions" Member="M:MonoTouch.UIKit.UITextInputTraits_Extensions.SetSmartInsertDeleteType(MonoTouch.UIKit.IUITextInputTraits,MonoTouch.UIKit.UITextSmartInsertDeleteType)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInputTraits" />
      </Targets>
      <Member MemberName="SetSmartQuotesType">
        <MemberSignature Language="C#" Value="public static void SetSmartQuotesType (this UIKit.IUITextInputTraits This, UIKit.UITextSmartQuotesType value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetSmartQuotesType(class UIKit.IUITextInputTraits This, valuetype UIKit.UITextSmartQuotesType value) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInputTraits" RefType="this" />
          <Parameter Name="value" Type="MonoTouch.UIKit.UITextSmartQuotesType" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="value">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInputTraits_Extensions" Member="M:MonoTouch.UIKit.UITextInputTraits_Extensions.SetSmartQuotesType(MonoTouch.UIKit.IUITextInputTraits,MonoTouch.UIKit.UITextSmartQuotesType)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInputTraits" />
      </Targets>
      <Member MemberName="SetTextContentType">
        <MemberSignature Language="C#" Value="public static void SetTextContentType (this UIKit.IUITextInputTraits This, Foundation.NSString value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTextContentType(class UIKit.IUITextInputTraits This, class Foundation.NSString value) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInputTraits" RefType="this" />
          <Parameter Name="value" Type="MonoTouch.Foundation.NSString" />
        </Parameters>
        <Docs>
          <param name="This">The <see cref="T:UIKit.IUITextInputTraits" /> on which this method operates.</param>
          <param name="value">To be added.</param>
          <summary>Sets the semantic of the expected input, which allows the system to, for example, provide custom keyboards.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInputTraits_Extensions" Member="M:MonoTouch.UIKit.UITextInputTraits_Extensions.SetTextContentType(MonoTouch.UIKit.IUITextInputTraits,MonoTouch.Foundation.NSString)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextPasteDelegate" />
      </Targets>
      <Member MemberName="CombineItemAttributedStrings">
        <MemberSignature Language="C#" Value="public static Foundation.NSAttributedString CombineItemAttributedStrings (this UIKit.IUITextPasteDelegate This, UIKit.IUITextPasteConfigurationSupporting textPasteConfigurationSupporting, Foundation.NSAttributedString[] itemStrings, UIKit.UITextRange textRange);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSAttributedString CombineItemAttributedStrings(class UIKit.IUITextPasteDelegate This, class UIKit.IUITextPasteConfigurationSupporting textPasteConfigurationSupporting, class Foundation.NSAttributedString[] itemStrings, class UIKit.UITextRange textRange) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSAttributedString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextPasteDelegate" RefType="this" />
          <Parameter Name="textPasteConfigurationSupporting" Type="MonoTouch.UIKit.IUITextPasteConfigurationSupporting" />
          <Parameter Name="itemStrings" Type="MonoTouch.Foundation.NSAttributedString[]" />
          <Parameter Name="textRange" Type="MonoTouch.UIKit.UITextRange" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textPasteConfigurationSupporting">To be added.</param>
          <param name="itemStrings">To be added.</param>
          <param name="textRange">To be added.</param>
          <summary>Method that is called to combine multiple attributed strings.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextPasteDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextPasteDelegate_Extensions.CombineItemAttributedStrings(MonoTouch.UIKit.IUITextPasteDelegate,MonoTouch.UIKit.IUITextPasteConfigurationSupporting,MonoTouch.Foundation.NSAttributedString[],MonoTouch.UIKit.UITextRange)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextPasteDelegate" />
      </Targets>
      <Member MemberName="PerformPaste">
        <MemberSignature Language="C#" Value="public static UIKit.UITextRange PerformPaste (this UIKit.IUITextPasteDelegate This, UIKit.IUITextPasteConfigurationSupporting textPasteConfigurationSupporting, Foundation.NSAttributedString attributedString, UIKit.UITextRange textRange);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UITextRange PerformPaste(class UIKit.IUITextPasteDelegate This, class UIKit.IUITextPasteConfigurationSupporting textPasteConfigurationSupporting, class Foundation.NSAttributedString attributedString, class UIKit.UITextRange textRange) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UITextRange</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextPasteDelegate" RefType="this" />
          <Parameter Name="textPasteConfigurationSupporting" Type="MonoTouch.UIKit.IUITextPasteConfigurationSupporting" />
          <Parameter Name="attributedString" Type="MonoTouch.Foundation.NSAttributedString" />
          <Parameter Name="textRange" Type="MonoTouch.UIKit.UITextRange" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textPasteConfigurationSupporting">To be added.</param>
          <param name="attributedString">To be added.</param>
          <param name="textRange">To be added.</param>
          <summary>Method that is called to incorporate the pasted data into the application content.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextPasteDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextPasteDelegate_Extensions.PerformPaste(MonoTouch.UIKit.IUITextPasteDelegate,MonoTouch.UIKit.IUITextPasteConfigurationSupporting,MonoTouch.Foundation.NSAttributedString,MonoTouch.UIKit.UITextRange)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextPasteDelegate" />
      </Targets>
      <Member MemberName="ShouldAnimatePaste">
        <MemberSignature Language="C#" Value="public static bool ShouldAnimatePaste (this UIKit.IUITextPasteDelegate This, UIKit.IUITextPasteConfigurationSupporting textPasteConfigurationSupporting, Foundation.NSAttributedString attributedString, UIKit.UITextRange textRange);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldAnimatePaste(class UIKit.IUITextPasteDelegate This, class UIKit.IUITextPasteConfigurationSupporting textPasteConfigurationSupporting, class Foundation.NSAttributedString attributedString, class UIKit.UITextRange textRange) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextPasteDelegate" RefType="this" />
          <Parameter Name="textPasteConfigurationSupporting" Type="MonoTouch.UIKit.IUITextPasteConfigurationSupporting" />
          <Parameter Name="attributedString" Type="MonoTouch.Foundation.NSAttributedString" />
          <Parameter Name="textRange" Type="MonoTouch.UIKit.UITextRange" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textPasteConfigurationSupporting">To be added.</param>
          <param name="attributedString">To be added.</param>
          <param name="textRange">To be added.</param>
          <summary>Returns a Boolean value that tells the system whether to animate the paste operation.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextPasteDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextPasteDelegate_Extensions.ShouldAnimatePaste(MonoTouch.UIKit.IUITextPasteDelegate,MonoTouch.UIKit.IUITextPasteConfigurationSupporting,MonoTouch.Foundation.NSAttributedString,MonoTouch.UIKit.UITextRange)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextPasteDelegate" />
      </Targets>
      <Member MemberName="TransformPasteItem">
        <MemberSignature Language="C#" Value="public static void TransformPasteItem (this UIKit.IUITextPasteDelegate This, UIKit.IUITextPasteConfigurationSupporting textPasteConfigurationSupporting, UIKit.IUITextPasteItem item);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TransformPasteItem(class UIKit.IUITextPasteDelegate This, class UIKit.IUITextPasteConfigurationSupporting textPasteConfigurationSupporting, class UIKit.IUITextPasteItem item) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextPasteDelegate" RefType="this" />
          <Parameter Name="textPasteConfigurationSupporting" Type="MonoTouch.UIKit.IUITextPasteConfigurationSupporting" />
          <Parameter Name="item" Type="MonoTouch.UIKit.IUITextPasteItem" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textPasteConfigurationSupporting">To be added.</param>
          <param name="item">To be added.</param>
          <summary>Method that is called to transform the paste item as it is pasted.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextPasteDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextPasteDelegate_Extensions.TransformPasteItem(MonoTouch.UIKit.IUITextPasteDelegate,MonoTouch.UIKit.IUITextPasteConfigurationSupporting,MonoTouch.UIKit.IUITextPasteItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextViewDelegate" />
      </Targets>
      <Member MemberName="Changed">
        <MemberSignature Language="C#" Value="public static void Changed (this UIKit.IUITextViewDelegate This, UIKit.UITextView textView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Changed(class UIKit.IUITextViewDelegate This, class UIKit.UITextView textView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextViewDelegate" RefType="this" />
          <Parameter Name="textView" Type="MonoTouch.UIKit.UITextView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textView">To be added.</param>
          <summary>Indicates the text or text attributes in the specified UITextView were changed by the app user.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextViewDelegate_Extensions.Changed(MonoTouch.UIKit.IUITextViewDelegate,MonoTouch.UIKit.UITextView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextViewDelegate" />
      </Targets>
      <Member MemberName="EditingEnded">
        <MemberSignature Language="C#" Value="public static void EditingEnded (this UIKit.IUITextViewDelegate This, UIKit.UITextView textView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EditingEnded(class UIKit.IUITextViewDelegate This, class UIKit.UITextView textView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextViewDelegate" RefType="this" />
          <Parameter Name="textView" Type="MonoTouch.UIKit.UITextView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textView">To be added.</param>
          <summary>Indicates that editing has ended in the specified UITextView.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextViewDelegate_Extensions.EditingEnded(MonoTouch.UIKit.IUITextViewDelegate,MonoTouch.UIKit.UITextView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextViewDelegate" />
      </Targets>
      <Member MemberName="EditingStarted">
        <MemberSignature Language="C#" Value="public static void EditingStarted (this UIKit.IUITextViewDelegate This, UIKit.UITextView textView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EditingStarted(class UIKit.IUITextViewDelegate This, class UIKit.UITextView textView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextViewDelegate" RefType="this" />
          <Parameter Name="textView" Type="MonoTouch.UIKit.UITextView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textView">To be added.</param>
          <summary>Indicates editing has begun in the specified UITextView.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextViewDelegate_Extensions.EditingStarted(MonoTouch.UIKit.IUITextViewDelegate,MonoTouch.UIKit.UITextView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextViewDelegate" />
      </Targets>
      <Member MemberName="SelectionChanged">
        <MemberSignature Language="C#" Value="public static void SelectionChanged (this UIKit.IUITextViewDelegate This, UIKit.UITextView textView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SelectionChanged(class UIKit.IUITextViewDelegate This, class UIKit.UITextView textView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextViewDelegate" RefType="this" />
          <Parameter Name="textView" Type="MonoTouch.UIKit.UITextView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textView">To be added.</param>
          <summary>Indicates the text selection has changed in the specified UITextView.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextViewDelegate_Extensions.SelectionChanged(MonoTouch.UIKit.IUITextViewDelegate,MonoTouch.UIKit.UITextView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextViewDelegate" />
      </Targets>
      <Member MemberName="ShouldBeginEditing">
        <MemberSignature Language="C#" Value="public static bool ShouldBeginEditing (this UIKit.IUITextViewDelegate This, UIKit.UITextView textView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldBeginEditing(class UIKit.IUITextViewDelegate This, class UIKit.UITextView textView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextViewDelegate" RefType="this" />
          <Parameter Name="textView" Type="MonoTouch.UIKit.UITextView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textView">To be added.</param>
          <summary>Whether editing should begin in the specified UITextView.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextViewDelegate_Extensions.ShouldBeginEditing(MonoTouch.UIKit.IUITextViewDelegate,MonoTouch.UIKit.UITextView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextViewDelegate" />
      </Targets>
      <Member MemberName="ShouldChangeText">
        <MemberSignature Language="C#" Value="public static bool ShouldChangeText (this UIKit.IUITextViewDelegate This, UIKit.UITextView textView, Foundation.NSRange range, string text);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldChangeText(class UIKit.IUITextViewDelegate This, class UIKit.UITextView textView, valuetype Foundation.NSRange range, string text) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextViewDelegate" RefType="this" />
          <Parameter Name="textView" Type="MonoTouch.UIKit.UITextView" />
          <Parameter Name="range" Type="MonoTouch.Foundation.NSRange" />
          <Parameter Name="text" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textView">To be added.</param>
          <param name="range">To be added.</param>
          <param name="text">To be added.</param>
          <summary>Whether the specified text should be replaced in the UITextView.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextViewDelegate_Extensions.ShouldChangeText(MonoTouch.UIKit.IUITextViewDelegate,MonoTouch.UIKit.UITextView,MonoTouch.Foundation.NSRange,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextViewDelegate" />
      </Targets>
      <Member MemberName="ShouldEndEditing">
        <MemberSignature Language="C#" Value="public static bool ShouldEndEditing (this UIKit.IUITextViewDelegate This, UIKit.UITextView textView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldEndEditing(class UIKit.IUITextViewDelegate This, class UIKit.UITextView textView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextViewDelegate" RefType="this" />
          <Parameter Name="textView" Type="MonoTouch.UIKit.UITextView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textView">To be added.</param>
          <summary>Whether editing should end in the specified UITextView.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextViewDelegate_Extensions.ShouldEndEditing(MonoTouch.UIKit.IUITextViewDelegate,MonoTouch.UIKit.UITextView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextViewDelegate" />
      </Targets>
      <Member MemberName="ShouldInteractWithTextAttachment">
        <MemberSignature Language="C#" Value="public static bool ShouldInteractWithTextAttachment (this UIKit.IUITextViewDelegate This, UIKit.UITextView textView, UIKit.NSTextAttachment textAttachment, Foundation.NSRange characterRange);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldInteractWithTextAttachment(class UIKit.IUITextViewDelegate This, class UIKit.UITextView textView, class UIKit.NSTextAttachment textAttachment, valuetype Foundation.NSRange characterRange) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextViewDelegate" RefType="this" />
          <Parameter Name="textView" Type="MonoTouch.UIKit.UITextView" />
          <Parameter Name="textAttachment" Type="MonoTouch.UIKit.NSTextAttachment" />
          <Parameter Name="characterRange" Type="MonoTouch.Foundation.NSRange" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textView">To be added.</param>
          <param name="textAttachment">To be added.</param>
          <param name="characterRange">To be added.</param>
          <summary>Whether the specified UITextView should allow user interaction with the specified text attachment in a given range of text.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextViewDelegate_Extensions.ShouldInteractWithTextAttachment(MonoTouch.UIKit.IUITextViewDelegate,MonoTouch.UIKit.UITextView,MonoTouch.UIKit.NSTextAttachment,MonoTouch.Foundation.NSRange)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextViewDelegate" />
      </Targets>
      <Member MemberName="ShouldInteractWithTextAttachment">
        <MemberSignature Language="C#" Value="public static bool ShouldInteractWithTextAttachment (this UIKit.IUITextViewDelegate This, UIKit.UITextView textView, UIKit.NSTextAttachment textAttachment, Foundation.NSRange characterRange, UIKit.UITextItemInteraction interaction);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldInteractWithTextAttachment(class UIKit.IUITextViewDelegate This, class UIKit.UITextView textView, class UIKit.NSTextAttachment textAttachment, valuetype Foundation.NSRange characterRange, valuetype UIKit.UITextItemInteraction interaction) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextViewDelegate" RefType="this" />
          <Parameter Name="textView" Type="MonoTouch.UIKit.UITextView" />
          <Parameter Name="textAttachment" Type="MonoTouch.UIKit.NSTextAttachment" />
          <Parameter Name="characterRange" Type="MonoTouch.Foundation.NSRange" />
          <Parameter Name="interaction" Type="MonoTouch.UIKit.UITextItemInteraction" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textView">To be added.</param>
          <param name="textAttachment">To be added.</param>
          <param name="characterRange">To be added.</param>
          <param name="interaction">To be added.</param>
          <summary>Whether the specified UITextView should allow user interaction with the specified URL in the given range of text.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextViewDelegate_Extensions.ShouldInteractWithTextAttachment(MonoTouch.UIKit.IUITextViewDelegate,MonoTouch.UIKit.UITextView,MonoTouch.UIKit.NSTextAttachment,MonoTouch.Foundation.NSRange,MonoTouch.UIKit.UITextItemInteraction)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextViewDelegate" />
      </Targets>
      <Member MemberName="ShouldInteractWithUrl">
        <MemberSignature Language="C#" Value="public static bool ShouldInteractWithUrl (this UIKit.IUITextViewDelegate This, UIKit.UITextView textView, Foundation.NSUrl URL, Foundation.NSRange characterRange);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldInteractWithUrl(class UIKit.IUITextViewDelegate This, class UIKit.UITextView textView, class Foundation.NSUrl URL, valuetype Foundation.NSRange characterRange) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextViewDelegate" RefType="this" />
          <Parameter Name="textView" Type="MonoTouch.UIKit.UITextView" />
          <Parameter Name="URL" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="characterRange" Type="MonoTouch.Foundation.NSRange" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textView">To be added.</param>
          <param name="URL">To be added.</param>
          <param name="characterRange">To be added.</param>
          <summary>Whether the specified UITextView should allow user interaction with the specified URL in the given range of text.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextViewDelegate_Extensions.ShouldInteractWithUrl(MonoTouch.UIKit.IUITextViewDelegate,MonoTouch.UIKit.UITextView,MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSRange)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextViewDelegate" />
      </Targets>
      <Member MemberName="ShouldInteractWithUrl">
        <MemberSignature Language="C#" Value="public static bool ShouldInteractWithUrl (this UIKit.IUITextViewDelegate This, UIKit.UITextView textView, Foundation.NSUrl url, Foundation.NSRange characterRange, UIKit.UITextItemInteraction interaction);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldInteractWithUrl(class UIKit.IUITextViewDelegate This, class UIKit.UITextView textView, class Foundation.NSUrl url, valuetype Foundation.NSRange characterRange, valuetype UIKit.UITextItemInteraction interaction) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextViewDelegate" RefType="this" />
          <Parameter Name="textView" Type="MonoTouch.UIKit.UITextView" />
          <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="characterRange" Type="MonoTouch.Foundation.NSRange" />
          <Parameter Name="interaction" Type="MonoTouch.UIKit.UITextItemInteraction" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textView">To be added.</param>
          <param name="url">To be added.</param>
          <param name="characterRange">To be added.</param>
          <param name="interaction">To be added.</param>
          <summary>Whether the specified UITextView should allow user interaction with the specified URL in the given range of text.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextViewDelegate_Extensions.ShouldInteractWithUrl(MonoTouch.UIKit.IUITextViewDelegate,MonoTouch.UIKit.UITextView,MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSRange,MonoTouch.UIKit.UITextItemInteraction)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIVideoEditorControllerDelegate" />
      </Targets>
      <Member MemberName="Failed">
        <MemberSignature Language="C#" Value="public static void Failed (this UIKit.IUIVideoEditorControllerDelegate This, UIKit.UIVideoEditorController editor, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Failed(class UIKit.IUIVideoEditorControllerDelegate This, class UIKit.UIVideoEditorController editor, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIVideoEditorControllerDelegate" RefType="this" />
          <Parameter Name="editor" Type="MonoTouch.UIKit.UIVideoEditorController" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="editor">To be added.</param>
          <param name="error">To be added.</param>
          <summary>Called when the UIVideoEditorController failed to load or save a movie.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIVideoEditorControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIVideoEditorControllerDelegate_Extensions.Failed(MonoTouch.UIKit.IUIVideoEditorControllerDelegate,MonoTouch.UIKit.UIVideoEditorController,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIVideoEditorControllerDelegate" />
      </Targets>
      <Member MemberName="UserCancelled">
        <MemberSignature Language="C#" Value="public static void UserCancelled (this UIKit.IUIVideoEditorControllerDelegate This, UIKit.UIVideoEditorController editor);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UserCancelled(class UIKit.IUIVideoEditorControllerDelegate This, class UIKit.UIVideoEditorController editor) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIVideoEditorControllerDelegate" RefType="this" />
          <Parameter Name="editor" Type="MonoTouch.UIKit.UIVideoEditorController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="editor">To be added.</param>
          <summary>Indicates that the app user cancelled the movie editing.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIVideoEditorControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIVideoEditorControllerDelegate_Extensions.UserCancelled(MonoTouch.UIKit.IUIVideoEditorControllerDelegate,MonoTouch.UIKit.UIVideoEditorController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIVideoEditorControllerDelegate" />
      </Targets>
      <Member MemberName="VideoSaved">
        <MemberSignature Language="C#" Value="public static void VideoSaved (this UIKit.IUIVideoEditorControllerDelegate This, UIKit.UIVideoEditorController editor, string editedVideoPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VideoSaved(class UIKit.IUIVideoEditorControllerDelegate This, class UIKit.UIVideoEditorController editor, string editedVideoPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIVideoEditorControllerDelegate" RefType="this" />
          <Parameter Name="editor" Type="MonoTouch.UIKit.UIVideoEditorController" />
          <Parameter Name="editedVideoPath" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="editor">To be added.</param>
          <param name="editedVideoPath">To be added.</param>
          <summary>Called after the movie was successfully saved.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIVideoEditorControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIVideoEditorControllerDelegate_Extensions.VideoSaved(MonoTouch.UIKit.IUIVideoEditorControllerDelegate,MonoTouch.UIKit.UIVideoEditorController,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIView" />
      </Targets>
      <Member MemberName="EndEditing">
        <MemberSignature Language="C#" Value="public static bool EndEditing (this UIKit.UIView This, bool force);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool EndEditing(class UIKit.UIView This, bool force) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UIView" RefType="this" />
          <Parameter Name="force" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="force">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIView_UITextField" Member="M:MonoTouch.UIKit.UIView_UITextField.EndEditing(MonoTouch.UIKit.UIView,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning" />
      </Targets>
      <Member MemberName="AnimationEnded">
        <MemberSignature Language="C#" Value="public static void AnimationEnded (this UIKit.IUIViewControllerAnimatedTransitioning This, bool transitionCompleted);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AnimationEnded(class UIKit.IUIViewControllerAnimatedTransitioning This, bool transitionCompleted) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning" RefType="this" />
          <Parameter Name="transitionCompleted" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="transitionCompleted">To be added.</param>
          <summary>Indicates that the animation has ended.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIViewControllerAnimatedTransitioning_Extensions" Member="M:MonoTouch.UIKit.UIViewControllerAnimatedTransitioning_Extensions.AnimationEnded(MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning" />
      </Targets>
      <Member MemberName="GetInterruptibleAnimator">
        <MemberSignature Language="C#" Value="public static UIKit.IUIViewImplicitlyAnimating GetInterruptibleAnimator (this UIKit.IUIViewControllerAnimatedTransitioning This, UIKit.IUIViewControllerContextTransitioning transitionContext);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.IUIViewImplicitlyAnimating GetInterruptibleAnimator(class UIKit.IUIViewControllerAnimatedTransitioning This, class UIKit.IUIViewControllerContextTransitioning transitionContext) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.IUIViewImplicitlyAnimating</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning" RefType="this" />
          <Parameter Name="transitionContext" Type="MonoTouch.UIKit.IUIViewControllerContextTransitioning" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="transitionContext">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIViewControllerAnimatedTransitioning_Extensions" Member="M:MonoTouch.UIKit.UIViewControllerAnimatedTransitioning_Extensions.GetInterruptibleAnimator(MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning,MonoTouch.UIKit.IUIViewControllerContextTransitioning)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIViewControllerContextTransitioning" />
      </Targets>
      <Member MemberName="PauseInteractiveTransition">
        <MemberSignature Language="C#" Value="public static void PauseInteractiveTransition (this UIKit.IUIViewControllerContextTransitioning This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PauseInteractiveTransition(class UIKit.IUIViewControllerContextTransitioning This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIViewControllerContextTransitioning" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIViewControllerContextTransitioning_Extensions" Member="M:MonoTouch.UIKit.UIViewControllerContextTransitioning_Extensions.PauseInteractiveTransition(MonoTouch.UIKit.IUIViewControllerContextTransitioning)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning" />
      </Targets>
      <Member MemberName="GetCompletionCurve">
        <MemberSignature Language="C#" Value="public static UIKit.UIViewAnimationCurve GetCompletionCurve (this UIKit.IUIViewControllerInteractiveTransitioning This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UIKit.UIViewAnimationCurve GetCompletionCurve(class UIKit.IUIViewControllerInteractiveTransitioning This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIViewAnimationCurve</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the completion curve, which controls the speed of the animation as it progresses.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIViewControllerInteractiveTransitioning_Extensions" Member="M:MonoTouch.UIKit.UIViewControllerInteractiveTransitioning_Extensions.GetCompletionCurve(MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning" />
      </Targets>
      <Member MemberName="GetCompletionSpeed">
        <MemberSignature Language="C#" Value="public static nfloat GetCompletionSpeed (this UIKit.IUIViewControllerInteractiveTransitioning This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat GetCompletionSpeed(class UIKit.IUIViewControllerInteractiveTransitioning This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the overall relative speed of an animation. The default value is 1.0.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIViewControllerInteractiveTransitioning_Extensions" Member="M:MonoTouch.UIKit.UIViewControllerInteractiveTransitioning_Extensions.GetCompletionSpeed(MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning" />
      </Targets>
      <Member MemberName="GetWantsInteractiveStart">
        <MemberSignature Language="C#" Value="public static bool GetWantsInteractiveStart (this UIKit.IUIViewControllerInteractiveTransitioning This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetWantsInteractiveStart(class UIKit.IUIViewControllerInteractiveTransitioning This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIViewControllerInteractiveTransitioning_Extensions" Member="M:MonoTouch.UIKit.UIViewControllerInteractiveTransitioning_Extensions.GetWantsInteractiveStart(MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIViewControllerTransitionCoordinator" />
      </Targets>
      <Member MemberName="NotifyWhenInteractionChanges">
        <MemberSignature Language="C#" Value="public static void NotifyWhenInteractionChanges (this UIKit.IUIViewControllerTransitionCoordinator This, Action&lt;UIKit.IUIViewControllerTransitionCoordinatorContext&gt; handler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NotifyWhenInteractionChanges(class UIKit.IUIViewControllerTransitionCoordinator This, class System.Action`1&lt;class UIKit.IUIViewControllerTransitionCoordinatorContext&gt; handler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIViewControllerTransitionCoordinator" RefType="this" />
          <Parameter Name="handler" Type="System.Action&lt;MonoTouch.UIKit.IUIViewControllerTransitionCoordinatorContext&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V60))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="handler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIViewControllerTransitionCoordinator_Extensions" Member="M:MonoTouch.UIKit.UIViewControllerTransitionCoordinator_Extensions.NotifyWhenInteractionChanges(MonoTouch.UIKit.IUIViewControllerTransitionCoordinator,System.Action{MonoTouch.UIKit.IUIViewControllerTransitionCoordinatorContext})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIViewControllerTransitionCoordinatorContext" />
      </Targets>
      <Member MemberName="GetIsInterruptible">
        <MemberSignature Language="C#" Value="public static bool GetIsInterruptible (this UIKit.IUIViewControllerTransitionCoordinatorContext This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsInterruptible(class UIKit.IUIViewControllerTransitionCoordinatorContext This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIViewControllerTransitionCoordinatorContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIViewControllerTransitionCoordinatorContext_Extensions" Member="M:MonoTouch.UIKit.UIViewControllerTransitionCoordinatorContext_Extensions.GetIsInterruptible(MonoTouch.UIKit.IUIViewControllerTransitionCoordinatorContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIViewControllerTransitionCoordinatorContext" />
      </Targets>
      <Member MemberName="GetTransitionViewController">
        <MemberSignature Language="C#" Value="public static UIKit.UIView GetTransitionViewController (this UIKit.IUIViewControllerTransitionCoordinatorContext This, UIKit.UITransitionViewControllerKind kind);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIView GetTransitionViewController(class UIKit.IUIViewControllerTransitionCoordinatorContext This, valuetype UIKit.UITransitionViewControllerKind kind) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIView</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIViewControllerTransitionCoordinatorContext" RefType="this" />
          <Parameter Name="kind" Type="MonoTouch.UIKit.UITransitionViewControllerKind" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="kind">To be added.</param>
          <summary>Gets a view controller that controls a transition.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIViewControllerTransitionCoordinatorContext_Extensions" Member="M:MonoTouch.UIKit.UIViewControllerTransitionCoordinatorContext_Extensions.GetTransitionViewController(MonoTouch.UIKit.IUIViewControllerTransitionCoordinatorContext,MonoTouch.UIKit.UITransitionViewControllerKind)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIViewControllerTransitioningDelegate" />
      </Targets>
      <Member MemberName="GetAnimationControllerForDismissedController">
        <MemberSignature Language="C#" Value="public static UIKit.IUIViewControllerAnimatedTransitioning GetAnimationControllerForDismissedController (this UIKit.IUIViewControllerTransitioningDelegate This, UIKit.UIViewController dismissed);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.IUIViewControllerAnimatedTransitioning GetAnimationControllerForDismissedController(class UIKit.IUIViewControllerTransitioningDelegate This, class UIKit.UIViewController dismissed) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIViewControllerTransitioningDelegate" RefType="this" />
          <Parameter Name="dismissed" Type="MonoTouch.UIKit.UIViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="dismissed">To be added.</param>
          <summary>When a dismissal animation is called, this method can be overridden to provide a custom UIViewControllerAnimatedTransitioning.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIViewControllerTransitioningDelegate_Extensions" Member="M:MonoTouch.UIKit.UIViewControllerTransitioningDelegate_Extensions.GetAnimationControllerForDismissedController(MonoTouch.UIKit.IUIViewControllerTransitioningDelegate,MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIViewControllerTransitioningDelegate" />
      </Targets>
      <Member MemberName="GetAnimationControllerForPresentedController">
        <MemberSignature Language="C#" Value="public static UIKit.IUIViewControllerAnimatedTransitioning GetAnimationControllerForPresentedController (this UIKit.IUIViewControllerTransitioningDelegate This, UIKit.UIViewController presented, UIKit.UIViewController presenting, UIKit.UIViewController source);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.IUIViewControllerAnimatedTransitioning GetAnimationControllerForPresentedController(class UIKit.IUIViewControllerTransitioningDelegate This, class UIKit.UIViewController presented, class UIKit.UIViewController presenting, class UIKit.UIViewController source) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIViewControllerTransitioningDelegate" RefType="this" />
          <Parameter Name="presented" Type="MonoTouch.UIKit.UIViewController" />
          <Parameter Name="presenting" Type="MonoTouch.UIKit.UIViewController" />
          <Parameter Name="source" Type="MonoTouch.UIKit.UIViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="presented">To be added.</param>
          <param name="presenting">To be added.</param>
          <param name="source">To be added.</param>
          <summary>Returns the animation controller that is used when <paramref name="presenting" /> presents <paramref name="presented" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIViewControllerTransitioningDelegate_Extensions" Member="M:MonoTouch.UIKit.UIViewControllerTransitioningDelegate_Extensions.GetAnimationControllerForPresentedController(MonoTouch.UIKit.IUIViewControllerTransitioningDelegate,MonoTouch.UIKit.UIViewController,MonoTouch.UIKit.UIViewController,MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIViewControllerTransitioningDelegate" />
      </Targets>
      <Member MemberName="GetInteractionControllerForDismissal">
        <MemberSignature Language="C#" Value="public static UIKit.IUIViewControllerInteractiveTransitioning GetInteractionControllerForDismissal (this UIKit.IUIViewControllerTransitioningDelegate This, UIKit.IUIViewControllerAnimatedTransitioning animator);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.IUIViewControllerInteractiveTransitioning GetInteractionControllerForDismissal(class UIKit.IUIViewControllerTransitioningDelegate This, class UIKit.IUIViewControllerAnimatedTransitioning animator) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIViewControllerTransitioningDelegate" RefType="this" />
          <Parameter Name="animator" Type="MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="animator">To be added.</param>
          <summary>When a controller is dismissed and an interaction is desired, this method can be overridden to provide a custom UIViewControllerInteractiveTransitioning.|When a dismissal interaction is called and an interaction animation is desired, t</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIViewControllerTransitioningDelegate_Extensions" Member="M:MonoTouch.UIKit.UIViewControllerTransitioningDelegate_Extensions.GetInteractionControllerForDismissal(MonoTouch.UIKit.IUIViewControllerTransitioningDelegate,MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIViewControllerTransitioningDelegate" />
      </Targets>
      <Member MemberName="GetInteractionControllerForPresentation">
        <MemberSignature Language="C#" Value="public static UIKit.IUIViewControllerInteractiveTransitioning GetInteractionControllerForPresentation (this UIKit.IUIViewControllerTransitioningDelegate This, UIKit.IUIViewControllerAnimatedTransitioning animator);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.IUIViewControllerInteractiveTransitioning GetInteractionControllerForPresentation(class UIKit.IUIViewControllerTransitioningDelegate This, class UIKit.IUIViewControllerAnimatedTransitioning animator) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIViewControllerTransitioningDelegate" RefType="this" />
          <Parameter Name="animator" Type="MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="animator">To be added.</param>
          <summary>When a controller is presented and an interaction desired, this method can be overridden to provide a custom UIViewControllerInteractiveTransitioning.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIViewControllerTransitioningDelegate_Extensions" Member="M:MonoTouch.UIKit.UIViewControllerTransitioningDelegate_Extensions.GetInteractionControllerForPresentation(MonoTouch.UIKit.IUIViewControllerTransitioningDelegate,MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIViewControllerTransitioningDelegate" />
      </Targets>
      <Member MemberName="GetPresentationControllerForPresentedViewController">
        <MemberSignature Language="C#" Value="public static UIKit.UIPresentationController GetPresentationControllerForPresentedViewController (this UIKit.IUIViewControllerTransitioningDelegate This, UIKit.UIViewController presentedViewController, UIKit.UIViewController presentingViewController, UIKit.UIViewController sourceViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIPresentationController GetPresentationControllerForPresentedViewController(class UIKit.IUIViewControllerTransitioningDelegate This, class UIKit.UIViewController presentedViewController, class UIKit.UIViewController presentingViewController, class UIKit.UIViewController sourceViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIPresentationController</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIViewControllerTransitioningDelegate" RefType="this" />
          <Parameter Name="presentedViewController" Type="MonoTouch.UIKit.UIViewController" />
          <Parameter Name="presentingViewController" Type="MonoTouch.UIKit.UIViewController" />
          <Parameter Name="sourceViewController" Type="MonoTouch.UIKit.UIViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="presentedViewController">To be added.</param>
          <param name="presentingViewController">To be added.This parameter can be .</param>
          <param name="sourceViewController">To be added.</param>
          <summary>Returns the presentation controller that is used when <paramref name="presenting" /> presents <paramref name="presented" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIViewControllerTransitioningDelegate_Extensions" Member="M:MonoTouch.UIKit.UIViewControllerTransitioningDelegate_Extensions.GetPresentationControllerForPresentedViewController(MonoTouch.UIKit.IUIViewControllerTransitioningDelegate,MonoTouch.UIKit.UIViewController,MonoTouch.UIKit.UIViewController,MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIViewImplicitlyAnimating" />
      </Targets>
      <Member MemberName="AddAnimations">
        <MemberSignature Language="C#" Value="public static void AddAnimations (this UIKit.IUIViewImplicitlyAnimating This, Action animation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddAnimations(class UIKit.IUIViewImplicitlyAnimating This, class System.Action animation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIViewImplicitlyAnimating" RefType="this" />
          <Parameter Name="animation" Type="System.Action">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAction))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="animation">To be added.</param>
          <summary>Appends the specified <paramref name="animation" /><see cref="T:System.Action" /> to the callback list.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIViewImplicitlyAnimating_Extensions" Member="M:MonoTouch.UIKit.UIViewImplicitlyAnimating_Extensions.AddAnimations(MonoTouch.UIKit.IUIViewImplicitlyAnimating,System.Action)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIViewImplicitlyAnimating" />
      </Targets>
      <Member MemberName="AddAnimations">
        <MemberSignature Language="C#" Value="public static void AddAnimations (this UIKit.IUIViewImplicitlyAnimating This, Action animation, nfloat delayFactor);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddAnimations(class UIKit.IUIViewImplicitlyAnimating This, class System.Action animation, valuetype System.nfloat delayFactor) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIViewImplicitlyAnimating" RefType="this" />
          <Parameter Name="animation" Type="System.Action">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAction))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
          <Parameter Name="delayFactor" Type="System.nfloat" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="animation">To be added.</param>
          <param name="delayFactor">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIViewImplicitlyAnimating_Extensions" Member="M:MonoTouch.UIKit.UIViewImplicitlyAnimating_Extensions.AddAnimations(MonoTouch.UIKit.IUIViewImplicitlyAnimating,System.Action,System.nfloat)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIViewImplicitlyAnimating" />
      </Targets>
      <Member MemberName="AddCompletion">
        <MemberSignature Language="C#" Value="public static void AddCompletion (this UIKit.IUIViewImplicitlyAnimating This, Action&lt;UIKit.UIViewAnimatingPosition&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddCompletion(class UIKit.IUIViewImplicitlyAnimating This, class System.Action`1&lt;valuetype UIKit.UIViewAnimatingPosition&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIViewImplicitlyAnimating" RefType="this" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.UIKit.UIViewAnimatingPosition&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V51))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Adds the <paramref name="completion" /> .</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIViewImplicitlyAnimating_Extensions" Member="M:MonoTouch.UIKit.UIViewImplicitlyAnimating_Extensions.AddCompletion(MonoTouch.UIKit.IUIViewImplicitlyAnimating,System.Action{MonoTouch.UIKit.UIViewAnimatingPosition})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIViewImplicitlyAnimating" />
      </Targets>
      <Member MemberName="ContinueAnimation">
        <MemberSignature Language="C#" Value="public static void ContinueAnimation (this UIKit.IUIViewImplicitlyAnimating This, UIKit.IUITimingCurveProvider parameters, nfloat durationFactor);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ContinueAnimation(class UIKit.IUIViewImplicitlyAnimating This, class UIKit.IUITimingCurveProvider parameters, valuetype System.nfloat durationFactor) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIViewImplicitlyAnimating" RefType="this" />
          <Parameter Name="parameters" Type="MonoTouch.UIKit.IUITimingCurveProvider" />
          <Parameter Name="durationFactor" Type="System.nfloat" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="parameters">To be added.</param>
          <param name="durationFactor">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIViewImplicitlyAnimating_Extensions" Member="M:MonoTouch.UIKit.UIViewImplicitlyAnimating_Extensions.ContinueAnimation(MonoTouch.UIKit.IUIViewImplicitlyAnimating,MonoTouch.UIKit.IUITimingCurveProvider,System.nfloat)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIWebViewDelegate" />
      </Targets>
      <Member MemberName="LoadFailed">
        <MemberSignature Language="C#" Value="public static void LoadFailed (this UIKit.IUIWebViewDelegate This, UIKit.UIWebView webView, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadFailed(class UIKit.IUIWebViewDelegate This, class UIKit.UIWebView webView, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIWebViewDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.UIKit.UIWebView" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <param name="error">To be added.</param>
          <summary>Indicates that the UIWebView's attempt to load data failed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIWebViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIWebViewDelegate_Extensions.LoadFailed(MonoTouch.UIKit.IUIWebViewDelegate,MonoTouch.UIKit.UIWebView,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIWebViewDelegate" />
      </Targets>
      <Member MemberName="LoadingFinished">
        <MemberSignature Language="C#" Value="public static void LoadingFinished (this UIKit.IUIWebViewDelegate This, UIKit.UIWebView webView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadingFinished(class UIKit.IUIWebViewDelegate This, class UIKit.UIWebView webView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIWebViewDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.UIKit.UIWebView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <summary>Indicates that loading has completed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIWebViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIWebViewDelegate_Extensions.LoadingFinished(MonoTouch.UIKit.IUIWebViewDelegate,MonoTouch.UIKit.UIWebView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIWebViewDelegate" />
      </Targets>
      <Member MemberName="LoadStarted">
        <MemberSignature Language="C#" Value="public static void LoadStarted (this UIKit.IUIWebViewDelegate This, UIKit.UIWebView webView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadStarted(class UIKit.IUIWebViewDelegate This, class UIKit.UIWebView webView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIWebViewDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.UIKit.UIWebView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <summary>Indicates that loading has begun.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIWebViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIWebViewDelegate_Extensions.LoadStarted(MonoTouch.UIKit.IUIWebViewDelegate,MonoTouch.UIKit.UIWebView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIWebViewDelegate" />
      </Targets>
      <Member MemberName="ShouldStartLoad">
        <MemberSignature Language="C#" Value="public static bool ShouldStartLoad (this UIKit.IUIWebViewDelegate This, UIKit.UIWebView webView, Foundation.NSUrlRequest request, UIKit.UIWebViewNavigationType navigationType);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldStartLoad(class UIKit.IUIWebViewDelegate This, class UIKit.UIWebView webView, class Foundation.NSUrlRequest request, valuetype UIKit.UIWebViewNavigationType navigationType) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIWebViewDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.UIKit.UIWebView" />
          <Parameter Name="request" Type="MonoTouch.Foundation.NSUrlRequest" />
          <Parameter Name="navigationType" Type="MonoTouch.UIKit.UIWebViewNavigationType" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <param name="request">To be added.</param>
          <param name="navigationType">To be added.</param>
          <summary>Whether the UIWebView should begin loading data.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIWebViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIWebViewDelegate_Extensions.ShouldStartLoad(MonoTouch.UIKit.IUIWebViewDelegate,MonoTouch.UIKit.UIWebView,MonoTouch.Foundation.NSUrlRequest,MonoTouch.UIKit.UIWebViewNavigationType)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UserNotifications.UNErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this UserNotifications.UNErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype UserNotifications.UNErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.UserNotifications.UNErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.UserNotifications.UNErrorCode value</summary>
        </Docs>
        <Link Type="MonoTouch.UserNotifications.UNErrorCodeExtensions" Member="M:MonoTouch.UserNotifications.UNErrorCodeExtensions.GetDomain(MonoTouch.UserNotifications.UNErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UserNotifications.IUNUserNotificationCenterDelegate" />
      </Targets>
      <Member MemberName="DidReceiveNotificationResponse">
        <MemberSignature Language="C#" Value="public static void DidReceiveNotificationResponse (this UserNotifications.IUNUserNotificationCenterDelegate This, UserNotifications.UNUserNotificationCenter center, UserNotifications.UNNotificationResponse response, Action completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveNotificationResponse(class UserNotifications.IUNUserNotificationCenterDelegate This, class UserNotifications.UNUserNotificationCenter center, class UserNotifications.UNNotificationResponse response, class System.Action completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UserNotifications.IUNUserNotificationCenterDelegate" RefType="this" />
          <Parameter Name="center" Type="MonoTouch.UserNotifications.UNUserNotificationCenter" />
          <Parameter Name="response" Type="MonoTouch.UserNotifications.UNNotificationResponse" />
          <Parameter Name="completionHandler" Type="System.Action">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAction))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="center">The notification center that received the response.</param>
          <param name="response">The user's response.</param>
          <param name="completionHandler">An action that takes no arguments and returns no value.</param>
          <summary>Called when the user selects an action from a notification from the app.</summary>
        </Docs>
        <Link Type="MonoTouch.UserNotifications.UNUserNotificationCenterDelegate_Extensions" Member="M:MonoTouch.UserNotifications.UNUserNotificationCenterDelegate_Extensions.DidReceiveNotificationResponse(MonoTouch.UserNotifications.IUNUserNotificationCenterDelegate,MonoTouch.UserNotifications.UNUserNotificationCenter,MonoTouch.UserNotifications.UNNotificationResponse,System.Action)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UserNotifications.IUNUserNotificationCenterDelegate" />
      </Targets>
      <Member MemberName="WillPresentNotification">
        <MemberSignature Language="C#" Value="public static void WillPresentNotification (this UserNotifications.IUNUserNotificationCenterDelegate This, UserNotifications.UNUserNotificationCenter center, UserNotifications.UNNotification notification, Action&lt;UserNotifications.UNNotificationPresentationOptions&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillPresentNotification(class UserNotifications.IUNUserNotificationCenterDelegate This, class UserNotifications.UNUserNotificationCenter center, class UserNotifications.UNNotification notification, class System.Action`1&lt;valuetype UserNotifications.UNNotificationPresentationOptions&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UserNotifications.IUNUserNotificationCenterDelegate" RefType="this" />
          <Parameter Name="center" Type="MonoTouch.UserNotifications.UNUserNotificationCenter" />
          <Parameter Name="notification" Type="MonoTouch.UserNotifications.UNNotification" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.UserNotifications.UNNotificationPresentationOptions&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V57))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="center">The notification center that received the response.</param>
          <param name="notification">To be added.</param>
          <param name="completionHandler">An action that takes no arguments and returns no value.</param>
          <summary>Called to deliver a notification to an application that is running in the foreground.</summary>
        </Docs>
        <Link Type="MonoTouch.UserNotifications.UNUserNotificationCenterDelegate_Extensions" Member="M:MonoTouch.UserNotifications.UNUserNotificationCenterDelegate_Extensions.WillPresentNotification(MonoTouch.UserNotifications.IUNUserNotificationCenterDelegate,MonoTouch.UserNotifications.UNUserNotificationCenter,MonoTouch.UserNotifications.UNNotification,System.Action{MonoTouch.UserNotifications.UNNotificationPresentationOptions})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSExtensionContext" />
      </Targets>
      <Member MemberName="MediaPlayingPaused">
        <MemberSignature Language="C#" Value="public static void MediaPlayingPaused (this Foundation.NSExtensionContext This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MediaPlayingPaused(class Foundation.NSExtensionContext This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSExtensionContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates.</param>
          <summary>Method that is called when the user pauses playable notification content.</summary>
        </Docs>
        <Link Type="MonoTouch.UserNotificationsUI.NSExtensionContext_UNNotificationContentExtension" Member="M:MonoTouch.UserNotificationsUI.NSExtensionContext_UNNotificationContentExtension.MediaPlayingPaused(MonoTouch.Foundation.NSExtensionContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSExtensionContext" />
      </Targets>
      <Member MemberName="MediaPlayingStarted">
        <MemberSignature Language="C#" Value="public static void MediaPlayingStarted (this Foundation.NSExtensionContext This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MediaPlayingStarted(class Foundation.NSExtensionContext This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSExtensionContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates.</param>
          <summary>Method that is called when the user starts playable notification content.</summary>
        </Docs>
        <Link Type="MonoTouch.UserNotificationsUI.NSExtensionContext_UNNotificationContentExtension" Member="M:MonoTouch.UserNotificationsUI.NSExtensionContext_UNNotificationContentExtension.MediaPlayingStarted(MonoTouch.Foundation.NSExtensionContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UserNotificationsUI.IUNNotificationContentExtension" />
      </Targets>
      <Member MemberName="DidReceiveNotificationResponse">
        <MemberSignature Language="C#" Value="public static void DidReceiveNotificationResponse (this UserNotificationsUI.IUNNotificationContentExtension This, UserNotifications.UNNotificationResponse response, Action&lt;UserNotificationsUI.UNNotificationContentExtensionResponseOption&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveNotificationResponse(class UserNotificationsUI.IUNNotificationContentExtension This, class UserNotifications.UNNotificationResponse response, class System.Action`1&lt;valuetype UserNotificationsUI.UNNotificationContentExtensionResponseOption&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UserNotificationsUI.IUNNotificationContentExtension" RefType="this" />
          <Parameter Name="response" Type="MonoTouch.UserNotifications.UNNotificationResponse" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.UserNotificationsUI.UNNotificationContentExtensionResponseOption&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V61))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="response">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UserNotificationsUI.UNNotificationContentExtension_Extensions" Member="M:MonoTouch.UserNotificationsUI.UNNotificationContentExtension_Extensions.DidReceiveNotificationResponse(MonoTouch.UserNotificationsUI.IUNNotificationContentExtension,MonoTouch.UserNotifications.UNNotificationResponse,System.Action{MonoTouch.UserNotificationsUI.UNNotificationContentExtensionResponseOption})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UserNotificationsUI.IUNNotificationContentExtension" />
      </Targets>
      <Member MemberName="GetMediaPlayPauseButtonFrame">
        <MemberSignature Language="C#" Value="public static CoreGraphics.CGRect GetMediaPlayPauseButtonFrame (this UserNotificationsUI.IUNNotificationContentExtension This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CoreGraphics.CGRect GetMediaPlayPauseButtonFrame(class UserNotificationsUI.IUNNotificationContentExtension This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UserNotificationsUI.IUNNotificationContentExtension" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates.</param>
          <summary>Returns the rectangle that will be used to display a playback button.</summary>
        </Docs>
        <Link Type="MonoTouch.UserNotificationsUI.UNNotificationContentExtension_Extensions" Member="M:MonoTouch.UserNotificationsUI.UNNotificationContentExtension_Extensions.GetMediaPlayPauseButtonFrame(MonoTouch.UserNotificationsUI.IUNNotificationContentExtension)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UserNotificationsUI.IUNNotificationContentExtension" />
      </Targets>
      <Member MemberName="GetMediaPlayPauseButtonTintColor">
        <MemberSignature Language="C#" Value="public static UIKit.UIColor GetMediaPlayPauseButtonTintColor (this UserNotificationsUI.IUNNotificationContentExtension This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIColor GetMediaPlayPauseButtonTintColor(class UserNotificationsUI.IUNNotificationContentExtension This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UserNotificationsUI.IUNNotificationContentExtension" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates.</param>
          <summary>Returns the tint color of the playback button.</summary>
        </Docs>
        <Link Type="MonoTouch.UserNotificationsUI.UNNotificationContentExtension_Extensions" Member="M:MonoTouch.UserNotificationsUI.UNNotificationContentExtension_Extensions.GetMediaPlayPauseButtonTintColor(MonoTouch.UserNotificationsUI.IUNNotificationContentExtension)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UserNotificationsUI.IUNNotificationContentExtension" />
      </Targets>
      <Member MemberName="GetMediaPlayPauseButtonType">
        <MemberSignature Language="C#" Value="public static UserNotificationsUI.UNNotificationContentExtensionMediaPlayPauseButtonType GetMediaPlayPauseButtonType (this UserNotificationsUI.IUNNotificationContentExtension This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype UserNotificationsUI.UNNotificationContentExtensionMediaPlayPauseButtonType GetMediaPlayPauseButtonType(class UserNotificationsUI.IUNNotificationContentExtension This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UserNotificationsUI.UNNotificationContentExtensionMediaPlayPauseButtonType</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UserNotificationsUI.IUNNotificationContentExtension" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UserNotificationsUI.UNNotificationContentExtension_Extensions" Member="M:MonoTouch.UserNotificationsUI.UNNotificationContentExtension_Extensions.GetMediaPlayPauseButtonType(MonoTouch.UserNotificationsUI.IUNNotificationContentExtension)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UserNotificationsUI.IUNNotificationContentExtension" />
      </Targets>
      <Member MemberName="PauseMedia">
        <MemberSignature Language="C#" Value="public static void PauseMedia (this UserNotificationsUI.IUNNotificationContentExtension This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PauseMedia(class UserNotificationsUI.IUNNotificationContentExtension This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UserNotificationsUI.IUNNotificationContentExtension" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates.</param>
          <summary>Method that is called when the user presses the pause button.</summary>
        </Docs>
        <Link Type="MonoTouch.UserNotificationsUI.UNNotificationContentExtension_Extensions" Member="M:MonoTouch.UserNotificationsUI.UNNotificationContentExtension_Extensions.PauseMedia(MonoTouch.UserNotificationsUI.IUNNotificationContentExtension)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UserNotificationsUI.IUNNotificationContentExtension" />
      </Targets>
      <Member MemberName="PlayMedia">
        <MemberSignature Language="C#" Value="public static void PlayMedia (this UserNotificationsUI.IUNNotificationContentExtension This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PlayMedia(class UserNotificationsUI.IUNNotificationContentExtension This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UserNotificationsUI.IUNNotificationContentExtension" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates.</param>
          <summary>Method that is called when the user presses the play button.</summary>
        </Docs>
        <Link Type="MonoTouch.UserNotificationsUI.UNNotificationContentExtension_Extensions" Member="M:MonoTouch.UserNotificationsUI.UNNotificationContentExtension_Extensions.PlayMedia(MonoTouch.UserNotificationsUI.IUNNotificationContentExtension)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.VideoSubscriberAccount.IVSAccountManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldAuthenticateAccountProvider">
        <MemberSignature Language="C#" Value="public static bool ShouldAuthenticateAccountProvider (this VideoSubscriberAccount.IVSAccountManagerDelegate This, VideoSubscriberAccount.VSAccountManager accountManager, string accountProviderIdentifier);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldAuthenticateAccountProvider(class VideoSubscriberAccount.IVSAccountManagerDelegate This, class VideoSubscriberAccount.VSAccountManager accountManager, string accountProviderIdentifier) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.VideoSubscriberAccount.IVSAccountManagerDelegate" RefType="this" />
          <Parameter Name="accountManager" Type="MonoTouch.VideoSubscriberAccount.VSAccountManager" />
          <Parameter Name="accountProviderIdentifier" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="accountManager">To be added.</param>
          <param name="accountProviderIdentifier">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.VideoSubscriberAccount.VSAccountManagerDelegate_Extensions" Member="M:MonoTouch.VideoSubscriberAccount.VSAccountManagerDelegate_Extensions.ShouldAuthenticateAccountProvider(MonoTouch.VideoSubscriberAccount.IVSAccountManagerDelegate,MonoTouch.VideoSubscriberAccount.VSAccountManager,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.VideoSubscriberAccount.VSAccountProviderAuthenticationScheme" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this VideoSubscriberAccount.VSAccountProviderAuthenticationScheme self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype VideoSubscriberAccount.VSAccountProviderAuthenticationScheme self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.VideoSubscriberAccount.VSAccountProviderAuthenticationScheme" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.VideoSubscriberAccount.VSAccountProviderAuthenticationSchemeExtensions" Member="M:MonoTouch.VideoSubscriberAccount.VSAccountProviderAuthenticationSchemeExtensions.GetConstant(MonoTouch.VideoSubscriberAccount.VSAccountProviderAuthenticationScheme)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.VideoSubscriberAccount.VSAccountProviderAuthenticationScheme" />
      </Targets>
      <Member MemberName="GetConstants">
        <MemberSignature Language="C#" Value="public static Foundation.NSString[] GetConstants (this VideoSubscriberAccount.VSAccountProviderAuthenticationScheme[] self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString[] GetConstants(valuetype VideoSubscriberAccount.VSAccountProviderAuthenticationScheme[] self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.VideoSubscriberAccount.VSAccountProviderAuthenticationScheme[]" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.VideoSubscriberAccount.VSAccountProviderAuthenticationSchemeExtensions" Member="M:MonoTouch.VideoSubscriberAccount.VSAccountProviderAuthenticationSchemeExtensions.GetConstants(MonoTouch.VideoSubscriberAccount.VSAccountProviderAuthenticationScheme[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.VideoSubscriberAccount.VSErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this VideoSubscriberAccount.VSErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype VideoSubscriberAccount.VSErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.VideoSubscriberAccount.VSErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.VideoSubscriberAccount.VSErrorCode value</summary>
        </Docs>
        <Link Type="MonoTouch.VideoSubscriberAccount.VSErrorCodeExtensions" Member="M:MonoTouch.VideoSubscriberAccount.VSErrorCodeExtensions.GetDomain(MonoTouch.VideoSubscriberAccount.VSErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreVideo.CVPixelBuffer" />
      </Targets>
      <Member MemberName="ToCGImage">
        <MemberSignature Language="C#" Value="public static VideoToolbox.VTStatus ToCGImage (this CoreVideo.CVPixelBuffer pixelBuffer, out CoreGraphics.CGImage image);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype VideoToolbox.VTStatus ToCGImage(class CoreVideo.CVPixelBuffer pixelBuffer, class CoreGraphics.CGImage image) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.VideoToolbox.VTStatus</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="pixelBuffer" Type="MonoTouch.CoreVideo.CVPixelBuffer" RefType="this" />
          <Parameter Name="image" Type="MonoTouch.CoreGraphics.CGImage&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <param name="pixelBuffer">To be added.</param>
          <param name="image">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.VideoToolbox.VTUtilities" Member="M:MonoTouch.VideoToolbox.VTUtilities.ToCGImage(MonoTouch.CoreVideo.CVPixelBuffer,MonoTouch.CoreGraphics.CGImage@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Vision.VNBarcodeSymbology" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetConstant (this Vision.VNBarcodeSymbology self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetConstant(valuetype Vision.VNBarcodeSymbology self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.Vision.VNBarcodeSymbology" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>Gets the string constant describing the symbology.</summary>
        </Docs>
        <Link Type="MonoTouch.Vision.VNBarcodeSymbologyExtensions" Member="M:MonoTouch.Vision.VNBarcodeSymbologyExtensions.GetConstant(MonoTouch.Vision.VNBarcodeSymbology)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Vision.VNBarcodeSymbology" />
      </Targets>
      <Member MemberName="GetConstants">
        <MemberSignature Language="C#" Value="public static Foundation.NSString[] GetConstants (this Vision.VNBarcodeSymbology[] self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString[] GetConstants(valuetype Vision.VNBarcodeSymbology[] self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.Vision.VNBarcodeSymbology[]" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Vision.VNBarcodeSymbologyExtensions" Member="M:MonoTouch.Vision.VNBarcodeSymbologyExtensions.GetConstants(MonoTouch.Vision.VNBarcodeSymbology[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Vision.VNErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this Vision.VNErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype Vision.VNErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.Vision.VNErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>Retrieves the domain of the <see cref="T:Vision.VNErrorCode" />.</summary>
        </Docs>
        <Link Type="MonoTouch.Vision.VNErrorCodeExtensions" Member="M:MonoTouch.Vision.VNErrorCodeExtensions.GetDomain(MonoTouch.Vision.VNErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchConnectivity.IWCSessionDelegate" />
      </Targets>
      <Member MemberName="ActivationDidComplete">
        <MemberSignature Language="C#" Value="public static void ActivationDidComplete (this WatchConnectivity.IWCSessionDelegate This, WatchConnectivity.WCSession session, WatchConnectivity.WCSessionActivationState activationState, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ActivationDidComplete(class WatchConnectivity.IWCSessionDelegate This, class WatchConnectivity.WCSession session, valuetype WatchConnectivity.WCSessionActivationState activationState, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchConnectivity.IWCSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.WatchConnectivity.WCSession" />
          <Parameter Name="activationState" Type="MonoTouch.WatchConnectivity.WCSessionActivationState" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="activationState">To be added.</param>
          <param name="error">To be added.This parameter can be .</param>
          <summary>Method that is called when session activation completes.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions" Member="M:MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions.ActivationDidComplete(MonoTouch.WatchConnectivity.IWCSessionDelegate,MonoTouch.WatchConnectivity.WCSession,MonoTouch.WatchConnectivity.WCSessionActivationState,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchConnectivity.IWCSessionDelegate" />
      </Targets>
      <Member MemberName="DidBecomeInactive">
        <MemberSignature Language="C#" Value="public static void DidBecomeInactive (this WatchConnectivity.IWCSessionDelegate This, WatchConnectivity.WCSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidBecomeInactive(class WatchConnectivity.IWCSessionDelegate This, class WatchConnectivity.WCSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchConnectivity.IWCSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.WatchConnectivity.WCSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <summary>Method that is called when the session becomes inactive.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions" Member="M:MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions.DidBecomeInactive(MonoTouch.WatchConnectivity.IWCSessionDelegate,MonoTouch.WatchConnectivity.WCSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchConnectivity.IWCSessionDelegate" />
      </Targets>
      <Member MemberName="DidDeactivate">
        <MemberSignature Language="C#" Value="public static void DidDeactivate (this WatchConnectivity.IWCSessionDelegate This, WatchConnectivity.WCSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDeactivate(class WatchConnectivity.IWCSessionDelegate This, class WatchConnectivity.WCSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchConnectivity.IWCSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.WatchConnectivity.WCSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <summary>Method that is called after the session deactivates.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions" Member="M:MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions.DidDeactivate(MonoTouch.WatchConnectivity.IWCSessionDelegate,MonoTouch.WatchConnectivity.WCSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchConnectivity.IWCSessionDelegate" />
      </Targets>
      <Member MemberName="DidFinishFileTransfer">
        <MemberSignature Language="C#" Value="public static void DidFinishFileTransfer (this WatchConnectivity.IWCSessionDelegate This, WatchConnectivity.WCSession session, WatchConnectivity.WCSessionFileTransfer fileTransfer, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinishFileTransfer(class WatchConnectivity.IWCSessionDelegate This, class WatchConnectivity.WCSession session, class WatchConnectivity.WCSessionFileTransfer fileTransfer, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchConnectivity.IWCSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.WatchConnectivity.WCSession" />
          <Parameter Name="fileTransfer" Type="MonoTouch.WatchConnectivity.WCSessionFileTransfer" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="fileTransfer">To be added.</param>
          <param name="error">To be added.</param>
          <summary>A file transfer finished, either successfully or with an error.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions" Member="M:MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions.DidFinishFileTransfer(MonoTouch.WatchConnectivity.IWCSessionDelegate,MonoTouch.WatchConnectivity.WCSession,MonoTouch.WatchConnectivity.WCSessionFileTransfer,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchConnectivity.IWCSessionDelegate" />
      </Targets>
      <Member MemberName="DidFinishUserInfoTransfer">
        <MemberSignature Language="C#" Value="public static void DidFinishUserInfoTransfer (this WatchConnectivity.IWCSessionDelegate This, WatchConnectivity.WCSession session, WatchConnectivity.WCSessionUserInfoTransfer userInfoTransfer, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinishUserInfoTransfer(class WatchConnectivity.IWCSessionDelegate This, class WatchConnectivity.WCSession session, class WatchConnectivity.WCSessionUserInfoTransfer userInfoTransfer, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchConnectivity.IWCSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.WatchConnectivity.WCSession" />
          <Parameter Name="userInfoTransfer" Type="MonoTouch.WatchConnectivity.WCSessionUserInfoTransfer" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="userInfoTransfer">To be added.</param>
          <param name="error">To be added.This parameter can be .</param>
          <summary>A data transfer finished, either successfully or with an error.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions" Member="M:MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions.DidFinishUserInfoTransfer(MonoTouch.WatchConnectivity.IWCSessionDelegate,MonoTouch.WatchConnectivity.WCSession,MonoTouch.WatchConnectivity.WCSessionUserInfoTransfer,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchConnectivity.IWCSessionDelegate" />
      </Targets>
      <Member MemberName="DidReceiveApplicationContext">
        <MemberSignature Language="C#" Value="public static void DidReceiveApplicationContext (this WatchConnectivity.IWCSessionDelegate This, WatchConnectivity.WCSession session, Foundation.NSDictionary&lt;Foundation.NSString,Foundation.NSObject&gt; applicationContext);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveApplicationContext(class WatchConnectivity.IWCSessionDelegate This, class WatchConnectivity.WCSession session, class Foundation.NSDictionary`2&lt;class Foundation.NSString, class Foundation.NSObject&gt; applicationContext) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchConnectivity.IWCSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.WatchConnectivity.WCSession" />
          <Parameter Name="applicationContext" Type="MonoTouch.Foundation.NSDictionary&lt;MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSObject&gt;" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="applicationContext">To be added.</param>
          <summary>Context data was received from the companion app.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions" Member="M:MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions.DidReceiveApplicationContext(MonoTouch.WatchConnectivity.IWCSessionDelegate,MonoTouch.WatchConnectivity.WCSession,MonoTouch.Foundation.NSDictionary{MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSObject})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchConnectivity.IWCSessionDelegate" />
      </Targets>
      <Member MemberName="DidReceiveFile">
        <MemberSignature Language="C#" Value="public static void DidReceiveFile (this WatchConnectivity.IWCSessionDelegate This, WatchConnectivity.WCSession session, WatchConnectivity.WCSessionFile file);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveFile(class WatchConnectivity.IWCSessionDelegate This, class WatchConnectivity.WCSession session, class WatchConnectivity.WCSessionFile file) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchConnectivity.IWCSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.WatchConnectivity.WCSession" />
          <Parameter Name="file" Type="MonoTouch.WatchConnectivity.WCSessionFile" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="file">To be added.</param>
          <summary>A file was received successfully.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions" Member="M:MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions.DidReceiveFile(MonoTouch.WatchConnectivity.IWCSessionDelegate,MonoTouch.WatchConnectivity.WCSession,MonoTouch.WatchConnectivity.WCSessionFile)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchConnectivity.IWCSessionDelegate" />
      </Targets>
      <Member MemberName="DidReceiveMessage">
        <MemberSignature Language="C#" Value="public static void DidReceiveMessage (this WatchConnectivity.IWCSessionDelegate This, WatchConnectivity.WCSession session, Foundation.NSDictionary&lt;Foundation.NSString,Foundation.NSObject&gt; message);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveMessage(class WatchConnectivity.IWCSessionDelegate This, class WatchConnectivity.WCSession session, class Foundation.NSDictionary`2&lt;class Foundation.NSString, class Foundation.NSObject&gt; message) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchConnectivity.IWCSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.WatchConnectivity.WCSession" />
          <Parameter Name="message" Type="MonoTouch.Foundation.NSDictionary&lt;MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSObject&gt;" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="message">To be added.</param>
          <summary>An immediate message was received.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions" Member="M:MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions.DidReceiveMessage(MonoTouch.WatchConnectivity.IWCSessionDelegate,MonoTouch.WatchConnectivity.WCSession,MonoTouch.Foundation.NSDictionary{MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSObject})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchConnectivity.IWCSessionDelegate" />
      </Targets>
      <Member MemberName="DidReceiveMessage">
        <MemberSignature Language="C#" Value="public static void DidReceiveMessage (this WatchConnectivity.IWCSessionDelegate This, WatchConnectivity.WCSession session, Foundation.NSDictionary&lt;Foundation.NSString,Foundation.NSObject&gt; message, WatchConnectivity.WCSessionReplyHandler replyHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveMessage(class WatchConnectivity.IWCSessionDelegate This, class WatchConnectivity.WCSession session, class Foundation.NSDictionary`2&lt;class Foundation.NSString, class Foundation.NSObject&gt; message, class WatchConnectivity.WCSessionReplyHandler replyHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchConnectivity.IWCSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.WatchConnectivity.WCSession" />
          <Parameter Name="message" Type="MonoTouch.Foundation.NSDictionary&lt;MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSObject&gt;" />
          <Parameter Name="replyHandler" Type="MonoTouch.WatchConnectivity.WCSessionReplyHandler">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDWCSessionReplyHandler))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="message">To be added.</param>
          <param name="replyHandler">To be added.</param>
          <summary>An immediate message was received.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions" Member="M:MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions.DidReceiveMessage(MonoTouch.WatchConnectivity.IWCSessionDelegate,MonoTouch.WatchConnectivity.WCSession,MonoTouch.Foundation.NSDictionary{MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSObject},MonoTouch.WatchConnectivity.WCSessionReplyHandler)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchConnectivity.IWCSessionDelegate" />
      </Targets>
      <Member MemberName="DidReceiveMessageData">
        <MemberSignature Language="C#" Value="public static void DidReceiveMessageData (this WatchConnectivity.IWCSessionDelegate This, WatchConnectivity.WCSession session, Foundation.NSData messageData);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveMessageData(class WatchConnectivity.IWCSessionDelegate This, class WatchConnectivity.WCSession session, class Foundation.NSData messageData) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchConnectivity.IWCSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.WatchConnectivity.WCSession" />
          <Parameter Name="messageData" Type="MonoTouch.Foundation.NSData" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="messageData">To be added.</param>
          <summary>An immediate data message was received.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions" Member="M:MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions.DidReceiveMessageData(MonoTouch.WatchConnectivity.IWCSessionDelegate,MonoTouch.WatchConnectivity.WCSession,MonoTouch.Foundation.NSData)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchConnectivity.IWCSessionDelegate" />
      </Targets>
      <Member MemberName="DidReceiveMessageData">
        <MemberSignature Language="C#" Value="public static void DidReceiveMessageData (this WatchConnectivity.IWCSessionDelegate This, WatchConnectivity.WCSession session, Foundation.NSData messageData, WatchConnectivity.WCSessionReplyDataHandler replyHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveMessageData(class WatchConnectivity.IWCSessionDelegate This, class WatchConnectivity.WCSession session, class Foundation.NSData messageData, class WatchConnectivity.WCSessionReplyDataHandler replyHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchConnectivity.IWCSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.WatchConnectivity.WCSession" />
          <Parameter Name="messageData" Type="MonoTouch.Foundation.NSData" />
          <Parameter Name="replyHandler" Type="MonoTouch.WatchConnectivity.WCSessionReplyDataHandler">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDWCSessionReplyDataHandler))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="messageData">To be added.</param>
          <param name="replyHandler">To be added.</param>
          <summary>An immediate data message was received.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions" Member="M:MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions.DidReceiveMessageData(MonoTouch.WatchConnectivity.IWCSessionDelegate,MonoTouch.WatchConnectivity.WCSession,MonoTouch.Foundation.NSData,MonoTouch.WatchConnectivity.WCSessionReplyDataHandler)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchConnectivity.IWCSessionDelegate" />
      </Targets>
      <Member MemberName="DidReceiveUserInfo">
        <MemberSignature Language="C#" Value="public static void DidReceiveUserInfo (this WatchConnectivity.IWCSessionDelegate This, WatchConnectivity.WCSession session, Foundation.NSDictionary&lt;Foundation.NSString,Foundation.NSObject&gt; userInfo);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveUserInfo(class WatchConnectivity.IWCSessionDelegate This, class WatchConnectivity.WCSession session, class Foundation.NSDictionary`2&lt;class Foundation.NSString, class Foundation.NSObject&gt; userInfo) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchConnectivity.IWCSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.WatchConnectivity.WCSession" />
          <Parameter Name="userInfo" Type="MonoTouch.Foundation.NSDictionary&lt;MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSObject&gt;" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="userInfo">To be added.</param>
          <summary>A data dictionary was received.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions" Member="M:MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions.DidReceiveUserInfo(MonoTouch.WatchConnectivity.IWCSessionDelegate,MonoTouch.WatchConnectivity.WCSession,MonoTouch.Foundation.NSDictionary{MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSObject})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchConnectivity.IWCSessionDelegate" />
      </Targets>
      <Member MemberName="SessionReachabilityDidChange">
        <MemberSignature Language="C#" Value="public static void SessionReachabilityDidChange (this WatchConnectivity.IWCSessionDelegate This, WatchConnectivity.WCSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SessionReachabilityDidChange(class WatchConnectivity.IWCSessionDelegate This, class WatchConnectivity.WCSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchConnectivity.IWCSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.WatchConnectivity.WCSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <summary>The reachability of the companion device has changed.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions" Member="M:MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions.SessionReachabilityDidChange(MonoTouch.WatchConnectivity.IWCSessionDelegate,MonoTouch.WatchConnectivity.WCSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchConnectivity.IWCSessionDelegate" />
      </Targets>
      <Member MemberName="SessionWatchStateDidChange">
        <MemberSignature Language="C#" Value="public static void SessionWatchStateDidChange (this WatchConnectivity.IWCSessionDelegate This, WatchConnectivity.WCSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SessionWatchStateDidChange(class WatchConnectivity.IWCSessionDelegate This, class WatchConnectivity.WCSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchConnectivity.IWCSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.WatchConnectivity.WCSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <summary>A feature has been enabled or disabled.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions" Member="M:MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions.SessionWatchStateDidChange(MonoTouch.WatchConnectivity.IWCSessionDelegate,MonoTouch.WatchConnectivity.WCSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchKit.WKInterfaceObject" />
      </Targets>
      <Member MemberName="SetAccessibilityHint">
        <MemberSignature Language="C#" Value="public static void SetAccessibilityHint (this WatchKit.WKInterfaceObject This, string accessibilityHint);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAccessibilityHint(class WatchKit.WKInterfaceObject This, string accessibilityHint) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchKit.WKInterfaceObject" RefType="this" />
          <Parameter Name="accessibilityHint" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="accessibilityHint">
            <para>To be added.</para>
            <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
          </param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchKit.WKAccessibility" Member="M:MonoTouch.WatchKit.WKAccessibility.SetAccessibilityHint(MonoTouch.WatchKit.WKInterfaceObject,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchKit.WKInterfaceObject" />
      </Targets>
      <Member MemberName="SetAccessibilityIdentifier">
        <MemberSignature Language="C#" Value="public static void SetAccessibilityIdentifier (this WatchKit.WKInterfaceObject This, string accessibilityIdentifier);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAccessibilityIdentifier(class WatchKit.WKInterfaceObject This, string accessibilityIdentifier) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchKit.WKInterfaceObject" RefType="this" />
          <Parameter Name="accessibilityIdentifier" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="accessibilityIdentifier">
            <para>To be added.</para>
            <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
          </param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchKit.WKAccessibility" Member="M:MonoTouch.WatchKit.WKAccessibility.SetAccessibilityIdentifier(MonoTouch.WatchKit.WKInterfaceObject,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchKit.WKInterfaceObject" />
      </Targets>
      <Member MemberName="SetAccessibilityImageRegions">
        <MemberSignature Language="C#" Value="public static void SetAccessibilityImageRegions (this WatchKit.WKInterfaceObject This, WatchKit.WKAccessibilityImageRegion[] accessibilityImageRegions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAccessibilityImageRegions(class WatchKit.WKInterfaceObject This, class WatchKit.WKAccessibilityImageRegion[] accessibilityImageRegions) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchKit.WKInterfaceObject" RefType="this" />
          <Parameter Name="accessibilityImageRegions" Type="MonoTouch.WatchKit.WKAccessibilityImageRegion[]" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="accessibilityImageRegions">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchKit.WKAccessibility" Member="M:MonoTouch.WatchKit.WKAccessibility.SetAccessibilityImageRegions(MonoTouch.WatchKit.WKInterfaceObject,MonoTouch.WatchKit.WKAccessibilityImageRegion[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchKit.WKInterfaceObject" />
      </Targets>
      <Member MemberName="SetAccessibilityLabel">
        <MemberSignature Language="C#" Value="public static void SetAccessibilityLabel (this WatchKit.WKInterfaceObject This, string accessibilityLabel);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAccessibilityLabel(class WatchKit.WKInterfaceObject This, string accessibilityLabel) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchKit.WKInterfaceObject" RefType="this" />
          <Parameter Name="accessibilityLabel" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="accessibilityLabel">
            <para>To be added.</para>
            <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
          </param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchKit.WKAccessibility" Member="M:MonoTouch.WatchKit.WKAccessibility.SetAccessibilityLabel(MonoTouch.WatchKit.WKInterfaceObject,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchKit.WKInterfaceObject" />
      </Targets>
      <Member MemberName="SetAccessibilityTraits">
        <MemberSignature Language="C#" Value="public static void SetAccessibilityTraits (this WatchKit.WKInterfaceObject This, UIKit.UIAccessibilityTrait accessibilityTraits);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAccessibilityTraits(class WatchKit.WKInterfaceObject This, valuetype UIKit.UIAccessibilityTrait accessibilityTraits) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchKit.WKInterfaceObject" RefType="this" />
          <Parameter Name="accessibilityTraits" Type="MonoTouch.UIKit.UIAccessibilityTrait" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="accessibilityTraits">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchKit.WKAccessibility" Member="M:MonoTouch.WatchKit.WKAccessibility.SetAccessibilityTraits(MonoTouch.WatchKit.WKInterfaceObject,MonoTouch.UIKit.UIAccessibilityTrait)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchKit.WKInterfaceObject" />
      </Targets>
      <Member MemberName="SetAccessibilityValue">
        <MemberSignature Language="C#" Value="public static void SetAccessibilityValue (this WatchKit.WKInterfaceObject This, string accessibilityValue);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAccessibilityValue(class WatchKit.WKInterfaceObject This, string accessibilityValue) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchKit.WKInterfaceObject" RefType="this" />
          <Parameter Name="accessibilityValue" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="accessibilityValue">
            <para>To be added.</para>
            <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
          </param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchKit.WKAccessibility" Member="M:MonoTouch.WatchKit.WKAccessibility.SetAccessibilityValue(MonoTouch.WatchKit.WKInterfaceObject,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchKit.WKInterfaceObject" />
      </Targets>
      <Member MemberName="SetIsAccessibilityElement">
        <MemberSignature Language="C#" Value="public static void SetIsAccessibilityElement (this WatchKit.WKInterfaceObject This, bool isAccessibilityElement);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsAccessibilityElement(class WatchKit.WKInterfaceObject This, bool isAccessibilityElement) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchKit.WKInterfaceObject" RefType="this" />
          <Parameter Name="isAccessibilityElement" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="isAccessibilityElement">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchKit.WKAccessibility" Member="M:MonoTouch.WatchKit.WKAccessibility.SetIsAccessibilityElement(MonoTouch.WatchKit.WKInterfaceObject,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchKit.WKErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this WatchKit.WKErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype WatchKit.WKErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.WatchKit.WKErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.WatchKit.WKErrorCode value</summary>
        </Docs>
        <Link Type="MonoTouch.WatchKit.WKErrorCodeExtensions" Member="M:MonoTouch.WatchKit.WKErrorCodeExtensions.GetDomain(MonoTouch.WatchKit.WKErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.WKErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this WebKit.WKErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype WebKit.WKErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.WebKit.WKErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.WebKit.WKErrorCode value</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKErrorCodeExtensions" Member="M:MonoTouch.WebKit.WKErrorCodeExtensions.GetDomain(MonoTouch.WebKit.WKErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKHttpCookieStoreObserver" />
      </Targets>
      <Member MemberName="CookiesDidChangeInCookieStore">
        <MemberSignature Language="C#" Value="public static void CookiesDidChangeInCookieStore (this WebKit.IWKHttpCookieStoreObserver This, WebKit.WKHttpCookieStore cookieStore);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CookiesDidChangeInCookieStore(class WebKit.IWKHttpCookieStoreObserver This, class WebKit.WKHttpCookieStore cookieStore) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKHttpCookieStoreObserver" RefType="this" />
          <Parameter Name="cookieStore" Type="MonoTouch.WebKit.WKHttpCookieStore" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="cookieStore">To be added.</param>
          <summary>Method that is called when a cookie changes in the cookie store.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKHttpCookieStoreObserver_Extensions" Member="M:MonoTouch.WebKit.WKHttpCookieStoreObserver_Extensions.CookiesDidChangeInCookieStore(MonoTouch.WebKit.IWKHttpCookieStoreObserver,MonoTouch.WebKit.WKHttpCookieStore)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKNavigationDelegate" />
      </Targets>
      <Member MemberName="ContentProcessDidTerminate">
        <MemberSignature Language="C#" Value="public static void ContentProcessDidTerminate (this WebKit.IWKNavigationDelegate This, WebKit.WKWebView webView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ContentProcessDidTerminate(class WebKit.IWKNavigationDelegate This, class WebKit.WKWebView webView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKNavigationDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.WebKit.WKWebView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <summary>Method that is called when a web view's content is terminated.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKNavigationDelegate_Extensions" Member="M:MonoTouch.WebKit.WKNavigationDelegate_Extensions.ContentProcessDidTerminate(MonoTouch.WebKit.IWKNavigationDelegate,MonoTouch.WebKit.WKWebView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKNavigationDelegate" />
      </Targets>
      <Member MemberName="DecidePolicy">
        <MemberSignature Language="C#" Value="public static void DecidePolicy (this WebKit.IWKNavigationDelegate This, WebKit.WKWebView webView, WebKit.WKNavigationAction navigationAction, Action&lt;WebKit.WKNavigationActionPolicy&gt; decisionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DecidePolicy(class WebKit.IWKNavigationDelegate This, class WebKit.WKWebView webView, class WebKit.WKNavigationAction navigationAction, class System.Action`1&lt;valuetype WebKit.WKNavigationActionPolicy&gt; decisionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKNavigationDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.WebKit.WKWebView" />
          <Parameter Name="navigationAction" Type="MonoTouch.WebKit.WKNavigationAction" />
          <Parameter Name="decisionHandler" Type="System.Action&lt;MonoTouch.WebKit.WKNavigationActionPolicy&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V31))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <param name="navigationAction">To be added.</param>
          <param name="decisionHandler">To be added.</param>
          <summary>Assigns an action to be taken after the specified <paramref name="navigationAction" /> has been either canceled or allowed.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKNavigationDelegate_Extensions" Member="M:MonoTouch.WebKit.WKNavigationDelegate_Extensions.DecidePolicy(MonoTouch.WebKit.IWKNavigationDelegate,MonoTouch.WebKit.WKWebView,MonoTouch.WebKit.WKNavigationAction,System.Action{MonoTouch.WebKit.WKNavigationActionPolicy})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKNavigationDelegate" />
      </Targets>
      <Member MemberName="DecidePolicy">
        <MemberSignature Language="C#" Value="public static void DecidePolicy (this WebKit.IWKNavigationDelegate This, WebKit.WKWebView webView, WebKit.WKNavigationResponse navigationResponse, Action&lt;WebKit.WKNavigationResponsePolicy&gt; decisionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DecidePolicy(class WebKit.IWKNavigationDelegate This, class WebKit.WKWebView webView, class WebKit.WKNavigationResponse navigationResponse, class System.Action`1&lt;valuetype WebKit.WKNavigationResponsePolicy&gt; decisionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKNavigationDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.WebKit.WKWebView" />
          <Parameter Name="navigationResponse" Type="MonoTouch.WebKit.WKNavigationResponse" />
          <Parameter Name="decisionHandler" Type="System.Action&lt;MonoTouch.WebKit.WKNavigationResponsePolicy&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V32))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <param name="navigationResponse">To be added.</param>
          <param name="decisionHandler">To be added.</param>
          <summary>Assigns an action to be taken after the specified <paramref name="navigationResponse" /> has been either canceled or allowed.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKNavigationDelegate_Extensions" Member="M:MonoTouch.WebKit.WKNavigationDelegate_Extensions.DecidePolicy(MonoTouch.WebKit.IWKNavigationDelegate,MonoTouch.WebKit.WKWebView,MonoTouch.WebKit.WKNavigationResponse,System.Action{MonoTouch.WebKit.WKNavigationResponsePolicy})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKNavigationDelegate" />
      </Targets>
      <Member MemberName="DidCommitNavigation">
        <MemberSignature Language="C#" Value="public static void DidCommitNavigation (this WebKit.IWKNavigationDelegate This, WebKit.WKWebView webView, WebKit.WKNavigation navigation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidCommitNavigation(class WebKit.IWKNavigationDelegate This, class WebKit.WKWebView webView, class WebKit.WKNavigation navigation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKNavigationDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.WebKit.WKWebView" />
          <Parameter Name="navigation" Type="MonoTouch.WebKit.WKNavigation" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <param name="navigation">To be added.</param>
          <summary>Method that is called when content begins to load.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKNavigationDelegate_Extensions" Member="M:MonoTouch.WebKit.WKNavigationDelegate_Extensions.DidCommitNavigation(MonoTouch.WebKit.IWKNavigationDelegate,MonoTouch.WebKit.WKWebView,MonoTouch.WebKit.WKNavigation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKNavigationDelegate" />
      </Targets>
      <Member MemberName="DidFailNavigation">
        <MemberSignature Language="C#" Value="public static void DidFailNavigation (this WebKit.IWKNavigationDelegate This, WebKit.WKWebView webView, WebKit.WKNavigation navigation, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFailNavigation(class WebKit.IWKNavigationDelegate This, class WebKit.WKWebView webView, class WebKit.WKNavigation navigation, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKNavigationDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.WebKit.WKWebView" />
          <Parameter Name="navigation" Type="MonoTouch.WebKit.WKNavigation" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <param name="navigation">To be added.</param>
          <param name="error">To be added.</param>
          <summary>Method that is called when a committed navigation fails.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKNavigationDelegate_Extensions" Member="M:MonoTouch.WebKit.WKNavigationDelegate_Extensions.DidFailNavigation(MonoTouch.WebKit.IWKNavigationDelegate,MonoTouch.WebKit.WKWebView,MonoTouch.WebKit.WKNavigation,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKNavigationDelegate" />
      </Targets>
      <Member MemberName="DidFailProvisionalNavigation">
        <MemberSignature Language="C#" Value="public static void DidFailProvisionalNavigation (this WebKit.IWKNavigationDelegate This, WebKit.WKWebView webView, WebKit.WKNavigation navigation, Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFailProvisionalNavigation(class WebKit.IWKNavigationDelegate This, class WebKit.WKWebView webView, class WebKit.WKNavigation navigation, class Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKNavigationDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.WebKit.WKWebView" />
          <Parameter Name="navigation" Type="MonoTouch.WebKit.WKNavigation" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <param name="navigation">To be added.</param>
          <param name="error">To be added.</param>
          <summary>Method that is called when a committed navigation fails after data has begun to load.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKNavigationDelegate_Extensions" Member="M:MonoTouch.WebKit.WKNavigationDelegate_Extensions.DidFailProvisionalNavigation(MonoTouch.WebKit.IWKNavigationDelegate,MonoTouch.WebKit.WKWebView,MonoTouch.WebKit.WKNavigation,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKNavigationDelegate" />
      </Targets>
      <Member MemberName="DidFinishNavigation">
        <MemberSignature Language="C#" Value="public static void DidFinishNavigation (this WebKit.IWKNavigationDelegate This, WebKit.WKWebView webView, WebKit.WKNavigation navigation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinishNavigation(class WebKit.IWKNavigationDelegate This, class WebKit.WKWebView webView, class WebKit.WKNavigation navigation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKNavigationDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.WebKit.WKWebView" />
          <Parameter Name="navigation" Type="MonoTouch.WebKit.WKNavigation" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <param name="navigation">To be added.</param>
          <summary>Method that is called when all the data is loaded.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKNavigationDelegate_Extensions" Member="M:MonoTouch.WebKit.WKNavigationDelegate_Extensions.DidFinishNavigation(MonoTouch.WebKit.IWKNavigationDelegate,MonoTouch.WebKit.WKWebView,MonoTouch.WebKit.WKNavigation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKNavigationDelegate" />
      </Targets>
      <Member MemberName="DidReceiveAuthenticationChallenge">
        <MemberSignature Language="C#" Value="public static void DidReceiveAuthenticationChallenge (this WebKit.IWKNavigationDelegate This, WebKit.WKWebView webView, Foundation.NSUrlAuthenticationChallenge challenge, Action&lt;Foundation.NSUrlSessionAuthChallengeDisposition,Foundation.NSUrlCredential&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveAuthenticationChallenge(class WebKit.IWKNavigationDelegate This, class WebKit.WKWebView webView, class Foundation.NSUrlAuthenticationChallenge challenge, class System.Action`2&lt;valuetype Foundation.NSUrlSessionAuthChallengeDisposition, class Foundation.NSUrlCredential&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKNavigationDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.WebKit.WKWebView" />
          <Parameter Name="challenge" Type="MonoTouch.Foundation.NSUrlAuthenticationChallenge" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSUrlSessionAuthChallengeDisposition,MonoTouch.Foundation.NSUrlCredential&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V33))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <param name="challenge">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>Method that is called when an authentication challenge is issued.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKNavigationDelegate_Extensions" Member="M:MonoTouch.WebKit.WKNavigationDelegate_Extensions.DidReceiveAuthenticationChallenge(MonoTouch.WebKit.IWKNavigationDelegate,MonoTouch.WebKit.WKWebView,MonoTouch.Foundation.NSUrlAuthenticationChallenge,System.Action{MonoTouch.Foundation.NSUrlSessionAuthChallengeDisposition,MonoTouch.Foundation.NSUrlCredential})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKNavigationDelegate" />
      </Targets>
      <Member MemberName="DidReceiveServerRedirectForProvisionalNavigation">
        <MemberSignature Language="C#" Value="public static void DidReceiveServerRedirectForProvisionalNavigation (this WebKit.IWKNavigationDelegate This, WebKit.WKWebView webView, WebKit.WKNavigation navigation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveServerRedirectForProvisionalNavigation(class WebKit.IWKNavigationDelegate This, class WebKit.WKWebView webView, class WebKit.WKNavigation navigation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKNavigationDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.WebKit.WKWebView" />
          <Parameter Name="navigation" Type="MonoTouch.WebKit.WKNavigation" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <param name="navigation">To be added.</param>
          <summary>Method that is called when a server redirect is received.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKNavigationDelegate_Extensions" Member="M:MonoTouch.WebKit.WKNavigationDelegate_Extensions.DidReceiveServerRedirectForProvisionalNavigation(MonoTouch.WebKit.IWKNavigationDelegate,MonoTouch.WebKit.WKWebView,MonoTouch.WebKit.WKNavigation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKNavigationDelegate" />
      </Targets>
      <Member MemberName="DidStartProvisionalNavigation">
        <MemberSignature Language="C#" Value="public static void DidStartProvisionalNavigation (this WebKit.IWKNavigationDelegate This, WebKit.WKWebView webView, WebKit.WKNavigation navigation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidStartProvisionalNavigation(class WebKit.IWKNavigationDelegate This, class WebKit.WKWebView webView, class WebKit.WKNavigation navigation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKNavigationDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.WebKit.WKWebView" />
          <Parameter Name="navigation" Type="MonoTouch.WebKit.WKNavigation" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <param name="navigation">To be added.</param>
          <summary>Method that is called when data begins to load.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKNavigationDelegate_Extensions" Member="M:MonoTouch.WebKit.WKNavigationDelegate_Extensions.DidStartProvisionalNavigation(MonoTouch.WebKit.IWKNavigationDelegate,MonoTouch.WebKit.WKWebView,MonoTouch.WebKit.WKNavigation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKUIDelegate" />
      </Targets>
      <Member MemberName="CommitPreviewingViewController">
        <MemberSignature Language="C#" Value="public static void CommitPreviewingViewController (this WebKit.IWKUIDelegate This, WebKit.WKWebView webView, UIKit.UIViewController previewingViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CommitPreviewingViewController(class WebKit.IWKUIDelegate This, class WebKit.WKWebView webView, class UIKit.UIViewController previewingViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKUIDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.WebKit.WKWebView" />
          <Parameter Name="previewingViewController" Type="MonoTouch.UIKit.UIViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <param name="previewingViewController">To be added.</param>
          <summary>Method that is called to respond when the user pops a preview action.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKUIDelegate_Extensions" Member="M:MonoTouch.WebKit.WKUIDelegate_Extensions.CommitPreviewingViewController(MonoTouch.WebKit.IWKUIDelegate,MonoTouch.WebKit.WKWebView,MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKUIDelegate" />
      </Targets>
      <Member MemberName="CreateWebView">
        <MemberSignature Language="C#" Value="public static WebKit.WKWebView CreateWebView (this WebKit.IWKUIDelegate This, WebKit.WKWebView webView, WebKit.WKWebViewConfiguration configuration, WebKit.WKNavigationAction navigationAction, WebKit.WKWindowFeatures windowFeatures);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class WebKit.WKWebView CreateWebView(class WebKit.IWKUIDelegate This, class WebKit.WKWebView webView, class WebKit.WKWebViewConfiguration configuration, class WebKit.WKNavigationAction navigationAction, class WebKit.WKWindowFeatures windowFeatures) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.WebKit.WKWebView</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKUIDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.WebKit.WKWebView" />
          <Parameter Name="configuration" Type="MonoTouch.WebKit.WKWebViewConfiguration" />
          <Parameter Name="navigationAction" Type="MonoTouch.WebKit.WKNavigationAction" />
          <Parameter Name="windowFeatures" Type="MonoTouch.WebKit.WKWindowFeatures" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <param name="configuration">To be added.</param>
          <param name="navigationAction">To be added.</param>
          <param name="windowFeatures">To be added.</param>
          <summary>Creates and configures a new <see cref="T:WebKit.WKWebView" />.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKUIDelegate_Extensions" Member="M:MonoTouch.WebKit.WKUIDelegate_Extensions.CreateWebView(MonoTouch.WebKit.IWKUIDelegate,MonoTouch.WebKit.WKWebView,MonoTouch.WebKit.WKWebViewConfiguration,MonoTouch.WebKit.WKNavigationAction,MonoTouch.WebKit.WKWindowFeatures)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKUIDelegate" />
      </Targets>
      <Member MemberName="DidClose">
        <MemberSignature Language="C#" Value="public static void DidClose (this WebKit.IWKUIDelegate This, WebKit.WKWebView webView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidClose(class WebKit.IWKUIDelegate This, class WebKit.WKWebView webView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKUIDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.WebKit.WKWebView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <summary>Method that is called when <paramref name="webView" /> closes.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKUIDelegate_Extensions" Member="M:MonoTouch.WebKit.WKUIDelegate_Extensions.DidClose(MonoTouch.WebKit.IWKUIDelegate,MonoTouch.WebKit.WKWebView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKUIDelegate" />
      </Targets>
      <Member MemberName="GetPreviewingViewController">
        <MemberSignature Language="C#" Value="public static UIKit.UIViewController GetPreviewingViewController (this WebKit.IWKUIDelegate This, WebKit.WKWebView webView, WebKit.WKPreviewElementInfo elementInfo, WebKit.IWKPreviewActionItem[] previewActions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class UIKit.UIViewController GetPreviewingViewController(class WebKit.IWKUIDelegate This, class WebKit.WKWebView webView, class WebKit.WKPreviewElementInfo elementInfo, class WebKit.IWKPreviewActionItem[] previewActions) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIViewController</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKUIDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.WebKit.WKWebView" />
          <Parameter Name="elementInfo" Type="MonoTouch.WebKit.WKPreviewElementInfo" />
          <Parameter Name="previewActions" Type="MonoTouch.WebKit.IWKPreviewActionItem[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <param name="elementInfo">To be added.</param>
          <param name="previewActions">To be added.</param>
          <summary>Method that is called when the user peeks at content.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKUIDelegate_Extensions" Member="M:MonoTouch.WebKit.WKUIDelegate_Extensions.GetPreviewingViewController(MonoTouch.WebKit.IWKUIDelegate,MonoTouch.WebKit.WKWebView,MonoTouch.WebKit.WKPreviewElementInfo,MonoTouch.WebKit.IWKPreviewActionItem[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKUIDelegate" />
      </Targets>
      <Member MemberName="RunJavaScriptAlertPanel">
        <MemberSignature Language="C#" Value="public static void RunJavaScriptAlertPanel (this WebKit.IWKUIDelegate This, WebKit.WKWebView webView, string message, WebKit.WKFrameInfo frame, Action completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RunJavaScriptAlertPanel(class WebKit.IWKUIDelegate This, class WebKit.WKWebView webView, string message, class WebKit.WKFrameInfo frame, class System.Action completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKUIDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.WebKit.WKWebView" />
          <Parameter Name="message" Type="System.String" />
          <Parameter Name="frame" Type="MonoTouch.WebKit.WKFrameInfo" />
          <Parameter Name="completionHandler" Type="System.Action">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDAction))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <param name="message">To be added.</param>
          <param name="frame">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>Shows a JavaScript alert to the user.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKUIDelegate_Extensions" Member="M:MonoTouch.WebKit.WKUIDelegate_Extensions.RunJavaScriptAlertPanel(MonoTouch.WebKit.IWKUIDelegate,MonoTouch.WebKit.WKWebView,System.String,MonoTouch.WebKit.WKFrameInfo,System.Action)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKUIDelegate" />
      </Targets>
      <Member MemberName="RunJavaScriptConfirmPanel">
        <MemberSignature Language="C#" Value="public static void RunJavaScriptConfirmPanel (this WebKit.IWKUIDelegate This, WebKit.WKWebView webView, string message, WebKit.WKFrameInfo frame, Action&lt;bool&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RunJavaScriptConfirmPanel(class WebKit.IWKUIDelegate This, class WebKit.WKWebView webView, string message, class WebKit.WKFrameInfo frame, class System.Action`1&lt;bool&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKUIDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.WebKit.WKWebView" />
          <Parameter Name="message" Type="System.String" />
          <Parameter Name="frame" Type="MonoTouch.WebKit.WKFrameInfo" />
          <Parameter Name="completionHandler" Type="System.Action&lt;System.Boolean&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V12))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <param name="message">To be added.</param>
          <param name="frame">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>Shows a JavaScript confirmation dialog to the user.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKUIDelegate_Extensions" Member="M:MonoTouch.WebKit.WKUIDelegate_Extensions.RunJavaScriptConfirmPanel(MonoTouch.WebKit.IWKUIDelegate,MonoTouch.WebKit.WKWebView,System.String,MonoTouch.WebKit.WKFrameInfo,System.Action{System.Boolean})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKUIDelegate" />
      </Targets>
      <Member MemberName="RunJavaScriptTextInputPanel">
        <MemberSignature Language="C#" Value="public static void RunJavaScriptTextInputPanel (this WebKit.IWKUIDelegate This, WebKit.WKWebView webView, string prompt, string defaultText, WebKit.WKFrameInfo frame, Action&lt;string&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RunJavaScriptTextInputPanel(class WebKit.IWKUIDelegate This, class WebKit.WKWebView webView, string prompt, string defaultText, class WebKit.WKFrameInfo frame, class System.Action`1&lt;string&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKUIDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.WebKit.WKWebView" />
          <Parameter Name="prompt" Type="System.String" />
          <Parameter Name="defaultText" Type="System.String" />
          <Parameter Name="frame" Type="MonoTouch.WebKit.WKFrameInfo" />
          <Parameter Name="completionHandler" Type="System.Action&lt;System.String&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity1V28))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <param name="prompt">To be added.</param>
          <param name="defaultText">To be added.This parameter can be .</param>
          <param name="frame">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>Shows a JavaScript text input box to the user.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKUIDelegate_Extensions" Member="M:MonoTouch.WebKit.WKUIDelegate_Extensions.RunJavaScriptTextInputPanel(MonoTouch.WebKit.IWKUIDelegate,MonoTouch.WebKit.WKWebView,System.String,System.String,MonoTouch.WebKit.WKFrameInfo,System.Action{System.String})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKUIDelegate" />
      </Targets>
      <Member MemberName="ShouldPreviewElement">
        <MemberSignature Language="C#" Value="public static bool ShouldPreviewElement (this WebKit.IWKUIDelegate This, WebKit.WKWebView webView, WebKit.WKPreviewElementInfo elementInfo);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldPreviewElement(class WebKit.IWKUIDelegate This, class WebKit.WKWebView webView, class WebKit.WKPreviewElementInfo elementInfo) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKUIDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.WebKit.WKWebView" />
          <Parameter Name="elementInfo" Type="MonoTouch.WebKit.WKPreviewElementInfo" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <param name="elementInfo">To be added.</param>
          <summary>Method that is called to find out if the element should provide a preview.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKUIDelegate_Extensions" Member="M:MonoTouch.WebKit.WKUIDelegate_Extensions.ShouldPreviewElement(MonoTouch.WebKit.IWKUIDelegate,MonoTouch.WebKit.WKWebView,MonoTouch.WebKit.WKPreviewElementInfo)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SystemConfiguration.StatusCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static Foundation.NSString GetDomain (this SystemConfiguration.StatusCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Foundation.NSString GetDomain(valuetype SystemConfiguration.StatusCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="SystemConfiguration.StatusCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SystemConfiguration.StatusCodeExtensions" Member="M:SystemConfiguration.StatusCodeExtensions.GetDomain(SystemConfiguration.StatusCode)" />
      </Member>
    </ExtensionMethod>
  </ExtensionMethods>
</Overview>