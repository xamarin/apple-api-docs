<Overview>
  <Assemblies>
    <Assembly Name="Xamarin.iOS" Version="0.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 11 00 00 00 43 8a c2 a5 ac fb f1 6c bd 2b 2b 47 a6 27 62 f2 73 df 9c b2 79 5c ec cd f7 7d 10 bf 50 8e 69 e7 a3 62 ea 7a 45 45 5b bf 3a c9 55 e1 f2 e2 81 4f 14 4e 5d 81 7e fc 4c 65 02 cc 01 2d f3 10 78 33 48 30 4e 3a e3 85 73 c6 d6 58 c2 34 02 58 21 fd a8 7a 0b e8 a0 d5 04 df 56 4e 2c 93 b2 b8 78 92 5f 42 50 3e 9d 54 df ef 9f 95 86 d9 e6 f3 8a 30 57 69 58 7b 1d e0 1f 6c 04 10 32 8b 2c 97 33 db ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("Xamarin Inc.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyInformationalVersion("9.99.0.1; git-rev-head:12ce7fdffb5805c095b653e263c5cb8a9d920bfd; git-branch:xcode8")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("Xamarin.iOS")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("Xamarin.iOS")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="OpenTK-1.0" Version="0.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 11 00 00 00 43 8a c2 a5 ac fb f1 6c bd 2b 2b 47 a6 27 62 f2 73 df 9c b2 79 5c ec cd f7 7d 10 bf 50 8e 69 e7 a3 62 ea 7a 45 45 5b bf 3a c9 55 e1 f2 e2 81 4f 14 4e 5d 81 7e fc 4c 65 02 cc 01 2d f3 10 78 33 48 30 4e 3a e3 85 73 c6 d6 58 c2 34 02 58 21 fd a8 7a 0b e8 a0 d5 04 df 56 4e 2c 93 b2 b8 78 92 5f 42 50 3e 9d 54 df ef 9f 95 86 d9 e6 f3 8a 30 57 69 58 7b 1d e0 1f 6c 04 10 32 8b 2c 97 33 db ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.DisableOptimizations | System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="MonoTouch.Dialog-1" Version="0.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 11 00 00 00 43 8a c2 a5 ac fb f1 6c bd 2b 2b 47 a6 27 62 f2 73 df 9c b2 79 5c ec cd f7 7d 10 bf 50 8e 69 e7 a3 62 ea 7a 45 45 5b bf 3a c9 55 e1 f2 e2 81 4f 14 4e 5d 81 7e fc 4c 65 02 cc 01 2d f3 10 78 33 48 30 4e 3a e3 85 73 c6 d6 58 c2 34 02 58 21 fd a8 7a 0b e8 a0 d5 04 df 56 4e 2c 93 b2 b8 78 92 5f 42 50 3e 9d 54 df ef 9f 95 86 d9 e6 f3 8a 30 57 69 58 7b 1d e0 1f 6c 04 10 32 8b 2c 97 33 db ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
    <Assembly Name="MonoTouch.NUnitLite" Version="1.0.0.0">
      <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 11 00 00 00 43 8a c2 a5 ac fb f1 6c bd 2b 2b 47 a6 27 62 f2 73 df 9c b2 79 5c ec cd f7 7d 10 bf 50 8e 69 e7 a3 62 ea 7a 45 45 5b bf 3a c9 55 e1 f2 e2 81 4f 14 4e 5d 81 7e fc 4c 65 02 cc 01 2d f3 10 78 33 48 30 4e 3a e3 85 73 c6 d6 58 c2 34 02 58 21 fd a8 7a 0b e8 a0 d5 04 df 56 4e 2c 93 b2 b8 78 92 5f 42 50 3e 9d 54 df ef 9f 95 86 d9 e6 f3 8a 30 57 69 58 7b 1d e0 1f 6c 04 10 32 8b 2c 97 33 db ]</AssemblyPublicKey>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.Debuggable(System.Diagnostics.DebuggableAttribute+DebuggingModes.IgnoreSymbolStoreSequencePoints)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCompany("NUnit Software")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyConfiguration(".NET 4.5")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyCopyright("Copyright 2013, Charlie Poole")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyDescription("NUnitLite unit-testing framework")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyFileVersion("1.0.0.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyProduct("NUnitLite")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTitle("NUnitLite")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Reflection.AssemblyTrademark("NUnitLite")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.RuntimeCompatibility(WrapNonExceptionThrows=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.Guid("0be367fd-d825-4039-a70b-54a3557170ec")</AttributeName>
        </Attribute>
      </Attributes>
    </Assembly>
  </Assemblies>
  <Remarks>To be added.</Remarks>
  <Copyright>To be added.</Copyright>
  <Types>
    <Namespace Name="CoreVideo">
      <Type Name="CVOpenGLESTexture" Kind="Class" />
      <Type Name="CVOpenGLESTextureCache" Kind="Class" />
    </Namespace>
    <Namespace Name="Mono.Options">
      <Type Name="Option" Kind="Class" />
      <Type Name="OptionAction`2" DisplayName="OptionAction&lt;TKey,TValue&gt;" Kind="Delegate" />
      <Type Name="OptionContext" Kind="Class" />
      <Type Name="OptionException" Kind="Class" />
      <Type Name="OptionSet" Kind="Class" />
      <Type Name="OptionValueCollection" Kind="Class" />
      <Type Name="OptionValueType" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch">
      <Type Name="Constants" Kind="Class" />
      <Type Name="MonoNativeFunctionWrapperAttribute" Kind="Class" />
      <Type Name="MonoPInvokeCallbackAttribute" Kind="Class" />
      <Type Name="RuntimeException" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.Accelerate">
      <Type Name="Pixel8888" Kind="Structure" />
      <Type Name="PixelARGB16S" Kind="Structure" />
      <Type Name="PixelARGB16U" Kind="Structure" />
      <Type Name="PixelFFFF" Kind="Structure" />
      <Type Name="vImage" Kind="Class" />
      <Type Name="vImageAffineTransformDouble" Kind="Structure" />
      <Type Name="vImageAffineTransformFloat" Kind="Structure" />
      <Type Name="vImageBuffer" Kind="Structure" />
      <Type Name="vImageError" Kind="Enumeration" />
      <Type Name="vImageFlags" Kind="Enumeration" />
      <Type Name="vImageGamma" Kind="Enumeration" />
      <Type Name="vImageInterpolationMethod" Kind="Enumeration" />
      <Type Name="vImageMDTableUsageHint" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.Accounts">
      <Type Name="ACAccount" Kind="Class" />
      <Type Name="ACAccountCredential" Kind="Class" />
      <Type Name="ACAccountCredentialRenewResult" Kind="Enumeration" />
      <Type Name="ACAccountStore" Kind="Class" />
      <Type Name="ACAccountStore+Notifications" Kind="Class" />
      <Type Name="ACAccountStoreSaveCompletionHandler" Kind="Delegate" />
      <Type Name="ACAccountType" Kind="Class" />
      <Type Name="AccountStoreOptions" Kind="Class" />
      <Type Name="ACErrorCode" Kind="Enumeration" />
      <Type Name="ACErrorCodeExtensions" Kind="Class" />
      <Type Name="ACFacebookAudience" Kind="Enumeration" />
      <Type Name="ACFacebookAudienceValue" Kind="Class" />
      <Type Name="ACFacebookKey" Kind="Class" />
      <Type Name="ACRequestCompletionHandler" Kind="Delegate" />
      <Type Name="ACTencentWeiboKey" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.AddressBook">
      <Type Name="ABAddressBook" Kind="Class" />
      <Type Name="ABAddressBookError" Kind="Enumeration" />
      <Type Name="ABAddressBookErrorExtensions" Kind="Class" />
      <Type Name="ABAuthorizationStatus" Kind="Enumeration" />
      <Type Name="ABGroup" Kind="Class" />
      <Type Name="ABLabel" Kind="Class" />
      <Type Name="ABMultiValue`1" DisplayName="ABMultiValue&lt;T&gt;" Kind="Class" />
      <Type Name="ABMultiValueEntry`1" DisplayName="ABMultiValueEntry&lt;T&gt;" Kind="Structure" />
      <Type Name="ABMutableDateMultiValue" Kind="Class" />
      <Type Name="ABMutableDictionaryMultiValue" Kind="Class" />
      <Type Name="ABMutableMultiValue`1" DisplayName="ABMutableMultiValue&lt;T&gt;" Kind="Class" />
      <Type Name="ABMutableStringMultiValue" Kind="Class" />
      <Type Name="ABPerson" Kind="Class" />
      <Type Name="ABPersonAddressKey" Kind="Class" />
      <Type Name="ABPersonCompositeNameFormat" Kind="Enumeration" />
      <Type Name="ABPersonDateLabel" Kind="Class" />
      <Type Name="ABPersonImageFormat" Kind="Enumeration" />
      <Type Name="ABPersonInstantMessageKey" Kind="Class" />
      <Type Name="ABPersonInstantMessageService" Kind="Class" />
      <Type Name="ABPersonKind" Kind="Enumeration" />
      <Type Name="ABPersonPhoneLabel" Kind="Class" />
      <Type Name="ABPersonProperty" Kind="Enumeration" />
      <Type Name="ABPersonRelatedNamesLabel" Kind="Class" />
      <Type Name="ABPersonSocialProfileService" Kind="Class" />
      <Type Name="ABPersonSortBy" Kind="Enumeration" />
      <Type Name="ABPersonUrlLabel" Kind="Class" />
      <Type Name="ABPropertyType" Kind="Enumeration" />
      <Type Name="ABRecord" Kind="Class" />
      <Type Name="ABRecordType" Kind="Enumeration" />
      <Type Name="ABSource" Kind="Class" />
      <Type Name="ABSourceProperty" Kind="Enumeration" />
      <Type Name="ABSourceType" Kind="Enumeration" />
      <Type Name="ExternalChangeEventArgs" Kind="Class" />
      <Type Name="InstantMessageService" Kind="Class" />
      <Type Name="PersonAddress" Kind="Class" />
      <Type Name="SocialProfile" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.AddressBookUI">
      <Type Name="ABAddressFormatting" Kind="Class" />
      <Type Name="ABNewPersonCompleteEventArgs" Kind="Class" />
      <Type Name="ABNewPersonViewController" Kind="Class" />
      <Type Name="ABNewPersonViewControllerDelegate" Kind="Class" />
      <Type Name="ABPeoplePickerNavigationController" Kind="Class" />
      <Type Name="ABPeoplePickerNavigationController+ABPeoplePickerNavigationControllerAppearance" Kind="Class" />
      <Type Name="ABPeoplePickerNavigationControllerDelegate" Kind="Class" />
      <Type Name="ABPeoplePickerNavigationControllerDelegate_Extensions" Kind="Class" />
      <Type Name="ABPeoplePickerPerformAction2EventArgs" Kind="Class" />
      <Type Name="ABPeoplePickerPerformActionEventArgs" Kind="Class" />
      <Type Name="ABPeoplePickerSelectPerson2EventArgs" Kind="Class" />
      <Type Name="ABPeoplePickerSelectPersonEventArgs" Kind="Class" />
      <Type Name="ABPersonPredicateKey" Kind="Class" />
      <Type Name="ABPersonViewController" Kind="Class" />
      <Type Name="ABPersonViewControllerDelegate" Kind="Class" />
      <Type Name="ABPersonViewPerformDefaultActionEventArgs" Kind="Class" />
      <Type Name="ABUnknownPersonCreatedEventArgs" Kind="Class" />
      <Type Name="ABUnknownPersonViewController" Kind="Class" />
      <Type Name="ABUnknownPersonViewControllerDelegate" Kind="Class" />
      <Type Name="ABUnknownPersonViewControllerDelegate_Extensions" Kind="Class" />
      <Type Name="DisplayedPropertiesCollection" Kind="Class" />
      <Type Name="IABNewPersonViewControllerDelegate" Kind="Interface" />
      <Type Name="IABPeoplePickerNavigationControllerDelegate" Kind="Interface" />
      <Type Name="IABPersonViewControllerDelegate" Kind="Interface" />
      <Type Name="IABUnknownPersonViewControllerDelegate" Kind="Interface" />
    </Namespace>
    <Namespace Name="MonoTouch.AdSupport">
      <Type Name="ASIdentifierManager" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.AssetsLibrary">
      <Type Name="ALAsset" Kind="Class" />
      <Type Name="ALAssetLibraryChangedEventArgs" Kind="Class" />
      <Type Name="ALAssetOrientation" Kind="Enumeration" />
      <Type Name="ALAssetRepresentation" Kind="Class" />
      <Type Name="ALAssetsEnumerator" Kind="Delegate" />
      <Type Name="ALAssetsError" Kind="Enumeration" />
      <Type Name="ALAssetsErrorExtensions" Kind="Class" />
      <Type Name="ALAssetsFilter" Kind="Class" />
      <Type Name="ALAssetsGroup" Kind="Class" />
      <Type Name="ALAssetsGroupType" Kind="Enumeration" />
      <Type Name="ALAssetsLibrary" Kind="Class" />
      <Type Name="ALAssetsLibrary+Notifications" Kind="Class" />
      <Type Name="ALAssetsLibraryGroupsEnumerationResultsDelegate" Kind="Delegate" />
      <Type Name="ALAssetType" Kind="Enumeration" />
      <Type Name="ALAuthorizationStatus" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.AudioToolbox">
      <Type Name="_MidiData" Kind="Class" />
      <Type Name="AccessoryInfo" Kind="Class" />
      <Type Name="AudioBalanceFade" Kind="Class" />
      <Type Name="AudioBalanceFadeType" Kind="Enumeration" />
      <Type Name="AudioBuffer" Kind="Structure" />
      <Type Name="AudioBuffers" Kind="Class" />
      <Type Name="AudioChannelBit" Kind="Enumeration" />
      <Type Name="AudioChannelDescription" Kind="Structure" />
      <Type Name="AudioChannelFlags" Kind="Enumeration" />
      <Type Name="AudioChannelLabel" Kind="Enumeration" />
      <Type Name="AudioChannelLayout" Kind="Class" />
      <Type Name="AudioChannelLayoutTag" Kind="Enumeration" />
      <Type Name="AudioChannelLayoutTagExtensions" Kind="Class" />
      <Type Name="AudioClassDescription" Kind="Structure" />
      <Type Name="AudioCodecComponentType" Kind="Enumeration" />
      <Type Name="AudioConverter" Kind="Class" />
      <Type Name="AudioConverterComplexInputData" Kind="Delegate" />
      <Type Name="AudioConverterError" Kind="Enumeration" />
      <Type Name="AudioConverterPrimeInfo" Kind="Structure" />
      <Type Name="AudioConverterPrimeMethod" Kind="Enumeration" />
      <Type Name="AudioConverterQuality" Kind="Enumeration" />
      <Type Name="AudioConverterSampleRateConverterComplexity" Kind="Enumeration" />
      <Type Name="AudioFile" Kind="Class" />
      <Type Name="AudioFileChunkType" Kind="Enumeration" />
      <Type Name="AudioFileError" Kind="Enumeration" />
      <Type Name="AudioFileFlags" Kind="Enumeration" />
      <Type Name="AudioFileGlobalInfo" Kind="Class" />
      <Type Name="AudioFileInfoDictionary" Kind="Class" />
      <Type Name="AudioFileLoopDirection" Kind="Enumeration" />
      <Type Name="AudioFileMarker" Kind="Structure" />
      <Type Name="AudioFileMarkerList" Kind="Class" />
      <Type Name="AudioFileMarkerType" Kind="Enumeration" />
      <Type Name="AudioFilePacketTableInfo" Kind="Structure" />
      <Type Name="AudioFilePermission" Kind="Enumeration" />
      <Type Name="AudioFileProperty" Kind="Enumeration" />
      <Type Name="AudioFileRegion" Kind="Structure" />
      <Type Name="AudioFileRegionFlags" Kind="Enumeration" />
      <Type Name="AudioFileRegionList" Kind="Class" />
      <Type Name="AudioFileSmpteTime" Kind="Structure" />
      <Type Name="AudioFileStream" Kind="Class" />
      <Type Name="AudioFileStreamProperty" Kind="Enumeration" />
      <Type Name="AudioFileStreamPropertyFlag" Kind="Enumeration" />
      <Type Name="AudioFileStreamStatus" Kind="Enumeration" />
      <Type Name="AudioFileType" Kind="Enumeration" />
      <Type Name="AudioFormat" Kind="Structure" />
      <Type Name="AudioFormatAvailability" Kind="Class" />
      <Type Name="AudioFormatError" Kind="Enumeration" />
      <Type Name="AudioFormatFlags" Kind="Enumeration" />
      <Type Name="AudioFormatType" Kind="Enumeration" />
      <Type Name="AudioPanningInfo" Kind="Class" />
      <Type Name="AudioQueue" Kind="Class" />
      <Type Name="AudioQueue+AudioQueuePropertyChanged" Kind="Delegate" />
      <Type Name="AudioQueueBuffer" Kind="Structure" />
      <Type Name="AudioQueueChannelAssignment" Kind="Structure" />
      <Type Name="AudioQueueDeviceProperty" Kind="Enumeration" />
      <Type Name="AudioQueueException" Kind="Class" />
      <Type Name="AudioQueueHardwareCodecPolicy" Kind="Enumeration" />
      <Type Name="AudioQueueLevelMeterState" Kind="Structure" />
      <Type Name="AudioQueueParameter" Kind="Enumeration" />
      <Type Name="AudioQueueParameterEvent" Kind="Structure" />
      <Type Name="AudioQueueProcessingTap" Kind="Class" />
      <Type Name="AudioQueueProcessingTapDelegate" Kind="Delegate" />
      <Type Name="AudioQueueProcessingTapFlags" Kind="Enumeration" />
      <Type Name="AudioQueueProperty" Kind="Enumeration" />
      <Type Name="AudioQueueStatus" Kind="Enumeration" />
      <Type Name="AudioQueueTimeline" Kind="Class" />
      <Type Name="AudioQueueTimePitchAlgorithm" Kind="Enumeration" />
      <Type Name="AudioServicesError" Kind="Enumeration" />
      <Type Name="AudioSession" Kind="Class" />
      <Type Name="AudioSession+PropertyListener" Kind="Delegate" />
      <Type Name="AudioSessionActiveFlags" Kind="Enumeration" />
      <Type Name="AudioSessionCategory" Kind="Enumeration" />
      <Type Name="AudioSessionErrors" Kind="Enumeration" />
      <Type Name="AudioSessionException" Kind="Class" />
      <Type Name="AudioSessionInputRouteKind" Kind="Enumeration" />
      <Type Name="AudioSessionInterruptionState" Kind="Enumeration" />
      <Type Name="AudioSessionInterruptionType" Kind="Enumeration" />
      <Type Name="AudioSessionMode" Kind="Enumeration" />
      <Type Name="AudioSessionOutputRouteKind" Kind="Enumeration" />
      <Type Name="AudioSessionProperty" Kind="Enumeration" />
      <Type Name="AudioSessionPropertyEventArgs" Kind="Class" />
      <Type Name="AudioSessionRouteChangeEventArgs" Kind="Class" />
      <Type Name="AudioSessionRouteChangeReason" Kind="Enumeration" />
      <Type Name="AudioSessionRoutingOverride" Kind="Enumeration" />
      <Type Name="AudioSource" Kind="Class" />
      <Type Name="AudioStreamBasicDescription" Kind="Structure" />
      <Type Name="AudioStreamPacketDescription" Kind="Structure" />
      <Type Name="AudioTimeStamp" Kind="Structure" />
      <Type Name="AudioTimeStamp+AtsFlags" Kind="Enumeration" />
      <Type Name="AudioValueRange" Kind="Structure" />
      <Type Name="BufferCompletedEventArgs" Kind="Class" />
      <Type Name="CABarBeatTime" Kind="Structure" />
      <Type Name="ExtendedNoteOnEvent" Kind="Structure" />
      <Type Name="InputAudioQueue" Kind="Class" />
      <Type Name="InputCompletedEventArgs" Kind="Class" />
      <Type Name="InputSourceInfo" Kind="Class" />
      <Type Name="InstrumentInfo" Kind="Class" />
      <Type Name="MidiChannelMessage" Kind="Structure" />
      <Type Name="MidiMetaEvent" Kind="Class" />
      <Type Name="MidiNoteMessage" Kind="Structure" />
      <Type Name="MidiRawData" Kind="Class" />
      <Type Name="MPEG4ObjectID" Kind="Enumeration" />
      <Type Name="MusicEventType" Kind="Enumeration" />
      <Type Name="MusicEventUserData" Kind="Class" />
      <Type Name="MusicPlayer" Kind="Class" />
      <Type Name="MusicPlayerStatus" Kind="Enumeration" />
      <Type Name="MusicSequence" Kind="Class" />
      <Type Name="MusicSequenceFileFlags" Kind="Enumeration" />
      <Type Name="MusicSequenceFileTypeID" Kind="Enumeration" />
      <Type Name="MusicSequenceLoadFlags" Kind="Enumeration" />
      <Type Name="MusicSequenceType" Kind="Enumeration" />
      <Type Name="MusicSequenceUserCallback" Kind="Delegate" />
      <Type Name="MusicTrack" Kind="Class" />
      <Type Name="OutputAudioQueue" Kind="Class" />
      <Type Name="PacketReceivedEventArgs" Kind="Class" />
      <Type Name="PanningMode" Kind="Enumeration" />
      <Type Name="PropertyFoundEventArgs" Kind="Class" />
      <Type Name="SmpteTime" Kind="Structure" />
      <Type Name="SmpteTimeFlags" Kind="Enumeration" />
      <Type Name="SmpteTimeType" Kind="Enumeration" />
      <Type Name="SoundBank" Kind="Class" />
      <Type Name="SystemSound" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.AudioUnit">
      <Type Name="_AUImplementorStringFromValueCallback" Kind="Delegate" />
      <Type Name="AU3DMixerAttenuationCurve" Kind="Enumeration" />
      <Type Name="AU3DMixerRenderingFlags" Kind="Enumeration" />
      <Type Name="AUAudioUnit" Kind="Class" />
      <Type Name="AUAudioUnit_AUAudioInputOutputUnit" Kind="Class" />
      <Type Name="AUAudioUnit+Notifications" Kind="Class" />
      <Type Name="AUAudioUnitBus" Kind="Class" />
      <Type Name="AUAudioUnitBusArray" Kind="Class" />
      <Type Name="AUAudioUnitBusType" Kind="Enumeration" />
      <Type Name="AUAudioUnitPreset" Kind="Class" />
      <Type Name="AudioCodecManufacturer" Kind="Enumeration" />
      <Type Name="AudioComponent" Kind="Class" />
      <Type Name="AudioComponentConfigurationInfo" Kind="Class" />
      <Type Name="AudioComponentDescription" Kind="Structure" />
      <Type Name="AudioComponentFlag" Kind="Enumeration" />
      <Type Name="AudioComponentInstantiationOptions" Kind="Enumeration" />
      <Type Name="AudioComponentManufacturerType" Kind="Enumeration" />
      <Type Name="AudioComponentStatus" Kind="Enumeration" />
      <Type Name="AudioComponentType" Kind="Enumeration" />
      <Type Name="AudioComponentValidationParameter" Kind="Class" />
      <Type Name="AudioComponentValidationResult" Kind="Enumeration" />
      <Type Name="AudioObjectPropertyElement" Kind="Enumeration" />
      <Type Name="AudioObjectPropertyScope" Kind="Enumeration" />
      <Type Name="AudioObjectPropertySelector" Kind="Enumeration" />
      <Type Name="AudioTypeConverter" Kind="Enumeration" />
      <Type Name="AudioTypeEffect" Kind="Enumeration" />
      <Type Name="AudioTypeGenerator" Kind="Enumeration" />
      <Type Name="AudioTypeMixer" Kind="Enumeration" />
      <Type Name="AudioTypeMusicDevice" Kind="Enumeration" />
      <Type Name="AudioTypeOutput" Kind="Enumeration" />
      <Type Name="AudioTypePanner" Kind="Enumeration" />
      <Type Name="AudioUnit" Kind="Class" />
      <Type Name="AudioUnitBusType" Kind="Enumeration" />
      <Type Name="AudioUnitClumpID" Kind="Enumeration" />
      <Type Name="AudioUnitConfigurationInfo" Kind="Class" />
      <Type Name="AudioUnitException" Kind="Class" />
      <Type Name="AudioUnitParameterFlag" Kind="Enumeration" />
      <Type Name="AudioUnitParameterInfo" Kind="Class" />
      <Type Name="AudioUnitParameterOptions" Kind="Enumeration" />
      <Type Name="AudioUnitParameterType" Kind="Enumeration" />
      <Type Name="AudioUnitParameterUnit" Kind="Enumeration" />
      <Type Name="AudioUnitPropertyIDType" Kind="Enumeration" />
      <Type Name="AudioUnitRemoteControlEvent" Kind="Enumeration" />
      <Type Name="AudioUnitRenderActionFlags" Kind="Enumeration" />
      <Type Name="AudioUnitScopeType" Kind="Enumeration" />
      <Type Name="AudioUnitStatus" Kind="Enumeration" />
      <Type Name="AudioUnitSubType" Kind="Enumeration" />
      <Type Name="AudioUnitUtils" Kind="Class" />
      <Type Name="AUEventSampleTime" Kind="Enumeration" />
      <Type Name="AUGraph" Kind="Class" />
      <Type Name="AUGraphError" Kind="Enumeration" />
      <Type Name="AUHostTransportStateBlock" Kind="Delegate" />
      <Type Name="AUHostTransportStateFlags" Kind="Enumeration" />
      <Type Name="AUImplementorDisplayNameWithLengthCallback" Kind="Delegate" />
      <Type Name="AUImplementorStringFromValueCallback" Kind="Delegate" />
      <Type Name="AUImplementorValueFromStringCallback" Kind="Delegate" />
      <Type Name="AUImplementorValueObserver" Kind="Delegate" />
      <Type Name="AUImplementorValueProvider" Kind="Delegate" />
      <Type Name="AUInputHandler" Kind="Delegate" />
      <Type Name="AUInternalRenderBlock" Kind="Delegate" />
      <Type Name="AUParameter" Kind="Class" />
      <Type Name="AUParameterEvent" Kind="Structure" />
      <Type Name="AUParameterGroup" Kind="Class" />
      <Type Name="AUParameterNode" Kind="Class" />
      <Type Name="AUParameterObserver" Kind="Delegate" />
      <Type Name="AUParameterObserverToken" Kind="Structure" />
      <Type Name="AUParameterRecordingObserver" Kind="Delegate" />
      <Type Name="AUParameterTree" Kind="Class" />
      <Type Name="AURecordedParameterEvent" Kind="Structure" />
      <Type Name="AURenderBlock" Kind="Delegate" />
      <Type Name="AURenderEvent" Kind="Structure" />
      <Type Name="AURenderEventEnumerator" Kind="Class" />
      <Type Name="AURenderEventHeader" Kind="Structure" />
      <Type Name="AURenderEventType" Kind="Enumeration" />
      <Type Name="AURenderPullInputBlock" Kind="Delegate" />
      <Type Name="AUReverbRoomType" Kind="Enumeration" />
      <Type Name="AUScheduledAudioFileRegion" Kind="Class" />
      <Type Name="AUScheduledAudioFileRegionCompletionHandler" Kind="Delegate" />
      <Type Name="AUScheduledAudioSliceFlags" Kind="Enumeration" />
      <Type Name="AUScheduleParameterBlock" Kind="Delegate" />
      <Type Name="AUSpatializationAlgorithm" Kind="Enumeration" />
      <Type Name="AUSpatialMixerAttenuationCurve" Kind="Enumeration" />
      <Type Name="AUSpatialMixerRenderingFlags" Kind="Enumeration" />
      <Type Name="ClassInfoDictionary" Kind="Class" />
      <Type Name="ExtAudioFile" Kind="Class" />
      <Type Name="ExtAudioFileError" Kind="Enumeration" />
      <Type Name="IAUAudioUnitFactory" Kind="Interface" />
      <Type Name="InputDelegate" Kind="Delegate" />
      <Type Name="InstrumentType" Kind="Enumeration" />
      <Type Name="RenderDelegate" Kind="Delegate" />
      <Type Name="SamplerInstrumentData" Kind="Class" />
      <Type Name="ScheduledAudioSliceFlag" Kind="Enumeration" />
      <Type Name="SpatialMixerAttenuation" Kind="Enumeration" />
      <Type Name="SpatialMixerRenderingFlags" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.AudioUnitWrapper">
    </Namespace>
    <Namespace Name="MonoTouch.AVFoundation">
      <Type Name="AudioSettings" Kind="Class" />
      <Type Name="AVAsset" Kind="Class" />
      <Type Name="AVAsset+Notifications" Kind="Class" />
      <Type Name="AVAssetDownloadDelegate" Kind="Class" />
      <Type Name="AVAssetDownloadDelegate_Extensions" Kind="Class" />
      <Type Name="AVAssetDownloadOptions" Kind="Class" />
      <Type Name="AVAssetDownloadTask" Kind="Class" />
      <Type Name="AVAssetDownloadUrlSession" Kind="Class" />
      <Type Name="AVAssetExportSession" Kind="Class" />
      <Type Name="AVAssetExportSessionStatus" Kind="Enumeration" />
      <Type Name="AVAssetImageGenerator" Kind="Class" />
      <Type Name="AVAssetImageGeneratorCompletionHandler" Kind="Delegate" />
      <Type Name="AVAssetImageGeneratorResult" Kind="Enumeration" />
      <Type Name="AVAssetReader" Kind="Class" />
      <Type Name="AVAssetReaderAudioMixOutput" Kind="Class" />
      <Type Name="AVAssetReaderOutput" Kind="Class" />
      <Type Name="AVAssetReaderOutputMetadataAdaptor" Kind="Class" />
      <Type Name="AVAssetReaderSampleReferenceOutput" Kind="Class" />
      <Type Name="AVAssetReaderStatus" Kind="Enumeration" />
      <Type Name="AVAssetReaderTrackOutput" Kind="Class" />
      <Type Name="AVAssetReaderVideoCompositionOutput" Kind="Class" />
      <Type Name="AVAssetReferenceRestrictions" Kind="Enumeration" />
      <Type Name="AVAssetResourceLoader" Kind="Class" />
      <Type Name="AVAssetResourceLoaderDelegate" Kind="Class" />
      <Type Name="AVAssetResourceLoaderDelegate_Extensions" Kind="Class" />
      <Type Name="AVAssetResourceLoadingContentInformationRequest" Kind="Class" />
      <Type Name="AVAssetResourceLoadingDataRequest" Kind="Class" />
      <Type Name="AVAssetResourceLoadingRequest" Kind="Class" />
      <Type Name="AVAssetResourceRenewalRequest" Kind="Class" />
      <Type Name="AVAssetTrack" Kind="Class" />
      <Type Name="AVAssetTrack+Notifications" Kind="Class" />
      <Type Name="AVAssetTrackGroup" Kind="Class" />
      <Type Name="AVAssetTrackSegment" Kind="Class" />
      <Type Name="AVAssetTrackTrackAssociation" Kind="Class" />
      <Type Name="AVAssetWriter" Kind="Class" />
      <Type Name="AVAssetWriterInput" Kind="Class" />
      <Type Name="AVAssetWriterInputGroup" Kind="Class" />
      <Type Name="AVAssetWriterInputMetadataAdaptor" Kind="Class" />
      <Type Name="AVAssetWriterInputPassDescription" Kind="Class" />
      <Type Name="AVAssetWriterInputPixelBufferAdaptor" Kind="Class" />
      <Type Name="AVAssetWriterStatus" Kind="Enumeration" />
      <Type Name="AVAsynchronousCIImageFilteringRequest" Kind="Class" />
      <Type Name="AVAsynchronousKeyValueLoading" Kind="Class" />
      <Type Name="AVAsynchronousVideoCompositionRequest" Kind="Class" />
      <Type Name="AVAudio3DAngularOrientation" Kind="Structure" />
      <Type Name="AVAudio3DMixing" Kind="Class" />
      <Type Name="AVAudio3DMixingRenderingAlgorithm" Kind="Enumeration" />
      <Type Name="AVAudio3DVectorOrientation" Kind="Structure" />
      <Type Name="AVAudioBitRateStrategy" Kind="Enumeration" />
      <Type Name="AVAudioBuffer" Kind="Class" />
      <Type Name="AVAudioChannelLayout" Kind="Class" />
      <Type Name="AVAudioCommonFormat" Kind="Enumeration" />
      <Type Name="AVAudioCompressedBuffer" Kind="Class" />
      <Type Name="AVAudioConnectionPoint" Kind="Class" />
      <Type Name="AVAudioConverter" Kind="Class" />
      <Type Name="AVAudioConverterInputHandler" Kind="Delegate" />
      <Type Name="AVAudioConverterInputStatus" Kind="Enumeration" />
      <Type Name="AVAudioConverterOutputStatus" Kind="Enumeration" />
      <Type Name="AVAudioConverterPrimeInfo" Kind="Structure" />
      <Type Name="AVAudioConverterPrimeMethod" Kind="Enumeration" />
      <Type Name="AVAudioDataSourceLocation" Kind="Enumeration" />
      <Type Name="AVAudioDataSourceOrientation" Kind="Enumeration" />
      <Type Name="AVAudioDataSourcePolarPattern" Kind="Enumeration" />
      <Type Name="AVAudioEngine" Kind="Class" />
      <Type Name="AVAudioEngine+Notifications" Kind="Class" />
      <Type Name="AVAudioEnvironmentDistanceAttenuationModel" Kind="Enumeration" />
      <Type Name="AVAudioEnvironmentDistanceAttenuationParameters" Kind="Class" />
      <Type Name="AVAudioEnvironmentNode" Kind="Class" />
      <Type Name="AVAudioEnvironmentReverbParameters" Kind="Class" />
      <Type Name="AVAudioFile" Kind="Class" />
      <Type Name="AVAudioFormat" Kind="Class" />
      <Type Name="AVAudioInputNode" Kind="Class" />
      <Type Name="AVAudioIONode" Kind="Class" />
      <Type Name="AVAudioMix" Kind="Class" />
      <Type Name="AVAudioMixerNode" Kind="Class" />
      <Type Name="AVAudioMixing_Extensions" Kind="Class" />
      <Type Name="AVAudioMixingDestination" Kind="Class" />
      <Type Name="AVAudioMixInputParameters" Kind="Class" />
      <Type Name="AVAudioNode" Kind="Class" />
      <Type Name="AVAudioNodeTapBlock" Kind="Delegate" />
      <Type Name="AVAudioOutputNode" Kind="Class" />
      <Type Name="AVAudioPcmBuffer" Kind="Class" />
      <Type Name="AVAudioPlayer" Kind="Class" />
      <Type Name="AVAudioPlayerDelegate" Kind="Class" />
      <Type Name="AVAudioPlayerDelegate_Extensions" Kind="Class" />
      <Type Name="AVAudioPlayerNode" Kind="Class" />
      <Type Name="AVAudioPlayerNodeBufferOptions" Kind="Enumeration" />
      <Type Name="AVAudioQuality" Kind="Enumeration" />
      <Type Name="AVAudioRecorder" Kind="Class" />
      <Type Name="AVAudioRecorderDelegate" Kind="Class" />
      <Type Name="AVAudioRecorderDelegate_Extensions" Kind="Class" />
      <Type Name="AVAudioSequencer" Kind="Class" />
      <Type Name="AVAudioSession" Kind="Class" />
      <Type Name="AVAudioSession+Notifications" Kind="Class" />
      <Type Name="AVAudioSessionCategory" Kind="Enumeration" />
      <Type Name="AVAudioSessionCategoryOptions" Kind="Enumeration" />
      <Type Name="AVAudioSessionChannelDescription" Kind="Class" />
      <Type Name="AVAudioSessionDataSourceDescription" Kind="Class" />
      <Type Name="AVAudioSessionDelegate" Kind="Class" />
      <Type Name="AVAudioSessionDelegate_Extensions" Kind="Class" />
      <Type Name="AVAudioSessionErrorCode" Kind="Enumeration" />
      <Type Name="AVAudioSessionFlags" Kind="Enumeration" />
      <Type Name="AVAudioSessionInterruptionEventArgs" Kind="Class" />
      <Type Name="AVAudioSessionInterruptionFlags" Kind="Enumeration" />
      <Type Name="AVAudioSessionInterruptionOptions" Kind="Enumeration" />
      <Type Name="AVAudioSessionInterruptionType" Kind="Enumeration" />
      <Type Name="AVAudioSessionPortDescription" Kind="Class" />
      <Type Name="AVAudioSessionPortOverride" Kind="Enumeration" />
      <Type Name="AVAudioSessionRecordPermission" Kind="Enumeration" />
      <Type Name="AVAudioSessionRouteChangeEventArgs" Kind="Class" />
      <Type Name="AVAudioSessionRouteChangeReason" Kind="Enumeration" />
      <Type Name="AVAudioSessionRouteDescription" Kind="Class" />
      <Type Name="AVAudioSessionSecondaryAudioHintEventArgs" Kind="Class" />
      <Type Name="AVAudioSessionSetActiveOptions" Kind="Enumeration" />
      <Type Name="AVAudioSessionSilenceSecondaryAudioHintType" Kind="Enumeration" />
      <Type Name="AVAudioSettings" Kind="Class" />
      <Type Name="AVAudioStereoMixing" Kind="Class" />
      <Type Name="AVAudioTime" Kind="Class" />
      <Type Name="AVAudioTimePitchAlgorithm" Kind="Class" />
      <Type Name="AVAudioUnit" Kind="Class" />
      <Type Name="AVAudioUnitComponent" Kind="Class" />
      <Type Name="AVAudioUnitComponent+Notifications" Kind="Class" />
      <Type Name="AVAudioUnitComponentFilter" Kind="Delegate" />
      <Type Name="AVAudioUnitComponentManager" Kind="Class" />
      <Type Name="AVAudioUnitDelay" Kind="Class" />
      <Type Name="AVAudioUnitDistortion" Kind="Class" />
      <Type Name="AVAudioUnitDistortionPreset" Kind="Enumeration" />
      <Type Name="AVAudioUnitEffect" Kind="Class" />
      <Type Name="AVAudioUnitEQ" Kind="Class" />
      <Type Name="AVAudioUnitEQFilterParameters" Kind="Class" />
      <Type Name="AVAudioUnitEQFilterType" Kind="Enumeration" />
      <Type Name="AVAudioUnitGenerator" Kind="Class" />
      <Type Name="AVAudioUnitManufacturerName" Kind="Class" />
      <Type Name="AVAudioUnitMidiInstrument" Kind="Class" />
      <Type Name="AVAudioUnitReverb" Kind="Class" />
      <Type Name="AVAudioUnitReverbPreset" Kind="Enumeration" />
      <Type Name="AVAudioUnitSampler" Kind="Class" />
      <Type Name="AVAudioUnitTimeEffect" Kind="Class" />
      <Type Name="AVAudioUnitTimePitch" Kind="Class" />
      <Type Name="AVAudioUnitType" Kind="Class" />
      <Type Name="AVAudioUnitVarispeed" Kind="Class" />
      <Type Name="AVAuthorizationStatus" Kind="Enumeration" />
      <Type Name="AVBeatRange" Kind="Structure" />
      <Type Name="AVCaptureAudioChannel" Kind="Class" />
      <Type Name="AVCaptureAudioDataOutput" Kind="Class" />
      <Type Name="AVCaptureAudioDataOutputSampleBufferDelegate" Kind="Class" />
      <Type Name="AVCaptureAudioDataOutputSampleBufferDelegate_Extensions" Kind="Class" />
      <Type Name="AVCaptureAutoExposureBracketedStillImageSettings" Kind="Class" />
      <Type Name="AVCaptureAutoFocusRangeRestriction" Kind="Enumeration" />
      <Type Name="AVCaptureAutoFocusSystem" Kind="Enumeration" />
      <Type Name="AVCaptureBracketedStillImageSettings" Kind="Class" />
      <Type Name="AVCaptureCompletionHandler" Kind="Delegate" />
      <Type Name="AVCaptureConnection" Kind="Class" />
      <Type Name="AVCaptureDevice" Kind="Class" />
      <Type Name="AVCaptureDevice+Notifications" Kind="Class" />
      <Type Name="AVCaptureDeviceFormat" Kind="Class" />
      <Type Name="AVCaptureDeviceInput" Kind="Class" />
      <Type Name="AVCaptureDevicePosition" Kind="Enumeration" />
      <Type Name="AVCaptureDeviceTransportControlsPlaybackMode" Kind="Enumeration" />
      <Type Name="AVCaptureExposureMode" Kind="Enumeration" />
      <Type Name="AVCaptureFileOutput" Kind="Class" />
      <Type Name="AVCaptureFileOutputRecordingDelegate" Kind="Class" />
      <Type Name="AVCaptureFileOutputRecordingDelegate_Extensions" Kind="Class" />
      <Type Name="AVCaptureFlashMode" Kind="Enumeration" />
      <Type Name="AVCaptureFocusMode" Kind="Enumeration" />
      <Type Name="AVCaptureInput" Kind="Class" />
      <Type Name="AVCaptureInput+Notifications" Kind="Class" />
      <Type Name="AVCaptureInputPort" Kind="Class" />
      <Type Name="AVCaptureManualExposureBracketedStillImageSettings" Kind="Class" />
      <Type Name="AVCaptureMetadataInput" Kind="Class" />
      <Type Name="AVCaptureMetadataOutput" Kind="Class" />
      <Type Name="AVCaptureMetadataOutputObjectsDelegate" Kind="Class" />
      <Type Name="AVCaptureMetadataOutputObjectsDelegate_Extensions" Kind="Class" />
      <Type Name="AVCaptureMovieFileOutput" Kind="Class" />
      <Type Name="AVCaptureOutput" Kind="Class" />
      <Type Name="AVCaptureSession" Kind="Class" />
      <Type Name="AVCaptureSession+Notifications" Kind="Class" />
      <Type Name="AVCaptureSessionInterruptionReason" Kind="Enumeration" />
      <Type Name="AVCaptureSessionRuntimeErrorEventArgs" Kind="Class" />
      <Type Name="AVCaptureStillImageOutput" Kind="Class" />
      <Type Name="AVCaptureTorchMode" Kind="Enumeration" />
      <Type Name="AVCaptureVideoDataOutput" Kind="Class" />
      <Type Name="AVCaptureVideoDataOutputSampleBufferDelegate" Kind="Class" />
      <Type Name="AVCaptureVideoDataOutputSampleBufferDelegate_Extensions" Kind="Class" />
      <Type Name="AVCaptureVideoOrientation" Kind="Enumeration" />
      <Type Name="AVCaptureVideoPreviewLayer" Kind="Class" />
      <Type Name="AVCaptureVideoStabilizationMode" Kind="Enumeration" />
      <Type Name="AVCaptureWhiteBalanceChromaticityValues" Kind="Structure" />
      <Type Name="AVCaptureWhiteBalanceGains" Kind="Structure" />
      <Type Name="AVCaptureWhiteBalanceMode" Kind="Enumeration" />
      <Type Name="AVCaptureWhiteBalanceTemperatureAndTintValues" Kind="Structure" />
      <Type Name="AVCategoryEventArgs" Kind="Class" />
      <Type Name="AVChannelsEventArgs" Kind="Class" />
      <Type Name="AVCompletion" Kind="Delegate" />
      <Type Name="AVComposition" Kind="Class" />
      <Type Name="AVComposition_AVCompositionTrackInspection" Kind="Class" />
      <Type Name="AVCompositionTrack" Kind="Class" />
      <Type Name="AVCompositionTrackSegment" Kind="Class" />
      <Type Name="AVDateRangeMetadataGroup" Kind="Class" />
      <Type Name="AVEdgeWidths" Kind="Structure" />
      <Type Name="AVError" Kind="Enumeration" />
      <Type Name="AVErrorEventArgs" Kind="Class" />
      <Type Name="AVErrorKeys" Kind="Class" />
      <Type Name="AVFileType" Kind="Class" />
      <Type Name="AVFrameRateRange" Kind="Class" />
      <Type Name="AVKeyValueStatus" Kind="Enumeration" />
      <Type Name="AVLayerVideoGravity" Kind="Enumeration" />
      <Type Name="AVMediaCharacteristic" Kind="Class" />
      <Type Name="AVMediaSelection" Kind="Class" />
      <Type Name="AVMediaSelectionGroup" Kind="Class" />
      <Type Name="AVMediaSelectionOption" Kind="Class" />
      <Type Name="AVMediaType" Kind="Class" />
      <Type Name="AVMetadata" Kind="Class" />
      <Type Name="AVMetadataExtraAttribute" Kind="Class" />
      <Type Name="AVMetadataFaceObject" Kind="Class" />
      <Type Name="AVMetadataGroup" Kind="Class" />
      <Type Name="AVMetadataIdentifiers" Kind="Class" />
      <Type Name="AVMetadataIdentifiers+CommonIdentifier" Kind="Class" />
      <Type Name="AVMetadataIdentifiers+IcyMetadata" Kind="Class" />
      <Type Name="AVMetadataIdentifiers+ID3Metadata" Kind="Class" />
      <Type Name="AVMetadataIdentifiers+Iso" Kind="Class" />
      <Type Name="AVMetadataIdentifiers+iTunesMetadata" Kind="Class" />
      <Type Name="AVMetadataIdentifiers+QuickTime" Kind="Class" />
      <Type Name="AVMetadataIdentifiers+QuickTimeMetadata" Kind="Class" />
      <Type Name="AVMetadataIdentifiers+ThreeGP" Kind="Class" />
      <Type Name="AVMetadataItem" Kind="Class" />
      <Type Name="AVMetadataItemFilter" Kind="Class" />
      <Type Name="AVMetadataItemValueRequest" Kind="Class" />
      <Type Name="AVMetadataMachineReadableCodeObject" Kind="Class" />
      <Type Name="AVMetadataObject" Kind="Class" />
      <Type Name="AVMetadataObjectType" Kind="Enumeration" />
      <Type Name="AVMidiPlayer" Kind="Class" />
      <Type Name="AVMusicSequenceLoadOptions" Kind="Enumeration" />
      <Type Name="AVMusicTrack" Kind="Class" />
      <Type Name="AVMutableAudioMix" Kind="Class" />
      <Type Name="AVMutableAudioMixInputParameters" Kind="Class" />
      <Type Name="AVMutableComposition" Kind="Class" />
      <Type Name="AVMutableComposition_AVMutableCompositionTrackInspection" Kind="Class" />
      <Type Name="AVMutableCompositionTrack" Kind="Class" />
      <Type Name="AVMutableDateRangeMetadataGroup" Kind="Class" />
      <Type Name="AVMutableMediaSelection" Kind="Class" />
      <Type Name="AVMutableMetadataItem" Kind="Class" />
      <Type Name="AVMutableTimedMetadataGroup" Kind="Class" />
      <Type Name="AVMutableVideoComposition" Kind="Class" />
      <Type Name="AVMutableVideoCompositionInstruction" Kind="Class" />
      <Type Name="AVMutableVideoCompositionLayerInstruction" Kind="Class" />
      <Type Name="AVOutputSettingsAssistant" Kind="Class" />
      <Type Name="AVPermissionGranted" Kind="Delegate" />
      <Type Name="AVPixelAspectRatio" Kind="Structure" />
      <Type Name="AVPlayer" Kind="Class" />
      <Type Name="AVPlayerActionAtItemEnd" Kind="Enumeration" />
      <Type Name="AVPlayerItem" Kind="Class" />
      <Type Name="AVPlayerItem+Notifications" Kind="Class" />
      <Type Name="AVPlayerItemAccessLog" Kind="Class" />
      <Type Name="AVPlayerItemAccessLogEvent" Kind="Class" />
      <Type Name="AVPlayerItemErrorEventArgs" Kind="Class" />
      <Type Name="AVPlayerItemErrorLog" Kind="Class" />
      <Type Name="AVPlayerItemErrorLogEvent" Kind="Class" />
      <Type Name="AVPlayerItemLegibleOutput" Kind="Class" />
      <Type Name="AVPlayerItemLegibleOutputPushDelegate" Kind="Class" />
      <Type Name="AVPlayerItemLegibleOutputPushDelegate_Extensions" Kind="Class" />
      <Type Name="AVPlayerItemMediaDataCollector" Kind="Class" />
      <Type Name="AVPlayerItemMetadataCollector" Kind="Class" />
      <Type Name="AVPlayerItemMetadataCollectorPushDelegate" Kind="Class" />
      <Type Name="AVPlayerItemMetadataOutput" Kind="Class" />
      <Type Name="AVPlayerItemMetadataOutputPushDelegate" Kind="Class" />
      <Type Name="AVPlayerItemMetadataOutputPushDelegate_Extensions" Kind="Class" />
      <Type Name="AVPlayerItemOutput" Kind="Class" />
      <Type Name="AVPlayerItemOutputPullDelegate" Kind="Class" />
      <Type Name="AVPlayerItemOutputPullDelegate_Extensions" Kind="Class" />
      <Type Name="AVPlayerItemOutputPushDelegate" Kind="Class" />
      <Type Name="AVPlayerItemOutputPushDelegate_Extensions" Kind="Class" />
      <Type Name="AVPlayerItemStatus" Kind="Enumeration" />
      <Type Name="AVPlayerItemTrack" Kind="Class" />
      <Type Name="AVPlayerItemVideoOutput" Kind="Class" />
      <Type Name="AVPlayerLayer" Kind="Class" />
      <Type Name="AVPlayerMediaSelectionCriteria" Kind="Class" />
      <Type Name="AVPlayerStatus" Kind="Enumeration" />
      <Type Name="AVQueuedSampleBufferRenderingStatus" Kind="Enumeration" />
      <Type Name="AVQueuePlayer" Kind="Class" />
      <Type Name="AVRequestAccessStatus" Kind="Delegate" />
      <Type Name="AVSampleBufferDisplayLayer" Kind="Class" />
      <Type Name="AVSampleRateConverterAlgorithm" Kind="Enumeration" />
      <Type Name="AVSampleRateEventArgs" Kind="Class" />
      <Type Name="AVSpeechBoundary" Kind="Enumeration" />
      <Type Name="AVSpeechSynthesisVoice" Kind="Class" />
      <Type Name="AVSpeechSynthesisVoiceQuality" Kind="Enumeration" />
      <Type Name="AVSpeechSynthesizer" Kind="Class" />
      <Type Name="AVSpeechSynthesizerDelegate" Kind="Class" />
      <Type Name="AVSpeechSynthesizerDelegate_Extensions" Kind="Class" />
      <Type Name="AVSpeechSynthesizerUteranceEventArgs" Kind="Class" />
      <Type Name="AVSpeechSynthesizerWillSpeakEventArgs" Kind="Class" />
      <Type Name="AVSpeechUtterance" Kind="Class" />
      <Type Name="AVStatusEventArgs" Kind="Class" />
      <Type Name="AVStreamingKeyDelivery" Kind="Class" />
      <Type Name="AVSynchronizedLayer" Kind="Class" />
      <Type Name="AVTextStyleRule" Kind="Class" />
      <Type Name="AVTimedMetadataGroup" Kind="Class" />
      <Type Name="AVUrlAsset" Kind="Class" />
      <Type Name="AVUrlAssetOptions" Kind="Class" />
      <Type Name="AVUtilities" Kind="Class" />
      <Type Name="AVVideo" Kind="Class" />
      <Type Name="AVVideoCleanApertureSettings" Kind="Class" />
      <Type Name="AVVideoCodec" Kind="Enumeration" />
      <Type Name="AVVideoCodecSettings" Kind="Class" />
      <Type Name="AVVideoCompositing" Kind="Class" />
      <Type Name="AVVideoCompositing_Extensions" Kind="Class" />
      <Type Name="AVVideoComposition" Kind="Class" />
      <Type Name="AVVideoCompositionCoreAnimationTool" Kind="Class" />
      <Type Name="AVVideoCompositionInstruction" Kind="Class" />
      <Type Name="AVVideoCompositionLayerInstruction" Kind="Class" />
      <Type Name="AVVideoCompositionRenderContext" Kind="Class" />
      <Type Name="AVVideoCompositionValidationHandling" Kind="Class" />
      <Type Name="AVVideoCompositionValidationHandling_Extensions" Kind="Class" />
      <Type Name="AVVideoFieldMode" Kind="Enumeration" />
      <Type Name="AVVideoH264EntropyMode" Kind="Enumeration" />
      <Type Name="AVVideoPixelAspectRatioSettings" Kind="Class" />
      <Type Name="AVVideoProfileLevelH264" Kind="Enumeration" />
      <Type Name="AVVideoScalingMode" Kind="Enumeration" />
      <Type Name="AVVideoScalingModeKey" Kind="Class" />
      <Type Name="AVVideoSettingsCompressed" Kind="Class" />
      <Type Name="AVVideoSettingsUncompressed" Kind="Class" />
      <Type Name="IAVAssetDownloadDelegate" Kind="Interface" />
      <Type Name="IAVAssetResourceLoaderDelegate" Kind="Interface" />
      <Type Name="IAVAsynchronousKeyValueLoading" Kind="Interface" />
      <Type Name="IAVAudio3DMixing" Kind="Interface" />
      <Type Name="IAVAudioMixing" Kind="Interface" />
      <Type Name="IAVAudioPlayerDelegate" Kind="Interface" />
      <Type Name="IAVAudioRecorderDelegate" Kind="Interface" />
      <Type Name="IAVAudioSessionDelegate" Kind="Interface" />
      <Type Name="IAVAudioStereoMixing" Kind="Interface" />
      <Type Name="IAVCaptureAudioDataOutputSampleBufferDelegate" Kind="Interface" />
      <Type Name="IAVCaptureFileOutputRecordingDelegate" Kind="Interface" />
      <Type Name="IAVCaptureMetadataOutputObjectsDelegate" Kind="Interface" />
      <Type Name="IAVCaptureVideoDataOutputSampleBufferDelegate" Kind="Interface" />
      <Type Name="IAVPlayerItemLegibleOutputPushDelegate" Kind="Interface" />
      <Type Name="IAVPlayerItemMetadataCollectorPushDelegate" Kind="Interface" />
      <Type Name="IAVPlayerItemMetadataOutputPushDelegate" Kind="Interface" />
      <Type Name="IAVPlayerItemOutputPullDelegate" Kind="Interface" />
      <Type Name="IAVPlayerItemOutputPushDelegate" Kind="Interface" />
      <Type Name="IAVSpeechSynthesizerDelegate" Kind="Interface" />
      <Type Name="IAVVideoCompositing" Kind="Interface" />
      <Type Name="IAVVideoCompositionValidationHandling" Kind="Interface" />
    </Namespace>
    <Namespace Name="MonoTouch.AVKit">
      <Type Name="AVKitError" Kind="Enumeration" />
      <Type Name="AVKitErrorExtensions" Kind="Class" />
      <Type Name="AVPictureInPictureController" Kind="Class" />
      <Type Name="AVPictureInPictureControllerDelegate" Kind="Class" />
      <Type Name="AVPictureInPictureControllerDelegate_Extensions" Kind="Class" />
      <Type Name="AVPlayerViewController" Kind="Class" />
      <Type Name="AVPlayerViewControllerDelegate" Kind="Class" />
      <Type Name="AVPlayerViewControllerDelegate_Extensions" Kind="Class" />
      <Type Name="AVPlayerViewControlsStyle" Kind="Enumeration" />
      <Type Name="IAVPictureInPictureControllerDelegate" Kind="Interface" />
      <Type Name="IAVPlayerViewControllerDelegate" Kind="Interface" />
    </Namespace>
    <Namespace Name="MonoTouch.CallKit">
      <Type Name="CXAction" Kind="Class" />
      <Type Name="CXAnswerCallAction" Kind="Class" />
      <Type Name="CXAuthorizationStatus" Kind="Enumeration" />
      <Type Name="CXCall" Kind="Class" />
      <Type Name="CXCallAction" Kind="Class" />
      <Type Name="CXCallController" Kind="Class" />
      <Type Name="CXCallDirectoryEnabledStatus" Kind="Enumeration" />
      <Type Name="CXCallDirectoryExtensionContext" Kind="Class" />
      <Type Name="CXCallDirectoryManager" Kind="Class" />
      <Type Name="CXCallDirectoryProvider" Kind="Class" />
      <Type Name="CXCallEndedReason" Kind="Enumeration" />
      <Type Name="CXCallObserver" Kind="Class" />
      <Type Name="CXCallObserverDelegate" Kind="Class" />
      <Type Name="CXCallUpdate" Kind="Class" />
      <Type Name="CXEndCallAction" Kind="Class" />
      <Type Name="CXErrorCode" Kind="Enumeration" />
      <Type Name="CXErrorCodeCallDirectoryManagerError" Kind="Enumeration" />
      <Type Name="CXErrorCodeCallDirectoryManagerErrorExtensions" Kind="Class" />
      <Type Name="CXErrorCodeExtensions" Kind="Class" />
      <Type Name="CXErrorCodeIncomingCallError" Kind="Enumeration" />
      <Type Name="CXErrorCodeIncomingCallErrorExtensions" Kind="Class" />
      <Type Name="CXErrorCodeRequestTransactionError" Kind="Enumeration" />
      <Type Name="CXErrorCodeRequestTransactionErrorExtensions" Kind="Class" />
      <Type Name="CXPlayDtmfCallAction" Kind="Class" />
      <Type Name="CXPlayDtmfCallActionType" Kind="Enumeration" />
      <Type Name="CXProvider" Kind="Class" />
      <Type Name="CXProviderConfiguration" Kind="Class" />
      <Type Name="CXProviderDelegate" Kind="Class" />
      <Type Name="CXProviderDelegate_Extensions" Kind="Class" />
      <Type Name="CXSetGroupCallAction" Kind="Class" />
      <Type Name="CXSetHeldCallAction" Kind="Class" />
      <Type Name="CXSetMutedCallAction" Kind="Class" />
      <Type Name="CXStartCallAction" Kind="Class" />
      <Type Name="CXTransaction" Kind="Class" />
      <Type Name="ICXCallObserverDelegate" Kind="Interface" />
      <Type Name="ICXProviderDelegate" Kind="Interface" />
    </Namespace>
    <Namespace Name="MonoTouch.CloudKit">
      <Type Name="CKAccountStatus" Kind="Enumeration" />
      <Type Name="CKApplicationPermissions" Kind="Enumeration" />
      <Type Name="CKApplicationPermissionStatus" Kind="Enumeration" />
      <Type Name="CKAsset" Kind="Class" />
      <Type Name="CKContainer" Kind="Class" />
      <Type Name="CKContainer+Notifications" Kind="Class" />
      <Type Name="CKDatabase" Kind="Class" />
      <Type Name="CKDatabaseDeleteSubscriptionHandler" Kind="Delegate" />
      <Type Name="CKDatabaseOperation" Kind="Class" />
      <Type Name="CKDiscoverAllContactsOperation" Kind="Class" />
      <Type Name="CKDiscoveredUserInfo" Kind="Class" />
      <Type Name="CKDiscoverUserInfosCompletionHandler" Kind="Delegate" />
      <Type Name="CKDiscoverUserInfosOperation" Kind="Class" />
      <Type Name="CKErrorCode" Kind="Enumeration" />
      <Type Name="CKErrorCodeExtensions" Kind="Class" />
      <Type Name="CKErrorFields" Kind="Class" />
      <Type Name="CKFetchNotificationChangesOperation" Kind="Class" />
      <Type Name="CKFetchRecordChangesHandler" Kind="Delegate" />
      <Type Name="CKFetchRecordChangesOperation" Kind="Class" />
      <Type Name="CKFetchRecordsCompletedHandler" Kind="Delegate" />
      <Type Name="CKFetchRecordsOperation" Kind="Class" />
      <Type Name="CKFetchRecordZonesOperation" Kind="Class" />
      <Type Name="CKFetchSubscriptionsCompleteHandler" Kind="Delegate" />
      <Type Name="CKFetchSubscriptionsOperation" Kind="Class" />
      <Type Name="CKFetchWebAuthTokenOperation" Kind="Class" />
      <Type Name="CKFetchWebAuthTokenOperationHandler" Kind="Delegate" />
      <Type Name="CKLocationSortDescriptor" Kind="Class" />
      <Type Name="CKMarkNotificationsReadHandler" Kind="Delegate" />
      <Type Name="CKMarkNotificationsReadOperation" Kind="Class" />
      <Type Name="CKModifyBadgeOperation" Kind="Class" />
      <Type Name="CKModifyRecordsOperation" Kind="Class" />
      <Type Name="CKModifyRecordsOperationHandler" Kind="Delegate" />
      <Type Name="CKModifyRecordZonesHandler" Kind="Delegate" />
      <Type Name="CKModifyRecordZonesOperation" Kind="Class" />
      <Type Name="CKModifySubscriptionsHandler" Kind="Delegate" />
      <Type Name="CKModifySubscriptionsOperation" Kind="Class" />
      <Type Name="CKNotification" Kind="Class" />
      <Type Name="CKNotificationID" Kind="Class" />
      <Type Name="CKNotificationInfo" Kind="Class" />
      <Type Name="CKNotificationType" Kind="Enumeration" />
      <Type Name="CKOperation" Kind="Class" />
      <Type Name="CKQuery" Kind="Class" />
      <Type Name="CKQueryCursor" Kind="Class" />
      <Type Name="CKQueryNotification" Kind="Class" />
      <Type Name="CKQueryNotificationReason" Kind="Enumeration" />
      <Type Name="CKQueryOperation" Kind="Class" />
      <Type Name="CKRecord" Kind="Class" />
      <Type Name="CKRecordID" Kind="Class" />
      <Type Name="CKRecordSavePolicy" Kind="Enumeration" />
      <Type Name="CKRecordValue" Kind="Class" />
      <Type Name="CKRecordZone" Kind="Class" />
      <Type Name="CKRecordZoneCapabilities" Kind="Enumeration" />
      <Type Name="CKRecordZoneCompleteHandler" Kind="Delegate" />
      <Type Name="CKRecordZoneID" Kind="Class" />
      <Type Name="CKRecordZoneNotification" Kind="Class" />
      <Type Name="CKReference" Kind="Class" />
      <Type Name="CKReferenceAction" Kind="Enumeration" />
      <Type Name="CKServerChangeToken" Kind="Class" />
      <Type Name="CKSubscription" Kind="Class" />
      <Type Name="CKSubscriptionOptions" Kind="Enumeration" />
      <Type Name="CKSubscriptionType" Kind="Enumeration" />
      <Type Name="ICKRecordValue" Kind="Interface" />
    </Namespace>
    <Namespace Name="MonoTouch.Contacts">
      <Type Name="CNAuthorizationStatus" Kind="Enumeration" />
      <Type Name="CNContact" Kind="Class" />
      <Type Name="CNContactDisplayNameOrder" Kind="Enumeration" />
      <Type Name="CNContactFetchRequest" Kind="Class" />
      <Type Name="CNContactFormatter" Kind="Class" />
      <Type Name="CNContactFormatterStyle" Kind="Enumeration" />
      <Type Name="CNContactKey" Kind="Class" />
      <Type Name="CNContactOptions" Kind="Enumeration" />
      <Type Name="CNContactProperty" Kind="Class" />
      <Type Name="CNContactRelation" Kind="Class" />
      <Type Name="CNContactSortOrder" Kind="Enumeration" />
      <Type Name="CNContactStore" Kind="Class" />
      <Type Name="CNContactStore+Notifications" Kind="Class" />
      <Type Name="CNContactStoreEnumerateContactsHandler" Kind="Delegate" />
      <Type Name="CNContactStoreListContactsHandler" Kind="Delegate" />
      <Type Name="CNContactStoreRequestAccessHandler" Kind="Delegate" />
      <Type Name="CNContactsUserDefaults" Kind="Class" />
      <Type Name="CNContactType" Kind="Enumeration" />
      <Type Name="CNContactVCardSerialization" Kind="Class" />
      <Type Name="CNContainer" Kind="Class" />
      <Type Name="CNContainer_PredicatesExtension" Kind="Class" />
      <Type Name="CNContainerKey" Kind="Class" />
      <Type Name="CNContainerType" Kind="Enumeration" />
      <Type Name="CNEntityType" Kind="Enumeration" />
      <Type Name="CNErrorCode" Kind="Enumeration" />
      <Type Name="CNErrorCodeExtensions" Kind="Class" />
      <Type Name="CNErrorUserInfoKey" Kind="Class" />
      <Type Name="CNGroup" Kind="Class" />
      <Type Name="CNGroup_PredicatesExtension" Kind="Class" />
      <Type Name="CNGroupKey" Kind="Class" />
      <Type Name="CNInstantMessageAddress" Kind="Class" />
      <Type Name="CNInstantMessageAddressKey" Kind="Class" />
      <Type Name="CNInstantMessageAddressOption" Kind="Enumeration" />
      <Type Name="CNInstantMessageServiceKey" Kind="Class" />
      <Type Name="CNInstantMessageServiceOption" Kind="Enumeration" />
      <Type Name="CNLabelContactRelationKey" Kind="Class" />
      <Type Name="CNLabeledValue`1" DisplayName="CNLabeledValue&lt;ValueType&gt;" Kind="Class" />
      <Type Name="CNLabelKey" Kind="Class" />
      <Type Name="CNLabelPhoneNumberKey" Kind="Class" />
      <Type Name="CNMutableContact" Kind="Class" />
      <Type Name="CNMutableGroup" Kind="Class" />
      <Type Name="CNMutablePostalAddress" Kind="Class" />
      <Type Name="CNPhoneNumber" Kind="Class" />
      <Type Name="CNPostalAddress" Kind="Class" />
      <Type Name="CNPostalAddressFormatter" Kind="Class" />
      <Type Name="CNPostalAddressFormatterStyle" Kind="Enumeration" />
      <Type Name="CNPostalAddressKey" Kind="Class" />
      <Type Name="CNPostalAddressKeyOption" Kind="Enumeration" />
      <Type Name="CNSaveRequest" Kind="Class" />
      <Type Name="CNSocialProfile" Kind="Class" />
      <Type Name="CNSocialProfileKey" Kind="Class" />
      <Type Name="CNSocialProfileOption" Kind="Enumeration" />
      <Type Name="CNSocialProfileServiceKey" Kind="Class" />
      <Type Name="CNSocialProfileServiceOption" Kind="Enumeration" />
      <Type Name="ICNKeyDescriptor" Kind="Interface" />
    </Namespace>
    <Namespace Name="MonoTouch.ContactsUI">
      <Type Name="CNContactPickerDelegate" Kind="Class" />
      <Type Name="CNContactPickerDelegate_Extensions" Kind="Class" />
      <Type Name="CNContactPickerViewController" Kind="Class" />
      <Type Name="CNContactViewController" Kind="Class" />
      <Type Name="CNContactViewControllerDelegate" Kind="Class" />
      <Type Name="CNContactViewControllerDelegate_Extensions" Kind="Class" />
      <Type Name="ICNContactPickerDelegate" Kind="Interface" />
      <Type Name="ICNContactViewControllerDelegate" Kind="Interface" />
    </Namespace>
    <Namespace Name="MonoTouch.CoreAnimation">
      <Type Name="CAAction" Kind="Class" />
      <Type Name="CAAnimation" Kind="Class" />
      <Type Name="CAAnimationDelegate" Kind="Class" />
      <Type Name="CAAnimationDelegate_Extensions" Kind="Class" />
      <Type Name="CAAnimationGroup" Kind="Class" />
      <Type Name="CAAnimationStateEventArgs" Kind="Class" />
      <Type Name="CABasicAnimation" Kind="Class" />
      <Type Name="CAContentsFormat" Kind="Enumeration" />
      <Type Name="CAContentsFormatExtensions" Kind="Class" />
      <Type Name="CADisplayLink" Kind="Class" />
      <Type Name="CAEAGLLayer" Kind="Class" />
      <Type Name="CAEdgeAntialiasingMask" Kind="Enumeration" />
      <Type Name="CAEmitterBehavior" Kind="Class" />
      <Type Name="CAEmitterCell" Kind="Class" />
      <Type Name="CAEmitterLayer" Kind="Class" />
      <Type Name="CAFillMode" Kind="Class" />
      <Type Name="CAGradientLayer" Kind="Class" />
      <Type Name="CAKeyFrameAnimation" Kind="Class" />
      <Type Name="CALayer" Kind="Class" />
      <Type Name="CALayerDelegate" Kind="Class" />
      <Type Name="CALayerDelegate_Extensions" Kind="Class" />
      <Type Name="CAMediaTiming" Kind="Class" />
      <Type Name="CAMediaTimingFunction" Kind="Class" />
      <Type Name="CAMetalLayer" Kind="Class" />
      <Type Name="CAPropertyAnimation" Kind="Class" />
      <Type Name="CAReplicatorLayer" Kind="Class" />
      <Type Name="CAScrollLayer" Kind="Class" />
      <Type Name="CAShapeLayer" Kind="Class" />
      <Type Name="CASpringAnimation" Kind="Class" />
      <Type Name="CATextLayer" Kind="Class" />
      <Type Name="CATiledLayer" Kind="Class" />
      <Type Name="CATransaction" Kind="Class" />
      <Type Name="CATransform3D" Kind="Structure" />
      <Type Name="CATransformLayer" Kind="Class" />
      <Type Name="CATransition" Kind="Class" />
      <Type Name="CAValueFunction" Kind="Class" />
      <Type Name="ICAAction" Kind="Interface" />
      <Type Name="ICAAnimationDelegate" Kind="Interface" />
      <Type Name="ICALayerDelegate" Kind="Interface" />
      <Type Name="ICAMediaTiming" Kind="Interface" />
      <Type Name="ICAMetalDrawable" Kind="Interface" />
    </Namespace>
    <Namespace Name="MonoTouch.CoreAudioKit">
      <Type Name="AUViewController" Kind="Class" />
      <Type Name="CABTMidiCentralViewController" Kind="Class" />
      <Type Name="CABTMidiLocalPeripheralViewController" Kind="Class" />
      <Type Name="CAInterAppAudioSwitcherView" Kind="Class" />
      <Type Name="CAInterAppAudioSwitcherView+CAInterAppAudioSwitcherViewAppearance" Kind="Class" />
      <Type Name="CAInterAppAudioTransportView" Kind="Class" />
      <Type Name="CAInterAppAudioTransportView+CAInterAppAudioTransportViewAppearance" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.CoreBluetooth">
      <Type Name="AdvertisementData" Kind="Class" />
      <Type Name="CBAdvertisement" Kind="Class" />
      <Type Name="CBATTError" Kind="Enumeration" />
      <Type Name="CBATTErrorExtensions" Kind="Class" />
      <Type Name="CBATTRequest" Kind="Class" />
      <Type Name="CBATTRequestEventArgs" Kind="Class" />
      <Type Name="CBATTRequestsEventArgs" Kind="Class" />
      <Type Name="CBAttribute" Kind="Class" />
      <Type Name="CBAttributePermissions" Kind="Enumeration" />
      <Type Name="CBCentral" Kind="Class" />
      <Type Name="CBCentralInitOptions" Kind="Class" />
      <Type Name="CBCentralManager" Kind="Class" />
      <Type Name="CBCentralManagerDelegate" Kind="Class" />
      <Type Name="CBCentralManagerDelegate_Extensions" Kind="Class" />
      <Type Name="CBCentralManagerState" Kind="Enumeration" />
      <Type Name="CBCharacteristic" Kind="Class" />
      <Type Name="CBCharacteristicEventArgs" Kind="Class" />
      <Type Name="CBCharacteristicProperties" Kind="Enumeration" />
      <Type Name="CBCharacteristicWriteType" Kind="Enumeration" />
      <Type Name="CBDescriptor" Kind="Class" />
      <Type Name="CBDescriptorEventArgs" Kind="Class" />
      <Type Name="CBDiscoveredPeripheralEventArgs" Kind="Class" />
      <Type Name="CBError" Kind="Enumeration" />
      <Type Name="CBErrorExtensions" Kind="Class" />
      <Type Name="CBManager" Kind="Class" />
      <Type Name="CBManagerState" Kind="Enumeration" />
      <Type Name="CBMutableCharacteristic" Kind="Class" />
      <Type Name="CBMutableDescriptor" Kind="Class" />
      <Type Name="CBMutableService" Kind="Class" />
      <Type Name="CBPeer" Kind="Class" />
      <Type Name="CBPeripheral" Kind="Class" />
      <Type Name="CBPeripheralDelegate" Kind="Class" />
      <Type Name="CBPeripheralDelegate_Extensions" Kind="Class" />
      <Type Name="CBPeripheralErrorEventArgs" Kind="Class" />
      <Type Name="CBPeripheralEventArgs" Kind="Class" />
      <Type Name="CBPeripheralManager" Kind="Class" />
      <Type Name="CBPeripheralManagerAuthorizationStatus" Kind="Enumeration" />
      <Type Name="CBPeripheralManagerConnectionLatency" Kind="Enumeration" />
      <Type Name="CBPeripheralManagerDelegate" Kind="Class" />
      <Type Name="CBPeripheralManagerDelegate_Extensions" Kind="Class" />
      <Type Name="CBPeripheralManagerServiceEventArgs" Kind="Class" />
      <Type Name="CBPeripheralManagerState" Kind="Enumeration" />
      <Type Name="CBPeripheralManagerSubscriptionEventArgs" Kind="Class" />
      <Type Name="CBPeripheralServicesEventArgs" Kind="Class" />
      <Type Name="CBPeripheralsEventArgs" Kind="Class" />
      <Type Name="CBPeripheralState" Kind="Enumeration" />
      <Type Name="CBRssiEventArgs" Kind="Class" />
      <Type Name="CBService" Kind="Class" />
      <Type Name="CBServiceEventArgs" Kind="Class" />
      <Type Name="CBUUID" Kind="Class" />
      <Type Name="CBWillRestoreEventArgs" Kind="Class" />
      <Type Name="ICBCentralManagerDelegate" Kind="Interface" />
      <Type Name="ICBPeripheralDelegate" Kind="Interface" />
      <Type Name="ICBPeripheralManagerDelegate" Kind="Interface" />
      <Type Name="PeripheralConnectionOptions" Kind="Class" />
      <Type Name="PeripheralScanningOptions" Kind="Class" />
      <Type Name="RestoredState" Kind="Class" />
      <Type Name="StartAdvertisingOptions" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.CoreData">
      <Type Name="INSFetchedResultsControllerDelegate" Kind="Interface" />
      <Type Name="INSFetchedResultsSectionInfo" Kind="Interface" />
      <Type Name="NSAsynchronousFetchRequest" Kind="Class" />
      <Type Name="NSAsynchronousFetchResult" Kind="Class" />
      <Type Name="NSAtomicStore" Kind="Class" />
      <Type Name="NSAtomicStoreCacheNode" Kind="Class" />
      <Type Name="NSAttributeDescription" Kind="Class" />
      <Type Name="NSAttributeType" Kind="Enumeration" />
      <Type Name="NSBatchDeleteRequest" Kind="Class" />
      <Type Name="NSBatchDeleteRequestResultType" Kind="Enumeration" />
      <Type Name="NSBatchDeleteResult" Kind="Class" />
      <Type Name="NSBatchUpdateRequest" Kind="Class" />
      <Type Name="NSBatchUpdateRequestResultType" Kind="Enumeration" />
      <Type Name="NSBatchUpdateResult" Kind="Class" />
      <Type Name="NSConstraintConflict" Kind="Class" />
      <Type Name="NSDeleteRule" Kind="Enumeration" />
      <Type Name="NSEntityDescription" Kind="Class" />
      <Type Name="NSEntityMapping" Kind="Class" />
      <Type Name="NSEntityMappingType" Kind="Enumeration" />
      <Type Name="NSEntityMigrationPolicy" Kind="Class" />
      <Type Name="NSExpressionDescription" Kind="Class" />
      <Type Name="NSFetchedPropertyDescription" Kind="Class" />
      <Type Name="NSFetchedResultsChangeType" Kind="Enumeration" />
      <Type Name="NSFetchedResultsController" Kind="Class" />
      <Type Name="NSFetchedResultsControllerDelegate" Kind="Class" />
      <Type Name="NSFetchedResultsControllerDelegate_Extensions" Kind="Class" />
      <Type Name="NSFetchedResultsSectionInfo" Kind="Class" />
      <Type Name="NSFetchRequest" Kind="Class" />
      <Type Name="NSFetchRequestExpression" Kind="Class" />
      <Type Name="NSFetchRequestResultType" Kind="Enumeration" />
      <Type Name="NSIncrementalStore" Kind="Class" />
      <Type Name="NSIncrementalStoreNode" Kind="Class" />
      <Type Name="NSManagedObject" Kind="Class" />
      <Type Name="NSManagedObjectChangeEventArgs" Kind="Class" />
      <Type Name="NSManagedObjectContext" Kind="Class" />
      <Type Name="NSManagedObjectContext+Notifications" Kind="Class" />
      <Type Name="NSManagedObjectContextConcurrencyType" Kind="Enumeration" />
      <Type Name="NSManagedObjectID" Kind="Class" />
      <Type Name="NSManagedObjectModel" Kind="Class" />
      <Type Name="NSMappingModel" Kind="Class" />
      <Type Name="NSMergeConflict" Kind="Class" />
      <Type Name="NSMergePolicy" Kind="Class" />
      <Type Name="NSMergePolicyType" Kind="Enumeration" />
      <Type Name="NSMigrationManager" Kind="Class" />
      <Type Name="NSPersistentStore" Kind="Class" />
      <Type Name="NSPersistentStoreAsynchronousResult" Kind="Class" />
      <Type Name="NSPersistentStoreCoordinator" Kind="Class" />
      <Type Name="NSPersistentStoreCoordinator+Notifications" Kind="Class" />
      <Type Name="NSPersistentStoreCoordinatorStoreChangeEventArgs" Kind="Class" />
      <Type Name="NSPersistentStoreRequest" Kind="Class" />
      <Type Name="NSPersistentStoreRequestType" Kind="Enumeration" />
      <Type Name="NSPersistentStoreResult" Kind="Class" />
      <Type Name="NSPersistentStoreUbiquitousTransitionType" Kind="Enumeration" />
      <Type Name="NSPropertyDescription" Kind="Class" />
      <Type Name="NSPropertyMapping" Kind="Class" />
      <Type Name="NSRelationshipDescription" Kind="Class" />
      <Type Name="NSSaveChangesRequest" Kind="Class" />
      <Type Name="NSSnapshotEventType" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.CoreFoundation">
      <Type Name="CFAllocator" Kind="Class" />
      <Type Name="CFBundle" Kind="Class" />
      <Type Name="CFBundle+Architecture" Kind="Enumeration" />
      <Type Name="CFBundle+PackageInfo" Kind="Structure" />
      <Type Name="CFBundle+PackageType" Kind="Enumeration" />
      <Type Name="CFErrorDomain" Kind="Class" />
      <Type Name="CFException" Kind="Class" />
      <Type Name="CFExceptionDataKey" Kind="Class" />
      <Type Name="CFMachPort" Kind="Class" />
      <Type Name="CFMessagePort" Kind="Class" />
      <Type Name="CFMessagePort+CFMessagePortCallBack" Kind="Delegate" />
      <Type Name="CFMessagePortSendRequestStatus" Kind="Enumeration" />
      <Type Name="CFNetwork" Kind="Class" />
      <Type Name="CFNetworkErrors" Kind="Enumeration" />
      <Type Name="CFNotificationCenter" Kind="Class" />
      <Type Name="CFNotificationObserverToken" Kind="Class" />
      <Type Name="CFNotificationSuspensionBehavior" Kind="Enumeration" />
      <Type Name="CFObject" Kind="Class" />
      <Type Name="CFPreferences" Kind="Class" />
      <Type Name="CFProxy" Kind="Class" />
      <Type Name="CFProxySettings" Kind="Class" />
      <Type Name="CFProxyType" Kind="Enumeration" />
      <Type Name="CFRange" Kind="Structure" />
      <Type Name="CFReadStream" Kind="Class" />
      <Type Name="CFRunLoop" Kind="Class" />
      <Type Name="CFRunLoopExitReason" Kind="Enumeration" />
      <Type Name="CFRunLoopSource" Kind="Class" />
      <Type Name="CFRunLoopSourceCustom" Kind="Class" />
      <Type Name="CFSocket" Kind="Class" />
      <Type Name="CFSocket+CFSocketAcceptEventArgs" Kind="Class" />
      <Type Name="CFSocket+CFSocketConnectEventArgs" Kind="Class" />
      <Type Name="CFSocket+CFSocketDataEventArgs" Kind="Class" />
      <Type Name="CFSocket+CFSocketReadEventArgs" Kind="Class" />
      <Type Name="CFSocket+CFSocketWriteEventArgs" Kind="Class" />
      <Type Name="CFSocketCallBackType" Kind="Enumeration" />
      <Type Name="CFSocketError" Kind="Enumeration" />
      <Type Name="CFSocketException" Kind="Class" />
      <Type Name="CFSocketFlags" Kind="Enumeration" />
      <Type Name="CFSocketNativeHandle" Kind="Structure" />
      <Type Name="CFStream" Kind="Class" />
      <Type Name="CFStream+CFStreamCallback" Kind="Delegate" />
      <Type Name="CFStream+StreamEventArgs" Kind="Class" />
      <Type Name="CFStreamClientContext" Kind="Structure" />
      <Type Name="CFStreamEventType" Kind="Enumeration" />
      <Type Name="CFStreamStatus" Kind="Enumeration" />
      <Type Name="CFString" Kind="Class" />
      <Type Name="CFType" Kind="Class" />
      <Type Name="CFUrl" Kind="Class" />
      <Type Name="CFUrlPathStyle" Kind="Enumeration" />
      <Type Name="CFWriteStream" Kind="Class" />
      <Type Name="DispatchGroup" Kind="Class" />
      <Type Name="DispatchObject" Kind="Class" />
      <Type Name="DispatchQueue" Kind="Class" />
      <Type Name="DispatchQueuePriority" Kind="Enumeration" />
      <Type Name="DispatchSource" Kind="Class" />
      <Type Name="DispatchSource+Data" Kind="Class" />
      <Type Name="DispatchSource+DataAdd" Kind="Class" />
      <Type Name="DispatchSource+DataOr" Kind="Class" />
      <Type Name="DispatchSource+Mach" Kind="Class" />
      <Type Name="DispatchSource+MachReceive" Kind="Class" />
      <Type Name="DispatchSource+MachSend" Kind="Class" />
      <Type Name="DispatchSource+MemoryPressure" Kind="Class" />
      <Type Name="DispatchSource+ProcessMonitor" Kind="Class" />
      <Type Name="DispatchSource+ReadMonitor" Kind="Class" />
      <Type Name="DispatchSource+SignalMonitor" Kind="Class" />
      <Type Name="DispatchSource+Timer" Kind="Class" />
      <Type Name="DispatchSource+VnodeMonitor" Kind="Class" />
      <Type Name="DispatchSource+WriteMonitor" Kind="Class" />
      <Type Name="DispatchTime" Kind="Structure" />
      <Type Name="ICFType" Kind="Interface" />
      <Type Name="MemoryPressureFlags" Kind="Enumeration" />
      <Type Name="ProcessMonitorFlags" Kind="Enumeration" />
      <Type Name="VnodeMonitorKind" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.CoreGraphics">
      <Type Name="CGAffineTransform" Kind="Structure" />
      <Type Name="CGBitmapContext" Kind="Class" />
      <Type Name="CGBitmapFlags" Kind="Enumeration" />
      <Type Name="CGBlendMode" Kind="Enumeration" />
      <Type Name="CGColor" Kind="Class" />
      <Type Name="CGColorConverter" Kind="Class" />
      <Type Name="CGColorConverterTransformType" Kind="Enumeration" />
      <Type Name="CGColorConverterTriple" Kind="Structure" />
      <Type Name="CGColorRenderingIntent" Kind="Enumeration" />
      <Type Name="CGColorSpace" Kind="Class" />
      <Type Name="CGColorSpaceModel" Kind="Enumeration" />
      <Type Name="CGColorSpaceNames" Kind="Class" />
      <Type Name="CGContext" Kind="Class" />
      <Type Name="CGContextPDF" Kind="Class" />
      <Type Name="CGDataConsumer" Kind="Class" />
      <Type Name="CGDataProvider" Kind="Class" />
      <Type Name="CGFont" Kind="Class" />
      <Type Name="CGFunction" Kind="Class" />
      <Type Name="CGFunction+CGFunctionEvaluate" Kind="Delegate" />
      <Type Name="CGGradient" Kind="Class" />
      <Type Name="CGGradientDrawingOptions" Kind="Enumeration" />
      <Type Name="CGImage" Kind="Class" />
      <Type Name="CGImageAlphaInfo" Kind="Enumeration" />
      <Type Name="CGImageColorModel" Kind="Enumeration" />
      <Type Name="CGImageProperties" Kind="Class" />
      <Type Name="CGImagePropertiesExif" Kind="Class" />
      <Type Name="CGImagePropertiesGps" Kind="Class" />
      <Type Name="CGImagePropertiesIptc" Kind="Class" />
      <Type Name="CGImagePropertiesJfif" Kind="Class" />
      <Type Name="CGImagePropertiesPng" Kind="Class" />
      <Type Name="CGImagePropertiesTiff" Kind="Class" />
      <Type Name="CGInterpolationQuality" Kind="Enumeration" />
      <Type Name="CGLayer" Kind="Class" />
      <Type Name="CGLineCap" Kind="Enumeration" />
      <Type Name="CGLineJoin" Kind="Enumeration" />
      <Type Name="CGPath" Kind="Class" />
      <Type Name="CGPath+ApplierFunction" Kind="Delegate" />
      <Type Name="CGPathDrawingMode" Kind="Enumeration" />
      <Type Name="CGPathElement" Kind="Structure" />
      <Type Name="CGPathElementType" Kind="Enumeration" />
      <Type Name="CGPattern" Kind="Class" />
      <Type Name="CGPattern+DrawPattern" Kind="Delegate" />
      <Type Name="CGPatternTiling" Kind="Enumeration" />
      <Type Name="CGPDFArray" Kind="Class" />
      <Type Name="CGPDFBox" Kind="Enumeration" />
      <Type Name="CGPDFContentStream" Kind="Class" />
      <Type Name="CGPDFDataFormat" Kind="Enumeration" />
      <Type Name="CGPDFDictionary" Kind="Class" />
      <Type Name="CGPDFDocument" Kind="Class" />
      <Type Name="CGPDFInfo" Kind="Class" />
      <Type Name="CGPDFObject" Kind="Class" />
      <Type Name="CGPDFObjectType" Kind="Enumeration" />
      <Type Name="CGPDFOperatorTable" Kind="Class" />
      <Type Name="CGPDFPage" Kind="Class" />
      <Type Name="CGPDFPageInfo" Kind="Class" />
      <Type Name="CGPDFScanner" Kind="Class" />
      <Type Name="CGPDFStream" Kind="Class" />
      <Type Name="CGPoint" Kind="Structure" />
      <Type Name="CGRect" Kind="Structure" />
      <Type Name="CGRectEdge" Kind="Enumeration" />
      <Type Name="CGShading" Kind="Class" />
      <Type Name="CGSize" Kind="Structure" />
      <Type Name="CGTextDrawingMode" Kind="Enumeration" />
      <Type Name="CGTextEncoding" Kind="Enumeration" />
      <Type Name="CGVector" Kind="Structure" />
      <Type Name="RectangleFExtensions" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.CoreImage">
      <Type Name="CIAccordionFoldTransition" Kind="Class" />
      <Type Name="CIAdditionCompositing" Kind="Class" />
      <Type Name="CIAffineClamp" Kind="Class" />
      <Type Name="CIAffineFilter" Kind="Class" />
      <Type Name="CIAffineTile" Kind="Class" />
      <Type Name="CIAffineTransform" Kind="Class" />
      <Type Name="CIAreaAverage" Kind="Class" />
      <Type Name="CIAreaHistogram" Kind="Class" />
      <Type Name="CIAreaMaximum" Kind="Class" />
      <Type Name="CIAreaMaximumAlpha" Kind="Class" />
      <Type Name="CIAreaMinimum" Kind="Class" />
      <Type Name="CIAreaMinimumAlpha" Kind="Class" />
      <Type Name="CIAutoAdjustmentFilterOptions" Kind="Class" />
      <Type Name="CIAztecCodeGenerator" Kind="Class" />
      <Type Name="CIBarsSwipeTransition" Kind="Class" />
      <Type Name="CIBlendFilter" Kind="Class" />
      <Type Name="CIBlendWithAlphaMask" Kind="Class" />
      <Type Name="CIBlendWithMask" Kind="Class" />
      <Type Name="CIBloom" Kind="Class" />
      <Type Name="CIBoxBlur" Kind="Class" />
      <Type Name="CIBumpDistortion" Kind="Class" />
      <Type Name="CIBumpDistortionLinear" Kind="Class" />
      <Type Name="CICheckerboardGenerator" Kind="Class" />
      <Type Name="CICircleSplashDistortion" Kind="Class" />
      <Type Name="CICircularScreen" Kind="Class" />
      <Type Name="CICircularWrap" Kind="Class" />
      <Type Name="CIClamp" Kind="Class" />
      <Type Name="CICmykHalftone" Kind="Class" />
      <Type Name="CICode128BarcodeGenerator" Kind="Class" />
      <Type Name="CICodeGenerator" Kind="Class" />
      <Type Name="CIColor" Kind="Class" />
      <Type Name="CIColorBlendMode" Kind="Class" />
      <Type Name="CIColorBurnBlendMode" Kind="Class" />
      <Type Name="CIColorClamp" Kind="Class" />
      <Type Name="CIColorControls" Kind="Class" />
      <Type Name="CIColorCrossPolynomial" Kind="Class" />
      <Type Name="CIColorCube" Kind="Class" />
      <Type Name="CIColorCubeWithColorSpace" Kind="Class" />
      <Type Name="CIColorDodgeBlendMode" Kind="Class" />
      <Type Name="CIColorInvert" Kind="Class" />
      <Type Name="CIColorKernel" Kind="Class" />
      <Type Name="CIColorMap" Kind="Class" />
      <Type Name="CIColorMatrix" Kind="Class" />
      <Type Name="CIColorMonochrome" Kind="Class" />
      <Type Name="CIColorPolynomial" Kind="Class" />
      <Type Name="CIColorPosterize" Kind="Class" />
      <Type Name="CIColumnAverage" Kind="Class" />
      <Type Name="CIComicEffect" Kind="Class" />
      <Type Name="CICompositingFilter" Kind="Class" />
      <Type Name="CIConstantColorGenerator" Kind="Class" />
      <Type Name="CIContext" Kind="Class" />
      <Type Name="CIContext_ImageRepresentation" Kind="Class" />
      <Type Name="CIContextOptions" Kind="Class" />
      <Type Name="CIConvolution3X3" Kind="Class" />
      <Type Name="CIConvolution5X5" Kind="Class" />
      <Type Name="CIConvolution7X7" Kind="Class" />
      <Type Name="CIConvolution9Horizontal" Kind="Class" />
      <Type Name="CIConvolution9Vertical" Kind="Class" />
      <Type Name="CIConvolutionCore" Kind="Class" />
      <Type Name="CICopyMachineTransition" Kind="Class" />
      <Type Name="CICrop" Kind="Class" />
      <Type Name="CICrystallize" Kind="Class" />
      <Type Name="CIDarkenBlendMode" Kind="Class" />
      <Type Name="CIDepthOfField" Kind="Class" />
      <Type Name="CIDetector" Kind="Class" />
      <Type Name="CIDetectorOptions" Kind="Class" />
      <Type Name="CIDifferenceBlendMode" Kind="Class" />
      <Type Name="CIDiscBlur" Kind="Class" />
      <Type Name="CIDisintegrateWithMaskTransition" Kind="Class" />
      <Type Name="CIDisplacementDistortion" Kind="Class" />
      <Type Name="CIDissolveTransition" Kind="Class" />
      <Type Name="CIDistortionFilter" Kind="Class" />
      <Type Name="CIDivideBlendMode" Kind="Class" />
      <Type Name="CIDotScreen" Kind="Class" />
      <Type Name="CIDroste" Kind="Class" />
      <Type Name="CIEdges" Kind="Class" />
      <Type Name="CIEdgeWork" Kind="Class" />
      <Type Name="CIEightfoldReflectedTile" Kind="Class" />
      <Type Name="CIExclusionBlendMode" Kind="Class" />
      <Type Name="CIExposureAdjust" Kind="Class" />
      <Type Name="CIFaceBalance" Kind="Class" />
      <Type Name="CIFaceFeature" Kind="Class" />
      <Type Name="CIFalseColor" Kind="Class" />
      <Type Name="CIFeature" Kind="Class" />
      <Type Name="CIFilter" Kind="Class" />
      <Type Name="CIFilterAttributes" Kind="Class" />
      <Type Name="CIFilterCategory" Kind="Class" />
      <Type Name="CIFilterInputKey" Kind="Class" />
      <Type Name="CIFilterMode" Kind="Enumeration" />
      <Type Name="CIFilterOutputKey" Kind="Class" />
      <Type Name="CIFilterShape" Kind="Class" />
      <Type Name="CIFlashTransition" Kind="Class" />
      <Type Name="CIFormat" Kind="Enumeration" />
      <Type Name="CIFourfoldReflectedTile" Kind="Class" />
      <Type Name="CIFourfoldRotatedTile" Kind="Class" />
      <Type Name="CIFourfoldTranslatedTile" Kind="Class" />
      <Type Name="CIGammaAdjust" Kind="Class" />
      <Type Name="CIGaussianBlur" Kind="Class" />
      <Type Name="CIGaussianGradient" Kind="Class" />
      <Type Name="CIGlassDistortion" Kind="Class" />
      <Type Name="CIGlassLozenge" Kind="Class" />
      <Type Name="CIGlideReflectedTile" Kind="Class" />
      <Type Name="CIGloom" Kind="Class" />
      <Type Name="CIHardLightBlendMode" Kind="Class" />
      <Type Name="CIHatchedScreen" Kind="Class" />
      <Type Name="CIHeightFieldFromMask" Kind="Class" />
      <Type Name="CIHexagonalPixellate" Kind="Class" />
      <Type Name="CIHighlightShadowAdjust" Kind="Class" />
      <Type Name="CIHistogramDisplayFilter" Kind="Class" />
      <Type Name="CIHoleDistortion" Kind="Class" />
      <Type Name="CIHueAdjust" Kind="Class" />
      <Type Name="CIHueBlendMode" Kind="Class" />
      <Type Name="CIHueSaturationValueGradient" Kind="Class" />
      <Type Name="CIImage" Kind="Class" />
      <Type Name="CIImageAccumulator" Kind="Class" />
      <Type Name="CIImageInitializationOptions" Kind="Class" />
      <Type Name="CIImageInitializationOptionsWithMetadata" Kind="Class" />
      <Type Name="CIImageOrientation" Kind="Enumeration" />
      <Type Name="CIImageProcessorKernel" Kind="Class" />
      <Type Name="CIImageProviderOptions" Kind="Class" />
      <Type Name="CIKaleidoscope" Kind="Class" />
      <Type Name="CIKernel" Kind="Class" />
      <Type Name="CIKernelRoiCallback" Kind="Delegate" />
      <Type Name="CILanczosScaleTransform" Kind="Class" />
      <Type Name="CILenticularHaloGenerator" Kind="Class" />
      <Type Name="CILightenBlendMode" Kind="Class" />
      <Type Name="CILightTunnel" Kind="Class" />
      <Type Name="CILinearBurnBlendMode" Kind="Class" />
      <Type Name="CILinearDodgeBlendMode" Kind="Class" />
      <Type Name="CILinearGradient" Kind="Class" />
      <Type Name="CILinearToSRGBToneCurve" Kind="Class" />
      <Type Name="CILineOverlay" Kind="Class" />
      <Type Name="CILineScreen" Kind="Class" />
      <Type Name="CILuminosityBlendMode" Kind="Class" />
      <Type Name="CIMaskedVariableBlur" Kind="Class" />
      <Type Name="CIMaskToAlpha" Kind="Class" />
      <Type Name="CIMaximumComponent" Kind="Class" />
      <Type Name="CIMaximumCompositing" Kind="Class" />
      <Type Name="CIMedianFilter" Kind="Class" />
      <Type Name="CIMinimumComponent" Kind="Class" />
      <Type Name="CIMinimumCompositing" Kind="Class" />
      <Type Name="CIModTransition" Kind="Class" />
      <Type Name="CIMotionBlur" Kind="Class" />
      <Type Name="CIMultiplyBlendMode" Kind="Class" />
      <Type Name="CIMultiplyCompositing" Kind="Class" />
      <Type Name="CINinePartStretched" Kind="Class" />
      <Type Name="CINinePartTiled" Kind="Class" />
      <Type Name="CINoiseReduction" Kind="Class" />
      <Type Name="CIOpTile" Kind="Class" />
      <Type Name="CIOverlayBlendMode" Kind="Class" />
      <Type Name="CIPageCurlTransition" Kind="Class" />
      <Type Name="CIPageCurlWithShadowTransition" Kind="Class" />
      <Type Name="CIParallelogramTile" Kind="Class" />
      <Type Name="CIPdf417BarcodeGenerator" Kind="Class" />
      <Type Name="CIPerspectiveCorrection" Kind="Class" />
      <Type Name="CIPerspectiveTile" Kind="Class" />
      <Type Name="CIPerspectiveTransform" Kind="Class" />
      <Type Name="CIPerspectiveTransformWithExtent" Kind="Class" />
      <Type Name="CIPhotoEffect" Kind="Class" />
      <Type Name="CIPhotoEffectChrome" Kind="Class" />
      <Type Name="CIPhotoEffectFade" Kind="Class" />
      <Type Name="CIPhotoEffectInstant" Kind="Class" />
      <Type Name="CIPhotoEffectMono" Kind="Class" />
      <Type Name="CIPhotoEffectNoir" Kind="Class" />
      <Type Name="CIPhotoEffectProcess" Kind="Class" />
      <Type Name="CIPhotoEffectTonal" Kind="Class" />
      <Type Name="CIPhotoEffectTransfer" Kind="Class" />
      <Type Name="CIPinchDistortion" Kind="Class" />
      <Type Name="CIPinLightBlendMode" Kind="Class" />
      <Type Name="CIPixellate" Kind="Class" />
      <Type Name="CIPointillize" Kind="Class" />
      <Type Name="CIQRCodeFeature" Kind="Class" />
      <Type Name="CIQRCodeGenerator" Kind="Class" />
      <Type Name="CIRadialGradient" Kind="Class" />
      <Type Name="CIRandomGenerator" Kind="Class" />
      <Type Name="CIRawFilterOptions" Kind="Class" />
      <Type Name="CIRectangleFeature" Kind="Class" />
      <Type Name="CIRippleTransition" Kind="Class" />
      <Type Name="CIRowAverage" Kind="Class" />
      <Type Name="CISampler" Kind="Class" />
      <Type Name="CISamplerOptions" Kind="Class" />
      <Type Name="CISaturationBlendMode" Kind="Class" />
      <Type Name="CIScreenBlendMode" Kind="Class" />
      <Type Name="CIScreenFilter" Kind="Class" />
      <Type Name="CISepiaTone" Kind="Class" />
      <Type Name="CIShadedMaterial" Kind="Class" />
      <Type Name="CISharpenLuminance" Kind="Class" />
      <Type Name="CISixfoldReflectedTile" Kind="Class" />
      <Type Name="CISixfoldRotatedTile" Kind="Class" />
      <Type Name="CISmoothLinearGradient" Kind="Class" />
      <Type Name="CISoftLightBlendMode" Kind="Class" />
      <Type Name="CISourceAtopCompositing" Kind="Class" />
      <Type Name="CISourceInCompositing" Kind="Class" />
      <Type Name="CISourceOutCompositing" Kind="Class" />
      <Type Name="CISourceOverCompositing" Kind="Class" />
      <Type Name="CISpotColor" Kind="Class" />
      <Type Name="CISpotLight" Kind="Class" />
      <Type Name="CISRGBToneCurveToLinear" Kind="Class" />
      <Type Name="CIStarShineGenerator" Kind="Class" />
      <Type Name="CIStraightenFilter" Kind="Class" />
      <Type Name="CIStretchCrop" Kind="Class" />
      <Type Name="CIStripesGenerator" Kind="Class" />
      <Type Name="CISubtractBlendMode" Kind="Class" />
      <Type Name="CISunbeamsGenerator" Kind="Class" />
      <Type Name="CISwipeTransition" Kind="Class" />
      <Type Name="CITemperatureAndTint" Kind="Class" />
      <Type Name="CITextFeature" Kind="Class" />
      <Type Name="CIThermal" Kind="Class" />
      <Type Name="CITileFilter" Kind="Class" />
      <Type Name="CIToneCurve" Kind="Class" />
      <Type Name="CITorusLensDistortion" Kind="Class" />
      <Type Name="CITransitionFilter" Kind="Class" />
      <Type Name="CITriangleKaleidoscope" Kind="Class" />
      <Type Name="CITriangleTile" Kind="Class" />
      <Type Name="CITwelvefoldReflectedTile" Kind="Class" />
      <Type Name="CITwirlDistortion" Kind="Class" />
      <Type Name="CIUIParameterSet" Kind="Class" />
      <Type Name="CIUnsharpMask" Kind="Class" />
      <Type Name="CIVector" Kind="Class" />
      <Type Name="CIVibrance" Kind="Class" />
      <Type Name="CIVignette" Kind="Class" />
      <Type Name="CIVignetteEffect" Kind="Class" />
      <Type Name="CIVortexDistortion" Kind="Class" />
      <Type Name="CIWarpKernel" Kind="Class" />
      <Type Name="CIWhitePointAdjust" Kind="Class" />
      <Type Name="CIWrapMode" Kind="Enumeration" />
      <Type Name="CIXRay" Kind="Class" />
      <Type Name="CIZoomBlur" Kind="Class" />
      <Type Name="FaceDetectorAccuracy" Kind="Enumeration" />
      <Type Name="ICIFilterConstructor" Kind="Interface" />
      <Type Name="ICIImageProcessorInput" Kind="Interface" />
      <Type Name="ICIImageProcessorOutput" Kind="Interface" />
      <Type Name="ICIImageProvider" Kind="Interface" />
    </Namespace>
    <Namespace Name="MonoTouch.CoreLocation">
      <Type Name="CLActivityType" Kind="Enumeration" />
      <Type Name="CLAuthorizationChangedEventArgs" Kind="Class" />
      <Type Name="CLAuthorizationStatus" Kind="Enumeration" />
      <Type Name="CLBeacon" Kind="Class" />
      <Type Name="CLBeaconRegion" Kind="Class" />
      <Type Name="CLCircularRegion" Kind="Class" />
      <Type Name="CLDeviceOrientation" Kind="Enumeration" />
      <Type Name="CLError" Kind="Enumeration" />
      <Type Name="CLFloor" Kind="Class" />
      <Type Name="CLGeocodeCompletionHandler" Kind="Delegate" />
      <Type Name="CLGeocoder" Kind="Class" />
      <Type Name="CLHeading" Kind="Class" />
      <Type Name="CLHeadingUpdatedEventArgs" Kind="Class" />
      <Type Name="CLLocation" Kind="Class" />
      <Type Name="CLLocationCoordinate2D" Kind="Structure" />
      <Type Name="CLLocationDistance" Kind="Class" />
      <Type Name="CLLocationManager" Kind="Class" />
      <Type Name="CLLocationManagerDelegate" Kind="Class" />
      <Type Name="CLLocationManagerDelegate_Extensions" Kind="Class" />
      <Type Name="CLLocationManagerEventArgs" Kind="Delegate" />
      <Type Name="CLLocationsUpdatedEventArgs" Kind="Class" />
      <Type Name="CLLocationUpdatedEventArgs" Kind="Class" />
      <Type Name="CLPlacemark" Kind="Class" />
      <Type Name="CLProximity" Kind="Enumeration" />
      <Type Name="CLRegion" Kind="Class" />
      <Type Name="CLRegionBeaconsFailedEventArgs" Kind="Class" />
      <Type Name="CLRegionBeaconsRangedEventArgs" Kind="Class" />
      <Type Name="CLRegionErrorEventArgs" Kind="Class" />
      <Type Name="CLRegionEventArgs" Kind="Class" />
      <Type Name="CLRegionState" Kind="Enumeration" />
      <Type Name="CLRegionStateDeterminedEventArgs" Kind="Class" />
      <Type Name="CLVisit" Kind="Class" />
      <Type Name="CLVisitedEventArgs" Kind="Class" />
      <Type Name="ICLLocationManagerDelegate" Kind="Interface" />
    </Namespace>
    <Namespace Name="MonoTouch.CoreMedia">
      <Type Name="CMAttachmentBearer" Kind="Class" />
      <Type Name="CMAttachmentMode" Kind="Enumeration" />
      <Type Name="CMAudioFormatDescription" Kind="Class" />
      <Type Name="CMBlockBuffer" Kind="Class" />
      <Type Name="CMBlockBufferError" Kind="Enumeration" />
      <Type Name="CMBlockBufferFlags" Kind="Enumeration" />
      <Type Name="CMBufferCompare" Kind="Delegate" />
      <Type Name="CMBufferGetBool" Kind="Delegate" />
      <Type Name="CMBufferGetSize" Kind="Delegate" />
      <Type Name="CMBufferGetTime" Kind="Delegate" />
      <Type Name="CMBufferQueue" Kind="Class" />
      <Type Name="CMBufferQueue+TriggerCondition" Kind="Enumeration" />
      <Type Name="CMClock" Kind="Class" />
      <Type Name="CMClockError" Kind="Enumeration" />
      <Type Name="CMClockOrTimebase" Kind="Class" />
      <Type Name="CMClosedCaptionFormatType" Kind="Enumeration" />
      <Type Name="CMCustomBlockAllocator" Kind="Class" />
      <Type Name="CMFormatDescription" Kind="Class" />
      <Type Name="CMFormatDescriptionError" Kind="Enumeration" />
      <Type Name="CMMediaType" Kind="Enumeration" />
      <Type Name="CMMemoryPool" Kind="Class" />
      <Type Name="CMMetadataFormatType" Kind="Enumeration" />
      <Type Name="CMMuxedStreamType" Kind="Enumeration" />
      <Type Name="CMPixelFormat" Kind="Enumeration" />
      <Type Name="CMSampleBuffer" Kind="Class" />
      <Type Name="CMSampleBufferAttachmentSettings" Kind="Class" />
      <Type Name="CMSampleBufferError" Kind="Enumeration" />
      <Type Name="CMSampleTimingInfo" Kind="Structure" />
      <Type Name="CMSubtitleFormatType" Kind="Enumeration" />
      <Type Name="CMSyncError" Kind="Enumeration" />
      <Type Name="CMTextMarkupAttributes" Kind="Class" />
      <Type Name="CMTime" Kind="Structure" />
      <Type Name="CMTime+Flags" Kind="Enumeration" />
      <Type Name="CMTimebase" Kind="Class" />
      <Type Name="CMTimebaseError" Kind="Enumeration" />
      <Type Name="CMTimeCodeFormatType" Kind="Enumeration" />
      <Type Name="CMTimeMapping" Kind="Structure" />
      <Type Name="CMTimeRange" Kind="Structure" />
      <Type Name="CMTimeRoundingMethod" Kind="Enumeration" />
      <Type Name="CMTimeScale" Kind="Structure" />
      <Type Name="CMVideoCodecType" Kind="Enumeration" />
      <Type Name="CMVideoDimensions" Kind="Structure" />
      <Type Name="CMVideoFormatDescription" Kind="Class" />
      <Type Name="ICMAttachmentBearer" Kind="Interface" />
      <Type Name="LensStabilizationStatus" Kind="Enumeration" />
      <Type Name="TextMarkupColor" Kind="Structure" />
    </Namespace>
    <Namespace Name="MonoTouch.CoreMidi">
      <Type Name="IOErrorEventArgs" Kind="Class" />
      <Type Name="Midi" Kind="Class" />
      <Type Name="Midi+Notifications" Kind="Class" />
      <Type Name="MidiClient" Kind="Class" />
      <Type Name="MidiControlTransform" Kind="Structure" />
      <Type Name="MidiDevice" Kind="Class" />
      <Type Name="MidiEndpoint" Kind="Class" />
      <Type Name="MidiEntity" Kind="Class" />
      <Type Name="MidiError" Kind="Enumeration" />
      <Type Name="MidiException" Kind="Class" />
      <Type Name="MidiNetworkConnection" Kind="Class" />
      <Type Name="MidiNetworkConnectionPolicy" Kind="Enumeration" />
      <Type Name="MidiNetworkHost" Kind="Class" />
      <Type Name="MidiNetworkSession" Kind="Class" />
      <Type Name="MidiObject" Kind="Class" />
      <Type Name="MidiPacket" Kind="Class" />
      <Type Name="MidiPacketsEventArgs" Kind="Class" />
      <Type Name="MidiPort" Kind="Class" />
      <Type Name="MidiThruConnection" Kind="Class" />
      <Type Name="MidiThruConnectionEndpoint" Kind="Structure" />
      <Type Name="MidiThruConnectionParams" Kind="Class" />
      <Type Name="MidiTransform" Kind="Structure" />
      <Type Name="MidiTransformControlType" Kind="Enumeration" />
      <Type Name="MidiTransformType" Kind="Enumeration" />
      <Type Name="MidiValueMap" Kind="Structure" />
      <Type Name="ObjectAddedOrRemovedEventArgs" Kind="Class" />
      <Type Name="ObjectPropertyChangedEventArgs" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.CoreMotion">
      <Type Name="CMAcceleration" Kind="Structure" />
      <Type Name="CMAccelerometerData" Kind="Class" />
      <Type Name="CMAccelerometerHandler" Kind="Delegate" />
      <Type Name="CMAltimeter" Kind="Class" />
      <Type Name="CMAltitudeData" Kind="Class" />
      <Type Name="CMAttitude" Kind="Class" />
      <Type Name="CMAttitudeReferenceFrame" Kind="Enumeration" />
      <Type Name="CMCalibratedMagneticField" Kind="Structure" />
      <Type Name="CMDeviceMotion" Kind="Class" />
      <Type Name="CMDeviceMotionHandler" Kind="Delegate" />
      <Type Name="CMError" Kind="Enumeration" />
      <Type Name="CMGyroData" Kind="Class" />
      <Type Name="CMGyroHandler" Kind="Delegate" />
      <Type Name="CMLogItem" Kind="Class" />
      <Type Name="CMMagneticField" Kind="Structure" />
      <Type Name="CMMagneticFieldCalibrationAccuracy" Kind="Enumeration" />
      <Type Name="CMMagnetometerData" Kind="Class" />
      <Type Name="CMMagnetometerHandler" Kind="Delegate" />
      <Type Name="CMMotionActivity" Kind="Class" />
      <Type Name="CMMotionActivityConfidence" Kind="Enumeration" />
      <Type Name="CMMotionActivityHandler" Kind="Delegate" />
      <Type Name="CMMotionActivityManager" Kind="Class" />
      <Type Name="CMMotionActivityQueryHandler" Kind="Delegate" />
      <Type Name="CMMotionManager" Kind="Class" />
      <Type Name="CMPedometer" Kind="Class" />
      <Type Name="CMPedometerData" Kind="Class" />
      <Type Name="CMPedometerEvent" Kind="Class" />
      <Type Name="CMPedometerEventType" Kind="Enumeration" />
      <Type Name="CMQuaternion" Kind="Structure" />
      <Type Name="CMRecordedAccelerometerData" Kind="Class" />
      <Type Name="CMRotationMatrix" Kind="Structure" />
      <Type Name="CMRotationRate" Kind="Structure" />
      <Type Name="CMSensorDataList" Kind="Class" />
      <Type Name="CMSensorRecorder" Kind="Class" />
      <Type Name="CMStepCounter" Kind="Class" />
      <Type Name="CMStepQueryHandler" Kind="Delegate" />
      <Type Name="CMStepUpdateHandler" Kind="Delegate" />
    </Namespace>
    <Namespace Name="MonoTouch.CoreServices">
      <Type Name="CFHTTPAuthentication" Kind="Class" />
      <Type Name="CFHTTPMessage" Kind="Class" />
      <Type Name="CFHTTPMessage+AuthenticationScheme" Kind="Enumeration" />
      <Type Name="CFHTTPStream" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.CoreSpotlight">
      <Type Name="CSCustomAttributeKey" Kind="Class" />
      <Type Name="CSFileProtection" Kind="Enumeration" />
      <Type Name="CSIndexErrorCode" Kind="Enumeration" />
      <Type Name="CSIndexErrorCodeExtensions" Kind="Class" />
      <Type Name="CSIndexExtensionRequestHandler" Kind="Class" />
      <Type Name="CSLocalizedString" Kind="Class" />
      <Type Name="CSMailboxKey" Kind="Class" />
      <Type Name="CSPerson" Kind="Class" />
      <Type Name="CSSearchableIndex" Kind="Class" />
      <Type Name="CSSearchableIndex_CSOptionalBatchingExtension" Kind="Class" />
      <Type Name="CSSearchableIndexDelegate" Kind="Class" />
      <Type Name="CSSearchableIndexDelegate_Extensions" Kind="Class" />
      <Type Name="CSSearchableIndexFetchHandler" Kind="Delegate" />
      <Type Name="CSSearchableItem" Kind="Class" />
      <Type Name="CSSearchableItemAttributeSet" Kind="Class" />
      <Type Name="CSSearchQuery" Kind="Class" />
      <Type Name="CSSearchQueryErrorCode" Kind="Enumeration" />
      <Type Name="CSSearchQueryErrorCodeExtensions" Kind="Class" />
      <Type Name="ICSSearchableIndexDelegate" Kind="Interface" />
    </Namespace>
    <Namespace Name="MonoTouch.CoreTelephony">
      <Type Name="CTCall" Kind="Class" />
      <Type Name="CTCallCenter" Kind="Class" />
      <Type Name="CTCarrier" Kind="Class" />
      <Type Name="CTCellularData" Kind="Class" />
      <Type Name="CTCellularDataRestrictedState" Kind="Enumeration" />
      <Type Name="CTErrorDomain" Kind="Enumeration" />
      <Type Name="CTRadioAccessTechnology" Kind="Class" />
      <Type Name="CTSubscriber" Kind="Class" />
      <Type Name="CTSubscriberInfo" Kind="Class" />
      <Type Name="CTTelephonyNetworkInfo" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.CoreText">
      <Type Name="CTBaselineClass" Kind="Enumeration" />
      <Type Name="CTBaselineFont" Kind="Enumeration" />
      <Type Name="CTCharacterCollection" Kind="Enumeration" />
      <Type Name="CTFont" Kind="Class" />
      <Type Name="CTFontCollection" Kind="Class" />
      <Type Name="CTFontCollectionOptionKey" Kind="Class" />
      <Type Name="CTFontCollectionOptions" Kind="Class" />
      <Type Name="CTFontDescriptor" Kind="Class" />
      <Type Name="CTFontDescriptorAttributeKey" Kind="Class" />
      <Type Name="CTFontDescriptorAttributes" Kind="Class" />
      <Type Name="CTFontDescriptorMatchingState" Kind="Enumeration" />
      <Type Name="CTFontFeatureAllTypographicFeatures" Kind="Class" />
      <Type Name="CTFontFeatureAllTypographicFeatures+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureAlternateKana" Kind="Class" />
      <Type Name="CTFontFeatureAlternateKana+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureAnnotation" Kind="Class" />
      <Type Name="CTFontFeatureAnnotation+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureCaseSensitiveLayout" Kind="Class" />
      <Type Name="CTFontFeatureCaseSensitiveLayout+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureCharacterAlternatives" Kind="Class" />
      <Type Name="CTFontFeatureCharacterAlternatives+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureCharacterShape" Kind="Class" />
      <Type Name="CTFontFeatureCharacterShape+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureCJKRomanSpacing" Kind="Class" />
      <Type Name="CTFontFeatureCJKRomanSpacing+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureCJKSymbolAlternatives" Kind="Class" />
      <Type Name="CTFontFeatureCJKSymbolAlternatives+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureCJKVerticalRomanPlacement" Kind="Class" />
      <Type Name="CTFontFeatureCJKVerticalRomanPlacement+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureContextualAlternates" Kind="Class" />
      <Type Name="CTFontFeatureContextualAlternates+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureCursiveConnection" Kind="Class" />
      <Type Name="CTFontFeatureCursiveConnection+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureDesignComplexity" Kind="Class" />
      <Type Name="CTFontFeatureDesignComplexity+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureDiacritics" Kind="Class" />
      <Type Name="CTFontFeatureDiacritics+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureFractions" Kind="Class" />
      <Type Name="CTFontFeatureFractions+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureIdeographicAlternatives" Kind="Class" />
      <Type Name="CTFontFeatureIdeographicAlternatives+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureIdeographicSpacing" Kind="Class" />
      <Type Name="CTFontFeatureIdeographicSpacing+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureItalicCJKRoman" Kind="Class" />
      <Type Name="CTFontFeatureItalicCJKRoman+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureKanaSpacing" Kind="Class" />
      <Type Name="CTFontFeatureKanaSpacing+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureKey" Kind="Class" />
      <Type Name="CTFontFeatureLetterCase" Kind="Class" />
      <Type Name="CTFontFeatureLetterCase+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureLigatures" Kind="Class" />
      <Type Name="CTFontFeatureLigatures+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureLinguisticRearrangementConnection" Kind="Class" />
      <Type Name="CTFontFeatureLinguisticRearrangementConnection+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureLowerCase" Kind="Class" />
      <Type Name="CTFontFeatureLowerCase+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureMathematicalExtras" Kind="Class" />
      <Type Name="CTFontFeatureMathematicalExtras+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureNumberCase" Kind="Class" />
      <Type Name="CTFontFeatureNumberCase+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureNumberSpacing" Kind="Class" />
      <Type Name="CTFontFeatureNumberSpacing+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureOrnamentSets" Kind="Class" />
      <Type Name="CTFontFeatureOrnamentSets+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureOverlappingCharacters" Kind="Class" />
      <Type Name="CTFontFeatureOverlappingCharacters+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureRubyKana" Kind="Class" />
      <Type Name="CTFontFeatureRubyKana+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatures" Kind="Class" />
      <Type Name="CTFontFeatureSelectorKey" Kind="Class" />
      <Type Name="CTFontFeatureSelectors" Kind="Class" />
      <Type Name="CTFontFeatureSettings" Kind="Class" />
      <Type Name="CTFontFeatureSmartSwash" Kind="Class" />
      <Type Name="CTFontFeatureSmartSwash+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureStyleOptions" Kind="Class" />
      <Type Name="CTFontFeatureStyleOptions+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureStylisticAlternatives" Kind="Class" />
      <Type Name="CTFontFeatureStylisticAlternatives+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureTextSpacing" Kind="Class" />
      <Type Name="CTFontFeatureTextSpacing+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureTransliteration" Kind="Class" />
      <Type Name="CTFontFeatureTransliteration+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureTypographicExtras" Kind="Class" />
      <Type Name="CTFontFeatureTypographicExtras+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureUnicodeDecomposition" Kind="Class" />
      <Type Name="CTFontFeatureUnicodeDecomposition+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureUpperCase" Kind="Class" />
      <Type Name="CTFontFeatureUpperCase+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureVerticalPosition" Kind="Class" />
      <Type Name="CTFontFeatureVerticalPosition+Selector" Kind="Enumeration" />
      <Type Name="CTFontFeatureVerticalSubstitutionConnection" Kind="Class" />
      <Type Name="CTFontFeatureVerticalSubstitutionConnection+Selector" Kind="Enumeration" />
      <Type Name="CTFontFormat" Kind="Enumeration" />
      <Type Name="CTFontManager" Kind="Class" />
      <Type Name="CTFontManager+Notifications" Kind="Class" />
      <Type Name="CTFontManagerAutoActivation" Kind="Enumeration" />
      <Type Name="CTFontManagerError" Kind="Enumeration" />
      <Type Name="CTFontManagerErrorExtensions" Kind="Class" />
      <Type Name="CTFontManagerScope" Kind="Enumeration" />
      <Type Name="CTFontNameKey" Kind="Enumeration" />
      <Type Name="CTFontOptions" Kind="Enumeration" />
      <Type Name="CTFontOrientation" Kind="Enumeration" />
      <Type Name="CTFontPriority" Kind="Enumeration" />
      <Type Name="CTFontStylisticClass" Kind="Enumeration" />
      <Type Name="CTFontSymbolicTraits" Kind="Enumeration" />
      <Type Name="CTFontTable" Kind="Enumeration" />
      <Type Name="CTFontTableOptions" Kind="Enumeration" />
      <Type Name="CTFontTraitKey" Kind="Class" />
      <Type Name="CTFontTraits" Kind="Class" />
      <Type Name="CTFontUIFontType" Kind="Enumeration" />
      <Type Name="CTFontVariation" Kind="Class" />
      <Type Name="CTFontVariationAxes" Kind="Class" />
      <Type Name="CTFontVariationAxisKey" Kind="Class" />
      <Type Name="CTFrame" Kind="Class" />
      <Type Name="CTFrameAttributeKey" Kind="Class" />
      <Type Name="CTFrameAttributes" Kind="Class" />
      <Type Name="CTFramePathFillRule" Kind="Enumeration" />
      <Type Name="CTFrameProgression" Kind="Enumeration" />
      <Type Name="CTFramesetter" Kind="Class" />
      <Type Name="CTGlyphInfo" Kind="Class" />
      <Type Name="CTLigatureFormation" Kind="Enumeration" />
      <Type Name="CTLine" Kind="Class" />
      <Type Name="CTLine+CaretEdgeEnumerator" Kind="Delegate" />
      <Type Name="CTLineBoundsOptions" Kind="Enumeration" />
      <Type Name="CTLineBreakMode" Kind="Enumeration" />
      <Type Name="CTLineTruncation" Kind="Enumeration" />
      <Type Name="CTParagraphStyle" Kind="Class" />
      <Type Name="CTParagraphStyleSettings" Kind="Class" />
      <Type Name="CTRun" Kind="Class" />
      <Type Name="CTRunDelegate" Kind="Class" />
      <Type Name="CTRunDelegateOperations" Kind="Class" />
      <Type Name="CTRunStatus" Kind="Enumeration" />
      <Type Name="CTStringAttributeKey" Kind="Class" />
      <Type Name="CTStringAttributes" Kind="Class" />
      <Type Name="CTSuperscriptStyle" Kind="Enumeration" />
      <Type Name="CTTextAlignment" Kind="Enumeration" />
      <Type Name="CTTextTab" Kind="Class" />
      <Type Name="CTTextTabOptionKey" Kind="Class" />
      <Type Name="CTTextTabOptions" Kind="Class" />
      <Type Name="CTTypesetter" Kind="Class" />
      <Type Name="CTTypesetterOptionKey" Kind="Class" />
      <Type Name="CTTypesetterOptions" Kind="Class" />
      <Type Name="CTUnderlineStyle" Kind="Enumeration" />
      <Type Name="CTUnderlineStyleModifiers" Kind="Enumeration" />
      <Type Name="CTWritingDirection" Kind="Enumeration" />
      <Type Name="FontFeatureGroup" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.CoreVideo">
      <Type Name="CVAttachmentMode" Kind="Enumeration" />
      <Type Name="CVBuffer" Kind="Class" />
      <Type Name="CVFillExtendedPixelsCallBack" Kind="Delegate" />
      <Type Name="CVFillExtendedPixelsCallBackData" Kind="Structure" />
      <Type Name="CVImageBuffer" Kind="Class" />
      <Type Name="CVMetalTexture" Kind="Class" />
      <Type Name="CVMetalTextureCache" Kind="Class" />
      <Type Name="CVOptionFlags" Kind="Enumeration" />
      <Type Name="CVPixelBuffer" Kind="Class" />
      <Type Name="CVPixelBufferAttributes" Kind="Class" />
      <Type Name="CVPixelBufferLock" Kind="Enumeration" />
      <Type Name="CVPixelBufferPool" Kind="Class" />
      <Type Name="CVPixelBufferPoolAllocationSettings" Kind="Class" />
      <Type Name="CVPixelBufferPoolFlushFlags" Kind="Enumeration" />
      <Type Name="CVPixelBufferPoolSettings" Kind="Class" />
      <Type Name="CVPixelFormatDescription" Kind="Class" />
      <Type Name="CVPixelFormatType" Kind="Enumeration" />
      <Type Name="CVPlanarComponentInfo" Kind="Structure" />
      <Type Name="CVPlanarPixelBufferInfo" Kind="Structure" />
      <Type Name="CVPlanarPixelBufferInfo_YCbCrPlanar" Kind="Structure" />
      <Type Name="CVReturn" Kind="Enumeration" />
      <Type Name="CVSMPTETime" Kind="Structure" />
      <Type Name="CVSMPTETimeFlags" Kind="Enumeration" />
      <Type Name="CVSMPTETimeType" Kind="Enumeration" />
      <Type Name="CVTime" Kind="Structure" />
      <Type Name="CVTimeFlags" Kind="Enumeration" />
      <Type Name="CVTimeStamp" Kind="Structure" />
      <Type Name="CVTimeStampFlags" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.Dialog">
      <Type Name="ActivityElement" Kind="Class" />
      <Type Name="AlignmentAttribute" Kind="Class" />
      <Type Name="BadgeElement" Kind="Class" />
      <Type Name="BaseBooleanImageElement" Kind="Class" />
      <Type Name="BaseBooleanImageElement+TextWithImageCellView" Kind="Class" />
      <Type Name="BindingContext" Kind="Class" />
      <Type Name="BooleanElement" Kind="Class" />
      <Type Name="BooleanImageElement" Kind="Class" />
      <Type Name="BoolElement" Kind="Class" />
      <Type Name="CaptionAttribute" Kind="Class" />
      <Type Name="CheckboxAttribute" Kind="Class" />
      <Type Name="CheckboxElement" Kind="Class" />
      <Type Name="DateAttribute" Kind="Class" />
      <Type Name="DateElement" Kind="Class" />
      <Type Name="DateTimeElement" Kind="Class" />
      <Type Name="DialogViewController" Kind="Class" />
      <Type Name="DialogViewController+SearchTextEventHandler" Kind="Delegate" />
      <Type Name="DialogViewController+SizingSource" Kind="Class" />
      <Type Name="DialogViewController+Source" Kind="Class" />
      <Type Name="Element" Kind="Class" />
      <Type Name="EntryAttribute" Kind="Class" />
      <Type Name="EntryElement" Kind="Class" />
      <Type Name="FloatElement" Kind="Class" />
      <Type Name="GlassButton" Kind="Class" />
      <Type Name="GraphicsUtil" Kind="Class" />
      <Type Name="Group" Kind="Class" />
      <Type Name="HtmlAttribute" Kind="Class" />
      <Type Name="HtmlElement" Kind="Class" />
      <Type Name="IColorizeBackground" Kind="Interface" />
      <Type Name="IElementSizing" Kind="Interface" />
      <Type Name="ImageElement" Kind="Class" />
      <Type Name="ImageStringElement" Kind="Class" />
      <Type Name="JsonElement" Kind="Class" />
      <Type Name="LoadMoreElement" Kind="Class" />
      <Type Name="MessageElement" Kind="Class" />
      <Type Name="MessageSummaryView" Kind="Class" />
      <Type Name="MultilineAttribute" Kind="Class" />
      <Type Name="MultilineElement" Kind="Class" />
      <Type Name="OnTapAttribute" Kind="Class" />
      <Type Name="OwnerDrawnElement" Kind="Class" />
      <Type Name="PasswordAttribute" Kind="Class" />
      <Type Name="RadioElement" Kind="Class" />
      <Type Name="RadioGroup" Kind="Class" />
      <Type Name="RadioSelectionAttribute" Kind="Class" />
      <Type Name="RangeAttribute" Kind="Class" />
      <Type Name="RefreshTableHeaderView" Kind="Class" />
      <Type Name="RefreshViewStatus" Kind="Enumeration" />
      <Type Name="RootElement" Kind="Class" />
      <Type Name="SearchChangedEventArgs" Kind="Class" />
      <Type Name="Section" Kind="Class" />
      <Type Name="SectionAttribute" Kind="Class" />
      <Type Name="SkipAttribute" Kind="Class" />
      <Type Name="StringElement" Kind="Class" />
      <Type Name="StyledMultilineElement" Kind="Class" />
      <Type Name="StyledStringElement" Kind="Class" />
      <Type Name="TimeAttribute" Kind="Class" />
      <Type Name="TimeElement" Kind="Class" />
      <Type Name="UIViewElement" Kind="Class" />
      <Type Name="UIViewElement+CellFlags" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.Dialog.Utilities">
      <Type Name="IImageUpdated" Kind="Interface" />
      <Type Name="ImageLoader" Kind="Class" />
      <Type Name="LRUCache`2" DisplayName="LRUCache&lt;TKey,TValue&gt;" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.EventKit">
      <Type Name="EKAlarm" Kind="Class" />
      <Type Name="EKAlarmProximity" Kind="Enumeration" />
      <Type Name="EKAuthorizationStatus" Kind="Enumeration" />
      <Type Name="EKCalendar" Kind="Class" />
      <Type Name="EKCalendarEventAvailability" Kind="Enumeration" />
      <Type Name="EKCalendarItem" Kind="Class" />
      <Type Name="EKCalendarType" Kind="Enumeration" />
      <Type Name="EKDay" Kind="Enumeration" />
      <Type Name="EKEntityMask" Kind="Enumeration" />
      <Type Name="EKEntityType" Kind="Enumeration" />
      <Type Name="EKErrorCode" Kind="Enumeration" />
      <Type Name="EKErrorCodeExtensions" Kind="Class" />
      <Type Name="EKEvent" Kind="Class" />
      <Type Name="EKEventAvailability" Kind="Enumeration" />
      <Type Name="EKEventSearchCallback" Kind="Delegate" />
      <Type Name="EKEventStatus" Kind="Enumeration" />
      <Type Name="EKEventStore" Kind="Class" />
      <Type Name="EKEventStore+Notifications" Kind="Class" />
      <Type Name="EKObject" Kind="Class" />
      <Type Name="EKParticipant" Kind="Class" />
      <Type Name="EKParticipantRole" Kind="Enumeration" />
      <Type Name="EKParticipantScheduleStatus" Kind="Enumeration" />
      <Type Name="EKParticipantStatus" Kind="Enumeration" />
      <Type Name="EKParticipantType" Kind="Enumeration" />
      <Type Name="EKRecurrenceDayOfWeek" Kind="Class" />
      <Type Name="EKRecurrenceEnd" Kind="Class" />
      <Type Name="EKRecurrenceFrequency" Kind="Enumeration" />
      <Type Name="EKRecurrenceRule" Kind="Class" />
      <Type Name="EKReminder" Kind="Class" />
      <Type Name="EKReminderPriority" Kind="Enumeration" />
      <Type Name="EKSource" Kind="Class" />
      <Type Name="EKSourceType" Kind="Enumeration" />
      <Type Name="EKSpan" Kind="Enumeration" />
      <Type Name="EKStructuredLocation" Kind="Class" />
      <Type Name="EKWeekday" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.EventKitUI">
      <Type Name="EKCalendarChooser" Kind="Class" />
      <Type Name="EKCalendarChooserDelegate" Kind="Class" />
      <Type Name="EKCalendarChooserDelegate_Extensions" Kind="Class" />
      <Type Name="EKCalendarChooserDisplayStyle" Kind="Enumeration" />
      <Type Name="EKCalendarChooserSelectionStyle" Kind="Enumeration" />
      <Type Name="EKEventEditController" Kind="Delegate" />
      <Type Name="EKEventEditEventArgs" Kind="Class" />
      <Type Name="EKEventEditViewAction" Kind="Enumeration" />
      <Type Name="EKEventEditViewController" Kind="Class" />
      <Type Name="EKEventEditViewController+EKEventEditViewControllerAppearance" Kind="Class" />
      <Type Name="EKEventEditViewDelegate" Kind="Class" />
      <Type Name="EKEventEditViewDelegate_Extensions" Kind="Class" />
      <Type Name="EKEventViewAction" Kind="Enumeration" />
      <Type Name="EKEventViewController" Kind="Class" />
      <Type Name="EKEventViewDelegate" Kind="Class" />
      <Type Name="EKEventViewEventArgs" Kind="Class" />
      <Type Name="IEKCalendarChooserDelegate" Kind="Interface" />
      <Type Name="IEKEventEditViewDelegate" Kind="Interface" />
      <Type Name="IEKEventViewDelegate" Kind="Interface" />
    </Namespace>
    <Namespace Name="MonoTouch.ExternalAccessory">
      <Type Name="EAAccessory" Kind="Class" />
      <Type Name="EAAccessoryDelegate" Kind="Class" />
      <Type Name="EAAccessoryDelegate_Extensions" Kind="Class" />
      <Type Name="EAAccessoryEventArgs" Kind="Class" />
      <Type Name="EAAccessoryManager" Kind="Class" />
      <Type Name="EAAccessoryManager+Notifications" Kind="Class" />
      <Type Name="EABluetoothAccessoryPickerError" Kind="Enumeration" />
      <Type Name="EABluetoothAccessoryPickerErrorExtensions" Kind="Class" />
      <Type Name="EASession" Kind="Class" />
      <Type Name="EAWiFiUnconfiguredAccessory" Kind="Class" />
      <Type Name="EAWiFiUnconfiguredAccessoryBrowser" Kind="Class" />
      <Type Name="EAWiFiUnconfiguredAccessoryBrowserDelegate" Kind="Class" />
      <Type Name="EAWiFiUnconfiguredAccessoryBrowserEventArgs" Kind="Class" />
      <Type Name="EAWiFiUnconfiguredAccessoryBrowserState" Kind="Enumeration" />
      <Type Name="EAWiFiUnconfiguredAccessoryConfigurationStatus" Kind="Enumeration" />
      <Type Name="EAWiFiUnconfiguredAccessoryDidFinishEventArgs" Kind="Class" />
      <Type Name="EAWiFiUnconfiguredAccessoryEventArgs" Kind="Class" />
      <Type Name="EAWiFiUnconfiguredAccessoryProperties" Kind="Enumeration" />
      <Type Name="IEAAccessoryDelegate" Kind="Interface" />
      <Type Name="IEAWiFiUnconfiguredAccessoryBrowserDelegate" Kind="Interface" />
    </Namespace>
    <Namespace Name="MonoTouch.Foundation">
      <Type Name="ActionAttribute" Kind="Class" />
      <Type Name="AdviceAttribute" Kind="Class" />
      <Type Name="ConnectAttribute" Kind="Class" />
      <Type Name="DictionaryContainer" Kind="Class" />
      <Type Name="EncodingDetectionOptions" Kind="Class" />
      <Type Name="EnumerateDatesCallback" Kind="Delegate" />
      <Type Name="EnumerateIndexSetCallback" Kind="Delegate" />
      <Type Name="ExportAttribute" Kind="Class" />
      <Type Name="FieldAttribute" Kind="Class" />
      <Type Name="INSCacheDelegate" Kind="Interface" />
      <Type Name="INSCoding" Kind="Interface" />
      <Type Name="INSCopying" Kind="Interface" />
      <Type Name="INSDiscardableContent" Kind="Interface" />
      <Type Name="INSExtensionRequestHandling" Kind="Interface" />
      <Type Name="INSFileManagerDelegate" Kind="Interface" />
      <Type Name="INSFilePresenter" Kind="Interface" />
      <Type Name="INSKeyedArchiverDelegate" Kind="Interface" />
      <Type Name="INSKeyedUnarchiverDelegate" Kind="Interface" />
      <Type Name="INSLocking" Kind="Interface" />
      <Type Name="INSMachPortDelegate" Kind="Interface" />
      <Type Name="INSMetadataQueryDelegate" Kind="Interface" />
      <Type Name="INSMutableCopying" Kind="Interface" />
      <Type Name="INSNetServiceBrowserDelegate" Kind="Interface" />
      <Type Name="INSNetServiceDelegate" Kind="Interface" />
      <Type Name="INSObjectProtocol" Kind="Interface" />
      <Type Name="INSPortDelegate" Kind="Interface" />
      <Type Name="INSProgressReporting" Kind="Interface" />
      <Type Name="INSSecureCoding" Kind="Interface" />
      <Type Name="INSStreamDelegate" Kind="Interface" />
      <Type Name="INSURLAuthenticationChallengeSender" Kind="Interface" />
      <Type Name="INSUrlConnectionDataDelegate" Kind="Interface" />
      <Type Name="INSUrlConnectionDelegate" Kind="Interface" />
      <Type Name="INSUrlConnectionDownloadDelegate" Kind="Interface" />
      <Type Name="INSUrlProtocolClient" Kind="Interface" />
      <Type Name="INSUrlSessionDataDelegate" Kind="Interface" />
      <Type Name="INSUrlSessionDelegate" Kind="Interface" />
      <Type Name="INSUrlSessionDownloadDelegate" Kind="Interface" />
      <Type Name="INSUrlSessionStreamDelegate" Kind="Interface" />
      <Type Name="INSUrlSessionTaskDelegate" Kind="Interface" />
      <Type Name="INSUserActivityDelegate" Kind="Interface" />
      <Type Name="LinkerSafeAttribute" Kind="Class" />
      <Type Name="ModelAttribute" Kind="Class" />
      <Type Name="ModelNotImplementedException" Kind="Class" />
      <Type Name="MonoTouchException" Kind="Class" />
      <Type Name="NSActivityOptions" Kind="Enumeration" />
      <Type Name="NSAlignmentOptions" Kind="Enumeration" />
      <Type Name="NSArchiveReplaceEventArgs" Kind="Class" />
      <Type Name="NSArray" Kind="Class" />
      <Type Name="NSArray`1" DisplayName="NSArray&lt;TKey&gt;" Kind="Class" />
      <Type Name="NSAttributedRangeCallback" Kind="Delegate" />
      <Type Name="NSAttributedString" Kind="Class" />
      <Type Name="NSAttributedStringCallback" Kind="Delegate" />
      <Type Name="NSAttributedStringDocumentAttributes" Kind="Class" />
      <Type Name="NSAttributedStringEnumeration" Kind="Enumeration" />
      <Type Name="NSAutoreleasePool" Kind="Class" />
      <Type Name="NSBlockOperation" Kind="Class" />
      <Type Name="NSBundle" Kind="Class" />
      <Type Name="NSBundleExecutableArchitecture" Kind="Enumeration" />
      <Type Name="NSBundleResourceRequest" Kind="Class" />
      <Type Name="NSBundleResourceRequest+Notifications" Kind="Class" />
      <Type Name="NSByteCountFormatter" Kind="Class" />
      <Type Name="NSByteCountFormatterCountStyle" Kind="Enumeration" />
      <Type Name="NSByteCountFormatterUnits" Kind="Enumeration" />
      <Type Name="NSCache" Kind="Class" />
      <Type Name="NSCacheDelegate" Kind="Class" />
      <Type Name="NSCacheDelegate_Extensions" Kind="Class" />
      <Type Name="NSCachedUrlResponse" Kind="Class" />
      <Type Name="NSCalculationError" Kind="Enumeration" />
      <Type Name="NSCalendar" Kind="Class" />
      <Type Name="NSCalendar+Notifications" Kind="Class" />
      <Type Name="NSCalendarOptions" Kind="Enumeration" />
      <Type Name="NSCalendarType" Kind="Enumeration" />
      <Type Name="NSCalendarUnit" Kind="Enumeration" />
      <Type Name="NSCharacterSet" Kind="Class" />
      <Type Name="NSCocoaError" Kind="Enumeration" />
      <Type Name="NSCoder" Kind="Class" />
      <Type Name="NSCoding" Kind="Class" />
      <Type Name="NSComparator" Kind="Delegate" />
      <Type Name="NSComparisonPredicate" Kind="Class" />
      <Type Name="NSComparisonPredicateModifier" Kind="Enumeration" />
      <Type Name="NSComparisonPredicateOptions" Kind="Enumeration" />
      <Type Name="NSComparisonResult" Kind="Enumeration" />
      <Type Name="NSCompoundPredicate" Kind="Class" />
      <Type Name="NSCompoundPredicateType" Kind="Enumeration" />
      <Type Name="NSCondition" Kind="Class" />
      <Type Name="NSConditionLock" Kind="Class" />
      <Type Name="NSCopying" Kind="Class" />
      <Type Name="NSData" Kind="Class" />
      <Type Name="NSDataBase64DecodingOptions" Kind="Enumeration" />
      <Type Name="NSDataBase64EncodingOptions" Kind="Enumeration" />
      <Type Name="NSDataByteRangeEnumerator" Kind="Delegate" />
      <Type Name="NSDataDetector" Kind="Class" />
      <Type Name="NSDataReadingOptions" Kind="Enumeration" />
      <Type Name="NSDataSearchOptions" Kind="Enumeration" />
      <Type Name="NSDataWritingOptions" Kind="Enumeration" />
      <Type Name="NSDate" Kind="Class" />
      <Type Name="NSDateComponents" Kind="Class" />
      <Type Name="NSDateComponentsFormatter" Kind="Class" />
      <Type Name="NSDateComponentsFormatterUnitsStyle" Kind="Enumeration" />
      <Type Name="NSDateComponentsFormatterZeroFormattingBehavior" Kind="Enumeration" />
      <Type Name="NSDateComponentsWrappingBehavior" Kind="Enumeration" />
      <Type Name="NSDateFormatter" Kind="Class" />
      <Type Name="NSDateFormatterBehavior" Kind="Enumeration" />
      <Type Name="NSDateFormatterStyle" Kind="Enumeration" />
      <Type Name="NSDateIntervalFormatter" Kind="Class" />
      <Type Name="NSDateIntervalFormatterStyle" Kind="Enumeration" />
      <Type Name="NSDecimal" Kind="Structure" />
      <Type Name="NSDecimalNumber" Kind="Class" />
      <Type Name="NSDecoderCallback" Kind="Delegate" />
      <Type Name="NSDecoderHandler" Kind="Delegate" />
      <Type Name="NSDictionary" Kind="Class" />
      <Type Name="NSDictionary`2" DisplayName="NSDictionary&lt;TKey,TValue&gt;" Kind="Class" />
      <Type Name="NSDirectoryEnumerationOptions" Kind="Enumeration" />
      <Type Name="NSDirectoryEnumerator" Kind="Class" />
      <Type Name="NSDistributedNotificationCenter" Kind="Class" />
      <Type Name="NSDocumentType" Kind="Enumeration" />
      <Type Name="NSDocumentViewMode" Kind="Enumeration" />
      <Type Name="NSEncodeHook" Kind="Delegate" />
      <Type Name="NSEnergyFormatter" Kind="Class" />
      <Type Name="NSEnergyFormatterUnit" Kind="Enumeration" />
      <Type Name="NSEnumerateErrorHandler" Kind="Delegate" />
      <Type Name="NSEnumerationOptions" Kind="Enumeration" />
      <Type Name="NSEnumerator" Kind="Class" />
      <Type Name="NSError" Kind="Class" />
      <Type Name="NSErrorEventArgs" Kind="Class" />
      <Type Name="NSErrorException" Kind="Class" />
      <Type Name="NSErrorUserInfoValueProvider" Kind="Delegate" />
      <Type Name="NSException" Kind="Class" />
      <Type Name="NSExpression" Kind="Class" />
      <Type Name="NSExpressionCallbackHandler" Kind="Delegate" />
      <Type Name="NSExpressionHandler" Kind="Delegate" />
      <Type Name="NSExpressionType" Kind="Enumeration" />
      <Type Name="NSExtensionContext" Kind="Class" />
      <Type Name="NSExtensionContext+Notifications" Kind="Class" />
      <Type Name="NSExtensionItem" Kind="Class" />
      <Type Name="NSExtensionRequestHandling" Kind="Class" />
      <Type Name="NSFileAccessIntent" Kind="Class" />
      <Type Name="NSFileAttributes" Kind="Class" />
      <Type Name="NSFileCoordinator" Kind="Class" />
      <Type Name="NSFileCoordinatorReadingOptions" Kind="Enumeration" />
      <Type Name="NSFileCoordinatorWorkerRW" Kind="Delegate" />
      <Type Name="NSFileCoordinatorWritingOptions" Kind="Enumeration" />
      <Type Name="NSFileHandle" Kind="Class" />
      <Type Name="NSFileHandle+Notifications" Kind="Class" />
      <Type Name="NSFileHandleConnectionAcceptedEventArgs" Kind="Class" />
      <Type Name="NSFileHandleReadEventArgs" Kind="Class" />
      <Type Name="NSFileManager" Kind="Class" />
      <Type Name="NSFileManager+Notifications" Kind="Class" />
      <Type Name="NSFileManagerDelegate" Kind="Class" />
      <Type Name="NSFileManagerDelegate_Extensions" Kind="Class" />
      <Type Name="NSFileManagerItemReplacementOptions" Kind="Enumeration" />
      <Type Name="NSFilePresenter" Kind="Class" />
      <Type Name="NSFilePresenter_Extensions" Kind="Class" />
      <Type Name="NSFilePresenterReacquirer" Kind="Delegate" />
      <Type Name="NSFileProtection" Kind="Enumeration" />
      <Type Name="NSFileSystemAttributes" Kind="Class" />
      <Type Name="NSFileType" Kind="Enumeration" />
      <Type Name="NSFileVersion" Kind="Class" />
      <Type Name="NSFileVersionAddingOptions" Kind="Enumeration" />
      <Type Name="NSFileVersionNonlocalVersionsCompletionHandler" Kind="Delegate" />
      <Type Name="NSFileVersionReplacingOptions" Kind="Enumeration" />
      <Type Name="NSFileWrapper" Kind="Class" />
      <Type Name="NSFileWrapperReadingOptions" Kind="Enumeration" />
      <Type Name="NSFileWrapperWritingOptions" Kind="Enumeration" />
      <Type Name="NSFormatter" Kind="Class" />
      <Type Name="NSFormattingContext" Kind="Enumeration" />
      <Type Name="NSFormattingUnitStyle" Kind="Enumeration" />
      <Type Name="NSHttpCookie" Kind="Class" />
      <Type Name="NSHttpCookieAcceptPolicy" Kind="Enumeration" />
      <Type Name="NSHttpCookieStorage" Kind="Class" />
      <Type Name="NSHttpCookieStorage+Notifications" Kind="Class" />
      <Type Name="NSHttpUrlResponse" Kind="Class" />
      <Type Name="NSIndexPath" Kind="Class" />
      <Type Name="NSIndexSet" Kind="Class" />
      <Type Name="NSInputStream" Kind="Class" />
      <Type Name="NSInvocation" Kind="Class" />
      <Type Name="NSItemDownloadingStatus" Kind="Enumeration" />
      <Type Name="NSItemProvider" Kind="Class" />
      <Type Name="NSItemProviderCompletionHandler" Kind="Delegate" />
      <Type Name="NSItemProviderErrorCode" Kind="Enumeration" />
      <Type Name="NSItemProviderLoadHandler" Kind="Delegate" />
      <Type Name="NSJavaScriptExtension" Kind="Class" />
      <Type Name="NSJsonReadingOptions" Kind="Enumeration" />
      <Type Name="NSJsonSerialization" Kind="Class" />
      <Type Name="NSJsonWritingOptions" Kind="Enumeration" />
      <Type Name="NSKeyedArchiver" Kind="Class" />
      <Type Name="NSKeyedArchiverDelegate" Kind="Class" />
      <Type Name="NSKeyedArchiverDelegate_Extensions" Kind="Class" />
      <Type Name="NSKeyedUnarchiver" Kind="Class" />
      <Type Name="NSKeyedUnarchiverDelegate" Kind="Class" />
      <Type Name="NSKeyedUnarchiverDelegate_Extensions" Kind="Class" />
      <Type Name="NSKeyValueChange" Kind="Enumeration" />
      <Type Name="NSKeyValueObservingOptions" Kind="Enumeration" />
      <Type Name="NSKeyValueSetMutationKind" Kind="Enumeration" />
      <Type Name="NSKeyValueSorting_NSMutableOrderedSet" Kind="Class" />
      <Type Name="NSKeyValueSorting_NSOrderedSet" Kind="Class" />
      <Type Name="NSLengthFormatter" Kind="Class" />
      <Type Name="NSLengthFormatterUnit" Kind="Enumeration" />
      <Type Name="NSLigatureType" Kind="Enumeration" />
      <Type Name="NSLinguisticTag" Kind="Class" />
      <Type Name="NSLinguisticTagger" Kind="Class" />
      <Type Name="NSLinguisticTaggerOptions" Kind="Enumeration" />
      <Type Name="NSLingusticEnumerator" Kind="Delegate" />
      <Type Name="NSLocale" Kind="Class" />
      <Type Name="NSLocale+Notifications" Kind="Class" />
      <Type Name="NSLocaleLanguageDirection" Kind="Enumeration" />
      <Type Name="NSLock" Kind="Class" />
      <Type Name="NSMachPort" Kind="Class" />
      <Type Name="NSMachPortDelegate" Kind="Class" />
      <Type Name="NSMachPortDelegate_Extensions" Kind="Class" />
      <Type Name="NSMachPortRights" Kind="Enumeration" />
      <Type Name="NSMassFormatter" Kind="Class" />
      <Type Name="NSMassFormatterUnit" Kind="Enumeration" />
      <Type Name="NSMatchEnumerator" Kind="Delegate" />
      <Type Name="NSMatchingFlags" Kind="Enumeration" />
      <Type Name="NSMatchingOptions" Kind="Enumeration" />
      <Type Name="NSMetadataItem" Kind="Class" />
      <Type Name="NSMetadataQuery" Kind="Class" />
      <Type Name="NSMetadataQuery+Notifications" Kind="Class" />
      <Type Name="NSMetadataQueryAttributeValueTuple" Kind="Class" />
      <Type Name="NSMetadataQueryDelegate" Kind="Class" />
      <Type Name="NSMetadataQueryDelegate_Extensions" Kind="Class" />
      <Type Name="NSMetadataQueryEnumerationCallback" Kind="Delegate" />
      <Type Name="NSMetadataQueryObject" Kind="Delegate" />
      <Type Name="NSMetadataQueryResultGroup" Kind="Class" />
      <Type Name="NSMetadataQueryValue" Kind="Delegate" />
      <Type Name="NSMethodSignature" Kind="Class" />
      <Type Name="NSMutableArray" Kind="Class" />
      <Type Name="NSMutableArray`1" DisplayName="NSMutableArray&lt;TValue&gt;" Kind="Class" />
      <Type Name="NSMutableAttributedString" Kind="Class" />
      <Type Name="NSMutableCharacterSet" Kind="Class" />
      <Type Name="NSMutableCopying" Kind="Class" />
      <Type Name="NSMutableData" Kind="Class" />
      <Type Name="NSMutableDictionary" Kind="Class" />
      <Type Name="NSMutableDictionary`2" DisplayName="NSMutableDictionary&lt;TKey,TValue&gt;" Kind="Class" />
      <Type Name="NSMutableIndexSet" Kind="Class" />
      <Type Name="NSMutableOrderedSet" Kind="Class" />
      <Type Name="NSMutableOrderedSet`1" DisplayName="NSMutableOrderedSet&lt;TKey&gt;" Kind="Class" />
      <Type Name="NSMutableSet" Kind="Class" />
      <Type Name="NSMutableSet`1" DisplayName="NSMutableSet&lt;TKey&gt;" Kind="Class" />
      <Type Name="NSMutableString" Kind="Class" />
      <Type Name="NSMutableUrlRequest" Kind="Class" />
      <Type Name="NSNetDomainEventArgs" Kind="Class" />
      <Type Name="NSNetService" Kind="Class" />
      <Type Name="NSNetServiceBrowser" Kind="Class" />
      <Type Name="NSNetServiceBrowserDelegate" Kind="Class" />
      <Type Name="NSNetServiceBrowserDelegate_Extensions" Kind="Class" />
      <Type Name="NSNetServiceConnectionEventArgs" Kind="Class" />
      <Type Name="NSNetServiceDataEventArgs" Kind="Class" />
      <Type Name="NSNetServiceDelegate" Kind="Class" />
      <Type Name="NSNetServiceDelegate_Extensions" Kind="Class" />
      <Type Name="NSNetServiceErrorEventArgs" Kind="Class" />
      <Type Name="NSNetServiceEventArgs" Kind="Class" />
      <Type Name="NSNetServiceOptions" Kind="Enumeration" />
      <Type Name="NSNetServicesStatus" Kind="Enumeration" />
      <Type Name="NSNotification" Kind="Class" />
      <Type Name="NSNotificationCenter" Kind="Class" />
      <Type Name="NSNotificationCoalescing" Kind="Enumeration" />
      <Type Name="NSNotificationEventArgs" Kind="Class" />
      <Type Name="NSNotificationQueue" Kind="Class" />
      <Type Name="NSNull" Kind="Class" />
      <Type Name="NSNumber" Kind="Class" />
      <Type Name="NSNumberFormatter" Kind="Class" />
      <Type Name="NSNumberFormatterBehavior" Kind="Enumeration" />
      <Type Name="NSNumberFormatterPadPosition" Kind="Enumeration" />
      <Type Name="NSNumberFormatterRoundingMode" Kind="Enumeration" />
      <Type Name="NSNumberFormatterStyle" Kind="Enumeration" />
      <Type Name="NSObject" Kind="Class" />
      <Type Name="NSObjectEventArgs" Kind="Class" />
      <Type Name="NSObjectFlag" Kind="Class" />
      <Type Name="NSObjectProtocol_Extensions" Kind="Class" />
      <Type Name="NSObservedChange" Kind="Class" />
      <Type Name="NSOperatingSystemVersion" Kind="Structure" />
      <Type Name="NSOperation" Kind="Class" />
      <Type Name="NSOperationQueue" Kind="Class" />
      <Type Name="NSOperationQueuePriority" Kind="Enumeration" />
      <Type Name="NSOrderedSet" Kind="Class" />
      <Type Name="NSOrderedSet`1" DisplayName="NSOrderedSet&lt;TKey&gt;" Kind="Class" />
      <Type Name="NSOrthography" Kind="Class" />
      <Type Name="NSOutputStream" Kind="Class" />
      <Type Name="NSPersonNameComponent" Kind="Class" />
      <Type Name="NSPersonNameComponents" Kind="Class" />
      <Type Name="NSPersonNameComponentsFormatter" Kind="Class" />
      <Type Name="NSPersonNameComponentsFormatterOptions" Kind="Enumeration" />
      <Type Name="NSPersonNameComponentsFormatterStyle" Kind="Enumeration" />
      <Type Name="NSPipe" Kind="Class" />
      <Type Name="NSPort" Kind="Class" />
      <Type Name="NSPortDelegate" Kind="Class" />
      <Type Name="NSPortDelegate_Extensions" Kind="Class" />
      <Type Name="NSPortMessage" Kind="Class" />
      <Type Name="NSPostingStyle" Kind="Enumeration" />
      <Type Name="NSPredicate" Kind="Class" />
      <Type Name="NSPredicateEvaluator" Kind="Delegate" />
      <Type Name="NSPredicateOperatorType" Kind="Enumeration" />
      <Type Name="NSPredicateSupport_NSArray" Kind="Class" />
      <Type Name="NSPredicateSupport_NSMutableArray" Kind="Class" />
      <Type Name="NSPredicateSupport_NSMutableOrderedSet" Kind="Class" />
      <Type Name="NSPredicateSupport_NSMutableSet" Kind="Class" />
      <Type Name="NSPredicateSupport_NSOrderedSet" Kind="Class" />
      <Type Name="NSPredicateSupport_NSSet" Kind="Class" />
      <Type Name="NSProcessInfo" Kind="Class" />
      <Type Name="NSProcessInfo+Notifications" Kind="Class" />
      <Type Name="NSProgress" Kind="Class" />
      <Type Name="NSProgressReporting_Extensions" Kind="Class" />
      <Type Name="NSPropertyListFormat" Kind="Enumeration" />
      <Type Name="NSPropertyListMutabilityOptions" Kind="Enumeration" />
      <Type Name="NSPropertyListReadOptions" Kind="Enumeration" />
      <Type Name="NSPropertyListSerialization" Kind="Class" />
      <Type Name="NSPropertyListWriteOptions" Kind="Enumeration" />
      <Type Name="NSPurgeableData" Kind="Class" />
      <Type Name="NSQualityOfService" Kind="Enumeration" />
      <Type Name="NSRange" Kind="Structure" />
      <Type Name="NSRangeIterator" Kind="Delegate" />
      <Type Name="NSRecursiveLock" Kind="Class" />
      <Type Name="NSRegularExpression" Kind="Class" />
      <Type Name="NSRegularExpressionOptions" Kind="Enumeration" />
      <Type Name="NSRoundingMode" Kind="Enumeration" />
      <Type Name="NSRunLoop" Kind="Class" />
      <Type Name="NSRunLoopMode" Kind="Enumeration" />
      <Type Name="NSSearchPath" Kind="Class" />
      <Type Name="NSSearchPathDirectory" Kind="Enumeration" />
      <Type Name="NSSearchPathDomain" Kind="Enumeration" />
      <Type Name="NSSecureCoding" Kind="Class" />
      <Type Name="NSSet" Kind="Class" />
      <Type Name="NSSet`1" DisplayName="NSSet&lt;TKey&gt;" Kind="Class" />
      <Type Name="NSSetEnumerator" Kind="Delegate" />
      <Type Name="NSSortDescriptor" Kind="Class" />
      <Type Name="NSSortDescriptorSorting_NSMutableArray" Kind="Class" />
      <Type Name="NSSortOptions" Kind="Enumeration" />
      <Type Name="NSStream" Kind="Class" />
      <Type Name="NSStreamDelegate" Kind="Class" />
      <Type Name="NSStreamDelegate_Extensions" Kind="Class" />
      <Type Name="NSStreamEvent" Kind="Enumeration" />
      <Type Name="NSStreamEventArgs" Kind="Class" />
      <Type Name="NSStreamServiceType" Kind="Enumeration" />
      <Type Name="NSStreamSocketSecurityLevel" Kind="Enumeration" />
      <Type Name="NSStreamSocksOptions" Kind="Class" />
      <Type Name="NSStreamStatus" Kind="Enumeration" />
      <Type Name="NSString" Kind="Class" />
      <Type Name="NSStringCompareOptions" Kind="Enumeration" />
      <Type Name="NSStringDrawingContext" Kind="Class" />
      <Type Name="NSStringDrawingOptions" Kind="Enumeration" />
      <Type Name="NSStringEncoding" Kind="Enumeration" />
      <Type Name="NSStringTransform" Kind="Enumeration" />
      <Type Name="NSTextChecking" Kind="Class" />
      <Type Name="NSTextCheckingAddressComponents" Kind="Class" />
      <Type Name="NSTextCheckingResult" Kind="Class" />
      <Type Name="NSTextCheckingTransitComponents" Kind="Class" />
      <Type Name="NSTextCheckingType" Kind="Enumeration" />
      <Type Name="NSTextCheckingTypes" Kind="Enumeration" />
      <Type Name="NSTextWritingDirection" Kind="Enumeration" />
      <Type Name="NSThread" Kind="Class" />
      <Type Name="NSTimer" Kind="Class" />
      <Type Name="NSTimeZone" Kind="Class" />
      <Type Name="NSTimeZoneNameStyle" Kind="Enumeration" />
      <Type Name="NSUbiquitousKeyValueStore" Kind="Class" />
      <Type Name="NSUbiquitousKeyValueStore+Notifications" Kind="Class" />
      <Type Name="NSUbiquitousKeyValueStoreChangeEventArgs" Kind="Class" />
      <Type Name="NSUbiquitousKeyValueStoreChangeReason" Kind="Enumeration" />
      <Type Name="NSUnderlineStyle" Kind="Enumeration" />
      <Type Name="NSUndoManager" Kind="Class" />
      <Type Name="NSUndoManager+Notifications" Kind="Class" />
      <Type Name="NSUndoManagerCloseUndoGroupEventArgs" Kind="Class" />
      <Type Name="NSUrl" Kind="Class" />
      <Type Name="NSUrl_PromisedItems" Kind="Class" />
      <Type Name="NSUrlAsyncResult" Kind="Class" />
      <Type Name="NSUrlAuthenticationChallenge" Kind="Class" />
      <Type Name="NSURLAuthenticationChallengeSender" Kind="Class" />
      <Type Name="NSURLAuthenticationChallengeSender_Extensions" Kind="Class" />
      <Type Name="NSUrlBookmarkCreationOptions" Kind="Enumeration" />
      <Type Name="NSUrlBookmarkResolutionOptions" Kind="Enumeration" />
      <Type Name="NSUrlCache" Kind="Class" />
      <Type Name="NSUrlCacheStoragePolicy" Kind="Enumeration" />
      <Type Name="NSUrlComponents" Kind="Class" />
      <Type Name="NSUrlConnection" Kind="Class" />
      <Type Name="NSUrlConnectionDataDelegate" Kind="Class" />
      <Type Name="NSUrlConnectionDataDelegate_Extensions" Kind="Class" />
      <Type Name="NSUrlConnectionDataResponse" Kind="Delegate" />
      <Type Name="NSUrlConnectionDelegate" Kind="Class" />
      <Type Name="NSUrlConnectionDelegate_Extensions" Kind="Class" />
      <Type Name="NSUrlConnectionDownloadDelegate" Kind="Class" />
      <Type Name="NSUrlConnectionDownloadDelegate_Extensions" Kind="Class" />
      <Type Name="NSUrlCredential" Kind="Class" />
      <Type Name="NSUrlCredentialPersistence" Kind="Enumeration" />
      <Type Name="NSUrlCredentialStorage" Kind="Class" />
      <Type Name="NSUrlCredentialStorage+Notifications" Kind="Class" />
      <Type Name="NSUrlDownloadSessionResponse" Kind="Delegate" />
      <Type Name="NSUrlError" Kind="Enumeration" />
      <Type Name="NSUrlErrorCancelledReason" Kind="Enumeration" />
      <Type Name="NSUrlProtectionSpace" Kind="Class" />
      <Type Name="NSUrlProtocol" Kind="Class" />
      <Type Name="NSUrlQueryItem" Kind="Class" />
      <Type Name="NSUrlRelationship" Kind="Enumeration" />
      <Type Name="NSURLRelationship" Kind="Enumeration" />
      <Type Name="NSUrlRequest" Kind="Class" />
      <Type Name="NSUrlRequestCachePolicy" Kind="Enumeration" />
      <Type Name="NSUrlRequestNetworkServiceType" Kind="Enumeration" />
      <Type Name="NSUrlResponse" Kind="Class" />
      <Type Name="NSUrlSession" Kind="Class" />
      <Type Name="NSUrlSessionActiveTasks" Kind="Class" />
      <Type Name="NSUrlSessionActiveTasks2" Kind="Class" />
      <Type Name="NSUrlSessionAllPendingTasks" Kind="Delegate" />
      <Type Name="NSUrlSessionAuthChallengeDisposition" Kind="Enumeration" />
      <Type Name="NSUrlSessionCombinedTasks" Kind="Class" />
      <Type Name="NSUrlSessionConfiguration" Kind="Class" />
      <Type Name="NSUrlSessionDataDelegate" Kind="Class" />
      <Type Name="NSUrlSessionDataDelegate_Extensions" Kind="Class" />
      <Type Name="NSUrlSessionDataRead" Kind="Delegate" />
      <Type Name="NSUrlSessionDataTask" Kind="Class" />
      <Type Name="NSUrlSessionDataTaskRequest" Kind="Class" />
      <Type Name="NSUrlSessionDelegate" Kind="Class" />
      <Type Name="NSUrlSessionDelegate_Extensions" Kind="Class" />
      <Type Name="NSUrlSessionDownloadDelegate" Kind="Class" />
      <Type Name="NSUrlSessionDownloadDelegate_Extensions" Kind="Class" />
      <Type Name="NSUrlSessionDownloadTask" Kind="Class" />
      <Type Name="NSUrlSessionDownloadTaskRequest" Kind="Class" />
      <Type Name="NSUrlSessionPendingTasks" Kind="Delegate" />
      <Type Name="NSUrlSessionPendingTasks2" Kind="Delegate" />
      <Type Name="NSUrlSessionResponse" Kind="Delegate" />
      <Type Name="NSUrlSessionResponseDisposition" Kind="Enumeration" />
      <Type Name="NSUrlSessionStreamDataRead" Kind="Class" />
      <Type Name="NSUrlSessionStreamDelegate" Kind="Class" />
      <Type Name="NSUrlSessionStreamDelegate_Extensions" Kind="Class" />
      <Type Name="NSUrlSessionStreamTask" Kind="Class" />
      <Type Name="NSUrlSessionTask" Kind="Class" />
      <Type Name="NSUrlSessionTaskDelegate" Kind="Class" />
      <Type Name="NSUrlSessionTaskDelegate_Extensions" Kind="Class" />
      <Type Name="NSUrlSessionTaskPriority" Kind="Class" />
      <Type Name="NSURLSessionTaskPriority" Kind="Class" />
      <Type Name="NSUrlSessionTaskState" Kind="Enumeration" />
      <Type Name="NSUrlSessionUploadTask" Kind="Class" />
      <Type Name="NSUrlUtilities_NSCharacterSet" Kind="Class" />
      <Type Name="NSUrlUtilities_NSString" Kind="Class" />
      <Type Name="NSURLUtilities_NSString" Kind="Class" />
      <Type Name="NSUserActivity" Kind="Class" />
      <Type Name="NSUserActivityContinuation" Kind="Class" />
      <Type Name="NSUserActivityDelegate" Kind="Class" />
      <Type Name="NSUserActivityDelegate_Extensions" Kind="Class" />
      <Type Name="NSUserActivityType" Kind="Class" />
      <Type Name="NSUserDefaults" Kind="Class" />
      <Type Name="NSUserDefaults+Notifications" Kind="Class" />
      <Type Name="NSUserDefaultsType" Kind="Enumeration" />
      <Type Name="NSUuid" Kind="Class" />
      <Type Name="NSValue" Kind="Class" />
      <Type Name="NSValueTransformer" Kind="Class" />
      <Type Name="NSValueTransformer+Notifications" Kind="Class" />
      <Type Name="NSVolumeEnumerationOptions" Kind="Enumeration" />
      <Type Name="NSWritingDirection" Kind="Enumeration" />
      <Type Name="NSZone" Kind="Class" />
      <Type Name="OutletAttribute" Kind="Class" />
      <Type Name="PreserveAttribute" Kind="Class" />
      <Type Name="ProtocolAttribute" Kind="Class" />
      <Type Name="ProtocolMemberAttribute" Kind="Class" />
      <Type Name="RegisterAttribute" Kind="Class" />
      <Type Name="You_Should_Not_Call_base_In_This_Method" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.GameController">
      <Type Name="GCController" Kind="Class" />
      <Type Name="GCController+Notifications" Kind="Class" />
      <Type Name="GCControllerAxisInput" Kind="Class" />
      <Type Name="GCControllerAxisValueChangedHandler" Kind="Delegate" />
      <Type Name="GCControllerButtonInput" Kind="Class" />
      <Type Name="GCControllerButtonValueChanged" Kind="Delegate" />
      <Type Name="GCControllerDirectionPad" Kind="Class" />
      <Type Name="GCControllerDirectionPadValueChangedHandler" Kind="Delegate" />
      <Type Name="GCControllerElement" Kind="Class" />
      <Type Name="GCControllerPlayerIndex" Kind="Enumeration" />
      <Type Name="GCEventViewController" Kind="Class" />
      <Type Name="GCExtendedGamepad" Kind="Class" />
      <Type Name="GCExtendedGamepadSnapshot" Kind="Class" />
      <Type Name="GCExtendedGamepadSnapShotDataV100" Kind="Structure" />
      <Type Name="GCExtendedGamepadValueChangedHandler" Kind="Delegate" />
      <Type Name="GCGamepad" Kind="Class" />
      <Type Name="GCGamepadSnapshot" Kind="Class" />
      <Type Name="GCGamepadSnapShotDataV100" Kind="Structure" />
      <Type Name="GCGamepadValueChangedHandler" Kind="Delegate" />
      <Type Name="GCMicroGamepad" Kind="Class" />
      <Type Name="GCMicroGamepadSnapshot" Kind="Class" />
      <Type Name="GCMicroGamepadSnapShotDataV100" Kind="Structure" />
      <Type Name="GCMicroGamepadValueChangedHandler" Kind="Delegate" />
      <Type Name="GCMotion" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.GameKit">
      <Type Name="GKAchievement" Kind="Class" />
      <Type Name="GKAchievementChallenge" Kind="Class" />
      <Type Name="GKAchievementDescription" Kind="Class" />
      <Type Name="GKAchievementDescriptionHandler" Kind="Delegate" />
      <Type Name="GKAchievementViewController" Kind="Class" />
      <Type Name="GKAchievementViewController+GKAchievementViewControllerAppearance" Kind="Class" />
      <Type Name="GKAchievementViewControllerDelegate" Kind="Class" />
      <Type Name="GKBasePlayer" Kind="Class" />
      <Type Name="GKCategoryHandler" Kind="Delegate" />
      <Type Name="GKCategoryResult" Kind="Class" />
      <Type Name="GKChallenge" Kind="Class" />
      <Type Name="GKChallengeComposeHandler" Kind="Delegate" />
      <Type Name="GKChallengeEventHandler" Kind="Class" />
      <Type Name="GKChallengeEventHandlerDelegate" Kind="Class" />
      <Type Name="GKChallengeEventHandlerDelegate_Extensions" Kind="Class" />
      <Type Name="GKChallengeListener" Kind="Class" />
      <Type Name="GKChallengeListener_Extensions" Kind="Class" />
      <Type Name="GKChallengePredicate" Kind="Delegate" />
      <Type Name="GKChallengeState" Kind="Enumeration" />
      <Type Name="GKCloudPlayer" Kind="Class" />
      <Type Name="GKCompletionHandler" Kind="Delegate" />
      <Type Name="GKConnectionState" Kind="Enumeration" />
      <Type Name="GKDataEventArgs" Kind="Class" />
      <Type Name="GKDataReceivedEventArgs" Kind="Class" />
      <Type Name="GKDataReceivedForRecipientEventArgs" Kind="Class" />
      <Type Name="GKError" Kind="Enumeration" />
      <Type Name="GKErrorEventArgs" Kind="Class" />
      <Type Name="GKErrorExtensions" Kind="Class" />
      <Type Name="GKFriendRequestComposeViewController" Kind="Class" />
      <Type Name="GKFriendRequestComposeViewController+GKFriendRequestComposeViewControllerAppearance" Kind="Class" />
      <Type Name="GKFriendRequestComposeViewControllerDelegate" Kind="Class" />
      <Type Name="GKFriendsHandler" Kind="Delegate" />
      <Type Name="GKGameCenterControllerDelegate" Kind="Class" />
      <Type Name="GKGameCenterViewController" Kind="Class" />
      <Type Name="GKGameCenterViewControllerState" Kind="Enumeration" />
      <Type Name="GKGameSession" Kind="Class" />
      <Type Name="GKGameSessionErrorCode" Kind="Enumeration" />
      <Type Name="GKGameSessionEventListener_Extensions" Kind="Class" />
      <Type Name="GKIdentityVerificationSignatureHandler" Kind="Delegate" />
      <Type Name="GKImageLoadedHandler" Kind="Delegate" />
      <Type Name="GKInvite" Kind="Class" />
      <Type Name="GKInviteeResponse" Kind="Enumeration" />
      <Type Name="GKInviteEventListener" Kind="Class" />
      <Type Name="GKInviteEventListener_Extensions" Kind="Class" />
      <Type Name="GKInviteHandler" Kind="Delegate" />
      <Type Name="GKInviteRecipientResponse" Kind="Enumeration" />
      <Type Name="GKLeaderboard" Kind="Class" />
      <Type Name="GKLeaderboardPlayerScope" Kind="Enumeration" />
      <Type Name="GKLeaderboardSet" Kind="Class" />
      <Type Name="GKLeaderboardSetsHandler" Kind="Delegate" />
      <Type Name="GKLeaderboardsHandler" Kind="Delegate" />
      <Type Name="GKLeaderboardTimeScope" Kind="Enumeration" />
      <Type Name="GKLeaderboardViewController" Kind="Class" />
      <Type Name="GKLeaderboardViewController+GKLeaderboardViewControllerAppearance" Kind="Class" />
      <Type Name="GKLeaderboardViewControllerDelegate" Kind="Class" />
      <Type Name="GKLocalPlayer" Kind="Class" />
      <Type Name="GKLocalPlayer+Notifications" Kind="Class" />
      <Type Name="GKLocalPlayerListener" Kind="Class" />
      <Type Name="GKMatch" Kind="Class" />
      <Type Name="GKMatchConnectionChangedEventArgs" Kind="Class" />
      <Type Name="GKMatchDelegate" Kind="Class" />
      <Type Name="GKMatchDelegate_Extensions" Kind="Class" />
      <Type Name="GKMatchEventArgs" Kind="Class" />
      <Type Name="GKMatchmaker" Kind="Class" />
      <Type Name="GKMatchmakerViewController" Kind="Class" />
      <Type Name="GKMatchmakerViewControllerDelegate" Kind="Class" />
      <Type Name="GKMatchmakerViewControllerDelegate_Extensions" Kind="Class" />
      <Type Name="GKMatchmakingPlayerEventArgs" Kind="Class" />
      <Type Name="GKMatchmakingPlayersEventArgs" Kind="Class" />
      <Type Name="GKMatchReceivedDataFromRemotePlayerEventArgs" Kind="Class" />
      <Type Name="GKMatchReinvitation" Kind="Delegate" />
      <Type Name="GKMatchReinvitationForDisconnectedPlayer" Kind="Delegate" />
      <Type Name="GKMatchRequest" Kind="Class" />
      <Type Name="GKMatchSendDataMode" Kind="Enumeration" />
      <Type Name="GKMatchType" Kind="Enumeration" />
      <Type Name="GKNotificationBanner" Kind="Class" />
      <Type Name="GKNotificationMatch" Kind="Delegate" />
      <Type Name="GKPeerChangedStateEventArgs" Kind="Class" />
      <Type Name="GKPeerConnectionEventArgs" Kind="Class" />
      <Type Name="GKPeerConnectionState" Kind="Enumeration" />
      <Type Name="GKPeerPickerConnectionType" Kind="Enumeration" />
      <Type Name="GKPeerPickerController" Kind="Class" />
      <Type Name="GKPeerPickerControllerDelegate" Kind="Class" />
      <Type Name="GKPeerPickerControllerDelegate_Extensions" Kind="Class" />
      <Type Name="GKPhotoSize" Kind="Enumeration" />
      <Type Name="GKPlayer" Kind="Class" />
      <Type Name="GKPlayer+Notifications" Kind="Class" />
      <Type Name="GKPlayerConnectionState" Kind="Enumeration" />
      <Type Name="GKPlayerEventArgs" Kind="Class" />
      <Type Name="GKPlayerPhotoLoaded" Kind="Delegate" />
      <Type Name="GKPlayersEventArgs" Kind="Class" />
      <Type Name="GKPlayersHandler" Kind="Delegate" />
      <Type Name="GKPlayerStateUpdateHandler" Kind="Delegate" />
      <Type Name="GKQueryHandler" Kind="Delegate" />
      <Type Name="GKSavedGame" Kind="Class" />
      <Type Name="GKSavedGameListener" Kind="Class" />
      <Type Name="GKSavedGameListener_Extensions" Kind="Class" />
      <Type Name="GKScore" Kind="Class" />
      <Type Name="GKScoreChallenge" Kind="Class" />
      <Type Name="GKScoresLoadedHandler" Kind="Delegate" />
      <Type Name="GKSendDataMode" Kind="Enumeration" />
      <Type Name="GKSession" Kind="Class" />
      <Type Name="GKSessionDelegate" Kind="Class" />
      <Type Name="GKSessionDelegate_Extensions" Kind="Class" />
      <Type Name="GKSessionMode" Kind="Enumeration" />
      <Type Name="GKStateEventArgs" Kind="Class" />
      <Type Name="GKTransportType" Kind="Enumeration" />
      <Type Name="GKTurnBasedEventHandler" Kind="Class" />
      <Type Name="GKTurnBasedEventHandlerDelegate" Kind="Class" />
      <Type Name="GKTurnBasedEventHandlerDelegate_Extensions" Kind="Class" />
      <Type Name="GKTurnBasedEventListener" Kind="Class" />
      <Type Name="GKTurnBasedEventListener_Extensions" Kind="Class" />
      <Type Name="GKTurnBasedExchange" Kind="Class" />
      <Type Name="GKTurnBasedExchangeReply" Kind="Class" />
      <Type Name="GKTurnBasedExchangeStatus" Kind="Enumeration" />
      <Type Name="GKTurnBasedMatch" Kind="Class" />
      <Type Name="GKTurnBasedMatchData" Kind="Delegate" />
      <Type Name="GKTurnBasedMatchesRequest" Kind="Delegate" />
      <Type Name="GKTurnBasedMatchmakerViewController" Kind="Class" />
      <Type Name="GKTurnBasedMatchmakerViewController+GKTurnBasedMatchmakerViewControllerAppearance" Kind="Class" />
      <Type Name="GKTurnBasedMatchmakerViewControllerDelegate" Kind="Class" />
      <Type Name="GKTurnBasedMatchOutcome" Kind="Enumeration" />
      <Type Name="GKTurnBasedMatchRequest" Kind="Delegate" />
      <Type Name="GKTurnBasedMatchStatus" Kind="Enumeration" />
      <Type Name="GKTurnBasedParticipant" Kind="Class" />
      <Type Name="GKTurnBasedParticipantStatus" Kind="Enumeration" />
      <Type Name="GKVoiceChat" Kind="Class" />
      <Type Name="GKVoiceChatClient" Kind="Class" />
      <Type Name="GKVoiceChatClient_Extensions" Kind="Class" />
      <Type Name="GKVoiceChatPlayerState" Kind="Enumeration" />
      <Type Name="GKVoiceChatService" Kind="Class" />
      <Type Name="GKVoiceChatServiceError" Kind="Enumeration" />
      <Type Name="GKVoiceChatServiceErrorExtensions" Kind="Class" />
      <Type Name="IGKAchievementViewControllerDelegate" Kind="Interface" />
      <Type Name="IGKChallengeEventHandlerDelegate" Kind="Interface" />
      <Type Name="IGKChallengeListener" Kind="Interface" />
      <Type Name="IGKFriendRequestComposeViewControllerDelegate" Kind="Interface" />
      <Type Name="IGKGameCenterControllerDelegate" Kind="Interface" />
      <Type Name="IGKGameSessionEventListener" Kind="Interface" />
      <Type Name="IGKInviteEventListener" Kind="Interface" />
      <Type Name="IGKLeaderboardViewControllerDelegate" Kind="Interface" />
      <Type Name="IGKLocalPlayerListener" Kind="Interface" />
      <Type Name="IGKMatchDelegate" Kind="Interface" />
      <Type Name="IGKMatchmakerViewControllerDelegate" Kind="Interface" />
      <Type Name="IGKPeerPickerControllerDelegate" Kind="Interface" />
      <Type Name="IGKSavedGameListener" Kind="Interface" />
      <Type Name="IGKSessionDelegate" Kind="Interface" />
      <Type Name="IGKTurnBasedEventHandlerDelegate" Kind="Interface" />
      <Type Name="IGKTurnBasedEventListener" Kind="Interface" />
      <Type Name="IGKTurnBasedMatchmakerViewControllerDelegate" Kind="Interface" />
      <Type Name="IGKVoiceChatClient" Kind="Interface" />
    </Namespace>
    <Namespace Name="MonoTouch.GameplayKit">
      <Type Name="GKAgent" Kind="Class" />
      <Type Name="GKAgent2D" Kind="Class" />
      <Type Name="GKAgentDelegate" Kind="Class" />
      <Type Name="GKAgentDelegate_Extensions" Kind="Class" />
      <Type Name="GKARC4RandomSource" Kind="Class" />
      <Type Name="GKBehavior" Kind="Class" />
      <Type Name="GKCircleObstacle" Kind="Class" />
      <Type Name="GKComponent" Kind="Class" />
      <Type Name="GKComponentSystem`1" DisplayName="GKComponentSystem&lt;TComponent&gt;" Kind="Class" />
      <Type Name="GKEntity" Kind="Class" />
      <Type Name="GKGameModel" Kind="Class" />
      <Type Name="GKGameModel_Extensions" Kind="Class" />
      <Type Name="GKGameModelPlayer_Extensions" Kind="Class" />
      <Type Name="GKGaussianDistribution" Kind="Class" />
      <Type Name="GKGoal" Kind="Class" />
      <Type Name="GKGraph" Kind="Class" />
      <Type Name="GKGraphNode" Kind="Class" />
      <Type Name="GKGraphNode2D" Kind="Class" />
      <Type Name="GKGridGraph" Kind="Class" />
      <Type Name="GKGridGraphNode" Kind="Class" />
      <Type Name="GKHybridStrategist" Kind="Class" />
      <Type Name="GKLinearCongruentialRandomSource" Kind="Class" />
      <Type Name="GKMersenneTwisterRandomSource" Kind="Class" />
      <Type Name="GKMinMaxStrategist" Kind="Class" />
      <Type Name="GKMonteCarloStrategist" Kind="Class" />
      <Type Name="GKNSPredicateRule" Kind="Class" />
      <Type Name="GKObstacle" Kind="Class" />
      <Type Name="GKObstacleGraph" Kind="Class" />
      <Type Name="GKPath" Kind="Class" />
      <Type Name="GKPolygonObstacle" Kind="Class" />
      <Type Name="GKQuadTree" Kind="Class" />
      <Type Name="GKQuadTreeNode" Kind="Class" />
      <Type Name="GKRandomDistribution" Kind="Class" />
      <Type Name="GKRandomSource" Kind="Class" />
      <Type Name="GKRule" Kind="Class" />
      <Type Name="GKRuleSystem" Kind="Class" />
      <Type Name="GKShuffledDistribution" Kind="Class" />
      <Type Name="GKState" Kind="Class" />
      <Type Name="GKStateMachine" Kind="Class" />
      <Type Name="IGKAgentDelegate" Kind="Interface" />
      <Type Name="IGKGameModel" Kind="Interface" />
      <Type Name="IGKGameModelPlayer" Kind="Interface" />
      <Type Name="IGKGameModelUpdate" Kind="Interface" />
      <Type Name="IGKRandom" Kind="Interface" />
      <Type Name="IGKStrategist" Kind="Interface" />
    </Namespace>
    <Namespace Name="MonoTouch.GLKit">
      <Type Name="GLKBaseEffect" Kind="Class" />
      <Type Name="GLKEffectProperty" Kind="Class" />
      <Type Name="GLKEffectPropertyFog" Kind="Class" />
      <Type Name="GLKEffectPropertyLight" Kind="Class" />
      <Type Name="GLKEffectPropertyMaterial" Kind="Class" />
      <Type Name="GLKEffectPropertyTexture" Kind="Class" />
      <Type Name="GLKEffectPropertyTransform" Kind="Class" />
      <Type Name="GLKFogMode" Kind="Enumeration" />
      <Type Name="GLKLightingType" Kind="Enumeration" />
      <Type Name="GLKMesh" Kind="Class" />
      <Type Name="GLKMeshBuffer" Kind="Class" />
      <Type Name="GLKMeshBufferAllocator" Kind="Class" />
      <Type Name="GLKModelError" Kind="Class" />
      <Type Name="GLKNamedEffect" Kind="Class" />
      <Type Name="GLKReflectionMapEffect" Kind="Class" />
      <Type Name="GLKSkyboxEffect" Kind="Class" />
      <Type Name="GLKSubmesh" Kind="Class" />
      <Type Name="GLKTextureEnvMode" Kind="Enumeration" />
      <Type Name="GLKTextureInfo" Kind="Class" />
      <Type Name="GLKTextureInfoAlphaState" Kind="Enumeration" />
      <Type Name="GLKTextureInfoOrigin" Kind="Enumeration" />
      <Type Name="GLKTextureLoader" Kind="Class" />
      <Type Name="GLKTextureLoaderCallback" Kind="Delegate" />
      <Type Name="GLKTextureLoaderError" Kind="Enumeration" />
      <Type Name="GLKTextureOperations" Kind="Class" />
      <Type Name="GLKTextureTarget" Kind="Enumeration" />
      <Type Name="GLKVertexAttrib" Kind="Enumeration" />
      <Type Name="GLKVertexAttributeParameters" Kind="Structure" />
      <Type Name="GLKView" Kind="Class" />
      <Type Name="GLKView+GLKViewAppearance" Kind="Class" />
      <Type Name="GLKViewController" Kind="Class" />
      <Type Name="GLKViewControllerDelegate" Kind="Class" />
      <Type Name="GLKViewControllerDelegate_Extensions" Kind="Class" />
      <Type Name="GLKViewDelegate" Kind="Class" />
      <Type Name="GLKViewDrawableColorFormat" Kind="Enumeration" />
      <Type Name="GLKViewDrawableDepthFormat" Kind="Enumeration" />
      <Type Name="GLKViewDrawableMultisample" Kind="Enumeration" />
      <Type Name="GLKViewDrawableStencilFormat" Kind="Enumeration" />
      <Type Name="GLKViewDrawEventArgs" Kind="Class" />
      <Type Name="IGLKNamedEffect" Kind="Interface" />
      <Type Name="IGLKViewControllerDelegate" Kind="Interface" />
      <Type Name="IGLKViewDelegate" Kind="Interface" />
    </Namespace>
    <Namespace Name="MonoTouch.HealthKit">
      <Type Name="HKActivitySummary" Kind="Class" />
      <Type Name="HKActivitySummaryQuery" Kind="Class" />
      <Type Name="HKActivitySummaryType" Kind="Class" />
      <Type Name="HKAnchoredObjectQuery" Kind="Class" />
      <Type Name="HKAnchoredObjectResultHandler" Kind="Delegate" />
      <Type Name="HKAnchoredObjectResultHandler2" Kind="Delegate" />
      <Type Name="HKAnchoredObjectUpdateHandler" Kind="Delegate" />
      <Type Name="HKAuthorizationStatus" Kind="Enumeration" />
      <Type Name="HKBiologicalSex" Kind="Enumeration" />
      <Type Name="HKBiologicalSexObject" Kind="Class" />
      <Type Name="HKBloodType" Kind="Enumeration" />
      <Type Name="HKBloodTypeObject" Kind="Class" />
      <Type Name="HKBodyTemperatureSensorLocation" Kind="Enumeration" />
      <Type Name="HKCategorySample" Kind="Class" />
      <Type Name="HKCategoryType" Kind="Class" />
      <Type Name="HKCategoryTypeIdentifier" Kind="Enumeration" />
      <Type Name="HKCategoryTypeIdentifierKey" Kind="Class" />
      <Type Name="HKCategoryValue" Kind="Enumeration" />
      <Type Name="HKCategoryValueAppleStandHour" Kind="Enumeration" />
      <Type Name="HKCategoryValueCervicalMucusQuality" Kind="Enumeration" />
      <Type Name="HKCategoryValueMenstrualFlow" Kind="Enumeration" />
      <Type Name="HKCategoryValueOvulationTestResult" Kind="Enumeration" />
      <Type Name="HKCategoryValueSleepAnalysis" Kind="Enumeration" />
      <Type Name="HKCharacteristicType" Kind="Class" />
      <Type Name="HKCharacteristicTypeIdentifier" Kind="Enumeration" />
      <Type Name="HKCharacteristicTypeIdentifierKey" Kind="Class" />
      <Type Name="HKCorrelation" Kind="Class" />
      <Type Name="HKCorrelationQuery" Kind="Class" />
      <Type Name="HKCorrelationQueryResultHandler" Kind="Delegate" />
      <Type Name="HKCorrelationType" Kind="Class" />
      <Type Name="HKCorrelationTypeKey" Kind="Class" />
      <Type Name="HKDeletedObject" Kind="Class" />
      <Type Name="HKDevice" Kind="Class" />
      <Type Name="HKDevicePropertyKey" Kind="Class" />
      <Type Name="HKErrorCode" Kind="Enumeration" />
      <Type Name="HKErrorCodeExtensions" Kind="Class" />
      <Type Name="HKFitzpatrickSkinType" Kind="Enumeration" />
      <Type Name="HKFitzpatrickSkinTypeObject" Kind="Class" />
      <Type Name="HKHealthStore" Kind="Class" />
      <Type Name="HKHealthStore+Notifications" Kind="Class" />
      <Type Name="HKHeartRateSensorLocation" Kind="Enumeration" />
      <Type Name="HKMetadata" Kind="Class" />
      <Type Name="HKMetadataKey" Kind="Class" />
      <Type Name="HKMetricPrefix" Kind="Enumeration" />
      <Type Name="HKObject" Kind="Class" />
      <Type Name="HKObjectType" Kind="Class" />
      <Type Name="HKObserverQuery" Kind="Class" />
      <Type Name="HKObserverQueryUpdateHandler" Kind="Delegate" />
      <Type Name="HKPredicateKeyPath" Kind="Class" />
      <Type Name="HKQuantity" Kind="Class" />
      <Type Name="HKQuantityAggregationStyle" Kind="Enumeration" />
      <Type Name="HKQuantitySample" Kind="Class" />
      <Type Name="HKQuantityType" Kind="Class" />
      <Type Name="HKQuantityTypeIdentifier" Kind="Enumeration" />
      <Type Name="HKQuantityTypeIdentifierKey" Kind="Class" />
      <Type Name="HKQuery" Kind="Class" />
      <Type Name="HKQueryAnchor" Kind="Class" />
      <Type Name="HKQueryOptions" Kind="Enumeration" />
      <Type Name="HKSample" Kind="Class" />
      <Type Name="HKSampleQuery" Kind="Class" />
      <Type Name="HKSampleQueryResultsHandler" Kind="Delegate" />
      <Type Name="HKSampleType" Kind="Class" />
      <Type Name="HKSource" Kind="Class" />
      <Type Name="HKSourceQuery" Kind="Class" />
      <Type Name="HKSourceQueryCompletionHandler" Kind="Delegate" />
      <Type Name="HKSourceRevision" Kind="Class" />
      <Type Name="HKStatistics" Kind="Class" />
      <Type Name="HKStatisticsCollection" Kind="Class" />
      <Type Name="HKStatisticsCollectionEnumerator" Kind="Delegate" />
      <Type Name="HKStatisticsCollectionQuery" Kind="Class" />
      <Type Name="HKStatisticsCollectionQueryInitialResultsHandler" Kind="Delegate" />
      <Type Name="HKStatisticsCollectionQueryStatisticsUpdateHandler" Kind="Delegate" />
      <Type Name="HKStatisticsOptions" Kind="Enumeration" />
      <Type Name="HKStatisticsQuery" Kind="Class" />
      <Type Name="HKStatisticsQueryHandler" Kind="Delegate" />
      <Type Name="HKStoreSampleAddedCallback" Kind="Delegate" />
      <Type Name="HKUnit" Kind="Class" />
      <Type Name="HKUpdateFrequency" Kind="Enumeration" />
      <Type Name="HKWorkout" Kind="Class" />
      <Type Name="HKWorkoutActivityType" Kind="Enumeration" />
      <Type Name="HKWorkoutEvent" Kind="Class" />
      <Type Name="HKWorkoutEventType" Kind="Enumeration" />
      <Type Name="HKWorkoutType" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.HealthKitUI">
      <Type Name="HKActivityRingView" Kind="Class" />
      <Type Name="HKActivityRingView+HKActivityRingViewAppearance" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.HomeKit">
      <Type Name="HMAccessory" Kind="Class" />
      <Type Name="HMAccessoryBrowser" Kind="Class" />
      <Type Name="HMAccessoryBrowserDelegate" Kind="Class" />
      <Type Name="HMAccessoryBrowserDelegate_Extensions" Kind="Class" />
      <Type Name="HMAccessoryBrowserEventArgs" Kind="Class" />
      <Type Name="HMAccessoryCategory" Kind="Class" />
      <Type Name="HMAccessoryCategoryType" Kind="Enumeration" />
      <Type Name="HMAccessoryDelegate" Kind="Class" />
      <Type Name="HMAccessoryDelegate_Extensions" Kind="Class" />
      <Type Name="HMAccessoryProfile" Kind="Class" />
      <Type Name="HMAccessoryServiceUpdateCharacteristicEventArgs" Kind="Class" />
      <Type Name="HMAccessoryUpdateEventArgs" Kind="Class" />
      <Type Name="HMAction" Kind="Class" />
      <Type Name="HMActionSet" Kind="Class" />
      <Type Name="HMActionSetType" Kind="Enumeration" />
      <Type Name="HMCameraAudioControl" Kind="Class" />
      <Type Name="HMCameraAudioStreamSetting" Kind="Enumeration" />
      <Type Name="HMCameraControl" Kind="Class" />
      <Type Name="HMCameraProfile" Kind="Class" />
      <Type Name="HMCameraSettingsControl" Kind="Class" />
      <Type Name="HMCameraSnapshot" Kind="Class" />
      <Type Name="HMCameraSnapshotControl" Kind="Class" />
      <Type Name="HMCameraSnapshotControlDelegate" Kind="Class" />
      <Type Name="HMCameraSnapshotControlDelegate_Extensions" Kind="Class" />
      <Type Name="HMCameraSource" Kind="Class" />
      <Type Name="HMCameraStream" Kind="Class" />
      <Type Name="HMCameraStreamControl" Kind="Class" />
      <Type Name="HMCameraStreamControlDelegate" Kind="Class" />
      <Type Name="HMCameraStreamControlDelegate_Extensions" Kind="Class" />
      <Type Name="HMCameraStreamState" Kind="Enumeration" />
      <Type Name="HMCameraView" Kind="Class" />
      <Type Name="HMCameraView+HMCameraViewAppearance" Kind="Class" />
      <Type Name="HMCharacteristic" Kind="Class" />
      <Type Name="HMCharacteristicEvent" Kind="Class" />
      <Type Name="HMCharacteristicMetadata" Kind="Class" />
      <Type Name="HMCharacteristicMetadataFormat" Kind="Enumeration" />
      <Type Name="HMCharacteristicMetadataUnits" Kind="Enumeration" />
      <Type Name="HMCharacteristicProperties" Kind="Class" />
      <Type Name="HMCharacteristicType" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueAirParticulate" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueAirQuality" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueBatteryStatus" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueCarbonDioxideDetectionStatus" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueCarbonMonoxideDetectionStatus" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueChargingState" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueContactState" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueCurrentSecuritySystemState" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueDoorState" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueHeatingCooling" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueJammedStatus" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueLeakStatus" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueLockMechanism" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueLockMechanismState" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueOccupancyStatus" Kind="Enumeration" />
      <Type Name="HMCharacteristicValuePositionState" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueRotationDirection" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueSecuritySystemAlarmType" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueSmokeDetectionStatus" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueStatusFault" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueTamperedStatus" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueTargetSecuritySystemState" Kind="Enumeration" />
      <Type Name="HMCharacteristicValueTemperatureUnit" Kind="Enumeration" />
      <Type Name="HMCharacteristicWriteAction" Kind="Class" />
      <Type Name="HMError" Kind="Enumeration" />
      <Type Name="HMErrors" Kind="Class" />
      <Type Name="HMEvent" Kind="Class" />
      <Type Name="HMEventTrigger" Kind="Class" />
      <Type Name="HMHome" Kind="Class" />
      <Type Name="HMHomeAccessControl" Kind="Class" />
      <Type Name="HMHomeAccessoryEventArgs" Kind="Class" />
      <Type Name="HMHomeActionSetEventArgs" Kind="Class" />
      <Type Name="HMHomeDelegate" Kind="Class" />
      <Type Name="HMHomeDelegate_Extensions" Kind="Class" />
      <Type Name="HMHomeErrorAccessoryEventArgs" Kind="Class" />
      <Type Name="HMHomeManager" Kind="Class" />
      <Type Name="HMHomeManagerDelegate" Kind="Class" />
      <Type Name="HMHomeManagerDelegate_Extensions" Kind="Class" />
      <Type Name="HMHomeManagerEventArgs" Kind="Class" />
      <Type Name="HMHomeRoomAccessoryEventArgs" Kind="Class" />
      <Type Name="HMHomeRoomEventArgs" Kind="Class" />
      <Type Name="HMHomeRoomZoneEventArgs" Kind="Class" />
      <Type Name="HMHomeServiceGroupEventArgs" Kind="Class" />
      <Type Name="HMHomeServiceServiceGroupEventArgs" Kind="Class" />
      <Type Name="HMHomeTriggerEventArgs" Kind="Class" />
      <Type Name="HMHomeUserEventArgs" Kind="Class" />
      <Type Name="HMHomeZoneEventArgs" Kind="Class" />
      <Type Name="HMLocationEvent" Kind="Class" />
      <Type Name="HMRoom" Kind="Class" />
      <Type Name="HMService" Kind="Class" />
      <Type Name="HMServiceGroup" Kind="Class" />
      <Type Name="HMServiceType" Kind="Enumeration" />
      <Type Name="HMSignificantEvent" Kind="Enumeration" />
      <Type Name="HMTimerTrigger" Kind="Class" />
      <Type Name="HMTrigger" Kind="Class" />
      <Type Name="HMUser" Kind="Class" />
      <Type Name="HMZone" Kind="Class" />
      <Type Name="IHMAccessoryBrowserDelegate" Kind="Interface" />
      <Type Name="IHMAccessoryDelegate" Kind="Interface" />
      <Type Name="IHMCameraSnapshotControlDelegate" Kind="Interface" />
      <Type Name="IHMCameraStreamControlDelegate" Kind="Interface" />
      <Type Name="IHMHomeDelegate" Kind="Interface" />
      <Type Name="IHMHomeManagerDelegate" Kind="Interface" />
    </Namespace>
    <Namespace Name="MonoTouch.iAd">
      <Type Name="AdAction" Kind="Delegate" />
      <Type Name="ADAdType" Kind="Enumeration" />
      <Type Name="ADBannerView" Kind="Class" />
      <Type Name="ADBannerView+ADBannerViewAppearance" Kind="Class" />
      <Type Name="ADBannerViewDelegate" Kind="Class" />
      <Type Name="ADBannerViewDelegate_Extensions" Kind="Class" />
      <Type Name="ADClient" Kind="Class" />
      <Type Name="ADClientConversionDetailsResult" Kind="Class" />
      <Type Name="ADClientError" Kind="Enumeration" />
      <Type Name="ADClientErrorExtensions" Kind="Class" />
      <Type Name="ADConversionDetails" Kind="Delegate" />
      <Type Name="ADError" Kind="Enumeration" />
      <Type Name="AdErrorEventArgs" Kind="Class" />
      <Type Name="ADErrorEventArgs" Kind="Class" />
      <Type Name="ADErrorExtensions" Kind="Class" />
      <Type Name="ADInterstitialAd" Kind="Class" />
      <Type Name="ADInterstitialAdDelegate" Kind="Class" />
      <Type Name="ADInterstitialAdDelegate_Extensions" Kind="Class" />
      <Type Name="ADInterstitialPresentationPolicy" Kind="Enumeration" />
      <Type Name="ADPredicate" Kind="Delegate" />
      <Type Name="AttributedToiAdCompletionHandler" Kind="Delegate" />
      <Type Name="IAdAdditions" Kind="Class" />
      <Type Name="IADBannerViewDelegate" Kind="Interface" />
      <Type Name="IADInterstitialAdDelegate" Kind="Interface" />
      <Type Name="IAdPreroll" Kind="Class" />
      <Type Name="iAdPreroll_AVPlayerViewController" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.ImageIO">
      <Type Name="CGCopyImageSourceOptions" Kind="Class" />
      <Type Name="CGImageDestination" Kind="Class" />
      <Type Name="CGImageDestinationOptions" Kind="Class" />
      <Type Name="CGImageDestinationOptionsKeys" Kind="Class" />
      <Type Name="CGImageMetadata" Kind="Class" />
      <Type Name="CGImageMetadataEnumerateOptions" Kind="Class" />
      <Type Name="CGImageMetadataErrors" Kind="Enumeration" />
      <Type Name="CGImageMetadataErrorsExtensions" Kind="Class" />
      <Type Name="CGImageMetadataTag" Kind="Class" />
      <Type Name="CGImageMetadataTagBlock" Kind="Delegate" />
      <Type Name="CGImageMetadataTagNamespaces" Kind="Class" />
      <Type Name="CGImageMetadataTagPrefixes" Kind="Class" />
      <Type Name="CGImageMetadataType" Kind="Enumeration" />
      <Type Name="CGImageOptions" Kind="Class" />
      <Type Name="CGImageProperties" Kind="Class" />
      <Type Name="CGImagePropertyOrientation" Kind="Enumeration" />
      <Type Name="CGImagePropertyPngFilters" Kind="Enumeration" />
      <Type Name="CGImageSource" Kind="Class" />
      <Type Name="CGImageSourceStatus" Kind="Enumeration" />
      <Type Name="CGImageThumbnailOptions" Kind="Class" />
      <Type Name="CGMutableImageMetadata" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.JavaScriptCore">
      <Type Name="IJSExport" Kind="Interface" />
      <Type Name="JSClassAttributes" Kind="Enumeration" />
      <Type Name="JSContext" Kind="Class" />
      <Type Name="JSContextExceptionHandler" Kind="Delegate" />
      <Type Name="JSExport" Kind="Class" />
      <Type Name="JSManagedValue" Kind="Class" />
      <Type Name="JSPropertyAttributes" Kind="Enumeration" />
      <Type Name="JSPropertyDescriptorKeys" Kind="Class" />
      <Type Name="JSType" Kind="Enumeration" />
      <Type Name="JSValue" Kind="Class" />
      <Type Name="JSVirtualMachine" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.LocalAuthentication">
      <Type Name="LAAccessControlOperation" Kind="Enumeration" />
      <Type Name="LAContext" Kind="Class" />
      <Type Name="LAContextReplyHandler" Kind="Delegate" />
      <Type Name="LACredentialType" Kind="Enumeration" />
      <Type Name="LAPolicy" Kind="Enumeration" />
      <Type Name="LAStatus" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.MapKit">
      <Type Name="IMKAnnotation" Kind="Interface" />
      <Type Name="IMKLocalSearchCompleterDelegate" Kind="Interface" />
      <Type Name="IMKMapViewDelegate" Kind="Interface" />
      <Type Name="IMKOverlay" Kind="Interface" />
      <Type Name="IMKReverseGeocoderDelegate" Kind="Interface" />
      <Type Name="MKAnnotation" Kind="Class" />
      <Type Name="MKAnnotation_Extensions" Kind="Class" />
      <Type Name="MKAnnotationView" Kind="Class" />
      <Type Name="MKAnnotationView+MKAnnotationViewAppearance" Kind="Class" />
      <Type Name="MKAnnotationViewDragState" Kind="Enumeration" />
      <Type Name="MKAnnotationViewEventArgs" Kind="Class" />
      <Type Name="MKCircle" Kind="Class" />
      <Type Name="MKCircleRenderer" Kind="Class" />
      <Type Name="MKCircleView" Kind="Class" />
      <Type Name="MKCircleView+MKCircleViewAppearance" Kind="Class" />
      <Type Name="MKCoordinateRegion" Kind="Structure" />
      <Type Name="MKCoordinateSpan" Kind="Structure" />
      <Type Name="MKDidAddOverlayRenderersEventArgs" Kind="Class" />
      <Type Name="MKDidFinishRenderingMapEventArgs" Kind="Class" />
      <Type Name="MKDirections" Kind="Class" />
      <Type Name="MKDirectionsHandler" Kind="Delegate" />
      <Type Name="MKDirectionsMode" Kind="Enumeration" />
      <Type Name="MKDirectionsRequest" Kind="Class" />
      <Type Name="MKDirectionsResponse" Kind="Class" />
      <Type Name="MKDirectionsTransportType" Kind="Enumeration" />
      <Type Name="MKDistanceFormatter" Kind="Class" />
      <Type Name="MKDistanceFormatterUnits" Kind="Enumeration" />
      <Type Name="MKDistanceFormatterUnitStyle" Kind="Enumeration" />
      <Type Name="MKErrorCode" Kind="Enumeration" />
      <Type Name="MKErrorCodeExtensions" Kind="Class" />
      <Type Name="MKETAHandler" Kind="Delegate" />
      <Type Name="MKETAResponse" Kind="Class" />
      <Type Name="MKGeodesicPolyline" Kind="Class" />
      <Type Name="MKGeometry" Kind="Class" />
      <Type Name="MKLaunchOptions" Kind="Class" />
      <Type Name="MKLocalSearch" Kind="Class" />
      <Type Name="MKLocalSearchCompleter" Kind="Class" />
      <Type Name="MKLocalSearchCompleterDelegate" Kind="Class" />
      <Type Name="MKLocalSearchCompleterDelegate_Extensions" Kind="Class" />
      <Type Name="MKLocalSearchCompletion" Kind="Class" />
      <Type Name="MKLocalSearchCompletionHandler" Kind="Delegate" />
      <Type Name="MKLocalSearchRequest" Kind="Class" />
      <Type Name="MKLocalSearchResponse" Kind="Class" />
      <Type Name="MKMapCamera" Kind="Class" />
      <Type Name="MKMapItem" Kind="Class" />
      <Type Name="MKMapPoint" Kind="Structure" />
      <Type Name="MKMapRect" Kind="Structure" />
      <Type Name="MKMapSize" Kind="Structure" />
      <Type Name="MKMapSnapshot" Kind="Class" />
      <Type Name="MKMapSnapshotCompletionHandler" Kind="Delegate" />
      <Type Name="MKMapSnapshotOptions" Kind="Class" />
      <Type Name="MKMapSnapshotter" Kind="Class" />
      <Type Name="MKMapType" Kind="Enumeration" />
      <Type Name="MKMapView" Kind="Class" />
      <Type Name="MKMapView+MKMapViewAppearance" Kind="Class" />
      <Type Name="MKMapViewAccessoryTappedEventArgs" Kind="Class" />
      <Type Name="MKMapViewAnnotation" Kind="Delegate" />
      <Type Name="MKMapViewAnnotationEventArgs" Kind="Class" />
      <Type Name="MKMapViewChangeEventArgs" Kind="Class" />
      <Type Name="MKMapViewDelegate" Kind="Class" />
      <Type Name="MKMapViewDelegate_Extensions" Kind="Class" />
      <Type Name="MKMapViewDragStateEventArgs" Kind="Class" />
      <Type Name="MKMapViewOverlay" Kind="Delegate" />
      <Type Name="MKMultiPoint" Kind="Class" />
      <Type Name="MKOverlay" Kind="Class" />
      <Type Name="MKOverlay_Extensions" Kind="Class" />
      <Type Name="MKOverlayLevel" Kind="Enumeration" />
      <Type Name="MKOverlayPathRenderer" Kind="Class" />
      <Type Name="MKOverlayPathView" Kind="Class" />
      <Type Name="MKOverlayPathView+MKOverlayPathViewAppearance" Kind="Class" />
      <Type Name="MKOverlayRenderer" Kind="Class" />
      <Type Name="MKOverlayView" Kind="Class" />
      <Type Name="MKOverlayView+MKOverlayViewAppearance" Kind="Class" />
      <Type Name="MKOverlayViewsEventArgs" Kind="Class" />
      <Type Name="MKPinAnnotationColor" Kind="Enumeration" />
      <Type Name="MKPinAnnotationView" Kind="Class" />
      <Type Name="MKPinAnnotationView+MKPinAnnotationViewAppearance" Kind="Class" />
      <Type Name="MKPlacemark" Kind="Class" />
      <Type Name="MKPlacemarkAddress" Kind="Class" />
      <Type Name="MKPointAnnotation" Kind="Class" />
      <Type Name="MKPolygon" Kind="Class" />
      <Type Name="MKPolygonRenderer" Kind="Class" />
      <Type Name="MKPolygonView" Kind="Class" />
      <Type Name="MKPolygonView+MKPolygonViewAppearance" Kind="Class" />
      <Type Name="MKPolyline" Kind="Class" />
      <Type Name="MKPolylineRenderer" Kind="Class" />
      <Type Name="MKPolylineView" Kind="Class" />
      <Type Name="MKPolylineView+MKPolylineViewAppearance" Kind="Class" />
      <Type Name="MKRendererForOverlayDelegate" Kind="Delegate" />
      <Type Name="MKReverseGeocoder" Kind="Class" />
      <Type Name="MKReverseGeocoderDelegate" Kind="Class" />
      <Type Name="MKRoute" Kind="Class" />
      <Type Name="MKRouteStep" Kind="Class" />
      <Type Name="MKSearchCompletionFilterType" Kind="Enumeration" />
      <Type Name="MKShape" Kind="Class" />
      <Type Name="MKTileOverlay" Kind="Class" />
      <Type Name="MKTileOverlayLoadTileCompletionHandler" Kind="Delegate" />
      <Type Name="MKTileOverlayPath" Kind="Structure" />
      <Type Name="MKTileOverlayRenderer" Kind="Class" />
      <Type Name="MKUserLocation" Kind="Class" />
      <Type Name="MKUserLocationEventArgs" Kind="Class" />
      <Type Name="MKUserTrackingBarButtonItem" Kind="Class" />
      <Type Name="MKUserTrackingBarButtonItem+MKUserTrackingBarButtonItemAppearance" Kind="Class" />
      <Type Name="MKUserTrackingMode" Kind="Enumeration" />
      <Type Name="MMapViewUserTrackingEventArgs" Kind="Class" />
      <Type Name="NSUserActivity_MKMapItem" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.MediaAccessibility">
      <Type Name="MAAudibleMedia" Kind="Class" />
      <Type Name="MAAudibleMedia+Notifications" Kind="Class" />
      <Type Name="MACaptionAppearance" Kind="Class" />
      <Type Name="MACaptionAppearanceBehavior" Kind="Enumeration" />
      <Type Name="MACaptionAppearanceDisplayType" Kind="Enumeration" />
      <Type Name="MACaptionAppearanceDomain" Kind="Enumeration" />
      <Type Name="MACaptionAppearanceFontStyle" Kind="Enumeration" />
      <Type Name="MACaptionAppearanceTextEdgeStyle" Kind="Enumeration" />
      <Type Name="MAMediaCharacteristic" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.MediaPlayer">
      <Type Name="IMPMediaPickerControllerDelegate" Kind="Interface" />
      <Type Name="IMPMediaPlayback" Kind="Interface" />
      <Type Name="IMPPlayableContentDataSource" Kind="Interface" />
      <Type Name="IMPPlayableContentDelegate" Kind="Interface" />
      <Type Name="ItemsPickedEventArgs" Kind="Class" />
      <Type Name="MPChangeLanguageOptionCommandEvent" Kind="Class" />
      <Type Name="MPChangePlaybackPositionCommand" Kind="Class" />
      <Type Name="MPChangePlaybackPositionCommandEvent" Kind="Class" />
      <Type Name="MPChangePlaybackRateCommand" Kind="Class" />
      <Type Name="MPChangePlaybackRateCommandEvent" Kind="Class" />
      <Type Name="MPContentItem" Kind="Class" />
      <Type Name="MPErrorCode" Kind="Enumeration" />
      <Type Name="MPErrorCodeExtensions" Kind="Class" />
      <Type Name="MPFeedbackCommand" Kind="Class" />
      <Type Name="MPFeedbackCommandEvent" Kind="Class" />
      <Type Name="MPLanguageOptionCharacteristics" Kind="Class" />
      <Type Name="MPMediaEntity" Kind="Class" />
      <Type Name="MPMediaGrouping" Kind="Enumeration" />
      <Type Name="MPMediaItem" Kind="Class" />
      <Type Name="MPMediaItemArtwork" Kind="Class" />
      <Type Name="MPMediaItemCollection" Kind="Class" />
      <Type Name="MPMediaItemEnumerator" Kind="Delegate" />
      <Type Name="MPMediaLibrary" Kind="Class" />
      <Type Name="MPMediaLibrary+Notifications" Kind="Class" />
      <Type Name="MPMediaLibraryAuthorizationStatus" Kind="Enumeration" />
      <Type Name="MPMediaPickerController" Kind="Class" />
      <Type Name="MPMediaPickerControllerDelegate" Kind="Class" />
      <Type Name="MPMediaPickerControllerDelegate_Extensions" Kind="Class" />
      <Type Name="MPMediaPlaylist" Kind="Class" />
      <Type Name="MPMediaPlaylistAttribute" Kind="Enumeration" />
      <Type Name="MPMediaPlaylistCreationMetadata" Kind="Class" />
      <Type Name="MPMediaPlaylistProperty" Kind="Class" />
      <Type Name="MPMediaPredicate" Kind="Class" />
      <Type Name="MPMediaPredicateComparison" Kind="Enumeration" />
      <Type Name="MPMediaPropertyPredicate" Kind="Class" />
      <Type Name="MPMediaQuery" Kind="Class" />
      <Type Name="MPMediaQuerySection" Kind="Class" />
      <Type Name="MPMediaType" Kind="Enumeration" />
      <Type Name="MPMovieAccessLog" Kind="Class" />
      <Type Name="MPMovieAccessLogEvent" Kind="Class" />
      <Type Name="MPMovieControlMode" Kind="Enumeration" />
      <Type Name="MPMovieControlStyle" Kind="Enumeration" />
      <Type Name="MPMovieErrorLog" Kind="Class" />
      <Type Name="MPMovieErrorLogEvent" Kind="Class" />
      <Type Name="MPMovieFinishReason" Kind="Enumeration" />
      <Type Name="MPMovieLoadState" Kind="Enumeration" />
      <Type Name="MPMovieMediaType" Kind="Enumeration" />
      <Type Name="MPMoviePlaybackState" Kind="Enumeration" />
      <Type Name="MPMoviePlayerController" Kind="Class" />
      <Type Name="MPMoviePlayerController+Notifications" Kind="Class" />
      <Type Name="MPMoviePlayerFinishedEventArgs" Kind="Class" />
      <Type Name="MPMoviePlayerFullScreenEventArgs" Kind="Class" />
      <Type Name="MPMoviePlayerThumbnailEventArgs" Kind="Class" />
      <Type Name="MPMoviePlayerTimedMetadataEventArgs" Kind="Class" />
      <Type Name="MPMoviePlayerViewController" Kind="Class" />
      <Type Name="MPMovieRepeatMode" Kind="Enumeration" />
      <Type Name="MPMovieScalingMode" Kind="Enumeration" />
      <Type Name="MPMovieSourceType" Kind="Enumeration" />
      <Type Name="MPMovieTimeOption" Kind="Enumeration" />
      <Type Name="MPMusicPlaybackState" Kind="Enumeration" />
      <Type Name="MPMusicPlayerController" Kind="Class" />
      <Type Name="MPMusicPlayerController+Notifications" Kind="Class" />
      <Type Name="MPMusicRepeatMode" Kind="Enumeration" />
      <Type Name="MPMusicShuffleMode" Kind="Enumeration" />
      <Type Name="MPNowPlayingInfo" Kind="Class" />
      <Type Name="MPNowPlayingInfoCenter" Kind="Class" />
      <Type Name="MPNowPlayingInfoLanguageOption" Kind="Class" />
      <Type Name="MPNowPlayingInfoLanguageOptionGroup" Kind="Class" />
      <Type Name="MPNowPlayingInfoLanguageOptionType" Kind="Enumeration" />
      <Type Name="MPPlayableContentDataSource" Kind="Class" />
      <Type Name="MPPlayableContentDataSource_Extensions" Kind="Class" />
      <Type Name="MPPlayableContentDelegate" Kind="Class" />
      <Type Name="MPPlayableContentDelegate_Extensions" Kind="Class" />
      <Type Name="MPPlayableContentManager" Kind="Class" />
      <Type Name="MPPlayableContentManagerContext" Kind="Class" />
      <Type Name="MPRatingCommand" Kind="Class" />
      <Type Name="MPRatingCommandEvent" Kind="Class" />
      <Type Name="MPRemoteCommand" Kind="Class" />
      <Type Name="MPRemoteCommandCenter" Kind="Class" />
      <Type Name="MPRemoteCommandEvent" Kind="Class" />
      <Type Name="MPRemoteCommandHandlerStatus" Kind="Enumeration" />
      <Type Name="MPSeekCommandEvent" Kind="Class" />
      <Type Name="MPSeekCommandEventType" Kind="Enumeration" />
      <Type Name="MPSkipIntervalCommand" Kind="Class" />
      <Type Name="MPSkipIntervalCommandEvent" Kind="Class" />
      <Type Name="MPTimedMetadata" Kind="Class" />
      <Type Name="MPVolumeSettings" Kind="Class" />
      <Type Name="MPVolumeView" Kind="Class" />
      <Type Name="MPVolumeView+MPVolumeViewAppearance" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.MediaToolbox">
      <Type Name="MTAudioProcessingTap" Kind="Class" />
      <Type Name="MTAudioProcessingTapCallbacks" Kind="Class" />
      <Type Name="MTAudioProcessingTapCreationFlags" Kind="Enumeration" />
      <Type Name="MTAudioProcessingTapError" Kind="Enumeration" />
      <Type Name="MTAudioProcessingTapFlags" Kind="Enumeration" />
      <Type Name="MTAudioProcessingTapInitCallback" Kind="Delegate" />
      <Type Name="MTAudioProcessingTapPrepareCallback" Kind="Delegate" />
      <Type Name="MTAudioProcessingTapProcessDelegate" Kind="Delegate" />
      <Type Name="MTFormatNames" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.Messages">
      <Type Name="IMSStickerBrowserViewDataSource" Kind="Interface" />
      <Type Name="MSConversation" Kind="Class" />
      <Type Name="MSMessage" Kind="Class" />
      <Type Name="MSMessageErrorCode" Kind="Enumeration" />
      <Type Name="MSMessageLayout" Kind="Class" />
      <Type Name="MSMessagesAppPresentationStyle" Kind="Enumeration" />
      <Type Name="MSMessagesAppViewController" Kind="Class" />
      <Type Name="MSMessageTemplateLayout" Kind="Class" />
      <Type Name="MSSession" Kind="Class" />
      <Type Name="MSSticker" Kind="Class" />
      <Type Name="MSStickerBrowserView" Kind="Class" />
      <Type Name="MSStickerBrowserView+MSStickerBrowserViewAppearance" Kind="Class" />
      <Type Name="MSStickerBrowserViewController" Kind="Class" />
      <Type Name="MSStickerBrowserViewDataSource" Kind="Class" />
      <Type Name="MSStickerSize" Kind="Enumeration" />
      <Type Name="MSStickerView" Kind="Class" />
      <Type Name="MSStickerView+MSStickerViewAppearance" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.MessageUI">
      <Type Name="IMFMailComposeViewControllerDelegate" Kind="Interface" />
      <Type Name="IMFMessageComposeViewControllerDelegate" Kind="Interface" />
      <Type Name="MessageComposeResult" Kind="Enumeration" />
      <Type Name="MFComposeResultEventArgs" Kind="Class" />
      <Type Name="MFMailComposeErrorCode" Kind="Enumeration" />
      <Type Name="MFMailComposeErrorCodeExtensions" Kind="Class" />
      <Type Name="MFMailComposeResult" Kind="Enumeration" />
      <Type Name="MFMailComposeViewController" Kind="Class" />
      <Type Name="MFMailComposeViewController+MFMailComposeViewControllerAppearance" Kind="Class" />
      <Type Name="MFMailComposeViewControllerDelegate" Kind="Class" />
      <Type Name="MFMailComposeViewControllerDelegate_Extensions" Kind="Class" />
      <Type Name="MFMessageAvailabilityChangedEventArgs" Kind="Class" />
      <Type Name="MFMessageComposeResultEventArgs" Kind="Class" />
      <Type Name="MFMessageComposeViewController" Kind="Class" />
      <Type Name="MFMessageComposeViewController+MFMessageComposeViewControllerAppearance" Kind="Class" />
      <Type Name="MFMessageComposeViewController+Notifications" Kind="Class" />
      <Type Name="MFMessageComposeViewControllerDelegate" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.Metal">
      <Type Name="IMTLBlitCommandEncoder" Kind="Interface" />
      <Type Name="IMTLBuffer" Kind="Interface" />
      <Type Name="IMTLCommandBuffer" Kind="Interface" />
      <Type Name="IMTLCommandEncoder" Kind="Interface" />
      <Type Name="IMTLCommandQueue" Kind="Interface" />
      <Type Name="IMTLComputeCommandEncoder" Kind="Interface" />
      <Type Name="IMTLComputePipelineState" Kind="Interface" />
      <Type Name="IMTLDepthStencilState" Kind="Interface" />
      <Type Name="IMTLDevice" Kind="Interface" />
      <Type Name="IMTLDrawable" Kind="Interface" />
      <Type Name="IMTLFunction" Kind="Interface" />
      <Type Name="IMTLLibrary" Kind="Interface" />
      <Type Name="IMTLParallelRenderCommandEncoder" Kind="Interface" />
      <Type Name="IMTLRenderCommandEncoder" Kind="Interface" />
      <Type Name="IMTLRenderPipelineState" Kind="Interface" />
      <Type Name="IMTLResource" Kind="Interface" />
      <Type Name="IMTLSamplerState" Kind="Interface" />
      <Type Name="IMTLTexture" Kind="Interface" />
      <Type Name="MTLArgument" Kind="Class" />
      <Type Name="MTLArgumentAccess" Kind="Enumeration" />
      <Type Name="MTLArgumentType" Kind="Enumeration" />
      <Type Name="MTLArrayType" Kind="Class" />
      <Type Name="MTLBlendFactor" Kind="Enumeration" />
      <Type Name="MTLBlendOperation" Kind="Enumeration" />
      <Type Name="MTLBlitCommandEncoder_Extensions" Kind="Class" />
      <Type Name="MTLBlitOption" Kind="Enumeration" />
      <Type Name="MTLClearColor" Kind="Structure" />
      <Type Name="MTLClearValue" Kind="Structure" />
      <Type Name="MTLColorWriteMask" Kind="Enumeration" />
      <Type Name="MTLCommandBufferError" Kind="Enumeration" />
      <Type Name="MTLCommandBufferErrorExtensions" Kind="Class" />
      <Type Name="MTLCommandBufferStatus" Kind="Enumeration" />
      <Type Name="MTLCompareFunction" Kind="Enumeration" />
      <Type Name="MTLCompileOptions" Kind="Class" />
      <Type Name="MTLComputeCommandEncoder_Extensions" Kind="Class" />
      <Type Name="MTLComputePipelineDescriptor" Kind="Class" />
      <Type Name="MTLComputePipelineReflection" Kind="Class" />
      <Type Name="MTLCpuCacheMode" Kind="Enumeration" />
      <Type Name="MTLCullMode" Kind="Enumeration" />
      <Type Name="MTLDataType" Kind="Enumeration" />
      <Type Name="MTLDeallocator" Kind="Delegate" />
      <Type Name="MTLDepthClipMode" Kind="Enumeration" />
      <Type Name="MTLDepthStencilDescriptor" Kind="Class" />
      <Type Name="MTLDevice" Kind="Class" />
      <Type Name="MTLDevice_Extensions" Kind="Class" />
      <Type Name="MTLDispatchThreadgroupsIndirectArguments" Kind="Structure" />
      <Type Name="MTLDrawable" Kind="Class" />
      <Type Name="MTLDrawIndexedPrimitivesIndirectArguments" Kind="Structure" />
      <Type Name="MTLDrawPrimitivesIndirectArguments" Kind="Structure" />
      <Type Name="MTLFeatureSet" Kind="Enumeration" />
      <Type Name="MTLFunctionType" Kind="Enumeration" />
      <Type Name="MTLIndexType" Kind="Enumeration" />
      <Type Name="MTLLanguageVersion" Kind="Enumeration" />
      <Type Name="MTLLibraryError" Kind="Enumeration" />
      <Type Name="MTLLibraryErrorExtensions" Kind="Class" />
      <Type Name="MTLLoadAction" Kind="Enumeration" />
      <Type Name="MTLMultisampleDepthResolveFilter" Kind="Enumeration" />
      <Type Name="MTLNewComputePipelineStateWithReflectionCompletionHandler" Kind="Delegate" />
      <Type Name="MTLOrigin" Kind="Structure" />
      <Type Name="MTLPipelineOption" Kind="Enumeration" />
      <Type Name="MTLPixelFormat" Kind="Enumeration" />
      <Type Name="MTLPrimitiveType" Kind="Enumeration" />
      <Type Name="MTLPurgeableState" Kind="Enumeration" />
      <Type Name="MTLRegion" Kind="Structure" />
      <Type Name="MTLRenderCommandEncoder_Extensions" Kind="Class" />
      <Type Name="MTLRenderPassAttachmentDescriptor" Kind="Class" />
      <Type Name="MTLRenderPassColorAttachmentDescriptor" Kind="Class" />
      <Type Name="MTLRenderPassColorAttachmentDescriptorArray" Kind="Class" />
      <Type Name="MTLRenderPassDepthAttachmentDescriptor" Kind="Class" />
      <Type Name="MTLRenderPassDescriptor" Kind="Class" />
      <Type Name="MTLRenderPassStencilAttachmentDescriptor" Kind="Class" />
      <Type Name="MTLRenderPipelineColorAttachmentDescriptor" Kind="Class" />
      <Type Name="MTLRenderPipelineColorAttachmentDescriptorArray" Kind="Class" />
      <Type Name="MTLRenderPipelineDescriptor" Kind="Class" />
      <Type Name="MTLRenderPipelineError" Kind="Enumeration" />
      <Type Name="MTLRenderPipelineErrorExtensions" Kind="Class" />
      <Type Name="MTLRenderPipelineReflection" Kind="Class" />
      <Type Name="MTLResource_Extensions" Kind="Class" />
      <Type Name="MTLResourceOptions" Kind="Enumeration" />
      <Type Name="MTLSamplerAddressMode" Kind="Enumeration" />
      <Type Name="MTLSamplerDescriptor" Kind="Class" />
      <Type Name="MTLSamplerMinMagFilter" Kind="Enumeration" />
      <Type Name="MTLSamplerMipFilter" Kind="Enumeration" />
      <Type Name="MTLScissorRect" Kind="Structure" />
      <Type Name="MTLSize" Kind="Structure" />
      <Type Name="MTLStencilDescriptor" Kind="Class" />
      <Type Name="MTLStencilOperation" Kind="Enumeration" />
      <Type Name="MTLStorageMode" Kind="Enumeration" />
      <Type Name="MTLStoreAction" Kind="Enumeration" />
      <Type Name="MTLStructMember" Kind="Class" />
      <Type Name="MTLStructType" Kind="Class" />
      <Type Name="MTLTexture_Extensions" Kind="Class" />
      <Type Name="MTLTextureDescriptor" Kind="Class" />
      <Type Name="MTLTextureType" Kind="Enumeration" />
      <Type Name="MTLTextureUsage" Kind="Enumeration" />
      <Type Name="MTLTriangleFillMode" Kind="Enumeration" />
      <Type Name="MTLVertexAttribute" Kind="Class" />
      <Type Name="MTLVertexAttributeDescriptor" Kind="Class" />
      <Type Name="MTLVertexAttributeDescriptorArray" Kind="Class" />
      <Type Name="MTLVertexBufferLayoutDescriptor" Kind="Class" />
      <Type Name="MTLVertexBufferLayoutDescriptorArray" Kind="Class" />
      <Type Name="MTLVertexDescriptor" Kind="Class" />
      <Type Name="MTLVertexFormat" Kind="Enumeration" />
      <Type Name="MTLVertexFormatExtensions" Kind="Class" />
      <Type Name="MTLVertexStepFunction" Kind="Enumeration" />
      <Type Name="MTLViewport" Kind="Structure" />
      <Type Name="MTLVisibilityResultMode" Kind="Enumeration" />
      <Type Name="MTLWinding" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.MetalKit">
      <Type Name="IMTKViewDelegate" Kind="Interface" />
      <Type Name="MTKMesh" Kind="Class" />
      <Type Name="MTKMeshBuffer" Kind="Class" />
      <Type Name="MTKMeshBufferAllocator" Kind="Class" />
      <Type Name="MTKModel" Kind="Class" />
      <Type Name="MTKSubmesh" Kind="Class" />
      <Type Name="MTKTextureLoader" Kind="Class" />
      <Type Name="MTKTextureLoaderCallback" Kind="Delegate" />
      <Type Name="MTKTextureLoaderError" Kind="Class" />
      <Type Name="MTKTextureLoaderOptions" Kind="Class" />
      <Type Name="MTKView" Kind="Class" />
      <Type Name="MTKView+MTKViewAppearance" Kind="Class" />
      <Type Name="MTKViewDelegate" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.MetalPerformanceShaders">
      <Type Name="MPSBinaryImageKernel" Kind="Class" />
      <Type Name="MPSCopyAllocator" Kind="Delegate" />
      <Type Name="MPSImageAreaMax" Kind="Class" />
      <Type Name="MPSImageAreaMin" Kind="Class" />
      <Type Name="MPSImageBox" Kind="Class" />
      <Type Name="MPSImageConvolution" Kind="Class" />
      <Type Name="MPSImageDilate" Kind="Class" />
      <Type Name="MPSImageEdgeMode" Kind="Enumeration" />
      <Type Name="MPSImageErode" Kind="Class" />
      <Type Name="MPSImageGaussianBlur" Kind="Class" />
      <Type Name="MPSImageHistogram" Kind="Class" />
      <Type Name="MPSImageHistogramEqualization" Kind="Class" />
      <Type Name="MPSImageHistogramInfo" Kind="Structure" />
      <Type Name="MPSImageHistogramSpecification" Kind="Class" />
      <Type Name="MPSImageIntegral" Kind="Class" />
      <Type Name="MPSImageIntegralOfSquares" Kind="Class" />
      <Type Name="MPSImageLanczosScale" Kind="Class" />
      <Type Name="MPSImageMedian" Kind="Class" />
      <Type Name="MPSImageSobel" Kind="Class" />
      <Type Name="MPSImageTent" Kind="Class" />
      <Type Name="MPSImageThresholdBinary" Kind="Class" />
      <Type Name="MPSImageThresholdBinaryInverse" Kind="Class" />
      <Type Name="MPSImageThresholdToZero" Kind="Class" />
      <Type Name="MPSImageThresholdToZeroInverse" Kind="Class" />
      <Type Name="MPSImageThresholdTruncate" Kind="Class" />
      <Type Name="MPSImageTranspose" Kind="Class" />
      <Type Name="MPSKernel" Kind="Class" />
      <Type Name="MPSKernelOptions" Kind="Enumeration" />
      <Type Name="MPSOffset" Kind="Structure" />
      <Type Name="MPSOrigin" Kind="Structure" />
      <Type Name="MPSRegion" Kind="Structure" />
      <Type Name="MPSScaleTransform" Kind="Structure" />
      <Type Name="MPSSize" Kind="Structure" />
      <Type Name="MPSUnaryImageKernel" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.MobileCoreServices">
      <Type Name="UTType" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.ModelIO">
      <Type Name="IMDLComponent" Kind="Interface" />
      <Type Name="IMDLMeshBuffer" Kind="Interface" />
      <Type Name="IMDLMeshBufferAllocator" Kind="Interface" />
      <Type Name="IMDLMeshBufferZone" Kind="Interface" />
      <Type Name="IMDLNamed" Kind="Interface" />
      <Type Name="IMDLObjectContainerComponent" Kind="Interface" />
      <Type Name="IMDLTransformComponent" Kind="Interface" />
      <Type Name="MDLAreaLight" Kind="Class" />
      <Type Name="MDLAsset" Kind="Class" />
      <Type Name="MDLAxisAlignedBoundingBox" Kind="Structure" />
      <Type Name="MDLCamera" Kind="Class" />
      <Type Name="MDLCheckerboardTexture" Kind="Class" />
      <Type Name="MDLColorSwatchTexture" Kind="Class" />
      <Type Name="MDLGeometryType" Kind="Enumeration" />
      <Type Name="MDLIndexBitDepth" Kind="Enumeration" />
      <Type Name="MDLLight" Kind="Class" />
      <Type Name="MDLLightProbe" Kind="Class" />
      <Type Name="MDLLightType" Kind="Enumeration" />
      <Type Name="MDLMaterial" Kind="Class" />
      <Type Name="MDLMaterialMipMapFilterMode" Kind="Enumeration" />
      <Type Name="MDLMaterialProperty" Kind="Class" />
      <Type Name="MDLMaterialPropertyType" Kind="Enumeration" />
      <Type Name="MDLMaterialSemantic" Kind="Enumeration" />
      <Type Name="MDLMaterialTextureFilterMode" Kind="Enumeration" />
      <Type Name="MDLMaterialTextureWrapMode" Kind="Enumeration" />
      <Type Name="MDLMesh" Kind="Class" />
      <Type Name="MDLMeshBuffer_Extensions" Kind="Class" />
      <Type Name="MDLMeshBufferData" Kind="Class" />
      <Type Name="MDLMeshBufferDataAllocator" Kind="Class" />
      <Type Name="MDLMeshBufferMap" Kind="Class" />
      <Type Name="MDLMeshBufferType" Kind="Enumeration" />
      <Type Name="MDLMeshBufferZone_Extensions" Kind="Class" />
      <Type Name="MDLMeshBufferZoneDefault" Kind="Class" />
      <Type Name="MDLNoiseTexture" Kind="Class" />
      <Type Name="MDLNormalMapTexture" Kind="Class" />
      <Type Name="MDLObject" Kind="Class" />
      <Type Name="MDLObjectContainer" Kind="Class" />
      <Type Name="MDLPhotometricLight" Kind="Class" />
      <Type Name="MDLPhysicallyPlausibleLight" Kind="Class" />
      <Type Name="MDLPhysicallyPlausibleScatteringFunction" Kind="Class" />
      <Type Name="MDLScatteringFunction" Kind="Class" />
      <Type Name="MDLSkyCubeTexture" Kind="Class" />
      <Type Name="MDLStereoscopicCamera" Kind="Class" />
      <Type Name="MDLSubmesh" Kind="Class" />
      <Type Name="MDLSubmeshTopology" Kind="Class" />
      <Type Name="MDLTexture" Kind="Class" />
      <Type Name="MDLTextureChannelEncoding" Kind="Enumeration" />
      <Type Name="MDLTextureFilter" Kind="Class" />
      <Type Name="MDLTextureSampler" Kind="Class" />
      <Type Name="MDLTransform" Kind="Class" />
      <Type Name="MDLTransformComponent_Extensions" Kind="Class" />
      <Type Name="MDLUrlTexture" Kind="Class" />
      <Type Name="MDLVertexAttribute" Kind="Class" />
      <Type Name="MDLVertexAttributeData" Kind="Class" />
      <Type Name="MDLVertexAttributes" Kind="Class" />
      <Type Name="MDLVertexBufferLayout" Kind="Class" />
      <Type Name="MDLVertexDescriptor" Kind="Class" />
      <Type Name="MDLVertexFormat" Kind="Enumeration" />
      <Type Name="MDLVertexFormatExtensions" Kind="Class" />
      <Type Name="MDLVoxelArray" Kind="Class" />
      <Type Name="MDLVoxelIndexExtent" Kind="Structure" />
    </Namespace>
    <Namespace Name="MonoTouch.MultipeerConnectivity">
      <Type Name="IMCAdvertiserAssistantDelegate" Kind="Interface" />
      <Type Name="IMCBrowserViewControllerDelegate" Kind="Interface" />
      <Type Name="IMCNearbyServiceAdvertiserDelegate" Kind="Interface" />
      <Type Name="IMCNearbyServiceBrowserDelegate" Kind="Interface" />
      <Type Name="IMCSessionDelegate" Kind="Interface" />
      <Type Name="MCAdvertiserAssistant" Kind="Class" />
      <Type Name="MCAdvertiserAssistantDelegate" Kind="Class" />
      <Type Name="MCAdvertiserAssistantDelegate_Extensions" Kind="Class" />
      <Type Name="MCBrowserViewController" Kind="Class" />
      <Type Name="MCBrowserViewControllerDelegate" Kind="Class" />
      <Type Name="MCBrowserViewControllerDelegate_Extensions" Kind="Class" />
      <Type Name="MCEncryptionPreference" Kind="Enumeration" />
      <Type Name="MCError" Kind="Enumeration" />
      <Type Name="MCErrorExtensions" Kind="Class" />
      <Type Name="MCNearbyServiceAdvertiser" Kind="Class" />
      <Type Name="MCNearbyServiceAdvertiserDelegate" Kind="Class" />
      <Type Name="MCNearbyServiceAdvertiserDelegate_Extensions" Kind="Class" />
      <Type Name="MCNearbyServiceAdvertiserInvitationHandler" Kind="Delegate" />
      <Type Name="MCNearbyServiceBrowser" Kind="Class" />
      <Type Name="MCNearbyServiceBrowserDelegate" Kind="Class" />
      <Type Name="MCNearbyServiceBrowserDelegate_Extensions" Kind="Class" />
      <Type Name="MCPeerID" Kind="Class" />
      <Type Name="MCSession" Kind="Class" />
      <Type Name="MCSessionDelegate" Kind="Class" />
      <Type Name="MCSessionDelegate_Extensions" Kind="Class" />
      <Type Name="MCSessionNearbyConnectionDataForPeerCompletionHandler" Kind="Delegate" />
      <Type Name="MCSessionSendDataMode" Kind="Enumeration" />
      <Type Name="MCSessionState" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.NetworkExtension">
      <Type Name="INWTcpConnectionAuthenticationDelegate" Kind="Interface" />
      <Type Name="NEAppProxyFlow" Kind="Class" />
      <Type Name="NEAppProxyFlowError" Kind="Enumeration" />
      <Type Name="NEAppProxyFlowErrorExtensions" Kind="Class" />
      <Type Name="NEAppProxyProvider" Kind="Class" />
      <Type Name="NEAppProxyProviderManager" Kind="Class" />
      <Type Name="NEAppProxyTcpFlow" Kind="Class" />
      <Type Name="NEAppProxyUdpFlow" Kind="Class" />
      <Type Name="NEAppRule" Kind="Class" />
      <Type Name="NEDatagramRead" Kind="Delegate" />
      <Type Name="NEDatagramReadResult" Kind="Class" />
      <Type Name="NEDnsSettings" Kind="Class" />
      <Type Name="NEEvaluateConnectionRule" Kind="Class" />
      <Type Name="NEEvaluateConnectionRuleAction" Kind="Enumeration" />
      <Type Name="NEFilterBrowserFlow" Kind="Class" />
      <Type Name="NEFilterControlProvider" Kind="Class" />
      <Type Name="NEFilterControlVerdict" Kind="Class" />
      <Type Name="NEFilterDataProvider" Kind="Class" />
      <Type Name="NEFilterDataVerdict" Kind="Class" />
      <Type Name="NEFilterFlow" Kind="Class" />
      <Type Name="NEFilterManager" Kind="Class" />
      <Type Name="NEFilterManager+Notifications" Kind="Class" />
      <Type Name="NEFilterManagerError" Kind="Enumeration" />
      <Type Name="NEFilterManagerErrorExtensions" Kind="Class" />
      <Type Name="NEFilterNewFlowVerdict" Kind="Class" />
      <Type Name="NEFilterProvider" Kind="Class" />
      <Type Name="NEFilterProviderConfiguration" Kind="Class" />
      <Type Name="NEFilterRemediationVerdict" Kind="Class" />
      <Type Name="NEFilterSocketFlow" Kind="Class" />
      <Type Name="NEFilterVerdict" Kind="Class" />
      <Type Name="NEFlowMetaData" Kind="Class" />
      <Type Name="NEHotspotHelper" Kind="Class" />
      <Type Name="NEHotspotHelperCommand" Kind="Class" />
      <Type Name="NEHotspotHelperCommandType" Kind="Enumeration" />
      <Type Name="NEHotspotHelperConfidence" Kind="Enumeration" />
      <Type Name="NEHotspotHelperHandler" Kind="Delegate" />
      <Type Name="NEHotspotHelperOptionInternal" Kind="Class" />
      <Type Name="NEHotspotHelperOptions" Kind="Class" />
      <Type Name="NEHotspotHelperResponse" Kind="Class" />
      <Type Name="NEHotspotHelperResult" Kind="Enumeration" />
      <Type Name="NEHotspotNetwork" Kind="Class" />
      <Type Name="NEIPv4Route" Kind="Class" />
      <Type Name="NEIPv4Settings" Kind="Class" />
      <Type Name="NEIPv6Route" Kind="Class" />
      <Type Name="NEIPv6Settings" Kind="Class" />
      <Type Name="NEOnDemandRule" Kind="Class" />
      <Type Name="NEOnDemandRuleAction" Kind="Enumeration" />
      <Type Name="NEOnDemandRuleConnect" Kind="Class" />
      <Type Name="NEOnDemandRuleDisconnect" Kind="Class" />
      <Type Name="NEOnDemandRuleEvaluateConnection" Kind="Class" />
      <Type Name="NEOnDemandRuleIgnore" Kind="Class" />
      <Type Name="NEOnDemandRuleInterfaceType" Kind="Enumeration" />
      <Type Name="NEPacketTunnelFlow" Kind="Class" />
      <Type Name="NEPacketTunnelNetworkSettings" Kind="Class" />
      <Type Name="NEPacketTunnelProvider" Kind="Class" />
      <Type Name="NEProvider" Kind="Class" />
      <Type Name="NEProviderStopReason" Kind="Enumeration" />
      <Type Name="NEProxyServer" Kind="Class" />
      <Type Name="NEProxySettings" Kind="Class" />
      <Type Name="NETunnelNetworkSettings" Kind="Class" />
      <Type Name="NETunnelProvider" Kind="Class" />
      <Type Name="NETunnelProviderError" Kind="Enumeration" />
      <Type Name="NETunnelProviderErrorExtensions" Kind="Class" />
      <Type Name="NETunnelProviderManager" Kind="Class" />
      <Type Name="NETunnelProviderProtocol" Kind="Class" />
      <Type Name="NETunnelProviderRoutingMethod" Kind="Enumeration" />
      <Type Name="NETunnelProviderSession" Kind="Class" />
      <Type Name="NEVpnConnection" Kind="Class" />
      <Type Name="NEVpnConnection+Notifications" Kind="Class" />
      <Type Name="NEVpnConnectionStartOptions" Kind="Class" />
      <Type Name="NEVpnError" Kind="Enumeration" />
      <Type Name="NEVpnErrorExtensions" Kind="Class" />
      <Type Name="NEVpnIke2CertificateType" Kind="Enumeration" />
      <Type Name="NEVpnIke2DeadPeerDetectionRate" Kind="Enumeration" />
      <Type Name="NEVpnIke2DiffieHellman" Kind="Enumeration" />
      <Type Name="NEVpnIke2EncryptionAlgorithm" Kind="Enumeration" />
      <Type Name="NEVpnIke2IntegrityAlgorithm" Kind="Enumeration" />
      <Type Name="NEVpnIke2SecurityAssociationParameters" Kind="Class" />
      <Type Name="NEVpnIkeAuthenticationMethod" Kind="Enumeration" />
      <Type Name="NEVpnManager" Kind="Class" />
      <Type Name="NEVpnManager+Notifications" Kind="Class" />
      <Type Name="NEVpnProtocol" Kind="Class" />
      <Type Name="NEVpnProtocolIke2" Kind="Class" />
      <Type Name="NEVpnProtocolIpSec" Kind="Class" />
      <Type Name="NEVpnStatus" Kind="Enumeration" />
      <Type Name="NSMutableURLRequest_NEHotspotHelper" Kind="Class" />
      <Type Name="NWBonjourServiceEndpoint" Kind="Class" />
      <Type Name="NWEndpoint" Kind="Class" />
      <Type Name="NWHostEndpoint" Kind="Class" />
      <Type Name="NWPath" Kind="Class" />
      <Type Name="NWPathStatus" Kind="Enumeration" />
      <Type Name="NWTcpConnection" Kind="Class" />
      <Type Name="NWTcpConnectionAuthenticationDelegate" Kind="Class" />
      <Type Name="NWTcpConnectionAuthenticationDelegate_Extensions" Kind="Class" />
      <Type Name="NWTcpConnectionState" Kind="Enumeration" />
      <Type Name="NWTlsParameters" Kind="Class" />
      <Type Name="NWUdpSession" Kind="Class" />
      <Type Name="NWUdpSessionState" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.NewsstandKit">
      <Type Name="NKAssetDownload" Kind="Class" />
      <Type Name="NKIssue" Kind="Class" />
      <Type Name="NKIssue+Notifications" Kind="Class" />
      <Type Name="NKIssueContentStatus" Kind="Enumeration" />
      <Type Name="NKLibrary" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.NotificationCenter">
      <Type Name="INCWidgetProviding" Kind="Interface" />
      <Type Name="NCUpdateResult" Kind="Enumeration" />
      <Type Name="NCWidgetController" Kind="Class" />
      <Type Name="NCWidgetDisplayMode" Kind="Enumeration" />
      <Type Name="NCWidgetProviding" Kind="Class" />
      <Type Name="NCWidgetProviding_Extensions" Kind="Class" />
      <Type Name="NSExtensionContext_NCWidgetAdditions" Kind="Class" />
      <Type Name="UIVibrancyEffect_NotificationCenter" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.NUnit">
      <Type Name="NUnitOutputTextWriter" Kind="Class" />
      <Type Name="TcpTextWriter" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.NUnit.UI">
      <Type Name="BaseTouchRunner" Kind="Class" />
      <Type Name="TouchOptions" Kind="Class" />
      <Type Name="TouchRunner" Kind="Class" />
      <Type Name="TouchViewController" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.ObjCRuntime">
      <Type Name="AdoptsAttribute" Kind="Class" />
      <Type Name="Arch" Kind="Enumeration" />
      <Type Name="ArgumentSemantic" Kind="Enumeration" />
      <Type Name="AvailabilityAttribute" Kind="Class" />
      <Type Name="AvailabilityBaseAttribute" Kind="Class" />
      <Type Name="AvailabilityKind" Kind="Enumeration" />
      <Type Name="BaseWrapper" Kind="Class" />
      <Type Name="BlockFlags" Kind="Enumeration" />
      <Type Name="BlockLiteral" Kind="Structure" />
      <Type Name="BlockProxyAttribute" Kind="Class" />
      <Type Name="CategoryAttribute" Kind="Class" />
      <Type Name="Class" Kind="Class" />
      <Type Name="DelegateProxyAttribute" Kind="Class" />
      <Type Name="DeprecatedAttribute" Kind="Class" />
      <Type Name="DesignatedInitializerAttribute" Kind="Class" />
      <Type Name="Dlfcn" Kind="Class" />
      <Type Name="Dlfcn+RTLD" Kind="Enumeration" />
      <Type Name="INativeObject" Kind="Interface" />
      <Type Name="IntroducedAttribute" Kind="Class" />
      <Type Name="iOSAttribute" Kind="Class" />
      <Type Name="LinkTarget" Kind="Enumeration" />
      <Type Name="LinkWithAttribute" Kind="Class" />
      <Type Name="MacAttribute" Kind="Class" />
      <Type Name="MarshalManagedExceptionEventArgs" Kind="Class" />
      <Type Name="MarshalManagedExceptionHandler" Kind="Delegate" />
      <Type Name="MarshalManagedExceptionMode" Kind="Enumeration" />
      <Type Name="MarshalObjectiveCExceptionEventArgs" Kind="Class" />
      <Type Name="MarshalObjectiveCExceptionHandler" Kind="Delegate" />
      <Type Name="MarshalObjectiveCExceptionMode" Kind="Enumeration" />
      <Type Name="NativeAttribute" Kind="Class" />
      <Type Name="ObsoletedAttribute" Kind="Class" />
      <Type Name="Platform" Kind="Enumeration" />
      <Type Name="PlatformArchitecture" Kind="Enumeration" />
      <Type Name="PlatformHelper" Kind="Class" />
      <Type Name="PlatformName" Kind="Enumeration" />
      <Type Name="Protocol" Kind="Class" />
      <Type Name="ReleaseAttribute" Kind="Class" />
      <Type Name="Runtime" Kind="Class" />
      <Type Name="Selector" Kind="Class" />
      <Type Name="ThreadSafeAttribute" Kind="Class" />
      <Type Name="TransientAttribute" Kind="Class" />
      <Type Name="TypeConverter" Kind="Class" />
      <Type Name="UnavailableAttribute" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.OpenGLES">
      <Type Name="EAGLColorFormat" Kind="Class" />
      <Type Name="EAGLContext" Kind="Class" />
      <Type Name="EAGLDrawableProperty" Kind="Class" />
      <Type Name="EAGLRenderingAPI" Kind="Enumeration" />
      <Type Name="EAGLSharegroup" Kind="Class" />
      <Type Name="IEAGLDrawable" Kind="Interface" />
    </Namespace>
    <Namespace Name="MonoTouch.OpenTK">
    </Namespace>
    <Namespace Name="MonoTouch.PassKit">
      <Type Name="IPKAddPassesViewControllerDelegate" Kind="Interface" />
      <Type Name="IPKAddPaymentPassViewControllerDelegate" Kind="Interface" />
      <Type Name="IPKPaymentAuthorizationViewControllerDelegate" Kind="Interface" />
      <Type Name="PKAddPassButton" Kind="Class" />
      <Type Name="PKAddPassButton+PKAddPassButtonAppearance" Kind="Class" />
      <Type Name="PKAddPassButtonStyle" Kind="Enumeration" />
      <Type Name="PKAddPassesViewController" Kind="Class" />
      <Type Name="PKAddPassesViewControllerDelegate" Kind="Class" />
      <Type Name="PKAddPassesViewControllerDelegate_Extensions" Kind="Class" />
      <Type Name="PKAddPaymentPassError" Kind="Enumeration" />
      <Type Name="PKAddPaymentPassRequest" Kind="Class" />
      <Type Name="PKAddPaymentPassRequestConfiguration" Kind="Class" />
      <Type Name="PKAddPaymentPassViewController" Kind="Class" />
      <Type Name="PKAddPaymentPassViewControllerDelegate" Kind="Class" />
      <Type Name="PKAddressField" Kind="Enumeration" />
      <Type Name="PKAutomaticPassPresentationSuppressionResult" Kind="Enumeration" />
      <Type Name="PKContact" Kind="Class" />
      <Type Name="PKEncryptionScheme" Kind="Class" />
      <Type Name="PKErrorCode" Kind="Enumeration" />
      <Type Name="PKMerchantCapability" Kind="Enumeration" />
      <Type Name="PKObject" Kind="Class" />
      <Type Name="PKPass" Kind="Class" />
      <Type Name="PKPassKitErrorCode" Kind="Enumeration" />
      <Type Name="PKPassLibrary" Kind="Class" />
      <Type Name="PKPassLibrary+Notifications" Kind="Class" />
      <Type Name="PKPassLibraryAddPassesStatus" Kind="Enumeration" />
      <Type Name="PKPassLibraryUserInfoKey" Kind="Class" />
      <Type Name="PKPassType" Kind="Enumeration" />
      <Type Name="PKPayment" Kind="Class" />
      <Type Name="PKPaymentAuthorizationEventArgs" Kind="Class" />
      <Type Name="PKPaymentAuthorizationStatus" Kind="Enumeration" />
      <Type Name="PKPaymentAuthorizationViewController" Kind="Class" />
      <Type Name="PKPaymentAuthorizationViewControllerDelegate" Kind="Class" />
      <Type Name="PKPaymentAuthorizationViewControllerDelegate_Extensions" Kind="Class" />
      <Type Name="PKPaymentButton" Kind="Class" />
      <Type Name="PKPaymentButton+PKPaymentButtonAppearance" Kind="Class" />
      <Type Name="PKPaymentButtonStyle" Kind="Enumeration" />
      <Type Name="PKPaymentButtonType" Kind="Enumeration" />
      <Type Name="PKPaymentMethod" Kind="Class" />
      <Type Name="PKPaymentMethodSelectedEventArgs" Kind="Class" />
      <Type Name="PKPaymentMethodType" Kind="Enumeration" />
      <Type Name="PKPaymentNetwork" Kind="Class" />
      <Type Name="PKPaymentPass" Kind="Class" />
      <Type Name="PKPaymentPassActivationState" Kind="Enumeration" />
      <Type Name="PKPaymentRequest" Kind="Class" />
      <Type Name="PKPaymentSelectedContactEventArgs" Kind="Class" />
      <Type Name="PKPaymentShippingAddressSelected" Kind="Delegate" />
      <Type Name="PKPaymentShippingAddressSelectedEventArgs" Kind="Class" />
      <Type Name="PKPaymentShippingMethodSelected" Kind="Delegate" />
      <Type Name="PKPaymentShippingMethodSelectedEventArgs" Kind="Class" />
      <Type Name="PKPaymentSummaryItem" Kind="Class" />
      <Type Name="PKPaymentSummaryItemType" Kind="Enumeration" />
      <Type Name="PKPaymentToken" Kind="Class" />
      <Type Name="PKShippingMethod" Kind="Class" />
      <Type Name="PKShippingType" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.Photos">
      <Type Name="IPHLivePhotoFrame" Kind="Interface" />
      <Type Name="IPHPhotoLibraryChangeObserver" Kind="Interface" />
      <Type Name="PHAdjustmentData" Kind="Class" />
      <Type Name="PHAsset" Kind="Class" />
      <Type Name="PHAssetBurstSelectionType" Kind="Enumeration" />
      <Type Name="PHAssetChangeRequest" Kind="Class" />
      <Type Name="PHAssetCollection" Kind="Class" />
      <Type Name="PHAssetCollectionChangeRequest" Kind="Class" />
      <Type Name="PHAssetCollectionSubtype" Kind="Enumeration" />
      <Type Name="PHAssetCollectionType" Kind="Enumeration" />
      <Type Name="PHAssetContentEditingInputExtensions" Kind="Class" />
      <Type Name="PHAssetCreationRequest" Kind="Class" />
      <Type Name="PHAssetEditOperation" Kind="Enumeration" />
      <Type Name="PHAssetImageProgressHandler" Kind="Delegate" />
      <Type Name="PHAssetMediaSubtype" Kind="Enumeration" />
      <Type Name="PHAssetMediaType" Kind="Enumeration" />
      <Type Name="PHAssetResource" Kind="Class" />
      <Type Name="PHAssetResourceCreationOptions" Kind="Class" />
      <Type Name="PHAssetResourceManager" Kind="Class" />
      <Type Name="PHAssetResourceRequestOptions" Kind="Class" />
      <Type Name="PHAssetResourceType" Kind="Enumeration" />
      <Type Name="PHAssetSourceType" Kind="Enumeration" />
      <Type Name="PHAssetVideoProgressHandler" Kind="Delegate" />
      <Type Name="PHAuthorizationStatus" Kind="Enumeration" />
      <Type Name="PHCachingImageManager" Kind="Class" />
      <Type Name="PHChange" Kind="Class" />
      <Type Name="PHChangeDetailEnumerator" Kind="Delegate" />
      <Type Name="PHCollection" Kind="Class" />
      <Type Name="PHCollectionEditOperation" Kind="Enumeration" />
      <Type Name="PHCollectionList" Kind="Class" />
      <Type Name="PHCollectionListChangeRequest" Kind="Class" />
      <Type Name="PHCollectionListSubtype" Kind="Enumeration" />
      <Type Name="PHCollectionListType" Kind="Enumeration" />
      <Type Name="PHContentEditingHandler" Kind="Delegate" />
      <Type Name="PHContentEditingInput" Kind="Class" />
      <Type Name="PHContentEditingInputRequestOptions" Kind="Class" />
      <Type Name="PHContentEditingOutput" Kind="Class" />
      <Type Name="PHFetchOptions" Kind="Class" />
      <Type Name="PHFetchResult" Kind="Class" />
      <Type Name="PHFetchResultChangeDetails" Kind="Class" />
      <Type Name="PHFetchResultEnumerator" Kind="Delegate" />
      <Type Name="PHImageContentMode" Kind="Enumeration" />
      <Type Name="PHImageDataHandler" Kind="Delegate" />
      <Type Name="PHImageKeys" Kind="Class" />
      <Type Name="PHImageManager" Kind="Class" />
      <Type Name="PHImageManagerRequestAvAssetHandler" Kind="Delegate" />
      <Type Name="PHImageManagerRequestExportHandler" Kind="Delegate" />
      <Type Name="PHImageManagerRequestLivePhoto" Kind="Delegate" />
      <Type Name="PHImageManagerRequestPlayerHandler" Kind="Delegate" />
      <Type Name="PHImageRequestOptions" Kind="Class" />
      <Type Name="PHImageRequestOptionsDeliveryMode" Kind="Enumeration" />
      <Type Name="PHImageRequestOptionsResizeMode" Kind="Enumeration" />
      <Type Name="PHImageRequestOptionsVersion" Kind="Enumeration" />
      <Type Name="PHImageResultHandler" Kind="Delegate" />
      <Type Name="PHLivePhoto" Kind="Class" />
      <Type Name="PHLivePhotoEditingContext" Kind="Class" />
      <Type Name="PHLivePhotoFrameProcessingBlock" Kind="Delegate" />
      <Type Name="PHLivePhotoFrameType" Kind="Enumeration" />
      <Type Name="PHLivePhotoInfo" Kind="Class" />
      <Type Name="PHLivePhotoRequestOptions" Kind="Class" />
      <Type Name="PHObject" Kind="Class" />
      <Type Name="PHObjectChangeDetails" Kind="Class" />
      <Type Name="PHObjectPlaceholder" Kind="Class" />
      <Type Name="PHPhotoLibrary" Kind="Class" />
      <Type Name="PHPhotoLibraryChangeObserver" Kind="Class" />
      <Type Name="PHProgressHandler" Kind="Delegate" />
      <Type Name="PHVideoRequestOptions" Kind="Class" />
      <Type Name="PHVideoRequestOptionsDeliveryMode" Kind="Enumeration" />
      <Type Name="PHVideoRequestOptionsVersion" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.PhotosUI">
      <Type Name="IPHContentEditingController" Kind="Interface" />
      <Type Name="IPHLivePhotoViewDelegate" Kind="Interface" />
      <Type Name="PHContentEditingController" Kind="Class" />
      <Type Name="PHLivePhotoBadgeOptions" Kind="Enumeration" />
      <Type Name="PHLivePhotoView" Kind="Class" />
      <Type Name="PHLivePhotoView+PHLivePhotoViewAppearance" Kind="Class" />
      <Type Name="PHLivePhotoViewDelegate" Kind="Class" />
      <Type Name="PHLivePhotoViewDelegate_Extensions" Kind="Class" />
      <Type Name="PHLivePhotoViewPlaybackStyle" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.PushKit">
      <Type Name="IPKPushRegistryDelegate" Kind="Interface" />
      <Type Name="PKPushCredentials" Kind="Class" />
      <Type Name="PKPushPayload" Kind="Class" />
      <Type Name="PKPushRegistry" Kind="Class" />
      <Type Name="PKPushRegistryDelegate" Kind="Class" />
      <Type Name="PKPushRegistryDelegate_Extensions" Kind="Class" />
      <Type Name="PKPushType" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.QuickLook">
      <Type Name="IQLPreviewControllerDataSource" Kind="Interface" />
      <Type Name="IQLPreviewControllerDelegate" Kind="Interface" />
      <Type Name="IQLPreviewItem" Kind="Interface" />
      <Type Name="QLFrame" Kind="Delegate" />
      <Type Name="QLOpenUrl" Kind="Delegate" />
      <Type Name="QLPreviewController" Kind="Class" />
      <Type Name="QLPreviewControllerDataSource" Kind="Class" />
      <Type Name="QLPreviewControllerDelegate" Kind="Class" />
      <Type Name="QLPreviewControllerDelegate_Extensions" Kind="Class" />
      <Type Name="QLPreviewItem" Kind="Class" />
      <Type Name="QLTransition" Kind="Delegate" />
      <Type Name="QLTransitionView" Kind="Delegate" />
    </Namespace>
    <Namespace Name="MonoTouch.ReplayKit">
      <Type Name="IRPBroadcastActivityViewControllerDelegate" Kind="Interface" />
      <Type Name="IRPBroadcastControllerDelegate" Kind="Interface" />
      <Type Name="IRPPreviewViewControllerDelegate" Kind="Interface" />
      <Type Name="IRPScreenRecorderDelegate" Kind="Interface" />
      <Type Name="LoadBroadcastingHandler" Kind="Delegate" />
      <Type Name="NSExtensionContext_RPBroadcastExtension" Kind="Class" />
      <Type Name="RPBroadcastActivityViewController" Kind="Class" />
      <Type Name="RPBroadcastActivityViewControllerDelegate" Kind="Class" />
      <Type Name="RPBroadcastConfiguration" Kind="Class" />
      <Type Name="RPBroadcastController" Kind="Class" />
      <Type Name="RPBroadcastControllerDelegate" Kind="Class" />
      <Type Name="RPBroadcastHandler" Kind="Class" />
      <Type Name="RPBroadcastMP4ClipHandler" Kind="Class" />
      <Type Name="RPBroadcastSampleHandler" Kind="Class" />
      <Type Name="RPPreviewViewController" Kind="Class" />
      <Type Name="RPPreviewViewControllerDelegate" Kind="Class" />
      <Type Name="RPPreviewViewControllerDelegate_Extensions" Kind="Class" />
      <Type Name="RPRecordingError" Kind="Enumeration" />
      <Type Name="RPRecordingErrorExtensions" Kind="Class" />
      <Type Name="RPSampleBufferType" Kind="Enumeration" />
      <Type Name="RPScreenRecorder" Kind="Class" />
      <Type Name="RPScreenRecorderDelegate" Kind="Class" />
      <Type Name="RPScreenRecorderDelegate_Extensions" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.SafariServices">
      <Type Name="ISFSafariViewControllerDelegate" Kind="Interface" />
      <Type Name="SFContentBlockerErrorCode" Kind="Enumeration" />
      <Type Name="SFContentBlockerErrorCodeExtensions" Kind="Class" />
      <Type Name="SFContentBlockerManager" Kind="Class" />
      <Type Name="SFContentBlockerState" Kind="Class" />
      <Type Name="SFSafariViewController" Kind="Class" />
      <Type Name="SFSafariViewControllerConfiguration" Kind="Class" />
      <Type Name="SFSafariViewControllerDelegate" Kind="Class" />
      <Type Name="SFSafariViewControllerDelegate_Extensions" Kind="Class" />
      <Type Name="SSReadingList" Kind="Class" />
      <Type Name="SSReadingListError" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.SceneKit">
      <Type Name="_SCNShaderModifiers" Kind="Class" />
      <Type Name="ISCNActionable" Kind="Interface" />
      <Type Name="ISCNAnimatable" Kind="Interface" />
      <Type Name="ISCNBoundingVolume" Kind="Interface" />
      <Type Name="ISCNBufferStream" Kind="Interface" />
      <Type Name="ISCNNodeRendererDelegate" Kind="Interface" />
      <Type Name="ISCNPhysicsContactDelegate" Kind="Interface" />
      <Type Name="ISCNProgramDelegate" Kind="Interface" />
      <Type Name="ISCNSceneExportDelegate" Kind="Interface" />
      <Type Name="ISCNSceneRenderer" Kind="Interface" />
      <Type Name="ISCNSceneRendererDelegate" Kind="Interface" />
      <Type Name="ISCNShadable" Kind="Interface" />
      <Type Name="ISCNTechniqueSupport" Kind="Interface" />
      <Type Name="SCNAction" Kind="Class" />
      <Type Name="SCNActionable" Kind="Class" />
      <Type Name="SCNActionable_Extensions" Kind="Class" />
      <Type Name="SCNActionNodeWithElapsedTimeHandler" Kind="Delegate" />
      <Type Name="SCNActionTimingMode" Kind="Enumeration" />
      <Type Name="SCNAnimatable" Kind="Class" />
      <Type Name="SCNAnimationEvent" Kind="Class" />
      <Type Name="SCNAnimationEventHandler" Kind="Delegate" />
      <Type Name="SCNAnimationImportPolicy" Kind="Enumeration" />
      <Type Name="SCNAntialiasingMode" Kind="Enumeration" />
      <Type Name="SCNAudioPlayer" Kind="Class" />
      <Type Name="SCNAudioSource" Kind="Class" />
      <Type Name="SCNBillboardAxis" Kind="Enumeration" />
      <Type Name="SCNBillboardConstraint" Kind="Class" />
      <Type Name="SCNBindingHandler" Kind="Delegate" />
      <Type Name="SCNBlendMode" Kind="Enumeration" />
      <Type Name="SCNBoundingVolume" Kind="Class" />
      <Type Name="SCNBox" Kind="Class" />
      <Type Name="SCNBufferBindingHandler" Kind="Delegate" />
      <Type Name="SCNBufferFrequency" Kind="Enumeration" />
      <Type Name="SCNCamera" Kind="Class" />
      <Type Name="SCNCapsule" Kind="Class" />
      <Type Name="SCNChamferMode" Kind="Enumeration" />
      <Type Name="SCNCone" Kind="Class" />
      <Type Name="SCNConstraint" Kind="Class" />
      <Type Name="SCNCullMode" Kind="Enumeration" />
      <Type Name="SCNCylinder" Kind="Class" />
      <Type Name="SCNDebugOptions" Kind="Enumeration" />
      <Type Name="SCNErrorCode" Kind="Enumeration" />
      <Type Name="SCNErrorCodeExtensions" Kind="Class" />
      <Type Name="SCNFieldForceEvaluator" Kind="Delegate" />
      <Type Name="SCNFilterMode" Kind="Enumeration" />
      <Type Name="SCNFloor" Kind="Class" />
      <Type Name="SCNGeometry" Kind="Class" />
      <Type Name="SCNGeometryElement" Kind="Class" />
      <Type Name="SCNGeometryPrimitiveType" Kind="Enumeration" />
      <Type Name="SCNGeometrySource" Kind="Class" />
      <Type Name="SCNGeometrySourceSemantic" Kind="Class" />
      <Type Name="SCNGeometrySourceSemantics" Kind="Enumeration" />
      <Type Name="SCNHitTest" Kind="Class" />
      <Type Name="SCNHitTestOptions" Kind="Class" />
      <Type Name="SCNHitTestResult" Kind="Class" />
      <Type Name="SCNIKConstraint" Kind="Class" />
      <Type Name="SCNJavaScript" Kind="Class" />
      <Type Name="SCNLevelOfDetail" Kind="Class" />
      <Type Name="SCNLight" Kind="Class" />
      <Type Name="SCNLightingModel" Kind="Class" />
      <Type Name="SCNLightType" Kind="Class" />
      <Type Name="SCNLookAtConstraint" Kind="Class" />
      <Type Name="SCNMaterial" Kind="Class" />
      <Type Name="SCNMaterialProperty" Kind="Class" />
      <Type Name="SCNMatrix4" Kind="Structure" />
      <Type Name="SCNMorpher" Kind="Class" />
      <Type Name="SCNMorpherCalculationMode" Kind="Enumeration" />
      <Type Name="SCNNode" Kind="Class" />
      <Type Name="SCNNodePredicate" Kind="Delegate" />
      <Type Name="SCNNodeRendererDelegate" Kind="Class" />
      <Type Name="SCNNodeRendererDelegate_Extensions" Kind="Class" />
      <Type Name="SCNParticleBirthDirection" Kind="Enumeration" />
      <Type Name="SCNParticleBirthLocation" Kind="Enumeration" />
      <Type Name="SCNParticleBlendMode" Kind="Enumeration" />
      <Type Name="SCNParticleEvent" Kind="Enumeration" />
      <Type Name="SCNParticleEventHandler" Kind="Delegate" />
      <Type Name="SCNParticleImageSequenceAnimationMode" Kind="Enumeration" />
      <Type Name="SCNParticleInputMode" Kind="Enumeration" />
      <Type Name="SCNParticleModifierHandler" Kind="Delegate" />
      <Type Name="SCNParticleModifierStage" Kind="Enumeration" />
      <Type Name="SCNParticleOrientationMode" Kind="Enumeration" />
      <Type Name="SCNParticleProperty" Kind="Class" />
      <Type Name="SCNParticlePropertyController" Kind="Class" />
      <Type Name="SCNParticleSortingMode" Kind="Enumeration" />
      <Type Name="SCNParticleSystem" Kind="Class" />
      <Type Name="SCNPhysicsBallSocketJoint" Kind="Class" />
      <Type Name="SCNPhysicsBehavior" Kind="Class" />
      <Type Name="SCNPhysicsBody" Kind="Class" />
      <Type Name="SCNPhysicsBodyType" Kind="Enumeration" />
      <Type Name="SCNPhysicsCollisionCategory" Kind="Enumeration" />
      <Type Name="SCNPhysicsContact" Kind="Class" />
      <Type Name="SCNPhysicsContactDelegate" Kind="Class" />
      <Type Name="SCNPhysicsContactDelegate_Extensions" Kind="Class" />
      <Type Name="SCNPhysicsContactEventArgs" Kind="Class" />
      <Type Name="SCNPhysicsField" Kind="Class" />
      <Type Name="SCNPhysicsFieldScope" Kind="Enumeration" />
      <Type Name="SCNPhysicsHingeJoint" Kind="Class" />
      <Type Name="SCNPhysicsSearchMode" Kind="Enumeration" />
      <Type Name="SCNPhysicsShape" Kind="Class" />
      <Type Name="SCNPhysicsShapeOptions" Kind="Class" />
      <Type Name="SCNPhysicsShapeOptionsKeys" Kind="Class" />
      <Type Name="SCNPhysicsShapeOptionsTypes" Kind="Class" />
      <Type Name="SCNPhysicsShapeType" Kind="Enumeration" />
      <Type Name="SCNPhysicsSliderJoint" Kind="Class" />
      <Type Name="SCNPhysicsTest" Kind="Class" />
      <Type Name="SCNPhysicsTestKeys" Kind="Class" />
      <Type Name="SCNPhysicsTestSearchModeKeys" Kind="Class" />
      <Type Name="SCNPhysicsVehicle" Kind="Class" />
      <Type Name="SCNPhysicsVehicleWheel" Kind="Class" />
      <Type Name="SCNPhysicsWorld" Kind="Class" />
      <Type Name="SCNPlane" Kind="Class" />
      <Type Name="SCNProgram" Kind="Class" />
      <Type Name="SCNProgramDelegate" Kind="Class" />
      <Type Name="SCNProgramDelegate_Extensions" Kind="Class" />
      <Type Name="SCNProgramSemanticOptions" Kind="Class" />
      <Type Name="SCNPropertyControllers" Kind="Class" />
      <Type Name="SCNPyramid" Kind="Class" />
      <Type Name="SCNQuaternion" Kind="Structure" />
      <Type Name="SCNReferenceLoadingPolicy" Kind="Enumeration" />
      <Type Name="SCNReferenceNode" Kind="Class" />
      <Type Name="SCNRenderer" Kind="Class" />
      <Type Name="SCNRenderingApi" Kind="Enumeration" />
      <Type Name="SCNRenderingArguments" Kind="Class" />
      <Type Name="SCNRenderingOptions" Kind="Class" />
      <Type Name="SCNScene" Kind="Class" />
      <Type Name="SCNSceneExportDelegate" Kind="Class" />
      <Type Name="SCNSceneExportDelegate_Extensions" Kind="Class" />
      <Type Name="SCNSceneLoadingOptions" Kind="Class" />
      <Type Name="SCNSceneRenderer" Kind="Class" />
      <Type Name="SCNSceneRenderer_Extensions" Kind="Class" />
      <Type Name="SCNSceneRendererDelegate" Kind="Class" />
      <Type Name="SCNSceneRendererDelegate_Extensions" Kind="Class" />
      <Type Name="SCNSceneSource" Kind="Class" />
      <Type Name="SCNSceneSourceFilter" Kind="Delegate" />
      <Type Name="SCNSceneSourceLoadErrors" Kind="Class" />
      <Type Name="SCNSceneSourceLoading" Kind="Class" />
      <Type Name="SCNSceneSourceProperties" Kind="Class" />
      <Type Name="SCNSceneSourceStatus" Kind="Enumeration" />
      <Type Name="SCNSceneSourceStatusHandler" Kind="Delegate" />
      <Type Name="SCNShadable" Kind="Class" />
      <Type Name="SCNShadable_Extensions" Kind="Class" />
      <Type Name="SCNShaderModifiers" Kind="Class" />
      <Type Name="SCNShadowMode" Kind="Enumeration" />
      <Type Name="SCNShape" Kind="Class" />
      <Type Name="SCNSkinner" Kind="Class" />
      <Type Name="SCNSphere" Kind="Class" />
      <Type Name="SCNTechnique" Kind="Class" />
      <Type Name="SCNTechniqueSupport" Kind="Class" />
      <Type Name="SCNText" Kind="Class" />
      <Type Name="SCNTorus" Kind="Class" />
      <Type Name="SCNTransaction" Kind="Class" />
      <Type Name="SCNTransformConstraint" Kind="Class" />
      <Type Name="SCNTransformConstraintHandler" Kind="Delegate" />
      <Type Name="SCNTransparencyMode" Kind="Enumeration" />
      <Type Name="SCNTube" Kind="Class" />
      <Type Name="SCNVector3" Kind="Structure" />
      <Type Name="SCNVector4" Kind="Structure" />
      <Type Name="SCNView" Kind="Class" />
      <Type Name="SCNView+SCNViewAppearance" Kind="Class" />
      <Type Name="SCNWrapMode" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.Security">
      <Type Name="SecAccessControl" Kind="Class" />
      <Type Name="SecAccessControlCreateFlags" Kind="Enumeration" />
      <Type Name="SecAccessible" Kind="Enumeration" />
      <Type Name="SecAuthenticationType" Kind="Enumeration" />
      <Type Name="SecAuthenticationUI" Kind="Enumeration" />
      <Type Name="SecAuthenticationUIExtensions" Kind="Class" />
      <Type Name="SecCertificate" Kind="Class" />
      <Type Name="SecIdentity" Kind="Class" />
      <Type Name="SecImportExport" Kind="Class" />
      <Type Name="SecKey" Kind="Class" />
      <Type Name="SecKeyChain" Kind="Class" />
      <Type Name="SecKeyClass" Kind="Enumeration" />
      <Type Name="SecKeyType" Kind="Enumeration" />
      <Type Name="SecKind" Kind="Enumeration" />
      <Type Name="SecMatchLimit" Kind="Class" />
      <Type Name="SecPadding" Kind="Enumeration" />
      <Type Name="SecPolicy" Kind="Class" />
      <Type Name="SecPolicyIdentifier" Kind="Class" />
      <Type Name="SecPolicyPropertyKey" Kind="Class" />
      <Type Name="SecProtocol" Kind="Enumeration" />
      <Type Name="SecRecord" Kind="Class" />
      <Type Name="SecRevocation" Kind="Enumeration" />
      <Type Name="SecSharedCredential" Kind="Class" />
      <Type Name="SecStatusCode" Kind="Enumeration" />
      <Type Name="SecTokenID" Kind="Enumeration" />
      <Type Name="SecTokenIDExtensions" Kind="Class" />
      <Type Name="SecTrust" Kind="Class" />
      <Type Name="SecTrustPropertyKey" Kind="Class" />
      <Type Name="SecTrustResult" Kind="Enumeration" />
      <Type Name="SecTrustResultKey" Kind="Class" />
      <Type Name="SecurityException" Kind="Class" />
      <Type Name="SslAuthenticate" Kind="Enumeration" />
      <Type Name="SslCipherSuite" Kind="Enumeration" />
      <Type Name="SslClientCertificateState" Kind="Enumeration" />
      <Type Name="SslConnection" Kind="Class" />
      <Type Name="SslConnectionType" Kind="Enumeration" />
      <Type Name="SslContext" Kind="Class" />
      <Type Name="SslProtocol" Kind="Enumeration" />
      <Type Name="SslProtocolSide" Kind="Enumeration" />
      <Type Name="SslSessionOption" Kind="Enumeration" />
      <Type Name="SslSessionState" Kind="Enumeration" />
      <Type Name="SslSessionStrengthPolicy" Kind="Enumeration" />
      <Type Name="SslStatus" Kind="Enumeration" />
      <Type Name="SslStreamConnection" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.Social">
      <Type Name="SLComposeServiceViewController" Kind="Class" />
      <Type Name="SLComposeSheetConfigurationItem" Kind="Class" />
      <Type Name="SLComposeViewController" Kind="Class" />
      <Type Name="SLComposeViewControllerResult" Kind="Enumeration" />
      <Type Name="SLRequest" Kind="Class" />
      <Type Name="SLRequestMethod" Kind="Enumeration" />
      <Type Name="SLRequestResult" Kind="Class" />
      <Type Name="SLServiceKind" Kind="Enumeration" />
      <Type Name="SLServiceType" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.Speech">
      <Type Name="ISFSpeechRecognitionTaskDelegate" Kind="Interface" />
      <Type Name="ISFSpeechRecognizerDelegate" Kind="Interface" />
      <Type Name="SFSpeechAudioBufferRecognitionRequest" Kind="Class" />
      <Type Name="SFSpeechRecognitionRequest" Kind="Class" />
      <Type Name="SFSpeechRecognitionResult" Kind="Class" />
      <Type Name="SFSpeechRecognitionTask" Kind="Class" />
      <Type Name="SFSpeechRecognitionTaskDelegate" Kind="Class" />
      <Type Name="SFSpeechRecognitionTaskDelegate_Extensions" Kind="Class" />
      <Type Name="SFSpeechRecognitionTaskHint" Kind="Enumeration" />
      <Type Name="SFSpeechRecognitionTaskState" Kind="Enumeration" />
      <Type Name="SFSpeechRecognizer" Kind="Class" />
      <Type Name="SFSpeechRecognizerAuthorizationStatus" Kind="Enumeration" />
      <Type Name="SFSpeechRecognizerDelegate" Kind="Class" />
      <Type Name="SFSpeechRecognizerDelegate_Extensions" Kind="Class" />
      <Type Name="SFSpeechUrlRecognitionRequest" Kind="Class" />
      <Type Name="SFTranscription" Kind="Class" />
      <Type Name="SFTranscriptionSegment" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.SpriteKit">
      <Type Name="ISKPhysicsContactDelegate" Kind="Interface" />
      <Type Name="ISKSceneDelegate" Kind="Interface" />
      <Type Name="SK3DNode" Kind="Class" />
      <Type Name="SKAction" Kind="Class" />
      <Type Name="SKActionDurationHandler" Kind="Delegate" />
      <Type Name="SKActionTimingFunction" Kind="Delegate" />
      <Type Name="SKActionTimingMode" Kind="Enumeration" />
      <Type Name="SKAudioNode" Kind="Class" />
      <Type Name="SKBlendMode" Kind="Enumeration" />
      <Type Name="SKCameraNode" Kind="Class" />
      <Type Name="SKConstraint" Kind="Class" />
      <Type Name="SKCropNode" Kind="Class" />
      <Type Name="SKEffectNode" Kind="Class" />
      <Type Name="SKEmitterNode" Kind="Class" />
      <Type Name="SKFieldForceEvaluator" Kind="Delegate" />
      <Type Name="SKFieldNode" Kind="Class" />
      <Type Name="SKInterpolationMode" Kind="Enumeration" />
      <Type Name="SKKeyframeSequence" Kind="Class" />
      <Type Name="SKLabelHorizontalAlignmentMode" Kind="Enumeration" />
      <Type Name="SKLabelNode" Kind="Class" />
      <Type Name="SKLabelVerticalAlignmentMode" Kind="Enumeration" />
      <Type Name="SKLightNode" Kind="Class" />
      <Type Name="SKMutableTexture" Kind="Class" />
      <Type Name="SKNode" Kind="Class" />
      <Type Name="SKNodeChildEnumeratorHandler" Kind="Delegate" />
      <Type Name="SKNodeTouches_UITouch" Kind="Class" />
      <Type Name="SKParticleRenderOrder" Kind="Enumeration" />
      <Type Name="SKPhysicsBody" Kind="Class" />
      <Type Name="SKPhysicsContact" Kind="Class" />
      <Type Name="SKPhysicsContactDelegate" Kind="Class" />
      <Type Name="SKPhysicsContactDelegate_Extensions" Kind="Class" />
      <Type Name="SKPhysicsJoint" Kind="Class" />
      <Type Name="SKPhysicsJointFixed" Kind="Class" />
      <Type Name="SKPhysicsJointLimit" Kind="Class" />
      <Type Name="SKPhysicsJointPin" Kind="Class" />
      <Type Name="SKPhysicsJointSliding" Kind="Class" />
      <Type Name="SKPhysicsJointSpring" Kind="Class" />
      <Type Name="SKPhysicsWorld" Kind="Class" />
      <Type Name="SKPhysicsWorldBodiesAlongRayStartEnumeratorHandler" Kind="Delegate" />
      <Type Name="SKPhysicsWorldBodiesEnumeratorHandler" Kind="Delegate" />
      <Type Name="SKRange" Kind="Class" />
      <Type Name="SKReachConstraints" Kind="Class" />
      <Type Name="SKReferenceNode" Kind="Class" />
      <Type Name="SKRegion" Kind="Class" />
      <Type Name="SKRepeatMode" Kind="Enumeration" />
      <Type Name="SKScene" Kind="Class" />
      <Type Name="SKSceneDelegate" Kind="Class" />
      <Type Name="SKSceneDelegate_Extensions" Kind="Class" />
      <Type Name="SKSceneScaleMode" Kind="Enumeration" />
      <Type Name="SKShader" Kind="Class" />
      <Type Name="SKShapeNode" Kind="Class" />
      <Type Name="SKSpriteNode" Kind="Class" />
      <Type Name="SKTexture" Kind="Class" />
      <Type Name="SKTextureAtlas" Kind="Class" />
      <Type Name="SKTextureAtlasLoadCallback" Kind="Delegate" />
      <Type Name="SKTextureAtlasLoadResult" Kind="Class" />
      <Type Name="SKTextureFilteringMode" Kind="Enumeration" />
      <Type Name="SKTextureModify" Kind="Delegate" />
      <Type Name="SKTransition" Kind="Class" />
      <Type Name="SKTransitionDirection" Kind="Enumeration" />
      <Type Name="SKUniform" Kind="Class" />
      <Type Name="SKUniformType" Kind="Enumeration" />
      <Type Name="SKVideoNode" Kind="Class" />
      <Type Name="SKView" Kind="Class" />
      <Type Name="SKView+SKViewAppearance" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.StoreKit">
      <Type Name="ISKPaymentTransactionObserver" Kind="Interface" />
      <Type Name="ISKProductsRequestDelegate" Kind="Interface" />
      <Type Name="ISKRequestDelegate" Kind="Interface" />
      <Type Name="ISKStoreProductViewControllerDelegate" Kind="Interface" />
      <Type Name="SKCloudServiceAuthorizationStatus" Kind="Enumeration" />
      <Type Name="SKCloudServiceCapability" Kind="Enumeration" />
      <Type Name="SKCloudServiceController" Kind="Class" />
      <Type Name="SKCloudServiceController+Notifications" Kind="Class" />
      <Type Name="SKDownload" Kind="Class" />
      <Type Name="SKDownloadState" Kind="Enumeration" />
      <Type Name="SKError" Kind="Enumeration" />
      <Type Name="SKErrorExtensions" Kind="Class" />
      <Type Name="SKMutablePayment" Kind="Class" />
      <Type Name="SKPayment" Kind="Class" />
      <Type Name="SKPaymentQueue" Kind="Class" />
      <Type Name="SKPaymentTransaction" Kind="Class" />
      <Type Name="SKPaymentTransactionObserver" Kind="Class" />
      <Type Name="SKPaymentTransactionObserver_Extensions" Kind="Class" />
      <Type Name="SKPaymentTransactionState" Kind="Enumeration" />
      <Type Name="SKProduct" Kind="Class" />
      <Type Name="SKProductsRequest" Kind="Class" />
      <Type Name="SKProductsRequestDelegate" Kind="Class" />
      <Type Name="SKProductsRequestResponseEventArgs" Kind="Class" />
      <Type Name="SKProductsResponse" Kind="Class" />
      <Type Name="SKReceiptProperties" Kind="Class" />
      <Type Name="SKReceiptRefreshRequest" Kind="Class" />
      <Type Name="SKRequest" Kind="Class" />
      <Type Name="SKRequestDelegate" Kind="Class" />
      <Type Name="SKRequestDelegate_Extensions" Kind="Class" />
      <Type Name="SKRequestErrorEventArgs" Kind="Class" />
      <Type Name="SKStoreProductParameterKey" Kind="Class" />
      <Type Name="SKStoreProductViewController" Kind="Class" />
      <Type Name="SKStoreProductViewControllerDelegate" Kind="Class" />
      <Type Name="SKStoreProductViewControllerDelegate_Extensions" Kind="Class" />
      <Type Name="StoreProductParameters" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.SystemConfiguration">
      <Type Name="CaptiveNetwork" Kind="Class" />
      <Type Name="NetworkReachability" Kind="Class" />
      <Type Name="NetworkReachability+Notification" Kind="Delegate" />
      <Type Name="NetworkReachabilityFlags" Kind="Enumeration" />
      <Type Name="StatusCode" Kind="Enumeration" />
      <Type Name="StatusCodeError" Kind="Class" />
      <Type Name="StatusCodeExtensions" Kind="Class" />
      <Type Name="SystemConfigurationException" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.Twitter">
      <Type Name="TWRequest" Kind="Class" />
      <Type Name="TWRequestHandler" Kind="Delegate" />
      <Type Name="TWRequestMethod" Kind="Enumeration" />
      <Type Name="TWRequestResult" Kind="Class" />
      <Type Name="TWTweetComposeViewController" Kind="Class" />
      <Type Name="TWTweetComposeViewControllerResult" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.UIKit">
      <Type Name="DraggingEventArgs" Kind="Class" />
      <Type Name="INSLayoutManagerDelegate" Kind="Interface" />
      <Type Name="INSTextAttachmentContainer" Kind="Interface" />
      <Type Name="INSTextLayoutOrientationProvider" Kind="Interface" />
      <Type Name="INSTextStorageDelegate" Kind="Interface" />
      <Type Name="IUIAccelerometerDelegate" Kind="Interface" />
      <Type Name="IUIAccessibilityContainer" Kind="Interface" />
      <Type Name="IUIAccessibilityIdentification" Kind="Interface" />
      <Type Name="IUIAccessibilityReadingContent" Kind="Interface" />
      <Type Name="IUIActionSheetDelegate" Kind="Interface" />
      <Type Name="IUIActivityItemSource" Kind="Interface" />
      <Type Name="IUIAdaptivePresentationControllerDelegate" Kind="Interface" />
      <Type Name="IUIAlertViewDelegate" Kind="Interface" />
      <Type Name="IUIAppearance" Kind="Interface" />
      <Type Name="IUIAppearanceContainer" Kind="Interface" />
      <Type Name="IUIApplicationDelegate" Kind="Interface" />
      <Type Name="IUIBarPositioning" Kind="Interface" />
      <Type Name="IUIBarPositioningDelegate" Kind="Interface" />
      <Type Name="IUICollectionViewDataSource" Kind="Interface" />
      <Type Name="IUICollectionViewDataSourcePrefetching" Kind="Interface" />
      <Type Name="IUICollectionViewDelegate" Kind="Interface" />
      <Type Name="IUICollectionViewDelegateFlowLayout" Kind="Interface" />
      <Type Name="IUICollectionViewSource" Kind="Interface" />
      <Type Name="IUICollisionBehaviorDelegate" Kind="Interface" />
      <Type Name="IUIContentContainer" Kind="Interface" />
      <Type Name="IUIContentSizeCategoryAdjusting" Kind="Interface" />
      <Type Name="IUICoordinateSpace" Kind="Interface" />
      <Type Name="IUIDataSourceModelAssociation" Kind="Interface" />
      <Type Name="IUIDocumentInteractionControllerDelegate" Kind="Interface" />
      <Type Name="IUIDocumentMenuDelegate" Kind="Interface" />
      <Type Name="IUIDocumentPickerDelegate" Kind="Interface" />
      <Type Name="IUIDynamicAnimatorDelegate" Kind="Interface" />
      <Type Name="IUIDynamicItem" Kind="Interface" />
      <Type Name="IUIFocusEnvironment" Kind="Interface" />
      <Type Name="IUIFocusItem" Kind="Interface" />
      <Type Name="IUIGestureRecognizerDelegate" Kind="Interface" />
      <Type Name="IUIGuidedAccessRestrictionDelegate" Kind="Interface" />
      <Type Name="IUIImagePickerControllerDelegate" Kind="Interface" />
      <Type Name="IUIInputViewAudioFeedback" Kind="Interface" />
      <Type Name="IUIKeyInput" Kind="Interface" />
      <Type Name="IUILayoutSupport" Kind="Interface" />
      <Type Name="IUINavigationBarDelegate" Kind="Interface" />
      <Type Name="IUINavigationControllerDelegate" Kind="Interface" />
      <Type Name="IUIObjectRestoration" Kind="Interface" />
      <Type Name="IUIPageViewControllerDataSource" Kind="Interface" />
      <Type Name="IUIPageViewControllerDelegate" Kind="Interface" />
      <Type Name="IUIPickerViewAccessibilityDelegate" Kind="Interface" />
      <Type Name="IUIPickerViewDataSource" Kind="Interface" />
      <Type Name="IUIPickerViewDelegate" Kind="Interface" />
      <Type Name="IUIPickerViewModel" Kind="Interface" />
      <Type Name="IUIPopoverBackgroundViewMethods" Kind="Interface" />
      <Type Name="IUIPopoverControllerDelegate" Kind="Interface" />
      <Type Name="IUIPopoverPresentationControllerDelegate" Kind="Interface" />
      <Type Name="IUIPreviewActionItem" Kind="Interface" />
      <Type Name="IUIPrinterPickerControllerDelegate" Kind="Interface" />
      <Type Name="IUIPrintInteractionControllerDelegate" Kind="Interface" />
      <Type Name="IUIScrollViewAccessibilityDelegate" Kind="Interface" />
      <Type Name="IUIScrollViewDelegate" Kind="Interface" />
      <Type Name="IUISearchBarDelegate" Kind="Interface" />
      <Type Name="IUISearchControllerDelegate" Kind="Interface" />
      <Type Name="IUISearchDisplayDelegate" Kind="Interface" />
      <Type Name="IUISearchResultsUpdating" Kind="Interface" />
      <Type Name="IUISplitViewControllerDelegate" Kind="Interface" />
      <Type Name="IUIStateRestoring" Kind="Interface" />
      <Type Name="IUITabBarControllerDelegate" Kind="Interface" />
      <Type Name="IUITabBarDelegate" Kind="Interface" />
      <Type Name="IUITableViewDataSource" Kind="Interface" />
      <Type Name="IUITableViewDataSourcePrefetching" Kind="Interface" />
      <Type Name="IUITableViewDelegate" Kind="Interface" />
      <Type Name="IUITextDocumentProxy" Kind="Interface" />
      <Type Name="IUITextFieldDelegate" Kind="Interface" />
      <Type Name="IUITextInput" Kind="Interface" />
      <Type Name="IUITextInputDelegate" Kind="Interface" />
      <Type Name="IUITextInputTokenizer" Kind="Interface" />
      <Type Name="IUITextInputTraits" Kind="Interface" />
      <Type Name="IUITextViewDelegate" Kind="Interface" />
      <Type Name="IUITimingCurveProvider" Kind="Interface" />
      <Type Name="IUIToolbarDelegate" Kind="Interface" />
      <Type Name="IUITraitEnvironment" Kind="Interface" />
      <Type Name="IUIVideoEditorControllerDelegate" Kind="Interface" />
      <Type Name="IUIViewAnimating" Kind="Interface" />
      <Type Name="IUIViewControllerAnimatedTransitioning" Kind="Interface" />
      <Type Name="IUIViewControllerContextTransitioning" Kind="Interface" />
      <Type Name="IUIViewControllerInteractiveTransitioning" Kind="Interface" />
      <Type Name="IUIViewControllerPreviewing" Kind="Interface" />
      <Type Name="IUIViewControllerPreviewingDelegate" Kind="Interface" />
      <Type Name="IUIViewControllerRestoration" Kind="Interface" />
      <Type Name="IUIViewControllerTransitionCoordinator" Kind="Interface" />
      <Type Name="IUIViewControllerTransitionCoordinatorContext" Kind="Interface" />
      <Type Name="IUIViewControllerTransitioningDelegate" Kind="Interface" />
      <Type Name="IUIViewImplicitlyAnimating" Kind="Interface" />
      <Type Name="IUIWebViewDelegate" Kind="Interface" />
      <Type Name="NSAttributedString_NSAttributedStringKitAdditions" Kind="Class" />
      <Type Name="NSAttributedStringAttachmentConveniences" Kind="Class" />
      <Type Name="NSCoder_UIGeometryKeyedCoding" Kind="Class" />
      <Type Name="NSControlCharacterAction" Kind="Enumeration" />
      <Type Name="NSDataAsset" Kind="Class" />
      <Type Name="NSExtendedStringDrawing" Kind="Class" />
      <Type Name="NSFileProviderExtension" Kind="Class" />
      <Type Name="NSGlyphProperty" Kind="Enumeration" />
      <Type Name="NSIdentifier" Kind="Class" />
      <Type Name="NSLayoutAnchor`1" DisplayName="NSLayoutAnchor&lt;AnchorType&gt;" Kind="Class" />
      <Type Name="NSLayoutAttribute" Kind="Enumeration" />
      <Type Name="NSLayoutConstraint" Kind="Class" />
      <Type Name="NSLayoutDimension" Kind="Class" />
      <Type Name="NSLayoutFormatOptions" Kind="Enumeration" />
      <Type Name="NSLayoutManager" Kind="Class" />
      <Type Name="NSLayoutManagerDelegate" Kind="Class" />
      <Type Name="NSLayoutManagerDelegate_Extensions" Kind="Class" />
      <Type Name="NSLayoutRelation" Kind="Enumeration" />
      <Type Name="NSLayoutXAxisAnchor" Kind="Class" />
      <Type Name="NSLayoutYAxisAnchor" Kind="Class" />
      <Type Name="NSMutableAttributedStringKitAdditions" Kind="Class" />
      <Type Name="NSMutableParagraphStyle" Kind="Class" />
      <Type Name="NSParagraphStyle" Kind="Class" />
      <Type Name="NSShadow" Kind="Class" />
      <Type Name="NSStringDrawing" Kind="Class" />
      <Type Name="NSTextAttachment" Kind="Class" />
      <Type Name="NSTextAttachmentContainer" Kind="Class" />
      <Type Name="NSTextContainer" Kind="Class" />
      <Type Name="NSTextEffect" Kind="Enumeration" />
      <Type Name="NSTextLayoutEnumerateEnclosingRects" Kind="Delegate" />
      <Type Name="NSTextLayoutEnumerateLineFragments" Kind="Delegate" />
      <Type Name="NSTextLayoutOrientation" Kind="Enumeration" />
      <Type Name="NSTextStorage" Kind="Class" />
      <Type Name="NSTextStorage+Notifications" Kind="Class" />
      <Type Name="NSTextStorageDelegate" Kind="Class" />
      <Type Name="NSTextStorageDelegate_Extensions" Kind="Class" />
      <Type Name="NSTextStorageEditActions" Kind="Enumeration" />
      <Type Name="NSTextStorageEventArgs" Kind="Class" />
      <Type Name="NSTextTab" Kind="Class" />
      <Type Name="NSWritingDirectionFormatType" Kind="Enumeration" />
      <Type Name="ShouldDismiss" Kind="Delegate" />
      <Type Name="TransitionCoordinator_UIViewController" Kind="Class" />
      <Type Name="UIAcceleration" Kind="Class" />
      <Type Name="UIAccelerometer" Kind="Class" />
      <Type Name="UIAccelerometerDelegate" Kind="Class" />
      <Type Name="UIAccelerometerDelegate_Extensions" Kind="Class" />
      <Type Name="UIAccelerometerEventArgs" Kind="Class" />
      <Type Name="UIAccessibility" Kind="Class" />
      <Type Name="UIAccessibilityAnnouncementFinishedEventArgs" Kind="Class" />
      <Type Name="UIAccessibilityContainer_Extensions" Kind="Class" />
      <Type Name="UIAccessibilityCustomAction" Kind="Class" />
      <Type Name="UIAccessibilityElement" Kind="Class" />
      <Type Name="UIAccessibilityNavigationStyle" Kind="Enumeration" />
      <Type Name="UIAccessibilityPostNotification" Kind="Enumeration" />
      <Type Name="UIAccessibilityScrollDirection" Kind="Enumeration" />
      <Type Name="UIAccessibilityTrait" Kind="Enumeration" />
      <Type Name="UIAccessibilityZoomType" Kind="Enumeration" />
      <Type Name="UIActionSheet" Kind="Class" />
      <Type Name="UIActionSheet+UIActionSheetAppearance" Kind="Class" />
      <Type Name="UIActionSheetDelegate" Kind="Class" />
      <Type Name="UIActionSheetDelegate_Extensions" Kind="Class" />
      <Type Name="UIActionSheetStyle" Kind="Enumeration" />
      <Type Name="UIActivity" Kind="Class" />
      <Type Name="UIActivityCategory" Kind="Enumeration" />
      <Type Name="UIActivityIndicatorView" Kind="Class" />
      <Type Name="UIActivityIndicatorView+UIActivityIndicatorViewAppearance" Kind="Class" />
      <Type Name="UIActivityIndicatorViewStyle" Kind="Enumeration" />
      <Type Name="UIActivityItemProvider" Kind="Class" />
      <Type Name="UIActivityItemSource" Kind="Class" />
      <Type Name="UIActivityItemSource_Extensions" Kind="Class" />
      <Type Name="UIActivityType" Kind="Class" />
      <Type Name="UIActivityViewController" Kind="Class" />
      <Type Name="UIActivityViewControllerCompletion" Kind="Delegate" />
      <Type Name="UIAdaptivePresentationControllerDelegate" Kind="Class" />
      <Type Name="UIAdaptivePresentationControllerDelegate_Extensions" Kind="Class" />
      <Type Name="UIAlertAction" Kind="Class" />
      <Type Name="UIAlertActionStyle" Kind="Enumeration" />
      <Type Name="UIAlertController" Kind="Class" />
      <Type Name="UIAlertControllerStyle" Kind="Enumeration" />
      <Type Name="UIAlertView" Kind="Class" />
      <Type Name="UIAlertView+UIAlertViewAppearance" Kind="Class" />
      <Type Name="UIAlertViewDelegate" Kind="Class" />
      <Type Name="UIAlertViewDelegate_Extensions" Kind="Class" />
      <Type Name="UIAlertViewPredicate" Kind="Delegate" />
      <Type Name="UIAlertViewStyle" Kind="Enumeration" />
      <Type Name="UIAppearance" Kind="Class" />
      <Type Name="UIAppearanceContainer" Kind="Class" />
      <Type Name="UIApplication" Kind="Class" />
      <Type Name="UIApplication+Notifications" Kind="Class" />
      <Type Name="UIApplicationDelegate" Kind="Class" />
      <Type Name="UIApplicationDelegate_Extensions" Kind="Class" />
      <Type Name="UIApplicationLaunchEventArgs" Kind="Class" />
      <Type Name="UIApplicationOpenUrlOptions" Kind="Class" />
      <Type Name="UIApplicationRestorationHandler" Kind="Delegate" />
      <Type Name="UIApplicationShortcutIcon" Kind="Class" />
      <Type Name="UIApplicationShortcutIconType" Kind="Enumeration" />
      <Type Name="UIApplicationShortcutItem" Kind="Class" />
      <Type Name="UIApplicationState" Kind="Enumeration" />
      <Type Name="UIAttachmentBehavior" Kind="Class" />
      <Type Name="UIAttachmentBehaviorType" Kind="Enumeration" />
      <Type Name="UIBackgroundFetchResult" Kind="Enumeration" />
      <Type Name="UIBackgroundRefreshStatus" Kind="Enumeration" />
      <Type Name="UIBarButtonItem" Kind="Class" />
      <Type Name="UIBarButtonItem+UIBarButtonItemAppearance" Kind="Class" />
      <Type Name="UIBarButtonItemGroup" Kind="Class" />
      <Type Name="UIBarButtonItemStyle" Kind="Enumeration" />
      <Type Name="UIBarButtonSystemItem" Kind="Enumeration" />
      <Type Name="UIBarItem" Kind="Class" />
      <Type Name="UIBarItem+Notifications" Kind="Class" />
      <Type Name="UIBarItem+UIBarItemAppearance" Kind="Class" />
      <Type Name="UIBarMetrics" Kind="Enumeration" />
      <Type Name="UIBarPosition" Kind="Enumeration" />
      <Type Name="UIBarPositioning" Kind="Class" />
      <Type Name="UIBarPositioningDelegate" Kind="Class" />
      <Type Name="UIBarPositioningDelegate_Extensions" Kind="Class" />
      <Type Name="UIBarStyle" Kind="Enumeration" />
      <Type Name="UIBaselineAdjustment" Kind="Enumeration" />
      <Type Name="UIBezierPath" Kind="Class" />
      <Type Name="UIBlurEffect" Kind="Class" />
      <Type Name="UIBlurEffectStyle" Kind="Enumeration" />
      <Type Name="UIButton" Kind="Class" />
      <Type Name="UIButton+UIButtonAppearance" Kind="Class" />
      <Type Name="UIButtonEventArgs" Kind="Class" />
      <Type Name="UIButtonType" Kind="Enumeration" />
      <Type Name="UICollectionElementCategory" Kind="Enumeration" />
      <Type Name="UICollectionElementKindSection" Kind="Enumeration" />
      <Type Name="UICollectionElementKindSectionKey" Kind="Class" />
      <Type Name="UICollectionReusableView" Kind="Class" />
      <Type Name="UICollectionReusableView+UICollectionReusableViewAppearance" Kind="Class" />
      <Type Name="UICollectionUpdateAction" Kind="Enumeration" />
      <Type Name="UICollectionView" Kind="Class" />
      <Type Name="UICollectionView+UICollectionViewAppearance" Kind="Class" />
      <Type Name="UICollectionViewCell" Kind="Class" />
      <Type Name="UICollectionViewCell+UICollectionViewCellAppearance" Kind="Class" />
      <Type Name="UICollectionViewController" Kind="Class" />
      <Type Name="UICollectionViewDataSource" Kind="Class" />
      <Type Name="UICollectionViewDataSource_Extensions" Kind="Class" />
      <Type Name="UICollectionViewDataSourcePrefetching_Extensions" Kind="Class" />
      <Type Name="UICollectionViewDelegate" Kind="Class" />
      <Type Name="UICollectionViewDelegate_Extensions" Kind="Class" />
      <Type Name="UICollectionViewDelegateFlowLayout" Kind="Class" />
      <Type Name="UICollectionViewDelegateFlowLayout_Extensions" Kind="Class" />
      <Type Name="UICollectionViewFlowLayout" Kind="Class" />
      <Type Name="UICollectionViewFlowLayoutInvalidationContext" Kind="Class" />
      <Type Name="UICollectionViewFocusUpdateContext" Kind="Class" />
      <Type Name="UICollectionViewLayout" Kind="Class" />
      <Type Name="UICollectionViewLayoutAttributes" Kind="Class" />
      <Type Name="UICollectionViewLayoutInteractiveTransitionCompletion" Kind="Delegate" />
      <Type Name="UICollectionViewLayoutInvalidationContext" Kind="Class" />
      <Type Name="UICollectionViewScrollDirection" Kind="Enumeration" />
      <Type Name="UICollectionViewScrollPosition" Kind="Enumeration" />
      <Type Name="UICollectionViewSource" Kind="Class" />
      <Type Name="UICollectionViewTransitionLayout" Kind="Class" />
      <Type Name="UICollectionViewTransitionResult" Kind="Class" />
      <Type Name="UICollectionViewUpdateItem" Kind="Class" />
      <Type Name="UICollisionBeganBoundaryContactEventArgs" Kind="Class" />
      <Type Name="UICollisionBeganContactEventArgs" Kind="Class" />
      <Type Name="UICollisionBehavior" Kind="Class" />
      <Type Name="UICollisionBehaviorDelegate" Kind="Class" />
      <Type Name="UICollisionBehaviorDelegate_Extensions" Kind="Class" />
      <Type Name="UICollisionBehaviorMode" Kind="Enumeration" />
      <Type Name="UICollisionEndedBoundaryContactEventArgs" Kind="Class" />
      <Type Name="UICollisionEndedContactEventArgs" Kind="Class" />
      <Type Name="UIColor" Kind="Class" />
      <Type Name="UICompletionHandler" Kind="Delegate" />
      <Type Name="UIContentContainer" Kind="Class" />
      <Type Name="UIContentSizeCategory" Kind="Enumeration" />
      <Type Name="UIContentSizeCategoryChangedEventArgs" Kind="Class" />
      <Type Name="UIContentSizeCategoryExtensions" Kind="Class" />
      <Type Name="UIControl" Kind="Class" />
      <Type Name="UIControl+UIControlAppearance" Kind="Class" />
      <Type Name="UIControlContentHorizontalAlignment" Kind="Enumeration" />
      <Type Name="UIControlContentVerticalAlignment" Kind="Enumeration" />
      <Type Name="UIControlEvent" Kind="Enumeration" />
      <Type Name="UIControlState" Kind="Enumeration" />
      <Type Name="UICoordinateSpace" Kind="Class" />
      <Type Name="UICubicTimingParameters" Kind="Class" />
      <Type Name="UIDataDetectorType" Kind="Enumeration" />
      <Type Name="UIDatePicker" Kind="Class" />
      <Type Name="UIDatePicker+UIDatePickerAppearance" Kind="Class" />
      <Type Name="UIDatePickerMode" Kind="Enumeration" />
      <Type Name="UIDevice" Kind="Class" />
      <Type Name="UIDevice+Notifications" Kind="Class" />
      <Type Name="UIDeviceBatteryState" Kind="Enumeration" />
      <Type Name="UIDeviceOrientation" Kind="Enumeration" />
      <Type Name="UIDeviceOrientationExtensions" Kind="Class" />
      <Type Name="UIDictationPhrase" Kind="Class" />
      <Type Name="UIDisplayGamut" Kind="Enumeration" />
      <Type Name="UIDocument" Kind="Class" />
      <Type Name="UIDocument+Notifications" Kind="Class" />
      <Type Name="UIDocumentChangeKind" Kind="Enumeration" />
      <Type Name="UIDocumentInteractionController" Kind="Class" />
      <Type Name="UIDocumentInteractionControllerDelegate" Kind="Class" />
      <Type Name="UIDocumentInteractionControllerDelegate_Extensions" Kind="Class" />
      <Type Name="UIDocumentInteractionProbe" Kind="Delegate" />
      <Type Name="UIDocumentInteractionRectangle" Kind="Delegate" />
      <Type Name="UIDocumentMenuDelegate" Kind="Class" />
      <Type Name="UIDocumentMenuDocumentPickedEventArgs" Kind="Class" />
      <Type Name="UIDocumentMenuOrder" Kind="Enumeration" />
      <Type Name="UIDocumentMenuViewController" Kind="Class" />
      <Type Name="UIDocumentPickedEventArgs" Kind="Class" />
      <Type Name="UIDocumentPickerDelegate" Kind="Class" />
      <Type Name="UIDocumentPickerDelegate_Extensions" Kind="Class" />
      <Type Name="UIDocumentPickerExtensionViewController" Kind="Class" />
      <Type Name="UIDocumentPickerMode" Kind="Enumeration" />
      <Type Name="UIDocumentPickerViewController" Kind="Class" />
      <Type Name="UIDocumentSaveOperation" Kind="Enumeration" />
      <Type Name="UIDocumentSendingToApplicationEventArgs" Kind="Class" />
      <Type Name="UIDocumentState" Kind="Enumeration" />
      <Type Name="UIDocumentViewController" Kind="Delegate" />
      <Type Name="UIDocumentViewForPreview" Kind="Delegate" />
      <Type Name="UIDynamicAnimator" Kind="Class" />
      <Type Name="UIDynamicAnimatorDelegate" Kind="Class" />
      <Type Name="UIDynamicBehavior" Kind="Class" />
      <Type Name="UIDynamicItem" Kind="Class" />
      <Type Name="UIDynamicItem_Extensions" Kind="Class" />
      <Type Name="UIDynamicItemBehavior" Kind="Class" />
      <Type Name="UIDynamicItemCollisionBoundsType" Kind="Enumeration" />
      <Type Name="UIDynamicItemGroup" Kind="Class" />
      <Type Name="UIEdgeInsets" Kind="Structure" />
      <Type Name="UIEvent" Kind="Class" />
      <Type Name="UIEventSubtype" Kind="Enumeration" />
      <Type Name="UIEventType" Kind="Enumeration" />
      <Type Name="UIExtensionPointIdentifier" Kind="Class" />
      <Type Name="UIFieldBehavior" Kind="Class" />
      <Type Name="UIFieldCustomEvaluator" Kind="Delegate" />
      <Type Name="UIFloatRange" Kind="Structure" />
      <Type Name="UIFocusAnimationCoordinator" Kind="Class" />
      <Type Name="UIFocusEnvironment_Extensions" Kind="Class" />
      <Type Name="UIFocusGuide" Kind="Class" />
      <Type Name="UIFocusHeading" Kind="Enumeration" />
      <Type Name="UIFocusUpdateContext" Kind="Class" />
      <Type Name="UIFont" Kind="Class" />
      <Type Name="UIFontAttributes" Kind="Class" />
      <Type Name="UIFontDescriptor" Kind="Class" />
      <Type Name="UIFontDescriptorAttribute" Kind="Enumeration" />
      <Type Name="UIFontDescriptorSymbolicTraits" Kind="Enumeration" />
      <Type Name="UIFontFeature" Kind="Class" />
      <Type Name="UIFontTraits" Kind="Class" />
      <Type Name="UIFontWeight" Kind="Enumeration" />
      <Type Name="UIForceTouchCapability" Kind="Enumeration" />
      <Type Name="UIGestureProbe" Kind="Delegate" />
      <Type Name="UIGestureRecognizer" Kind="Class" />
      <Type Name="UIGestureRecognizer+ParameterlessDispatch" Kind="Class" />
      <Type Name="UIGestureRecognizer+ParametrizedDispatch" Kind="Class" />
      <Type Name="UIGestureRecognizer+Token" Kind="Class" />
      <Type Name="UIGestureRecognizerDelegate" Kind="Class" />
      <Type Name="UIGestureRecognizerDelegate_Extensions" Kind="Class" />
      <Type Name="UIGestureRecognizerState" Kind="Enumeration" />
      <Type Name="UIGesturesPress" Kind="Delegate" />
      <Type Name="UIGesturesProbe" Kind="Delegate" />
      <Type Name="UIGraphics" Kind="Class" />
      <Type Name="UIGraphicsImageRenderer" Kind="Class" />
      <Type Name="UIGraphicsImageRendererContext" Kind="Class" />
      <Type Name="UIGraphicsImageRendererFormat" Kind="Class" />
      <Type Name="UIGraphicsPdfRenderer" Kind="Class" />
      <Type Name="UIGraphicsPdfRendererContext" Kind="Class" />
      <Type Name="UIGraphicsPdfRendererFormat" Kind="Class" />
      <Type Name="UIGraphicsRenderer" Kind="Class" />
      <Type Name="UIGraphicsRendererContext" Kind="Class" />
      <Type Name="UIGraphicsRendererFormat" Kind="Class" />
      <Type Name="UIGravityBehavior" Kind="Class" />
      <Type Name="UIGuidedAccessRestriction" Kind="Class" />
      <Type Name="UIGuidedAccessRestrictionDelegate_Extensions" Kind="Class" />
      <Type Name="UIGuidedAccessRestrictionState" Kind="Enumeration" />
      <Type Name="UIImage" Kind="Class" />
      <Type Name="UIImage+Notifications" Kind="Class" />
      <Type Name="UIImage+SaveStatus" Kind="Delegate" />
      <Type Name="UIImageAsset" Kind="Class" />
      <Type Name="UIImageOrientation" Kind="Enumeration" />
      <Type Name="UIImagePickerController" Kind="Class" />
      <Type Name="UIImagePickerControllerCameraCaptureMode" Kind="Enumeration" />
      <Type Name="UIImagePickerControllerCameraDevice" Kind="Enumeration" />
      <Type Name="UIImagePickerControllerCameraFlashMode" Kind="Enumeration" />
      <Type Name="UIImagePickerControllerDelegate" Kind="Class" />
      <Type Name="UIImagePickerControllerDelegate_Extensions" Kind="Class" />
      <Type Name="UIImagePickerControllerQualityType" Kind="Enumeration" />
      <Type Name="UIImagePickerControllerSourceType" Kind="Enumeration" />
      <Type Name="UIImagePickerImagePickedEventArgs" Kind="Class" />
      <Type Name="UIImagePickerMediaPickedEventArgs" Kind="Class" />
      <Type Name="UIImageRenderingMode" Kind="Enumeration" />
      <Type Name="UIImageResizingMode" Kind="Enumeration" />
      <Type Name="UIImageView" Kind="Class" />
      <Type Name="UIImageView+UIImageViewAppearance" Kind="Class" />
      <Type Name="UIInputView" Kind="Class" />
      <Type Name="UIInputView+UIInputViewAppearance" Kind="Class" />
      <Type Name="UIInputViewController" Kind="Class" />
      <Type Name="UIInputViewStyle" Kind="Enumeration" />
      <Type Name="UIInterfaceOrientation" Kind="Enumeration" />
      <Type Name="UIInterfaceOrientationExtensions" Kind="Class" />
      <Type Name="UIInterfaceOrientationMask" Kind="Enumeration" />
      <Type Name="UIInterpolatingMotionEffect" Kind="Class" />
      <Type Name="UIInterpolatingMotionEffectType" Kind="Enumeration" />
      <Type Name="UIKeyboard" Kind="Class" />
      <Type Name="UIKeyboard+Notifications" Kind="Class" />
      <Type Name="UIKeyboardAppearance" Kind="Enumeration" />
      <Type Name="UIKeyboardEventArgs" Kind="Class" />
      <Type Name="UIKeyboardType" Kind="Enumeration" />
      <Type Name="UIKeyCommand" Kind="Class" />
      <Type Name="UIKeyModifierFlags" Kind="Enumeration" />
      <Type Name="UIKitThreadAccessException" Kind="Class" />
      <Type Name="UILabel" Kind="Class" />
      <Type Name="UILabel+UILabelAppearance" Kind="Class" />
      <Type Name="UILayoutConstraintAxis" Kind="Enumeration" />
      <Type Name="UILayoutGuide" Kind="Class" />
      <Type Name="UILayoutPriority" Kind="Enumeration" />
      <Type Name="UILayoutSupport" Kind="Class" />
      <Type Name="UILayoutSupport_Extensions" Kind="Class" />
      <Type Name="UILexicon" Kind="Class" />
      <Type Name="UILexiconEntry" Kind="Class" />
      <Type Name="UILineBreakMode" Kind="Enumeration" />
      <Type Name="UILocalizedIndexedCollation" Kind="Class" />
      <Type Name="UILocalNotification" Kind="Class" />
      <Type Name="UILongPressGestureRecognizer" Kind="Class" />
      <Type Name="UIManagedDocument" Kind="Class" />
      <Type Name="UIMarkupTextPrintFormatter" Kind="Class" />
      <Type Name="UIMenuController" Kind="Class" />
      <Type Name="UIMenuController+Notifications" Kind="Class" />
      <Type Name="UIMenuControllerArrowDirection" Kind="Enumeration" />
      <Type Name="UIMenuItem" Kind="Class" />
      <Type Name="UIModalPresentationStyle" Kind="Enumeration" />
      <Type Name="UIModalTransitionStyle" Kind="Enumeration" />
      <Type Name="UIMotionEffect" Kind="Class" />
      <Type Name="UIMotionEffectGroup" Kind="Class" />
      <Type Name="UIMutableApplicationShortcutItem" Kind="Class" />
      <Type Name="UIMutableUserNotificationAction" Kind="Class" />
      <Type Name="UIMutableUserNotificationCategory" Kind="Class" />
      <Type Name="UINavigationBar" Kind="Class" />
      <Type Name="UINavigationBar+UINavigationBarAppearance" Kind="Class" />
      <Type Name="UINavigationBarDelegate" Kind="Class" />
      <Type Name="UINavigationBarDelegate_Extensions" Kind="Class" />
      <Type Name="UINavigationController" Kind="Class" />
      <Type Name="UINavigationControllerDelegate" Kind="Class" />
      <Type Name="UINavigationControllerDelegate_Extensions" Kind="Class" />
      <Type Name="UINavigationControllerOperation" Kind="Enumeration" />
      <Type Name="UINavigationItem" Kind="Class" />
      <Type Name="UINib" Kind="Class" />
      <Type Name="UIObjectRestoration" Kind="Class" />
      <Type Name="UIOffset" Kind="Structure" />
      <Type Name="UIOperationHandler" Kind="Delegate" />
      <Type Name="UIPageControl" Kind="Class" />
      <Type Name="UIPageControl+UIPageControlAppearance" Kind="Class" />
      <Type Name="UIPageViewController" Kind="Class" />
      <Type Name="UIPageViewControllerDataSource" Kind="Class" />
      <Type Name="UIPageViewControllerDataSource_Extensions" Kind="Class" />
      <Type Name="UIPageViewControllerDelegate" Kind="Class" />
      <Type Name="UIPageViewControllerDelegate_Extensions" Kind="Class" />
      <Type Name="UIPageViewControllerNavigationDirection" Kind="Enumeration" />
      <Type Name="UIPageViewControllerNavigationOrientation" Kind="Enumeration" />
      <Type Name="UIPageViewControllerSpineLocation" Kind="Enumeration" />
      <Type Name="UIPageViewControllerTransitionEventArgs" Kind="Class" />
      <Type Name="UIPageViewControllerTransitionStyle" Kind="Enumeration" />
      <Type Name="UIPageViewFinishedAnimationEventArgs" Kind="Class" />
      <Type Name="UIPageViewGetNumber" Kind="Delegate" />
      <Type Name="UIPageViewGetViewController" Kind="Delegate" />
      <Type Name="UIPageViewSpineLocationCallback" Kind="Delegate" />
      <Type Name="UIPanGestureRecognizer" Kind="Class" />
      <Type Name="UIPasteboard" Kind="Class" />
      <Type Name="UIPasteboard+Notifications" Kind="Class" />
      <Type Name="UIPasteboardChangeEventArgs" Kind="Class" />
      <Type Name="UIPasteboardNames" Kind="Class" />
      <Type Name="UIPathEventArgs" Kind="Class" />
      <Type Name="UIPercentDrivenInteractiveTransition" Kind="Class" />
      <Type Name="UIPickerView" Kind="Class" />
      <Type Name="UIPickerView+UIPickerViewAppearance" Kind="Class" />
      <Type Name="UIPickerViewAccessibilityDelegate" Kind="Class" />
      <Type Name="UIPickerViewAccessibilityDelegate_Extensions" Kind="Class" />
      <Type Name="UIPickerViewDataSource" Kind="Class" />
      <Type Name="UIPickerViewDelegate" Kind="Class" />
      <Type Name="UIPickerViewDelegate_Extensions" Kind="Class" />
      <Type Name="UIPickerViewModel" Kind="Class" />
      <Type Name="UIPinchGestureRecognizer" Kind="Class" />
      <Type Name="UIPopoverArrowDirection" Kind="Enumeration" />
      <Type Name="UIPopoverBackgroundView" Kind="Class" />
      <Type Name="UIPopoverBackgroundView+UIPopoverBackgroundViewAppearance" Kind="Class" />
      <Type Name="UIPopoverController" Kind="Class" />
      <Type Name="UIPopoverControllerCondition" Kind="Delegate" />
      <Type Name="UIPopoverControllerDelegate" Kind="Class" />
      <Type Name="UIPopoverControllerDelegate_Extensions" Kind="Class" />
      <Type Name="UIPopoverControllerRepositionEventArgs" Kind="Class" />
      <Type Name="UIPopoverPresentationController" Kind="Class" />
      <Type Name="UIPopoverPresentationControllerDelegate" Kind="Class" />
      <Type Name="UIPopoverPresentationControllerDelegate_Extensions" Kind="Class" />
      <Type Name="UIPopoverPresentationControllerRepositionEventArgs" Kind="Class" />
      <Type Name="UIPresentationController" Kind="Class" />
      <Type Name="UIPress" Kind="Class" />
      <Type Name="UIPressesEvent" Kind="Class" />
      <Type Name="UIPressPhase" Kind="Enumeration" />
      <Type Name="UIPressType" Kind="Enumeration" />
      <Type Name="UIPreviewAction" Kind="Class" />
      <Type Name="UIPreviewActionGroup" Kind="Class" />
      <Type Name="UIPreviewActionStyle" Kind="Enumeration" />
      <Type Name="UIPreviewHandler" Kind="Delegate" />
      <Type Name="UIPrint" Kind="Class" />
      <Type Name="UIPrinter" Kind="Class" />
      <Type Name="UIPrinterContactPrinterHandler" Kind="Delegate" />
      <Type Name="UIPrinterCutterBehavior" Kind="Enumeration" />
      <Type Name="UIPrinterJobTypes" Kind="Enumeration" />
      <Type Name="UIPrinterPickerCompletionHandler" Kind="Delegate" />
      <Type Name="UIPrinterPickerController" Kind="Class" />
      <Type Name="UIPrinterPickerControllerDelegate" Kind="Class" />
      <Type Name="UIPrinterPickerControllerDelegate_Extensions" Kind="Class" />
      <Type Name="UIPrintError" Kind="Enumeration" />
      <Type Name="UIPrintErrorExtensions" Kind="Class" />
      <Type Name="UIPrintFormatter" Kind="Class" />
      <Type Name="UIPrintInfo" Kind="Class" />
      <Type Name="UIPrintInfoDuplex" Kind="Enumeration" />
      <Type Name="UIPrintInfoOrientation" Kind="Enumeration" />
      <Type Name="UIPrintInfoOutputType" Kind="Enumeration" />
      <Type Name="UIPrintInteraction" Kind="Delegate" />
      <Type Name="UIPrintInteractionCompletionHandler" Kind="Delegate" />
      <Type Name="UIPrintInteractionController" Kind="Class" />
      <Type Name="UIPrintInteractionControllerDelegate" Kind="Class" />
      <Type Name="UIPrintInteractionControllerDelegate_Extensions" Kind="Class" />
      <Type Name="UIPrintInteractionPaperList" Kind="Delegate" />
      <Type Name="UIPrintInteractionResult" Kind="Class" />
      <Type Name="UIPrintPageRenderer" Kind="Class" />
      <Type Name="UIPrintPaper" Kind="Class" />
      <Type Name="UIProgressView" Kind="Class" />
      <Type Name="UIProgressView+UIProgressViewAppearance" Kind="Class" />
      <Type Name="UIProgressViewStyle" Kind="Enumeration" />
      <Type Name="UIPushBehavior" Kind="Class" />
      <Type Name="UIPushBehaviorMode" Kind="Enumeration" />
      <Type Name="UIRectCorner" Kind="Enumeration" />
      <Type Name="UIRectEdge" Kind="Enumeration" />
      <Type Name="UIReferenceLibraryViewController" Kind="Class" />
      <Type Name="UIRefreshControl" Kind="Class" />
      <Type Name="UIRefreshControl+UIRefreshControlAppearance" Kind="Class" />
      <Type Name="UIRegion" Kind="Class" />
      <Type Name="UIRemoteNotificationType" Kind="Enumeration" />
      <Type Name="UIResponder" Kind="Class" />
      <Type Name="UIResponder_NSObjectExtension" Kind="Class" />
      <Type Name="UIReturnKeyType" Kind="Enumeration" />
      <Type Name="UIRotationGestureRecognizer" Kind="Class" />
      <Type Name="UIScreen" Kind="Class" />
      <Type Name="UIScreen+Notifications" Kind="Class" />
      <Type Name="UIScreenEdgePanGestureRecognizer" Kind="Class" />
      <Type Name="UIScreenMode" Kind="Class" />
      <Type Name="UIScreenOverscanCompensation" Kind="Enumeration" />
      <Type Name="UIScrollView" Kind="Class" />
      <Type Name="UIScrollView+UIScrollViewAppearance" Kind="Class" />
      <Type Name="UIScrollViewAccessibilityDelegate" Kind="Class" />
      <Type Name="UIScrollViewAccessibilityDelegate_Extensions" Kind="Class" />
      <Type Name="UIScrollViewCondition" Kind="Delegate" />
      <Type Name="UIScrollViewDelegate" Kind="Class" />
      <Type Name="UIScrollViewDelegate_Extensions" Kind="Class" />
      <Type Name="UIScrollViewGetZoomView" Kind="Delegate" />
      <Type Name="UIScrollViewIndicatorStyle" Kind="Enumeration" />
      <Type Name="UIScrollViewKeyboardDismissMode" Kind="Enumeration" />
      <Type Name="UIScrollViewZoomingEventArgs" Kind="Class" />
      <Type Name="UISearchBar" Kind="Class" />
      <Type Name="UISearchBar+UISearchBarAppearance" Kind="Class" />
      <Type Name="UISearchBarButtonIndexEventArgs" Kind="Class" />
      <Type Name="UISearchBarDelegate" Kind="Class" />
      <Type Name="UISearchBarDelegate_Extensions" Kind="Class" />
      <Type Name="UISearchBarIcon" Kind="Enumeration" />
      <Type Name="UISearchBarPredicate" Kind="Delegate" />
      <Type Name="UISearchBarRangeEventArgs" Kind="Delegate" />
      <Type Name="UISearchBarStyle" Kind="Enumeration" />
      <Type Name="UISearchBarTextChangedEventArgs" Kind="Class" />
      <Type Name="UISearchContainerViewController" Kind="Class" />
      <Type Name="UISearchController" Kind="Class" />
      <Type Name="UISearchControllerDelegate" Kind="Class" />
      <Type Name="UISearchControllerDelegate_Extensions" Kind="Class" />
      <Type Name="UISearchDisplayController" Kind="Class" />
      <Type Name="UISearchDisplayDelegate" Kind="Class" />
      <Type Name="UISearchDisplayDelegate_Extensions" Kind="Class" />
      <Type Name="UISearchResultsUpdating" Kind="Class" />
      <Type Name="UISegmentedControl" Kind="Class" />
      <Type Name="UISegmentedControl+UISegmentedControlAppearance" Kind="Class" />
      <Type Name="UISegmentedControlSegment" Kind="Enumeration" />
      <Type Name="UISegmentedControlStyle" Kind="Enumeration" />
      <Type Name="UISemanticContentAttribute" Kind="Enumeration" />
      <Type Name="UISimpleTextPrintFormatter" Kind="Class" />
      <Type Name="UISlider" Kind="Class" />
      <Type Name="UISlider+UISliderAppearance" Kind="Class" />
      <Type Name="UISnapBehavior" Kind="Class" />
      <Type Name="UISplitViewController" Kind="Class" />
      <Type Name="UISplitViewController_UIViewController" Kind="Class" />
      <Type Name="UISplitViewControllerCanCollapsePredicate" Kind="Delegate" />
      <Type Name="UISplitViewControllerDelegate" Kind="Class" />
      <Type Name="UISplitViewControllerDelegate_Extensions" Kind="Class" />
      <Type Name="UISplitViewControllerDisplayEvent" Kind="Delegate" />
      <Type Name="UISplitViewControllerDisplayMode" Kind="Enumeration" />
      <Type Name="UISplitViewControllerDisplayModeEventArgs" Kind="Class" />
      <Type Name="UISplitViewControllerFetchTargetForActionHandler" Kind="Delegate" />
      <Type Name="UISplitViewControllerGetSecondaryViewController" Kind="Delegate" />
      <Type Name="UISplitViewControllerGetViewController" Kind="Delegate" />
      <Type Name="UISplitViewControllerHidePredicate" Kind="Delegate" />
      <Type Name="UISplitViewHideEventArgs" Kind="Class" />
      <Type Name="UISplitViewPresentEventArgs" Kind="Class" />
      <Type Name="UISplitViewShowEventArgs" Kind="Class" />
      <Type Name="UISpringTimingParameters" Kind="Class" />
      <Type Name="UIStackView" Kind="Class" />
      <Type Name="UIStackView+UIStackViewAppearance" Kind="Class" />
      <Type Name="UIStackViewAlignment" Kind="Enumeration" />
      <Type Name="UIStackViewDistribution" Kind="Enumeration" />
      <Type Name="UIStateRestoration" Kind="Class" />
      <Type Name="UIStateRestoring" Kind="Class" />
      <Type Name="UIStateRestoring_Extensions" Kind="Class" />
      <Type Name="UIStatusBarAnimation" Kind="Enumeration" />
      <Type Name="UIStatusBarFrameChangeEventArgs" Kind="Class" />
      <Type Name="UIStatusBarOrientationChangeEventArgs" Kind="Class" />
      <Type Name="UIStatusBarStyle" Kind="Enumeration" />
      <Type Name="UIStepper" Kind="Class" />
      <Type Name="UIStepper+UIStepperAppearance" Kind="Class" />
      <Type Name="UIStoryboard" Kind="Class" />
      <Type Name="UIStoryboardPopoverSegue" Kind="Class" />
      <Type Name="UIStoryboardSegue" Kind="Class" />
      <Type Name="UIStoryboardUnwindSegueSource" Kind="Class" />
      <Type Name="UIStringAttributeKey" Kind="Class" />
      <Type Name="UIStringAttributes" Kind="Class" />
      <Type Name="UIStringDrawing" Kind="Class" />
      <Type Name="UISwipeGestureRecognizer" Kind="Class" />
      <Type Name="UISwipeGestureRecognizerDirection" Kind="Enumeration" />
      <Type Name="UISwitch" Kind="Class" />
      <Type Name="UISwitch+UISwitchAppearance" Kind="Class" />
      <Type Name="UISystemAnimation" Kind="Enumeration" />
      <Type Name="UITabBar" Kind="Class" />
      <Type Name="UITabBar+UITabBarAppearance" Kind="Class" />
      <Type Name="UITabBarController" Kind="Class" />
      <Type Name="UITabBarControllerDelegate" Kind="Class" />
      <Type Name="UITabBarControllerDelegate_Extensions" Kind="Class" />
      <Type Name="UITabBarCustomizeChangeEventArgs" Kind="Class" />
      <Type Name="UITabBarCustomizeEventArgs" Kind="Class" />
      <Type Name="UITabBarDelegate" Kind="Class" />
      <Type Name="UITabBarDelegate_Extensions" Kind="Class" />
      <Type Name="UITabBarFinalItemsEventArgs" Kind="Class" />
      <Type Name="UITabBarItem" Kind="Class" />
      <Type Name="UITabBarItem+UITabBarItemAppearance" Kind="Class" />
      <Type Name="UITabBarItemEventArgs" Kind="Class" />
      <Type Name="UITabBarItemPositioning" Kind="Enumeration" />
      <Type Name="UITabBarItemsEventArgs" Kind="Class" />
      <Type Name="UITabBarSelection" Kind="Delegate" />
      <Type Name="UITabBarSelectionEventArgs" Kind="Class" />
      <Type Name="UITabBarSystemItem" Kind="Enumeration" />
      <Type Name="UITableView" Kind="Class" />
      <Type Name="UITableView+Notifications" Kind="Class" />
      <Type Name="UITableView+UITableViewAppearance" Kind="Class" />
      <Type Name="UITableViewCell" Kind="Class" />
      <Type Name="UITableViewCell+UITableViewCellAppearance" Kind="Class" />
      <Type Name="UITableViewCellAccessory" Kind="Enumeration" />
      <Type Name="UITableViewCellEditingStyle" Kind="Enumeration" />
      <Type Name="UITableViewCellFocusStyle" Kind="Enumeration" />
      <Type Name="UITableViewCellSelectionStyle" Kind="Enumeration" />
      <Type Name="UITableViewCellSeparatorStyle" Kind="Enumeration" />
      <Type Name="UITableViewCellState" Kind="Enumeration" />
      <Type Name="UITableViewCellStyle" Kind="Enumeration" />
      <Type Name="UITableViewController" Kind="Class" />
      <Type Name="UITableViewDataSource" Kind="Class" />
      <Type Name="UITableViewDataSource_Extensions" Kind="Class" />
      <Type Name="UITableViewDataSourcePrefetching_Extensions" Kind="Class" />
      <Type Name="UITableViewDelegate" Kind="Class" />
      <Type Name="UITableViewDelegate_Extensions" Kind="Class" />
      <Type Name="UITableViewFocusUpdateContext" Kind="Class" />
      <Type Name="UITableViewHeaderFooterView" Kind="Class" />
      <Type Name="UITableViewHeaderFooterView+UITableViewHeaderFooterViewAppearance" Kind="Class" />
      <Type Name="UITableViewRowAction" Kind="Class" />
      <Type Name="UITableViewRowActionStyle" Kind="Enumeration" />
      <Type Name="UITableViewRowAnimation" Kind="Enumeration" />
      <Type Name="UITableViewScrollPosition" Kind="Enumeration" />
      <Type Name="UITableViewSource" Kind="Class" />
      <Type Name="UITableViewStyle" Kind="Enumeration" />
      <Type Name="UITapGestureRecognizer" Kind="Class" />
      <Type Name="UITextAlignment" Kind="Enumeration" />
      <Type Name="UITextAttributes" Kind="Class" />
      <Type Name="UITextAutocapitalizationType" Kind="Enumeration" />
      <Type Name="UITextAutocorrectionType" Kind="Enumeration" />
      <Type Name="UITextBorderStyle" Kind="Enumeration" />
      <Type Name="UITextChecker" Kind="Class" />
      <Type Name="UITextContentType" Kind="Class" />
      <Type Name="UITextDirection" Kind="Enumeration" />
      <Type Name="UITextDocumentProxy" Kind="Class" />
      <Type Name="UITextDocumentProxy_Extensions" Kind="Class" />
      <Type Name="UITextField" Kind="Class" />
      <Type Name="UITextField+Notifications" Kind="Class" />
      <Type Name="UITextField+UITextFieldAppearance" Kind="Class" />
      <Type Name="UITextFieldChange" Kind="Delegate" />
      <Type Name="UITextFieldCondition" Kind="Delegate" />
      <Type Name="UITextFieldDelegate" Kind="Class" />
      <Type Name="UITextFieldDelegate_Extensions" Kind="Class" />
      <Type Name="UITextFieldViewMode" Kind="Enumeration" />
      <Type Name="UITextGranularity" Kind="Enumeration" />
      <Type Name="UITextInput_Extensions" Kind="Class" />
      <Type Name="UITextInputAssistantItem" Kind="Class" />
      <Type Name="UITextInputDelegate" Kind="Class" />
      <Type Name="UITextInputMode" Kind="Class" />
      <Type Name="UITextInputMode+Notifications" Kind="Class" />
      <Type Name="UITextInputStringTokenizer" Kind="Class" />
      <Type Name="UITextInputTokenizer" Kind="Class" />
      <Type Name="UITextInputTraits_Extensions" Kind="Class" />
      <Type Name="UITextItemInteraction" Kind="Enumeration" />
      <Type Name="UITextLayoutDirection" Kind="Enumeration" />
      <Type Name="UITextPosition" Kind="Class" />
      <Type Name="UITextRange" Kind="Class" />
      <Type Name="UITextSelectionRect" Kind="Class" />
      <Type Name="UITextSpellCheckingType" Kind="Enumeration" />
      <Type Name="UITextStorageDirection" Kind="Enumeration" />
      <Type Name="UITextView" Kind="Class" />
      <Type Name="UITextView+Notifications" Kind="Class" />
      <Type Name="UITextView+UITextViewAppearance" Kind="Class" />
      <Type Name="UITextViewChange" Kind="Delegate" />
      <Type Name="UITextViewCondition" Kind="Delegate" />
      <Type Name="UITextViewDelegate" Kind="Class" />
      <Type Name="UITextViewDelegate_Extensions" Kind="Class" />
      <Type Name="UITextWritingDirection" Kind="Enumeration" />
      <Type Name="UITimingCurveType" Kind="Enumeration" />
      <Type Name="UIToolbar" Kind="Class" />
      <Type Name="UIToolbar+UIToolbarAppearance" Kind="Class" />
      <Type Name="UIToolbarDelegate" Kind="Class" />
      <Type Name="UIToolbarPosition" Kind="Enumeration" />
      <Type Name="UITouch" Kind="Class" />
      <Type Name="UITouchEventArgs" Kind="Delegate" />
      <Type Name="UITouchPhase" Kind="Enumeration" />
      <Type Name="UITouchProperties" Kind="Enumeration" />
      <Type Name="UITouchType" Kind="Enumeration" />
      <Type Name="UITraitCollection" Kind="Class" />
      <Type Name="UITraitEnvironment" Kind="Class" />
      <Type Name="UITraitEnvironmentLayoutDirection" Kind="Enumeration" />
      <Type Name="UITransitionContext" Kind="Class" />
      <Type Name="UITransitionViewControllerKind" Kind="Enumeration" />
      <Type Name="UIUserInterfaceIdiom" Kind="Enumeration" />
      <Type Name="UIUserInterfaceLayoutDirection" Kind="Enumeration" />
      <Type Name="UIUserInterfaceSizeClass" Kind="Enumeration" />
      <Type Name="UIUserNotificationAction" Kind="Class" />
      <Type Name="UIUserNotificationActionBehavior" Kind="Enumeration" />
      <Type Name="UIUserNotificationActionContext" Kind="Enumeration" />
      <Type Name="UIUserNotificationActivationMode" Kind="Enumeration" />
      <Type Name="UIUserNotificationCategory" Kind="Class" />
      <Type Name="UIUserNotificationSettings" Kind="Class" />
      <Type Name="UIUserNotificationType" Kind="Enumeration" />
      <Type Name="UIVibrancyEffect" Kind="Class" />
      <Type Name="UIVideo" Kind="Class" />
      <Type Name="UIVideo+SaveStatus" Kind="Delegate" />
      <Type Name="UIVideoEditorController" Kind="Class" />
      <Type Name="UIVideoEditorControllerDelegate" Kind="Class" />
      <Type Name="UIVideoEditorControllerDelegate_Extensions" Kind="Class" />
      <Type Name="UIView" Kind="Class" />
      <Type Name="UIView_UITextField" Kind="Class" />
      <Type Name="UIView+Notifications" Kind="Class" />
      <Type Name="UIView+UIViewAppearance" Kind="Class" />
      <Type Name="UIViewAnimatingPosition" Kind="Enumeration" />
      <Type Name="UIViewAnimatingState" Kind="Enumeration" />
      <Type Name="UIViewAnimationCurve" Kind="Enumeration" />
      <Type Name="UIViewAnimationOptions" Kind="Enumeration" />
      <Type Name="UIViewAnimationTransition" Kind="Enumeration" />
      <Type Name="UIViewAutoresizing" Kind="Enumeration" />
      <Type Name="UIViewContentMode" Kind="Enumeration" />
      <Type Name="UIViewController" Kind="Class" />
      <Type Name="UIViewController+Notifications" Kind="Class" />
      <Type Name="UIViewControllerAnimatedTransitioning" Kind="Class" />
      <Type Name="UIViewControllerAnimatedTransitioning_Extensions" Kind="Class" />
      <Type Name="UIViewControllerContextTransitioning" Kind="Class" />
      <Type Name="UIViewControllerInteractiveTransitioning" Kind="Class" />
      <Type Name="UIViewControllerInteractiveTransitioning_Extensions" Kind="Class" />
      <Type Name="UIViewControllerPreviewingDelegate" Kind="Class" />
      <Type Name="UIViewControllerTransitionCoordinatorContext_Extensions" Kind="Class" />
      <Type Name="UIViewControllerTransitioningDelegate" Kind="Class" />
      <Type Name="UIViewControllerTransitioningDelegate_Extensions" Kind="Class" />
      <Type Name="UIViewImplicitlyAnimating_Extensions" Kind="Class" />
      <Type Name="UIViewKeyframeAnimationOptions" Kind="Enumeration" />
      <Type Name="UIViewPrintFormatter" Kind="Class" />
      <Type Name="UIViewPropertyAnimator" Kind="Class" />
      <Type Name="UIViewTintAdjustmentMode" Kind="Enumeration" />
      <Type Name="UIVisualEffect" Kind="Class" />
      <Type Name="UIVisualEffectView" Kind="Class" />
      <Type Name="UIVisualEffectView+UIVisualEffectViewAppearance" Kind="Class" />
      <Type Name="UIWebErrorArgs" Kind="Class" />
      <Type Name="UIWebLoaderControl" Kind="Delegate" />
      <Type Name="UIWebPaginationBreakingMode" Kind="Enumeration" />
      <Type Name="UIWebPaginationMode" Kind="Enumeration" />
      <Type Name="UIWebView" Kind="Class" />
      <Type Name="UIWebView+UIWebViewAppearance" Kind="Class" />
      <Type Name="UIWebViewDelegate" Kind="Class" />
      <Type Name="UIWebViewDelegate_Extensions" Kind="Class" />
      <Type Name="UIWebViewNavigationType" Kind="Enumeration" />
      <Type Name="UIWindow" Kind="Class" />
      <Type Name="UIWindow+Notifications" Kind="Class" />
      <Type Name="UIWindow+UIWindowAppearance" Kind="Class" />
      <Type Name="UIWindowLevel" Kind="Class" />
      <Type Name="WillEndDraggingEventArgs" Kind="Class" />
      <Type Name="ZoomingEndedEventArgs" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.UserNotifications">
      <Type Name="IUNUserNotificationCenterDelegate" Kind="Interface" />
      <Type Name="NSString_UNUserNotificationCenterSupport" Kind="Class" />
      <Type Name="UNActionIdentifier" Kind="Enumeration" />
      <Type Name="UNAlertStyle" Kind="Enumeration" />
      <Type Name="UNAuthorizationOptions" Kind="Enumeration" />
      <Type Name="UNAuthorizationStatus" Kind="Enumeration" />
      <Type Name="UNCalendarNotificationTrigger" Kind="Class" />
      <Type Name="UNErrorCode" Kind="Enumeration" />
      <Type Name="UNErrorCodeExtensions" Kind="Class" />
      <Type Name="UNLocationNotificationTrigger" Kind="Class" />
      <Type Name="UNMutableNotificationContent" Kind="Class" />
      <Type Name="UNNotification" Kind="Class" />
      <Type Name="UNNotificationAction" Kind="Class" />
      <Type Name="UNNotificationActionOptions" Kind="Enumeration" />
      <Type Name="UNNotificationAttachment" Kind="Class" />
      <Type Name="UNNotificationAttachmentOptions" Kind="Class" />
      <Type Name="UNNotificationAttachmentOptionsKeys" Kind="Class" />
      <Type Name="UNNotificationCategory" Kind="Class" />
      <Type Name="UNNotificationCategoryOptions" Kind="Enumeration" />
      <Type Name="UNNotificationContent" Kind="Class" />
      <Type Name="UNNotificationPresentationOptions" Kind="Enumeration" />
      <Type Name="UNNotificationRequest" Kind="Class" />
      <Type Name="UNNotificationResponse" Kind="Class" />
      <Type Name="UNNotificationServiceExtension" Kind="Class" />
      <Type Name="UNNotificationSetting" Kind="Enumeration" />
      <Type Name="UNNotificationSettings" Kind="Class" />
      <Type Name="UNNotificationSound" Kind="Class" />
      <Type Name="UNNotificationTrigger" Kind="Class" />
      <Type Name="UNPushNotificationTrigger" Kind="Class" />
      <Type Name="UNTextInputNotificationAction" Kind="Class" />
      <Type Name="UNTextInputNotificationResponse" Kind="Class" />
      <Type Name="UNTimeIntervalNotificationTrigger" Kind="Class" />
      <Type Name="UNUserNotificationCenter" Kind="Class" />
      <Type Name="UNUserNotificationCenterDelegate" Kind="Class" />
      <Type Name="UNUserNotificationCenterDelegate_Extensions" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.UserNotificationsUI">
      <Type Name="IUNNotificationContentExtension" Kind="Interface" />
      <Type Name="NSExtensionContext_UNNotificationContentExtension" Kind="Class" />
      <Type Name="UNMediaPlayPauseButtonType" Kind="Enumeration" />
      <Type Name="UNNotificationContentExtension_Extensions" Kind="Class" />
      <Type Name="UNResponseOption" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.VideoSubscriberAccount">
      <Type Name="IVSAccountManagerDelegate" Kind="Interface" />
      <Type Name="VSAccountAccessStatus" Kind="Enumeration" />
      <Type Name="VSAccountManager" Kind="Class" />
      <Type Name="VSAccountManagerAccessOptions" Kind="Class" />
      <Type Name="VSAccountManagerDelegate" Kind="Class" />
      <Type Name="VSAccountManagerResult" Kind="Class" />
      <Type Name="VSAccountMetadata" Kind="Class" />
      <Type Name="VSAccountMetadataRequest" Kind="Class" />
      <Type Name="VSCheckAccessOptionKeys" Kind="Class" />
      <Type Name="VSErrorCode" Kind="Enumeration" />
      <Type Name="VSErrorCodeExtensions" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.VideoToolbox">
      <Type Name="VTColorPrimaries" Kind="Enumeration" />
      <Type Name="VTCompressionProperties" Kind="Class" />
      <Type Name="VTCompressionPropertyKey" Kind="Class" />
      <Type Name="VTCompressionSession" Kind="Class" />
      <Type Name="VTCompressionSession+VTCompressionOutputCallback" Kind="Delegate" />
      <Type Name="VTCompressionSessionOptionFlags" Kind="Enumeration" />
      <Type Name="VTDataRateLimit" Kind="Structure" />
      <Type Name="VTDecodeFrameFlags" Kind="Enumeration" />
      <Type Name="VTDecodeInfoFlags" Kind="Enumeration" />
      <Type Name="VTDecompressionProperties" Kind="Class" />
      <Type Name="VTDecompressionPropertyKey" Kind="Class" />
      <Type Name="VTDecompressionResolutionKeys" Kind="Class" />
      <Type Name="VTDecompressionResolutionOptions" Kind="Class" />
      <Type Name="VTDecompressionSession" Kind="Class" />
      <Type Name="VTDecompressionSession+VTDecompressionOutputCallback" Kind="Delegate" />
      <Type Name="VTDeinterlaceMode" Kind="Enumeration" />
      <Type Name="VTDownsamplingMode" Kind="Enumeration" />
      <Type Name="VTEncodeFrameOptionKey" Kind="Class" />
      <Type Name="VTEncodeFrameOptions" Kind="Class" />
      <Type Name="VTEncodeInfoFlags" Kind="Enumeration" />
      <Type Name="VTFieldCount" Kind="Enumeration" />
      <Type Name="VTFieldDetail" Kind="Enumeration" />
      <Type Name="VTFieldMode" Kind="Enumeration" />
      <Type Name="VTFrameSilo" Kind="Class" />
      <Type Name="VTH264EntropyMode" Kind="Enumeration" />
      <Type Name="VTH264EntropyModeKeys" Kind="Class" />
      <Type Name="VTMultiPassStorage" Kind="Class" />
      <Type Name="VTMultiPassStorageCreationOptionKeys" Kind="Class" />
      <Type Name="VTMultiPassStorageCreationOptions" Kind="Class" />
      <Type Name="VTOnlyTheseFrames" Kind="Enumeration" />
      <Type Name="VTPixelTransferProperties" Kind="Class" />
      <Type Name="VTPixelTransferPropertyKeys" Kind="Class" />
      <Type Name="VTProfileLevel" Kind="Enumeration" />
      <Type Name="VTProfileLevelKeys" Kind="Class" />
      <Type Name="VTPropertyKeys" Kind="Class" />
      <Type Name="VTPropertyOptions" Kind="Class" />
      <Type Name="VTPropertyReadWriteStatusKeys" Kind="Class" />
      <Type Name="VTPropertyType" Kind="Enumeration" />
      <Type Name="VTPropertyTypeKeys" Kind="Class" />
      <Type Name="VTReadWriteStatus" Kind="Enumeration" />
      <Type Name="VTScalingMode" Kind="Enumeration" />
      <Type Name="VTSession" Kind="Class" />
      <Type Name="VTStatus" Kind="Enumeration" />
      <Type Name="VTTransferFunction" Kind="Enumeration" />
      <Type Name="VTUtilities" Kind="Class" />
      <Type Name="VTVideoDecoderSpecification" Kind="Class" />
      <Type Name="VTVideoDecoderSpecificationKeys" Kind="Class" />
      <Type Name="VTVideoEncoder" Kind="Class" />
      <Type Name="VTVideoEncoderSpecification" Kind="Class" />
      <Type Name="VTVideoEncoderSpecificationKeys" Kind="Class" />
      <Type Name="VTYCbCrMatrix" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.WatchConnectivity">
      <Type Name="IWCSessionDelegate" Kind="Interface" />
      <Type Name="WCErrorCode" Kind="Enumeration" />
      <Type Name="WCSession" Kind="Class" />
      <Type Name="WCSessionActivationState" Kind="Enumeration" />
      <Type Name="WCSessionDelegate" Kind="Class" />
      <Type Name="WCSessionDelegate_Extensions" Kind="Class" />
      <Type Name="WCSessionFile" Kind="Class" />
      <Type Name="WCSessionFileTransfer" Kind="Class" />
      <Type Name="WCSessionReplyDataHandler" Kind="Delegate" />
      <Type Name="WCSessionReplyHandler" Kind="Delegate" />
      <Type Name="WCSessionUserInfoTransfer" Kind="Class" />
    </Namespace>
    <Namespace Name="MonoTouch.WatchKit">
      <Type Name="IWKImageAnimatable" Kind="Interface" />
      <Type Name="WKAccessibility" Kind="Class" />
      <Type Name="WKAccessibilityImageRegion" Kind="Class" />
      <Type Name="WKErrorCode" Kind="Enumeration" />
      <Type Name="WKErrorCodeExtensions" Kind="Class" />
      <Type Name="WKInterfaceButton" Kind="Class" />
      <Type Name="WKInterfaceController" Kind="Class" />
      <Type Name="WKInterfaceDate" Kind="Class" />
      <Type Name="WKInterfaceDevice" Kind="Class" />
      <Type Name="WKInterfaceGroup" Kind="Class" />
      <Type Name="WKInterfaceImage" Kind="Class" />
      <Type Name="WKInterfaceLabel" Kind="Class" />
      <Type Name="WKInterfaceMap" Kind="Class" />
      <Type Name="WKInterfaceMapPinColor" Kind="Enumeration" />
      <Type Name="WKInterfaceObject" Kind="Class" />
      <Type Name="WKInterfaceObject+Notifications" Kind="Class" />
      <Type Name="WKInterfaceSeparator" Kind="Class" />
      <Type Name="WKInterfaceSlider" Kind="Class" />
      <Type Name="WKInterfaceSwitch" Kind="Class" />
      <Type Name="WKInterfaceTable" Kind="Class" />
      <Type Name="WKInterfaceTimer" Kind="Class" />
      <Type Name="WKMenuItemIcon" Kind="Enumeration" />
      <Type Name="WKTextInputMode" Kind="Enumeration" />
      <Type Name="WKUserNotificationInterfaceController" Kind="Class" />
      <Type Name="WKUserNotificationInterfaceType" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="MonoTouch.WebKit">
      <Type Name="IWKNavigationDelegate" Kind="Interface" />
      <Type Name="IWKPreviewActionItem" Kind="Interface" />
      <Type Name="IWKScriptMessageHandler" Kind="Interface" />
      <Type Name="IWKUIDelegate" Kind="Interface" />
      <Type Name="WKAudiovisualMediaTypes" Kind="Enumeration" />
      <Type Name="WKBackForwardList" Kind="Class" />
      <Type Name="WKBackForwardListItem" Kind="Class" />
      <Type Name="WKDataDetectorTypes" Kind="Enumeration" />
      <Type Name="WKElementInfo" Kind="Class" />
      <Type Name="WKErrorCode" Kind="Enumeration" />
      <Type Name="WKErrorCodeExtensions" Kind="Class" />
      <Type Name="WKFrameInfo" Kind="Class" />
      <Type Name="WKJavascriptEvaluationResult" Kind="Delegate" />
      <Type Name="WKNavigation" Kind="Class" />
      <Type Name="WKNavigationAction" Kind="Class" />
      <Type Name="WKNavigationActionPolicy" Kind="Enumeration" />
      <Type Name="WKNavigationDelegate" Kind="Class" />
      <Type Name="WKNavigationDelegate_Extensions" Kind="Class" />
      <Type Name="WKNavigationResponse" Kind="Class" />
      <Type Name="WKNavigationResponsePolicy" Kind="Enumeration" />
      <Type Name="WKNavigationType" Kind="Enumeration" />
      <Type Name="WKPreferences" Kind="Class" />
      <Type Name="WKPreviewActionItemIdentifier" Kind="Class" />
      <Type Name="WKPreviewElementInfo" Kind="Class" />
      <Type Name="WKProcessPool" Kind="Class" />
      <Type Name="WKScriptMessage" Kind="Class" />
      <Type Name="WKScriptMessageHandler" Kind="Class" />
      <Type Name="WKSecurityOrigin" Kind="Class" />
      <Type Name="WKSelectionGranularity" Kind="Enumeration" />
      <Type Name="WKUIDelegate" Kind="Class" />
      <Type Name="WKUIDelegate_Extensions" Kind="Class" />
      <Type Name="WKUserContentController" Kind="Class" />
      <Type Name="WKUserScript" Kind="Class" />
      <Type Name="WKUserScriptInjectionTime" Kind="Enumeration" />
      <Type Name="WKWebsiteDataRecord" Kind="Class" />
      <Type Name="WKWebsiteDataStore" Kind="Class" />
      <Type Name="WKWebsiteDataType" Kind="Class" />
      <Type Name="WKWebView" Kind="Class" />
      <Type Name="WKWebView+WKWebViewAppearance" Kind="Class" />
      <Type Name="WKWebViewConfiguration" Kind="Class" />
      <Type Name="WKWindowFeatures" Kind="Class" />
    </Namespace>
    <Namespace Name="NUnit">
      <Type Name="Env" Kind="Class" />
      <Type Name="ObjectList" Kind="Class" />
    </Namespace>
    <Namespace Name="NUnit.Framework">
      <Type Name="Assert" Kind="Class" />
      <Type Name="AssertionException" Kind="Class" />
      <Type Name="AssertionHelper" Kind="Class" />
      <Type Name="Assume" Kind="Class" />
      <Type Name="CategoryAttribute" Kind="Class" />
      <Type Name="CombinatorialAttribute" Kind="Class" />
      <Type Name="Contains" Kind="Class" />
      <Type Name="CultureAttribute" Kind="Class" />
      <Type Name="DataAttribute" Kind="Class" />
      <Type Name="DatapointAttribute" Kind="Class" />
      <Type Name="DatapointsAttribute" Kind="Class" />
      <Type Name="DatapointSourceAttribute" Kind="Class" />
      <Type Name="DescriptionAttribute" Kind="Class" />
      <Type Name="ExpectedExceptionAttribute" Kind="Class" />
      <Type Name="ExpectedExceptionDecorator" Kind="Class" />
      <Type Name="ExplicitAttribute" Kind="Class" />
      <Type Name="GlobalSettings" Kind="Class" />
      <Type Name="Guard" Kind="Class" />
      <Type Name="Has" Kind="Class" />
      <Type Name="IExpectException" Kind="Interface" />
      <Type Name="IgnoreAttribute" Kind="Class" />
      <Type Name="IgnoreException" Kind="Class" />
      <Type Name="IncludeExcludeAttribute" Kind="Class" />
      <Type Name="InconclusiveException" Kind="Class" />
      <Type Name="Is" Kind="Class" />
      <Type Name="Iz" Kind="Class" />
      <Type Name="ListMapper" Kind="Class" />
      <Type Name="MaxTimeAttribute" Kind="Class" />
      <Type Name="MessageMatch" Kind="Enumeration" />
      <Type Name="NUnitAttribute" Kind="Class" />
      <Type Name="PairwiseAttribute" Kind="Class" />
      <Type Name="PlatformAttribute" Kind="Class" />
      <Type Name="PostTestAttribute" Kind="Class" />
      <Type Name="PreTestAttribute" Kind="Class" />
      <Type Name="PropertyAttribute" Kind="Class" />
      <Type Name="RandomAttribute" Kind="Class" />
      <Type Name="RangeAttribute" Kind="Class" />
      <Type Name="RequiredAddinAttribute" Kind="Class" />
      <Type Name="SequentialAttribute" Kind="Class" />
      <Type Name="SetCultureAttribute" Kind="Class" />
      <Type Name="SetUICultureAttribute" Kind="Class" />
      <Type Name="SetUpAttribute" Kind="Class" />
      <Type Name="SpecialValue" Kind="Enumeration" />
      <Type Name="StackFilter" Kind="Class" />
      <Type Name="SuccessException" Kind="Class" />
      <Type Name="TearDownAttribute" Kind="Class" />
      <Type Name="TestAttribute" Kind="Class" />
      <Type Name="TestCaseAttribute" Kind="Class" />
      <Type Name="TestCaseData" Kind="Class" />
      <Type Name="TestCaseSourceAttribute" Kind="Class" />
      <Type Name="TestContext" Kind="Class" />
      <Type Name="TestContext+ResultAdapter" Kind="Class" />
      <Type Name="TestContext+TestAdapter" Kind="Class" />
      <Type Name="TestDelegate" Kind="Delegate" />
      <Type Name="TestFixtureAttribute" Kind="Class" />
      <Type Name="TestFixtureSetUpAttribute" Kind="Class" />
      <Type Name="TestFixtureTearDownAttribute" Kind="Class" />
      <Type Name="TextMessageWriter" Kind="Class" />
      <Type Name="TheoryAttribute" Kind="Class" />
      <Type Name="Throws" Kind="Class" />
      <Type Name="TimeoutAttribute" Kind="Class" />
      <Type Name="ValuesAttribute" Kind="Class" />
      <Type Name="ValueSourceAttribute" Kind="Class" />
    </Namespace>
    <Namespace Name="NUnit.Framework.Api">
      <Type Name="AttributeDictionary" Kind="Class" />
      <Type Name="ExpectedExceptionData" Kind="Structure" />
      <Type Name="IDynamicTestCaseSource" Kind="Interface" />
      <Type Name="IParameterDataSource" Kind="Interface" />
      <Type Name="IPropertyBag" Kind="Interface" />
      <Type Name="ITest" Kind="Interface" />
      <Type Name="ITestAssemblyBuilder" Kind="Interface" />
      <Type Name="ITestAssemblyRunner" Kind="Interface" />
      <Type Name="ITestCaseData" Kind="Interface" />
      <Type Name="ITestCaseSource" Kind="Interface" />
      <Type Name="ITestFilter" Kind="Interface" />
      <Type Name="ITestListener" Kind="Interface" />
      <Type Name="ITestResult" Kind="Interface" />
      <Type Name="IXmlNodeBuilder" Kind="Interface" />
      <Type Name="NodeList" Kind="Class" />
      <Type Name="PropertyEntry" Kind="Class" />
      <Type Name="ResultState" Kind="Class" />
      <Type Name="RunState" Kind="Enumeration" />
      <Type Name="TestOutput" Kind="Class" />
      <Type Name="TestOutputType" Kind="Enumeration" />
      <Type Name="TestStatus" Kind="Enumeration" />
      <Type Name="XmlNode" Kind="Class" />
    </Namespace>
    <Namespace Name="NUnit.Framework.Builders">
      <Type Name="CombinatorialStrategy" Kind="Class" />
      <Type Name="CombinatorialTestCaseProvider" Kind="Class" />
      <Type Name="CombiningStrategy" Kind="Class" />
      <Type Name="DataAttributeTestCaseProvider" Kind="Class" />
      <Type Name="DatapointProvider" Kind="Class" />
      <Type Name="NUnitTestCaseBuilder" Kind="Class" />
      <Type Name="NUnitTestFixtureBuilder" Kind="Class" />
      <Type Name="PairwiseStrategy" Kind="Class" />
      <Type Name="ParameterDataProvider" Kind="Class" />
      <Type Name="SequentialStrategy" Kind="Class" />
    </Namespace>
    <Namespace Name="NUnit.Framework.Constraints">
      <Type Name="ActualValueDelegate`1" DisplayName="ActualValueDelegate&lt;T&gt;" Kind="Delegate" />
      <Type Name="AllItemsConstraint" Kind="Class" />
      <Type Name="AllOperator" Kind="Class" />
      <Type Name="AndConstraint" Kind="Class" />
      <Type Name="AndOperator" Kind="Class" />
      <Type Name="AssignableFromConstraint" Kind="Class" />
      <Type Name="AssignableToConstraint" Kind="Class" />
      <Type Name="AttributeConstraint" Kind="Class" />
      <Type Name="AttributeExistsConstraint" Kind="Class" />
      <Type Name="AttributeOperator" Kind="Class" />
      <Type Name="BasicConstraint" Kind="Class" />
      <Type Name="BinaryConstraint" Kind="Class" />
      <Type Name="BinaryOperator" Kind="Class" />
      <Type Name="BinarySerializableConstraint" Kind="Class" />
      <Type Name="CollectionConstraint" Kind="Class" />
      <Type Name="CollectionContainsConstraint" Kind="Class" />
      <Type Name="CollectionEquivalentConstraint" Kind="Class" />
      <Type Name="CollectionItemsEqualConstraint" Kind="Class" />
      <Type Name="CollectionOperator" Kind="Class" />
      <Type Name="CollectionOrderedConstraint" Kind="Class" />
      <Type Name="CollectionSubsetConstraint" Kind="Class" />
      <Type Name="CollectionTally" Kind="Class" />
      <Type Name="ComparisonAdapter" Kind="Class" />
      <Type Name="ComparisonConstraint" Kind="Class" />
      <Type Name="Constraint" Kind="Class" />
      <Type Name="ConstraintBuilder" Kind="Class" />
      <Type Name="ConstraintBuilder+ConstraintStack" Kind="Class" />
      <Type Name="ConstraintBuilder+OperatorStack" Kind="Class" />
      <Type Name="ConstraintExpression" Kind="Class" />
      <Type Name="ConstraintExpressionBase" Kind="Class" />
      <Type Name="ConstraintFactory" Kind="Class" />
      <Type Name="ConstraintOperator" Kind="Class" />
      <Type Name="ContainsConstraint" Kind="Class" />
      <Type Name="DelayedConstraint" Kind="Class" />
      <Type Name="EmptyCollectionConstraint" Kind="Class" />
      <Type Name="EmptyConstraint" Kind="Class" />
      <Type Name="EmptyDirectoryConstraint" Kind="Class" />
      <Type Name="EmptyStringConstraint" Kind="Class" />
      <Type Name="EndsWithConstraint" Kind="Class" />
      <Type Name="EqualConstraint" Kind="Class" />
      <Type Name="EqualityAdapter" Kind="Class" />
      <Type Name="ExactCountConstraint" Kind="Class" />
      <Type Name="ExactCountOperator" Kind="Class" />
      <Type Name="ExactTypeConstraint" Kind="Class" />
      <Type Name="ExceptionTypeConstraint" Kind="Class" />
      <Type Name="FailurePoint" Kind="Class" />
      <Type Name="FalseConstraint" Kind="Class" />
      <Type Name="FloatingPointNumerics" Kind="Class" />
      <Type Name="GreaterThanConstraint" Kind="Class" />
      <Type Name="GreaterThanOrEqualConstraint" Kind="Class" />
      <Type Name="InstanceOfTypeConstraint" Kind="Class" />
      <Type Name="IResolveConstraint" Kind="Interface" />
      <Type Name="LessThanConstraint" Kind="Class" />
      <Type Name="LessThanOrEqualConstraint" Kind="Class" />
      <Type Name="MessageWriter" Kind="Class" />
      <Type Name="MsgUtils" Kind="Class" />
      <Type Name="NaNConstraint" Kind="Class" />
      <Type Name="NoItemConstraint" Kind="Class" />
      <Type Name="NoneOperator" Kind="Class" />
      <Type Name="NotConstraint" Kind="Class" />
      <Type Name="NotOperator" Kind="Class" />
      <Type Name="NullConstraint" Kind="Class" />
      <Type Name="NullOrEmptyStringConstraint" Kind="Class" />
      <Type Name="Numerics" Kind="Class" />
      <Type Name="NUnitComparer" Kind="Class" />
      <Type Name="NUnitEqualityComparer" Kind="Class" />
      <Type Name="OrConstraint" Kind="Class" />
      <Type Name="OrOperator" Kind="Class" />
      <Type Name="PathConstraint" Kind="Class" />
      <Type Name="PredicateConstraint`1" DisplayName="PredicateConstraint&lt;T&gt;" Kind="Class" />
      <Type Name="PrefixConstraint" Kind="Class" />
      <Type Name="PrefixOperator" Kind="Class" />
      <Type Name="PropertyConstraint" Kind="Class" />
      <Type Name="PropertyExistsConstraint" Kind="Class" />
      <Type Name="PropOperator" Kind="Class" />
      <Type Name="RangeConstraint" Kind="Class" />
      <Type Name="RangeConstraint`1" DisplayName="RangeConstraint&lt;T&gt;" Kind="Class" />
      <Type Name="RegexConstraint" Kind="Class" />
      <Type Name="ResolvableConstraintExpression" Kind="Class" />
      <Type Name="ReusableConstraint" Kind="Class" />
      <Type Name="SameAsConstraint" Kind="Class" />
      <Type Name="SamePathConstraint" Kind="Class" />
      <Type Name="SamePathOrUnderConstraint" Kind="Class" />
      <Type Name="SelfResolvingOperator" Kind="Class" />
      <Type Name="SomeItemsConstraint" Kind="Class" />
      <Type Name="SomeOperator" Kind="Class" />
      <Type Name="StartsWithConstraint" Kind="Class" />
      <Type Name="StringConstraint" Kind="Class" />
      <Type Name="SubPathConstraint" Kind="Class" />
      <Type Name="SubstringConstraint" Kind="Class" />
      <Type Name="ThrowsConstraint" Kind="Class" />
      <Type Name="ThrowsNothingConstraint" Kind="Class" />
      <Type Name="ThrowsOperator" Kind="Class" />
      <Type Name="Tolerance" Kind="Class" />
      <Type Name="ToleranceMode" Kind="Enumeration" />
      <Type Name="TrueConstraint" Kind="Class" />
      <Type Name="TypeConstraint" Kind="Class" />
      <Type Name="UniqueItemsConstraint" Kind="Class" />
      <Type Name="WithOperator" Kind="Class" />
      <Type Name="XmlSerializableConstraint" Kind="Class" />
    </Namespace>
    <Namespace Name="NUnit.Framework.Extensibility">
      <Type Name="IParameterDataProvider" Kind="Interface" />
      <Type Name="ISuiteBuilder" Kind="Interface" />
      <Type Name="ITestCaseBuilder" Kind="Interface" />
      <Type Name="ITestCaseBuilder2" Kind="Interface" />
      <Type Name="ITestCaseProvider" Kind="Interface" />
    </Namespace>
    <Namespace Name="NUnit.Framework.Internal">
      <Type Name="AssemblyHelper" Kind="Class" />
      <Type Name="CultureDetector" Kind="Class" />
      <Type Name="ExceptionHelper" Kind="Class" />
      <Type Name="FinallyDelegate" Kind="Class" />
      <Type Name="IApplyToContext" Kind="Interface" />
      <Type Name="IApplyToTest" Kind="Interface" />
      <Type Name="InvalidTestFixtureException" Kind="Class" />
      <Type Name="MethodHelper" Kind="Class" />
      <Type Name="NUnitException" Kind="Class" />
      <Type Name="NUnitLiteTestAssemblyBuilder" Kind="Class" />
      <Type Name="NUnitLiteTestAssemblyRunner" Kind="Class" />
      <Type Name="OSPlatform" Kind="Class" />
      <Type Name="OSPlatform+ProductType" Kind="Enumeration" />
      <Type Name="ParameterizedFixtureSuite" Kind="Class" />
      <Type Name="ParameterizedMethodSuite" Kind="Class" />
      <Type Name="ParameterSet" Kind="Class" />
      <Type Name="PlatformHelper" Kind="Class" />
      <Type Name="PropertyBag" Kind="Class" />
      <Type Name="PropertyBag+PropertyBagEnumerator" Kind="Class" />
      <Type Name="PropertyNames" Kind="Class" />
      <Type Name="RandomGenerator" Kind="Class" />
      <Type Name="Randomizer" Kind="Class" />
      <Type Name="Reflect" Kind="Class" />
      <Type Name="RuntimeFramework" Kind="Class" />
      <Type Name="RuntimeType" Kind="Enumeration" />
      <Type Name="StackFilter" Kind="Class" />
      <Type Name="StringUtil" Kind="Class" />
      <Type Name="Test" Kind="Class" />
      <Type Name="TestAssembly" Kind="Class" />
      <Type Name="TestCaseResult" Kind="Class" />
      <Type Name="TestExecutionContext" Kind="Class" />
      <Type Name="TestFilter" Kind="Class" />
      <Type Name="TestFixture" Kind="Class" />
      <Type Name="TestFixtureBuilder" Kind="Class" />
      <Type Name="TestListener" Kind="Class" />
      <Type Name="TestMethod" Kind="Class" />
      <Type Name="TestResult" Kind="Class" />
      <Type Name="TestSuite" Kind="Class" />
      <Type Name="TestSuiteResult" Kind="Class" />
      <Type Name="TextMessageWriter" Kind="Class" />
      <Type Name="ThreadUtility" Kind="Class" />
      <Type Name="TypeHelper" Kind="Class" />
    </Namespace>
    <Namespace Name="NUnit.Framework.Internal.Commands">
      <Type Name="CommandDecoratorList" Kind="Class" />
      <Type Name="CommandStage" Kind="Enumeration" />
      <Type Name="DelegatingTestCommand" Kind="Class" />
      <Type Name="ExpectedExceptionCommand" Kind="Class" />
      <Type Name="ICommandDecorator" Kind="Interface" />
      <Type Name="MaxTimeCommand" Kind="Class" />
      <Type Name="OneTimeSetUpCommand" Kind="Class" />
      <Type Name="OneTimeTearDownCommand" Kind="Class" />
      <Type Name="SetUpTearDownCommand" Kind="Class" />
      <Type Name="SetUpTearDownDecorator" Kind="Class" />
      <Type Name="SkipCommand" Kind="Class" />
      <Type Name="TestCommand" Kind="Class" />
      <Type Name="TestMethodCommand" Kind="Class" />
      <Type Name="TheoryResultCommand" Kind="Class" />
    </Namespace>
    <Namespace Name="NUnit.Framework.Internal.Filters">
      <Type Name="AndFilter" Kind="Class" />
      <Type Name="CategoryExpression" Kind="Class" />
      <Type Name="CategoryFilter" Kind="Class" />
      <Type Name="NotFilter" Kind="Class" />
      <Type Name="OrFilter" Kind="Class" />
      <Type Name="SimpleCategoryExpression" Kind="Class" />
      <Type Name="SimpleNameFilter" Kind="Class" />
    </Namespace>
    <Namespace Name="NUnit.Framework.Internal.WorkItems">
      <Type Name="CompositeWorkItem" Kind="Class" />
      <Type Name="SimpleWorkItem" Kind="Class" />
      <Type Name="WorkItem" Kind="Class" />
      <Type Name="WorkItemState" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="NUnitLite">
      <Type Name="Env" Kind="Class" />
      <Type Name="ITest" Kind="Interface" />
      <Type Name="NullListener" Kind="Class" />
      <Type Name="Reflect" Kind="Class" />
      <Type Name="ResultState" Kind="Enumeration" />
      <Type Name="ResultSummary" Kind="Class" />
      <Type Name="RunState" Kind="Enumeration" />
      <Type Name="TestCase" Kind="Class" />
      <Type Name="TestListener" Kind="Interface" />
      <Type Name="TestResult" Kind="Class" />
      <Type Name="TestSuite" Kind="Class" />
      <Type Name="TouchOptions" Kind="Class" />
    </Namespace>
    <Namespace Name="NUnitLite.Runner">
      <Type Name="CommandLineOptions" Kind="Class" />
      <Type Name="ConsoleWriter" Kind="Class" />
      <Type Name="DebugWriter" Kind="Class" />
      <Type Name="NUnit2XmlOutputWriter" Kind="Class" />
      <Type Name="NUnit3XmlOutputWriter" Kind="Class" />
      <Type Name="OutputWriter" Kind="Class" />
      <Type Name="ResultReporter" Kind="Class" />
      <Type Name="ResultSummary" Kind="Class" />
      <Type Name="TestLoader" Kind="Class" />
      <Type Name="TestRunner" Kind="Class" />
      <Type Name="TextUI" Kind="Class" />
    </Namespace>
    <Namespace Name="OpenTK">
      <Type Name="AutoGeneratedAttribute" Kind="Class" />
      <Type Name="BezierCurve" Kind="Structure" />
      <Type Name="BezierCurveCubic" Kind="Structure" />
      <Type Name="BezierCurveQuadric" Kind="Structure" />
      <Type Name="BindingsBase" Kind="Class" />
      <Type Name="BlittableValueType" Kind="Class" />
      <Type Name="BlittableValueType`1" DisplayName="BlittableValueType&lt;T&gt;" Kind="Class" />
      <Type Name="Box2" Kind="Structure" />
      <Type Name="Configuration" Kind="Class" />
      <Type Name="ContextHandle" Kind="Structure" />
      <Type Name="DisplayResolution" Kind="Class" />
      <Type Name="FrameEventArgs" Kind="Class" />
      <Type Name="Functions" Kind="Class" />
      <Type Name="Half" Kind="Structure" />
      <Type Name="INativeWindow" Kind="Interface" />
      <Type Name="KeyPressEventArgs" Kind="Class" />
      <Type Name="MathHelper" Kind="Class" />
      <Type Name="Matrix2" Kind="Structure" />
      <Type Name="Matrix3" Kind="Structure" />
      <Type Name="Matrix4" Kind="Structure" />
      <Type Name="Matrix4d" Kind="Structure" />
      <Type Name="Quaternion" Kind="Structure" />
      <Type Name="Quaterniond" Kind="Structure" />
      <Type Name="Toolkit" Kind="Class" />
      <Type Name="Vector2" Kind="Structure" />
      <Type Name="Vector2d" Kind="Structure" />
      <Type Name="Vector2h" Kind="Structure" />
      <Type Name="Vector2i" Kind="Structure" />
      <Type Name="Vector3" Kind="Structure" />
      <Type Name="Vector3d" Kind="Structure" />
      <Type Name="Vector3h" Kind="Structure" />
      <Type Name="Vector3i" Kind="Structure" />
      <Type Name="Vector4" Kind="Structure" />
      <Type Name="Vector4d" Kind="Structure" />
      <Type Name="Vector4h" Kind="Structure" />
      <Type Name="Vector4i" Kind="Structure" />
      <Type Name="WindowBorder" Kind="Enumeration" />
      <Type Name="WindowState" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="OpenTK.Audio">
      <Type Name="AudioContext" Kind="Class" />
      <Type Name="AudioContext+MaxAuxiliarySends" Kind="Enumeration" />
      <Type Name="AudioContextException" Kind="Class" />
      <Type Name="AudioDeviceException" Kind="Class" />
      <Type Name="AudioException" Kind="Class" />
      <Type Name="AudioValueException" Kind="Class" />
    </Namespace>
    <Namespace Name="OpenTK.Audio.OpenAL">
      <Type Name="AL" Kind="Class" />
      <Type Name="ALBufferState" Kind="Enumeration" />
      <Type Name="Alc" Kind="Class" />
      <Type Name="ALCapability" Kind="Enumeration" />
      <Type Name="AlcContextAttributes" Kind="Enumeration" />
      <Type Name="AlcError" Kind="Enumeration" />
      <Type Name="AlcGetInteger" Kind="Enumeration" />
      <Type Name="AlcGetString" Kind="Enumeration" />
      <Type Name="AlcGetStringList" Kind="Enumeration" />
      <Type Name="ALDistanceModel" Kind="Enumeration" />
      <Type Name="ALError" Kind="Enumeration" />
      <Type Name="ALFormat" Kind="Enumeration" />
      <Type Name="ALGetBufferi" Kind="Enumeration" />
      <Type Name="ALGetFloat" Kind="Enumeration" />
      <Type Name="ALGetInteger" Kind="Enumeration" />
      <Type Name="ALGetSourcei" Kind="Enumeration" />
      <Type Name="ALGetString" Kind="Enumeration" />
      <Type Name="ALListener3f" Kind="Enumeration" />
      <Type Name="ALListenerf" Kind="Enumeration" />
      <Type Name="ALListenerfv" Kind="Enumeration" />
      <Type Name="ALSource3f" Kind="Enumeration" />
      <Type Name="ALSource3i" Kind="Enumeration" />
      <Type Name="ALSourceb" Kind="Enumeration" />
      <Type Name="ALSourcef" Kind="Enumeration" />
      <Type Name="ALSourcei" Kind="Enumeration" />
      <Type Name="ALSourceState" Kind="Enumeration" />
      <Type Name="ALSourceType" Kind="Enumeration" />
      <Type Name="EffectsExtension" Kind="Class" />
      <Type Name="EffectsExtension+EaxReverb" Kind="Structure" />
      <Type Name="EffectsExtension+EfxEaxReverb" Kind="Structure" />
      <Type Name="EffectsExtension+ReverbPresets" Kind="Class" />
      <Type Name="EfxAuxiliaryf" Kind="Enumeration" />
      <Type Name="EfxAuxiliaryi" Kind="Enumeration" />
      <Type Name="EfxEffect3f" Kind="Enumeration" />
      <Type Name="EfxEffectf" Kind="Enumeration" />
      <Type Name="EfxEffecti" Kind="Enumeration" />
      <Type Name="EfxEffectType" Kind="Enumeration" />
      <Type Name="EfxFilterf" Kind="Enumeration" />
      <Type Name="EfxFilteri" Kind="Enumeration" />
      <Type Name="EfxFilterType" Kind="Enumeration" />
      <Type Name="EfxFormantFilterSettings" Kind="Enumeration" />
      <Type Name="XRamExtension" Kind="Class" />
      <Type Name="XRamExtension+XRamStorage" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="OpenTK.Graphics">
      <Type Name="Color4" Kind="Structure" />
      <Type Name="ColorFormat" Kind="Structure" />
      <Type Name="GraphicsBindingsBase" Kind="Class" />
      <Type Name="GraphicsContext" Kind="Class" />
      <Type Name="GraphicsContextException" Kind="Class" />
      <Type Name="GraphicsContextFlags" Kind="Enumeration" />
      <Type Name="GraphicsContextMissingException" Kind="Class" />
      <Type Name="GraphicsMode" Kind="Class" />
      <Type Name="GraphicsModeException" Kind="Class" />
      <Type Name="IGraphicsContext" Kind="Interface" />
      <Type Name="IGraphicsContextInternal" Kind="Interface" />
    </Namespace>
    <Namespace Name="OpenTK.Graphics.ES11">
      <Type Name="All" Kind="Enumeration" />
      <Type Name="AlphaFunction" Kind="Enumeration" />
      <Type Name="BeginMode" Kind="Enumeration" />
      <Type Name="BlendingFactorDest" Kind="Enumeration" />
      <Type Name="BlendingFactorSrc" Kind="Enumeration" />
      <Type Name="Boolean" Kind="Enumeration" />
      <Type Name="BufferObjects" Kind="Enumeration" />
      <Type Name="ClearBufferMask" Kind="Enumeration" />
      <Type Name="ClipPlaneName" Kind="Enumeration" />
      <Type Name="CullFaceMode" Kind="Enumeration" />
      <Type Name="DataType" Kind="Enumeration" />
      <Type Name="EnableCap" Kind="Enumeration" />
      <Type Name="ErrorCode" Kind="Enumeration" />
      <Type Name="Extensions" Kind="Enumeration" />
      <Type Name="FogMode" Kind="Enumeration" />
      <Type Name="FogParameter" Kind="Enumeration" />
      <Type Name="FrontFaceDirection" Kind="Enumeration" />
      <Type Name="GetPName" Kind="Enumeration" />
      <Type Name="GetTextureParameter" Kind="Enumeration" />
      <Type Name="GL" Kind="Class" />
      <Type Name="GL+Apple" Kind="Class" />
      <Type Name="GL+Ext" Kind="Class" />
      <Type Name="GL+Oes" Kind="Class" />
      <Type Name="HintMode" Kind="Enumeration" />
      <Type Name="HintTarget" Kind="Enumeration" />
      <Type Name="LegacyCoreVersions" Kind="Enumeration" />
      <Type Name="LightModelParameter" Kind="Enumeration" />
      <Type Name="LightName" Kind="Enumeration" />
      <Type Name="LightParameter" Kind="Enumeration" />
      <Type Name="LogicOp" Kind="Enumeration" />
      <Type Name="MaterialParameter" Kind="Enumeration" />
      <Type Name="MatrixMode" Kind="Enumeration" />
      <Type Name="OesdrawTexture" Kind="Enumeration" />
      <Type Name="OesDrawTexture" Kind="Enumeration" />
      <Type Name="OesmatrixGet" Kind="Enumeration" />
      <Type Name="OesMatrixGet" Kind="Enumeration" />
      <Type Name="OesmatrixPalette" Kind="Enumeration" />
      <Type Name="OesMatrixPalette" Kind="Enumeration" />
      <Type Name="OespointSizeArray" Kind="Enumeration" />
      <Type Name="OesPointSizeArray" Kind="Enumeration" />
      <Type Name="OespointSprite" Kind="Enumeration" />
      <Type Name="OesPointSprite" Kind="Enumeration" />
      <Type Name="OpenGlescoreVersions" Kind="Enumeration" />
      <Type Name="OpenGlEsCoreVersions" Kind="Enumeration" />
      <Type Name="PixelFormat" Kind="Enumeration" />
      <Type Name="PixelInternalFormat" Kind="Enumeration" />
      <Type Name="PixelStoreParameter" Kind="Enumeration" />
      <Type Name="PixelType" Kind="Enumeration" />
      <Type Name="ShadingModel" Kind="Enumeration" />
      <Type Name="StencilOp" Kind="Enumeration" />
      <Type Name="StringName" Kind="Enumeration" />
      <Type Name="TextureCombineDot3" Kind="Enumeration" />
      <Type Name="TextureEnvMode" Kind="Enumeration" />
      <Type Name="TextureEnvParameter" Kind="Enumeration" />
      <Type Name="TextureEnvTarget" Kind="Enumeration" />
      <Type Name="TextureMagFilter" Kind="Enumeration" />
      <Type Name="TextureMinFilter" Kind="Enumeration" />
      <Type Name="TextureParameterName" Kind="Enumeration" />
      <Type Name="TextureUnit" Kind="Enumeration" />
      <Type Name="TextureWrapMode" Kind="Enumeration" />
      <Type Name="Unknown" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="OpenTK.Graphics.ES20">
      <Type Name="ActiveAttribType" Kind="Enumeration" />
      <Type Name="ActiveUniformType" Kind="Enumeration" />
      <Type Name="All" Kind="Enumeration" />
      <Type Name="BeginMode" Kind="Enumeration" />
      <Type Name="BlendEquationMode" Kind="Enumeration" />
      <Type Name="BlendEquationSeparate" Kind="Enumeration" />
      <Type Name="BlendingFactorDest" Kind="Enumeration" />
      <Type Name="BlendingFactorSrc" Kind="Enumeration" />
      <Type Name="BlendSubtract" Kind="Enumeration" />
      <Type Name="Boolean" Kind="Enumeration" />
      <Type Name="BufferObjects" Kind="Enumeration" />
      <Type Name="BufferParameterName" Kind="Enumeration" />
      <Type Name="BufferTarget" Kind="Enumeration" />
      <Type Name="BufferUsage" Kind="Enumeration" />
      <Type Name="ClearBufferMask" Kind="Enumeration" />
      <Type Name="CullFaceMode" Kind="Enumeration" />
      <Type Name="DataType" Kind="Enumeration" />
      <Type Name="DepthFunction" Kind="Enumeration" />
      <Type Name="DrawElementsType" Kind="Enumeration" />
      <Type Name="EnableCap" Kind="Enumeration" />
      <Type Name="ErrorCode" Kind="Enumeration" />
      <Type Name="FramebufferErrorCode" Kind="Enumeration" />
      <Type Name="FramebufferObject" Kind="Enumeration" />
      <Type Name="FramebufferParameterName" Kind="Enumeration" />
      <Type Name="FramebufferSlot" Kind="Enumeration" />
      <Type Name="FramebufferTarget" Kind="Enumeration" />
      <Type Name="FrontFaceDirection" Kind="Enumeration" />
      <Type Name="GetPName" Kind="Enumeration" />
      <Type Name="GetTextureParameter" Kind="Enumeration" />
      <Type Name="GL" Kind="Class" />
      <Type Name="GL+Apple" Kind="Class" />
      <Type Name="GL+Ext" Kind="Class" />
      <Type Name="GL+Oes" Kind="Class" />
      <Type Name="HintMode" Kind="Enumeration" />
      <Type Name="HintTarget" Kind="Enumeration" />
      <Type Name="OpenGlescoreVersions" Kind="Enumeration" />
      <Type Name="OpenGlEsCoreVersions" Kind="Enumeration" />
      <Type Name="PixelFormat" Kind="Enumeration" />
      <Type Name="PixelInternalFormat" Kind="Enumeration" />
      <Type Name="PixelStoreParameter" Kind="Enumeration" />
      <Type Name="PixelType" Kind="Enumeration" />
      <Type Name="ProgramParameter" Kind="Enumeration" />
      <Type Name="ReadFormat" Kind="Enumeration" />
      <Type Name="RenderbufferInternalFormat" Kind="Enumeration" />
      <Type Name="RenderbufferParameterName" Kind="Enumeration" />
      <Type Name="RenderbufferTarget" Kind="Enumeration" />
      <Type Name="SeparateBlendFunctions" Kind="Enumeration" />
      <Type Name="ShaderBinary" Kind="Enumeration" />
      <Type Name="ShaderBinaryFormat" Kind="Enumeration" />
      <Type Name="ShaderParameter" Kind="Enumeration" />
      <Type Name="ShaderPrecision" Kind="Enumeration" />
      <Type Name="ShaderPrecisionSpecifiedTypes" Kind="Enumeration" />
      <Type Name="Shaders" Kind="Enumeration" />
      <Type Name="ShaderSource" Kind="Enumeration" />
      <Type Name="ShaderType" Kind="Enumeration" />
      <Type Name="StencilFunction" Kind="Enumeration" />
      <Type Name="StencilOp" Kind="Enumeration" />
      <Type Name="StringName" Kind="Enumeration" />
      <Type Name="TextureMagFilter" Kind="Enumeration" />
      <Type Name="TextureMinFilter" Kind="Enumeration" />
      <Type Name="TextureParameterName" Kind="Enumeration" />
      <Type Name="TextureTarget" Kind="Enumeration" />
      <Type Name="TextureUnit" Kind="Enumeration" />
      <Type Name="TextureWrapMode" Kind="Enumeration" />
      <Type Name="UniformTypes" Kind="Enumeration" />
      <Type Name="Unknown" Kind="Enumeration" />
      <Type Name="VertexArrays" Kind="Enumeration" />
      <Type Name="VertexAttribParameter" Kind="Enumeration" />
      <Type Name="VertexAttribPointerParameter" Kind="Enumeration" />
      <Type Name="VertexAttribPointerType" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="OpenTK.Graphics.ES30">
      <Type Name="ActiveAttribType" Kind="Enumeration" />
      <Type Name="ActiveUniformBlockParameter" Kind="Enumeration" />
      <Type Name="ActiveUniformParameter" Kind="Enumeration" />
      <Type Name="ActiveUniformType" Kind="Enumeration" />
      <Type Name="All" Kind="Enumeration" />
      <Type Name="BeginMode" Kind="Enumeration" />
      <Type Name="BlendEquationMode" Kind="Enumeration" />
      <Type Name="BlendEquationSeparate" Kind="Enumeration" />
      <Type Name="BlendingFactorDest" Kind="Enumeration" />
      <Type Name="BlendingFactorSrc" Kind="Enumeration" />
      <Type Name="BlendSubtract" Kind="Enumeration" />
      <Type Name="BlitFramebufferFilter" Kind="Enumeration" />
      <Type Name="Boolean" Kind="Enumeration" />
      <Type Name="BufferAccessMask" Kind="Enumeration" />
      <Type Name="BufferObjects" Kind="Enumeration" />
      <Type Name="BufferParameterName" Kind="Enumeration" />
      <Type Name="BufferPointer" Kind="Enumeration" />
      <Type Name="BufferRangeTarget" Kind="Enumeration" />
      <Type Name="BufferTarget" Kind="Enumeration" />
      <Type Name="BufferUsage" Kind="Enumeration" />
      <Type Name="ClearBuffer" Kind="Enumeration" />
      <Type Name="ClearBufferCombined" Kind="Enumeration" />
      <Type Name="ClearBufferMask" Kind="Enumeration" />
      <Type Name="CompressedInternalFormat" Kind="Enumeration" />
      <Type Name="CullFaceMode" Kind="Enumeration" />
      <Type Name="DataType" Kind="Enumeration" />
      <Type Name="DepthFunction" Kind="Enumeration" />
      <Type Name="DrawBufferMode" Kind="Enumeration" />
      <Type Name="DrawElementsType" Kind="Enumeration" />
      <Type Name="EnableCap" Kind="Enumeration" />
      <Type Name="ErrorCode" Kind="Enumeration" />
      <Type Name="FramebufferAttachment" Kind="Enumeration" />
      <Type Name="FramebufferErrorCode" Kind="Enumeration" />
      <Type Name="FramebufferObject" Kind="Enumeration" />
      <Type Name="FramebufferParameterName" Kind="Enumeration" />
      <Type Name="FramebufferSlot" Kind="Enumeration" />
      <Type Name="FramebufferTarget" Kind="Enumeration" />
      <Type Name="FrontFaceDirection" Kind="Enumeration" />
      <Type Name="GetIndexedPName" Kind="Enumeration" />
      <Type Name="GetPName" Kind="Enumeration" />
      <Type Name="GetQueryObjectParam" Kind="Enumeration" />
      <Type Name="GetQueryParam" Kind="Enumeration" />
      <Type Name="GetTextureParameter" Kind="Enumeration" />
      <Type Name="GL" Kind="Class" />
      <Type Name="GL+Apple" Kind="Class" />
      <Type Name="GL+Ext" Kind="Class" />
      <Type Name="HintMode" Kind="Enumeration" />
      <Type Name="HintTarget" Kind="Enumeration" />
      <Type Name="ImageTarget" Kind="Enumeration" />
      <Type Name="InternalFormatParameter" Kind="Enumeration" />
      <Type Name="OpenGlEsCoreVersions" Kind="Enumeration" />
      <Type Name="PixelFormat" Kind="Enumeration" />
      <Type Name="PixelInternalFormat" Kind="Enumeration" />
      <Type Name="PixelStoreParameter" Kind="Enumeration" />
      <Type Name="PixelType" Kind="Enumeration" />
      <Type Name="PrimitiveType" Kind="Enumeration" />
      <Type Name="ProgramParameter" Kind="Enumeration" />
      <Type Name="ProgramParameterName" Kind="Enumeration" />
      <Type Name="QueryTarget" Kind="Enumeration" />
      <Type Name="ReadBufferMode" Kind="Enumeration" />
      <Type Name="ReadFormat" Kind="Enumeration" />
      <Type Name="RenderbufferInternalFormat" Kind="Enumeration" />
      <Type Name="RenderbufferParameterName" Kind="Enumeration" />
      <Type Name="RenderbufferTarget" Kind="Enumeration" />
      <Type Name="SamplerParameterName" Kind="Enumeration" />
      <Type Name="SeparateBlendFunctions" Kind="Enumeration" />
      <Type Name="ShaderBinary" Kind="Enumeration" />
      <Type Name="ShaderBinaryFormat" Kind="Enumeration" />
      <Type Name="ShaderParameter" Kind="Enumeration" />
      <Type Name="ShaderPrecision" Kind="Enumeration" />
      <Type Name="ShaderPrecisionSpecifiedTypes" Kind="Enumeration" />
      <Type Name="Shaders" Kind="Enumeration" />
      <Type Name="ShaderSource" Kind="Enumeration" />
      <Type Name="ShaderType" Kind="Enumeration" />
      <Type Name="SizedInternalFormat" Kind="Enumeration" />
      <Type Name="StencilFunction" Kind="Enumeration" />
      <Type Name="StencilOp" Kind="Enumeration" />
      <Type Name="StringName" Kind="Enumeration" />
      <Type Name="StringNameIndexed" Kind="Enumeration" />
      <Type Name="SyncCondition" Kind="Enumeration" />
      <Type Name="SyncParameterName" Kind="Enumeration" />
      <Type Name="TextureComponentCount" Kind="Enumeration" />
      <Type Name="TextureMagFilter" Kind="Enumeration" />
      <Type Name="TextureMinFilter" Kind="Enumeration" />
      <Type Name="TextureParameterName" Kind="Enumeration" />
      <Type Name="TextureTarget" Kind="Enumeration" />
      <Type Name="TextureTarget2D" Kind="Enumeration" />
      <Type Name="TextureTarget3D" Kind="Enumeration" />
      <Type Name="TextureUnit" Kind="Enumeration" />
      <Type Name="TextureWrapMode" Kind="Enumeration" />
      <Type Name="Token" Kind="Enumeration" />
      <Type Name="TransformFeedbackMode" Kind="Enumeration" />
      <Type Name="TransformFeedbackPrimitiveType" Kind="Enumeration" />
      <Type Name="TransformFeedbackTarget" Kind="Enumeration" />
      <Type Name="TransformFeedbackType" Kind="Enumeration" />
      <Type Name="UniformTypes" Kind="Enumeration" />
      <Type Name="Unknown" Kind="Enumeration" />
      <Type Name="VertexArrays" Kind="Enumeration" />
      <Type Name="VertexAttribIntegerType" Kind="Enumeration" />
      <Type Name="VertexAttribParameter" Kind="Enumeration" />
      <Type Name="VertexAttribPointerParameter" Kind="Enumeration" />
      <Type Name="VertexAttribPointerType" Kind="Enumeration" />
      <Type Name="WaitSyncFlags" Kind="Enumeration" />
      <Type Name="WaitSyncStatus" Kind="Enumeration" />
    </Namespace>
    <Namespace Name="OpenTK.Platform">
      <Type Name="IGameWindow" Kind="Interface" />
      <Type Name="IWindowInfo" Kind="Interface" />
      <Type Name="Utilities" Kind="Class" />
    </Namespace>
    <Namespace Name="OpenTK.Platform.iPhoneOS">
      <Type Name="iPhoneOSGameView" Kind="Class" />
      <Type Name="iPhoneOSGraphicsContext" Kind="Class" />
    </Namespace>
    <Namespace Name="System">
      <Type Name="nfloat" Kind="Structure" />
      <Type Name="nint" Kind="Structure" />
      <Type Name="NMath" Kind="Class" />
      <Type Name="nuint" Kind="Structure" />
    </Namespace>
    <Namespace Name="System.Drawing">
      <Type Name="Color" Kind="Structure" />
      <Type Name="KnownColor" Kind="Enumeration" />
      <Type Name="Point" Kind="Structure" />
      <Type Name="PointF" Kind="Structure" />
      <Type Name="Rectangle" Kind="Structure" />
      <Type Name="RectangleF" Kind="Structure" />
      <Type Name="Size" Kind="Structure" />
      <Type Name="SizeF" Kind="Structure" />
    </Namespace>
    <Namespace Name="SystemConfiguration">
    </Namespace>
  </Types>
  <Title>NUnitLite</Title>
  <ExtensionMethods>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Accounts.ACErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.Accounts.ACErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.Accounts.ACErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.Accounts.ACErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.Accounts.ACErrorCode value</summary>
        </Docs>
        <Link Type="MonoTouch.Accounts.ACErrorCodeExtensions" Member="M:MonoTouch.Accounts.ACErrorCodeExtensions.GetDomain(MonoTouch.Accounts.ACErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AddressBook.ABAddressBookError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.AddressBook.ABAddressBookError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.AddressBook.ABAddressBookError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.AddressBook.ABAddressBookError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.AddressBook.ABAddressBookError value</summary>
        </Docs>
        <Link Type="MonoTouch.AddressBook.ABAddressBookErrorExtensions" Member="M:MonoTouch.AddressBook.ABAddressBookErrorExtensions.GetDomain(MonoTouch.AddressBook.ABAddressBookError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate" />
      </Targets>
      <Member MemberName="Cancelled">
        <MemberSignature Language="C#" Value="public static void Cancelled (this MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate This, MonoTouch.AddressBookUI.ABPeoplePickerNavigationController peoplePicker);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Cancelled(class MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate This, class MonoTouch.AddressBookUI.ABPeoplePickerNavigationController peoplePicker) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate" RefType="this" />
          <Parameter Name="peoplePicker" Type="MonoTouch.AddressBookUI.ABPeoplePickerNavigationController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peoplePicker">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AddressBookUI.ABPeoplePickerNavigationControllerDelegate_Extensions" Member="M:MonoTouch.AddressBookUI.ABPeoplePickerNavigationControllerDelegate_Extensions.Cancelled(MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate,MonoTouch.AddressBookUI.ABPeoplePickerNavigationController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate" />
      </Targets>
      <Member MemberName="DidSelectPerson">
        <MemberSignature Language="C#" Value="public static void DidSelectPerson (this MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate This, MonoTouch.AddressBookUI.ABPeoplePickerNavigationController peoplePicker, MonoTouch.AddressBook.ABPerson selectedPerson);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSelectPerson(class MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate This, class MonoTouch.AddressBookUI.ABPeoplePickerNavigationController peoplePicker, class MonoTouch.AddressBook.ABPerson selectedPerson) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate" RefType="this" />
          <Parameter Name="peoplePicker" Type="MonoTouch.AddressBookUI.ABPeoplePickerNavigationController" />
          <Parameter Name="selectedPerson" Type="MonoTouch.AddressBook.ABPerson" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peoplePicker">To be added.</param>
          <param name="selectedPerson">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AddressBookUI.ABPeoplePickerNavigationControllerDelegate_Extensions" Member="M:MonoTouch.AddressBookUI.ABPeoplePickerNavigationControllerDelegate_Extensions.DidSelectPerson(MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate,MonoTouch.AddressBookUI.ABPeoplePickerNavigationController,MonoTouch.AddressBook.ABPerson)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate" />
      </Targets>
      <Member MemberName="DidSelectPerson" apistyle="unified">
        <MemberSignature Language="C#" Value="public static void DidSelectPerson (this MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate This, MonoTouch.AddressBookUI.ABPeoplePickerNavigationController peoplePicker, MonoTouch.AddressBook.ABPerson selectedPerson, int propertyId, int identifier);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSelectPerson(class MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate This, class MonoTouch.AddressBookUI.ABPeoplePickerNavigationController peoplePicker, class MonoTouch.AddressBook.ABPerson selectedPerson, int32 propertyId, int32 identifier) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate" RefType="this" />
          <Parameter Name="peoplePicker" Type="MonoTouch.AddressBookUI.ABPeoplePickerNavigationController" />
          <Parameter Name="selectedPerson" Type="MonoTouch.AddressBook.ABPerson" />
          <Parameter Name="propertyId" Type="System.Int32" />
          <Parameter Name="identifier" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peoplePicker">To be added.</param>
          <param name="selectedPerson">To be added.</param>
          <param name="propertyId">To be added.</param>
          <param name="identifier">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AddressBookUI.ABPeoplePickerNavigationControllerDelegate_Extensions" Member="M:MonoTouch.AddressBookUI.ABPeoplePickerNavigationControllerDelegate_Extensions.DidSelectPerson(MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate,MonoTouch.AddressBookUI.ABPeoplePickerNavigationController,MonoTouch.AddressBook.ABPerson,System.Int32,System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate" />
      </Targets>
      <Member MemberName="ShouldContinue" apistyle="unified">
        <MemberSignature Language="C#" Value="public static bool ShouldContinue (this MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate This, MonoTouch.AddressBookUI.ABPeoplePickerNavigationController peoplePicker, MonoTouch.AddressBook.ABPerson selectedPerson);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldContinue(class MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate This, class MonoTouch.AddressBookUI.ABPeoplePickerNavigationController peoplePicker, class MonoTouch.AddressBook.ABPerson selectedPerson) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate" RefType="this" />
          <Parameter Name="peoplePicker" Type="MonoTouch.AddressBookUI.ABPeoplePickerNavigationController" />
          <Parameter Name="selectedPerson" Type="MonoTouch.AddressBook.ABPerson" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peoplePicker">To be added.</param>
          <param name="selectedPerson">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AddressBookUI.ABPeoplePickerNavigationControllerDelegate_Extensions" Member="M:MonoTouch.AddressBookUI.ABPeoplePickerNavigationControllerDelegate_Extensions.ShouldContinue(MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate,MonoTouch.AddressBookUI.ABPeoplePickerNavigationController,MonoTouch.AddressBook.ABPerson)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate" />
      </Targets>
      <Member MemberName="ShouldContinue" apistyle="unified">
        <MemberSignature Language="C#" Value="public static bool ShouldContinue (this MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate This, MonoTouch.AddressBookUI.ABPeoplePickerNavigationController peoplePicker, MonoTouch.AddressBook.ABPerson selectedPerson, int propertyId, int identifier);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldContinue(class MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate This, class MonoTouch.AddressBookUI.ABPeoplePickerNavigationController peoplePicker, class MonoTouch.AddressBook.ABPerson selectedPerson, int32 propertyId, int32 identifier) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate" RefType="this" />
          <Parameter Name="peoplePicker" Type="MonoTouch.AddressBookUI.ABPeoplePickerNavigationController" />
          <Parameter Name="selectedPerson" Type="MonoTouch.AddressBook.ABPerson" />
          <Parameter Name="propertyId" Type="System.Int32" />
          <Parameter Name="identifier" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peoplePicker">To be added.</param>
          <param name="selectedPerson">To be added.</param>
          <param name="propertyId">To be added.</param>
          <param name="identifier">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AddressBookUI.ABPeoplePickerNavigationControllerDelegate_Extensions" Member="M:MonoTouch.AddressBookUI.ABPeoplePickerNavigationControllerDelegate_Extensions.ShouldContinue(MonoTouch.AddressBookUI.IABPeoplePickerNavigationControllerDelegate,MonoTouch.AddressBookUI.ABPeoplePickerNavigationController,MonoTouch.AddressBook.ABPerson,System.Int32,System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AddressBookUI.IABUnknownPersonViewControllerDelegate" />
      </Targets>
      <Member MemberName="ShouldPerformDefaultActionForPerson" apistyle="unified">
        <MemberSignature Language="C#" Value="public static bool ShouldPerformDefaultActionForPerson (this MonoTouch.AddressBookUI.IABUnknownPersonViewControllerDelegate This, MonoTouch.AddressBookUI.ABUnknownPersonViewController personViewController, MonoTouch.AddressBook.ABPerson person, int propertyId, int identifier);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldPerformDefaultActionForPerson(class MonoTouch.AddressBookUI.IABUnknownPersonViewControllerDelegate This, class MonoTouch.AddressBookUI.ABUnknownPersonViewController personViewController, class MonoTouch.AddressBook.ABPerson person, int32 propertyId, int32 identifier) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AddressBookUI.IABUnknownPersonViewControllerDelegate" RefType="this" />
          <Parameter Name="personViewController" Type="MonoTouch.AddressBookUI.ABUnknownPersonViewController" />
          <Parameter Name="person" Type="MonoTouch.AddressBook.ABPerson" />
          <Parameter Name="propertyId" Type="System.Int32" />
          <Parameter Name="identifier" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="personViewController">To be added.</param>
          <param name="person">To be added.</param>
          <param name="propertyId">To be added.</param>
          <param name="identifier">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AddressBookUI.ABUnknownPersonViewControllerDelegate_Extensions" Member="M:MonoTouch.AddressBookUI.ABUnknownPersonViewControllerDelegate_Extensions.ShouldPerformDefaultActionForPerson(MonoTouch.AddressBookUI.IABUnknownPersonViewControllerDelegate,MonoTouch.AddressBookUI.ABUnknownPersonViewController,MonoTouch.AddressBook.ABPerson,System.Int32,System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AssetsLibrary.ALAssetsError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.AssetsLibrary.ALAssetsError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.AssetsLibrary.ALAssetsError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.AssetsLibrary.ALAssetsError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.AssetsLibrary.ALAssetsError value</summary>
        </Docs>
        <Link Type="MonoTouch.AssetsLibrary.ALAssetsErrorExtensions" Member="M:MonoTouch.AssetsLibrary.ALAssetsErrorExtensions.GetDomain(MonoTouch.AssetsLibrary.ALAssetsError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AudioToolbox.AudioChannelLayoutTag" />
      </Targets>
      <Member MemberName="GetNumberOfChannels">
        <MemberSignature Language="C#" Value="public static uint GetNumberOfChannels (this MonoTouch.AudioToolbox.AudioChannelLayoutTag inLayoutTag);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 GetNumberOfChannels(valuetype MonoTouch.AudioToolbox.AudioChannelLayoutTag inLayoutTag) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.UInt32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="inLayoutTag" Type="MonoTouch.AudioToolbox.AudioChannelLayoutTag" RefType="this" />
        </Parameters>
        <Docs>
          <param name="inLayoutTag">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AudioToolbox.AudioChannelLayoutTagExtensions" Member="M:MonoTouch.AudioToolbox.AudioChannelLayoutTagExtensions.GetNumberOfChannels(MonoTouch.AudioToolbox.AudioChannelLayoutTag)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AudioToolbox.AudioChannelLayoutTag" />
      </Targets>
      <Member MemberName="ToAudioChannel">
        <MemberSignature Language="C#" Value="public static Nullable&lt;MonoTouch.AudioToolbox.AudioChannelBit&gt; ToAudioChannel (this MonoTouch.AudioToolbox.AudioChannelLayoutTag layoutTag);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype MonoTouch.AudioToolbox.AudioChannelBit&gt; ToAudioChannel(valuetype MonoTouch.AudioToolbox.AudioChannelLayoutTag layoutTag) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Nullable&lt;MonoTouch.AudioToolbox.AudioChannelBit&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="layoutTag" Type="MonoTouch.AudioToolbox.AudioChannelLayoutTag" RefType="this" />
        </Parameters>
        <Docs>
          <param name="layoutTag">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AudioToolbox.AudioChannelLayoutTagExtensions" Member="M:MonoTouch.AudioToolbox.AudioChannelLayoutTagExtensions.ToAudioChannel(MonoTouch.AudioToolbox.AudioChannelLayoutTag)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AudioUnit.AUAudioUnit" />
      </Targets>
      <Member MemberName="CanPerformOutput">
        <MemberSignature Language="C#" Value="public static bool CanPerformOutput (this MonoTouch.AudioUnit.AUAudioUnit This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanPerformOutput(class MonoTouch.AudioUnit.AUAudioUnit This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AudioUnit.AUAudioUnit" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit" Member="M:MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit.CanPerformOutput(MonoTouch.AudioUnit.AUAudioUnit)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AudioUnit.AUAudioUnit" />
      </Targets>
      <Member MemberName="GetCanPerformInput">
        <MemberSignature Language="C#" Value="public static bool GetCanPerformInput (this MonoTouch.AudioUnit.AUAudioUnit This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetCanPerformInput(class MonoTouch.AudioUnit.AUAudioUnit This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AudioUnit.AUAudioUnit" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit" Member="M:MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit.GetCanPerformInput(MonoTouch.AudioUnit.AUAudioUnit)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AudioUnit.AUAudioUnit" />
      </Targets>
      <Member MemberName="GetInputHandler">
        <MemberSignature Language="C#" Value="public static MonoTouch.AudioUnit.AUInputHandler GetInputHandler (this MonoTouch.AudioUnit.AUAudioUnit This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.AudioUnit.AUInputHandler GetInputHandler(class MonoTouch.AudioUnit.AUAudioUnit This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.AudioUnit.AUInputHandler</ReturnType>
          <Attributes>
            <Attribute>
              <AttributeName>MonoTouch.ObjCRuntime.DelegateProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/SDAUInputHandler))</AttributeName>
            </Attribute>
          </Attributes>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AudioUnit.AUAudioUnit" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit" Member="M:MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit.GetInputHandler(MonoTouch.AudioUnit.AUAudioUnit)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AudioUnit.AUAudioUnit" />
      </Targets>
      <Member MemberName="GetOutputProvider">
        <MemberSignature Language="C#" Value="public static MonoTouch.AudioUnit.AURenderPullInputBlock GetOutputProvider (this MonoTouch.AudioUnit.AUAudioUnit This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.AudioUnit.AURenderPullInputBlock GetOutputProvider(class MonoTouch.AudioUnit.AUAudioUnit This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.AudioUnit.AURenderPullInputBlock</ReturnType>
          <Attributes>
            <Attribute>
              <AttributeName>MonoTouch.ObjCRuntime.DelegateProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/SDAURenderPullInputBlock))</AttributeName>
            </Attribute>
          </Attributes>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AudioUnit.AUAudioUnit" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit" Member="M:MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit.GetOutputProvider(MonoTouch.AudioUnit.AUAudioUnit)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AudioUnit.AUAudioUnit" />
      </Targets>
      <Member MemberName="IsInputEnabled">
        <MemberSignature Language="C#" Value="public static bool IsInputEnabled (this MonoTouch.AudioUnit.AUAudioUnit This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsInputEnabled(class MonoTouch.AudioUnit.AUAudioUnit This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AudioUnit.AUAudioUnit" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit" Member="M:MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit.IsInputEnabled(MonoTouch.AudioUnit.AUAudioUnit)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AudioUnit.AUAudioUnit" />
      </Targets>
      <Member MemberName="IsOutputEnabled">
        <MemberSignature Language="C#" Value="public static bool IsOutputEnabled (this MonoTouch.AudioUnit.AUAudioUnit This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsOutputEnabled(class MonoTouch.AudioUnit.AUAudioUnit This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AudioUnit.AUAudioUnit" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit" Member="M:MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit.IsOutputEnabled(MonoTouch.AudioUnit.AUAudioUnit)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AudioUnit.AUAudioUnit" />
      </Targets>
      <Member MemberName="SetInputEnabled">
        <MemberSignature Language="C#" Value="public static bool SetInputEnabled (this MonoTouch.AudioUnit.AUAudioUnit This, bool enabled);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SetInputEnabled(class MonoTouch.AudioUnit.AUAudioUnit This, bool enabled) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AudioUnit.AUAudioUnit" RefType="this" />
          <Parameter Name="enabled" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="enabled">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit" Member="M:MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit.SetInputEnabled(MonoTouch.AudioUnit.AUAudioUnit,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AudioUnit.AUAudioUnit" />
      </Targets>
      <Member MemberName="SetInputHandler">
        <MemberSignature Language="C#" Value="public static void SetInputHandler (this MonoTouch.AudioUnit.AUAudioUnit This, MonoTouch.AudioUnit.AUInputHandler handler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetInputHandler(class MonoTouch.AudioUnit.AUAudioUnit This, class MonoTouch.AudioUnit.AUInputHandler handler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AudioUnit.AUAudioUnit" RefType="this" />
          <Parameter Name="handler" Type="MonoTouch.AudioUnit.AUInputHandler">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDAUInputHandler))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="handler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit" Member="M:MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit.SetInputHandler(MonoTouch.AudioUnit.AUAudioUnit,MonoTouch.AudioUnit.AUInputHandler)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AudioUnit.AUAudioUnit" />
      </Targets>
      <Member MemberName="SetOutputEnabled">
        <MemberSignature Language="C#" Value="public static bool SetOutputEnabled (this MonoTouch.AudioUnit.AUAudioUnit This, bool enabled);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SetOutputEnabled(class MonoTouch.AudioUnit.AUAudioUnit This, bool enabled) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AudioUnit.AUAudioUnit" RefType="this" />
          <Parameter Name="enabled" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="enabled">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit" Member="M:MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit.SetOutputEnabled(MonoTouch.AudioUnit.AUAudioUnit,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AudioUnit.AUAudioUnit" />
      </Targets>
      <Member MemberName="SetOutputProvider">
        <MemberSignature Language="C#" Value="public static void SetOutputProvider (this MonoTouch.AudioUnit.AUAudioUnit This, MonoTouch.AudioUnit.AURenderPullInputBlock provider);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetOutputProvider(class MonoTouch.AudioUnit.AUAudioUnit This, class MonoTouch.AudioUnit.AURenderPullInputBlock provider) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AudioUnit.AUAudioUnit" RefType="this" />
          <Parameter Name="provider" Type="MonoTouch.AudioUnit.AURenderPullInputBlock">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDAURenderPullInputBlock))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="provider">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit" Member="M:MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit.SetOutputProvider(MonoTouch.AudioUnit.AUAudioUnit,MonoTouch.AudioUnit.AURenderPullInputBlock)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AudioUnit.AUAudioUnit" />
      </Targets>
      <Member MemberName="StartHardware">
        <MemberSignature Language="C#" Value="public static bool StartHardware (this MonoTouch.AudioUnit.AUAudioUnit This, out MonoTouch.Foundation.NSError outError);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool StartHardware(class MonoTouch.AudioUnit.AUAudioUnit This, class MonoTouch.Foundation.NSError outError) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AudioUnit.AUAudioUnit" RefType="this" />
          <Parameter Name="outError" Type="MonoTouch.Foundation.NSError&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="outError">
            <para>To be added.</para>
            <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
          </param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit" Member="M:MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit.StartHardware(MonoTouch.AudioUnit.AUAudioUnit,MonoTouch.Foundation.NSError@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AudioUnit.AUAudioUnit" />
      </Targets>
      <Member MemberName="StopHardware">
        <MemberSignature Language="C#" Value="public static void StopHardware (this MonoTouch.AudioUnit.AUAudioUnit This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StopHardware(class MonoTouch.AudioUnit.AUAudioUnit This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AudioUnit.AUAudioUnit" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit" Member="M:MonoTouch.AudioUnit.AUAudioUnit_AUAudioInputOutputUnit.StopHardware(MonoTouch.AudioUnit.AUAudioUnit)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAssetDownloadDelegate" />
      </Targets>
      <Member MemberName="DidLoadTimeRange">
        <MemberSignature Language="C#" Value="public static void DidLoadTimeRange (this MonoTouch.AVFoundation.IAVAssetDownloadDelegate This, MonoTouch.Foundation.NSUrlSession session, MonoTouch.AVFoundation.AVAssetDownloadTask assetDownloadTask, MonoTouch.CoreMedia.CMTimeRange timeRange, MonoTouch.Foundation.NSValue[] loadedTimeRanges, MonoTouch.CoreMedia.CMTimeRange timeRangeExpectedToLoad);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidLoadTimeRange(class MonoTouch.AVFoundation.IAVAssetDownloadDelegate This, class MonoTouch.Foundation.NSUrlSession session, class MonoTouch.AVFoundation.AVAssetDownloadTask assetDownloadTask, valuetype MonoTouch.CoreMedia.CMTimeRange timeRange, class MonoTouch.Foundation.NSValue[] loadedTimeRanges, valuetype MonoTouch.CoreMedia.CMTimeRange timeRangeExpectedToLoad) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAssetDownloadDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="assetDownloadTask" Type="MonoTouch.AVFoundation.AVAssetDownloadTask" />
          <Parameter Name="timeRange" Type="MonoTouch.CoreMedia.CMTimeRange" />
          <Parameter Name="loadedTimeRanges" Type="MonoTouch.Foundation.NSValue[]" />
          <Parameter Name="timeRangeExpectedToLoad" Type="MonoTouch.CoreMedia.CMTimeRange" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="assetDownloadTask">To be added.</param>
          <param name="timeRange">To be added.</param>
          <param name="loadedTimeRanges">To be added.</param>
          <param name="timeRangeExpectedToLoad">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAssetDownloadDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAssetDownloadDelegate_Extensions.DidLoadTimeRange(MonoTouch.AVFoundation.IAVAssetDownloadDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.AVFoundation.AVAssetDownloadTask,MonoTouch.CoreMedia.CMTimeRange,MonoTouch.Foundation.NSValue[],MonoTouch.CoreMedia.CMTimeRange)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAssetDownloadDelegate" />
      </Targets>
      <Member MemberName="DidResolveMediaSelection">
        <MemberSignature Language="C#" Value="public static void DidResolveMediaSelection (this MonoTouch.AVFoundation.IAVAssetDownloadDelegate This, MonoTouch.Foundation.NSUrlSession session, MonoTouch.AVFoundation.AVAssetDownloadTask assetDownloadTask, MonoTouch.AVFoundation.AVMediaSelection resolvedMediaSelection);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidResolveMediaSelection(class MonoTouch.AVFoundation.IAVAssetDownloadDelegate This, class MonoTouch.Foundation.NSUrlSession session, class MonoTouch.AVFoundation.AVAssetDownloadTask assetDownloadTask, class MonoTouch.AVFoundation.AVMediaSelection resolvedMediaSelection) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAssetDownloadDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="assetDownloadTask" Type="MonoTouch.AVFoundation.AVAssetDownloadTask" />
          <Parameter Name="resolvedMediaSelection" Type="MonoTouch.AVFoundation.AVMediaSelection" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="assetDownloadTask">To be added.</param>
          <param name="resolvedMediaSelection">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAssetDownloadDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAssetDownloadDelegate_Extensions.DidResolveMediaSelection(MonoTouch.AVFoundation.IAVAssetDownloadDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.AVFoundation.AVAssetDownloadTask,MonoTouch.AVFoundation.AVMediaSelection)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAssetResourceLoaderDelegate" />
      </Targets>
      <Member MemberName="DidCancelAuthenticationChallenge">
        <MemberSignature Language="C#" Value="public static void DidCancelAuthenticationChallenge (this MonoTouch.AVFoundation.IAVAssetResourceLoaderDelegate This, MonoTouch.AVFoundation.AVAssetResourceLoader resourceLoader, MonoTouch.Foundation.NSUrlAuthenticationChallenge authenticationChallenge);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidCancelAuthenticationChallenge(class MonoTouch.AVFoundation.IAVAssetResourceLoaderDelegate This, class MonoTouch.AVFoundation.AVAssetResourceLoader resourceLoader, class MonoTouch.Foundation.NSUrlAuthenticationChallenge authenticationChallenge) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAssetResourceLoaderDelegate" RefType="this" />
          <Parameter Name="resourceLoader" Type="MonoTouch.AVFoundation.AVAssetResourceLoader" />
          <Parameter Name="authenticationChallenge" Type="MonoTouch.Foundation.NSUrlAuthenticationChallenge" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="resourceLoader">To be added.</param>
          <param name="authenticationChallenge">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAssetResourceLoaderDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAssetResourceLoaderDelegate_Extensions.DidCancelAuthenticationChallenge(MonoTouch.AVFoundation.IAVAssetResourceLoaderDelegate,MonoTouch.AVFoundation.AVAssetResourceLoader,MonoTouch.Foundation.NSUrlAuthenticationChallenge)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAssetResourceLoaderDelegate" />
      </Targets>
      <Member MemberName="DidCancelLoadingRequest">
        <MemberSignature Language="C#" Value="public static void DidCancelLoadingRequest (this MonoTouch.AVFoundation.IAVAssetResourceLoaderDelegate This, MonoTouch.AVFoundation.AVAssetResourceLoader resourceLoader, MonoTouch.AVFoundation.AVAssetResourceLoadingRequest loadingRequest);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidCancelLoadingRequest(class MonoTouch.AVFoundation.IAVAssetResourceLoaderDelegate This, class MonoTouch.AVFoundation.AVAssetResourceLoader resourceLoader, class MonoTouch.AVFoundation.AVAssetResourceLoadingRequest loadingRequest) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAssetResourceLoaderDelegate" RefType="this" />
          <Parameter Name="resourceLoader" Type="MonoTouch.AVFoundation.AVAssetResourceLoader" />
          <Parameter Name="loadingRequest" Type="MonoTouch.AVFoundation.AVAssetResourceLoadingRequest" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="resourceLoader">To be added.</param>
          <param name="loadingRequest">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAssetResourceLoaderDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAssetResourceLoaderDelegate_Extensions.DidCancelLoadingRequest(MonoTouch.AVFoundation.IAVAssetResourceLoaderDelegate,MonoTouch.AVFoundation.AVAssetResourceLoader,MonoTouch.AVFoundation.AVAssetResourceLoadingRequest)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAssetResourceLoaderDelegate" />
      </Targets>
      <Member MemberName="ShouldWaitForRenewalOfRequestedResource">
        <MemberSignature Language="C#" Value="public static bool ShouldWaitForRenewalOfRequestedResource (this MonoTouch.AVFoundation.IAVAssetResourceLoaderDelegate This, MonoTouch.AVFoundation.AVAssetResourceLoader resourceLoader, MonoTouch.AVFoundation.AVAssetResourceRenewalRequest renewalRequest);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldWaitForRenewalOfRequestedResource(class MonoTouch.AVFoundation.IAVAssetResourceLoaderDelegate This, class MonoTouch.AVFoundation.AVAssetResourceLoader resourceLoader, class MonoTouch.AVFoundation.AVAssetResourceRenewalRequest renewalRequest) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAssetResourceLoaderDelegate" RefType="this" />
          <Parameter Name="resourceLoader" Type="MonoTouch.AVFoundation.AVAssetResourceLoader" />
          <Parameter Name="renewalRequest" Type="MonoTouch.AVFoundation.AVAssetResourceRenewalRequest" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="resourceLoader">To be added.</param>
          <param name="renewalRequest">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAssetResourceLoaderDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAssetResourceLoaderDelegate_Extensions.ShouldWaitForRenewalOfRequestedResource(MonoTouch.AVFoundation.IAVAssetResourceLoaderDelegate,MonoTouch.AVFoundation.AVAssetResourceLoader,MonoTouch.AVFoundation.AVAssetResourceRenewalRequest)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAssetResourceLoaderDelegate" />
      </Targets>
      <Member MemberName="ShouldWaitForResponseToAuthenticationChallenge">
        <MemberSignature Language="C#" Value="public static bool ShouldWaitForResponseToAuthenticationChallenge (this MonoTouch.AVFoundation.IAVAssetResourceLoaderDelegate This, MonoTouch.AVFoundation.AVAssetResourceLoader resourceLoader, MonoTouch.Foundation.NSUrlAuthenticationChallenge authenticationChallenge);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldWaitForResponseToAuthenticationChallenge(class MonoTouch.AVFoundation.IAVAssetResourceLoaderDelegate This, class MonoTouch.AVFoundation.AVAssetResourceLoader resourceLoader, class MonoTouch.Foundation.NSUrlAuthenticationChallenge authenticationChallenge) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAssetResourceLoaderDelegate" RefType="this" />
          <Parameter Name="resourceLoader" Type="MonoTouch.AVFoundation.AVAssetResourceLoader" />
          <Parameter Name="authenticationChallenge" Type="MonoTouch.Foundation.NSUrlAuthenticationChallenge" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="resourceLoader">To be added.</param>
          <param name="authenticationChallenge">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAssetResourceLoaderDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAssetResourceLoaderDelegate_Extensions.ShouldWaitForResponseToAuthenticationChallenge(MonoTouch.AVFoundation.IAVAssetResourceLoaderDelegate,MonoTouch.AVFoundation.AVAssetResourceLoader,MonoTouch.Foundation.NSUrlAuthenticationChallenge)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAudioMixing" />
      </Targets>
      <Member MemberName="DestinationForMixer">
        <MemberSignature Language="C#" Value="public static MonoTouch.AVFoundation.AVAudioMixingDestination DestinationForMixer (this MonoTouch.AVFoundation.IAVAudioMixing This, MonoTouch.AVFoundation.AVAudioNode mixer, uint bus);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.AVFoundation.AVAudioMixingDestination DestinationForMixer(class MonoTouch.AVFoundation.IAVAudioMixing This, class MonoTouch.AVFoundation.AVAudioNode mixer, unsigned int32 bus) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.AVFoundation.AVAudioMixingDestination DestinationForMixer (this MonoTouch.AVFoundation.IAVAudioMixing This, MonoTouch.AVFoundation.AVAudioNode mixer, nuint bus);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.AVFoundation.AVAudioMixingDestination DestinationForMixer(class MonoTouch.AVFoundation.IAVAudioMixing This, class MonoTouch.AVFoundation.AVAudioNode mixer, valuetype System.nuint bus) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.AVFoundation.AVAudioMixingDestination</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAudioMixing" RefType="this" />
          <Parameter Name="mixer" Type="MonoTouch.AVFoundation.AVAudioNode" />
          <Parameter Name="bus" Type="System.UInt32" apistyle="classic" />
          <Parameter Name="bus" Type="System.nuint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="mixer">To be added.</param>
          <param name="bus">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAudioMixing_Extensions" Member="M:MonoTouch.AVFoundation.AVAudioMixing_Extensions.DestinationForMixer(MonoTouch.AVFoundation.IAVAudioMixing,MonoTouch.AVFoundation.AVAudioNode,System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAudioPlayerDelegate" />
      </Targets>
      <Member MemberName="BeginInterruption">
        <MemberSignature Language="C#" Value="public static void BeginInterruption (this MonoTouch.AVFoundation.IAVAudioPlayerDelegate This, MonoTouch.AVFoundation.AVAudioPlayer player);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BeginInterruption(class MonoTouch.AVFoundation.IAVAudioPlayerDelegate This, class MonoTouch.AVFoundation.AVAudioPlayer player) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAudioPlayerDelegate" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.AVFoundation.AVAudioPlayer" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAudioPlayerDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAudioPlayerDelegate_Extensions.BeginInterruption(MonoTouch.AVFoundation.IAVAudioPlayerDelegate,MonoTouch.AVFoundation.AVAudioPlayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAudioPlayerDelegate" />
      </Targets>
      <Member MemberName="DecoderError">
        <MemberSignature Language="C#" Value="public static void DecoderError (this MonoTouch.AVFoundation.IAVAudioPlayerDelegate This, MonoTouch.AVFoundation.AVAudioPlayer player, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DecoderError(class MonoTouch.AVFoundation.IAVAudioPlayerDelegate This, class MonoTouch.AVFoundation.AVAudioPlayer player, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAudioPlayerDelegate" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.AVFoundation.AVAudioPlayer" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="error">To be added.This parameter can be .</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAudioPlayerDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAudioPlayerDelegate_Extensions.DecoderError(MonoTouch.AVFoundation.IAVAudioPlayerDelegate,MonoTouch.AVFoundation.AVAudioPlayer,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAudioPlayerDelegate" />
      </Targets>
      <Member MemberName="EndInterruption">
        <MemberSignature Language="C#" Value="public static void EndInterruption (this MonoTouch.AVFoundation.IAVAudioPlayerDelegate This, MonoTouch.AVFoundation.AVAudioPlayer player);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndInterruption(class MonoTouch.AVFoundation.IAVAudioPlayerDelegate This, class MonoTouch.AVFoundation.AVAudioPlayer player) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAudioPlayerDelegate" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.AVFoundation.AVAudioPlayer" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAudioPlayerDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAudioPlayerDelegate_Extensions.EndInterruption(MonoTouch.AVFoundation.IAVAudioPlayerDelegate,MonoTouch.AVFoundation.AVAudioPlayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAudioPlayerDelegate" />
      </Targets>
      <Member MemberName="EndInterruption">
        <MemberSignature Language="C#" Value="public static void EndInterruption (this MonoTouch.AVFoundation.IAVAudioPlayerDelegate This, MonoTouch.AVFoundation.AVAudioPlayer player, MonoTouch.AVFoundation.AVAudioSessionInterruptionFlags flags);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndInterruption(class MonoTouch.AVFoundation.IAVAudioPlayerDelegate This, class MonoTouch.AVFoundation.AVAudioPlayer player, valuetype MonoTouch.AVFoundation.AVAudioSessionInterruptionFlags flags) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAudioPlayerDelegate" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.AVFoundation.AVAudioPlayer" />
          <Parameter Name="flags" Type="MonoTouch.AVFoundation.AVAudioSessionInterruptionFlags" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="flags">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAudioPlayerDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAudioPlayerDelegate_Extensions.EndInterruption(MonoTouch.AVFoundation.IAVAudioPlayerDelegate,MonoTouch.AVFoundation.AVAudioPlayer,MonoTouch.AVFoundation.AVAudioSessionInterruptionFlags)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAudioPlayerDelegate" />
      </Targets>
      <Member MemberName="FinishedPlaying">
        <MemberSignature Language="C#" Value="public static void FinishedPlaying (this MonoTouch.AVFoundation.IAVAudioPlayerDelegate This, MonoTouch.AVFoundation.AVAudioPlayer player, bool flag);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FinishedPlaying(class MonoTouch.AVFoundation.IAVAudioPlayerDelegate This, class MonoTouch.AVFoundation.AVAudioPlayer player, bool flag) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAudioPlayerDelegate" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.AVFoundation.AVAudioPlayer" />
          <Parameter Name="flag" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="flag">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAudioPlayerDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAudioPlayerDelegate_Extensions.FinishedPlaying(MonoTouch.AVFoundation.IAVAudioPlayerDelegate,MonoTouch.AVFoundation.AVAudioPlayer,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAudioRecorderDelegate" />
      </Targets>
      <Member MemberName="BeginInterruption">
        <MemberSignature Language="C#" Value="public static void BeginInterruption (this MonoTouch.AVFoundation.IAVAudioRecorderDelegate This, MonoTouch.AVFoundation.AVAudioRecorder recorder);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BeginInterruption(class MonoTouch.AVFoundation.IAVAudioRecorderDelegate This, class MonoTouch.AVFoundation.AVAudioRecorder recorder) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAudioRecorderDelegate" RefType="this" />
          <Parameter Name="recorder" Type="MonoTouch.AVFoundation.AVAudioRecorder" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="recorder">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAudioRecorderDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAudioRecorderDelegate_Extensions.BeginInterruption(MonoTouch.AVFoundation.IAVAudioRecorderDelegate,MonoTouch.AVFoundation.AVAudioRecorder)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAudioRecorderDelegate" />
      </Targets>
      <Member MemberName="EncoderError">
        <MemberSignature Language="C#" Value="public static void EncoderError (this MonoTouch.AVFoundation.IAVAudioRecorderDelegate This, MonoTouch.AVFoundation.AVAudioRecorder recorder, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EncoderError(class MonoTouch.AVFoundation.IAVAudioRecorderDelegate This, class MonoTouch.AVFoundation.AVAudioRecorder recorder, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAudioRecorderDelegate" RefType="this" />
          <Parameter Name="recorder" Type="MonoTouch.AVFoundation.AVAudioRecorder" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="recorder">To be added.</param>
          <param name="error">To be added.This parameter can be .</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAudioRecorderDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAudioRecorderDelegate_Extensions.EncoderError(MonoTouch.AVFoundation.IAVAudioRecorderDelegate,MonoTouch.AVFoundation.AVAudioRecorder,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAudioRecorderDelegate" />
      </Targets>
      <Member MemberName="EndInterruption">
        <MemberSignature Language="C#" Value="public static void EndInterruption (this MonoTouch.AVFoundation.IAVAudioRecorderDelegate This, MonoTouch.AVFoundation.AVAudioRecorder recorder);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndInterruption(class MonoTouch.AVFoundation.IAVAudioRecorderDelegate This, class MonoTouch.AVFoundation.AVAudioRecorder recorder) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAudioRecorderDelegate" RefType="this" />
          <Parameter Name="recorder" Type="MonoTouch.AVFoundation.AVAudioRecorder" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="recorder">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAudioRecorderDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAudioRecorderDelegate_Extensions.EndInterruption(MonoTouch.AVFoundation.IAVAudioRecorderDelegate,MonoTouch.AVFoundation.AVAudioRecorder)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAudioRecorderDelegate" />
      </Targets>
      <Member MemberName="EndInterruption">
        <MemberSignature Language="C#" Value="public static void EndInterruption (this MonoTouch.AVFoundation.IAVAudioRecorderDelegate This, MonoTouch.AVFoundation.AVAudioRecorder recorder, MonoTouch.AVFoundation.AVAudioSessionInterruptionFlags flags);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndInterruption(class MonoTouch.AVFoundation.IAVAudioRecorderDelegate This, class MonoTouch.AVFoundation.AVAudioRecorder recorder, valuetype MonoTouch.AVFoundation.AVAudioSessionInterruptionFlags flags) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAudioRecorderDelegate" RefType="this" />
          <Parameter Name="recorder" Type="MonoTouch.AVFoundation.AVAudioRecorder" />
          <Parameter Name="flags" Type="MonoTouch.AVFoundation.AVAudioSessionInterruptionFlags" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="recorder">To be added.</param>
          <param name="flags">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAudioRecorderDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAudioRecorderDelegate_Extensions.EndInterruption(MonoTouch.AVFoundation.IAVAudioRecorderDelegate,MonoTouch.AVFoundation.AVAudioRecorder,MonoTouch.AVFoundation.AVAudioSessionInterruptionFlags)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAudioRecorderDelegate" />
      </Targets>
      <Member MemberName="FinishedRecording">
        <MemberSignature Language="C#" Value="public static void FinishedRecording (this MonoTouch.AVFoundation.IAVAudioRecorderDelegate This, MonoTouch.AVFoundation.AVAudioRecorder recorder, bool flag);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FinishedRecording(class MonoTouch.AVFoundation.IAVAudioRecorderDelegate This, class MonoTouch.AVFoundation.AVAudioRecorder recorder, bool flag) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAudioRecorderDelegate" RefType="this" />
          <Parameter Name="recorder" Type="MonoTouch.AVFoundation.AVAudioRecorder" />
          <Parameter Name="flag" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="recorder">To be added.</param>
          <param name="flag">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAudioRecorderDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAudioRecorderDelegate_Extensions.FinishedRecording(MonoTouch.AVFoundation.IAVAudioRecorderDelegate,MonoTouch.AVFoundation.AVAudioRecorder,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAudioSessionDelegate" />
      </Targets>
      <Member MemberName="BeginInterruption">
        <MemberSignature Language="C#" Value="public static void BeginInterruption (this MonoTouch.AVFoundation.IAVAudioSessionDelegate This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BeginInterruption(class MonoTouch.AVFoundation.IAVAudioSessionDelegate This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAudioSessionDelegate" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAudioSessionDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAudioSessionDelegate_Extensions.BeginInterruption(MonoTouch.AVFoundation.IAVAudioSessionDelegate)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAudioSessionDelegate" />
      </Targets>
      <Member MemberName="EndInterruption">
        <MemberSignature Language="C#" Value="public static void EndInterruption (this MonoTouch.AVFoundation.IAVAudioSessionDelegate This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndInterruption(class MonoTouch.AVFoundation.IAVAudioSessionDelegate This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAudioSessionDelegate" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAudioSessionDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAudioSessionDelegate_Extensions.EndInterruption(MonoTouch.AVFoundation.IAVAudioSessionDelegate)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAudioSessionDelegate" />
      </Targets>
      <Member MemberName="EndInterruption">
        <MemberSignature Language="C#" Value="public static void EndInterruption (this MonoTouch.AVFoundation.IAVAudioSessionDelegate This, MonoTouch.AVFoundation.AVAudioSessionInterruptionFlags flags);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndInterruption(class MonoTouch.AVFoundation.IAVAudioSessionDelegate This, valuetype MonoTouch.AVFoundation.AVAudioSessionInterruptionFlags flags) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAudioSessionDelegate" RefType="this" />
          <Parameter Name="flags" Type="MonoTouch.AVFoundation.AVAudioSessionInterruptionFlags" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="flags">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAudioSessionDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAudioSessionDelegate_Extensions.EndInterruption(MonoTouch.AVFoundation.IAVAudioSessionDelegate,MonoTouch.AVFoundation.AVAudioSessionInterruptionFlags)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVAudioSessionDelegate" />
      </Targets>
      <Member MemberName="InputIsAvailableChanged">
        <MemberSignature Language="C#" Value="public static void InputIsAvailableChanged (this MonoTouch.AVFoundation.IAVAudioSessionDelegate This, bool isInputAvailable);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InputIsAvailableChanged(class MonoTouch.AVFoundation.IAVAudioSessionDelegate This, bool isInputAvailable) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVAudioSessionDelegate" RefType="this" />
          <Parameter Name="isInputAvailable" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="isInputAvailable">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVAudioSessionDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVAudioSessionDelegate_Extensions.InputIsAvailableChanged(MonoTouch.AVFoundation.IAVAudioSessionDelegate,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVCaptureAudioDataOutputSampleBufferDelegate" />
      </Targets>
      <Member MemberName="DidOutputSampleBuffer">
        <MemberSignature Language="C#" Value="public static void DidOutputSampleBuffer (this MonoTouch.AVFoundation.IAVCaptureAudioDataOutputSampleBufferDelegate This, MonoTouch.AVFoundation.AVCaptureOutput captureOutput, MonoTouch.CoreMedia.CMSampleBuffer sampleBuffer, MonoTouch.AVFoundation.AVCaptureConnection connection);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidOutputSampleBuffer(class MonoTouch.AVFoundation.IAVCaptureAudioDataOutputSampleBufferDelegate This, class MonoTouch.AVFoundation.AVCaptureOutput captureOutput, class MonoTouch.CoreMedia.CMSampleBuffer sampleBuffer, class MonoTouch.AVFoundation.AVCaptureConnection connection) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVCaptureAudioDataOutputSampleBufferDelegate" RefType="this" />
          <Parameter Name="captureOutput" Type="MonoTouch.AVFoundation.AVCaptureOutput" />
          <Parameter Name="sampleBuffer" Type="MonoTouch.CoreMedia.CMSampleBuffer" />
          <Parameter Name="connection" Type="MonoTouch.AVFoundation.AVCaptureConnection" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="captureOutput">To be added.</param>
          <param name="sampleBuffer">To be added.</param>
          <param name="connection">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVCaptureAudioDataOutputSampleBufferDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVCaptureAudioDataOutputSampleBufferDelegate_Extensions.DidOutputSampleBuffer(MonoTouch.AVFoundation.IAVCaptureAudioDataOutputSampleBufferDelegate,MonoTouch.AVFoundation.AVCaptureOutput,MonoTouch.CoreMedia.CMSampleBuffer,MonoTouch.AVFoundation.AVCaptureConnection)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVCaptureFileOutputRecordingDelegate" />
      </Targets>
      <Member MemberName="DidStartRecording">
        <MemberSignature Language="C#" Value="public static void DidStartRecording (this MonoTouch.AVFoundation.IAVCaptureFileOutputRecordingDelegate This, MonoTouch.AVFoundation.AVCaptureFileOutput captureOutput, MonoTouch.Foundation.NSUrl outputFileUrl, MonoTouch.Foundation.NSObject[] connections);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidStartRecording(class MonoTouch.AVFoundation.IAVCaptureFileOutputRecordingDelegate This, class MonoTouch.AVFoundation.AVCaptureFileOutput captureOutput, class MonoTouch.Foundation.NSUrl outputFileUrl, class MonoTouch.Foundation.NSObject[] connections) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVCaptureFileOutputRecordingDelegate" RefType="this" />
          <Parameter Name="captureOutput" Type="MonoTouch.AVFoundation.AVCaptureFileOutput" />
          <Parameter Name="outputFileUrl" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="connections" Type="MonoTouch.Foundation.NSObject[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="captureOutput">To be added.</param>
          <param name="outputFileUrl">To be added.</param>
          <param name="connections">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVCaptureFileOutputRecordingDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVCaptureFileOutputRecordingDelegate_Extensions.DidStartRecording(MonoTouch.AVFoundation.IAVCaptureFileOutputRecordingDelegate,MonoTouch.AVFoundation.AVCaptureFileOutput,MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSObject[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVCaptureMetadataOutputObjectsDelegate" />
      </Targets>
      <Member MemberName="DidOutputMetadataObjects">
        <MemberSignature Language="C#" Value="public static void DidOutputMetadataObjects (this MonoTouch.AVFoundation.IAVCaptureMetadataOutputObjectsDelegate This, MonoTouch.AVFoundation.AVCaptureMetadataOutput captureOutput, MonoTouch.AVFoundation.AVMetadataObject[] metadataObjects, MonoTouch.AVFoundation.AVCaptureConnection connection);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidOutputMetadataObjects(class MonoTouch.AVFoundation.IAVCaptureMetadataOutputObjectsDelegate This, class MonoTouch.AVFoundation.AVCaptureMetadataOutput captureOutput, class MonoTouch.AVFoundation.AVMetadataObject[] metadataObjects, class MonoTouch.AVFoundation.AVCaptureConnection connection) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVCaptureMetadataOutputObjectsDelegate" RefType="this" />
          <Parameter Name="captureOutput" Type="MonoTouch.AVFoundation.AVCaptureMetadataOutput" />
          <Parameter Name="metadataObjects" Type="MonoTouch.AVFoundation.AVMetadataObject[]" />
          <Parameter Name="connection" Type="MonoTouch.AVFoundation.AVCaptureConnection" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="captureOutput">To be added.</param>
          <param name="metadataObjects">To be added.</param>
          <param name="connection">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVCaptureMetadataOutputObjectsDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVCaptureMetadataOutputObjectsDelegate_Extensions.DidOutputMetadataObjects(MonoTouch.AVFoundation.IAVCaptureMetadataOutputObjectsDelegate,MonoTouch.AVFoundation.AVCaptureMetadataOutput,MonoTouch.AVFoundation.AVMetadataObject[],MonoTouch.AVFoundation.AVCaptureConnection)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVCaptureVideoDataOutputSampleBufferDelegate" />
      </Targets>
      <Member MemberName="DidDropSampleBuffer">
        <MemberSignature Language="C#" Value="public static void DidDropSampleBuffer (this MonoTouch.AVFoundation.IAVCaptureVideoDataOutputSampleBufferDelegate This, MonoTouch.AVFoundation.AVCaptureOutput captureOutput, MonoTouch.CoreMedia.CMSampleBuffer sampleBuffer, MonoTouch.AVFoundation.AVCaptureConnection connection);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDropSampleBuffer(class MonoTouch.AVFoundation.IAVCaptureVideoDataOutputSampleBufferDelegate This, class MonoTouch.AVFoundation.AVCaptureOutput captureOutput, class MonoTouch.CoreMedia.CMSampleBuffer sampleBuffer, class MonoTouch.AVFoundation.AVCaptureConnection connection) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVCaptureVideoDataOutputSampleBufferDelegate" RefType="this" />
          <Parameter Name="captureOutput" Type="MonoTouch.AVFoundation.AVCaptureOutput" />
          <Parameter Name="sampleBuffer" Type="MonoTouch.CoreMedia.CMSampleBuffer" />
          <Parameter Name="connection" Type="MonoTouch.AVFoundation.AVCaptureConnection" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="captureOutput">The capture output on which the frame was captured.</param>
          <param name="sampleBuffer">Buffer containing information about the dropped frame;   No video data is actually included.</param>
          <param name="connection">The connection on which the video frame was received.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVCaptureVideoDataOutputSampleBufferDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVCaptureVideoDataOutputSampleBufferDelegate_Extensions.DidDropSampleBuffer(MonoTouch.AVFoundation.IAVCaptureVideoDataOutputSampleBufferDelegate,MonoTouch.AVFoundation.AVCaptureOutput,MonoTouch.CoreMedia.CMSampleBuffer,MonoTouch.AVFoundation.AVCaptureConnection)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVCaptureVideoDataOutputSampleBufferDelegate" />
      </Targets>
      <Member MemberName="DidOutputSampleBuffer">
        <MemberSignature Language="C#" Value="public static void DidOutputSampleBuffer (this MonoTouch.AVFoundation.IAVCaptureVideoDataOutputSampleBufferDelegate This, MonoTouch.AVFoundation.AVCaptureOutput captureOutput, MonoTouch.CoreMedia.CMSampleBuffer sampleBuffer, MonoTouch.AVFoundation.AVCaptureConnection connection);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidOutputSampleBuffer(class MonoTouch.AVFoundation.IAVCaptureVideoDataOutputSampleBufferDelegate This, class MonoTouch.AVFoundation.AVCaptureOutput captureOutput, class MonoTouch.CoreMedia.CMSampleBuffer sampleBuffer, class MonoTouch.AVFoundation.AVCaptureConnection connection) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVCaptureVideoDataOutputSampleBufferDelegate" RefType="this" />
          <Parameter Name="captureOutput" Type="MonoTouch.AVFoundation.AVCaptureOutput" />
          <Parameter Name="sampleBuffer" Type="MonoTouch.CoreMedia.CMSampleBuffer" />
          <Parameter Name="connection" Type="MonoTouch.AVFoundation.AVCaptureConnection" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="captureOutput">The capture output on which the frame was captured.</param>
          <param name="sampleBuffer">The video frame data, part of a small finite pool of buffers.</param>
          <param name="connection">The connection on which the video frame was received.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVCaptureVideoDataOutputSampleBufferDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVCaptureVideoDataOutputSampleBufferDelegate_Extensions.DidOutputSampleBuffer(MonoTouch.AVFoundation.IAVCaptureVideoDataOutputSampleBufferDelegate,MonoTouch.AVFoundation.AVCaptureOutput,MonoTouch.CoreMedia.CMSampleBuffer,MonoTouch.AVFoundation.AVCaptureConnection)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.AVComposition" />
      </Targets>
      <Member MemberName="GetTrack">
        <MemberSignature Language="C#" Value="public static MonoTouch.AVFoundation.AVCompositionTrack GetTrack (this MonoTouch.AVFoundation.AVComposition This, int trackID);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.AVFoundation.AVCompositionTrack GetTrack(class MonoTouch.AVFoundation.AVComposition This, int32 trackID) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.AVFoundation.AVCompositionTrack</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.AVComposition" RefType="this" />
          <Parameter Name="trackID" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="trackID">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVComposition_AVCompositionTrackInspection" Member="M:MonoTouch.AVFoundation.AVComposition_AVCompositionTrackInspection.GetTrack(MonoTouch.AVFoundation.AVComposition,System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.AVComposition" />
      </Targets>
      <Member MemberName="GetTracks">
        <MemberSignature Language="C#" Value="public static MonoTouch.AVFoundation.AVCompositionTrack[] GetTracks (this MonoTouch.AVFoundation.AVComposition This, string mediaType);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.AVFoundation.AVCompositionTrack[] GetTracks(class MonoTouch.AVFoundation.AVComposition This, string mediaType) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.AVFoundation.AVCompositionTrack[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.AVComposition" RefType="this" />
          <Parameter Name="mediaType" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="mediaType">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVComposition_AVCompositionTrackInspection" Member="M:MonoTouch.AVFoundation.AVComposition_AVCompositionTrackInspection.GetTracks(MonoTouch.AVFoundation.AVComposition,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.AVComposition" />
      </Targets>
      <Member MemberName="GetTracksWithMediaCharacteristic">
        <MemberSignature Language="C#" Value="public static MonoTouch.AVFoundation.AVCompositionTrack[] GetTracksWithMediaCharacteristic (this MonoTouch.AVFoundation.AVComposition This, string mediaCharacteristic);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.AVFoundation.AVCompositionTrack[] GetTracksWithMediaCharacteristic(class MonoTouch.AVFoundation.AVComposition This, string mediaCharacteristic) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.AVFoundation.AVCompositionTrack[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.AVComposition" RefType="this" />
          <Parameter Name="mediaCharacteristic" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="mediaCharacteristic">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVComposition_AVCompositionTrackInspection" Member="M:MonoTouch.AVFoundation.AVComposition_AVCompositionTrackInspection.GetTracksWithMediaCharacteristic(MonoTouch.AVFoundation.AVComposition,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.AVMutableComposition" />
      </Targets>
      <Member MemberName="GetTrack">
        <MemberSignature Language="C#" Value="public static MonoTouch.AVFoundation.AVMutableCompositionTrack GetTrack (this MonoTouch.AVFoundation.AVMutableComposition This, int trackID);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.AVFoundation.AVMutableCompositionTrack GetTrack(class MonoTouch.AVFoundation.AVMutableComposition This, int32 trackID) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.AVFoundation.AVMutableCompositionTrack</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.AVMutableComposition" RefType="this" />
          <Parameter Name="trackID" Type="System.Int32" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="trackID">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVMutableComposition_AVMutableCompositionTrackInspection" Member="M:MonoTouch.AVFoundation.AVMutableComposition_AVMutableCompositionTrackInspection.GetTrack(MonoTouch.AVFoundation.AVMutableComposition,System.Int32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.AVMutableComposition" />
      </Targets>
      <Member MemberName="GetTracks">
        <MemberSignature Language="C#" Value="public static MonoTouch.AVFoundation.AVMutableCompositionTrack[] GetTracks (this MonoTouch.AVFoundation.AVMutableComposition This, string mediaType);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.AVFoundation.AVMutableCompositionTrack[] GetTracks(class MonoTouch.AVFoundation.AVMutableComposition This, string mediaType) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.AVFoundation.AVMutableCompositionTrack[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.AVMutableComposition" RefType="this" />
          <Parameter Name="mediaType" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="mediaType">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVMutableComposition_AVMutableCompositionTrackInspection" Member="M:MonoTouch.AVFoundation.AVMutableComposition_AVMutableCompositionTrackInspection.GetTracks(MonoTouch.AVFoundation.AVMutableComposition,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.AVMutableComposition" />
      </Targets>
      <Member MemberName="GetTracksWithMediaCharacteristic">
        <MemberSignature Language="C#" Value="public static MonoTouch.AVFoundation.AVMutableCompositionTrack[] GetTracksWithMediaCharacteristic (this MonoTouch.AVFoundation.AVMutableComposition This, string mediaCharacteristic);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.AVFoundation.AVMutableCompositionTrack[] GetTracksWithMediaCharacteristic(class MonoTouch.AVFoundation.AVMutableComposition This, string mediaCharacteristic) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.AVFoundation.AVMutableCompositionTrack[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.AVMutableComposition" RefType="this" />
          <Parameter Name="mediaCharacteristic" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="mediaCharacteristic">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVMutableComposition_AVMutableCompositionTrackInspection" Member="M:MonoTouch.AVFoundation.AVMutableComposition_AVMutableCompositionTrackInspection.GetTracksWithMediaCharacteristic(MonoTouch.AVFoundation.AVMutableComposition,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVPlayerItemLegibleOutputPushDelegate" />
      </Targets>
      <Member MemberName="DidOutputAttributedStrings">
        <MemberSignature Language="C#" Value="public static void DidOutputAttributedStrings (this MonoTouch.AVFoundation.IAVPlayerItemLegibleOutputPushDelegate This, MonoTouch.AVFoundation.AVPlayerItemLegibleOutput output, MonoTouch.Foundation.NSAttributedString[] strings, MonoTouch.CoreMedia.CMSampleBuffer[] nativeSamples, MonoTouch.CoreMedia.CMTime itemTime);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidOutputAttributedStrings(class MonoTouch.AVFoundation.IAVPlayerItemLegibleOutputPushDelegate This, class MonoTouch.AVFoundation.AVPlayerItemLegibleOutput output, class MonoTouch.Foundation.NSAttributedString[] strings, class MonoTouch.CoreMedia.CMSampleBuffer[] nativeSamples, valuetype MonoTouch.CoreMedia.CMTime itemTime) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVPlayerItemLegibleOutputPushDelegate" RefType="this" />
          <Parameter Name="output" Type="MonoTouch.AVFoundation.AVPlayerItemLegibleOutput" />
          <Parameter Name="strings" Type="MonoTouch.Foundation.NSAttributedString[]" />
          <Parameter Name="nativeSamples" Type="MonoTouch.CoreMedia.CMSampleBuffer[]" />
          <Parameter Name="itemTime" Type="MonoTouch.CoreMedia.CMTime" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="output">To be added.</param>
          <param name="strings">To be added.</param>
          <param name="nativeSamples">To be added.</param>
          <param name="itemTime">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVPlayerItemLegibleOutputPushDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVPlayerItemLegibleOutputPushDelegate_Extensions.DidOutputAttributedStrings(MonoTouch.AVFoundation.IAVPlayerItemLegibleOutputPushDelegate,MonoTouch.AVFoundation.AVPlayerItemLegibleOutput,MonoTouch.Foundation.NSAttributedString[],MonoTouch.CoreMedia.CMSampleBuffer[],MonoTouch.CoreMedia.CMTime)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVPlayerItemMetadataOutputPushDelegate" />
      </Targets>
      <Member MemberName="DidOutputTimedMetadataGroups">
        <MemberSignature Language="C#" Value="public static void DidOutputTimedMetadataGroups (this MonoTouch.AVFoundation.IAVPlayerItemMetadataOutputPushDelegate This, MonoTouch.AVFoundation.AVPlayerItemMetadataOutput output, MonoTouch.AVFoundation.AVTimedMetadataGroup[] groups, MonoTouch.AVFoundation.AVPlayerItemTrack track);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidOutputTimedMetadataGroups(class MonoTouch.AVFoundation.IAVPlayerItemMetadataOutputPushDelegate This, class MonoTouch.AVFoundation.AVPlayerItemMetadataOutput output, class MonoTouch.AVFoundation.AVTimedMetadataGroup[] groups, class MonoTouch.AVFoundation.AVPlayerItemTrack track) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVPlayerItemMetadataOutputPushDelegate" RefType="this" />
          <Parameter Name="output" Type="MonoTouch.AVFoundation.AVPlayerItemMetadataOutput" />
          <Parameter Name="groups" Type="MonoTouch.AVFoundation.AVTimedMetadataGroup[]" />
          <Parameter Name="track" Type="MonoTouch.AVFoundation.AVPlayerItemTrack" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="output">To be added.</param>
          <param name="groups">To be added.</param>
          <param name="track">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVPlayerItemMetadataOutputPushDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVPlayerItemMetadataOutputPushDelegate_Extensions.DidOutputTimedMetadataGroups(MonoTouch.AVFoundation.IAVPlayerItemMetadataOutputPushDelegate,MonoTouch.AVFoundation.AVPlayerItemMetadataOutput,MonoTouch.AVFoundation.AVTimedMetadataGroup[],MonoTouch.AVFoundation.AVPlayerItemTrack)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVPlayerItemOutputPullDelegate" />
      </Targets>
      <Member MemberName="OutputMediaDataWillChange">
        <MemberSignature Language="C#" Value="public static void OutputMediaDataWillChange (this MonoTouch.AVFoundation.IAVPlayerItemOutputPullDelegate This, MonoTouch.AVFoundation.AVPlayerItemOutput sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OutputMediaDataWillChange(class MonoTouch.AVFoundation.IAVPlayerItemOutputPullDelegate This, class MonoTouch.AVFoundation.AVPlayerItemOutput sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVPlayerItemOutputPullDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.AVFoundation.AVPlayerItemOutput" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVPlayerItemOutputPullDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVPlayerItemOutputPullDelegate_Extensions.OutputMediaDataWillChange(MonoTouch.AVFoundation.IAVPlayerItemOutputPullDelegate,MonoTouch.AVFoundation.AVPlayerItemOutput)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVPlayerItemOutputPullDelegate" />
      </Targets>
      <Member MemberName="OutputSequenceWasFlushed">
        <MemberSignature Language="C#" Value="public static void OutputSequenceWasFlushed (this MonoTouch.AVFoundation.IAVPlayerItemOutputPullDelegate This, MonoTouch.AVFoundation.AVPlayerItemOutput output);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OutputSequenceWasFlushed(class MonoTouch.AVFoundation.IAVPlayerItemOutputPullDelegate This, class MonoTouch.AVFoundation.AVPlayerItemOutput output) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVPlayerItemOutputPullDelegate" RefType="this" />
          <Parameter Name="output" Type="MonoTouch.AVFoundation.AVPlayerItemOutput" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="output">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVPlayerItemOutputPullDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVPlayerItemOutputPullDelegate_Extensions.OutputSequenceWasFlushed(MonoTouch.AVFoundation.IAVPlayerItemOutputPullDelegate,MonoTouch.AVFoundation.AVPlayerItemOutput)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVPlayerItemOutputPushDelegate" />
      </Targets>
      <Member MemberName="OutputSequenceWasFlushed">
        <MemberSignature Language="C#" Value="public static void OutputSequenceWasFlushed (this MonoTouch.AVFoundation.IAVPlayerItemOutputPushDelegate This, MonoTouch.AVFoundation.AVPlayerItemOutput output);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OutputSequenceWasFlushed(class MonoTouch.AVFoundation.IAVPlayerItemOutputPushDelegate This, class MonoTouch.AVFoundation.AVPlayerItemOutput output) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVPlayerItemOutputPushDelegate" RefType="this" />
          <Parameter Name="output" Type="MonoTouch.AVFoundation.AVPlayerItemOutput" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="output">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVPlayerItemOutputPushDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVPlayerItemOutputPushDelegate_Extensions.OutputSequenceWasFlushed(MonoTouch.AVFoundation.IAVPlayerItemOutputPushDelegate,MonoTouch.AVFoundation.AVPlayerItemOutput)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate" />
      </Targets>
      <Member MemberName="DidCancelSpeechUtterance">
        <MemberSignature Language="C#" Value="public static void DidCancelSpeechUtterance (this MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate This, MonoTouch.AVFoundation.AVSpeechSynthesizer synthesizer, MonoTouch.AVFoundation.AVSpeechUtterance utterance);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidCancelSpeechUtterance(class MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate This, class MonoTouch.AVFoundation.AVSpeechSynthesizer synthesizer, class MonoTouch.AVFoundation.AVSpeechUtterance utterance) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate" RefType="this" />
          <Parameter Name="synthesizer" Type="MonoTouch.AVFoundation.AVSpeechSynthesizer" />
          <Parameter Name="utterance" Type="MonoTouch.AVFoundation.AVSpeechUtterance" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="synthesizer">To be added.</param>
          <param name="utterance">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVSpeechSynthesizerDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVSpeechSynthesizerDelegate_Extensions.DidCancelSpeechUtterance(MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate,MonoTouch.AVFoundation.AVSpeechSynthesizer,MonoTouch.AVFoundation.AVSpeechUtterance)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate" />
      </Targets>
      <Member MemberName="DidContinueSpeechUtterance">
        <MemberSignature Language="C#" Value="public static void DidContinueSpeechUtterance (this MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate This, MonoTouch.AVFoundation.AVSpeechSynthesizer synthesizer, MonoTouch.AVFoundation.AVSpeechUtterance utterance);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidContinueSpeechUtterance(class MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate This, class MonoTouch.AVFoundation.AVSpeechSynthesizer synthesizer, class MonoTouch.AVFoundation.AVSpeechUtterance utterance) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate" RefType="this" />
          <Parameter Name="synthesizer" Type="MonoTouch.AVFoundation.AVSpeechSynthesizer" />
          <Parameter Name="utterance" Type="MonoTouch.AVFoundation.AVSpeechUtterance" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="synthesizer">To be added.</param>
          <param name="utterance">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVSpeechSynthesizerDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVSpeechSynthesizerDelegate_Extensions.DidContinueSpeechUtterance(MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate,MonoTouch.AVFoundation.AVSpeechSynthesizer,MonoTouch.AVFoundation.AVSpeechUtterance)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate" />
      </Targets>
      <Member MemberName="DidFinishSpeechUtterance">
        <MemberSignature Language="C#" Value="public static void DidFinishSpeechUtterance (this MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate This, MonoTouch.AVFoundation.AVSpeechSynthesizer synthesizer, MonoTouch.AVFoundation.AVSpeechUtterance utterance);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinishSpeechUtterance(class MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate This, class MonoTouch.AVFoundation.AVSpeechSynthesizer synthesizer, class MonoTouch.AVFoundation.AVSpeechUtterance utterance) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate" RefType="this" />
          <Parameter Name="synthesizer" Type="MonoTouch.AVFoundation.AVSpeechSynthesizer" />
          <Parameter Name="utterance" Type="MonoTouch.AVFoundation.AVSpeechUtterance" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="synthesizer">To be added.</param>
          <param name="utterance">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVSpeechSynthesizerDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVSpeechSynthesizerDelegate_Extensions.DidFinishSpeechUtterance(MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate,MonoTouch.AVFoundation.AVSpeechSynthesizer,MonoTouch.AVFoundation.AVSpeechUtterance)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate" />
      </Targets>
      <Member MemberName="DidPauseSpeechUtterance">
        <MemberSignature Language="C#" Value="public static void DidPauseSpeechUtterance (this MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate This, MonoTouch.AVFoundation.AVSpeechSynthesizer synthesizer, MonoTouch.AVFoundation.AVSpeechUtterance utterance);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidPauseSpeechUtterance(class MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate This, class MonoTouch.AVFoundation.AVSpeechSynthesizer synthesizer, class MonoTouch.AVFoundation.AVSpeechUtterance utterance) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate" RefType="this" />
          <Parameter Name="synthesizer" Type="MonoTouch.AVFoundation.AVSpeechSynthesizer" />
          <Parameter Name="utterance" Type="MonoTouch.AVFoundation.AVSpeechUtterance" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="synthesizer">To be added.</param>
          <param name="utterance">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVSpeechSynthesizerDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVSpeechSynthesizerDelegate_Extensions.DidPauseSpeechUtterance(MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate,MonoTouch.AVFoundation.AVSpeechSynthesizer,MonoTouch.AVFoundation.AVSpeechUtterance)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate" />
      </Targets>
      <Member MemberName="DidStartSpeechUtterance">
        <MemberSignature Language="C#" Value="public static void DidStartSpeechUtterance (this MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate This, MonoTouch.AVFoundation.AVSpeechSynthesizer synthesizer, MonoTouch.AVFoundation.AVSpeechUtterance utterance);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidStartSpeechUtterance(class MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate This, class MonoTouch.AVFoundation.AVSpeechSynthesizer synthesizer, class MonoTouch.AVFoundation.AVSpeechUtterance utterance) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate" RefType="this" />
          <Parameter Name="synthesizer" Type="MonoTouch.AVFoundation.AVSpeechSynthesizer" />
          <Parameter Name="utterance" Type="MonoTouch.AVFoundation.AVSpeechUtterance" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="synthesizer">To be added.</param>
          <param name="utterance">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVSpeechSynthesizerDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVSpeechSynthesizerDelegate_Extensions.DidStartSpeechUtterance(MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate,MonoTouch.AVFoundation.AVSpeechSynthesizer,MonoTouch.AVFoundation.AVSpeechUtterance)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate" />
      </Targets>
      <Member MemberName="WillSpeakRangeOfSpeechString">
        <MemberSignature Language="C#" Value="public static void WillSpeakRangeOfSpeechString (this MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate This, MonoTouch.AVFoundation.AVSpeechSynthesizer synthesizer, MonoTouch.Foundation.NSRange characterRange, MonoTouch.AVFoundation.AVSpeechUtterance utterance);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillSpeakRangeOfSpeechString(class MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate This, class MonoTouch.AVFoundation.AVSpeechSynthesizer synthesizer, valuetype MonoTouch.Foundation.NSRange characterRange, class MonoTouch.AVFoundation.AVSpeechUtterance utterance) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate" RefType="this" />
          <Parameter Name="synthesizer" Type="MonoTouch.AVFoundation.AVSpeechSynthesizer" />
          <Parameter Name="characterRange" Type="MonoTouch.Foundation.NSRange" />
          <Parameter Name="utterance" Type="MonoTouch.AVFoundation.AVSpeechUtterance" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="synthesizer">To be added.</param>
          <param name="characterRange">To be added.</param>
          <param name="utterance">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVSpeechSynthesizerDelegate_Extensions" Member="M:MonoTouch.AVFoundation.AVSpeechSynthesizerDelegate_Extensions.WillSpeakRangeOfSpeechString(MonoTouch.AVFoundation.IAVSpeechSynthesizerDelegate,MonoTouch.AVFoundation.AVSpeechSynthesizer,MonoTouch.Foundation.NSRange,MonoTouch.AVFoundation.AVSpeechUtterance)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreGraphics.CGRect" />
      </Targets>
      <Member MemberName="WithAspectRatio">
        <MemberSignature Language="C#" Value="public static System.Drawing.RectangleF WithAspectRatio (this System.Drawing.RectangleF self, System.Drawing.SizeF aspectRatio);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.RectangleF WithAspectRatio(valuetype System.Drawing.RectangleF self, valuetype System.Drawing.SizeF aspectRatio) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGRect WithAspectRatio (this MonoTouch.CoreGraphics.CGRect self, MonoTouch.CoreGraphics.CGSize aspectRatio);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGRect WithAspectRatio(valuetype MonoTouch.CoreGraphics.CGRect self, valuetype MonoTouch.CoreGraphics.CGSize aspectRatio) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.RectangleF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="System.Drawing.RectangleF" RefType="this" apistyle="classic" />
          <Parameter Name="aspectRatio" Type="System.Drawing.SizeF" apistyle="classic" />
          <Parameter Name="self" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
          <Parameter Name="aspectRatio" Type="MonoTouch.CoreGraphics.CGSize" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <param name="aspectRatio">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVUtilities" Member="M:MonoTouch.AVFoundation.AVUtilities.WithAspectRatio(MonoTouch.CoreGraphics.CGRect,MonoTouch.CoreGraphics.CGSize)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVVideoCompositing" />
      </Targets>
      <Member MemberName="CancelAllPendingVideoCompositionRequests">
        <MemberSignature Language="C#" Value="public static void CancelAllPendingVideoCompositionRequests (this MonoTouch.AVFoundation.IAVVideoCompositing This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CancelAllPendingVideoCompositionRequests(class MonoTouch.AVFoundation.IAVVideoCompositing This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVVideoCompositing" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVVideoCompositing_Extensions" Member="M:MonoTouch.AVFoundation.AVVideoCompositing_Extensions.CancelAllPendingVideoCompositionRequests(MonoTouch.AVFoundation.IAVVideoCompositing)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVVideoCompositionValidationHandling" />
      </Targets>
      <Member MemberName="ShouldContinueValidatingAfterFindingEmptyTimeRange">
        <MemberSignature Language="C#" Value="public static bool ShouldContinueValidatingAfterFindingEmptyTimeRange (this MonoTouch.AVFoundation.IAVVideoCompositionValidationHandling This, MonoTouch.AVFoundation.AVVideoComposition videoComposition, MonoTouch.CoreMedia.CMTimeRange timeRange);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldContinueValidatingAfterFindingEmptyTimeRange(class MonoTouch.AVFoundation.IAVVideoCompositionValidationHandling This, class MonoTouch.AVFoundation.AVVideoComposition videoComposition, valuetype MonoTouch.CoreMedia.CMTimeRange timeRange) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVVideoCompositionValidationHandling" RefType="this" />
          <Parameter Name="videoComposition" Type="MonoTouch.AVFoundation.AVVideoComposition" />
          <Parameter Name="timeRange" Type="MonoTouch.CoreMedia.CMTimeRange" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="videoComposition">To be added.</param>
          <param name="timeRange">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVVideoCompositionValidationHandling_Extensions" Member="M:MonoTouch.AVFoundation.AVVideoCompositionValidationHandling_Extensions.ShouldContinueValidatingAfterFindingEmptyTimeRange(MonoTouch.AVFoundation.IAVVideoCompositionValidationHandling,MonoTouch.AVFoundation.AVVideoComposition,MonoTouch.CoreMedia.CMTimeRange)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVVideoCompositionValidationHandling" />
      </Targets>
      <Member MemberName="ShouldContinueValidatingAfterFindingInvalidTimeRangeInInstruction">
        <MemberSignature Language="C#" Value="public static bool ShouldContinueValidatingAfterFindingInvalidTimeRangeInInstruction (this MonoTouch.AVFoundation.IAVVideoCompositionValidationHandling This, MonoTouch.AVFoundation.AVVideoComposition videoComposition, MonoTouch.AVFoundation.AVVideoCompositionInstruction videoCompositionInstruction);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldContinueValidatingAfterFindingInvalidTimeRangeInInstruction(class MonoTouch.AVFoundation.IAVVideoCompositionValidationHandling This, class MonoTouch.AVFoundation.AVVideoComposition videoComposition, class MonoTouch.AVFoundation.AVVideoCompositionInstruction videoCompositionInstruction) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVVideoCompositionValidationHandling" RefType="this" />
          <Parameter Name="videoComposition" Type="MonoTouch.AVFoundation.AVVideoComposition" />
          <Parameter Name="videoCompositionInstruction" Type="MonoTouch.AVFoundation.AVVideoCompositionInstruction" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="videoComposition">To be added.</param>
          <param name="videoCompositionInstruction">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVVideoCompositionValidationHandling_Extensions" Member="M:MonoTouch.AVFoundation.AVVideoCompositionValidationHandling_Extensions.ShouldContinueValidatingAfterFindingInvalidTimeRangeInInstruction(MonoTouch.AVFoundation.IAVVideoCompositionValidationHandling,MonoTouch.AVFoundation.AVVideoComposition,MonoTouch.AVFoundation.AVVideoCompositionInstruction)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVVideoCompositionValidationHandling" />
      </Targets>
      <Member MemberName="ShouldContinueValidatingAfterFindingInvalidTrackIDInInstruction">
        <MemberSignature Language="C#" Value="public static bool ShouldContinueValidatingAfterFindingInvalidTrackIDInInstruction (this MonoTouch.AVFoundation.IAVVideoCompositionValidationHandling This, MonoTouch.AVFoundation.AVVideoComposition videoComposition, MonoTouch.AVFoundation.AVVideoCompositionInstruction videoCompositionInstruction, MonoTouch.AVFoundation.AVVideoCompositionLayerInstruction layerInstruction, MonoTouch.AVFoundation.AVAsset asset);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldContinueValidatingAfterFindingInvalidTrackIDInInstruction(class MonoTouch.AVFoundation.IAVVideoCompositionValidationHandling This, class MonoTouch.AVFoundation.AVVideoComposition videoComposition, class MonoTouch.AVFoundation.AVVideoCompositionInstruction videoCompositionInstruction, class MonoTouch.AVFoundation.AVVideoCompositionLayerInstruction layerInstruction, class MonoTouch.AVFoundation.AVAsset asset) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVVideoCompositionValidationHandling" RefType="this" />
          <Parameter Name="videoComposition" Type="MonoTouch.AVFoundation.AVVideoComposition" />
          <Parameter Name="videoCompositionInstruction" Type="MonoTouch.AVFoundation.AVVideoCompositionInstruction" />
          <Parameter Name="layerInstruction" Type="MonoTouch.AVFoundation.AVVideoCompositionLayerInstruction" />
          <Parameter Name="asset" Type="MonoTouch.AVFoundation.AVAsset" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="videoComposition">To be added.</param>
          <param name="videoCompositionInstruction">To be added.</param>
          <param name="layerInstruction">To be added.</param>
          <param name="asset">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVVideoCompositionValidationHandling_Extensions" Member="M:MonoTouch.AVFoundation.AVVideoCompositionValidationHandling_Extensions.ShouldContinueValidatingAfterFindingInvalidTrackIDInInstruction(MonoTouch.AVFoundation.IAVVideoCompositionValidationHandling,MonoTouch.AVFoundation.AVVideoComposition,MonoTouch.AVFoundation.AVVideoCompositionInstruction,MonoTouch.AVFoundation.AVVideoCompositionLayerInstruction,MonoTouch.AVFoundation.AVAsset)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVFoundation.IAVVideoCompositionValidationHandling" />
      </Targets>
      <Member MemberName="ShouldContinueValidatingAfterFindingInvalidValueForKey">
        <MemberSignature Language="C#" Value="public static bool ShouldContinueValidatingAfterFindingInvalidValueForKey (this MonoTouch.AVFoundation.IAVVideoCompositionValidationHandling This, MonoTouch.AVFoundation.AVVideoComposition videoComposition, string key);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldContinueValidatingAfterFindingInvalidValueForKey(class MonoTouch.AVFoundation.IAVVideoCompositionValidationHandling This, class MonoTouch.AVFoundation.AVVideoComposition videoComposition, string key) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVFoundation.IAVVideoCompositionValidationHandling" RefType="this" />
          <Parameter Name="videoComposition" Type="MonoTouch.AVFoundation.AVVideoComposition" />
          <Parameter Name="key" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="videoComposition">To be added.</param>
          <param name="key">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.AVFoundation.AVVideoCompositionValidationHandling_Extensions" Member="M:MonoTouch.AVFoundation.AVVideoCompositionValidationHandling_Extensions.ShouldContinueValidatingAfterFindingInvalidValueForKey(MonoTouch.AVFoundation.IAVVideoCompositionValidationHandling,MonoTouch.AVFoundation.AVVideoComposition,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVKit.AVKitError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.AVKit.AVKitError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.AVKit.AVKitError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.AVKit.AVKitError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.AVKit.AVKitError value</summary>
        </Docs>
        <Link Type="MonoTouch.AVKit.AVKitErrorExtensions" Member="M:MonoTouch.AVKit.AVKitErrorExtensions.GetDomain(MonoTouch.AVKit.AVKitError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVKit.IAVPictureInPictureControllerDelegate" />
      </Targets>
      <Member MemberName="DidStartPictureInPicture">
        <MemberSignature Language="C#" Value="public static void DidStartPictureInPicture (this MonoTouch.AVKit.IAVPictureInPictureControllerDelegate This, MonoTouch.AVKit.AVPictureInPictureController pictureInPictureController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidStartPictureInPicture(class MonoTouch.AVKit.IAVPictureInPictureControllerDelegate This, class MonoTouch.AVKit.AVPictureInPictureController pictureInPictureController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVKit.IAVPictureInPictureControllerDelegate" RefType="this" />
          <Parameter Name="pictureInPictureController" Type="MonoTouch.AVKit.AVPictureInPictureController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pictureInPictureController">To be added.</param>
          <summary>Picture In Picture playback has started.</summary>
        </Docs>
        <Link Type="MonoTouch.AVKit.AVPictureInPictureControllerDelegate_Extensions" Member="M:MonoTouch.AVKit.AVPictureInPictureControllerDelegate_Extensions.DidStartPictureInPicture(MonoTouch.AVKit.IAVPictureInPictureControllerDelegate,MonoTouch.AVKit.AVPictureInPictureController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVKit.IAVPictureInPictureControllerDelegate" />
      </Targets>
      <Member MemberName="DidStopPictureInPicture">
        <MemberSignature Language="C#" Value="public static void DidStopPictureInPicture (this MonoTouch.AVKit.IAVPictureInPictureControllerDelegate This, MonoTouch.AVKit.AVPictureInPictureController pictureInPictureController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidStopPictureInPicture(class MonoTouch.AVKit.IAVPictureInPictureControllerDelegate This, class MonoTouch.AVKit.AVPictureInPictureController pictureInPictureController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVKit.IAVPictureInPictureControllerDelegate" RefType="this" />
          <Parameter Name="pictureInPictureController" Type="MonoTouch.AVKit.AVPictureInPictureController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pictureInPictureController">To be added.</param>
          <summary>Picture In Picture playback has stopped.</summary>
        </Docs>
        <Link Type="MonoTouch.AVKit.AVPictureInPictureControllerDelegate_Extensions" Member="M:MonoTouch.AVKit.AVPictureInPictureControllerDelegate_Extensions.DidStopPictureInPicture(MonoTouch.AVKit.IAVPictureInPictureControllerDelegate,MonoTouch.AVKit.AVPictureInPictureController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVKit.IAVPictureInPictureControllerDelegate" />
      </Targets>
      <Member MemberName="FailedToStartPictureInPicture">
        <MemberSignature Language="C#" Value="public static void FailedToStartPictureInPicture (this MonoTouch.AVKit.IAVPictureInPictureControllerDelegate This, MonoTouch.AVKit.AVPictureInPictureController pictureInPictureController, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FailedToStartPictureInPicture(class MonoTouch.AVKit.IAVPictureInPictureControllerDelegate This, class MonoTouch.AVKit.AVPictureInPictureController pictureInPictureController, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVKit.IAVPictureInPictureControllerDelegate" RefType="this" />
          <Parameter Name="pictureInPictureController" Type="MonoTouch.AVKit.AVPictureInPictureController" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pictureInPictureController">To be added.</param>
          <param name="error">To be added.</param>
          <summary>Picture In Picture playback failed to start.</summary>
        </Docs>
        <Link Type="MonoTouch.AVKit.AVPictureInPictureControllerDelegate_Extensions" Member="M:MonoTouch.AVKit.AVPictureInPictureControllerDelegate_Extensions.FailedToStartPictureInPicture(MonoTouch.AVKit.IAVPictureInPictureControllerDelegate,MonoTouch.AVKit.AVPictureInPictureController,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVKit.IAVPictureInPictureControllerDelegate" />
      </Targets>
      <Member MemberName="RestoreUserInterfaceForPictureInPicture">
        <MemberSignature Language="C#" Value="public static void RestoreUserInterfaceForPictureInPicture (this MonoTouch.AVKit.IAVPictureInPictureControllerDelegate This, MonoTouch.AVKit.AVPictureInPictureController pictureInPictureController, Action&lt;bool&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RestoreUserInterfaceForPictureInPicture(class MonoTouch.AVKit.IAVPictureInPictureControllerDelegate This, class MonoTouch.AVKit.AVPictureInPictureController pictureInPictureController, class System.Action`1&lt;bool&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVKit.IAVPictureInPictureControllerDelegate" RefType="this" />
          <Parameter Name="pictureInPictureController" Type="MonoTouch.AVKit.AVPictureInPictureController" />
          <Parameter Name="completionHandler" Type="System.Action&lt;System.Boolean&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V1))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pictureInPictureController">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>Picture In Picture playback is about to stop. Called to give the app the opportunity to provide a playback user interface by passing <see langword="true" /> to <paramref name="completionHandler" />.</summary>
        </Docs>
        <Link Type="MonoTouch.AVKit.AVPictureInPictureControllerDelegate_Extensions" Member="M:MonoTouch.AVKit.AVPictureInPictureControllerDelegate_Extensions.RestoreUserInterfaceForPictureInPicture(MonoTouch.AVKit.IAVPictureInPictureControllerDelegate,MonoTouch.AVKit.AVPictureInPictureController,System.Action{System.Boolean})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVKit.IAVPictureInPictureControllerDelegate" />
      </Targets>
      <Member MemberName="WillStartPictureInPicture">
        <MemberSignature Language="C#" Value="public static void WillStartPictureInPicture (this MonoTouch.AVKit.IAVPictureInPictureControllerDelegate This, MonoTouch.AVKit.AVPictureInPictureController pictureInPictureController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillStartPictureInPicture(class MonoTouch.AVKit.IAVPictureInPictureControllerDelegate This, class MonoTouch.AVKit.AVPictureInPictureController pictureInPictureController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVKit.IAVPictureInPictureControllerDelegate" RefType="this" />
          <Parameter Name="pictureInPictureController" Type="MonoTouch.AVKit.AVPictureInPictureController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pictureInPictureController">To be added.</param>
          <summary>Picture In Picture playback is about to start.</summary>
        </Docs>
        <Link Type="MonoTouch.AVKit.AVPictureInPictureControllerDelegate_Extensions" Member="M:MonoTouch.AVKit.AVPictureInPictureControllerDelegate_Extensions.WillStartPictureInPicture(MonoTouch.AVKit.IAVPictureInPictureControllerDelegate,MonoTouch.AVKit.AVPictureInPictureController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVKit.IAVPictureInPictureControllerDelegate" />
      </Targets>
      <Member MemberName="WillStopPictureInPicture">
        <MemberSignature Language="C#" Value="public static void WillStopPictureInPicture (this MonoTouch.AVKit.IAVPictureInPictureControllerDelegate This, MonoTouch.AVKit.AVPictureInPictureController pictureInPictureController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillStopPictureInPicture(class MonoTouch.AVKit.IAVPictureInPictureControllerDelegate This, class MonoTouch.AVKit.AVPictureInPictureController pictureInPictureController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVKit.IAVPictureInPictureControllerDelegate" RefType="this" />
          <Parameter Name="pictureInPictureController" Type="MonoTouch.AVKit.AVPictureInPictureController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pictureInPictureController">To be added.</param>
          <summary>Picture In Picture playback is about to stop.</summary>
        </Docs>
        <Link Type="MonoTouch.AVKit.AVPictureInPictureControllerDelegate_Extensions" Member="M:MonoTouch.AVKit.AVPictureInPictureControllerDelegate_Extensions.WillStopPictureInPicture(MonoTouch.AVKit.IAVPictureInPictureControllerDelegate,MonoTouch.AVKit.AVPictureInPictureController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVKit.IAVPlayerViewControllerDelegate" />
      </Targets>
      <Member MemberName="DidStartPictureInPicture">
        <MemberSignature Language="C#" Value="public static void DidStartPictureInPicture (this MonoTouch.AVKit.IAVPlayerViewControllerDelegate This, MonoTouch.AVKit.AVPlayerViewController playerViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidStartPictureInPicture(class MonoTouch.AVKit.IAVPlayerViewControllerDelegate This, class MonoTouch.AVKit.AVPlayerViewController playerViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVKit.IAVPlayerViewControllerDelegate" RefType="this" />
          <Parameter Name="playerViewController" Type="MonoTouch.AVKit.AVPlayerViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="playerViewController">To be added.</param>
          <summary>Picture In Picture playback has started.</summary>
        </Docs>
        <Link Type="MonoTouch.AVKit.AVPlayerViewControllerDelegate_Extensions" Member="M:MonoTouch.AVKit.AVPlayerViewControllerDelegate_Extensions.DidStartPictureInPicture(MonoTouch.AVKit.IAVPlayerViewControllerDelegate,MonoTouch.AVKit.AVPlayerViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVKit.IAVPlayerViewControllerDelegate" />
      </Targets>
      <Member MemberName="DidStopPictureInPicture">
        <MemberSignature Language="C#" Value="public static void DidStopPictureInPicture (this MonoTouch.AVKit.IAVPlayerViewControllerDelegate This, MonoTouch.AVKit.AVPlayerViewController playerViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidStopPictureInPicture(class MonoTouch.AVKit.IAVPlayerViewControllerDelegate This, class MonoTouch.AVKit.AVPlayerViewController playerViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVKit.IAVPlayerViewControllerDelegate" RefType="this" />
          <Parameter Name="playerViewController" Type="MonoTouch.AVKit.AVPlayerViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="playerViewController">To be added.</param>
          <summary>Picture In Picture playback has stopped.</summary>
        </Docs>
        <Link Type="MonoTouch.AVKit.AVPlayerViewControllerDelegate_Extensions" Member="M:MonoTouch.AVKit.AVPlayerViewControllerDelegate_Extensions.DidStopPictureInPicture(MonoTouch.AVKit.IAVPlayerViewControllerDelegate,MonoTouch.AVKit.AVPlayerViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVKit.IAVPlayerViewControllerDelegate" />
      </Targets>
      <Member MemberName="FailedToStartPictureInPicture">
        <MemberSignature Language="C#" Value="public static void FailedToStartPictureInPicture (this MonoTouch.AVKit.IAVPlayerViewControllerDelegate This, MonoTouch.AVKit.AVPlayerViewController playerViewController, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FailedToStartPictureInPicture(class MonoTouch.AVKit.IAVPlayerViewControllerDelegate This, class MonoTouch.AVKit.AVPlayerViewController playerViewController, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVKit.IAVPlayerViewControllerDelegate" RefType="this" />
          <Parameter Name="playerViewController" Type="MonoTouch.AVKit.AVPlayerViewController" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="playerViewController">To be added.</param>
          <param name="error">To be added.</param>
          <summary>Picture In Picture playback failed to start.</summary>
        </Docs>
        <Link Type="MonoTouch.AVKit.AVPlayerViewControllerDelegate_Extensions" Member="M:MonoTouch.AVKit.AVPlayerViewControllerDelegate_Extensions.FailedToStartPictureInPicture(MonoTouch.AVKit.IAVPlayerViewControllerDelegate,MonoTouch.AVKit.AVPlayerViewController,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVKit.IAVPlayerViewControllerDelegate" />
      </Targets>
      <Member MemberName="RestoreUserInterfaceForPictureInPicture">
        <MemberSignature Language="C#" Value="public static void RestoreUserInterfaceForPictureInPicture (this MonoTouch.AVKit.IAVPlayerViewControllerDelegate This, MonoTouch.AVKit.AVPlayerViewController playerViewController, Action&lt;bool&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RestoreUserInterfaceForPictureInPicture(class MonoTouch.AVKit.IAVPlayerViewControllerDelegate This, class MonoTouch.AVKit.AVPlayerViewController playerViewController, class System.Action`1&lt;bool&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVKit.IAVPlayerViewControllerDelegate" RefType="this" />
          <Parameter Name="playerViewController" Type="MonoTouch.AVKit.AVPlayerViewController" />
          <Parameter Name="completionHandler" Type="System.Action&lt;System.Boolean&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V1))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="playerViewController">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>Picture In Picture playback is about to stop. Called to give the app the opportunity to provide a playback user interface by passing <see langword="true" /> to <paramref name="completionHandler" />.</summary>
        </Docs>
        <Link Type="MonoTouch.AVKit.AVPlayerViewControllerDelegate_Extensions" Member="M:MonoTouch.AVKit.AVPlayerViewControllerDelegate_Extensions.RestoreUserInterfaceForPictureInPicture(MonoTouch.AVKit.IAVPlayerViewControllerDelegate,MonoTouch.AVKit.AVPlayerViewController,System.Action{System.Boolean})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVKit.IAVPlayerViewControllerDelegate" />
      </Targets>
      <Member MemberName="ShouldAutomaticallyDismissAtPictureInPictureStart">
        <MemberSignature Language="C#" Value="public static bool ShouldAutomaticallyDismissAtPictureInPictureStart (this MonoTouch.AVKit.IAVPlayerViewControllerDelegate This, MonoTouch.AVKit.AVPlayerViewController playerViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldAutomaticallyDismissAtPictureInPictureStart(class MonoTouch.AVKit.IAVPlayerViewControllerDelegate This, class MonoTouch.AVKit.AVPlayerViewController playerViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVKit.IAVPlayerViewControllerDelegate" RefType="this" />
          <Parameter Name="playerViewController" Type="MonoTouch.AVKit.AVPlayerViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="playerViewController">To be added.</param>
          <summary>App developers should return <see langword="true" /> to indicate that the player viewer should dismiss when Picture In Picture playback starts, or <see langword="false" /> to prevent this.</summary>
        </Docs>
        <Link Type="MonoTouch.AVKit.AVPlayerViewControllerDelegate_Extensions" Member="M:MonoTouch.AVKit.AVPlayerViewControllerDelegate_Extensions.ShouldAutomaticallyDismissAtPictureInPictureStart(MonoTouch.AVKit.IAVPlayerViewControllerDelegate,MonoTouch.AVKit.AVPlayerViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVKit.IAVPlayerViewControllerDelegate" />
      </Targets>
      <Member MemberName="WillStartPictureInPicture">
        <MemberSignature Language="C#" Value="public static void WillStartPictureInPicture (this MonoTouch.AVKit.IAVPlayerViewControllerDelegate This, MonoTouch.AVKit.AVPlayerViewController playerViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillStartPictureInPicture(class MonoTouch.AVKit.IAVPlayerViewControllerDelegate This, class MonoTouch.AVKit.AVPlayerViewController playerViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVKit.IAVPlayerViewControllerDelegate" RefType="this" />
          <Parameter Name="playerViewController" Type="MonoTouch.AVKit.AVPlayerViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="playerViewController">To be added.</param>
          <summary>Picture In Picture playback is about to start.</summary>
        </Docs>
        <Link Type="MonoTouch.AVKit.AVPlayerViewControllerDelegate_Extensions" Member="M:MonoTouch.AVKit.AVPlayerViewControllerDelegate_Extensions.WillStartPictureInPicture(MonoTouch.AVKit.IAVPlayerViewControllerDelegate,MonoTouch.AVKit.AVPlayerViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVKit.IAVPlayerViewControllerDelegate" />
      </Targets>
      <Member MemberName="WillStopPictureInPicture">
        <MemberSignature Language="C#" Value="public static void WillStopPictureInPicture (this MonoTouch.AVKit.IAVPlayerViewControllerDelegate This, MonoTouch.AVKit.AVPlayerViewController playerViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillStopPictureInPicture(class MonoTouch.AVKit.IAVPlayerViewControllerDelegate This, class MonoTouch.AVKit.AVPlayerViewController playerViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVKit.IAVPlayerViewControllerDelegate" RefType="this" />
          <Parameter Name="playerViewController" Type="MonoTouch.AVKit.AVPlayerViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="playerViewController">To be added.</param>
          <summary>Picture In Picture playback is about to stop.</summary>
        </Docs>
        <Link Type="MonoTouch.AVKit.AVPlayerViewControllerDelegate_Extensions" Member="M:MonoTouch.AVKit.AVPlayerViewControllerDelegate_Extensions.WillStopPictureInPicture(MonoTouch.AVKit.IAVPlayerViewControllerDelegate,MonoTouch.AVKit.AVPlayerViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CallKit.CXErrorCodeCallDirectoryManagerError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.CallKit.CXErrorCodeCallDirectoryManagerError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.CallKit.CXErrorCodeCallDirectoryManagerError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CallKit.CXErrorCodeCallDirectoryManagerError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CallKit.CXErrorCodeCallDirectoryManagerErrorExtensions" Member="M:MonoTouch.CallKit.CXErrorCodeCallDirectoryManagerErrorExtensions.GetDomain(MonoTouch.CallKit.CXErrorCodeCallDirectoryManagerError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CallKit.CXErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.CallKit.CXErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.CallKit.CXErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CallKit.CXErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CallKit.CXErrorCodeExtensions" Member="M:MonoTouch.CallKit.CXErrorCodeExtensions.GetDomain(MonoTouch.CallKit.CXErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CallKit.CXErrorCodeIncomingCallError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.CallKit.CXErrorCodeIncomingCallError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.CallKit.CXErrorCodeIncomingCallError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CallKit.CXErrorCodeIncomingCallError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CallKit.CXErrorCodeIncomingCallErrorExtensions" Member="M:MonoTouch.CallKit.CXErrorCodeIncomingCallErrorExtensions.GetDomain(MonoTouch.CallKit.CXErrorCodeIncomingCallError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CallKit.CXErrorCodeRequestTransactionError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.CallKit.CXErrorCodeRequestTransactionError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.CallKit.CXErrorCodeRequestTransactionError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CallKit.CXErrorCodeRequestTransactionError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CallKit.CXErrorCodeRequestTransactionErrorExtensions" Member="M:MonoTouch.CallKit.CXErrorCodeRequestTransactionErrorExtensions.GetDomain(MonoTouch.CallKit.CXErrorCodeRequestTransactionError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CallKit.ICXProviderDelegate" />
      </Targets>
      <Member MemberName="DidActivateAudioSession">
        <MemberSignature Language="C#" Value="public static void DidActivateAudioSession (this MonoTouch.CallKit.ICXProviderDelegate This, MonoTouch.CallKit.CXProvider provider, MonoTouch.AVFoundation.AVAudioSession audioSession);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidActivateAudioSession(class MonoTouch.CallKit.ICXProviderDelegate This, class MonoTouch.CallKit.CXProvider provider, class MonoTouch.AVFoundation.AVAudioSession audioSession) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CallKit.ICXProviderDelegate" RefType="this" />
          <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
          <Parameter Name="audioSession" Type="MonoTouch.AVFoundation.AVAudioSession" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="provider">To be added.</param>
          <param name="audioSession">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CallKit.CXProviderDelegate_Extensions" Member="M:MonoTouch.CallKit.CXProviderDelegate_Extensions.DidActivateAudioSession(MonoTouch.CallKit.ICXProviderDelegate,MonoTouch.CallKit.CXProvider,MonoTouch.AVFoundation.AVAudioSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CallKit.ICXProviderDelegate" />
      </Targets>
      <Member MemberName="DidBegin">
        <MemberSignature Language="C#" Value="public static void DidBegin (this MonoTouch.CallKit.ICXProviderDelegate This, MonoTouch.CallKit.CXProvider provider);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidBegin(class MonoTouch.CallKit.ICXProviderDelegate This, class MonoTouch.CallKit.CXProvider provider) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CallKit.ICXProviderDelegate" RefType="this" />
          <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="provider">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CallKit.CXProviderDelegate_Extensions" Member="M:MonoTouch.CallKit.CXProviderDelegate_Extensions.DidBegin(MonoTouch.CallKit.ICXProviderDelegate,MonoTouch.CallKit.CXProvider)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CallKit.ICXProviderDelegate" />
      </Targets>
      <Member MemberName="DidChangeAuthorizationStatus">
        <MemberSignature Language="C#" Value="public static void DidChangeAuthorizationStatus (this MonoTouch.CallKit.ICXProviderDelegate This, MonoTouch.CallKit.CXProvider provider, MonoTouch.CallKit.CXAuthorizationStatus authorizationStatus);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidChangeAuthorizationStatus(class MonoTouch.CallKit.ICXProviderDelegate This, class MonoTouch.CallKit.CXProvider provider, valuetype MonoTouch.CallKit.CXAuthorizationStatus authorizationStatus) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CallKit.ICXProviderDelegate" RefType="this" />
          <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
          <Parameter Name="authorizationStatus" Type="MonoTouch.CallKit.CXAuthorizationStatus" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="provider">To be added.</param>
          <param name="authorizationStatus">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CallKit.CXProviderDelegate_Extensions" Member="M:MonoTouch.CallKit.CXProviderDelegate_Extensions.DidChangeAuthorizationStatus(MonoTouch.CallKit.ICXProviderDelegate,MonoTouch.CallKit.CXProvider,MonoTouch.CallKit.CXAuthorizationStatus)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CallKit.ICXProviderDelegate" />
      </Targets>
      <Member MemberName="DidDeactivateAudioSession">
        <MemberSignature Language="C#" Value="public static void DidDeactivateAudioSession (this MonoTouch.CallKit.ICXProviderDelegate This, MonoTouch.CallKit.CXProvider provider, MonoTouch.AVFoundation.AVAudioSession audioSession);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDeactivateAudioSession(class MonoTouch.CallKit.ICXProviderDelegate This, class MonoTouch.CallKit.CXProvider provider, class MonoTouch.AVFoundation.AVAudioSession audioSession) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CallKit.ICXProviderDelegate" RefType="this" />
          <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
          <Parameter Name="audioSession" Type="MonoTouch.AVFoundation.AVAudioSession" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="provider">To be added.</param>
          <param name="audioSession">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CallKit.CXProviderDelegate_Extensions" Member="M:MonoTouch.CallKit.CXProviderDelegate_Extensions.DidDeactivateAudioSession(MonoTouch.CallKit.ICXProviderDelegate,MonoTouch.CallKit.CXProvider,MonoTouch.AVFoundation.AVAudioSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CallKit.ICXProviderDelegate" />
      </Targets>
      <Member MemberName="DidReset">
        <MemberSignature Language="C#" Value="public static void DidReset (this MonoTouch.CallKit.ICXProviderDelegate This, MonoTouch.CallKit.CXProvider provider);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReset(class MonoTouch.CallKit.ICXProviderDelegate This, class MonoTouch.CallKit.CXProvider provider) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CallKit.ICXProviderDelegate" RefType="this" />
          <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="provider">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CallKit.CXProviderDelegate_Extensions" Member="M:MonoTouch.CallKit.CXProviderDelegate_Extensions.DidReset(MonoTouch.CallKit.ICXProviderDelegate,MonoTouch.CallKit.CXProvider)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CallKit.ICXProviderDelegate" />
      </Targets>
      <Member MemberName="ExecuteTransaction">
        <MemberSignature Language="C#" Value="public static bool ExecuteTransaction (this MonoTouch.CallKit.ICXProviderDelegate This, MonoTouch.CallKit.CXProvider provider, MonoTouch.CallKit.CXTransaction transaction);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ExecuteTransaction(class MonoTouch.CallKit.ICXProviderDelegate This, class MonoTouch.CallKit.CXProvider provider, class MonoTouch.CallKit.CXTransaction transaction) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CallKit.ICXProviderDelegate" RefType="this" />
          <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
          <Parameter Name="transaction" Type="MonoTouch.CallKit.CXTransaction" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="provider">To be added.</param>
          <param name="transaction">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CallKit.CXProviderDelegate_Extensions" Member="M:MonoTouch.CallKit.CXProviderDelegate_Extensions.ExecuteTransaction(MonoTouch.CallKit.ICXProviderDelegate,MonoTouch.CallKit.CXProvider,MonoTouch.CallKit.CXTransaction)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CallKit.ICXProviderDelegate" />
      </Targets>
      <Member MemberName="PerformAnswerCallAction">
        <MemberSignature Language="C#" Value="public static void PerformAnswerCallAction (this MonoTouch.CallKit.ICXProviderDelegate This, MonoTouch.CallKit.CXProvider provider, MonoTouch.CallKit.CXAnswerCallAction action);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformAnswerCallAction(class MonoTouch.CallKit.ICXProviderDelegate This, class MonoTouch.CallKit.CXProvider provider, class MonoTouch.CallKit.CXAnswerCallAction action) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CallKit.ICXProviderDelegate" RefType="this" />
          <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
          <Parameter Name="action" Type="MonoTouch.CallKit.CXAnswerCallAction" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="provider">To be added.</param>
          <param name="action">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CallKit.CXProviderDelegate_Extensions" Member="M:MonoTouch.CallKit.CXProviderDelegate_Extensions.PerformAnswerCallAction(MonoTouch.CallKit.ICXProviderDelegate,MonoTouch.CallKit.CXProvider,MonoTouch.CallKit.CXAnswerCallAction)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CallKit.ICXProviderDelegate" />
      </Targets>
      <Member MemberName="PerformEndCallAction">
        <MemberSignature Language="C#" Value="public static void PerformEndCallAction (this MonoTouch.CallKit.ICXProviderDelegate This, MonoTouch.CallKit.CXProvider provider, MonoTouch.CallKit.CXEndCallAction action);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformEndCallAction(class MonoTouch.CallKit.ICXProviderDelegate This, class MonoTouch.CallKit.CXProvider provider, class MonoTouch.CallKit.CXEndCallAction action) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CallKit.ICXProviderDelegate" RefType="this" />
          <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
          <Parameter Name="action" Type="MonoTouch.CallKit.CXEndCallAction" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="provider">To be added.</param>
          <param name="action">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CallKit.CXProviderDelegate_Extensions" Member="M:MonoTouch.CallKit.CXProviderDelegate_Extensions.PerformEndCallAction(MonoTouch.CallKit.ICXProviderDelegate,MonoTouch.CallKit.CXProvider,MonoTouch.CallKit.CXEndCallAction)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CallKit.ICXProviderDelegate" />
      </Targets>
      <Member MemberName="PerformPlayDtmfCallAction">
        <MemberSignature Language="C#" Value="public static void PerformPlayDtmfCallAction (this MonoTouch.CallKit.ICXProviderDelegate This, MonoTouch.CallKit.CXProvider provider, MonoTouch.CallKit.CXPlayDtmfCallAction action);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformPlayDtmfCallAction(class MonoTouch.CallKit.ICXProviderDelegate This, class MonoTouch.CallKit.CXProvider provider, class MonoTouch.CallKit.CXPlayDtmfCallAction action) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CallKit.ICXProviderDelegate" RefType="this" />
          <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
          <Parameter Name="action" Type="MonoTouch.CallKit.CXPlayDtmfCallAction" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="provider">To be added.</param>
          <param name="action">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CallKit.CXProviderDelegate_Extensions" Member="M:MonoTouch.CallKit.CXProviderDelegate_Extensions.PerformPlayDtmfCallAction(MonoTouch.CallKit.ICXProviderDelegate,MonoTouch.CallKit.CXProvider,MonoTouch.CallKit.CXPlayDtmfCallAction)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CallKit.ICXProviderDelegate" />
      </Targets>
      <Member MemberName="PerformSetGroupCallAction">
        <MemberSignature Language="C#" Value="public static void PerformSetGroupCallAction (this MonoTouch.CallKit.ICXProviderDelegate This, MonoTouch.CallKit.CXProvider provider, MonoTouch.CallKit.CXSetGroupCallAction action);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformSetGroupCallAction(class MonoTouch.CallKit.ICXProviderDelegate This, class MonoTouch.CallKit.CXProvider provider, class MonoTouch.CallKit.CXSetGroupCallAction action) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CallKit.ICXProviderDelegate" RefType="this" />
          <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
          <Parameter Name="action" Type="MonoTouch.CallKit.CXSetGroupCallAction" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="provider">To be added.</param>
          <param name="action">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CallKit.CXProviderDelegate_Extensions" Member="M:MonoTouch.CallKit.CXProviderDelegate_Extensions.PerformSetGroupCallAction(MonoTouch.CallKit.ICXProviderDelegate,MonoTouch.CallKit.CXProvider,MonoTouch.CallKit.CXSetGroupCallAction)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CallKit.ICXProviderDelegate" />
      </Targets>
      <Member MemberName="PerformSetHeldCallAction">
        <MemberSignature Language="C#" Value="public static void PerformSetHeldCallAction (this MonoTouch.CallKit.ICXProviderDelegate This, MonoTouch.CallKit.CXProvider provider, MonoTouch.CallKit.CXSetHeldCallAction action);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformSetHeldCallAction(class MonoTouch.CallKit.ICXProviderDelegate This, class MonoTouch.CallKit.CXProvider provider, class MonoTouch.CallKit.CXSetHeldCallAction action) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CallKit.ICXProviderDelegate" RefType="this" />
          <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
          <Parameter Name="action" Type="MonoTouch.CallKit.CXSetHeldCallAction" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="provider">To be added.</param>
          <param name="action">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CallKit.CXProviderDelegate_Extensions" Member="M:MonoTouch.CallKit.CXProviderDelegate_Extensions.PerformSetHeldCallAction(MonoTouch.CallKit.ICXProviderDelegate,MonoTouch.CallKit.CXProvider,MonoTouch.CallKit.CXSetHeldCallAction)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CallKit.ICXProviderDelegate" />
      </Targets>
      <Member MemberName="PerformSetMutedCallAction">
        <MemberSignature Language="C#" Value="public static void PerformSetMutedCallAction (this MonoTouch.CallKit.ICXProviderDelegate This, MonoTouch.CallKit.CXProvider provider, MonoTouch.CallKit.CXSetMutedCallAction action);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformSetMutedCallAction(class MonoTouch.CallKit.ICXProviderDelegate This, class MonoTouch.CallKit.CXProvider provider, class MonoTouch.CallKit.CXSetMutedCallAction action) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CallKit.ICXProviderDelegate" RefType="this" />
          <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
          <Parameter Name="action" Type="MonoTouch.CallKit.CXSetMutedCallAction" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="provider">To be added.</param>
          <param name="action">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CallKit.CXProviderDelegate_Extensions" Member="M:MonoTouch.CallKit.CXProviderDelegate_Extensions.PerformSetMutedCallAction(MonoTouch.CallKit.ICXProviderDelegate,MonoTouch.CallKit.CXProvider,MonoTouch.CallKit.CXSetMutedCallAction)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CallKit.ICXProviderDelegate" />
      </Targets>
      <Member MemberName="PerformStartCallAction">
        <MemberSignature Language="C#" Value="public static void PerformStartCallAction (this MonoTouch.CallKit.ICXProviderDelegate This, MonoTouch.CallKit.CXProvider provider, MonoTouch.CallKit.CXStartCallAction action);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformStartCallAction(class MonoTouch.CallKit.ICXProviderDelegate This, class MonoTouch.CallKit.CXProvider provider, class MonoTouch.CallKit.CXStartCallAction action) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CallKit.ICXProviderDelegate" RefType="this" />
          <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
          <Parameter Name="action" Type="MonoTouch.CallKit.CXStartCallAction" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="provider">To be added.</param>
          <param name="action">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CallKit.CXProviderDelegate_Extensions" Member="M:MonoTouch.CallKit.CXProviderDelegate_Extensions.PerformStartCallAction(MonoTouch.CallKit.ICXProviderDelegate,MonoTouch.CallKit.CXProvider,MonoTouch.CallKit.CXStartCallAction)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CallKit.ICXProviderDelegate" />
      </Targets>
      <Member MemberName="TimedOutPerformingAction">
        <MemberSignature Language="C#" Value="public static void TimedOutPerformingAction (this MonoTouch.CallKit.ICXProviderDelegate This, MonoTouch.CallKit.CXProvider provider, MonoTouch.CallKit.CXAction action);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TimedOutPerformingAction(class MonoTouch.CallKit.ICXProviderDelegate This, class MonoTouch.CallKit.CXProvider provider, class MonoTouch.CallKit.CXAction action) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CallKit.ICXProviderDelegate" RefType="this" />
          <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
          <Parameter Name="action" Type="MonoTouch.CallKit.CXAction" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="provider">To be added.</param>
          <param name="action">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CallKit.CXProviderDelegate_Extensions" Member="M:MonoTouch.CallKit.CXProviderDelegate_Extensions.TimedOutPerformingAction(MonoTouch.CallKit.ICXProviderDelegate,MonoTouch.CallKit.CXProvider,MonoTouch.CallKit.CXAction)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CloudKit.CKErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.CloudKit.CKErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.CloudKit.CKErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CloudKit.CKErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.CloudKit.CKErrorCode value</summary>
        </Docs>
        <Link Type="MonoTouch.CloudKit.CKErrorCodeExtensions" Member="M:MonoTouch.CloudKit.CKErrorCodeExtensions.GetDomain(MonoTouch.CloudKit.CKErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Contacts.CNContainer" />
      </Targets>
      <Member MemberName="GetPredicateForContainerOfContact">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSPredicate GetPredicateForContainerOfContact (this MonoTouch.Contacts.CNContainer This, string contactIdentifier);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSPredicate GetPredicateForContainerOfContact(class MonoTouch.Contacts.CNContainer This, string contactIdentifier) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSPredicate</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Contacts.CNContainer" RefType="this" />
          <Parameter Name="contactIdentifier" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="contactIdentifier">To be added.</param>
          <summary>Retrieves an <see cref="T:MonoTouch.Foundation.NSPredicate" /> appropriate for retrieving the <see cref="T:MonoTouch.Contacts.CNContainer" /> containing the <see cref="T:MonoTouch.Contacts.CNContact" /> with the identifier <paramref name="contactIdentifier" />.</summary>
        </Docs>
        <Link Type="MonoTouch.Contacts.CNContainer_PredicatesExtension" Member="M:MonoTouch.Contacts.CNContainer_PredicatesExtension.GetPredicateForContainerOfContact(MonoTouch.Contacts.CNContainer,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Contacts.CNContainer" />
      </Targets>
      <Member MemberName="GetPredicateForContainerOfGroup">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSPredicate GetPredicateForContainerOfGroup (this MonoTouch.Contacts.CNContainer This, string groupIdentifier);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSPredicate GetPredicateForContainerOfGroup(class MonoTouch.Contacts.CNContainer This, string groupIdentifier) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSPredicate</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Contacts.CNContainer" RefType="this" />
          <Parameter Name="groupIdentifier" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="groupIdentifier">To be added.</param>
          <summary>Retrieves an <see cref="T:MonoTouch.Foundation.NSPredicate" /> appropriate for retrieving the <see cref="T:MonoTouch.Contacts.CNContainer" /> containing the <see cref="T:MonoTouch.Contacts.CNGroup" /> with the identifier <paramref name="groupIdentifier" />.</summary>
        </Docs>
        <Link Type="MonoTouch.Contacts.CNContainer_PredicatesExtension" Member="M:MonoTouch.Contacts.CNContainer_PredicatesExtension.GetPredicateForContainerOfGroup(MonoTouch.Contacts.CNContainer,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Contacts.CNContainer" />
      </Targets>
      <Member MemberName="GetPredicateForContainers">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSPredicate GetPredicateForContainers (this MonoTouch.Contacts.CNContainer This, string[] identifiers);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSPredicate GetPredicateForContainers(class MonoTouch.Contacts.CNContainer This, string[] identifiers) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSPredicate</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Contacts.CNContainer" RefType="this" />
          <Parameter Name="identifiers" Type="System.String[]" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="identifiers">To be added.</param>
          <summary>Retrieves an <see cref="T:MonoTouch.Foundation.NSPredicate" /> appropriate for retrieving the <see cref="T:MonoTouch.Contacts.CNContainer" /> objects with the identifiers specified by <paramref name="identifiers" />.</summary>
        </Docs>
        <Link Type="MonoTouch.Contacts.CNContainer_PredicatesExtension" Member="M:MonoTouch.Contacts.CNContainer_PredicatesExtension.GetPredicateForContainers(MonoTouch.Contacts.CNContainer,System.String[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Contacts.CNErrorCode" />
      </Targets>
      <Member MemberName="GetDomain" apistyle="unified">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.Contacts.CNErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.Contacts.CNErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.Contacts.CNErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Contacts.CNErrorCodeExtensions" Member="M:MonoTouch.Contacts.CNErrorCodeExtensions.GetDomain(MonoTouch.Contacts.CNErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Contacts.CNGroup" />
      </Targets>
      <Member MemberName="GetPredicateForGroups">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSPredicate GetPredicateForGroups (this MonoTouch.Contacts.CNGroup This, string[] identifiers);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSPredicate GetPredicateForGroups(class MonoTouch.Contacts.CNGroup This, string[] identifiers) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSPredicate</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Contacts.CNGroup" RefType="this" />
          <Parameter Name="identifiers" Type="System.String[]" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="identifiers">To be added.</param>
          <summary>A <see cref="T:MonoTouch.Foundation.NSPredicate" /> that will retrieve the <see cref="T:MonoTouch.Contacts.CNGroup" /> objects whose <see cref="P:MonoTouch.Contacts.CNGroup.Identifier" /> properties match <paramref name="identifiers" />.</summary>
        </Docs>
        <Link Type="MonoTouch.Contacts.CNGroup_PredicatesExtension" Member="M:MonoTouch.Contacts.CNGroup_PredicatesExtension.GetPredicateForGroups(MonoTouch.Contacts.CNGroup,System.String[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Contacts.CNGroup" />
      </Targets>
      <Member MemberName="GetPredicateForGroupsInContainer">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSPredicate GetPredicateForGroupsInContainer (this MonoTouch.Contacts.CNGroup This, string containerIdentifier);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSPredicate GetPredicateForGroupsInContainer(class MonoTouch.Contacts.CNGroup This, string containerIdentifier) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSPredicate</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Contacts.CNGroup" RefType="this" />
          <Parameter Name="containerIdentifier" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="containerIdentifier">To be added.</param>
          <summary>A <see cref="T:MonoTouch.Foundation.NSPredicate" /> that will retrieve the <see cref="T:MonoTouch.Contacts.CNGroup" /> objects in the <see cref="T:MonoTouch.Contacts.CNContainer" /> whose <see cref="P:MonoTouch.Contacts.CNContainer.Identifier" /> property matches <paramref name="containerIdentifier" />.</summary>
        </Docs>
        <Link Type="MonoTouch.Contacts.CNGroup_PredicatesExtension" Member="M:MonoTouch.Contacts.CNGroup_PredicatesExtension.GetPredicateForGroupsInContainer(MonoTouch.Contacts.CNGroup,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ContactsUI.ICNContactPickerDelegate" />
      </Targets>
      <Member MemberName="ContactPickerDidCancel">
        <MemberSignature Language="C#" Value="public static void ContactPickerDidCancel (this MonoTouch.ContactsUI.ICNContactPickerDelegate This, MonoTouch.ContactsUI.CNContactPickerViewController picker);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ContactPickerDidCancel(class MonoTouch.ContactsUI.ICNContactPickerDelegate This, class MonoTouch.ContactsUI.CNContactPickerViewController picker) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ContactsUI.ICNContactPickerDelegate" RefType="this" />
          <Parameter Name="picker" Type="MonoTouch.ContactsUI.CNContactPickerViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="picker">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ContactsUI.CNContactPickerDelegate_Extensions" Member="M:MonoTouch.ContactsUI.CNContactPickerDelegate_Extensions.ContactPickerDidCancel(MonoTouch.ContactsUI.ICNContactPickerDelegate,MonoTouch.ContactsUI.CNContactPickerViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ContactsUI.ICNContactPickerDelegate" />
      </Targets>
      <Member MemberName="DidSelectContact">
        <MemberSignature Language="C#" Value="public static void DidSelectContact (this MonoTouch.ContactsUI.ICNContactPickerDelegate This, MonoTouch.ContactsUI.CNContactPickerViewController picker, MonoTouch.Contacts.CNContact contact);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSelectContact(class MonoTouch.ContactsUI.ICNContactPickerDelegate This, class MonoTouch.ContactsUI.CNContactPickerViewController picker, class MonoTouch.Contacts.CNContact contact) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ContactsUI.ICNContactPickerDelegate" RefType="this" />
          <Parameter Name="picker" Type="MonoTouch.ContactsUI.CNContactPickerViewController" />
          <Parameter Name="contact" Type="MonoTouch.Contacts.CNContact" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="picker">To be added.</param>
          <param name="contact">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ContactsUI.CNContactPickerDelegate_Extensions" Member="M:MonoTouch.ContactsUI.CNContactPickerDelegate_Extensions.DidSelectContact(MonoTouch.ContactsUI.ICNContactPickerDelegate,MonoTouch.ContactsUI.CNContactPickerViewController,MonoTouch.Contacts.CNContact)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ContactsUI.ICNContactPickerDelegate" />
      </Targets>
      <Member MemberName="DidSelectContactProperties">
        <MemberSignature Language="C#" Value="public static void DidSelectContactProperties (this MonoTouch.ContactsUI.ICNContactPickerDelegate This, MonoTouch.ContactsUI.CNContactPickerViewController picker, MonoTouch.Contacts.CNContactProperty[] contactProperties);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSelectContactProperties(class MonoTouch.ContactsUI.ICNContactPickerDelegate This, class MonoTouch.ContactsUI.CNContactPickerViewController picker, class MonoTouch.Contacts.CNContactProperty[] contactProperties) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ContactsUI.ICNContactPickerDelegate" RefType="this" />
          <Parameter Name="picker" Type="MonoTouch.ContactsUI.CNContactPickerViewController" />
          <Parameter Name="contactProperties" Type="MonoTouch.Contacts.CNContactProperty[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="picker">To be added.</param>
          <param name="contactProperties">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ContactsUI.CNContactPickerDelegate_Extensions" Member="M:MonoTouch.ContactsUI.CNContactPickerDelegate_Extensions.DidSelectContactProperties(MonoTouch.ContactsUI.ICNContactPickerDelegate,MonoTouch.ContactsUI.CNContactPickerViewController,MonoTouch.Contacts.CNContactProperty[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ContactsUI.ICNContactPickerDelegate" />
      </Targets>
      <Member MemberName="DidSelectContactProperty">
        <MemberSignature Language="C#" Value="public static void DidSelectContactProperty (this MonoTouch.ContactsUI.ICNContactPickerDelegate This, MonoTouch.ContactsUI.CNContactPickerViewController picker, MonoTouch.Contacts.CNContactProperty contactProperty);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSelectContactProperty(class MonoTouch.ContactsUI.ICNContactPickerDelegate This, class MonoTouch.ContactsUI.CNContactPickerViewController picker, class MonoTouch.Contacts.CNContactProperty contactProperty) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ContactsUI.ICNContactPickerDelegate" RefType="this" />
          <Parameter Name="picker" Type="MonoTouch.ContactsUI.CNContactPickerViewController" />
          <Parameter Name="contactProperty" Type="MonoTouch.Contacts.CNContactProperty" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="picker">To be added.</param>
          <param name="contactProperty">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ContactsUI.CNContactPickerDelegate_Extensions" Member="M:MonoTouch.ContactsUI.CNContactPickerDelegate_Extensions.DidSelectContactProperty(MonoTouch.ContactsUI.ICNContactPickerDelegate,MonoTouch.ContactsUI.CNContactPickerViewController,MonoTouch.Contacts.CNContactProperty)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ContactsUI.ICNContactPickerDelegate" />
      </Targets>
      <Member MemberName="DidSelectContacts">
        <MemberSignature Language="C#" Value="public static void DidSelectContacts (this MonoTouch.ContactsUI.ICNContactPickerDelegate This, MonoTouch.ContactsUI.CNContactPickerViewController picker, MonoTouch.Contacts.CNContact[] contacts);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSelectContacts(class MonoTouch.ContactsUI.ICNContactPickerDelegate This, class MonoTouch.ContactsUI.CNContactPickerViewController picker, class MonoTouch.Contacts.CNContact[] contacts) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ContactsUI.ICNContactPickerDelegate" RefType="this" />
          <Parameter Name="picker" Type="MonoTouch.ContactsUI.CNContactPickerViewController" />
          <Parameter Name="contacts" Type="MonoTouch.Contacts.CNContact[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="picker">To be added.</param>
          <param name="contacts">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ContactsUI.CNContactPickerDelegate_Extensions" Member="M:MonoTouch.ContactsUI.CNContactPickerDelegate_Extensions.DidSelectContacts(MonoTouch.ContactsUI.ICNContactPickerDelegate,MonoTouch.ContactsUI.CNContactPickerViewController,MonoTouch.Contacts.CNContact[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ContactsUI.ICNContactViewControllerDelegate" />
      </Targets>
      <Member MemberName="DidComplete" apistyle="unified">
        <MemberSignature Language="C#" Value="public static void DidComplete (this MonoTouch.ContactsUI.ICNContactViewControllerDelegate This, MonoTouch.ContactsUI.CNContactViewController viewController, MonoTouch.Contacts.CNContact contact);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidComplete(class MonoTouch.ContactsUI.ICNContactViewControllerDelegate This, class MonoTouch.ContactsUI.CNContactViewController viewController, class MonoTouch.Contacts.CNContact contact) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ContactsUI.ICNContactViewControllerDelegate" RefType="this" />
          <Parameter Name="viewController" Type="MonoTouch.ContactsUI.CNContactViewController" />
          <Parameter Name="contact" Type="MonoTouch.Contacts.CNContact" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="viewController">To be added.</param>
          <param name="contact">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ContactsUI.CNContactViewControllerDelegate_Extensions" Member="M:MonoTouch.ContactsUI.CNContactViewControllerDelegate_Extensions.DidComplete(MonoTouch.ContactsUI.ICNContactViewControllerDelegate,MonoTouch.ContactsUI.CNContactViewController,MonoTouch.Contacts.CNContact)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ContactsUI.ICNContactViewControllerDelegate" />
      </Targets>
      <Member MemberName="ShouldPerformDefaultAction">
        <MemberSignature Language="C#" Value="public static bool ShouldPerformDefaultAction (this MonoTouch.ContactsUI.ICNContactViewControllerDelegate This, MonoTouch.ContactsUI.CNContactViewController viewController, MonoTouch.Contacts.CNContactProperty property);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldPerformDefaultAction(class MonoTouch.ContactsUI.ICNContactViewControllerDelegate This, class MonoTouch.ContactsUI.CNContactViewController viewController, class MonoTouch.Contacts.CNContactProperty property) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ContactsUI.ICNContactViewControllerDelegate" RefType="this" />
          <Parameter Name="viewController" Type="MonoTouch.ContactsUI.CNContactViewController" />
          <Parameter Name="property" Type="MonoTouch.Contacts.CNContactProperty" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="viewController">To be added.</param>
          <param name="property">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ContactsUI.CNContactViewControllerDelegate_Extensions" Member="M:MonoTouch.ContactsUI.CNContactViewControllerDelegate_Extensions.ShouldPerformDefaultAction(MonoTouch.ContactsUI.ICNContactViewControllerDelegate,MonoTouch.ContactsUI.CNContactViewController,MonoTouch.Contacts.CNContactProperty)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreAnimation.ICAAnimationDelegate" />
      </Targets>
      <Member MemberName="AnimationStarted">
        <MemberSignature Language="C#" Value="public static void AnimationStarted (this MonoTouch.CoreAnimation.ICAAnimationDelegate This, MonoTouch.CoreAnimation.CAAnimation anim);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AnimationStarted(class MonoTouch.CoreAnimation.ICAAnimationDelegate This, class MonoTouch.CoreAnimation.CAAnimation anim) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreAnimation.ICAAnimationDelegate" RefType="this" />
          <Parameter Name="anim" Type="MonoTouch.CoreAnimation.CAAnimation" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="anim">To be added.This parameter can be .</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreAnimation.CAAnimationDelegate_Extensions" Member="M:MonoTouch.CoreAnimation.CAAnimationDelegate_Extensions.AnimationStarted(MonoTouch.CoreAnimation.ICAAnimationDelegate,MonoTouch.CoreAnimation.CAAnimation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreAnimation.ICAAnimationDelegate" />
      </Targets>
      <Member MemberName="AnimationStopped">
        <MemberSignature Language="C#" Value="public static void AnimationStopped (this MonoTouch.CoreAnimation.ICAAnimationDelegate This, MonoTouch.CoreAnimation.CAAnimation anim, bool finished);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AnimationStopped(class MonoTouch.CoreAnimation.ICAAnimationDelegate This, class MonoTouch.CoreAnimation.CAAnimation anim, bool finished) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreAnimation.ICAAnimationDelegate" RefType="this" />
          <Parameter Name="anim" Type="MonoTouch.CoreAnimation.CAAnimation" />
          <Parameter Name="finished" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="anim">To be added.This parameter can be .</param>
          <param name="finished">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreAnimation.CAAnimationDelegate_Extensions" Member="M:MonoTouch.CoreAnimation.CAAnimationDelegate_Extensions.AnimationStopped(MonoTouch.CoreAnimation.ICAAnimationDelegate,MonoTouch.CoreAnimation.CAAnimation,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreAnimation.CAContentsFormat" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetConstant (this MonoTouch.CoreAnimation.CAContentsFormat self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetConstant(valuetype MonoTouch.CoreAnimation.CAContentsFormat self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CoreAnimation.CAContentsFormat" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreAnimation.CAContentsFormatExtensions" Member="M:MonoTouch.CoreAnimation.CAContentsFormatExtensions.GetConstant(MonoTouch.CoreAnimation.CAContentsFormat)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreAnimation.ICALayerDelegate" />
      </Targets>
      <Member MemberName="ActionForLayer">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSObject ActionForLayer (this MonoTouch.CoreAnimation.ICALayerDelegate This, MonoTouch.CoreAnimation.CALayer layer, string eventKey);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSObject ActionForLayer(class MonoTouch.CoreAnimation.ICALayerDelegate This, class MonoTouch.CoreAnimation.CALayer layer, string eventKey) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSObject</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreAnimation.ICALayerDelegate" RefType="this" />
          <Parameter Name="layer" Type="MonoTouch.CoreAnimation.CALayer" />
          <Parameter Name="eventKey" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="layer">To be added.</param>
          <param name="eventKey">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreAnimation.CALayerDelegate_Extensions" Member="M:MonoTouch.CoreAnimation.CALayerDelegate_Extensions.ActionForLayer(MonoTouch.CoreAnimation.ICALayerDelegate,MonoTouch.CoreAnimation.CALayer,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreAnimation.ICALayerDelegate" />
      </Targets>
      <Member MemberName="DisplayLayer">
        <MemberSignature Language="C#" Value="public static void DisplayLayer (this MonoTouch.CoreAnimation.ICALayerDelegate This, MonoTouch.CoreAnimation.CALayer layer);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisplayLayer(class MonoTouch.CoreAnimation.ICALayerDelegate This, class MonoTouch.CoreAnimation.CALayer layer) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreAnimation.ICALayerDelegate" RefType="this" />
          <Parameter Name="layer" Type="MonoTouch.CoreAnimation.CALayer" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="layer">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreAnimation.CALayerDelegate_Extensions" Member="M:MonoTouch.CoreAnimation.CALayerDelegate_Extensions.DisplayLayer(MonoTouch.CoreAnimation.ICALayerDelegate,MonoTouch.CoreAnimation.CALayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreAnimation.ICALayerDelegate" />
      </Targets>
      <Member MemberName="DrawLayer">
        <MemberSignature Language="C#" Value="public static void DrawLayer (this MonoTouch.CoreAnimation.ICALayerDelegate This, MonoTouch.CoreAnimation.CALayer layer, MonoTouch.CoreGraphics.CGContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawLayer(class MonoTouch.CoreAnimation.ICALayerDelegate This, class MonoTouch.CoreAnimation.CALayer layer, class MonoTouch.CoreGraphics.CGContext context) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreAnimation.ICALayerDelegate" RefType="this" />
          <Parameter Name="layer" Type="MonoTouch.CoreAnimation.CALayer" />
          <Parameter Name="context" Type="MonoTouch.CoreGraphics.CGContext" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="layer">To be added.</param>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreAnimation.CALayerDelegate_Extensions" Member="M:MonoTouch.CoreAnimation.CALayerDelegate_Extensions.DrawLayer(MonoTouch.CoreAnimation.ICALayerDelegate,MonoTouch.CoreAnimation.CALayer,MonoTouch.CoreGraphics.CGContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreAnimation.ICALayerDelegate" />
      </Targets>
      <Member MemberName="LayoutSublayersOfLayer">
        <MemberSignature Language="C#" Value="public static void LayoutSublayersOfLayer (this MonoTouch.CoreAnimation.ICALayerDelegate This, MonoTouch.CoreAnimation.CALayer layer);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LayoutSublayersOfLayer(class MonoTouch.CoreAnimation.ICALayerDelegate This, class MonoTouch.CoreAnimation.CALayer layer) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreAnimation.ICALayerDelegate" RefType="this" />
          <Parameter Name="layer" Type="MonoTouch.CoreAnimation.CALayer" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="layer">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreAnimation.CALayerDelegate_Extensions" Member="M:MonoTouch.CoreAnimation.CALayerDelegate_Extensions.LayoutSublayersOfLayer(MonoTouch.CoreAnimation.ICALayerDelegate,MonoTouch.CoreAnimation.CALayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreAnimation.ICALayerDelegate" />
      </Targets>
      <Member MemberName="WillDrawLayer">
        <MemberSignature Language="C#" Value="public static void WillDrawLayer (this MonoTouch.CoreAnimation.ICALayerDelegate This, MonoTouch.CoreAnimation.CALayer layer);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillDrawLayer(class MonoTouch.CoreAnimation.ICALayerDelegate This, class MonoTouch.CoreAnimation.CALayer layer) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreAnimation.ICALayerDelegate" RefType="this" />
          <Parameter Name="layer" Type="MonoTouch.CoreAnimation.CALayer" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="layer">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreAnimation.CALayerDelegate_Extensions" Member="M:MonoTouch.CoreAnimation.CALayerDelegate_Extensions.WillDrawLayer(MonoTouch.CoreAnimation.ICALayerDelegate,MonoTouch.CoreAnimation.CALayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.CBATTError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.CoreBluetooth.CBATTError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.CoreBluetooth.CBATTError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CoreBluetooth.CBATTError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.CoreBluetooth.CBATTError value</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBATTErrorExtensions" Member="M:MonoTouch.CoreBluetooth.CBATTErrorExtensions.GetDomain(MonoTouch.CoreBluetooth.CBATTError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBCentralManagerDelegate" />
      </Targets>
      <Member MemberName="ConnectedPeripheral">
        <MemberSignature Language="C#" Value="public static void ConnectedPeripheral (this MonoTouch.CoreBluetooth.ICBCentralManagerDelegate This, MonoTouch.CoreBluetooth.CBCentralManager central, MonoTouch.CoreBluetooth.CBPeripheral peripheral);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConnectedPeripheral(class MonoTouch.CoreBluetooth.ICBCentralManagerDelegate This, class MonoTouch.CoreBluetooth.CBCentralManager central, class MonoTouch.CoreBluetooth.CBPeripheral peripheral) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBCentralManagerDelegate" RefType="this" />
          <Parameter Name="central" Type="MonoTouch.CoreBluetooth.CBCentralManager" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="central">To be added.</param>
          <param name="peripheral">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBCentralManagerDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBCentralManagerDelegate_Extensions.ConnectedPeripheral(MonoTouch.CoreBluetooth.ICBCentralManagerDelegate,MonoTouch.CoreBluetooth.CBCentralManager,MonoTouch.CoreBluetooth.CBPeripheral)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBCentralManagerDelegate" />
      </Targets>
      <Member MemberName="DisconnectedPeripheral">
        <MemberSignature Language="C#" Value="public static void DisconnectedPeripheral (this MonoTouch.CoreBluetooth.ICBCentralManagerDelegate This, MonoTouch.CoreBluetooth.CBCentralManager central, MonoTouch.CoreBluetooth.CBPeripheral peripheral, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisconnectedPeripheral(class MonoTouch.CoreBluetooth.ICBCentralManagerDelegate This, class MonoTouch.CoreBluetooth.CBCentralManager central, class MonoTouch.CoreBluetooth.CBPeripheral peripheral, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBCentralManagerDelegate" RefType="this" />
          <Parameter Name="central" Type="MonoTouch.CoreBluetooth.CBCentralManager" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="central">To be added.</param>
          <param name="peripheral">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBCentralManagerDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBCentralManagerDelegate_Extensions.DisconnectedPeripheral(MonoTouch.CoreBluetooth.ICBCentralManagerDelegate,MonoTouch.CoreBluetooth.CBCentralManager,MonoTouch.CoreBluetooth.CBPeripheral,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBCentralManagerDelegate" />
      </Targets>
      <Member MemberName="DiscoveredPeripheral">
        <MemberSignature Language="C#" Value="public static void DiscoveredPeripheral (this MonoTouch.CoreBluetooth.ICBCentralManagerDelegate This, MonoTouch.CoreBluetooth.CBCentralManager central, MonoTouch.CoreBluetooth.CBPeripheral peripheral, MonoTouch.Foundation.NSDictionary advertisementData, MonoTouch.Foundation.NSNumber RSSI);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DiscoveredPeripheral(class MonoTouch.CoreBluetooth.ICBCentralManagerDelegate This, class MonoTouch.CoreBluetooth.CBCentralManager central, class MonoTouch.CoreBluetooth.CBPeripheral peripheral, class MonoTouch.Foundation.NSDictionary advertisementData, class MonoTouch.Foundation.NSNumber RSSI) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBCentralManagerDelegate" RefType="this" />
          <Parameter Name="central" Type="MonoTouch.CoreBluetooth.CBCentralManager" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
          <Parameter Name="advertisementData" Type="MonoTouch.Foundation.NSDictionary" />
          <Parameter Name="RSSI" Type="MonoTouch.Foundation.NSNumber" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="central">To be added.</param>
          <param name="peripheral">To be added.</param>
          <param name="advertisementData">To be added.</param>
          <param name="RSSI">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBCentralManagerDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBCentralManagerDelegate_Extensions.DiscoveredPeripheral(MonoTouch.CoreBluetooth.ICBCentralManagerDelegate,MonoTouch.CoreBluetooth.CBCentralManager,MonoTouch.CoreBluetooth.CBPeripheral,MonoTouch.Foundation.NSDictionary,MonoTouch.Foundation.NSNumber)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBCentralManagerDelegate" />
      </Targets>
      <Member MemberName="FailedToConnectPeripheral">
        <MemberSignature Language="C#" Value="public static void FailedToConnectPeripheral (this MonoTouch.CoreBluetooth.ICBCentralManagerDelegate This, MonoTouch.CoreBluetooth.CBCentralManager central, MonoTouch.CoreBluetooth.CBPeripheral peripheral, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FailedToConnectPeripheral(class MonoTouch.CoreBluetooth.ICBCentralManagerDelegate This, class MonoTouch.CoreBluetooth.CBCentralManager central, class MonoTouch.CoreBluetooth.CBPeripheral peripheral, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBCentralManagerDelegate" RefType="this" />
          <Parameter Name="central" Type="MonoTouch.CoreBluetooth.CBCentralManager" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="central">To be added.</param>
          <param name="peripheral">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBCentralManagerDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBCentralManagerDelegate_Extensions.FailedToConnectPeripheral(MonoTouch.CoreBluetooth.ICBCentralManagerDelegate,MonoTouch.CoreBluetooth.CBCentralManager,MonoTouch.CoreBluetooth.CBPeripheral,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBCentralManagerDelegate" />
      </Targets>
      <Member MemberName="RetrievedConnectedPeripherals">
        <MemberSignature Language="C#" Value="public static void RetrievedConnectedPeripherals (this MonoTouch.CoreBluetooth.ICBCentralManagerDelegate This, MonoTouch.CoreBluetooth.CBCentralManager central, MonoTouch.CoreBluetooth.CBPeripheral[] peripherals);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RetrievedConnectedPeripherals(class MonoTouch.CoreBluetooth.ICBCentralManagerDelegate This, class MonoTouch.CoreBluetooth.CBCentralManager central, class MonoTouch.CoreBluetooth.CBPeripheral[] peripherals) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBCentralManagerDelegate" RefType="this" />
          <Parameter Name="central" Type="MonoTouch.CoreBluetooth.CBCentralManager" />
          <Parameter Name="peripherals" Type="MonoTouch.CoreBluetooth.CBPeripheral[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="central">To be added.</param>
          <param name="peripherals">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBCentralManagerDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBCentralManagerDelegate_Extensions.RetrievedConnectedPeripherals(MonoTouch.CoreBluetooth.ICBCentralManagerDelegate,MonoTouch.CoreBluetooth.CBCentralManager,MonoTouch.CoreBluetooth.CBPeripheral[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBCentralManagerDelegate" />
      </Targets>
      <Member MemberName="RetrievedPeripherals">
        <MemberSignature Language="C#" Value="public static void RetrievedPeripherals (this MonoTouch.CoreBluetooth.ICBCentralManagerDelegate This, MonoTouch.CoreBluetooth.CBCentralManager central, MonoTouch.CoreBluetooth.CBPeripheral[] peripherals);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RetrievedPeripherals(class MonoTouch.CoreBluetooth.ICBCentralManagerDelegate This, class MonoTouch.CoreBluetooth.CBCentralManager central, class MonoTouch.CoreBluetooth.CBPeripheral[] peripherals) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBCentralManagerDelegate" RefType="this" />
          <Parameter Name="central" Type="MonoTouch.CoreBluetooth.CBCentralManager" />
          <Parameter Name="peripherals" Type="MonoTouch.CoreBluetooth.CBPeripheral[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="central">To be added.</param>
          <param name="peripherals">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBCentralManagerDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBCentralManagerDelegate_Extensions.RetrievedPeripherals(MonoTouch.CoreBluetooth.ICBCentralManagerDelegate,MonoTouch.CoreBluetooth.CBCentralManager,MonoTouch.CoreBluetooth.CBPeripheral[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBCentralManagerDelegate" />
      </Targets>
      <Member MemberName="WillRestoreState">
        <MemberSignature Language="C#" Value="public static void WillRestoreState (this MonoTouch.CoreBluetooth.ICBCentralManagerDelegate This, MonoTouch.CoreBluetooth.CBCentralManager central, MonoTouch.Foundation.NSDictionary dict);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillRestoreState(class MonoTouch.CoreBluetooth.ICBCentralManagerDelegate This, class MonoTouch.CoreBluetooth.CBCentralManager central, class MonoTouch.Foundation.NSDictionary dict) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBCentralManagerDelegate" RefType="this" />
          <Parameter Name="central" Type="MonoTouch.CoreBluetooth.CBCentralManager" />
          <Parameter Name="dict" Type="MonoTouch.Foundation.NSDictionary" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="central">To be added.</param>
          <param name="dict">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBCentralManagerDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBCentralManagerDelegate_Extensions.WillRestoreState(MonoTouch.CoreBluetooth.ICBCentralManagerDelegate,MonoTouch.CoreBluetooth.CBCentralManager,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.CBError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.CoreBluetooth.CBError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.CoreBluetooth.CBError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CoreBluetooth.CBError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.CoreBluetooth.CBError value</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBErrorExtensions" Member="M:MonoTouch.CoreBluetooth.CBErrorExtensions.GetDomain(MonoTouch.CoreBluetooth.CBError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralDelegate" />
      </Targets>
      <Member MemberName="DiscoveredCharacteristic" apistyle="unified">
        <MemberSignature Language="C#" Value="public static void DiscoveredCharacteristic (this MonoTouch.CoreBluetooth.ICBPeripheralDelegate This, MonoTouch.CoreBluetooth.CBPeripheral peripheral, MonoTouch.CoreBluetooth.CBService service, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DiscoveredCharacteristic(class MonoTouch.CoreBluetooth.ICBPeripheralDelegate This, class MonoTouch.CoreBluetooth.CBPeripheral peripheral, class MonoTouch.CoreBluetooth.CBService service, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
          <Parameter Name="service" Type="MonoTouch.CoreBluetooth.CBService" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="service">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions.DiscoveredCharacteristic(MonoTouch.CoreBluetooth.ICBPeripheralDelegate,MonoTouch.CoreBluetooth.CBPeripheral,MonoTouch.CoreBluetooth.CBService,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralDelegate" />
      </Targets>
      <Member MemberName="DiscoveredDescriptor">
        <MemberSignature Language="C#" Value="public static void DiscoveredDescriptor (this MonoTouch.CoreBluetooth.ICBPeripheralDelegate This, MonoTouch.CoreBluetooth.CBPeripheral peripheral, MonoTouch.CoreBluetooth.CBCharacteristic characteristic, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DiscoveredDescriptor(class MonoTouch.CoreBluetooth.ICBPeripheralDelegate This, class MonoTouch.CoreBluetooth.CBPeripheral peripheral, class MonoTouch.CoreBluetooth.CBCharacteristic characteristic, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
          <Parameter Name="characteristic" Type="MonoTouch.CoreBluetooth.CBCharacteristic" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="characteristic">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions.DiscoveredDescriptor(MonoTouch.CoreBluetooth.ICBPeripheralDelegate,MonoTouch.CoreBluetooth.CBPeripheral,MonoTouch.CoreBluetooth.CBCharacteristic,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralDelegate" />
      </Targets>
      <Member MemberName="DiscoveredIncludedService">
        <MemberSignature Language="C#" Value="public static void DiscoveredIncludedService (this MonoTouch.CoreBluetooth.ICBPeripheralDelegate This, MonoTouch.CoreBluetooth.CBPeripheral peripheral, MonoTouch.CoreBluetooth.CBService service, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DiscoveredIncludedService(class MonoTouch.CoreBluetooth.ICBPeripheralDelegate This, class MonoTouch.CoreBluetooth.CBPeripheral peripheral, class MonoTouch.CoreBluetooth.CBService service, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
          <Parameter Name="service" Type="MonoTouch.CoreBluetooth.CBService" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="service">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions.DiscoveredIncludedService(MonoTouch.CoreBluetooth.ICBPeripheralDelegate,MonoTouch.CoreBluetooth.CBPeripheral,MonoTouch.CoreBluetooth.CBService,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralDelegate" />
      </Targets>
      <Member MemberName="DiscoveredService">
        <MemberSignature Language="C#" Value="public static void DiscoveredService (this MonoTouch.CoreBluetooth.ICBPeripheralDelegate This, MonoTouch.CoreBluetooth.CBPeripheral peripheral, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DiscoveredService(class MonoTouch.CoreBluetooth.ICBPeripheralDelegate This, class MonoTouch.CoreBluetooth.CBPeripheral peripheral, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions.DiscoveredService(MonoTouch.CoreBluetooth.ICBPeripheralDelegate,MonoTouch.CoreBluetooth.CBPeripheral,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralDelegate" />
      </Targets>
      <Member MemberName="InvalidatedService">
        <MemberSignature Language="C#" Value="public static void InvalidatedService (this MonoTouch.CoreBluetooth.ICBPeripheralDelegate This, MonoTouch.CoreBluetooth.CBPeripheral peripheral);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InvalidatedService(class MonoTouch.CoreBluetooth.ICBPeripheralDelegate This, class MonoTouch.CoreBluetooth.CBPeripheral peripheral) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions.InvalidatedService(MonoTouch.CoreBluetooth.ICBPeripheralDelegate,MonoTouch.CoreBluetooth.CBPeripheral)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralDelegate" />
      </Targets>
      <Member MemberName="ModifiedServices">
        <MemberSignature Language="C#" Value="public static void ModifiedServices (this MonoTouch.CoreBluetooth.ICBPeripheralDelegate This, MonoTouch.CoreBluetooth.CBPeripheral peripheral, MonoTouch.CoreBluetooth.CBService[] services);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ModifiedServices(class MonoTouch.CoreBluetooth.ICBPeripheralDelegate This, class MonoTouch.CoreBluetooth.CBPeripheral peripheral, class MonoTouch.CoreBluetooth.CBService[] services) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
          <Parameter Name="services" Type="MonoTouch.CoreBluetooth.CBService[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="services">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions.ModifiedServices(MonoTouch.CoreBluetooth.ICBPeripheralDelegate,MonoTouch.CoreBluetooth.CBPeripheral,MonoTouch.CoreBluetooth.CBService[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralDelegate" />
      </Targets>
      <Member MemberName="RssiRead">
        <MemberSignature Language="C#" Value="public static void RssiRead (this MonoTouch.CoreBluetooth.ICBPeripheralDelegate This, MonoTouch.CoreBluetooth.CBPeripheral peripheral, MonoTouch.Foundation.NSNumber rssi, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RssiRead(class MonoTouch.CoreBluetooth.ICBPeripheralDelegate This, class MonoTouch.CoreBluetooth.CBPeripheral peripheral, class MonoTouch.Foundation.NSNumber rssi, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
          <Parameter Name="rssi" Type="MonoTouch.Foundation.NSNumber" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="rssi">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions.RssiRead(MonoTouch.CoreBluetooth.ICBPeripheralDelegate,MonoTouch.CoreBluetooth.CBPeripheral,MonoTouch.Foundation.NSNumber,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralDelegate" />
      </Targets>
      <Member MemberName="RssiUpdated">
        <MemberSignature Language="C#" Value="public static void RssiUpdated (this MonoTouch.CoreBluetooth.ICBPeripheralDelegate This, MonoTouch.CoreBluetooth.CBPeripheral peripheral, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RssiUpdated(class MonoTouch.CoreBluetooth.ICBPeripheralDelegate This, class MonoTouch.CoreBluetooth.CBPeripheral peripheral, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions.RssiUpdated(MonoTouch.CoreBluetooth.ICBPeripheralDelegate,MonoTouch.CoreBluetooth.CBPeripheral,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralDelegate" />
      </Targets>
      <Member MemberName="UpdatedCharacterteristicValue">
        <MemberSignature Language="C#" Value="public static void UpdatedCharacterteristicValue (this MonoTouch.CoreBluetooth.ICBPeripheralDelegate This, MonoTouch.CoreBluetooth.CBPeripheral peripheral, MonoTouch.CoreBluetooth.CBCharacteristic characteristic, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdatedCharacterteristicValue(class MonoTouch.CoreBluetooth.ICBPeripheralDelegate This, class MonoTouch.CoreBluetooth.CBPeripheral peripheral, class MonoTouch.CoreBluetooth.CBCharacteristic characteristic, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
          <Parameter Name="characteristic" Type="MonoTouch.CoreBluetooth.CBCharacteristic" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="characteristic">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions.UpdatedCharacterteristicValue(MonoTouch.CoreBluetooth.ICBPeripheralDelegate,MonoTouch.CoreBluetooth.CBPeripheral,MonoTouch.CoreBluetooth.CBCharacteristic,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralDelegate" />
      </Targets>
      <Member MemberName="UpdatedName">
        <MemberSignature Language="C#" Value="public static void UpdatedName (this MonoTouch.CoreBluetooth.ICBPeripheralDelegate This, MonoTouch.CoreBluetooth.CBPeripheral peripheral);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdatedName(class MonoTouch.CoreBluetooth.ICBPeripheralDelegate This, class MonoTouch.CoreBluetooth.CBPeripheral peripheral) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions.UpdatedName(MonoTouch.CoreBluetooth.ICBPeripheralDelegate,MonoTouch.CoreBluetooth.CBPeripheral)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralDelegate" />
      </Targets>
      <Member MemberName="UpdatedNotificationState">
        <MemberSignature Language="C#" Value="public static void UpdatedNotificationState (this MonoTouch.CoreBluetooth.ICBPeripheralDelegate This, MonoTouch.CoreBluetooth.CBPeripheral peripheral, MonoTouch.CoreBluetooth.CBCharacteristic characteristic, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdatedNotificationState(class MonoTouch.CoreBluetooth.ICBPeripheralDelegate This, class MonoTouch.CoreBluetooth.CBPeripheral peripheral, class MonoTouch.CoreBluetooth.CBCharacteristic characteristic, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
          <Parameter Name="characteristic" Type="MonoTouch.CoreBluetooth.CBCharacteristic" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="characteristic">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions.UpdatedNotificationState(MonoTouch.CoreBluetooth.ICBPeripheralDelegate,MonoTouch.CoreBluetooth.CBPeripheral,MonoTouch.CoreBluetooth.CBCharacteristic,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralDelegate" />
      </Targets>
      <Member MemberName="UpdatedValue">
        <MemberSignature Language="C#" Value="public static void UpdatedValue (this MonoTouch.CoreBluetooth.ICBPeripheralDelegate This, MonoTouch.CoreBluetooth.CBPeripheral peripheral, MonoTouch.CoreBluetooth.CBDescriptor descriptor, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdatedValue(class MonoTouch.CoreBluetooth.ICBPeripheralDelegate This, class MonoTouch.CoreBluetooth.CBPeripheral peripheral, class MonoTouch.CoreBluetooth.CBDescriptor descriptor, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
          <Parameter Name="descriptor" Type="MonoTouch.CoreBluetooth.CBDescriptor" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="descriptor">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions.UpdatedValue(MonoTouch.CoreBluetooth.ICBPeripheralDelegate,MonoTouch.CoreBluetooth.CBPeripheral,MonoTouch.CoreBluetooth.CBDescriptor,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralDelegate" />
      </Targets>
      <Member MemberName="WroteCharacteristicValue">
        <MemberSignature Language="C#" Value="public static void WroteCharacteristicValue (this MonoTouch.CoreBluetooth.ICBPeripheralDelegate This, MonoTouch.CoreBluetooth.CBPeripheral peripheral, MonoTouch.CoreBluetooth.CBCharacteristic characteristic, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WroteCharacteristicValue(class MonoTouch.CoreBluetooth.ICBPeripheralDelegate This, class MonoTouch.CoreBluetooth.CBPeripheral peripheral, class MonoTouch.CoreBluetooth.CBCharacteristic characteristic, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
          <Parameter Name="characteristic" Type="MonoTouch.CoreBluetooth.CBCharacteristic" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="characteristic">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions.WroteCharacteristicValue(MonoTouch.CoreBluetooth.ICBPeripheralDelegate,MonoTouch.CoreBluetooth.CBPeripheral,MonoTouch.CoreBluetooth.CBCharacteristic,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralDelegate" />
      </Targets>
      <Member MemberName="WroteDescriptorValue">
        <MemberSignature Language="C#" Value="public static void WroteDescriptorValue (this MonoTouch.CoreBluetooth.ICBPeripheralDelegate This, MonoTouch.CoreBluetooth.CBPeripheral peripheral, MonoTouch.CoreBluetooth.CBDescriptor descriptor, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WroteDescriptorValue(class MonoTouch.CoreBluetooth.ICBPeripheralDelegate This, class MonoTouch.CoreBluetooth.CBPeripheral peripheral, class MonoTouch.CoreBluetooth.CBDescriptor descriptor, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheral" />
          <Parameter Name="descriptor" Type="MonoTouch.CoreBluetooth.CBDescriptor" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="descriptor">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralDelegate_Extensions.WroteDescriptorValue(MonoTouch.CoreBluetooth.ICBPeripheralDelegate,MonoTouch.CoreBluetooth.CBPeripheral,MonoTouch.CoreBluetooth.CBDescriptor,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" />
      </Targets>
      <Member MemberName="AdvertisingStarted">
        <MemberSignature Language="C#" Value="public static void AdvertisingStarted (this MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate This, MonoTouch.CoreBluetooth.CBPeripheralManager peripheral, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AdvertisingStarted(class MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate This, class MonoTouch.CoreBluetooth.CBPeripheralManager peripheral, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheralManager" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions.AdvertisingStarted(MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate,MonoTouch.CoreBluetooth.CBPeripheralManager,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" />
      </Targets>
      <Member MemberName="CharacteristicSubscribed">
        <MemberSignature Language="C#" Value="public static void CharacteristicSubscribed (this MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate This, MonoTouch.CoreBluetooth.CBPeripheralManager peripheral, MonoTouch.CoreBluetooth.CBCentral central, MonoTouch.CoreBluetooth.CBCharacteristic characteristic);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CharacteristicSubscribed(class MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate This, class MonoTouch.CoreBluetooth.CBPeripheralManager peripheral, class MonoTouch.CoreBluetooth.CBCentral central, class MonoTouch.CoreBluetooth.CBCharacteristic characteristic) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheralManager" />
          <Parameter Name="central" Type="MonoTouch.CoreBluetooth.CBCentral" />
          <Parameter Name="characteristic" Type="MonoTouch.CoreBluetooth.CBCharacteristic" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="central">To be added.</param>
          <param name="characteristic">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions.CharacteristicSubscribed(MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate,MonoTouch.CoreBluetooth.CBPeripheralManager,MonoTouch.CoreBluetooth.CBCentral,MonoTouch.CoreBluetooth.CBCharacteristic)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" />
      </Targets>
      <Member MemberName="CharacteristicUnsubscribed">
        <MemberSignature Language="C#" Value="public static void CharacteristicUnsubscribed (this MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate This, MonoTouch.CoreBluetooth.CBPeripheralManager peripheral, MonoTouch.CoreBluetooth.CBCentral central, MonoTouch.CoreBluetooth.CBCharacteristic characteristic);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CharacteristicUnsubscribed(class MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate This, class MonoTouch.CoreBluetooth.CBPeripheralManager peripheral, class MonoTouch.CoreBluetooth.CBCentral central, class MonoTouch.CoreBluetooth.CBCharacteristic characteristic) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheralManager" />
          <Parameter Name="central" Type="MonoTouch.CoreBluetooth.CBCentral" />
          <Parameter Name="characteristic" Type="MonoTouch.CoreBluetooth.CBCharacteristic" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="central">To be added.</param>
          <param name="characteristic">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions.CharacteristicUnsubscribed(MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate,MonoTouch.CoreBluetooth.CBPeripheralManager,MonoTouch.CoreBluetooth.CBCentral,MonoTouch.CoreBluetooth.CBCharacteristic)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" />
      </Targets>
      <Member MemberName="ReadRequestReceived">
        <MemberSignature Language="C#" Value="public static void ReadRequestReceived (this MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate This, MonoTouch.CoreBluetooth.CBPeripheralManager peripheral, MonoTouch.CoreBluetooth.CBATTRequest request);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReadRequestReceived(class MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate This, class MonoTouch.CoreBluetooth.CBPeripheralManager peripheral, class MonoTouch.CoreBluetooth.CBATTRequest request) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheralManager" />
          <Parameter Name="request" Type="MonoTouch.CoreBluetooth.CBATTRequest" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="request">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions.ReadRequestReceived(MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate,MonoTouch.CoreBluetooth.CBPeripheralManager,MonoTouch.CoreBluetooth.CBATTRequest)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" />
      </Targets>
      <Member MemberName="ReadyToUpdateSubscribers">
        <MemberSignature Language="C#" Value="public static void ReadyToUpdateSubscribers (this MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate This, MonoTouch.CoreBluetooth.CBPeripheralManager peripheral);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReadyToUpdateSubscribers(class MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate This, class MonoTouch.CoreBluetooth.CBPeripheralManager peripheral) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheralManager" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions.ReadyToUpdateSubscribers(MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate,MonoTouch.CoreBluetooth.CBPeripheralManager)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" />
      </Targets>
      <Member MemberName="ServiceAdded">
        <MemberSignature Language="C#" Value="public static void ServiceAdded (this MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate This, MonoTouch.CoreBluetooth.CBPeripheralManager peripheral, MonoTouch.CoreBluetooth.CBService service, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ServiceAdded(class MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate This, class MonoTouch.CoreBluetooth.CBPeripheralManager peripheral, class MonoTouch.CoreBluetooth.CBService service, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheralManager" />
          <Parameter Name="service" Type="MonoTouch.CoreBluetooth.CBService" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="service">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions.ServiceAdded(MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate,MonoTouch.CoreBluetooth.CBPeripheralManager,MonoTouch.CoreBluetooth.CBService,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" />
      </Targets>
      <Member MemberName="WillRestoreState">
        <MemberSignature Language="C#" Value="public static void WillRestoreState (this MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate This, MonoTouch.CoreBluetooth.CBPeripheralManager peripheral, MonoTouch.Foundation.NSDictionary dict);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillRestoreState(class MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate This, class MonoTouch.CoreBluetooth.CBPeripheralManager peripheral, class MonoTouch.Foundation.NSDictionary dict) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheralManager" />
          <Parameter Name="dict" Type="MonoTouch.Foundation.NSDictionary" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="dict">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions.WillRestoreState(MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate,MonoTouch.CoreBluetooth.CBPeripheralManager,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" />
      </Targets>
      <Member MemberName="WriteRequestsReceived">
        <MemberSignature Language="C#" Value="public static void WriteRequestsReceived (this MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate This, MonoTouch.CoreBluetooth.CBPeripheralManager peripheral, MonoTouch.CoreBluetooth.CBATTRequest[] requests);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteRequestsReceived(class MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate This, class MonoTouch.CoreBluetooth.CBPeripheralManager peripheral, class MonoTouch.CoreBluetooth.CBATTRequest[] requests) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate" RefType="this" />
          <Parameter Name="peripheral" Type="MonoTouch.CoreBluetooth.CBPeripheralManager" />
          <Parameter Name="requests" Type="MonoTouch.CoreBluetooth.CBATTRequest[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="peripheral">To be added.</param>
          <param name="requests">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions" Member="M:MonoTouch.CoreBluetooth.CBPeripheralManagerDelegate_Extensions.WriteRequestsReceived(MonoTouch.CoreBluetooth.ICBPeripheralManagerDelegate,MonoTouch.CoreBluetooth.CBPeripheralManager,MonoTouch.CoreBluetooth.CBATTRequest[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreData.INSFetchedResultsControllerDelegate" />
      </Targets>
      <Member MemberName="DidChangeContent">
        <MemberSignature Language="C#" Value="public static void DidChangeContent (this MonoTouch.CoreData.INSFetchedResultsControllerDelegate This, MonoTouch.CoreData.NSFetchedResultsController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidChangeContent(class MonoTouch.CoreData.INSFetchedResultsControllerDelegate This, class MonoTouch.CoreData.NSFetchedResultsController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreData.INSFetchedResultsControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.CoreData.NSFetchedResultsController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreData.NSFetchedResultsControllerDelegate_Extensions" Member="M:MonoTouch.CoreData.NSFetchedResultsControllerDelegate_Extensions.DidChangeContent(MonoTouch.CoreData.INSFetchedResultsControllerDelegate,MonoTouch.CoreData.NSFetchedResultsController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreData.INSFetchedResultsControllerDelegate" />
      </Targets>
      <Member MemberName="DidChangeObject">
        <MemberSignature Language="C#" Value="public static void DidChangeObject (this MonoTouch.CoreData.INSFetchedResultsControllerDelegate This, MonoTouch.CoreData.NSFetchedResultsController controller, MonoTouch.Foundation.NSObject anObject, MonoTouch.Foundation.NSIndexPath indexPath, MonoTouch.CoreData.NSFetchedResultsChangeType type, MonoTouch.Foundation.NSIndexPath newIndexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidChangeObject(class MonoTouch.CoreData.INSFetchedResultsControllerDelegate This, class MonoTouch.CoreData.NSFetchedResultsController controller, class MonoTouch.Foundation.NSObject anObject, class MonoTouch.Foundation.NSIndexPath indexPath, valuetype MonoTouch.CoreData.NSFetchedResultsChangeType type, class MonoTouch.Foundation.NSIndexPath newIndexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreData.INSFetchedResultsControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.CoreData.NSFetchedResultsController" />
          <Parameter Name="anObject" Type="MonoTouch.Foundation.NSObject" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
          <Parameter Name="type" Type="MonoTouch.CoreData.NSFetchedResultsChangeType" />
          <Parameter Name="newIndexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="anObject">To be added.</param>
          <param name="indexPath">To be added.</param>
          <param name="type">To be added.</param>
          <param name="newIndexPath">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreData.NSFetchedResultsControllerDelegate_Extensions" Member="M:MonoTouch.CoreData.NSFetchedResultsControllerDelegate_Extensions.DidChangeObject(MonoTouch.CoreData.INSFetchedResultsControllerDelegate,MonoTouch.CoreData.NSFetchedResultsController,MonoTouch.Foundation.NSObject,MonoTouch.Foundation.NSIndexPath,MonoTouch.CoreData.NSFetchedResultsChangeType,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreData.INSFetchedResultsControllerDelegate" />
      </Targets>
      <Member MemberName="DidChangeSection">
        <MemberSignature Language="C#" Value="public static void DidChangeSection (this MonoTouch.CoreData.INSFetchedResultsControllerDelegate This, MonoTouch.CoreData.NSFetchedResultsController controller, MonoTouch.CoreData.INSFetchedResultsSectionInfo sectionInfo, uint sectionIndex, MonoTouch.CoreData.NSFetchedResultsChangeType type);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidChangeSection(class MonoTouch.CoreData.INSFetchedResultsControllerDelegate This, class MonoTouch.CoreData.NSFetchedResultsController controller, class MonoTouch.CoreData.INSFetchedResultsSectionInfo sectionInfo, unsigned int32 sectionIndex, valuetype MonoTouch.CoreData.NSFetchedResultsChangeType type) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void DidChangeSection (this MonoTouch.CoreData.INSFetchedResultsControllerDelegate This, MonoTouch.CoreData.NSFetchedResultsController controller, MonoTouch.CoreData.INSFetchedResultsSectionInfo sectionInfo, nuint sectionIndex, MonoTouch.CoreData.NSFetchedResultsChangeType type);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidChangeSection(class MonoTouch.CoreData.INSFetchedResultsControllerDelegate This, class MonoTouch.CoreData.NSFetchedResultsController controller, class MonoTouch.CoreData.INSFetchedResultsSectionInfo sectionInfo, valuetype System.nuint sectionIndex, valuetype MonoTouch.CoreData.NSFetchedResultsChangeType type) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreData.INSFetchedResultsControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.CoreData.NSFetchedResultsController" />
          <Parameter Name="sectionInfo" Type="MonoTouch.CoreData.INSFetchedResultsSectionInfo" />
          <Parameter Name="sectionIndex" Type="System.UInt32" apistyle="classic" />
          <Parameter Name="type" Type="MonoTouch.CoreData.NSFetchedResultsChangeType" />
          <Parameter Name="sectionIndex" Type="System.nuint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="sectionInfo">To be added.</param>
          <param name="sectionIndex">To be added.</param>
          <param name="type">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreData.NSFetchedResultsControllerDelegate_Extensions" Member="M:MonoTouch.CoreData.NSFetchedResultsControllerDelegate_Extensions.DidChangeSection(MonoTouch.CoreData.INSFetchedResultsControllerDelegate,MonoTouch.CoreData.NSFetchedResultsController,MonoTouch.CoreData.INSFetchedResultsSectionInfo,System.nuint,MonoTouch.CoreData.NSFetchedResultsChangeType)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreData.INSFetchedResultsControllerDelegate" />
      </Targets>
      <Member MemberName="SectionFor">
        <MemberSignature Language="C#" Value="public static string SectionFor (this MonoTouch.CoreData.INSFetchedResultsControllerDelegate This, MonoTouch.CoreData.NSFetchedResultsController controller, string sectionName);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SectionFor(class MonoTouch.CoreData.INSFetchedResultsControllerDelegate This, class MonoTouch.CoreData.NSFetchedResultsController controller, string sectionName) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreData.INSFetchedResultsControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.CoreData.NSFetchedResultsController" />
          <Parameter Name="sectionName" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="sectionName">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreData.NSFetchedResultsControllerDelegate_Extensions" Member="M:MonoTouch.CoreData.NSFetchedResultsControllerDelegate_Extensions.SectionFor(MonoTouch.CoreData.INSFetchedResultsControllerDelegate,MonoTouch.CoreData.NSFetchedResultsController,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreData.INSFetchedResultsControllerDelegate" />
      </Targets>
      <Member MemberName="WillChangeContent">
        <MemberSignature Language="C#" Value="public static void WillChangeContent (this MonoTouch.CoreData.INSFetchedResultsControllerDelegate This, MonoTouch.CoreData.NSFetchedResultsController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillChangeContent(class MonoTouch.CoreData.INSFetchedResultsControllerDelegate This, class MonoTouch.CoreData.NSFetchedResultsController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreData.INSFetchedResultsControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.CoreData.NSFetchedResultsController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreData.NSFetchedResultsControllerDelegate_Extensions" Member="M:MonoTouch.CoreData.NSFetchedResultsControllerDelegate_Extensions.WillChangeContent(MonoTouch.CoreData.INSFetchedResultsControllerDelegate,MonoTouch.CoreData.NSFetchedResultsController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreGraphics.CGRect" />
      </Targets>
      <Member MemberName="Divide">
        <MemberSignature Language="C#" Value="public static void Divide (this System.Drawing.RectangleF self, float amount, MonoTouch.CoreGraphics.CGRectEdge edge, out System.Drawing.RectangleF slice, out System.Drawing.RectangleF remainder);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Divide(valuetype System.Drawing.RectangleF self, float32 amount, valuetype MonoTouch.CoreGraphics.CGRectEdge edge, valuetype System.Drawing.RectangleF slice, valuetype System.Drawing.RectangleF remainder) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void Divide (this MonoTouch.CoreGraphics.CGRect self, nfloat amount, MonoTouch.CoreGraphics.CGRectEdge edge, out MonoTouch.CoreGraphics.CGRect slice, out MonoTouch.CoreGraphics.CGRect remainder);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Divide(valuetype MonoTouch.CoreGraphics.CGRect self, valuetype System.nfloat amount, valuetype MonoTouch.CoreGraphics.CGRectEdge edge, valuetype MonoTouch.CoreGraphics.CGRect slice, valuetype MonoTouch.CoreGraphics.CGRect remainder) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="System.Drawing.RectangleF" RefType="this" apistyle="classic" />
          <Parameter Name="amount" Type="System.Single" apistyle="classic" />
          <Parameter Name="edge" Type="MonoTouch.CoreGraphics.CGRectEdge" />
          <Parameter Name="slice" Type="System.Drawing.RectangleF&amp;" RefType="out" apistyle="classic" />
          <Parameter Name="remainder" Type="System.Drawing.RectangleF&amp;" RefType="out" apistyle="classic" />
          <Parameter Name="self" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
          <Parameter Name="amount" Type="System.nfloat" apistyle="unified" />
          <Parameter Name="slice" Type="MonoTouch.CoreGraphics.CGRect&amp;" RefType="out" apistyle="unified" />
          <Parameter Name="remainder" Type="MonoTouch.CoreGraphics.CGRect&amp;" RefType="out" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <param name="amount">To be added.</param>
          <param name="edge">To be added.</param>
          <param name="slice">To be added.</param>
          <param name="remainder">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreGraphics.RectangleFExtensions" Member="M:MonoTouch.CoreGraphics.RectangleFExtensions.Divide(MonoTouch.CoreGraphics.CGRect,System.nfloat,MonoTouch.CoreGraphics.CGRectEdge,MonoTouch.CoreGraphics.CGRect@,MonoTouch.CoreGraphics.CGRect@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreGraphics.CGRect" />
      </Targets>
      <Member MemberName="GetMaxX">
        <MemberSignature Language="C#" Value="public static float GetMaxX (this System.Drawing.RectangleF self);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 GetMaxX(valuetype System.Drawing.RectangleF self) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nfloat GetMaxX (this MonoTouch.CoreGraphics.CGRect self);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat GetMaxX(valuetype MonoTouch.CoreGraphics.CGRect self) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Single</ReturnType>
          <ReturnType apistyle="unified">System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="System.Drawing.RectangleF" RefType="this" apistyle="classic" />
          <Parameter Name="self" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreGraphics.RectangleFExtensions" Member="M:MonoTouch.CoreGraphics.RectangleFExtensions.GetMaxX(MonoTouch.CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreGraphics.CGRect" />
      </Targets>
      <Member MemberName="GetMaxY">
        <MemberSignature Language="C#" Value="public static float GetMaxY (this System.Drawing.RectangleF self);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 GetMaxY(valuetype System.Drawing.RectangleF self) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nfloat GetMaxY (this MonoTouch.CoreGraphics.CGRect self);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat GetMaxY(valuetype MonoTouch.CoreGraphics.CGRect self) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Single</ReturnType>
          <ReturnType apistyle="unified">System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="System.Drawing.RectangleF" RefType="this" apistyle="classic" />
          <Parameter Name="self" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreGraphics.RectangleFExtensions" Member="M:MonoTouch.CoreGraphics.RectangleFExtensions.GetMaxY(MonoTouch.CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreGraphics.CGRect" />
      </Targets>
      <Member MemberName="GetMidX">
        <MemberSignature Language="C#" Value="public static float GetMidX (this System.Drawing.RectangleF self);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 GetMidX(valuetype System.Drawing.RectangleF self) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nfloat GetMidX (this MonoTouch.CoreGraphics.CGRect self);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat GetMidX(valuetype MonoTouch.CoreGraphics.CGRect self) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Single</ReturnType>
          <ReturnType apistyle="unified">System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="System.Drawing.RectangleF" RefType="this" apistyle="classic" />
          <Parameter Name="self" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreGraphics.RectangleFExtensions" Member="M:MonoTouch.CoreGraphics.RectangleFExtensions.GetMidX(MonoTouch.CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreGraphics.CGRect" />
      </Targets>
      <Member MemberName="GetMidY">
        <MemberSignature Language="C#" Value="public static float GetMidY (this System.Drawing.RectangleF self);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 GetMidY(valuetype System.Drawing.RectangleF self) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nfloat GetMidY (this MonoTouch.CoreGraphics.CGRect self);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat GetMidY(valuetype MonoTouch.CoreGraphics.CGRect self) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Single</ReturnType>
          <ReturnType apistyle="unified">System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="System.Drawing.RectangleF" RefType="this" apistyle="classic" />
          <Parameter Name="self" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreGraphics.RectangleFExtensions" Member="M:MonoTouch.CoreGraphics.RectangleFExtensions.GetMidY(MonoTouch.CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreGraphics.CGRect" />
      </Targets>
      <Member MemberName="GetMinX">
        <MemberSignature Language="C#" Value="public static float GetMinX (this System.Drawing.RectangleF self);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 GetMinX(valuetype System.Drawing.RectangleF self) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nfloat GetMinX (this MonoTouch.CoreGraphics.CGRect self);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat GetMinX(valuetype MonoTouch.CoreGraphics.CGRect self) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Single</ReturnType>
          <ReturnType apistyle="unified">System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="System.Drawing.RectangleF" RefType="this" apistyle="classic" />
          <Parameter Name="self" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreGraphics.RectangleFExtensions" Member="M:MonoTouch.CoreGraphics.RectangleFExtensions.GetMinX(MonoTouch.CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreGraphics.CGRect" />
      </Targets>
      <Member MemberName="GetMinY">
        <MemberSignature Language="C#" Value="public static float GetMinY (this System.Drawing.RectangleF self);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 GetMinY(valuetype System.Drawing.RectangleF self) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nfloat GetMinY (this MonoTouch.CoreGraphics.CGRect self);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat GetMinY(valuetype MonoTouch.CoreGraphics.CGRect self) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Single</ReturnType>
          <ReturnType apistyle="unified">System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="System.Drawing.RectangleF" RefType="this" apistyle="classic" />
          <Parameter Name="self" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreGraphics.RectangleFExtensions" Member="M:MonoTouch.CoreGraphics.RectangleFExtensions.GetMinY(MonoTouch.CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreGraphics.CGRect" />
      </Targets>
      <Member MemberName="Inset">
        <MemberSignature Language="C#" Value="public static System.Drawing.RectangleF Inset (this System.Drawing.RectangleF self, float dx, float dy);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.RectangleF Inset(valuetype System.Drawing.RectangleF self, float32 dx, float32 dy) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGRect Inset (this MonoTouch.CoreGraphics.CGRect self, nfloat dx, nfloat dy);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGRect Inset(valuetype MonoTouch.CoreGraphics.CGRect self, valuetype System.nfloat dx, valuetype System.nfloat dy) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.RectangleF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="System.Drawing.RectangleF" RefType="this" apistyle="classic" />
          <Parameter Name="dx" Type="System.Single" apistyle="classic" />
          <Parameter Name="dy" Type="System.Single" apistyle="classic" />
          <Parameter Name="self" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
          <Parameter Name="dx" Type="System.nfloat" apistyle="unified" />
          <Parameter Name="dy" Type="System.nfloat" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <param name="dx">To be added.</param>
          <param name="dy">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreGraphics.RectangleFExtensions" Member="M:MonoTouch.CoreGraphics.RectangleFExtensions.Inset(MonoTouch.CoreGraphics.CGRect,System.nfloat,System.nfloat)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreGraphics.CGRect" />
      </Targets>
      <Member MemberName="Integral">
        <MemberSignature Language="C#" Value="public static System.Drawing.RectangleF Integral (this System.Drawing.RectangleF self);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.RectangleF Integral(valuetype System.Drawing.RectangleF self) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGRect Integral (this MonoTouch.CoreGraphics.CGRect self);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGRect Integral(valuetype MonoTouch.CoreGraphics.CGRect self) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.RectangleF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="System.Drawing.RectangleF" RefType="this" apistyle="classic" />
          <Parameter Name="self" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreGraphics.RectangleFExtensions" Member="M:MonoTouch.CoreGraphics.RectangleFExtensions.Integral(MonoTouch.CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreGraphics.CGRect" />
      </Targets>
      <Member MemberName="IsInfinite">
        <MemberSignature Language="C#" Value="public static bool IsInfinite (this System.Drawing.RectangleF self);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsInfinite(valuetype System.Drawing.RectangleF self) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static bool IsInfinite (this MonoTouch.CoreGraphics.CGRect self);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsInfinite(valuetype MonoTouch.CoreGraphics.CGRect self) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="System.Drawing.RectangleF" RefType="this" apistyle="classic" />
          <Parameter Name="self" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreGraphics.RectangleFExtensions" Member="M:MonoTouch.CoreGraphics.RectangleFExtensions.IsInfinite(MonoTouch.CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreGraphics.CGRect" />
      </Targets>
      <Member MemberName="IsNull">
        <MemberSignature Language="C#" Value="public static bool IsNull (this System.Drawing.RectangleF self);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNull(valuetype System.Drawing.RectangleF self) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static bool IsNull (this MonoTouch.CoreGraphics.CGRect self);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNull(valuetype MonoTouch.CoreGraphics.CGRect self) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="System.Drawing.RectangleF" RefType="this" apistyle="classic" />
          <Parameter Name="self" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreGraphics.RectangleFExtensions" Member="M:MonoTouch.CoreGraphics.RectangleFExtensions.IsNull(MonoTouch.CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreGraphics.CGRect" />
      </Targets>
      <Member MemberName="Standardize">
        <MemberSignature Language="C#" Value="public static System.Drawing.RectangleF Standardize (this System.Drawing.RectangleF self);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.RectangleF Standardize(valuetype System.Drawing.RectangleF self) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGRect Standardize (this MonoTouch.CoreGraphics.CGRect self);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGRect Standardize(valuetype MonoTouch.CoreGraphics.CGRect self) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.RectangleF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="System.Drawing.RectangleF" RefType="this" apistyle="classic" />
          <Parameter Name="self" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreGraphics.RectangleFExtensions" Member="M:MonoTouch.CoreGraphics.RectangleFExtensions.Standardize(MonoTouch.CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreGraphics.CGRect" />
      </Targets>
      <Member MemberName="UnionWith">
        <MemberSignature Language="C#" Value="public static System.Drawing.RectangleF UnionWith (this System.Drawing.RectangleF self, System.Drawing.RectangleF other);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.RectangleF UnionWith(valuetype System.Drawing.RectangleF self, valuetype System.Drawing.RectangleF other) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGRect UnionWith (this MonoTouch.CoreGraphics.CGRect self, MonoTouch.CoreGraphics.CGRect other);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGRect UnionWith(valuetype MonoTouch.CoreGraphics.CGRect self, valuetype MonoTouch.CoreGraphics.CGRect other) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.RectangleF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="System.Drawing.RectangleF" RefType="this" apistyle="classic" />
          <Parameter Name="other" Type="System.Drawing.RectangleF" apistyle="classic" />
          <Parameter Name="self" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
          <Parameter Name="other" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <param name="other">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreGraphics.RectangleFExtensions" Member="M:MonoTouch.CoreGraphics.RectangleFExtensions.UnionWith(MonoTouch.CoreGraphics.CGRect,MonoTouch.CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreImage.CIContext" />
      </Targets>
      <Member MemberName="GetJpegRepresentation">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSData GetJpegRepresentation (this MonoTouch.CoreImage.CIContext This, MonoTouch.CoreImage.CIImage image, MonoTouch.CoreGraphics.CGColorSpace colorSpace, MonoTouch.Foundation.NSDictionary options);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSData GetJpegRepresentation(class MonoTouch.CoreImage.CIContext This, class MonoTouch.CoreImage.CIImage image, class MonoTouch.CoreGraphics.CGColorSpace colorSpace, class MonoTouch.Foundation.NSDictionary options) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSData</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreImage.CIContext" RefType="this" />
          <Parameter Name="image" Type="MonoTouch.CoreImage.CIImage" />
          <Parameter Name="colorSpace" Type="MonoTouch.CoreGraphics.CGColorSpace" />
          <Parameter Name="options" Type="MonoTouch.Foundation.NSDictionary" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="image">To be added.</param>
          <param name="colorSpace">To be added.</param>
          <param name="options">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreImage.CIContext_ImageRepresentation" Member="M:MonoTouch.CoreImage.CIContext_ImageRepresentation.GetJpegRepresentation(MonoTouch.CoreImage.CIContext,MonoTouch.CoreImage.CIImage,MonoTouch.CoreGraphics.CGColorSpace,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreImage.CIContext" />
      </Targets>
      <Member MemberName="GetTiffRepresentation">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSData GetTiffRepresentation (this MonoTouch.CoreImage.CIContext This, MonoTouch.CoreImage.CIImage image, MonoTouch.CoreImage.CIFormat format, MonoTouch.CoreGraphics.CGColorSpace colorSpace, MonoTouch.Foundation.NSDictionary options);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSData GetTiffRepresentation(class MonoTouch.CoreImage.CIContext This, class MonoTouch.CoreImage.CIImage image, valuetype MonoTouch.CoreImage.CIFormat format, class MonoTouch.CoreGraphics.CGColorSpace colorSpace, class MonoTouch.Foundation.NSDictionary options) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSData</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreImage.CIContext" RefType="this" />
          <Parameter Name="image" Type="MonoTouch.CoreImage.CIImage" />
          <Parameter Name="format" Type="MonoTouch.CoreImage.CIFormat" />
          <Parameter Name="colorSpace" Type="MonoTouch.CoreGraphics.CGColorSpace" />
          <Parameter Name="options" Type="MonoTouch.Foundation.NSDictionary" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="image">To be added.</param>
          <param name="format">To be added.</param>
          <param name="colorSpace">To be added.</param>
          <param name="options">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreImage.CIContext_ImageRepresentation" Member="M:MonoTouch.CoreImage.CIContext_ImageRepresentation.GetTiffRepresentation(MonoTouch.CoreImage.CIContext,MonoTouch.CoreImage.CIImage,MonoTouch.CoreImage.CIFormat,MonoTouch.CoreGraphics.CGColorSpace,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreImage.CIContext" />
      </Targets>
      <Member MemberName="WriteJpegRepresentation">
        <MemberSignature Language="C#" Value="public static bool WriteJpegRepresentation (this MonoTouch.CoreImage.CIContext This, MonoTouch.CoreImage.CIImage image, MonoTouch.Foundation.NSUrl url, MonoTouch.CoreGraphics.CGColorSpace colorSpace, MonoTouch.Foundation.NSDictionary options, out MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WriteJpegRepresentation(class MonoTouch.CoreImage.CIContext This, class MonoTouch.CoreImage.CIImage image, class MonoTouch.Foundation.NSUrl url, class MonoTouch.CoreGraphics.CGColorSpace colorSpace, class MonoTouch.Foundation.NSDictionary options, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreImage.CIContext" RefType="this" />
          <Parameter Name="image" Type="MonoTouch.CoreImage.CIImage" />
          <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="colorSpace" Type="MonoTouch.CoreGraphics.CGColorSpace" />
          <Parameter Name="options" Type="MonoTouch.Foundation.NSDictionary" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="image">To be added.</param>
          <param name="url">To be added.</param>
          <param name="colorSpace">To be added.</param>
          <param name="options">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreImage.CIContext_ImageRepresentation" Member="M:MonoTouch.CoreImage.CIContext_ImageRepresentation.WriteJpegRepresentation(MonoTouch.CoreImage.CIContext,MonoTouch.CoreImage.CIImage,MonoTouch.Foundation.NSUrl,MonoTouch.CoreGraphics.CGColorSpace,MonoTouch.Foundation.NSDictionary,MonoTouch.Foundation.NSError@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreImage.CIContext" />
      </Targets>
      <Member MemberName="WriteTiffRepresentation">
        <MemberSignature Language="C#" Value="public static bool WriteTiffRepresentation (this MonoTouch.CoreImage.CIContext This, MonoTouch.CoreImage.CIImage image, MonoTouch.Foundation.NSUrl url, MonoTouch.CoreImage.CIFormat format, MonoTouch.CoreGraphics.CGColorSpace colorSpace, MonoTouch.Foundation.NSDictionary options, out MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WriteTiffRepresentation(class MonoTouch.CoreImage.CIContext This, class MonoTouch.CoreImage.CIImage image, class MonoTouch.Foundation.NSUrl url, valuetype MonoTouch.CoreImage.CIFormat format, class MonoTouch.CoreGraphics.CGColorSpace colorSpace, class MonoTouch.Foundation.NSDictionary options, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreImage.CIContext" RefType="this" />
          <Parameter Name="image" Type="MonoTouch.CoreImage.CIImage" />
          <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="format" Type="MonoTouch.CoreImage.CIFormat" />
          <Parameter Name="colorSpace" Type="MonoTouch.CoreGraphics.CGColorSpace" />
          <Parameter Name="options" Type="MonoTouch.Foundation.NSDictionary" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="image">To be added.</param>
          <param name="url">To be added.</param>
          <param name="format">To be added.</param>
          <param name="colorSpace">To be added.</param>
          <param name="options">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreImage.CIContext_ImageRepresentation" Member="M:MonoTouch.CoreImage.CIContext_ImageRepresentation.WriteTiffRepresentation(MonoTouch.CoreImage.CIContext,MonoTouch.CoreImage.CIImage,MonoTouch.Foundation.NSUrl,MonoTouch.CoreImage.CIFormat,MonoTouch.CoreGraphics.CGColorSpace,MonoTouch.Foundation.NSDictionary,MonoTouch.Foundation.NSError@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreLocation.ICLLocationManagerDelegate" />
      </Targets>
      <Member MemberName="AuthorizationChanged">
        <MemberSignature Language="C#" Value="public static void AuthorizationChanged (this MonoTouch.CoreLocation.ICLLocationManagerDelegate This, MonoTouch.CoreLocation.CLLocationManager manager, MonoTouch.CoreLocation.CLAuthorizationStatus status);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AuthorizationChanged(class MonoTouch.CoreLocation.ICLLocationManagerDelegate This, class MonoTouch.CoreLocation.CLLocationManager manager, valuetype MonoTouch.CoreLocation.CLAuthorizationStatus status) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreLocation.ICLLocationManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
          <Parameter Name="status" Type="MonoTouch.CoreLocation.CLAuthorizationStatus" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">The  for which this is the delegate object.</param>
          <param name="status">The new authorization status of the application.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions" Member="M:MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions.AuthorizationChanged(MonoTouch.CoreLocation.ICLLocationManagerDelegate,MonoTouch.CoreLocation.CLLocationManager,MonoTouch.CoreLocation.CLAuthorizationStatus)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreLocation.ICLLocationManagerDelegate" />
      </Targets>
      <Member MemberName="DeferredUpdatesFinished">
        <MemberSignature Language="C#" Value="public static void DeferredUpdatesFinished (this MonoTouch.CoreLocation.ICLLocationManagerDelegate This, MonoTouch.CoreLocation.CLLocationManager manager, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeferredUpdatesFinished(class MonoTouch.CoreLocation.ICLLocationManagerDelegate This, class MonoTouch.CoreLocation.CLLocationManager manager, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreLocation.ICLLocationManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">The  for which this is the delegate object.</param>
          <param name="error">The reason deferred updates are no longer available.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions" Member="M:MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions.DeferredUpdatesFinished(MonoTouch.CoreLocation.ICLLocationManagerDelegate,MonoTouch.CoreLocation.CLLocationManager,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreLocation.ICLLocationManagerDelegate" />
      </Targets>
      <Member MemberName="DidDetermineState">
        <MemberSignature Language="C#" Value="public static void DidDetermineState (this MonoTouch.CoreLocation.ICLLocationManagerDelegate This, MonoTouch.CoreLocation.CLLocationManager manager, MonoTouch.CoreLocation.CLRegionState state, MonoTouch.CoreLocation.CLRegion region);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDetermineState(class MonoTouch.CoreLocation.ICLLocationManagerDelegate This, class MonoTouch.CoreLocation.CLLocationManager manager, valuetype MonoTouch.CoreLocation.CLRegionState state, class MonoTouch.CoreLocation.CLRegion region) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreLocation.ICLLocationManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
          <Parameter Name="state" Type="MonoTouch.CoreLocation.CLRegionState" />
          <Parameter Name="region" Type="MonoTouch.CoreLocation.CLRegion" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">The  for which this is the delegate object.</param>
          <param name="state">The new state of the region.</param>
          <param name="region">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions" Member="M:MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions.DidDetermineState(MonoTouch.CoreLocation.ICLLocationManagerDelegate,MonoTouch.CoreLocation.CLLocationManager,MonoTouch.CoreLocation.CLRegionState,MonoTouch.CoreLocation.CLRegion)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreLocation.ICLLocationManagerDelegate" />
      </Targets>
      <Member MemberName="DidRangeBeacons">
        <MemberSignature Language="C#" Value="public static void DidRangeBeacons (this MonoTouch.CoreLocation.ICLLocationManagerDelegate This, MonoTouch.CoreLocation.CLLocationManager manager, MonoTouch.CoreLocation.CLBeacon[] beacons, MonoTouch.CoreLocation.CLBeaconRegion region);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRangeBeacons(class MonoTouch.CoreLocation.ICLLocationManagerDelegate This, class MonoTouch.CoreLocation.CLLocationManager manager, class MonoTouch.CoreLocation.CLBeacon[] beacons, class MonoTouch.CoreLocation.CLBeaconRegion region) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreLocation.ICLLocationManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
          <Parameter Name="beacons" Type="MonoTouch.CoreLocation.CLBeacon[]" />
          <Parameter Name="region" Type="MonoTouch.CoreLocation.CLBeaconRegion" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">The  for which this is the delegate object.</param>
          <param name="beacons">The ranged s.</param>
          <param name="region">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions" Member="M:MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions.DidRangeBeacons(MonoTouch.CoreLocation.ICLLocationManagerDelegate,MonoTouch.CoreLocation.CLLocationManager,MonoTouch.CoreLocation.CLBeacon[],MonoTouch.CoreLocation.CLBeaconRegion)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreLocation.ICLLocationManagerDelegate" />
      </Targets>
      <Member MemberName="DidStartMonitoringForRegion">
        <MemberSignature Language="C#" Value="public static void DidStartMonitoringForRegion (this MonoTouch.CoreLocation.ICLLocationManagerDelegate This, MonoTouch.CoreLocation.CLLocationManager manager, MonoTouch.CoreLocation.CLRegion region);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidStartMonitoringForRegion(class MonoTouch.CoreLocation.ICLLocationManagerDelegate This, class MonoTouch.CoreLocation.CLLocationManager manager, class MonoTouch.CoreLocation.CLRegion region) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreLocation.ICLLocationManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
          <Parameter Name="region" Type="MonoTouch.CoreLocation.CLRegion" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">The  for which this is the delegate object.</param>
          <param name="region">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions" Member="M:MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions.DidStartMonitoringForRegion(MonoTouch.CoreLocation.ICLLocationManagerDelegate,MonoTouch.CoreLocation.CLLocationManager,MonoTouch.CoreLocation.CLRegion)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreLocation.ICLLocationManagerDelegate" />
      </Targets>
      <Member MemberName="DidVisit">
        <MemberSignature Language="C#" Value="public static void DidVisit (this MonoTouch.CoreLocation.ICLLocationManagerDelegate This, MonoTouch.CoreLocation.CLLocationManager manager, MonoTouch.CoreLocation.CLVisit visit);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidVisit(class MonoTouch.CoreLocation.ICLLocationManagerDelegate This, class MonoTouch.CoreLocation.CLLocationManager manager, class MonoTouch.CoreLocation.CLVisit visit) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreLocation.ICLLocationManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
          <Parameter Name="visit" Type="MonoTouch.CoreLocation.CLVisit" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">To be added.</param>
          <param name="visit">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions" Member="M:MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions.DidVisit(MonoTouch.CoreLocation.ICLLocationManagerDelegate,MonoTouch.CoreLocation.CLLocationManager,MonoTouch.CoreLocation.CLVisit)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreLocation.ICLLocationManagerDelegate" />
      </Targets>
      <Member MemberName="Failed">
        <MemberSignature Language="C#" Value="public static void Failed (this MonoTouch.CoreLocation.ICLLocationManagerDelegate This, MonoTouch.CoreLocation.CLLocationManager manager, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Failed(class MonoTouch.CoreLocation.ICLLocationManagerDelegate This, class MonoTouch.CoreLocation.CLLocationManager manager, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreLocation.ICLLocationManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">The  for which this is the delegate object.</param>
          <param name="error">The error that occurred.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions" Member="M:MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions.Failed(MonoTouch.CoreLocation.ICLLocationManagerDelegate,MonoTouch.CoreLocation.CLLocationManager,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreLocation.ICLLocationManagerDelegate" />
      </Targets>
      <Member MemberName="LocationsUpdated">
        <MemberSignature Language="C#" Value="public static void LocationsUpdated (this MonoTouch.CoreLocation.ICLLocationManagerDelegate This, MonoTouch.CoreLocation.CLLocationManager manager, MonoTouch.CoreLocation.CLLocation[] locations);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LocationsUpdated(class MonoTouch.CoreLocation.ICLLocationManagerDelegate This, class MonoTouch.CoreLocation.CLLocationManager manager, class MonoTouch.CoreLocation.CLLocation[] locations) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreLocation.ICLLocationManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
          <Parameter Name="locations" Type="MonoTouch.CoreLocation.CLLocation[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">The  for which this is the delegate object.</param>
          <param name="locations">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions" Member="M:MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions.LocationsUpdated(MonoTouch.CoreLocation.ICLLocationManagerDelegate,MonoTouch.CoreLocation.CLLocationManager,MonoTouch.CoreLocation.CLLocation[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreLocation.ICLLocationManagerDelegate" />
      </Targets>
      <Member MemberName="LocationUpdatesPaused">
        <MemberSignature Language="C#" Value="public static void LocationUpdatesPaused (this MonoTouch.CoreLocation.ICLLocationManagerDelegate This, MonoTouch.CoreLocation.CLLocationManager manager);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LocationUpdatesPaused(class MonoTouch.CoreLocation.ICLLocationManagerDelegate This, class MonoTouch.CoreLocation.CLLocationManager manager) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreLocation.ICLLocationManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">The  for which this is the delegate object.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions" Member="M:MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions.LocationUpdatesPaused(MonoTouch.CoreLocation.ICLLocationManagerDelegate,MonoTouch.CoreLocation.CLLocationManager)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreLocation.ICLLocationManagerDelegate" />
      </Targets>
      <Member MemberName="LocationUpdatesResumed">
        <MemberSignature Language="C#" Value="public static void LocationUpdatesResumed (this MonoTouch.CoreLocation.ICLLocationManagerDelegate This, MonoTouch.CoreLocation.CLLocationManager manager);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LocationUpdatesResumed(class MonoTouch.CoreLocation.ICLLocationManagerDelegate This, class MonoTouch.CoreLocation.CLLocationManager manager) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreLocation.ICLLocationManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">The  for which this is the delegate object.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions" Member="M:MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions.LocationUpdatesResumed(MonoTouch.CoreLocation.ICLLocationManagerDelegate,MonoTouch.CoreLocation.CLLocationManager)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreLocation.ICLLocationManagerDelegate" />
      </Targets>
      <Member MemberName="MonitoringFailed">
        <MemberSignature Language="C#" Value="public static void MonitoringFailed (this MonoTouch.CoreLocation.ICLLocationManagerDelegate This, MonoTouch.CoreLocation.CLLocationManager manager, MonoTouch.CoreLocation.CLRegion region, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MonitoringFailed(class MonoTouch.CoreLocation.ICLLocationManagerDelegate This, class MonoTouch.CoreLocation.CLLocationManager manager, class MonoTouch.CoreLocation.CLRegion region, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreLocation.ICLLocationManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
          <Parameter Name="region" Type="MonoTouch.CoreLocation.CLRegion" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">The  for which this is the delegate object.</param>
          <param name="region">To be added.</param>
          <param name="error">The cause of the failure.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions" Member="M:MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions.MonitoringFailed(MonoTouch.CoreLocation.ICLLocationManagerDelegate,MonoTouch.CoreLocation.CLLocationManager,MonoTouch.CoreLocation.CLRegion,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreLocation.ICLLocationManagerDelegate" />
      </Targets>
      <Member MemberName="RangingBeaconsDidFailForRegion">
        <MemberSignature Language="C#" Value="public static void RangingBeaconsDidFailForRegion (this MonoTouch.CoreLocation.ICLLocationManagerDelegate This, MonoTouch.CoreLocation.CLLocationManager manager, MonoTouch.CoreLocation.CLBeaconRegion region, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RangingBeaconsDidFailForRegion(class MonoTouch.CoreLocation.ICLLocationManagerDelegate This, class MonoTouch.CoreLocation.CLLocationManager manager, class MonoTouch.CoreLocation.CLBeaconRegion region, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreLocation.ICLLocationManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
          <Parameter Name="region" Type="MonoTouch.CoreLocation.CLBeaconRegion" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">The  for which this is the delegate object.</param>
          <param name="region">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions" Member="M:MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions.RangingBeaconsDidFailForRegion(MonoTouch.CoreLocation.ICLLocationManagerDelegate,MonoTouch.CoreLocation.CLLocationManager,MonoTouch.CoreLocation.CLBeaconRegion,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreLocation.ICLLocationManagerDelegate" />
      </Targets>
      <Member MemberName="RegionEntered">
        <MemberSignature Language="C#" Value="public static void RegionEntered (this MonoTouch.CoreLocation.ICLLocationManagerDelegate This, MonoTouch.CoreLocation.CLLocationManager manager, MonoTouch.CoreLocation.CLRegion region);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegionEntered(class MonoTouch.CoreLocation.ICLLocationManagerDelegate This, class MonoTouch.CoreLocation.CLLocationManager manager, class MonoTouch.CoreLocation.CLRegion region) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreLocation.ICLLocationManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
          <Parameter Name="region" Type="MonoTouch.CoreLocation.CLRegion" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">The  for which this is the delegate object.</param>
          <param name="region">The region entered.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions" Member="M:MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions.RegionEntered(MonoTouch.CoreLocation.ICLLocationManagerDelegate,MonoTouch.CoreLocation.CLLocationManager,MonoTouch.CoreLocation.CLRegion)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreLocation.ICLLocationManagerDelegate" />
      </Targets>
      <Member MemberName="RegionLeft">
        <MemberSignature Language="C#" Value="public static void RegionLeft (this MonoTouch.CoreLocation.ICLLocationManagerDelegate This, MonoTouch.CoreLocation.CLLocationManager manager, MonoTouch.CoreLocation.CLRegion region);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegionLeft(class MonoTouch.CoreLocation.ICLLocationManagerDelegate This, class MonoTouch.CoreLocation.CLLocationManager manager, class MonoTouch.CoreLocation.CLRegion region) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreLocation.ICLLocationManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
          <Parameter Name="region" Type="MonoTouch.CoreLocation.CLRegion" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">The  for which this is the delegate object.</param>
          <param name="region">The region left.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions" Member="M:MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions.RegionLeft(MonoTouch.CoreLocation.ICLLocationManagerDelegate,MonoTouch.CoreLocation.CLLocationManager,MonoTouch.CoreLocation.CLRegion)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreLocation.ICLLocationManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldDisplayHeadingCalibration">
        <MemberSignature Language="C#" Value="public static bool ShouldDisplayHeadingCalibration (this MonoTouch.CoreLocation.ICLLocationManagerDelegate This, MonoTouch.CoreLocation.CLLocationManager manager);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldDisplayHeadingCalibration(class MonoTouch.CoreLocation.ICLLocationManagerDelegate This, class MonoTouch.CoreLocation.CLLocationManager manager) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreLocation.ICLLocationManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">The  for which this is the delegate object.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions" Member="M:MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions.ShouldDisplayHeadingCalibration(MonoTouch.CoreLocation.ICLLocationManagerDelegate,MonoTouch.CoreLocation.CLLocationManager)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreLocation.ICLLocationManagerDelegate" />
      </Targets>
      <Member MemberName="UpdatedHeading">
        <MemberSignature Language="C#" Value="public static void UpdatedHeading (this MonoTouch.CoreLocation.ICLLocationManagerDelegate This, MonoTouch.CoreLocation.CLLocationManager manager, MonoTouch.CoreLocation.CLHeading newHeading);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdatedHeading(class MonoTouch.CoreLocation.ICLLocationManagerDelegate This, class MonoTouch.CoreLocation.CLLocationManager manager, class MonoTouch.CoreLocation.CLHeading newHeading) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreLocation.ICLLocationManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
          <Parameter Name="newHeading" Type="MonoTouch.CoreLocation.CLHeading" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">The  for which this is the delegate object.</param>
          <param name="newHeading">The new heading.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions" Member="M:MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions.UpdatedHeading(MonoTouch.CoreLocation.ICLLocationManagerDelegate,MonoTouch.CoreLocation.CLLocationManager,MonoTouch.CoreLocation.CLHeading)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreLocation.ICLLocationManagerDelegate" />
      </Targets>
      <Member MemberName="UpdatedLocation">
        <MemberSignature Language="C#" Value="public static void UpdatedLocation (this MonoTouch.CoreLocation.ICLLocationManagerDelegate This, MonoTouch.CoreLocation.CLLocationManager manager, MonoTouch.CoreLocation.CLLocation newLocation, MonoTouch.CoreLocation.CLLocation oldLocation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdatedLocation(class MonoTouch.CoreLocation.ICLLocationManagerDelegate This, class MonoTouch.CoreLocation.CLLocationManager manager, class MonoTouch.CoreLocation.CLLocation newLocation, class MonoTouch.CoreLocation.CLLocation oldLocation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreLocation.ICLLocationManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.CoreLocation.CLLocationManager" />
          <Parameter Name="newLocation" Type="MonoTouch.CoreLocation.CLLocation" />
          <Parameter Name="oldLocation" Type="MonoTouch.CoreLocation.CLLocation" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">The  for which this is the delegate object.</param>
          <param name="newLocation">To be added.</param>
          <param name="oldLocation">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions" Member="M:MonoTouch.CoreLocation.CLLocationManagerDelegate_Extensions.UpdatedLocation(MonoTouch.CoreLocation.ICLLocationManagerDelegate,MonoTouch.CoreLocation.CLLocationManager,MonoTouch.CoreLocation.CLLocation,MonoTouch.CoreLocation.CLLocation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreMedia.ICMAttachmentBearer" />
      </Targets>
      <Member MemberName="GetAttachment&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static T GetAttachment&lt;T&gt; (this MonoTouch.CoreMedia.ICMAttachmentBearer target, string key, out MonoTouch.CoreMedia.CMAttachmentMode attachmentModeOut) where T : class, MonoTouch.ObjCRuntime.INativeObject;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetAttachment&lt;class (class MonoTouch.ObjCRuntime.INativeObject) T&gt;(class MonoTouch.CoreMedia.ICMAttachmentBearer target, string key, valuetype MonoTouch.CoreMedia.CMAttachmentMode attachmentModeOut) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>T</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
              <InterfaceName>MonoTouch.ObjCRuntime.INativeObject</InterfaceName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="target" Type="MonoTouch.CoreMedia.ICMAttachmentBearer" RefType="this" />
          <Parameter Name="key" Type="System.String" />
          <Parameter Name="attachmentModeOut" Type="MonoTouch.CoreMedia.CMAttachmentMode&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="target">To be added.</param>
          <param name="key">To be added.</param>
          <param name="attachmentModeOut">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreMedia.CMAttachmentBearer" Member="M:MonoTouch.CoreMedia.CMAttachmentBearer.GetAttachment``1(MonoTouch.CoreMedia.ICMAttachmentBearer,System.String,MonoTouch.CoreMedia.CMAttachmentMode@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreMedia.ICMAttachmentBearer" />
      </Targets>
      <Member MemberName="GetAttachments">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSDictionary GetAttachments (this MonoTouch.CoreMedia.ICMAttachmentBearer target, MonoTouch.CoreMedia.CMAttachmentMode attachmentMode);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSDictionary GetAttachments(class MonoTouch.CoreMedia.ICMAttachmentBearer target, valuetype MonoTouch.CoreMedia.CMAttachmentMode attachmentMode) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSDictionary</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="target" Type="MonoTouch.CoreMedia.ICMAttachmentBearer" RefType="this" />
          <Parameter Name="attachmentMode" Type="MonoTouch.CoreMedia.CMAttachmentMode" />
        </Parameters>
        <Docs>
          <param name="target">To be added.</param>
          <param name="attachmentMode">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreMedia.CMAttachmentBearer" Member="M:MonoTouch.CoreMedia.CMAttachmentBearer.GetAttachments(MonoTouch.CoreMedia.ICMAttachmentBearer,MonoTouch.CoreMedia.CMAttachmentMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreMedia.ICMAttachmentBearer" />
      </Targets>
      <Member MemberName="PropagateAttachments">
        <MemberSignature Language="C#" Value="public static void PropagateAttachments (this MonoTouch.CoreMedia.ICMAttachmentBearer source, MonoTouch.CoreMedia.ICMAttachmentBearer destination);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PropagateAttachments(class MonoTouch.CoreMedia.ICMAttachmentBearer source, class MonoTouch.CoreMedia.ICMAttachmentBearer destination) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="source" Type="MonoTouch.CoreMedia.ICMAttachmentBearer" RefType="this" />
          <Parameter Name="destination" Type="MonoTouch.CoreMedia.ICMAttachmentBearer" />
        </Parameters>
        <Docs>
          <param name="source">To be added.</param>
          <param name="destination">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreMedia.CMAttachmentBearer" Member="M:MonoTouch.CoreMedia.CMAttachmentBearer.PropagateAttachments(MonoTouch.CoreMedia.ICMAttachmentBearer,MonoTouch.CoreMedia.ICMAttachmentBearer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreMedia.ICMAttachmentBearer" />
      </Targets>
      <Member MemberName="RemoveAllAttachments">
        <MemberSignature Language="C#" Value="public static void RemoveAllAttachments (this MonoTouch.CoreMedia.ICMAttachmentBearer target);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveAllAttachments(class MonoTouch.CoreMedia.ICMAttachmentBearer target) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="target" Type="MonoTouch.CoreMedia.ICMAttachmentBearer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="target">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreMedia.CMAttachmentBearer" Member="M:MonoTouch.CoreMedia.CMAttachmentBearer.RemoveAllAttachments(MonoTouch.CoreMedia.ICMAttachmentBearer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreMedia.ICMAttachmentBearer" />
      </Targets>
      <Member MemberName="RemoveAttachment">
        <MemberSignature Language="C#" Value="public static void RemoveAttachment (this MonoTouch.CoreMedia.ICMAttachmentBearer target, string key);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveAttachment(class MonoTouch.CoreMedia.ICMAttachmentBearer target, string key) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="target" Type="MonoTouch.CoreMedia.ICMAttachmentBearer" RefType="this" />
          <Parameter Name="key" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="target">To be added.</param>
          <param name="key">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreMedia.CMAttachmentBearer" Member="M:MonoTouch.CoreMedia.CMAttachmentBearer.RemoveAttachment(MonoTouch.CoreMedia.ICMAttachmentBearer,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreMedia.ICMAttachmentBearer" />
      </Targets>
      <Member MemberName="SetAttachment">
        <MemberSignature Language="C#" Value="public static void SetAttachment (this MonoTouch.CoreMedia.ICMAttachmentBearer target, string key, MonoTouch.ObjCRuntime.INativeObject value, MonoTouch.CoreMedia.CMAttachmentMode attachmentMode);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAttachment(class MonoTouch.CoreMedia.ICMAttachmentBearer target, string key, class MonoTouch.ObjCRuntime.INativeObject value, valuetype MonoTouch.CoreMedia.CMAttachmentMode attachmentMode) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="target" Type="MonoTouch.CoreMedia.ICMAttachmentBearer" RefType="this" />
          <Parameter Name="key" Type="System.String" />
          <Parameter Name="value" Type="MonoTouch.ObjCRuntime.INativeObject" />
          <Parameter Name="attachmentMode" Type="MonoTouch.CoreMedia.CMAttachmentMode" />
        </Parameters>
        <Docs>
          <param name="target">To be added.</param>
          <param name="key">To be added.</param>
          <param name="value">To be added.</param>
          <param name="attachmentMode">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreMedia.CMAttachmentBearer" Member="M:MonoTouch.CoreMedia.CMAttachmentBearer.SetAttachment(MonoTouch.CoreMedia.ICMAttachmentBearer,System.String,MonoTouch.ObjCRuntime.INativeObject,MonoTouch.CoreMedia.CMAttachmentMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreMedia.ICMAttachmentBearer" />
      </Targets>
      <Member MemberName="SetAttachments">
        <MemberSignature Language="C#" Value="public static void SetAttachments (this MonoTouch.CoreMedia.ICMAttachmentBearer target, MonoTouch.Foundation.NSDictionary theAttachments, MonoTouch.CoreMedia.CMAttachmentMode attachmentMode);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAttachments(class MonoTouch.CoreMedia.ICMAttachmentBearer target, class MonoTouch.Foundation.NSDictionary theAttachments, valuetype MonoTouch.CoreMedia.CMAttachmentMode attachmentMode) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="target" Type="MonoTouch.CoreMedia.ICMAttachmentBearer" RefType="this" />
          <Parameter Name="theAttachments" Type="MonoTouch.Foundation.NSDictionary" />
          <Parameter Name="attachmentMode" Type="MonoTouch.CoreMedia.CMAttachmentMode" />
        </Parameters>
        <Docs>
          <param name="target">To be added.</param>
          <param name="theAttachments">To be added.</param>
          <param name="attachmentMode">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreMedia.CMAttachmentBearer" Member="M:MonoTouch.CoreMedia.CMAttachmentBearer.SetAttachments(MonoTouch.CoreMedia.ICMAttachmentBearer,MonoTouch.Foundation.NSDictionary,MonoTouch.CoreMedia.CMAttachmentMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreSpotlight.CSIndexErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.CoreSpotlight.CSIndexErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.CoreSpotlight.CSIndexErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CoreSpotlight.CSIndexErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.CoreSpotlight.CSIndexErrorCode value</summary>
        </Docs>
        <Link Type="MonoTouch.CoreSpotlight.CSIndexErrorCodeExtensions" Member="M:MonoTouch.CoreSpotlight.CSIndexErrorCodeExtensions.GetDomain(MonoTouch.CoreSpotlight.CSIndexErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreSpotlight.CSSearchableIndex" />
      </Targets>
      <Member MemberName="BeginIndexBatch">
        <MemberSignature Language="C#" Value="public static void BeginIndexBatch (this MonoTouch.CoreSpotlight.CSSearchableIndex This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BeginIndexBatch(class MonoTouch.CoreSpotlight.CSSearchableIndex This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreSpotlight.CSSearchableIndex" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Begins an index update batch.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreSpotlight.CSSearchableIndex_CSOptionalBatchingExtension" Member="M:MonoTouch.CoreSpotlight.CSSearchableIndex_CSOptionalBatchingExtension.BeginIndexBatch(MonoTouch.CoreSpotlight.CSSearchableIndex)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreSpotlight.CSSearchableIndex" />
      </Targets>
      <Member MemberName="EndIndexBatch">
        <MemberSignature Language="C#" Value="public static void EndIndexBatch (this MonoTouch.CoreSpotlight.CSSearchableIndex This, MonoTouch.Foundation.NSData clientState, Action&lt;MonoTouch.Foundation.NSError&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndIndexBatch(class MonoTouch.CoreSpotlight.CSSearchableIndex This, class MonoTouch.Foundation.NSData clientState, class System.Action`1&lt;class MonoTouch.Foundation.NSError&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreSpotlight.CSSearchableIndex" RefType="this" />
          <Parameter Name="clientState" Type="MonoTouch.Foundation.NSData" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSError&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V7))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="clientState">To be added.</param>
          <param name="completionHandler">
            <para>To be added.</para>
            <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
          </param>
          <summary>Ends an index update batch, relying on the 250 bytes of information for crash recovery, and calls <paramref name="completionHandler" /> when finished.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreSpotlight.CSSearchableIndex_CSOptionalBatchingExtension" Member="M:MonoTouch.CoreSpotlight.CSSearchableIndex_CSOptionalBatchingExtension.EndIndexBatch(MonoTouch.CoreSpotlight.CSSearchableIndex,MonoTouch.Foundation.NSData,System.Action{MonoTouch.Foundation.NSError})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreSpotlight.CSSearchableIndex" />
      </Targets>
      <Member MemberName="FetchLastClientState">
        <MemberSignature Language="C#" Value="public static void FetchLastClientState (this MonoTouch.CoreSpotlight.CSSearchableIndex This, MonoTouch.CoreSpotlight.CSSearchableIndexFetchHandler completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FetchLastClientState(class MonoTouch.CoreSpotlight.CSSearchableIndex This, class MonoTouch.CoreSpotlight.CSSearchableIndexFetchHandler completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreSpotlight.CSSearchableIndex" RefType="this" />
          <Parameter Name="completionHandler" Type="MonoTouch.CoreSpotlight.CSSearchableIndexFetchHandler">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDCSSearchableIndexFetchHandler))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>Fetches the client state and runs <paramref name="completionHandler" /> when finished..</summary>
        </Docs>
        <Link Type="MonoTouch.CoreSpotlight.CSSearchableIndex_CSOptionalBatchingExtension" Member="M:MonoTouch.CoreSpotlight.CSSearchableIndex_CSOptionalBatchingExtension.FetchLastClientState(MonoTouch.CoreSpotlight.CSSearchableIndex,MonoTouch.CoreSpotlight.CSSearchableIndexFetchHandler)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreSpotlight.ICSSearchableIndexDelegate" />
      </Targets>
      <Member MemberName="DidFinishThrottle">
        <MemberSignature Language="C#" Value="public static void DidFinishThrottle (this MonoTouch.CoreSpotlight.ICSSearchableIndexDelegate This, MonoTouch.CoreSpotlight.CSSearchableIndex searchableIndex);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinishThrottle(class MonoTouch.CoreSpotlight.ICSSearchableIndexDelegate This, class MonoTouch.CoreSpotlight.CSSearchableIndex searchableIndex) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreSpotlight.ICSSearchableIndexDelegate" RefType="this" />
          <Parameter Name="searchableIndex" Type="MonoTouch.CoreSpotlight.CSSearchableIndex" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchableIndex">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreSpotlight.CSSearchableIndexDelegate_Extensions" Member="M:MonoTouch.CoreSpotlight.CSSearchableIndexDelegate_Extensions.DidFinishThrottle(MonoTouch.CoreSpotlight.ICSSearchableIndexDelegate,MonoTouch.CoreSpotlight.CSSearchableIndex)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreSpotlight.ICSSearchableIndexDelegate" />
      </Targets>
      <Member MemberName="DidThrottle">
        <MemberSignature Language="C#" Value="public static void DidThrottle (this MonoTouch.CoreSpotlight.ICSSearchableIndexDelegate This, MonoTouch.CoreSpotlight.CSSearchableIndex searchableIndex);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidThrottle(class MonoTouch.CoreSpotlight.ICSSearchableIndexDelegate This, class MonoTouch.CoreSpotlight.CSSearchableIndex searchableIndex) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.CoreSpotlight.ICSSearchableIndexDelegate" RefType="this" />
          <Parameter Name="searchableIndex" Type="MonoTouch.CoreSpotlight.CSSearchableIndex" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchableIndex">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreSpotlight.CSSearchableIndexDelegate_Extensions" Member="M:MonoTouch.CoreSpotlight.CSSearchableIndexDelegate_Extensions.DidThrottle(MonoTouch.CoreSpotlight.ICSSearchableIndexDelegate,MonoTouch.CoreSpotlight.CSSearchableIndex)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreSpotlight.CSSearchQueryErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.CoreSpotlight.CSSearchQueryErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.CoreSpotlight.CSSearchQueryErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CoreSpotlight.CSSearchQueryErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.CoreSpotlight.CSSearchQueryErrorCodeExtensions" Member="M:MonoTouch.CoreSpotlight.CSSearchQueryErrorCodeExtensions.GetDomain(MonoTouch.CoreSpotlight.CSSearchQueryErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreText.CTFontManagerError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.CoreText.CTFontManagerError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.CoreText.CTFontManagerError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.CoreText.CTFontManagerError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.CoreText.CTFontManagerError value</summary>
        </Docs>
        <Link Type="MonoTouch.CoreText.CTFontManagerErrorExtensions" Member="M:MonoTouch.CoreText.CTFontManagerErrorExtensions.GetDomain(MonoTouch.CoreText.CTFontManagerError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.EventKit.EKErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.EventKit.EKErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.EventKit.EKErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.EventKit.EKErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.EventKit.EKErrorCode value</summary>
        </Docs>
        <Link Type="MonoTouch.EventKit.EKErrorCodeExtensions" Member="M:MonoTouch.EventKit.EKErrorCodeExtensions.GetDomain(MonoTouch.EventKit.EKErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.EventKitUI.IEKCalendarChooserDelegate" />
      </Targets>
      <Member MemberName="Cancelled">
        <MemberSignature Language="C#" Value="public static void Cancelled (this MonoTouch.EventKitUI.IEKCalendarChooserDelegate This, MonoTouch.EventKitUI.EKCalendarChooser calendarChooser);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Cancelled(class MonoTouch.EventKitUI.IEKCalendarChooserDelegate This, class MonoTouch.EventKitUI.EKCalendarChooser calendarChooser) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.EventKitUI.IEKCalendarChooserDelegate" RefType="this" />
          <Parameter Name="calendarChooser" Type="MonoTouch.EventKitUI.EKCalendarChooser" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="calendarChooser">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.EventKitUI.EKCalendarChooserDelegate_Extensions" Member="M:MonoTouch.EventKitUI.EKCalendarChooserDelegate_Extensions.Cancelled(MonoTouch.EventKitUI.IEKCalendarChooserDelegate,MonoTouch.EventKitUI.EKCalendarChooser)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.EventKitUI.IEKCalendarChooserDelegate" />
      </Targets>
      <Member MemberName="Finished">
        <MemberSignature Language="C#" Value="public static void Finished (this MonoTouch.EventKitUI.IEKCalendarChooserDelegate This, MonoTouch.EventKitUI.EKCalendarChooser calendarChooser);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Finished(class MonoTouch.EventKitUI.IEKCalendarChooserDelegate This, class MonoTouch.EventKitUI.EKCalendarChooser calendarChooser) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.EventKitUI.IEKCalendarChooserDelegate" RefType="this" />
          <Parameter Name="calendarChooser" Type="MonoTouch.EventKitUI.EKCalendarChooser" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="calendarChooser">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.EventKitUI.EKCalendarChooserDelegate_Extensions" Member="M:MonoTouch.EventKitUI.EKCalendarChooserDelegate_Extensions.Finished(MonoTouch.EventKitUI.IEKCalendarChooserDelegate,MonoTouch.EventKitUI.EKCalendarChooser)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.EventKitUI.IEKCalendarChooserDelegate" />
      </Targets>
      <Member MemberName="SelectionChanged">
        <MemberSignature Language="C#" Value="public static void SelectionChanged (this MonoTouch.EventKitUI.IEKCalendarChooserDelegate This, MonoTouch.EventKitUI.EKCalendarChooser calendarChooser);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SelectionChanged(class MonoTouch.EventKitUI.IEKCalendarChooserDelegate This, class MonoTouch.EventKitUI.EKCalendarChooser calendarChooser) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.EventKitUI.IEKCalendarChooserDelegate" RefType="this" />
          <Parameter Name="calendarChooser" Type="MonoTouch.EventKitUI.EKCalendarChooser" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="calendarChooser">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.EventKitUI.EKCalendarChooserDelegate_Extensions" Member="M:MonoTouch.EventKitUI.EKCalendarChooserDelegate_Extensions.SelectionChanged(MonoTouch.EventKitUI.IEKCalendarChooserDelegate,MonoTouch.EventKitUI.EKCalendarChooser)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.EventKitUI.IEKEventEditViewDelegate" />
      </Targets>
      <Member MemberName="GetDefaultCalendarForNewEvents">
        <MemberSignature Language="C#" Value="public static MonoTouch.EventKit.EKCalendar GetDefaultCalendarForNewEvents (this MonoTouch.EventKitUI.IEKEventEditViewDelegate This, MonoTouch.EventKitUI.EKEventEditViewController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.EventKit.EKCalendar GetDefaultCalendarForNewEvents(class MonoTouch.EventKitUI.IEKEventEditViewDelegate This, class MonoTouch.EventKitUI.EKEventEditViewController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.EventKit.EKCalendar</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.EventKitUI.IEKEventEditViewDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.EventKitUI.EKEventEditViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.EventKitUI.EKEventEditViewDelegate_Extensions" Member="M:MonoTouch.EventKitUI.EKEventEditViewDelegate_Extensions.GetDefaultCalendarForNewEvents(MonoTouch.EventKitUI.IEKEventEditViewDelegate,MonoTouch.EventKitUI.EKEventEditViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ExternalAccessory.IEAAccessoryDelegate" />
      </Targets>
      <Member MemberName="Disconnected">
        <MemberSignature Language="C#" Value="public static void Disconnected (this MonoTouch.ExternalAccessory.IEAAccessoryDelegate This, MonoTouch.ExternalAccessory.EAAccessory accessory);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Disconnected(class MonoTouch.ExternalAccessory.IEAAccessoryDelegate This, class MonoTouch.ExternalAccessory.EAAccessory accessory) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ExternalAccessory.IEAAccessoryDelegate" RefType="this" />
          <Parameter Name="accessory" Type="MonoTouch.ExternalAccessory.EAAccessory" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="accessory">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ExternalAccessory.EAAccessoryDelegate_Extensions" Member="M:MonoTouch.ExternalAccessory.EAAccessoryDelegate_Extensions.Disconnected(MonoTouch.ExternalAccessory.IEAAccessoryDelegate,MonoTouch.ExternalAccessory.EAAccessory)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ExternalAccessory.EABluetoothAccessoryPickerError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.ExternalAccessory.EABluetoothAccessoryPickerError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.ExternalAccessory.EABluetoothAccessoryPickerError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.ExternalAccessory.EABluetoothAccessoryPickerError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.ExternalAccessory.EABluetoothAccessoryPickerError value</summary>
        </Docs>
        <Link Type="MonoTouch.ExternalAccessory.EABluetoothAccessoryPickerErrorExtensions" Member="M:MonoTouch.ExternalAccessory.EABluetoothAccessoryPickerErrorExtensions.GetDomain(MonoTouch.ExternalAccessory.EABluetoothAccessoryPickerError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSCacheDelegate" />
      </Targets>
      <Member MemberName="WillEvictObject">
        <MemberSignature Language="C#" Value="public static void WillEvictObject (this MonoTouch.Foundation.INSCacheDelegate This, MonoTouch.Foundation.NSCache cache, MonoTouch.Foundation.NSObject obj);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillEvictObject(class MonoTouch.Foundation.INSCacheDelegate This, class MonoTouch.Foundation.NSCache cache, class MonoTouch.Foundation.NSObject obj) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSCacheDelegate" RefType="this" />
          <Parameter Name="cache" Type="MonoTouch.Foundation.NSCache" />
          <Parameter Name="obj" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="cache">To be added.</param>
          <param name="obj">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSCacheDelegate_Extensions" Member="M:MonoTouch.Foundation.NSCacheDelegate_Extensions.WillEvictObject(MonoTouch.Foundation.INSCacheDelegate,MonoTouch.Foundation.NSCache,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFileManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldCopyItemAtPath">
        <MemberSignature Language="C#" Value="public static bool ShouldCopyItemAtPath (this MonoTouch.Foundation.INSFileManagerDelegate This, MonoTouch.Foundation.NSFileManager fm, MonoTouch.Foundation.NSString srcPath, MonoTouch.Foundation.NSString dstPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldCopyItemAtPath(class MonoTouch.Foundation.INSFileManagerDelegate This, class MonoTouch.Foundation.NSFileManager fm, class MonoTouch.Foundation.NSString srcPath, class MonoTouch.Foundation.NSString dstPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFileManagerDelegate" RefType="this" />
          <Parameter Name="fm" Type="MonoTouch.Foundation.NSFileManager" />
          <Parameter Name="srcPath" Type="MonoTouch.Foundation.NSString" />
          <Parameter Name="dstPath" Type="MonoTouch.Foundation.NSString" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="fm">To be added.</param>
          <param name="srcPath">To be added.</param>
          <param name="dstPath">To be added.</param>
          <summary>Creates a copy of this object, allocating memory from the specified zone or from the default zone if the argument is null.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFileManagerDelegate_Extensions" Member="M:MonoTouch.Foundation.NSFileManagerDelegate_Extensions.ShouldCopyItemAtPath(MonoTouch.Foundation.INSFileManagerDelegate,MonoTouch.Foundation.NSFileManager,MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSString)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFileManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldCopyItemAtPath">
        <MemberSignature Language="C#" Value="public static bool ShouldCopyItemAtPath (this MonoTouch.Foundation.INSFileManagerDelegate This, MonoTouch.Foundation.NSFileManager fileManager, string srcPath, string dstPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldCopyItemAtPath(class MonoTouch.Foundation.INSFileManagerDelegate This, class MonoTouch.Foundation.NSFileManager fileManager, string srcPath, string dstPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFileManagerDelegate" RefType="this" />
          <Parameter Name="fileManager" Type="MonoTouch.Foundation.NSFileManager" />
          <Parameter Name="srcPath" Type="System.String" />
          <Parameter Name="dstPath" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="fileManager">To be added.</param>
          <param name="srcPath">To be added.</param>
          <param name="dstPath">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFileManagerDelegate_Extensions" Member="M:MonoTouch.Foundation.NSFileManagerDelegate_Extensions.ShouldCopyItemAtPath(MonoTouch.Foundation.INSFileManagerDelegate,MonoTouch.Foundation.NSFileManager,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFileManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldCopyItemAtUrl">
        <MemberSignature Language="C#" Value="public static bool ShouldCopyItemAtUrl (this MonoTouch.Foundation.INSFileManagerDelegate This, MonoTouch.Foundation.NSFileManager fm, MonoTouch.Foundation.NSUrl srcUrl, MonoTouch.Foundation.NSUrl dstUrl);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldCopyItemAtUrl(class MonoTouch.Foundation.INSFileManagerDelegate This, class MonoTouch.Foundation.NSFileManager fm, class MonoTouch.Foundation.NSUrl srcUrl, class MonoTouch.Foundation.NSUrl dstUrl) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFileManagerDelegate" RefType="this" />
          <Parameter Name="fm" Type="MonoTouch.Foundation.NSFileManager" />
          <Parameter Name="srcUrl" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="dstUrl" Type="MonoTouch.Foundation.NSUrl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="fm">To be added.</param>
          <param name="srcUrl">To be added.</param>
          <param name="dstUrl">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFileManagerDelegate_Extensions" Member="M:MonoTouch.Foundation.NSFileManagerDelegate_Extensions.ShouldCopyItemAtUrl(MonoTouch.Foundation.INSFileManagerDelegate,MonoTouch.Foundation.NSFileManager,MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSUrl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFileManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldLinkItemAtPath">
        <MemberSignature Language="C#" Value="public static bool ShouldLinkItemAtPath (this MonoTouch.Foundation.INSFileManagerDelegate This, MonoTouch.Foundation.NSFileManager fileManager, string srcPath, string dstPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldLinkItemAtPath(class MonoTouch.Foundation.INSFileManagerDelegate This, class MonoTouch.Foundation.NSFileManager fileManager, string srcPath, string dstPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFileManagerDelegate" RefType="this" />
          <Parameter Name="fileManager" Type="MonoTouch.Foundation.NSFileManager" />
          <Parameter Name="srcPath" Type="System.String" />
          <Parameter Name="dstPath" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="fileManager">To be added.</param>
          <param name="srcPath">To be added.</param>
          <param name="dstPath">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFileManagerDelegate_Extensions" Member="M:MonoTouch.Foundation.NSFileManagerDelegate_Extensions.ShouldLinkItemAtPath(MonoTouch.Foundation.INSFileManagerDelegate,MonoTouch.Foundation.NSFileManager,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFileManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldLinkItemAtUrl">
        <MemberSignature Language="C#" Value="public static bool ShouldLinkItemAtUrl (this MonoTouch.Foundation.INSFileManagerDelegate This, MonoTouch.Foundation.NSFileManager fileManager, MonoTouch.Foundation.NSUrl srcUrl, MonoTouch.Foundation.NSUrl dstUrl);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldLinkItemAtUrl(class MonoTouch.Foundation.INSFileManagerDelegate This, class MonoTouch.Foundation.NSFileManager fileManager, class MonoTouch.Foundation.NSUrl srcUrl, class MonoTouch.Foundation.NSUrl dstUrl) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFileManagerDelegate" RefType="this" />
          <Parameter Name="fileManager" Type="MonoTouch.Foundation.NSFileManager" />
          <Parameter Name="srcUrl" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="dstUrl" Type="MonoTouch.Foundation.NSUrl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="fileManager">To be added.</param>
          <param name="srcUrl">To be added.</param>
          <param name="dstUrl">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFileManagerDelegate_Extensions" Member="M:MonoTouch.Foundation.NSFileManagerDelegate_Extensions.ShouldLinkItemAtUrl(MonoTouch.Foundation.INSFileManagerDelegate,MonoTouch.Foundation.NSFileManager,MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSUrl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFileManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldMoveItemAtPath">
        <MemberSignature Language="C#" Value="public static bool ShouldMoveItemAtPath (this MonoTouch.Foundation.INSFileManagerDelegate This, MonoTouch.Foundation.NSFileManager fileManager, string srcPath, string dstPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldMoveItemAtPath(class MonoTouch.Foundation.INSFileManagerDelegate This, class MonoTouch.Foundation.NSFileManager fileManager, string srcPath, string dstPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFileManagerDelegate" RefType="this" />
          <Parameter Name="fileManager" Type="MonoTouch.Foundation.NSFileManager" />
          <Parameter Name="srcPath" Type="System.String" />
          <Parameter Name="dstPath" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="fileManager">To be added.</param>
          <param name="srcPath">To be added.</param>
          <param name="dstPath">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFileManagerDelegate_Extensions" Member="M:MonoTouch.Foundation.NSFileManagerDelegate_Extensions.ShouldMoveItemAtPath(MonoTouch.Foundation.INSFileManagerDelegate,MonoTouch.Foundation.NSFileManager,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFileManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldMoveItemAtUrl">
        <MemberSignature Language="C#" Value="public static bool ShouldMoveItemAtUrl (this MonoTouch.Foundation.INSFileManagerDelegate This, MonoTouch.Foundation.NSFileManager fileManager, MonoTouch.Foundation.NSUrl srcUrl, MonoTouch.Foundation.NSUrl dstUrl);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldMoveItemAtUrl(class MonoTouch.Foundation.INSFileManagerDelegate This, class MonoTouch.Foundation.NSFileManager fileManager, class MonoTouch.Foundation.NSUrl srcUrl, class MonoTouch.Foundation.NSUrl dstUrl) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFileManagerDelegate" RefType="this" />
          <Parameter Name="fileManager" Type="MonoTouch.Foundation.NSFileManager" />
          <Parameter Name="srcUrl" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="dstUrl" Type="MonoTouch.Foundation.NSUrl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="fileManager">To be added.</param>
          <param name="srcUrl">To be added.</param>
          <param name="dstUrl">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFileManagerDelegate_Extensions" Member="M:MonoTouch.Foundation.NSFileManagerDelegate_Extensions.ShouldMoveItemAtUrl(MonoTouch.Foundation.INSFileManagerDelegate,MonoTouch.Foundation.NSFileManager,MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSUrl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFileManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldProceedAfterErrorCopyingItem">
        <MemberSignature Language="C#" Value="public static bool ShouldProceedAfterErrorCopyingItem (this MonoTouch.Foundation.INSFileManagerDelegate This, MonoTouch.Foundation.NSFileManager fileManager, MonoTouch.Foundation.NSError error, MonoTouch.Foundation.NSUrl srcUrl, MonoTouch.Foundation.NSUrl dstUrl);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldProceedAfterErrorCopyingItem(class MonoTouch.Foundation.INSFileManagerDelegate This, class MonoTouch.Foundation.NSFileManager fileManager, class MonoTouch.Foundation.NSError error, class MonoTouch.Foundation.NSUrl srcUrl, class MonoTouch.Foundation.NSUrl dstUrl) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFileManagerDelegate" RefType="this" />
          <Parameter Name="fileManager" Type="MonoTouch.Foundation.NSFileManager" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
          <Parameter Name="srcUrl" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="dstUrl" Type="MonoTouch.Foundation.NSUrl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="fileManager">To be added.</param>
          <param name="error">To be added.</param>
          <param name="srcUrl">To be added.</param>
          <param name="dstUrl">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFileManagerDelegate_Extensions" Member="M:MonoTouch.Foundation.NSFileManagerDelegate_Extensions.ShouldProceedAfterErrorCopyingItem(MonoTouch.Foundation.INSFileManagerDelegate,MonoTouch.Foundation.NSFileManager,MonoTouch.Foundation.NSError,MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSUrl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFileManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldProceedAfterErrorCopyingItem">
        <MemberSignature Language="C#" Value="public static bool ShouldProceedAfterErrorCopyingItem (this MonoTouch.Foundation.INSFileManagerDelegate This, MonoTouch.Foundation.NSFileManager fileManager, MonoTouch.Foundation.NSError error, string srcPath, string dstPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldProceedAfterErrorCopyingItem(class MonoTouch.Foundation.INSFileManagerDelegate This, class MonoTouch.Foundation.NSFileManager fileManager, class MonoTouch.Foundation.NSError error, string srcPath, string dstPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFileManagerDelegate" RefType="this" />
          <Parameter Name="fileManager" Type="MonoTouch.Foundation.NSFileManager" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
          <Parameter Name="srcPath" Type="System.String" />
          <Parameter Name="dstPath" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="fileManager">To be added.</param>
          <param name="error">To be added.</param>
          <param name="srcPath">To be added.</param>
          <param name="dstPath">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFileManagerDelegate_Extensions" Member="M:MonoTouch.Foundation.NSFileManagerDelegate_Extensions.ShouldProceedAfterErrorCopyingItem(MonoTouch.Foundation.INSFileManagerDelegate,MonoTouch.Foundation.NSFileManager,MonoTouch.Foundation.NSError,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFileManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldProceedAfterErrorLinkingItem">
        <MemberSignature Language="C#" Value="public static bool ShouldProceedAfterErrorLinkingItem (this MonoTouch.Foundation.INSFileManagerDelegate This, MonoTouch.Foundation.NSFileManager fileManager, MonoTouch.Foundation.NSError error, MonoTouch.Foundation.NSUrl srcUrl, MonoTouch.Foundation.NSUrl dstUrl);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldProceedAfterErrorLinkingItem(class MonoTouch.Foundation.INSFileManagerDelegate This, class MonoTouch.Foundation.NSFileManager fileManager, class MonoTouch.Foundation.NSError error, class MonoTouch.Foundation.NSUrl srcUrl, class MonoTouch.Foundation.NSUrl dstUrl) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFileManagerDelegate" RefType="this" />
          <Parameter Name="fileManager" Type="MonoTouch.Foundation.NSFileManager" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
          <Parameter Name="srcUrl" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="dstUrl" Type="MonoTouch.Foundation.NSUrl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="fileManager">To be added.</param>
          <param name="error">To be added.</param>
          <param name="srcUrl">To be added.</param>
          <param name="dstUrl">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFileManagerDelegate_Extensions" Member="M:MonoTouch.Foundation.NSFileManagerDelegate_Extensions.ShouldProceedAfterErrorLinkingItem(MonoTouch.Foundation.INSFileManagerDelegate,MonoTouch.Foundation.NSFileManager,MonoTouch.Foundation.NSError,MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSUrl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFileManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldProceedAfterErrorLinkingItem">
        <MemberSignature Language="C#" Value="public static bool ShouldProceedAfterErrorLinkingItem (this MonoTouch.Foundation.INSFileManagerDelegate This, MonoTouch.Foundation.NSFileManager fileManager, MonoTouch.Foundation.NSError error, string srcPath, string dstPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldProceedAfterErrorLinkingItem(class MonoTouch.Foundation.INSFileManagerDelegate This, class MonoTouch.Foundation.NSFileManager fileManager, class MonoTouch.Foundation.NSError error, string srcPath, string dstPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFileManagerDelegate" RefType="this" />
          <Parameter Name="fileManager" Type="MonoTouch.Foundation.NSFileManager" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
          <Parameter Name="srcPath" Type="System.String" />
          <Parameter Name="dstPath" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="fileManager">To be added.</param>
          <param name="error">To be added.</param>
          <param name="srcPath">To be added.</param>
          <param name="dstPath">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFileManagerDelegate_Extensions" Member="M:MonoTouch.Foundation.NSFileManagerDelegate_Extensions.ShouldProceedAfterErrorLinkingItem(MonoTouch.Foundation.INSFileManagerDelegate,MonoTouch.Foundation.NSFileManager,MonoTouch.Foundation.NSError,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFileManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldProceedAfterErrorMovingItem">
        <MemberSignature Language="C#" Value="public static bool ShouldProceedAfterErrorMovingItem (this MonoTouch.Foundation.INSFileManagerDelegate This, MonoTouch.Foundation.NSFileManager fileManager, MonoTouch.Foundation.NSError error, MonoTouch.Foundation.NSUrl srcUrl, MonoTouch.Foundation.NSUrl dstUrl);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldProceedAfterErrorMovingItem(class MonoTouch.Foundation.INSFileManagerDelegate This, class MonoTouch.Foundation.NSFileManager fileManager, class MonoTouch.Foundation.NSError error, class MonoTouch.Foundation.NSUrl srcUrl, class MonoTouch.Foundation.NSUrl dstUrl) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFileManagerDelegate" RefType="this" />
          <Parameter Name="fileManager" Type="MonoTouch.Foundation.NSFileManager" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
          <Parameter Name="srcUrl" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="dstUrl" Type="MonoTouch.Foundation.NSUrl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="fileManager">To be added.</param>
          <param name="error">To be added.</param>
          <param name="srcUrl">To be added.</param>
          <param name="dstUrl">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFileManagerDelegate_Extensions" Member="M:MonoTouch.Foundation.NSFileManagerDelegate_Extensions.ShouldProceedAfterErrorMovingItem(MonoTouch.Foundation.INSFileManagerDelegate,MonoTouch.Foundation.NSFileManager,MonoTouch.Foundation.NSError,MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSUrl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFileManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldProceedAfterErrorMovingItem">
        <MemberSignature Language="C#" Value="public static bool ShouldProceedAfterErrorMovingItem (this MonoTouch.Foundation.INSFileManagerDelegate This, MonoTouch.Foundation.NSFileManager fileManager, MonoTouch.Foundation.NSError error, string srcPath, string dstPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldProceedAfterErrorMovingItem(class MonoTouch.Foundation.INSFileManagerDelegate This, class MonoTouch.Foundation.NSFileManager fileManager, class MonoTouch.Foundation.NSError error, string srcPath, string dstPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFileManagerDelegate" RefType="this" />
          <Parameter Name="fileManager" Type="MonoTouch.Foundation.NSFileManager" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
          <Parameter Name="srcPath" Type="System.String" />
          <Parameter Name="dstPath" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="fileManager">To be added.</param>
          <param name="error">To be added.</param>
          <param name="srcPath">To be added.</param>
          <param name="dstPath">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFileManagerDelegate_Extensions" Member="M:MonoTouch.Foundation.NSFileManagerDelegate_Extensions.ShouldProceedAfterErrorMovingItem(MonoTouch.Foundation.INSFileManagerDelegate,MonoTouch.Foundation.NSFileManager,MonoTouch.Foundation.NSError,System.String,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFileManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldProceedAfterErrorRemovingItem">
        <MemberSignature Language="C#" Value="public static bool ShouldProceedAfterErrorRemovingItem (this MonoTouch.Foundation.INSFileManagerDelegate This, MonoTouch.Foundation.NSFileManager fileManager, MonoTouch.Foundation.NSError error, MonoTouch.Foundation.NSUrl url);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldProceedAfterErrorRemovingItem(class MonoTouch.Foundation.INSFileManagerDelegate This, class MonoTouch.Foundation.NSFileManager fileManager, class MonoTouch.Foundation.NSError error, class MonoTouch.Foundation.NSUrl url) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFileManagerDelegate" RefType="this" />
          <Parameter Name="fileManager" Type="MonoTouch.Foundation.NSFileManager" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
          <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="fileManager">To be added.</param>
          <param name="error">To be added.</param>
          <param name="url">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFileManagerDelegate_Extensions" Member="M:MonoTouch.Foundation.NSFileManagerDelegate_Extensions.ShouldProceedAfterErrorRemovingItem(MonoTouch.Foundation.INSFileManagerDelegate,MonoTouch.Foundation.NSFileManager,MonoTouch.Foundation.NSError,MonoTouch.Foundation.NSUrl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFileManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldProceedAfterErrorRemovingItem">
        <MemberSignature Language="C#" Value="public static bool ShouldProceedAfterErrorRemovingItem (this MonoTouch.Foundation.INSFileManagerDelegate This, MonoTouch.Foundation.NSFileManager fileManager, MonoTouch.Foundation.NSError error, string path);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldProceedAfterErrorRemovingItem(class MonoTouch.Foundation.INSFileManagerDelegate This, class MonoTouch.Foundation.NSFileManager fileManager, class MonoTouch.Foundation.NSError error, string path) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFileManagerDelegate" RefType="this" />
          <Parameter Name="fileManager" Type="MonoTouch.Foundation.NSFileManager" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
          <Parameter Name="path" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="fileManager">To be added.</param>
          <param name="error">To be added.</param>
          <param name="path">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFileManagerDelegate_Extensions" Member="M:MonoTouch.Foundation.NSFileManagerDelegate_Extensions.ShouldProceedAfterErrorRemovingItem(MonoTouch.Foundation.INSFileManagerDelegate,MonoTouch.Foundation.NSFileManager,MonoTouch.Foundation.NSError,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFileManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldRemoveItemAtPath">
        <MemberSignature Language="C#" Value="public static bool ShouldRemoveItemAtPath (this MonoTouch.Foundation.INSFileManagerDelegate This, MonoTouch.Foundation.NSFileManager fileManager, string path);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldRemoveItemAtPath(class MonoTouch.Foundation.INSFileManagerDelegate This, class MonoTouch.Foundation.NSFileManager fileManager, string path) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFileManagerDelegate" RefType="this" />
          <Parameter Name="fileManager" Type="MonoTouch.Foundation.NSFileManager" />
          <Parameter Name="path" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="fileManager">To be added.</param>
          <param name="path">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFileManagerDelegate_Extensions" Member="M:MonoTouch.Foundation.NSFileManagerDelegate_Extensions.ShouldRemoveItemAtPath(MonoTouch.Foundation.INSFileManagerDelegate,MonoTouch.Foundation.NSFileManager,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFileManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldRemoveItemAtUrl">
        <MemberSignature Language="C#" Value="public static bool ShouldRemoveItemAtUrl (this MonoTouch.Foundation.INSFileManagerDelegate This, MonoTouch.Foundation.NSFileManager fileManager, MonoTouch.Foundation.NSUrl url);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldRemoveItemAtUrl(class MonoTouch.Foundation.INSFileManagerDelegate This, class MonoTouch.Foundation.NSFileManager fileManager, class MonoTouch.Foundation.NSUrl url) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFileManagerDelegate" RefType="this" />
          <Parameter Name="fileManager" Type="MonoTouch.Foundation.NSFileManager" />
          <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="fileManager">To be added.</param>
          <param name="url">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFileManagerDelegate_Extensions" Member="M:MonoTouch.Foundation.NSFileManagerDelegate_Extensions.ShouldRemoveItemAtUrl(MonoTouch.Foundation.INSFileManagerDelegate,MonoTouch.Foundation.NSFileManager,MonoTouch.Foundation.NSUrl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFilePresenter" />
      </Targets>
      <Member MemberName="AccommodatePresentedItemDeletion">
        <MemberSignature Language="C#" Value="public static void AccommodatePresentedItemDeletion (this MonoTouch.Foundation.INSFilePresenter This, Action&lt;MonoTouch.Foundation.NSError&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AccommodatePresentedItemDeletion(class MonoTouch.Foundation.INSFilePresenter This, class System.Action`1&lt;class MonoTouch.Foundation.NSError&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFilePresenter" RefType="this" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSError&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V0))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFilePresenter_Extensions" Member="M:MonoTouch.Foundation.NSFilePresenter_Extensions.AccommodatePresentedItemDeletion(MonoTouch.Foundation.INSFilePresenter,System.Action{MonoTouch.Foundation.NSError})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFilePresenter" />
      </Targets>
      <Member MemberName="AccommodatePresentedSubitemDeletion">
        <MemberSignature Language="C#" Value="public static void AccommodatePresentedSubitemDeletion (this MonoTouch.Foundation.INSFilePresenter This, MonoTouch.Foundation.NSUrl url, Action&lt;MonoTouch.Foundation.NSError&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AccommodatePresentedSubitemDeletion(class MonoTouch.Foundation.INSFilePresenter This, class MonoTouch.Foundation.NSUrl url, class System.Action`1&lt;class MonoTouch.Foundation.NSError&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFilePresenter" RefType="this" />
          <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSError&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V0))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="url">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFilePresenter_Extensions" Member="M:MonoTouch.Foundation.NSFilePresenter_Extensions.AccommodatePresentedSubitemDeletion(MonoTouch.Foundation.INSFilePresenter,MonoTouch.Foundation.NSUrl,System.Action{MonoTouch.Foundation.NSError})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFilePresenter" />
      </Targets>
      <Member MemberName="PresentedItemChanged">
        <MemberSignature Language="C#" Value="public static void PresentedItemChanged (this MonoTouch.Foundation.INSFilePresenter This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PresentedItemChanged(class MonoTouch.Foundation.INSFilePresenter This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFilePresenter" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFilePresenter_Extensions" Member="M:MonoTouch.Foundation.NSFilePresenter_Extensions.PresentedItemChanged(MonoTouch.Foundation.INSFilePresenter)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFilePresenter" />
      </Targets>
      <Member MemberName="PresentedItemGainedVersion">
        <MemberSignature Language="C#" Value="public static void PresentedItemGainedVersion (this MonoTouch.Foundation.INSFilePresenter This, MonoTouch.Foundation.NSFileVersion version);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PresentedItemGainedVersion(class MonoTouch.Foundation.INSFilePresenter This, class MonoTouch.Foundation.NSFileVersion version) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFilePresenter" RefType="this" />
          <Parameter Name="version" Type="MonoTouch.Foundation.NSFileVersion" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="version">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFilePresenter_Extensions" Member="M:MonoTouch.Foundation.NSFilePresenter_Extensions.PresentedItemGainedVersion(MonoTouch.Foundation.INSFilePresenter,MonoTouch.Foundation.NSFileVersion)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFilePresenter" />
      </Targets>
      <Member MemberName="PresentedItemLostVersion">
        <MemberSignature Language="C#" Value="public static void PresentedItemLostVersion (this MonoTouch.Foundation.INSFilePresenter This, MonoTouch.Foundation.NSFileVersion version);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PresentedItemLostVersion(class MonoTouch.Foundation.INSFilePresenter This, class MonoTouch.Foundation.NSFileVersion version) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFilePresenter" RefType="this" />
          <Parameter Name="version" Type="MonoTouch.Foundation.NSFileVersion" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="version">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFilePresenter_Extensions" Member="M:MonoTouch.Foundation.NSFilePresenter_Extensions.PresentedItemLostVersion(MonoTouch.Foundation.INSFilePresenter,MonoTouch.Foundation.NSFileVersion)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFilePresenter" />
      </Targets>
      <Member MemberName="PresentedItemMoved">
        <MemberSignature Language="C#" Value="public static void PresentedItemMoved (this MonoTouch.Foundation.INSFilePresenter This, MonoTouch.Foundation.NSUrl newURL);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PresentedItemMoved(class MonoTouch.Foundation.INSFilePresenter This, class MonoTouch.Foundation.NSUrl newURL) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFilePresenter" RefType="this" />
          <Parameter Name="newURL" Type="MonoTouch.Foundation.NSUrl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="newURL">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFilePresenter_Extensions" Member="M:MonoTouch.Foundation.NSFilePresenter_Extensions.PresentedItemMoved(MonoTouch.Foundation.INSFilePresenter,MonoTouch.Foundation.NSUrl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFilePresenter" />
      </Targets>
      <Member MemberName="PresentedItemResolveConflictVersion">
        <MemberSignature Language="C#" Value="public static void PresentedItemResolveConflictVersion (this MonoTouch.Foundation.INSFilePresenter This, MonoTouch.Foundation.NSFileVersion version);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PresentedItemResolveConflictVersion(class MonoTouch.Foundation.INSFilePresenter This, class MonoTouch.Foundation.NSFileVersion version) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFilePresenter" RefType="this" />
          <Parameter Name="version" Type="MonoTouch.Foundation.NSFileVersion" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="version">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFilePresenter_Extensions" Member="M:MonoTouch.Foundation.NSFilePresenter_Extensions.PresentedItemResolveConflictVersion(MonoTouch.Foundation.INSFilePresenter,MonoTouch.Foundation.NSFileVersion)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFilePresenter" />
      </Targets>
      <Member MemberName="PresentedSubitemAppeared">
        <MemberSignature Language="C#" Value="public static void PresentedSubitemAppeared (this MonoTouch.Foundation.INSFilePresenter This, MonoTouch.Foundation.NSUrl atUrl);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PresentedSubitemAppeared(class MonoTouch.Foundation.INSFilePresenter This, class MonoTouch.Foundation.NSUrl atUrl) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFilePresenter" RefType="this" />
          <Parameter Name="atUrl" Type="MonoTouch.Foundation.NSUrl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="atUrl">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFilePresenter_Extensions" Member="M:MonoTouch.Foundation.NSFilePresenter_Extensions.PresentedSubitemAppeared(MonoTouch.Foundation.INSFilePresenter,MonoTouch.Foundation.NSUrl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFilePresenter" />
      </Targets>
      <Member MemberName="PresentedSubitemChanged">
        <MemberSignature Language="C#" Value="public static void PresentedSubitemChanged (this MonoTouch.Foundation.INSFilePresenter This, MonoTouch.Foundation.NSUrl url);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PresentedSubitemChanged(class MonoTouch.Foundation.INSFilePresenter This, class MonoTouch.Foundation.NSUrl url) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFilePresenter" RefType="this" />
          <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="url">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFilePresenter_Extensions" Member="M:MonoTouch.Foundation.NSFilePresenter_Extensions.PresentedSubitemChanged(MonoTouch.Foundation.INSFilePresenter,MonoTouch.Foundation.NSUrl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFilePresenter" />
      </Targets>
      <Member MemberName="PresentedSubitemGainedVersion">
        <MemberSignature Language="C#" Value="public static void PresentedSubitemGainedVersion (this MonoTouch.Foundation.INSFilePresenter This, MonoTouch.Foundation.NSUrl url, MonoTouch.Foundation.NSFileVersion version);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PresentedSubitemGainedVersion(class MonoTouch.Foundation.INSFilePresenter This, class MonoTouch.Foundation.NSUrl url, class MonoTouch.Foundation.NSFileVersion version) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFilePresenter" RefType="this" />
          <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="version" Type="MonoTouch.Foundation.NSFileVersion" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="url">To be added.</param>
          <param name="version">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFilePresenter_Extensions" Member="M:MonoTouch.Foundation.NSFilePresenter_Extensions.PresentedSubitemGainedVersion(MonoTouch.Foundation.INSFilePresenter,MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSFileVersion)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFilePresenter" />
      </Targets>
      <Member MemberName="PresentedSubitemLostVersion">
        <MemberSignature Language="C#" Value="public static void PresentedSubitemLostVersion (this MonoTouch.Foundation.INSFilePresenter This, MonoTouch.Foundation.NSUrl url, MonoTouch.Foundation.NSFileVersion version);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PresentedSubitemLostVersion(class MonoTouch.Foundation.INSFilePresenter This, class MonoTouch.Foundation.NSUrl url, class MonoTouch.Foundation.NSFileVersion version) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFilePresenter" RefType="this" />
          <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="version" Type="MonoTouch.Foundation.NSFileVersion" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="url">To be added.</param>
          <param name="version">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFilePresenter_Extensions" Member="M:MonoTouch.Foundation.NSFilePresenter_Extensions.PresentedSubitemLostVersion(MonoTouch.Foundation.INSFilePresenter,MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSFileVersion)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFilePresenter" />
      </Targets>
      <Member MemberName="PresentedSubitemMoved">
        <MemberSignature Language="C#" Value="public static void PresentedSubitemMoved (this MonoTouch.Foundation.INSFilePresenter This, MonoTouch.Foundation.NSUrl oldURL, MonoTouch.Foundation.NSUrl newURL);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PresentedSubitemMoved(class MonoTouch.Foundation.INSFilePresenter This, class MonoTouch.Foundation.NSUrl oldURL, class MonoTouch.Foundation.NSUrl newURL) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFilePresenter" RefType="this" />
          <Parameter Name="oldURL" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="newURL" Type="MonoTouch.Foundation.NSUrl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="oldURL">To be added.</param>
          <param name="newURL">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFilePresenter_Extensions" Member="M:MonoTouch.Foundation.NSFilePresenter_Extensions.PresentedSubitemMoved(MonoTouch.Foundation.INSFilePresenter,MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSUrl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFilePresenter" />
      </Targets>
      <Member MemberName="PresentedSubitemResolvedConflictVersion">
        <MemberSignature Language="C#" Value="public static void PresentedSubitemResolvedConflictVersion (this MonoTouch.Foundation.INSFilePresenter This, MonoTouch.Foundation.NSUrl url, MonoTouch.Foundation.NSFileVersion version);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PresentedSubitemResolvedConflictVersion(class MonoTouch.Foundation.INSFilePresenter This, class MonoTouch.Foundation.NSUrl url, class MonoTouch.Foundation.NSFileVersion version) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFilePresenter" RefType="this" />
          <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="version" Type="MonoTouch.Foundation.NSFileVersion" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="url">To be added.</param>
          <param name="version">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFilePresenter_Extensions" Member="M:MonoTouch.Foundation.NSFilePresenter_Extensions.PresentedSubitemResolvedConflictVersion(MonoTouch.Foundation.INSFilePresenter,MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSFileVersion)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFilePresenter" />
      </Targets>
      <Member MemberName="RelinquishPresentedItemToReader" apistyle="unified">
        <MemberSignature Language="C#" Value="public static void RelinquishPresentedItemToReader (this MonoTouch.Foundation.INSFilePresenter This, MonoTouch.Foundation.NSFilePresenterReacquirer readerAction);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RelinquishPresentedItemToReader(class MonoTouch.Foundation.INSFilePresenter This, class MonoTouch.Foundation.NSFilePresenterReacquirer readerAction) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFilePresenter" RefType="this" />
          <Parameter Name="readerAction" Type="MonoTouch.Foundation.NSFilePresenterReacquirer">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDNSFilePresenterReacquirer))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="readerAction">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFilePresenter_Extensions" Member="M:MonoTouch.Foundation.NSFilePresenter_Extensions.RelinquishPresentedItemToReader(MonoTouch.Foundation.INSFilePresenter,MonoTouch.Foundation.NSFilePresenterReacquirer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFilePresenter" />
      </Targets>
      <Member MemberName="RelinquishPresentedItemToWriter" apistyle="unified">
        <MemberSignature Language="C#" Value="public static void RelinquishPresentedItemToWriter (this MonoTouch.Foundation.INSFilePresenter This, MonoTouch.Foundation.NSFilePresenterReacquirer writerAction);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RelinquishPresentedItemToWriter(class MonoTouch.Foundation.INSFilePresenter This, class MonoTouch.Foundation.NSFilePresenterReacquirer writerAction) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFilePresenter" RefType="this" />
          <Parameter Name="writerAction" Type="MonoTouch.Foundation.NSFilePresenterReacquirer">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDNSFilePresenterReacquirer))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="writerAction">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFilePresenter_Extensions" Member="M:MonoTouch.Foundation.NSFilePresenter_Extensions.RelinquishPresentedItemToWriter(MonoTouch.Foundation.INSFilePresenter,MonoTouch.Foundation.NSFilePresenterReacquirer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSFilePresenter" />
      </Targets>
      <Member MemberName="SavePresentedItemChanges">
        <MemberSignature Language="C#" Value="public static void SavePresentedItemChanges (this MonoTouch.Foundation.INSFilePresenter This, Action&lt;MonoTouch.Foundation.NSError&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SavePresentedItemChanges(class MonoTouch.Foundation.INSFilePresenter This, class System.Action`1&lt;class MonoTouch.Foundation.NSError&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSFilePresenter" RefType="this" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSError&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V0))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSFilePresenter_Extensions" Member="M:MonoTouch.Foundation.NSFilePresenter_Extensions.SavePresentedItemChanges(MonoTouch.Foundation.INSFilePresenter,System.Action{MonoTouch.Foundation.NSError})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSKeyedArchiverDelegate" />
      </Targets>
      <Member MemberName="EncodedObject">
        <MemberSignature Language="C#" Value="public static void EncodedObject (this MonoTouch.Foundation.INSKeyedArchiverDelegate This, MonoTouch.Foundation.NSKeyedArchiver archiver, MonoTouch.Foundation.NSObject obj);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EncodedObject(class MonoTouch.Foundation.INSKeyedArchiverDelegate This, class MonoTouch.Foundation.NSKeyedArchiver archiver, class MonoTouch.Foundation.NSObject obj) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSKeyedArchiverDelegate" RefType="this" />
          <Parameter Name="archiver" Type="MonoTouch.Foundation.NSKeyedArchiver" />
          <Parameter Name="obj" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="archiver">To be added.</param>
          <param name="obj">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSKeyedArchiverDelegate_Extensions" Member="M:MonoTouch.Foundation.NSKeyedArchiverDelegate_Extensions.EncodedObject(MonoTouch.Foundation.INSKeyedArchiverDelegate,MonoTouch.Foundation.NSKeyedArchiver,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSKeyedArchiverDelegate" />
      </Targets>
      <Member MemberName="Finished">
        <MemberSignature Language="C#" Value="public static void Finished (this MonoTouch.Foundation.INSKeyedArchiverDelegate This, MonoTouch.Foundation.NSKeyedArchiver archiver);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Finished(class MonoTouch.Foundation.INSKeyedArchiverDelegate This, class MonoTouch.Foundation.NSKeyedArchiver archiver) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSKeyedArchiverDelegate" RefType="this" />
          <Parameter Name="archiver" Type="MonoTouch.Foundation.NSKeyedArchiver" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="archiver">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSKeyedArchiverDelegate_Extensions" Member="M:MonoTouch.Foundation.NSKeyedArchiverDelegate_Extensions.Finished(MonoTouch.Foundation.INSKeyedArchiverDelegate,MonoTouch.Foundation.NSKeyedArchiver)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSKeyedArchiverDelegate" />
      </Targets>
      <Member MemberName="Finishing">
        <MemberSignature Language="C#" Value="public static void Finishing (this MonoTouch.Foundation.INSKeyedArchiverDelegate This, MonoTouch.Foundation.NSKeyedArchiver archiver);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Finishing(class MonoTouch.Foundation.INSKeyedArchiverDelegate This, class MonoTouch.Foundation.NSKeyedArchiver archiver) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSKeyedArchiverDelegate" RefType="this" />
          <Parameter Name="archiver" Type="MonoTouch.Foundation.NSKeyedArchiver" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="archiver">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSKeyedArchiverDelegate_Extensions" Member="M:MonoTouch.Foundation.NSKeyedArchiverDelegate_Extensions.Finishing(MonoTouch.Foundation.INSKeyedArchiverDelegate,MonoTouch.Foundation.NSKeyedArchiver)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSKeyedArchiverDelegate" />
      </Targets>
      <Member MemberName="ReplacingObject">
        <MemberSignature Language="C#" Value="public static void ReplacingObject (this MonoTouch.Foundation.INSKeyedArchiverDelegate This, MonoTouch.Foundation.NSKeyedArchiver archiver, MonoTouch.Foundation.NSObject oldObject, MonoTouch.Foundation.NSObject newObject);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReplacingObject(class MonoTouch.Foundation.INSKeyedArchiverDelegate This, class MonoTouch.Foundation.NSKeyedArchiver archiver, class MonoTouch.Foundation.NSObject oldObject, class MonoTouch.Foundation.NSObject newObject) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSKeyedArchiverDelegate" RefType="this" />
          <Parameter Name="archiver" Type="MonoTouch.Foundation.NSKeyedArchiver" />
          <Parameter Name="oldObject" Type="MonoTouch.Foundation.NSObject" />
          <Parameter Name="newObject" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="archiver">To be added.</param>
          <param name="oldObject">To be added.</param>
          <param name="newObject">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSKeyedArchiverDelegate_Extensions" Member="M:MonoTouch.Foundation.NSKeyedArchiverDelegate_Extensions.ReplacingObject(MonoTouch.Foundation.INSKeyedArchiverDelegate,MonoTouch.Foundation.NSKeyedArchiver,MonoTouch.Foundation.NSObject,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSKeyedArchiverDelegate" />
      </Targets>
      <Member MemberName="WillEncode">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSObject WillEncode (this MonoTouch.Foundation.INSKeyedArchiverDelegate This, MonoTouch.Foundation.NSKeyedArchiver archiver, MonoTouch.Foundation.NSObject obj);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSObject WillEncode(class MonoTouch.Foundation.INSKeyedArchiverDelegate This, class MonoTouch.Foundation.NSKeyedArchiver archiver, class MonoTouch.Foundation.NSObject obj) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSObject</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSKeyedArchiverDelegate" RefType="this" />
          <Parameter Name="archiver" Type="MonoTouch.Foundation.NSKeyedArchiver" />
          <Parameter Name="obj" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="archiver">To be added.</param>
          <param name="obj">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSKeyedArchiverDelegate_Extensions" Member="M:MonoTouch.Foundation.NSKeyedArchiverDelegate_Extensions.WillEncode(MonoTouch.Foundation.INSKeyedArchiverDelegate,MonoTouch.Foundation.NSKeyedArchiver,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSKeyedUnarchiverDelegate" />
      </Targets>
      <Member MemberName="CannotDecodeClass">
        <MemberSignature Language="C#" Value="public static MonoTouch.ObjCRuntime.Class CannotDecodeClass (this MonoTouch.Foundation.INSKeyedUnarchiverDelegate This, MonoTouch.Foundation.NSKeyedUnarchiver unarchiver, string klass, string[] classes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.ObjCRuntime.Class CannotDecodeClass(class MonoTouch.Foundation.INSKeyedUnarchiverDelegate This, class MonoTouch.Foundation.NSKeyedUnarchiver unarchiver, string klass, string[] classes) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.ObjCRuntime.Class</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSKeyedUnarchiverDelegate" RefType="this" />
          <Parameter Name="unarchiver" Type="MonoTouch.Foundation.NSKeyedUnarchiver" />
          <Parameter Name="klass" Type="System.String" />
          <Parameter Name="classes" Type="System.String[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="unarchiver">To be added.</param>
          <param name="klass">To be added.</param>
          <param name="classes">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSKeyedUnarchiverDelegate_Extensions" Member="M:MonoTouch.Foundation.NSKeyedUnarchiverDelegate_Extensions.CannotDecodeClass(MonoTouch.Foundation.INSKeyedUnarchiverDelegate,MonoTouch.Foundation.NSKeyedUnarchiver,System.String,System.String[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSKeyedUnarchiverDelegate" />
      </Targets>
      <Member MemberName="DecodedObject">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSObject DecodedObject (this MonoTouch.Foundation.INSKeyedUnarchiverDelegate This, MonoTouch.Foundation.NSKeyedUnarchiver unarchiver, MonoTouch.Foundation.NSObject obj);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSObject DecodedObject(class MonoTouch.Foundation.INSKeyedUnarchiverDelegate This, class MonoTouch.Foundation.NSKeyedUnarchiver unarchiver, class MonoTouch.Foundation.NSObject obj) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSObject</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSKeyedUnarchiverDelegate" RefType="this" />
          <Parameter Name="unarchiver" Type="MonoTouch.Foundation.NSKeyedUnarchiver" />
          <Parameter Name="obj" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="unarchiver">To be added.</param>
          <param name="obj">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSKeyedUnarchiverDelegate_Extensions" Member="M:MonoTouch.Foundation.NSKeyedUnarchiverDelegate_Extensions.DecodedObject(MonoTouch.Foundation.INSKeyedUnarchiverDelegate,MonoTouch.Foundation.NSKeyedUnarchiver,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSKeyedUnarchiverDelegate" />
      </Targets>
      <Member MemberName="Finished">
        <MemberSignature Language="C#" Value="public static void Finished (this MonoTouch.Foundation.INSKeyedUnarchiverDelegate This, MonoTouch.Foundation.NSKeyedUnarchiver unarchiver);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Finished(class MonoTouch.Foundation.INSKeyedUnarchiverDelegate This, class MonoTouch.Foundation.NSKeyedUnarchiver unarchiver) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSKeyedUnarchiverDelegate" RefType="this" />
          <Parameter Name="unarchiver" Type="MonoTouch.Foundation.NSKeyedUnarchiver" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="unarchiver">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSKeyedUnarchiverDelegate_Extensions" Member="M:MonoTouch.Foundation.NSKeyedUnarchiverDelegate_Extensions.Finished(MonoTouch.Foundation.INSKeyedUnarchiverDelegate,MonoTouch.Foundation.NSKeyedUnarchiver)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSKeyedUnarchiverDelegate" />
      </Targets>
      <Member MemberName="Finishing">
        <MemberSignature Language="C#" Value="public static void Finishing (this MonoTouch.Foundation.INSKeyedUnarchiverDelegate This, MonoTouch.Foundation.NSKeyedUnarchiver unarchiver);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Finishing(class MonoTouch.Foundation.INSKeyedUnarchiverDelegate This, class MonoTouch.Foundation.NSKeyedUnarchiver unarchiver) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSKeyedUnarchiverDelegate" RefType="this" />
          <Parameter Name="unarchiver" Type="MonoTouch.Foundation.NSKeyedUnarchiver" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="unarchiver">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSKeyedUnarchiverDelegate_Extensions" Member="M:MonoTouch.Foundation.NSKeyedUnarchiverDelegate_Extensions.Finishing(MonoTouch.Foundation.INSKeyedUnarchiverDelegate,MonoTouch.Foundation.NSKeyedUnarchiver)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSKeyedUnarchiverDelegate" />
      </Targets>
      <Member MemberName="ReplacingObject">
        <MemberSignature Language="C#" Value="public static void ReplacingObject (this MonoTouch.Foundation.INSKeyedUnarchiverDelegate This, MonoTouch.Foundation.NSKeyedUnarchiver unarchiver, MonoTouch.Foundation.NSObject oldObject, MonoTouch.Foundation.NSObject newObject);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReplacingObject(class MonoTouch.Foundation.INSKeyedUnarchiverDelegate This, class MonoTouch.Foundation.NSKeyedUnarchiver unarchiver, class MonoTouch.Foundation.NSObject oldObject, class MonoTouch.Foundation.NSObject newObject) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSKeyedUnarchiverDelegate" RefType="this" />
          <Parameter Name="unarchiver" Type="MonoTouch.Foundation.NSKeyedUnarchiver" />
          <Parameter Name="oldObject" Type="MonoTouch.Foundation.NSObject" />
          <Parameter Name="newObject" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="unarchiver">To be added.</param>
          <param name="oldObject">To be added.</param>
          <param name="newObject">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSKeyedUnarchiverDelegate_Extensions" Member="M:MonoTouch.Foundation.NSKeyedUnarchiverDelegate_Extensions.ReplacingObject(MonoTouch.Foundation.INSKeyedUnarchiverDelegate,MonoTouch.Foundation.NSKeyedUnarchiver,MonoTouch.Foundation.NSObject,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSMutableOrderedSet" />
      </Targets>
      <Member MemberName="SortUsingDescriptors">
        <MemberSignature Language="C#" Value="public static void SortUsingDescriptors (this MonoTouch.Foundation.NSMutableOrderedSet This, MonoTouch.Foundation.NSSortDescriptor[] sortDescriptors);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SortUsingDescriptors(class MonoTouch.Foundation.NSMutableOrderedSet This, class MonoTouch.Foundation.NSSortDescriptor[] sortDescriptors) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSMutableOrderedSet" RefType="this" />
          <Parameter Name="sortDescriptors" Type="MonoTouch.Foundation.NSSortDescriptor[]" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="sortDescriptors">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSKeyValueSorting_NSMutableOrderedSet" Member="M:MonoTouch.Foundation.NSKeyValueSorting_NSMutableOrderedSet.SortUsingDescriptors(MonoTouch.Foundation.NSMutableOrderedSet,MonoTouch.Foundation.NSSortDescriptor[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSOrderedSet" />
      </Targets>
      <Member MemberName="GetSortedArray">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSObject[] GetSortedArray (this MonoTouch.Foundation.NSOrderedSet This, MonoTouch.Foundation.NSSortDescriptor[] sortDescriptors);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSObject[] GetSortedArray(class MonoTouch.Foundation.NSOrderedSet This, class MonoTouch.Foundation.NSSortDescriptor[] sortDescriptors) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSObject[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSOrderedSet" RefType="this" />
          <Parameter Name="sortDescriptors" Type="MonoTouch.Foundation.NSSortDescriptor[]" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="sortDescriptors">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSKeyValueSorting_NSOrderedSet" Member="M:MonoTouch.Foundation.NSKeyValueSorting_NSOrderedSet.GetSortedArray(MonoTouch.Foundation.NSOrderedSet,MonoTouch.Foundation.NSSortDescriptor[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSMachPortDelegate" />
      </Targets>
      <Member MemberName="MachMessageReceived">
        <MemberSignature Language="C#" Value="public static void MachMessageReceived (this MonoTouch.Foundation.INSMachPortDelegate This, IntPtr msgHeader);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MachMessageReceived(class MonoTouch.Foundation.INSMachPortDelegate This, native int msgHeader) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSMachPortDelegate" RefType="this" />
          <Parameter Name="msgHeader" Type="System.IntPtr" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="msgHeader">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSMachPortDelegate_Extensions" Member="M:MonoTouch.Foundation.NSMachPortDelegate_Extensions.MachMessageReceived(MonoTouch.Foundation.INSMachPortDelegate,System.IntPtr)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSMetadataQueryDelegate" />
      </Targets>
      <Member MemberName="ReplacementObjectForResultObject">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSObject ReplacementObjectForResultObject (this MonoTouch.Foundation.INSMetadataQueryDelegate This, MonoTouch.Foundation.NSMetadataQuery query, MonoTouch.Foundation.NSMetadataItem result);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSObject ReplacementObjectForResultObject(class MonoTouch.Foundation.INSMetadataQueryDelegate This, class MonoTouch.Foundation.NSMetadataQuery query, class MonoTouch.Foundation.NSMetadataItem result) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSObject</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSMetadataQueryDelegate" RefType="this" />
          <Parameter Name="query" Type="MonoTouch.Foundation.NSMetadataQuery" />
          <Parameter Name="result" Type="MonoTouch.Foundation.NSMetadataItem" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="query">To be added.</param>
          <param name="result">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSMetadataQueryDelegate_Extensions" Member="M:MonoTouch.Foundation.NSMetadataQueryDelegate_Extensions.ReplacementObjectForResultObject(MonoTouch.Foundation.INSMetadataQueryDelegate,MonoTouch.Foundation.NSMetadataQuery,MonoTouch.Foundation.NSMetadataItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSMetadataQueryDelegate" />
      </Targets>
      <Member MemberName="ReplacementValueForAttributevalue">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSObject ReplacementValueForAttributevalue (this MonoTouch.Foundation.INSMetadataQueryDelegate This, MonoTouch.Foundation.NSMetadataQuery query, string attributeName, MonoTouch.Foundation.NSObject value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSObject ReplacementValueForAttributevalue(class MonoTouch.Foundation.INSMetadataQueryDelegate This, class MonoTouch.Foundation.NSMetadataQuery query, string attributeName, class MonoTouch.Foundation.NSObject value) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSObject</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSMetadataQueryDelegate" RefType="this" />
          <Parameter Name="query" Type="MonoTouch.Foundation.NSMetadataQuery" />
          <Parameter Name="attributeName" Type="System.String" />
          <Parameter Name="value" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="query">To be added.</param>
          <param name="attributeName">To be added.</param>
          <param name="value">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSMetadataQueryDelegate_Extensions" Member="M:MonoTouch.Foundation.NSMetadataQueryDelegate_Extensions.ReplacementValueForAttributevalue(MonoTouch.Foundation.INSMetadataQueryDelegate,MonoTouch.Foundation.NSMetadataQuery,System.String,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSNetServiceBrowserDelegate" />
      </Targets>
      <Member MemberName="DomainRemoved">
        <MemberSignature Language="C#" Value="public static void DomainRemoved (this MonoTouch.Foundation.INSNetServiceBrowserDelegate This, MonoTouch.Foundation.NSNetServiceBrowser sender, string domain, bool moreComing);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DomainRemoved(class MonoTouch.Foundation.INSNetServiceBrowserDelegate This, class MonoTouch.Foundation.NSNetServiceBrowser sender, string domain, bool moreComing) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSNetServiceBrowserDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSNetServiceBrowser" />
          <Parameter Name="domain" Type="System.String" />
          <Parameter Name="moreComing" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <param name="domain">To be added.</param>
          <param name="moreComing">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSNetServiceBrowserDelegate_Extensions" Member="M:MonoTouch.Foundation.NSNetServiceBrowserDelegate_Extensions.DomainRemoved(MonoTouch.Foundation.INSNetServiceBrowserDelegate,MonoTouch.Foundation.NSNetServiceBrowser,System.String,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSNetServiceBrowserDelegate" />
      </Targets>
      <Member MemberName="FoundDomain">
        <MemberSignature Language="C#" Value="public static void FoundDomain (this MonoTouch.Foundation.INSNetServiceBrowserDelegate This, MonoTouch.Foundation.NSNetServiceBrowser sender, string domain, bool moreComing);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FoundDomain(class MonoTouch.Foundation.INSNetServiceBrowserDelegate This, class MonoTouch.Foundation.NSNetServiceBrowser sender, string domain, bool moreComing) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSNetServiceBrowserDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSNetServiceBrowser" />
          <Parameter Name="domain" Type="System.String" />
          <Parameter Name="moreComing" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <param name="domain">To be added.</param>
          <param name="moreComing">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSNetServiceBrowserDelegate_Extensions" Member="M:MonoTouch.Foundation.NSNetServiceBrowserDelegate_Extensions.FoundDomain(MonoTouch.Foundation.INSNetServiceBrowserDelegate,MonoTouch.Foundation.NSNetServiceBrowser,System.String,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSNetServiceBrowserDelegate" />
      </Targets>
      <Member MemberName="FoundService">
        <MemberSignature Language="C#" Value="public static void FoundService (this MonoTouch.Foundation.INSNetServiceBrowserDelegate This, MonoTouch.Foundation.NSNetServiceBrowser sender, MonoTouch.Foundation.NSNetService service, bool moreComing);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FoundService(class MonoTouch.Foundation.INSNetServiceBrowserDelegate This, class MonoTouch.Foundation.NSNetServiceBrowser sender, class MonoTouch.Foundation.NSNetService service, bool moreComing) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSNetServiceBrowserDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSNetServiceBrowser" />
          <Parameter Name="service" Type="MonoTouch.Foundation.NSNetService" />
          <Parameter Name="moreComing" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <param name="service">To be added.</param>
          <param name="moreComing">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSNetServiceBrowserDelegate_Extensions" Member="M:MonoTouch.Foundation.NSNetServiceBrowserDelegate_Extensions.FoundService(MonoTouch.Foundation.INSNetServiceBrowserDelegate,MonoTouch.Foundation.NSNetServiceBrowser,MonoTouch.Foundation.NSNetService,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSNetServiceBrowserDelegate" />
      </Targets>
      <Member MemberName="NotSearched">
        <MemberSignature Language="C#" Value="public static void NotSearched (this MonoTouch.Foundation.INSNetServiceBrowserDelegate This, MonoTouch.Foundation.NSNetServiceBrowser sender, MonoTouch.Foundation.NSDictionary errors);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NotSearched(class MonoTouch.Foundation.INSNetServiceBrowserDelegate This, class MonoTouch.Foundation.NSNetServiceBrowser sender, class MonoTouch.Foundation.NSDictionary errors) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSNetServiceBrowserDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSNetServiceBrowser" />
          <Parameter Name="errors" Type="MonoTouch.Foundation.NSDictionary" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <param name="errors">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSNetServiceBrowserDelegate_Extensions" Member="M:MonoTouch.Foundation.NSNetServiceBrowserDelegate_Extensions.NotSearched(MonoTouch.Foundation.INSNetServiceBrowserDelegate,MonoTouch.Foundation.NSNetServiceBrowser,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSNetServiceBrowserDelegate" />
      </Targets>
      <Member MemberName="SearchStarted">
        <MemberSignature Language="C#" Value="public static void SearchStarted (this MonoTouch.Foundation.INSNetServiceBrowserDelegate This, MonoTouch.Foundation.NSNetServiceBrowser sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SearchStarted(class MonoTouch.Foundation.INSNetServiceBrowserDelegate This, class MonoTouch.Foundation.NSNetServiceBrowser sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSNetServiceBrowserDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSNetServiceBrowser" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSNetServiceBrowserDelegate_Extensions" Member="M:MonoTouch.Foundation.NSNetServiceBrowserDelegate_Extensions.SearchStarted(MonoTouch.Foundation.INSNetServiceBrowserDelegate,MonoTouch.Foundation.NSNetServiceBrowser)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSNetServiceBrowserDelegate" />
      </Targets>
      <Member MemberName="SearchStopped">
        <MemberSignature Language="C#" Value="public static void SearchStopped (this MonoTouch.Foundation.INSNetServiceBrowserDelegate This, MonoTouch.Foundation.NSNetServiceBrowser sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SearchStopped(class MonoTouch.Foundation.INSNetServiceBrowserDelegate This, class MonoTouch.Foundation.NSNetServiceBrowser sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSNetServiceBrowserDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSNetServiceBrowser" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSNetServiceBrowserDelegate_Extensions" Member="M:MonoTouch.Foundation.NSNetServiceBrowserDelegate_Extensions.SearchStopped(MonoTouch.Foundation.INSNetServiceBrowserDelegate,MonoTouch.Foundation.NSNetServiceBrowser)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSNetServiceBrowserDelegate" />
      </Targets>
      <Member MemberName="ServiceRemoved">
        <MemberSignature Language="C#" Value="public static void ServiceRemoved (this MonoTouch.Foundation.INSNetServiceBrowserDelegate This, MonoTouch.Foundation.NSNetServiceBrowser sender, MonoTouch.Foundation.NSNetService service, bool moreComing);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ServiceRemoved(class MonoTouch.Foundation.INSNetServiceBrowserDelegate This, class MonoTouch.Foundation.NSNetServiceBrowser sender, class MonoTouch.Foundation.NSNetService service, bool moreComing) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSNetServiceBrowserDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSNetServiceBrowser" />
          <Parameter Name="service" Type="MonoTouch.Foundation.NSNetService" />
          <Parameter Name="moreComing" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <param name="service">To be added.</param>
          <param name="moreComing">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSNetServiceBrowserDelegate_Extensions" Member="M:MonoTouch.Foundation.NSNetServiceBrowserDelegate_Extensions.ServiceRemoved(MonoTouch.Foundation.INSNetServiceBrowserDelegate,MonoTouch.Foundation.NSNetServiceBrowser,MonoTouch.Foundation.NSNetService,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSNetServiceDelegate" />
      </Targets>
      <Member MemberName="AddressResolved">
        <MemberSignature Language="C#" Value="public static void AddressResolved (this MonoTouch.Foundation.INSNetServiceDelegate This, MonoTouch.Foundation.NSNetService sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddressResolved(class MonoTouch.Foundation.INSNetServiceDelegate This, class MonoTouch.Foundation.NSNetService sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSNetServiceDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSNetService" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSNetServiceDelegate_Extensions" Member="M:MonoTouch.Foundation.NSNetServiceDelegate_Extensions.AddressResolved(MonoTouch.Foundation.INSNetServiceDelegate,MonoTouch.Foundation.NSNetService)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSNetServiceDelegate" />
      </Targets>
      <Member MemberName="DidAcceptConnection">
        <MemberSignature Language="C#" Value="public static void DidAcceptConnection (this MonoTouch.Foundation.INSNetServiceDelegate This, MonoTouch.Foundation.NSNetService sender, MonoTouch.Foundation.NSInputStream inputStream, MonoTouch.Foundation.NSOutputStream outputStream);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAcceptConnection(class MonoTouch.Foundation.INSNetServiceDelegate This, class MonoTouch.Foundation.NSNetService sender, class MonoTouch.Foundation.NSInputStream inputStream, class MonoTouch.Foundation.NSOutputStream outputStream) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSNetServiceDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSNetService" />
          <Parameter Name="inputStream" Type="MonoTouch.Foundation.NSInputStream" />
          <Parameter Name="outputStream" Type="MonoTouch.Foundation.NSOutputStream" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <param name="inputStream">To be added.</param>
          <param name="outputStream">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSNetServiceDelegate_Extensions" Member="M:MonoTouch.Foundation.NSNetServiceDelegate_Extensions.DidAcceptConnection(MonoTouch.Foundation.INSNetServiceDelegate,MonoTouch.Foundation.NSNetService,MonoTouch.Foundation.NSInputStream,MonoTouch.Foundation.NSOutputStream)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSNetServiceDelegate" />
      </Targets>
      <Member MemberName="Published">
        <MemberSignature Language="C#" Value="public static void Published (this MonoTouch.Foundation.INSNetServiceDelegate This, MonoTouch.Foundation.NSNetService sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Published(class MonoTouch.Foundation.INSNetServiceDelegate This, class MonoTouch.Foundation.NSNetService sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSNetServiceDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSNetService" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSNetServiceDelegate_Extensions" Member="M:MonoTouch.Foundation.NSNetServiceDelegate_Extensions.Published(MonoTouch.Foundation.INSNetServiceDelegate,MonoTouch.Foundation.NSNetService)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSNetServiceDelegate" />
      </Targets>
      <Member MemberName="PublishFailure">
        <MemberSignature Language="C#" Value="public static void PublishFailure (this MonoTouch.Foundation.INSNetServiceDelegate This, MonoTouch.Foundation.NSNetService sender, MonoTouch.Foundation.NSDictionary errors);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PublishFailure(class MonoTouch.Foundation.INSNetServiceDelegate This, class MonoTouch.Foundation.NSNetService sender, class MonoTouch.Foundation.NSDictionary errors) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSNetServiceDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSNetService" />
          <Parameter Name="errors" Type="MonoTouch.Foundation.NSDictionary" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <param name="errors">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSNetServiceDelegate_Extensions" Member="M:MonoTouch.Foundation.NSNetServiceDelegate_Extensions.PublishFailure(MonoTouch.Foundation.INSNetServiceDelegate,MonoTouch.Foundation.NSNetService,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSNetServiceDelegate" />
      </Targets>
      <Member MemberName="ResolveFailure">
        <MemberSignature Language="C#" Value="public static void ResolveFailure (this MonoTouch.Foundation.INSNetServiceDelegate This, MonoTouch.Foundation.NSNetService sender, MonoTouch.Foundation.NSDictionary errors);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResolveFailure(class MonoTouch.Foundation.INSNetServiceDelegate This, class MonoTouch.Foundation.NSNetService sender, class MonoTouch.Foundation.NSDictionary errors) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSNetServiceDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSNetService" />
          <Parameter Name="errors" Type="MonoTouch.Foundation.NSDictionary" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <param name="errors">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSNetServiceDelegate_Extensions" Member="M:MonoTouch.Foundation.NSNetServiceDelegate_Extensions.ResolveFailure(MonoTouch.Foundation.INSNetServiceDelegate,MonoTouch.Foundation.NSNetService,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSNetServiceDelegate" />
      </Targets>
      <Member MemberName="Stopped">
        <MemberSignature Language="C#" Value="public static void Stopped (this MonoTouch.Foundation.INSNetServiceDelegate This, MonoTouch.Foundation.NSNetService sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Stopped(class MonoTouch.Foundation.INSNetServiceDelegate This, class MonoTouch.Foundation.NSNetService sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSNetServiceDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSNetService" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSNetServiceDelegate_Extensions" Member="M:MonoTouch.Foundation.NSNetServiceDelegate_Extensions.Stopped(MonoTouch.Foundation.INSNetServiceDelegate,MonoTouch.Foundation.NSNetService)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSNetServiceDelegate" />
      </Targets>
      <Member MemberName="UpdatedTxtRecordData">
        <MemberSignature Language="C#" Value="public static void UpdatedTxtRecordData (this MonoTouch.Foundation.INSNetServiceDelegate This, MonoTouch.Foundation.NSNetService sender, MonoTouch.Foundation.NSData data);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdatedTxtRecordData(class MonoTouch.Foundation.INSNetServiceDelegate This, class MonoTouch.Foundation.NSNetService sender, class MonoTouch.Foundation.NSData data) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSNetServiceDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSNetService" />
          <Parameter Name="data" Type="MonoTouch.Foundation.NSData" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <param name="data">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSNetServiceDelegate_Extensions" Member="M:MonoTouch.Foundation.NSNetServiceDelegate_Extensions.UpdatedTxtRecordData(MonoTouch.Foundation.INSNetServiceDelegate,MonoTouch.Foundation.NSNetService,MonoTouch.Foundation.NSData)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSNetServiceDelegate" />
      </Targets>
      <Member MemberName="WillPublish">
        <MemberSignature Language="C#" Value="public static void WillPublish (this MonoTouch.Foundation.INSNetServiceDelegate This, MonoTouch.Foundation.NSNetService sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillPublish(class MonoTouch.Foundation.INSNetServiceDelegate This, class MonoTouch.Foundation.NSNetService sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSNetServiceDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSNetService" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSNetServiceDelegate_Extensions" Member="M:MonoTouch.Foundation.NSNetServiceDelegate_Extensions.WillPublish(MonoTouch.Foundation.INSNetServiceDelegate,MonoTouch.Foundation.NSNetService)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSNetServiceDelegate" />
      </Targets>
      <Member MemberName="WillResolve">
        <MemberSignature Language="C#" Value="public static void WillResolve (this MonoTouch.Foundation.INSNetServiceDelegate This, MonoTouch.Foundation.NSNetService sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillResolve(class MonoTouch.Foundation.INSNetServiceDelegate This, class MonoTouch.Foundation.NSNetService sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSNetServiceDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSNetService" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSNetServiceDelegate_Extensions" Member="M:MonoTouch.Foundation.NSNetServiceDelegate_Extensions.WillResolve(MonoTouch.Foundation.INSNetServiceDelegate,MonoTouch.Foundation.NSNetService)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSObjectProtocol" />
      </Targets>
      <Member MemberName="GetDebugDescription">
        <MemberSignature Language="C#" Value="public static string GetDebugDescription (this MonoTouch.Foundation.INSObjectProtocol This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDebugDescription(class MonoTouch.Foundation.INSObjectProtocol This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSObjectProtocol" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSObjectProtocol_Extensions" Member="M:MonoTouch.Foundation.NSObjectProtocol_Extensions.GetDebugDescription(MonoTouch.Foundation.INSObjectProtocol)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSPortDelegate" />
      </Targets>
      <Member MemberName="MessageReceived">
        <MemberSignature Language="C#" Value="public static void MessageReceived (this MonoTouch.Foundation.INSPortDelegate This, MonoTouch.Foundation.NSPortMessage message);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MessageReceived(class MonoTouch.Foundation.INSPortDelegate This, class MonoTouch.Foundation.NSPortMessage message) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSPortDelegate" RefType="this" />
          <Parameter Name="message" Type="MonoTouch.Foundation.NSPortMessage" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="message">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSPortDelegate_Extensions" Member="M:MonoTouch.Foundation.NSPortDelegate_Extensions.MessageReceived(MonoTouch.Foundation.INSPortDelegate,MonoTouch.Foundation.NSPortMessage)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSArray" />
      </Targets>
      <Member MemberName="FilterUsingPredicate">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSArray FilterUsingPredicate (this MonoTouch.Foundation.NSArray This, MonoTouch.Foundation.NSArray array);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSArray FilterUsingPredicate(class MonoTouch.Foundation.NSArray This, class MonoTouch.Foundation.NSArray array) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSArray</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSArray" RefType="this" />
          <Parameter Name="array" Type="MonoTouch.Foundation.NSArray" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="array">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSPredicateSupport_NSArray" Member="M:MonoTouch.Foundation.NSPredicateSupport_NSArray.FilterUsingPredicate(MonoTouch.Foundation.NSArray,MonoTouch.Foundation.NSArray)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSMutableArray" />
      </Targets>
      <Member MemberName="FilterUsingPredicate">
        <MemberSignature Language="C#" Value="public static void FilterUsingPredicate (this MonoTouch.Foundation.NSMutableArray This, MonoTouch.Foundation.NSPredicate predicate);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FilterUsingPredicate(class MonoTouch.Foundation.NSMutableArray This, class MonoTouch.Foundation.NSPredicate predicate) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSMutableArray" RefType="this" />
          <Parameter Name="predicate" Type="MonoTouch.Foundation.NSPredicate" />
        </Parameters>
        <Docs>
          <param name="This">The target mutable array.</param>
          <param name="predicate">The predicate used to filter the
	elements of the array.</param>
          <summary>Filters the element of the array in place, by keeping
	only the elements that match.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSPredicateSupport_NSMutableArray" Member="M:MonoTouch.Foundation.NSPredicateSupport_NSMutableArray.FilterUsingPredicate(MonoTouch.Foundation.NSMutableArray,MonoTouch.Foundation.NSPredicate)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSMutableOrderedSet" />
      </Targets>
      <Member MemberName="FilterUsingPredicate">
        <MemberSignature Language="C#" Value="public static void FilterUsingPredicate (this MonoTouch.Foundation.NSMutableOrderedSet This, MonoTouch.Foundation.NSPredicate p);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FilterUsingPredicate(class MonoTouch.Foundation.NSMutableOrderedSet This, class MonoTouch.Foundation.NSPredicate p) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSMutableOrderedSet" RefType="this" />
          <Parameter Name="p" Type="MonoTouch.Foundation.NSPredicate" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="p">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSPredicateSupport_NSMutableOrderedSet" Member="M:MonoTouch.Foundation.NSPredicateSupport_NSMutableOrderedSet.FilterUsingPredicate(MonoTouch.Foundation.NSMutableOrderedSet,MonoTouch.Foundation.NSPredicate)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSMutableSet" />
      </Targets>
      <Member MemberName="FilterUsingPredicate">
        <MemberSignature Language="C#" Value="public static void FilterUsingPredicate (this MonoTouch.Foundation.NSMutableSet This, MonoTouch.Foundation.NSPredicate predicate);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FilterUsingPredicate(class MonoTouch.Foundation.NSMutableSet This, class MonoTouch.Foundation.NSPredicate predicate) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSMutableSet" RefType="this" />
          <Parameter Name="predicate" Type="MonoTouch.Foundation.NSPredicate" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="predicate">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSPredicateSupport_NSMutableSet" Member="M:MonoTouch.Foundation.NSPredicateSupport_NSMutableSet.FilterUsingPredicate(MonoTouch.Foundation.NSMutableSet,MonoTouch.Foundation.NSPredicate)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSOrderedSet" />
      </Targets>
      <Member MemberName="FilterUsingPredicate">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSOrderedSet FilterUsingPredicate (this MonoTouch.Foundation.NSOrderedSet This, MonoTouch.Foundation.NSPredicate p);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSOrderedSet FilterUsingPredicate(class MonoTouch.Foundation.NSOrderedSet This, class MonoTouch.Foundation.NSPredicate p) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSOrderedSet</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSOrderedSet" RefType="this" />
          <Parameter Name="p" Type="MonoTouch.Foundation.NSPredicate" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="p">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSPredicateSupport_NSOrderedSet" Member="M:MonoTouch.Foundation.NSPredicateSupport_NSOrderedSet.FilterUsingPredicate(MonoTouch.Foundation.NSOrderedSet,MonoTouch.Foundation.NSPredicate)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSSet" />
      </Targets>
      <Member MemberName="FilterUsingPredicate">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSSet FilterUsingPredicate (this MonoTouch.Foundation.NSSet This, MonoTouch.Foundation.NSPredicate predicate);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSSet FilterUsingPredicate(class MonoTouch.Foundation.NSSet This, class MonoTouch.Foundation.NSPredicate predicate) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSSet</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSSet" RefType="this" />
          <Parameter Name="predicate" Type="MonoTouch.Foundation.NSPredicate" />
        </Parameters>
        <Docs>
          <param name="This">The nsset on which the predicate will run.</param>
          <param name="predicate">The predicate used to filter the
	elements of the set.</param>
          <summary>Returns a new set that contains the elements that
	match the predicate.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSPredicateSupport_NSSet" Member="M:MonoTouch.Foundation.NSPredicateSupport_NSSet.FilterUsingPredicate(MonoTouch.Foundation.NSSet,MonoTouch.Foundation.NSPredicate)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSProgressReporting" />
      </Targets>
      <Member MemberName="GetProgress">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSProgress GetProgress (this MonoTouch.Foundation.INSProgressReporting This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSProgress GetProgress(class MonoTouch.Foundation.INSProgressReporting This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSProgress</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSProgressReporting" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSProgressReporting_Extensions" Member="M:MonoTouch.Foundation.NSProgressReporting_Extensions.GetProgress(MonoTouch.Foundation.INSProgressReporting)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSMutableArray" />
      </Targets>
      <Member MemberName="SortUsingDescriptors">
        <MemberSignature Language="C#" Value="public static void SortUsingDescriptors (this MonoTouch.Foundation.NSMutableArray This, MonoTouch.Foundation.NSSortDescriptor[] sortDescriptors);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SortUsingDescriptors(class MonoTouch.Foundation.NSMutableArray This, class MonoTouch.Foundation.NSSortDescriptor[] sortDescriptors) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSMutableArray" RefType="this" />
          <Parameter Name="sortDescriptors" Type="MonoTouch.Foundation.NSSortDescriptor[]" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="sortDescriptors">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSSortDescriptorSorting_NSMutableArray" Member="M:MonoTouch.Foundation.NSSortDescriptorSorting_NSMutableArray.SortUsingDescriptors(MonoTouch.Foundation.NSMutableArray,MonoTouch.Foundation.NSSortDescriptor[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSStreamDelegate" />
      </Targets>
      <Member MemberName="HandleEvent">
        <MemberSignature Language="C#" Value="public static void HandleEvent (this MonoTouch.Foundation.INSStreamDelegate This, MonoTouch.Foundation.NSStream theStream, MonoTouch.Foundation.NSStreamEvent streamEvent);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleEvent(class MonoTouch.Foundation.INSStreamDelegate This, class MonoTouch.Foundation.NSStream theStream, valuetype MonoTouch.Foundation.NSStreamEvent streamEvent) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSStreamDelegate" RefType="this" />
          <Parameter Name="theStream" Type="MonoTouch.Foundation.NSStream" />
          <Parameter Name="streamEvent" Type="MonoTouch.Foundation.NSStreamEvent" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="theStream">To be added.</param>
          <param name="streamEvent">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSStreamDelegate_Extensions" Member="M:MonoTouch.Foundation.NSStreamDelegate_Extensions.HandleEvent(MonoTouch.Foundation.INSStreamDelegate,MonoTouch.Foundation.NSStream,MonoTouch.Foundation.NSStreamEvent)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSUrl" />
      </Targets>
      <Member MemberName="CheckPromisedItemIsReachable">
        <MemberSignature Language="C#" Value="public static bool CheckPromisedItemIsReachable (this MonoTouch.Foundation.NSUrl This, out MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CheckPromisedItemIsReachable(class MonoTouch.Foundation.NSUrl This, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSUrl" RefType="this" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrl_PromisedItems" Member="M:MonoTouch.Foundation.NSUrl_PromisedItems.CheckPromisedItemIsReachable(MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSError@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSUrl" />
      </Targets>
      <Member MemberName="GetPromisedItemResourceValue">
        <MemberSignature Language="C#" Value="public static bool GetPromisedItemResourceValue (this MonoTouch.Foundation.NSUrl This, out MonoTouch.Foundation.NSObject value, MonoTouch.Foundation.NSString key, out MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetPromisedItemResourceValue(class MonoTouch.Foundation.NSUrl This, class MonoTouch.Foundation.NSObject value, class MonoTouch.Foundation.NSString key, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSUrl" RefType="this" />
          <Parameter Name="value" Type="MonoTouch.Foundation.NSObject&amp;" RefType="out" />
          <Parameter Name="key" Type="MonoTouch.Foundation.NSString" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="value">To be added.</param>
          <param name="key">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrl_PromisedItems" Member="M:MonoTouch.Foundation.NSUrl_PromisedItems.GetPromisedItemResourceValue(MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSObject@,MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSError@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSUrl" />
      </Targets>
      <Member MemberName="GetPromisedItemResourceValues">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSDictionary GetPromisedItemResourceValues (this MonoTouch.Foundation.NSUrl This, MonoTouch.Foundation.NSString[] keys, out MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSDictionary GetPromisedItemResourceValues(class MonoTouch.Foundation.NSUrl This, class MonoTouch.Foundation.NSString[] keys, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSDictionary</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSUrl" RefType="this" />
          <Parameter Name="keys" Type="MonoTouch.Foundation.NSString[]" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="keys">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrl_PromisedItems" Member="M:MonoTouch.Foundation.NSUrl_PromisedItems.GetPromisedItemResourceValues(MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSString[],MonoTouch.Foundation.NSError@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSURLAuthenticationChallengeSender" />
      </Targets>
      <Member MemberName="PerformDefaultHandling" apistyle="unified">
        <MemberSignature Language="C#" Value="public static void PerformDefaultHandling (this MonoTouch.Foundation.INSURLAuthenticationChallengeSender This, MonoTouch.Foundation.NSUrlAuthenticationChallenge challenge);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformDefaultHandling(class MonoTouch.Foundation.INSURLAuthenticationChallengeSender This, class MonoTouch.Foundation.NSUrlAuthenticationChallenge challenge) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSURLAuthenticationChallengeSender" RefType="this" />
          <Parameter Name="challenge" Type="MonoTouch.Foundation.NSUrlAuthenticationChallenge" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="challenge">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSURLAuthenticationChallengeSender_Extensions" Member="M:MonoTouch.Foundation.NSURLAuthenticationChallengeSender_Extensions.PerformDefaultHandling(MonoTouch.Foundation.INSURLAuthenticationChallengeSender,MonoTouch.Foundation.NSUrlAuthenticationChallenge)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSURLAuthenticationChallengeSender" />
      </Targets>
      <Member MemberName="RejectProtectionSpaceAndContinue" apistyle="unified">
        <MemberSignature Language="C#" Value="public static void RejectProtectionSpaceAndContinue (this MonoTouch.Foundation.INSURLAuthenticationChallengeSender This, MonoTouch.Foundation.NSUrlAuthenticationChallenge challenge);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RejectProtectionSpaceAndContinue(class MonoTouch.Foundation.INSURLAuthenticationChallengeSender This, class MonoTouch.Foundation.NSUrlAuthenticationChallenge challenge) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSURLAuthenticationChallengeSender" RefType="this" />
          <Parameter Name="challenge" Type="MonoTouch.Foundation.NSUrlAuthenticationChallenge" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="challenge">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSURLAuthenticationChallengeSender_Extensions" Member="M:MonoTouch.Foundation.NSURLAuthenticationChallengeSender_Extensions.RejectProtectionSpaceAndContinue(MonoTouch.Foundation.INSURLAuthenticationChallengeSender,MonoTouch.Foundation.NSUrlAuthenticationChallenge)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlConnectionDataDelegate" />
      </Targets>
      <Member MemberName="FinishedLoading" apistyle="unified">
        <MemberSignature Language="C#" Value="public static void FinishedLoading (this MonoTouch.Foundation.INSUrlConnectionDataDelegate This, MonoTouch.Foundation.NSUrlConnection connection);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FinishedLoading(class MonoTouch.Foundation.INSUrlConnectionDataDelegate This, class MonoTouch.Foundation.NSUrlConnection connection) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlConnectionDataDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.Foundation.NSUrlConnection" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="connection">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlConnectionDataDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlConnectionDataDelegate_Extensions.FinishedLoading(MonoTouch.Foundation.INSUrlConnectionDataDelegate,MonoTouch.Foundation.NSUrlConnection)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlConnectionDataDelegate" />
      </Targets>
      <Member MemberName="NeedNewBodyStream" apistyle="unified">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSInputStream NeedNewBodyStream (this MonoTouch.Foundation.INSUrlConnectionDataDelegate This, MonoTouch.Foundation.NSUrlConnection connection, MonoTouch.Foundation.NSUrlRequest request);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSInputStream NeedNewBodyStream(class MonoTouch.Foundation.INSUrlConnectionDataDelegate This, class MonoTouch.Foundation.NSUrlConnection connection, class MonoTouch.Foundation.NSUrlRequest request) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSInputStream</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlConnectionDataDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.Foundation.NSUrlConnection" />
          <Parameter Name="request" Type="MonoTouch.Foundation.NSUrlRequest" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="connection">To be added.</param>
          <param name="request">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlConnectionDataDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlConnectionDataDelegate_Extensions.NeedNewBodyStream(MonoTouch.Foundation.INSUrlConnectionDataDelegate,MonoTouch.Foundation.NSUrlConnection,MonoTouch.Foundation.NSUrlRequest)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlConnectionDataDelegate" />
      </Targets>
      <Member MemberName="ReceivedData" apistyle="unified">
        <MemberSignature Language="C#" Value="public static void ReceivedData (this MonoTouch.Foundation.INSUrlConnectionDataDelegate This, MonoTouch.Foundation.NSUrlConnection connection, MonoTouch.Foundation.NSData data);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceivedData(class MonoTouch.Foundation.INSUrlConnectionDataDelegate This, class MonoTouch.Foundation.NSUrlConnection connection, class MonoTouch.Foundation.NSData data) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlConnectionDataDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.Foundation.NSUrlConnection" />
          <Parameter Name="data" Type="MonoTouch.Foundation.NSData" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="connection">To be added.</param>
          <param name="data">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlConnectionDataDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlConnectionDataDelegate_Extensions.ReceivedData(MonoTouch.Foundation.INSUrlConnectionDataDelegate,MonoTouch.Foundation.NSUrlConnection,MonoTouch.Foundation.NSData)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlConnectionDataDelegate" />
      </Targets>
      <Member MemberName="ReceivedResponse" apistyle="unified">
        <MemberSignature Language="C#" Value="public static void ReceivedResponse (this MonoTouch.Foundation.INSUrlConnectionDataDelegate This, MonoTouch.Foundation.NSUrlConnection connection, MonoTouch.Foundation.NSUrlResponse response);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceivedResponse(class MonoTouch.Foundation.INSUrlConnectionDataDelegate This, class MonoTouch.Foundation.NSUrlConnection connection, class MonoTouch.Foundation.NSUrlResponse response) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlConnectionDataDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.Foundation.NSUrlConnection" />
          <Parameter Name="response" Type="MonoTouch.Foundation.NSUrlResponse" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="connection">To be added.</param>
          <param name="response">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlConnectionDataDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlConnectionDataDelegate_Extensions.ReceivedResponse(MonoTouch.Foundation.INSUrlConnectionDataDelegate,MonoTouch.Foundation.NSUrlConnection,MonoTouch.Foundation.NSUrlResponse)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlConnectionDataDelegate" />
      </Targets>
      <Member MemberName="SentBodyData" apistyle="unified">
        <MemberSignature Language="C#" Value="public static void SentBodyData (this MonoTouch.Foundation.INSUrlConnectionDataDelegate This, MonoTouch.Foundation.NSUrlConnection connection, nint bytesWritten, nint totalBytesWritten, nint totalBytesExpectedToWrite);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SentBodyData(class MonoTouch.Foundation.INSUrlConnectionDataDelegate This, class MonoTouch.Foundation.NSUrlConnection connection, valuetype System.nint bytesWritten, valuetype System.nint totalBytesWritten, valuetype System.nint totalBytesExpectedToWrite) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlConnectionDataDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.Foundation.NSUrlConnection" />
          <Parameter Name="bytesWritten" Type="System.nint" />
          <Parameter Name="totalBytesWritten" Type="System.nint" />
          <Parameter Name="totalBytesExpectedToWrite" Type="System.nint" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="connection">To be added.</param>
          <param name="bytesWritten">To be added.</param>
          <param name="totalBytesWritten">To be added.</param>
          <param name="totalBytesExpectedToWrite">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlConnectionDataDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlConnectionDataDelegate_Extensions.SentBodyData(MonoTouch.Foundation.INSUrlConnectionDataDelegate,MonoTouch.Foundation.NSUrlConnection,System.nint,System.nint,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlConnectionDataDelegate" />
      </Targets>
      <Member MemberName="WillCacheResponse" apistyle="unified">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSCachedUrlResponse WillCacheResponse (this MonoTouch.Foundation.INSUrlConnectionDataDelegate This, MonoTouch.Foundation.NSUrlConnection connection, MonoTouch.Foundation.NSCachedUrlResponse cachedResponse);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSCachedUrlResponse WillCacheResponse(class MonoTouch.Foundation.INSUrlConnectionDataDelegate This, class MonoTouch.Foundation.NSUrlConnection connection, class MonoTouch.Foundation.NSCachedUrlResponse cachedResponse) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSCachedUrlResponse</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlConnectionDataDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.Foundation.NSUrlConnection" />
          <Parameter Name="cachedResponse" Type="MonoTouch.Foundation.NSCachedUrlResponse" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="connection">To be added.</param>
          <param name="cachedResponse">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlConnectionDataDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlConnectionDataDelegate_Extensions.WillCacheResponse(MonoTouch.Foundation.INSUrlConnectionDataDelegate,MonoTouch.Foundation.NSUrlConnection,MonoTouch.Foundation.NSCachedUrlResponse)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlConnectionDataDelegate" />
      </Targets>
      <Member MemberName="WillSendRequest" apistyle="unified">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSUrlRequest WillSendRequest (this MonoTouch.Foundation.INSUrlConnectionDataDelegate This, MonoTouch.Foundation.NSUrlConnection connection, MonoTouch.Foundation.NSUrlRequest request, MonoTouch.Foundation.NSUrlResponse response);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSUrlRequest WillSendRequest(class MonoTouch.Foundation.INSUrlConnectionDataDelegate This, class MonoTouch.Foundation.NSUrlConnection connection, class MonoTouch.Foundation.NSUrlRequest request, class MonoTouch.Foundation.NSUrlResponse response) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSUrlRequest</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlConnectionDataDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.Foundation.NSUrlConnection" />
          <Parameter Name="request" Type="MonoTouch.Foundation.NSUrlRequest" />
          <Parameter Name="response" Type="MonoTouch.Foundation.NSUrlResponse" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="connection">To be added.</param>
          <param name="request">To be added.</param>
          <param name="response">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlConnectionDataDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlConnectionDataDelegate_Extensions.WillSendRequest(MonoTouch.Foundation.INSUrlConnectionDataDelegate,MonoTouch.Foundation.NSUrlConnection,MonoTouch.Foundation.NSUrlRequest,MonoTouch.Foundation.NSUrlResponse)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlConnectionDelegate" />
      </Targets>
      <Member MemberName="CanAuthenticateAgainstProtectionSpace">
        <MemberSignature Language="C#" Value="public static bool CanAuthenticateAgainstProtectionSpace (this MonoTouch.Foundation.INSUrlConnectionDelegate This, MonoTouch.Foundation.NSUrlConnection connection, MonoTouch.Foundation.NSUrlProtectionSpace protectionSpace);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanAuthenticateAgainstProtectionSpace(class MonoTouch.Foundation.INSUrlConnectionDelegate This, class MonoTouch.Foundation.NSUrlConnection connection, class MonoTouch.Foundation.NSUrlProtectionSpace protectionSpace) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlConnectionDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.Foundation.NSUrlConnection" />
          <Parameter Name="protectionSpace" Type="MonoTouch.Foundation.NSUrlProtectionSpace" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="connection">To be added.</param>
          <param name="protectionSpace">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlConnectionDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlConnectionDelegate_Extensions.CanAuthenticateAgainstProtectionSpace(MonoTouch.Foundation.INSUrlConnectionDelegate,MonoTouch.Foundation.NSUrlConnection,MonoTouch.Foundation.NSUrlProtectionSpace)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlConnectionDelegate" />
      </Targets>
      <Member MemberName="CanceledAuthenticationChallenge">
        <MemberSignature Language="C#" Value="public static void CanceledAuthenticationChallenge (this MonoTouch.Foundation.INSUrlConnectionDelegate This, MonoTouch.Foundation.NSUrlConnection connection, MonoTouch.Foundation.NSUrlAuthenticationChallenge challenge);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CanceledAuthenticationChallenge(class MonoTouch.Foundation.INSUrlConnectionDelegate This, class MonoTouch.Foundation.NSUrlConnection connection, class MonoTouch.Foundation.NSUrlAuthenticationChallenge challenge) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlConnectionDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.Foundation.NSUrlConnection" />
          <Parameter Name="challenge" Type="MonoTouch.Foundation.NSUrlAuthenticationChallenge" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="connection">To be added.</param>
          <param name="challenge">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlConnectionDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlConnectionDelegate_Extensions.CanceledAuthenticationChallenge(MonoTouch.Foundation.INSUrlConnectionDelegate,MonoTouch.Foundation.NSUrlConnection,MonoTouch.Foundation.NSUrlAuthenticationChallenge)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlConnectionDelegate" />
      </Targets>
      <Member MemberName="ConnectionShouldUseCredentialStorage">
        <MemberSignature Language="C#" Value="public static bool ConnectionShouldUseCredentialStorage (this MonoTouch.Foundation.INSUrlConnectionDelegate This, MonoTouch.Foundation.NSUrlConnection connection);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ConnectionShouldUseCredentialStorage(class MonoTouch.Foundation.INSUrlConnectionDelegate This, class MonoTouch.Foundation.NSUrlConnection connection) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlConnectionDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.Foundation.NSUrlConnection" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="connection">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlConnectionDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlConnectionDelegate_Extensions.ConnectionShouldUseCredentialStorage(MonoTouch.Foundation.INSUrlConnectionDelegate,MonoTouch.Foundation.NSUrlConnection)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlConnectionDelegate" />
      </Targets>
      <Member MemberName="FailedWithError">
        <MemberSignature Language="C#" Value="public static void FailedWithError (this MonoTouch.Foundation.INSUrlConnectionDelegate This, MonoTouch.Foundation.NSUrlConnection connection, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FailedWithError(class MonoTouch.Foundation.INSUrlConnectionDelegate This, class MonoTouch.Foundation.NSUrlConnection connection, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlConnectionDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.Foundation.NSUrlConnection" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="connection">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlConnectionDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlConnectionDelegate_Extensions.FailedWithError(MonoTouch.Foundation.INSUrlConnectionDelegate,MonoTouch.Foundation.NSUrlConnection,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlConnectionDelegate" />
      </Targets>
      <Member MemberName="ReceivedAuthenticationChallenge">
        <MemberSignature Language="C#" Value="public static void ReceivedAuthenticationChallenge (this MonoTouch.Foundation.INSUrlConnectionDelegate This, MonoTouch.Foundation.NSUrlConnection connection, MonoTouch.Foundation.NSUrlAuthenticationChallenge challenge);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceivedAuthenticationChallenge(class MonoTouch.Foundation.INSUrlConnectionDelegate This, class MonoTouch.Foundation.NSUrlConnection connection, class MonoTouch.Foundation.NSUrlAuthenticationChallenge challenge) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlConnectionDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.Foundation.NSUrlConnection" />
          <Parameter Name="challenge" Type="MonoTouch.Foundation.NSUrlAuthenticationChallenge" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="connection">To be added.</param>
          <param name="challenge">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlConnectionDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlConnectionDelegate_Extensions.ReceivedAuthenticationChallenge(MonoTouch.Foundation.INSUrlConnectionDelegate,MonoTouch.Foundation.NSUrlConnection,MonoTouch.Foundation.NSUrlAuthenticationChallenge)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlConnectionDelegate" />
      </Targets>
      <Member MemberName="WillSendRequestForAuthenticationChallenge">
        <MemberSignature Language="C#" Value="public static void WillSendRequestForAuthenticationChallenge (this MonoTouch.Foundation.INSUrlConnectionDelegate This, MonoTouch.Foundation.NSUrlConnection connection, MonoTouch.Foundation.NSUrlAuthenticationChallenge challenge);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillSendRequestForAuthenticationChallenge(class MonoTouch.Foundation.INSUrlConnectionDelegate This, class MonoTouch.Foundation.NSUrlConnection connection, class MonoTouch.Foundation.NSUrlAuthenticationChallenge challenge) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlConnectionDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.Foundation.NSUrlConnection" />
          <Parameter Name="challenge" Type="MonoTouch.Foundation.NSUrlAuthenticationChallenge" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="connection">To be added.</param>
          <param name="challenge">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlConnectionDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlConnectionDelegate_Extensions.WillSendRequestForAuthenticationChallenge(MonoTouch.Foundation.INSUrlConnectionDelegate,MonoTouch.Foundation.NSUrlConnection,MonoTouch.Foundation.NSUrlAuthenticationChallenge)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlConnectionDownloadDelegate" />
      </Targets>
      <Member MemberName="ResumedDownloading">
        <MemberSignature Language="C#" Value="public static void ResumedDownloading (this MonoTouch.Foundation.INSUrlConnectionDownloadDelegate This, MonoTouch.Foundation.NSUrlConnection connection, long totalBytesWritten, long expectedTotalBytes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResumedDownloading(class MonoTouch.Foundation.INSUrlConnectionDownloadDelegate This, class MonoTouch.Foundation.NSUrlConnection connection, int64 totalBytesWritten, int64 expectedTotalBytes) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlConnectionDownloadDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.Foundation.NSUrlConnection" />
          <Parameter Name="totalBytesWritten" Type="System.Int64" />
          <Parameter Name="expectedTotalBytes" Type="System.Int64" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="connection">To be added.</param>
          <param name="totalBytesWritten">To be added.</param>
          <param name="expectedTotalBytes">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlConnectionDownloadDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlConnectionDownloadDelegate_Extensions.ResumedDownloading(MonoTouch.Foundation.INSUrlConnectionDownloadDelegate,MonoTouch.Foundation.NSUrlConnection,System.Int64,System.Int64)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlConnectionDownloadDelegate" />
      </Targets>
      <Member MemberName="WroteData">
        <MemberSignature Language="C#" Value="public static void WroteData (this MonoTouch.Foundation.INSUrlConnectionDownloadDelegate This, MonoTouch.Foundation.NSUrlConnection connection, long bytesWritten, long totalBytesWritten, long expectedTotalBytes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WroteData(class MonoTouch.Foundation.INSUrlConnectionDownloadDelegate This, class MonoTouch.Foundation.NSUrlConnection connection, int64 bytesWritten, int64 totalBytesWritten, int64 expectedTotalBytes) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlConnectionDownloadDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.Foundation.NSUrlConnection" />
          <Parameter Name="bytesWritten" Type="System.Int64" />
          <Parameter Name="totalBytesWritten" Type="System.Int64" />
          <Parameter Name="expectedTotalBytes" Type="System.Int64" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="connection">To be added.</param>
          <param name="bytesWritten">To be added.</param>
          <param name="totalBytesWritten">To be added.</param>
          <param name="expectedTotalBytes">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlConnectionDownloadDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlConnectionDownloadDelegate_Extensions.WroteData(MonoTouch.Foundation.INSUrlConnectionDownloadDelegate,MonoTouch.Foundation.NSUrlConnection,System.Int64,System.Int64,System.Int64)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionDataDelegate" />
      </Targets>
      <Member MemberName="DidBecomeDownloadTask">
        <MemberSignature Language="C#" Value="public static void DidBecomeDownloadTask (this MonoTouch.Foundation.INSUrlSessionDataDelegate This, MonoTouch.Foundation.NSUrlSession session, MonoTouch.Foundation.NSUrlSessionDataTask dataTask, MonoTouch.Foundation.NSUrlSessionDownloadTask downloadTask);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidBecomeDownloadTask(class MonoTouch.Foundation.INSUrlSessionDataDelegate This, class MonoTouch.Foundation.NSUrlSession session, class MonoTouch.Foundation.NSUrlSessionDataTask dataTask, class MonoTouch.Foundation.NSUrlSessionDownloadTask downloadTask) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionDataDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="dataTask" Type="MonoTouch.Foundation.NSUrlSessionDataTask" />
          <Parameter Name="downloadTask" Type="MonoTouch.Foundation.NSUrlSessionDownloadTask" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="dataTask">To be added.</param>
          <param name="downloadTask">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionDataDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionDataDelegate_Extensions.DidBecomeDownloadTask(MonoTouch.Foundation.INSUrlSessionDataDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlSessionDataTask,MonoTouch.Foundation.NSUrlSessionDownloadTask)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionDataDelegate" />
      </Targets>
      <Member MemberName="DidBecomeStreamTask">
        <MemberSignature Language="C#" Value="public static void DidBecomeStreamTask (this MonoTouch.Foundation.INSUrlSessionDataDelegate This, MonoTouch.Foundation.NSUrlSession session, MonoTouch.Foundation.NSUrlSessionDataTask dataTask, MonoTouch.Foundation.NSUrlSessionStreamTask streamTask);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidBecomeStreamTask(class MonoTouch.Foundation.INSUrlSessionDataDelegate This, class MonoTouch.Foundation.NSUrlSession session, class MonoTouch.Foundation.NSUrlSessionDataTask dataTask, class MonoTouch.Foundation.NSUrlSessionStreamTask streamTask) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionDataDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="dataTask" Type="MonoTouch.Foundation.NSUrlSessionDataTask" />
          <Parameter Name="streamTask" Type="MonoTouch.Foundation.NSUrlSessionStreamTask" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="dataTask">To be added.</param>
          <param name="streamTask">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionDataDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionDataDelegate_Extensions.DidBecomeStreamTask(MonoTouch.Foundation.INSUrlSessionDataDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlSessionDataTask,MonoTouch.Foundation.NSUrlSessionStreamTask)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionDataDelegate" />
      </Targets>
      <Member MemberName="DidReceiveData">
        <MemberSignature Language="C#" Value="public static void DidReceiveData (this MonoTouch.Foundation.INSUrlSessionDataDelegate This, MonoTouch.Foundation.NSUrlSession session, MonoTouch.Foundation.NSUrlSessionDataTask dataTask, MonoTouch.Foundation.NSData data);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveData(class MonoTouch.Foundation.INSUrlSessionDataDelegate This, class MonoTouch.Foundation.NSUrlSession session, class MonoTouch.Foundation.NSUrlSessionDataTask dataTask, class MonoTouch.Foundation.NSData data) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionDataDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="dataTask" Type="MonoTouch.Foundation.NSUrlSessionDataTask" />
          <Parameter Name="data" Type="MonoTouch.Foundation.NSData" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="dataTask">To be added.</param>
          <param name="data">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionDataDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionDataDelegate_Extensions.DidReceiveData(MonoTouch.Foundation.INSUrlSessionDataDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlSessionDataTask,MonoTouch.Foundation.NSData)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionDataDelegate" />
      </Targets>
      <Member MemberName="DidReceiveResponse">
        <MemberSignature Language="C#" Value="public static void DidReceiveResponse (this MonoTouch.Foundation.INSUrlSessionDataDelegate This, MonoTouch.Foundation.NSUrlSession session, MonoTouch.Foundation.NSUrlSessionDataTask dataTask, MonoTouch.Foundation.NSUrlResponse response, Action&lt;MonoTouch.Foundation.NSUrlSessionResponseDisposition&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveResponse(class MonoTouch.Foundation.INSUrlSessionDataDelegate This, class MonoTouch.Foundation.NSUrlSession session, class MonoTouch.Foundation.NSUrlSessionDataTask dataTask, class MonoTouch.Foundation.NSUrlResponse response, class System.Action`1&lt;valuetype MonoTouch.Foundation.NSUrlSessionResponseDisposition&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionDataDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="dataTask" Type="MonoTouch.Foundation.NSUrlSessionDataTask" />
          <Parameter Name="response" Type="MonoTouch.Foundation.NSUrlResponse" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSUrlSessionResponseDisposition&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V25))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="dataTask">To be added.</param>
          <param name="response">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionDataDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionDataDelegate_Extensions.DidReceiveResponse(MonoTouch.Foundation.INSUrlSessionDataDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlSessionDataTask,MonoTouch.Foundation.NSUrlResponse,System.Action{MonoTouch.Foundation.NSUrlSessionResponseDisposition})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionDataDelegate" />
      </Targets>
      <Member MemberName="WillCacheResponse">
        <MemberSignature Language="C#" Value="public static void WillCacheResponse (this MonoTouch.Foundation.INSUrlSessionDataDelegate This, MonoTouch.Foundation.NSUrlSession session, MonoTouch.Foundation.NSUrlSessionDataTask dataTask, MonoTouch.Foundation.NSCachedUrlResponse proposedResponse, Action&lt;MonoTouch.Foundation.NSCachedUrlResponse&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillCacheResponse(class MonoTouch.Foundation.INSUrlSessionDataDelegate This, class MonoTouch.Foundation.NSUrlSession session, class MonoTouch.Foundation.NSUrlSessionDataTask dataTask, class MonoTouch.Foundation.NSCachedUrlResponse proposedResponse, class System.Action`1&lt;class MonoTouch.Foundation.NSCachedUrlResponse&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionDataDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="dataTask" Type="MonoTouch.Foundation.NSUrlSessionDataTask" />
          <Parameter Name="proposedResponse" Type="MonoTouch.Foundation.NSCachedUrlResponse" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSCachedUrlResponse&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V21))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="dataTask">To be added.</param>
          <param name="proposedResponse">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionDataDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionDataDelegate_Extensions.WillCacheResponse(MonoTouch.Foundation.INSUrlSessionDataDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlSessionDataTask,MonoTouch.Foundation.NSCachedUrlResponse,System.Action{MonoTouch.Foundation.NSCachedUrlResponse})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionDelegate" />
      </Targets>
      <Member MemberName="DidBecomeInvalid">
        <MemberSignature Language="C#" Value="public static void DidBecomeInvalid (this MonoTouch.Foundation.INSUrlSessionDelegate This, MonoTouch.Foundation.NSUrlSession session, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidBecomeInvalid(class MonoTouch.Foundation.INSUrlSessionDelegate This, class MonoTouch.Foundation.NSUrlSession session, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionDelegate_Extensions.DidBecomeInvalid(MonoTouch.Foundation.INSUrlSessionDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionDelegate" />
      </Targets>
      <Member MemberName="DidFinishEventsForBackgroundSession">
        <MemberSignature Language="C#" Value="public static void DidFinishEventsForBackgroundSession (this MonoTouch.Foundation.INSUrlSessionDelegate This, MonoTouch.Foundation.NSUrlSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinishEventsForBackgroundSession(class MonoTouch.Foundation.INSUrlSessionDelegate This, class MonoTouch.Foundation.NSUrlSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionDelegate_Extensions.DidFinishEventsForBackgroundSession(MonoTouch.Foundation.INSUrlSessionDelegate,MonoTouch.Foundation.NSUrlSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionDelegate" />
      </Targets>
      <Member MemberName="DidReceiveChallenge">
        <MemberSignature Language="C#" Value="public static void DidReceiveChallenge (this MonoTouch.Foundation.INSUrlSessionDelegate This, MonoTouch.Foundation.NSUrlSession session, MonoTouch.Foundation.NSUrlAuthenticationChallenge challenge, Action&lt;MonoTouch.Foundation.NSUrlSessionAuthChallengeDisposition,MonoTouch.Foundation.NSUrlCredential&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveChallenge(class MonoTouch.Foundation.INSUrlSessionDelegate This, class MonoTouch.Foundation.NSUrlSession session, class MonoTouch.Foundation.NSUrlAuthenticationChallenge challenge, class System.Action`2&lt;valuetype MonoTouch.Foundation.NSUrlSessionAuthChallengeDisposition, class MonoTouch.Foundation.NSUrlCredential&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="challenge" Type="MonoTouch.Foundation.NSUrlAuthenticationChallenge" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSUrlSessionAuthChallengeDisposition,MonoTouch.Foundation.NSUrlCredential&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity2V33))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="challenge">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionDelegate_Extensions.DidReceiveChallenge(MonoTouch.Foundation.INSUrlSessionDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlAuthenticationChallenge,System.Action{MonoTouch.Foundation.NSUrlSessionAuthChallengeDisposition,MonoTouch.Foundation.NSUrlCredential})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionDownloadDelegate" />
      </Targets>
      <Member MemberName="DidResume">
        <MemberSignature Language="C#" Value="public static void DidResume (this MonoTouch.Foundation.INSUrlSessionDownloadDelegate This, MonoTouch.Foundation.NSUrlSession session, MonoTouch.Foundation.NSUrlSessionDownloadTask downloadTask, long resumeFileOffset, long expectedTotalBytes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidResume(class MonoTouch.Foundation.INSUrlSessionDownloadDelegate This, class MonoTouch.Foundation.NSUrlSession session, class MonoTouch.Foundation.NSUrlSessionDownloadTask downloadTask, int64 resumeFileOffset, int64 expectedTotalBytes) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionDownloadDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="downloadTask" Type="MonoTouch.Foundation.NSUrlSessionDownloadTask" />
          <Parameter Name="resumeFileOffset" Type="System.Int64" />
          <Parameter Name="expectedTotalBytes" Type="System.Int64" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="downloadTask">To be added.</param>
          <param name="resumeFileOffset">To be added.</param>
          <param name="expectedTotalBytes">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionDownloadDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionDownloadDelegate_Extensions.DidResume(MonoTouch.Foundation.INSUrlSessionDownloadDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlSessionDownloadTask,System.Int64,System.Int64)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionDownloadDelegate" />
      </Targets>
      <Member MemberName="DidWriteData">
        <MemberSignature Language="C#" Value="public static void DidWriteData (this MonoTouch.Foundation.INSUrlSessionDownloadDelegate This, MonoTouch.Foundation.NSUrlSession session, MonoTouch.Foundation.NSUrlSessionDownloadTask downloadTask, long bytesWritten, long totalBytesWritten, long totalBytesExpectedToWrite);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidWriteData(class MonoTouch.Foundation.INSUrlSessionDownloadDelegate This, class MonoTouch.Foundation.NSUrlSession session, class MonoTouch.Foundation.NSUrlSessionDownloadTask downloadTask, int64 bytesWritten, int64 totalBytesWritten, int64 totalBytesExpectedToWrite) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionDownloadDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="downloadTask" Type="MonoTouch.Foundation.NSUrlSessionDownloadTask" />
          <Parameter Name="bytesWritten" Type="System.Int64" />
          <Parameter Name="totalBytesWritten" Type="System.Int64" />
          <Parameter Name="totalBytesExpectedToWrite" Type="System.Int64" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="downloadTask">To be added.</param>
          <param name="bytesWritten">To be added.</param>
          <param name="totalBytesWritten">To be added.</param>
          <param name="totalBytesExpectedToWrite">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionDownloadDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionDownloadDelegate_Extensions.DidWriteData(MonoTouch.Foundation.INSUrlSessionDownloadDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlSessionDownloadTask,System.Int64,System.Int64,System.Int64)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionStreamDelegate" />
      </Targets>
      <Member MemberName="BetterRouteDiscovered">
        <MemberSignature Language="C#" Value="public static void BetterRouteDiscovered (this MonoTouch.Foundation.INSUrlSessionStreamDelegate This, MonoTouch.Foundation.NSUrlSession session, MonoTouch.Foundation.NSUrlSessionStreamTask streamTask);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BetterRouteDiscovered(class MonoTouch.Foundation.INSUrlSessionStreamDelegate This, class MonoTouch.Foundation.NSUrlSession session, class MonoTouch.Foundation.NSUrlSessionStreamTask streamTask) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionStreamDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="streamTask" Type="MonoTouch.Foundation.NSUrlSessionStreamTask" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="streamTask">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionStreamDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionStreamDelegate_Extensions.BetterRouteDiscovered(MonoTouch.Foundation.INSUrlSessionStreamDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlSessionStreamTask)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionStreamDelegate" />
      </Targets>
      <Member MemberName="CompletedTaskCaptureStreams">
        <MemberSignature Language="C#" Value="public static void CompletedTaskCaptureStreams (this MonoTouch.Foundation.INSUrlSessionStreamDelegate This, MonoTouch.Foundation.NSUrlSession session, MonoTouch.Foundation.NSUrlSessionStreamTask streamTask, MonoTouch.Foundation.NSInputStream inputStream, MonoTouch.Foundation.NSOutputStream outputStream);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompletedTaskCaptureStreams(class MonoTouch.Foundation.INSUrlSessionStreamDelegate This, class MonoTouch.Foundation.NSUrlSession session, class MonoTouch.Foundation.NSUrlSessionStreamTask streamTask, class MonoTouch.Foundation.NSInputStream inputStream, class MonoTouch.Foundation.NSOutputStream outputStream) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionStreamDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="streamTask" Type="MonoTouch.Foundation.NSUrlSessionStreamTask" />
          <Parameter Name="inputStream" Type="MonoTouch.Foundation.NSInputStream" />
          <Parameter Name="outputStream" Type="MonoTouch.Foundation.NSOutputStream" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="streamTask">To be added.</param>
          <param name="inputStream">To be added.</param>
          <param name="outputStream">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionStreamDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionStreamDelegate_Extensions.CompletedTaskCaptureStreams(MonoTouch.Foundation.INSUrlSessionStreamDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlSessionStreamTask,MonoTouch.Foundation.NSInputStream,MonoTouch.Foundation.NSOutputStream)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionStreamDelegate" />
      </Targets>
      <Member MemberName="ReadClosed">
        <MemberSignature Language="C#" Value="public static void ReadClosed (this MonoTouch.Foundation.INSUrlSessionStreamDelegate This, MonoTouch.Foundation.NSUrlSession session, MonoTouch.Foundation.NSUrlSessionStreamTask streamTask);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReadClosed(class MonoTouch.Foundation.INSUrlSessionStreamDelegate This, class MonoTouch.Foundation.NSUrlSession session, class MonoTouch.Foundation.NSUrlSessionStreamTask streamTask) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionStreamDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="streamTask" Type="MonoTouch.Foundation.NSUrlSessionStreamTask" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="streamTask">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionStreamDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionStreamDelegate_Extensions.ReadClosed(MonoTouch.Foundation.INSUrlSessionStreamDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlSessionStreamTask)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionStreamDelegate" />
      </Targets>
      <Member MemberName="WriteClosed">
        <MemberSignature Language="C#" Value="public static void WriteClosed (this MonoTouch.Foundation.INSUrlSessionStreamDelegate This, MonoTouch.Foundation.NSUrlSession session, MonoTouch.Foundation.NSUrlSessionStreamTask streamTask);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteClosed(class MonoTouch.Foundation.INSUrlSessionStreamDelegate This, class MonoTouch.Foundation.NSUrlSession session, class MonoTouch.Foundation.NSUrlSessionStreamTask streamTask) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionStreamDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="streamTask" Type="MonoTouch.Foundation.NSUrlSessionStreamTask" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="streamTask">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionStreamDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionStreamDelegate_Extensions.WriteClosed(MonoTouch.Foundation.INSUrlSessionStreamDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlSessionStreamTask)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionTaskDelegate" />
      </Targets>
      <Member MemberName="DidCompleteWithError">
        <MemberSignature Language="C#" Value="public static void DidCompleteWithError (this MonoTouch.Foundation.INSUrlSessionTaskDelegate This, MonoTouch.Foundation.NSUrlSession session, MonoTouch.Foundation.NSUrlSessionTask task, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidCompleteWithError(class MonoTouch.Foundation.INSUrlSessionTaskDelegate This, class MonoTouch.Foundation.NSUrlSession session, class MonoTouch.Foundation.NSUrlSessionTask task, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionTaskDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="task" Type="MonoTouch.Foundation.NSUrlSessionTask" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="task">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionTaskDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionTaskDelegate_Extensions.DidCompleteWithError(MonoTouch.Foundation.INSUrlSessionTaskDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlSessionTask,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionTaskDelegate" />
      </Targets>
      <Member MemberName="DidReceiveChallenge">
        <MemberSignature Language="C#" Value="public static void DidReceiveChallenge (this MonoTouch.Foundation.INSUrlSessionTaskDelegate This, MonoTouch.Foundation.NSUrlSession session, MonoTouch.Foundation.NSUrlSessionTask task, MonoTouch.Foundation.NSUrlAuthenticationChallenge challenge, Action&lt;MonoTouch.Foundation.NSUrlSessionAuthChallengeDisposition,MonoTouch.Foundation.NSUrlCredential&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveChallenge(class MonoTouch.Foundation.INSUrlSessionTaskDelegate This, class MonoTouch.Foundation.NSUrlSession session, class MonoTouch.Foundation.NSUrlSessionTask task, class MonoTouch.Foundation.NSUrlAuthenticationChallenge challenge, class System.Action`2&lt;valuetype MonoTouch.Foundation.NSUrlSessionAuthChallengeDisposition, class MonoTouch.Foundation.NSUrlCredential&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionTaskDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="task" Type="MonoTouch.Foundation.NSUrlSessionTask" />
          <Parameter Name="challenge" Type="MonoTouch.Foundation.NSUrlAuthenticationChallenge" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSUrlSessionAuthChallengeDisposition,MonoTouch.Foundation.NSUrlCredential&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity2V33))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="task">To be added.</param>
          <param name="challenge">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionTaskDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionTaskDelegate_Extensions.DidReceiveChallenge(MonoTouch.Foundation.INSUrlSessionTaskDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlSessionTask,MonoTouch.Foundation.NSUrlAuthenticationChallenge,System.Action{MonoTouch.Foundation.NSUrlSessionAuthChallengeDisposition,MonoTouch.Foundation.NSUrlCredential})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionTaskDelegate" />
      </Targets>
      <Member MemberName="DidSendBodyData">
        <MemberSignature Language="C#" Value="public static void DidSendBodyData (this MonoTouch.Foundation.INSUrlSessionTaskDelegate This, MonoTouch.Foundation.NSUrlSession session, MonoTouch.Foundation.NSUrlSessionTask task, long bytesSent, long totalBytesSent, long totalBytesExpectedToSend);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSendBodyData(class MonoTouch.Foundation.INSUrlSessionTaskDelegate This, class MonoTouch.Foundation.NSUrlSession session, class MonoTouch.Foundation.NSUrlSessionTask task, int64 bytesSent, int64 totalBytesSent, int64 totalBytesExpectedToSend) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionTaskDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="task" Type="MonoTouch.Foundation.NSUrlSessionTask" />
          <Parameter Name="bytesSent" Type="System.Int64" />
          <Parameter Name="totalBytesSent" Type="System.Int64" />
          <Parameter Name="totalBytesExpectedToSend" Type="System.Int64" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="task">To be added.</param>
          <param name="bytesSent">To be added.</param>
          <param name="totalBytesSent">To be added.</param>
          <param name="totalBytesExpectedToSend">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionTaskDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionTaskDelegate_Extensions.DidSendBodyData(MonoTouch.Foundation.INSUrlSessionTaskDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlSessionTask,System.Int64,System.Int64,System.Int64)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionTaskDelegate" />
      </Targets>
      <Member MemberName="NeedNewBodyStream">
        <MemberSignature Language="C#" Value="public static void NeedNewBodyStream (this MonoTouch.Foundation.INSUrlSessionTaskDelegate This, MonoTouch.Foundation.NSUrlSession session, MonoTouch.Foundation.NSUrlSessionTask task, Action&lt;MonoTouch.Foundation.NSInputStream&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NeedNewBodyStream(class MonoTouch.Foundation.INSUrlSessionTaskDelegate This, class MonoTouch.Foundation.NSUrlSession session, class MonoTouch.Foundation.NSUrlSessionTask task, class System.Action`1&lt;class MonoTouch.Foundation.NSInputStream&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionTaskDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="task" Type="MonoTouch.Foundation.NSUrlSessionTask" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSInputStream&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V24))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="task">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionTaskDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionTaskDelegate_Extensions.NeedNewBodyStream(MonoTouch.Foundation.INSUrlSessionTaskDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlSessionTask,System.Action{MonoTouch.Foundation.NSInputStream})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUrlSessionTaskDelegate" />
      </Targets>
      <Member MemberName="WillPerformHttpRedirection">
        <MemberSignature Language="C#" Value="public static void WillPerformHttpRedirection (this MonoTouch.Foundation.INSUrlSessionTaskDelegate This, MonoTouch.Foundation.NSUrlSession session, MonoTouch.Foundation.NSUrlSessionTask task, MonoTouch.Foundation.NSHttpUrlResponse response, MonoTouch.Foundation.NSUrlRequest newRequest, Action&lt;MonoTouch.Foundation.NSUrlRequest&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillPerformHttpRedirection(class MonoTouch.Foundation.INSUrlSessionTaskDelegate This, class MonoTouch.Foundation.NSUrlSession session, class MonoTouch.Foundation.NSUrlSessionTask task, class MonoTouch.Foundation.NSHttpUrlResponse response, class MonoTouch.Foundation.NSUrlRequest newRequest, class System.Action`1&lt;class MonoTouch.Foundation.NSUrlRequest&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUrlSessionTaskDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.Foundation.NSUrlSession" />
          <Parameter Name="task" Type="MonoTouch.Foundation.NSUrlSessionTask" />
          <Parameter Name="response" Type="MonoTouch.Foundation.NSHttpUrlResponse" />
          <Parameter Name="newRequest" Type="MonoTouch.Foundation.NSUrlRequest" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSUrlRequest&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V23))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="task">To be added.</param>
          <param name="response">To be added.</param>
          <param name="newRequest">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlSessionTaskDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUrlSessionTaskDelegate_Extensions.WillPerformHttpRedirection(MonoTouch.Foundation.INSUrlSessionTaskDelegate,MonoTouch.Foundation.NSUrlSession,MonoTouch.Foundation.NSUrlSessionTask,MonoTouch.Foundation.NSHttpUrlResponse,MonoTouch.Foundation.NSUrlRequest,System.Action{MonoTouch.Foundation.NSUrlRequest})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="CreateStringByAddingPercentEncoding">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString CreateStringByAddingPercentEncoding (this MonoTouch.Foundation.NSString This, MonoTouch.Foundation.NSCharacterSet allowedCharacters);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString CreateStringByAddingPercentEncoding(class MonoTouch.Foundation.NSString This, class MonoTouch.Foundation.NSCharacterSet allowedCharacters) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="allowedCharacters" Type="MonoTouch.Foundation.NSCharacterSet" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="allowedCharacters">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlUtilities_NSString" Member="M:MonoTouch.Foundation.NSUrlUtilities_NSString.CreateStringByAddingPercentEncoding(MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSCharacterSet)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="CreateStringByAddingPercentEscapes">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString CreateStringByAddingPercentEscapes (this MonoTouch.Foundation.NSString This, MonoTouch.Foundation.NSStringEncoding enc);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString CreateStringByAddingPercentEscapes(class MonoTouch.Foundation.NSString This, valuetype MonoTouch.Foundation.NSStringEncoding enc) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="enc" Type="MonoTouch.Foundation.NSStringEncoding" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="enc">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlUtilities_NSString" Member="M:MonoTouch.Foundation.NSUrlUtilities_NSString.CreateStringByAddingPercentEscapes(MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSStringEncoding)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="CreateStringByRemovingPercentEncoding">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString CreateStringByRemovingPercentEncoding (this MonoTouch.Foundation.NSString This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString CreateStringByRemovingPercentEncoding(class MonoTouch.Foundation.NSString This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlUtilities_NSString" Member="M:MonoTouch.Foundation.NSUrlUtilities_NSString.CreateStringByRemovingPercentEncoding(MonoTouch.Foundation.NSString)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="CreateStringByReplacingPercentEscapes">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString CreateStringByReplacingPercentEscapes (this MonoTouch.Foundation.NSString This, MonoTouch.Foundation.NSStringEncoding enc);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString CreateStringByReplacingPercentEscapes(class MonoTouch.Foundation.NSString This, valuetype MonoTouch.Foundation.NSStringEncoding enc) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="enc" Type="MonoTouch.Foundation.NSStringEncoding" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="enc">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUrlUtilities_NSString" Member="M:MonoTouch.Foundation.NSUrlUtilities_NSString.CreateStringByReplacingPercentEscapes(MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSStringEncoding)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUserActivityDelegate" />
      </Targets>
      <Member MemberName="UserActivityReceivedData">
        <MemberSignature Language="C#" Value="public static void UserActivityReceivedData (this MonoTouch.Foundation.INSUserActivityDelegate This, MonoTouch.Foundation.NSUserActivity userActivity, MonoTouch.Foundation.NSInputStream inputStream, MonoTouch.Foundation.NSOutputStream outputStream);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UserActivityReceivedData(class MonoTouch.Foundation.INSUserActivityDelegate This, class MonoTouch.Foundation.NSUserActivity userActivity, class MonoTouch.Foundation.NSInputStream inputStream, class MonoTouch.Foundation.NSOutputStream outputStream) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUserActivityDelegate" RefType="this" />
          <Parameter Name="userActivity" Type="MonoTouch.Foundation.NSUserActivity" />
          <Parameter Name="inputStream" Type="MonoTouch.Foundation.NSInputStream" />
          <Parameter Name="outputStream" Type="MonoTouch.Foundation.NSOutputStream" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="userActivity">To be added.</param>
          <param name="inputStream">To be added.</param>
          <param name="outputStream">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUserActivityDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUserActivityDelegate_Extensions.UserActivityReceivedData(MonoTouch.Foundation.INSUserActivityDelegate,MonoTouch.Foundation.NSUserActivity,MonoTouch.Foundation.NSInputStream,MonoTouch.Foundation.NSOutputStream)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUserActivityDelegate" />
      </Targets>
      <Member MemberName="UserActivityWasContinued">
        <MemberSignature Language="C#" Value="public static void UserActivityWasContinued (this MonoTouch.Foundation.INSUserActivityDelegate This, MonoTouch.Foundation.NSUserActivity userActivity);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UserActivityWasContinued(class MonoTouch.Foundation.INSUserActivityDelegate This, class MonoTouch.Foundation.NSUserActivity userActivity) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUserActivityDelegate" RefType="this" />
          <Parameter Name="userActivity" Type="MonoTouch.Foundation.NSUserActivity" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="userActivity">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUserActivityDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUserActivityDelegate_Extensions.UserActivityWasContinued(MonoTouch.Foundation.INSUserActivityDelegate,MonoTouch.Foundation.NSUserActivity)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.INSUserActivityDelegate" />
      </Targets>
      <Member MemberName="UserActivityWillSave">
        <MemberSignature Language="C#" Value="public static void UserActivityWillSave (this MonoTouch.Foundation.INSUserActivityDelegate This, MonoTouch.Foundation.NSUserActivity userActivity);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UserActivityWillSave(class MonoTouch.Foundation.INSUserActivityDelegate This, class MonoTouch.Foundation.NSUserActivity userActivity) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.INSUserActivityDelegate" RefType="this" />
          <Parameter Name="userActivity" Type="MonoTouch.Foundation.NSUserActivity" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="userActivity">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Foundation.NSUserActivityDelegate_Extensions" Member="M:MonoTouch.Foundation.NSUserActivityDelegate_Extensions.UserActivityWillSave(MonoTouch.Foundation.INSUserActivityDelegate,MonoTouch.Foundation.NSUserActivity)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKChallengeEventHandlerDelegate" />
      </Targets>
      <Member MemberName="LocalPlayerCompletedChallenge">
        <MemberSignature Language="C#" Value="public static void LocalPlayerCompletedChallenge (this MonoTouch.GameKit.IGKChallengeEventHandlerDelegate This, MonoTouch.GameKit.GKChallenge challenge);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LocalPlayerCompletedChallenge(class MonoTouch.GameKit.IGKChallengeEventHandlerDelegate This, class MonoTouch.GameKit.GKChallenge challenge) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKChallengeEventHandlerDelegate" RefType="this" />
          <Parameter Name="challenge" Type="MonoTouch.GameKit.GKChallenge" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="challenge">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKChallengeEventHandlerDelegate_Extensions" Member="M:MonoTouch.GameKit.GKChallengeEventHandlerDelegate_Extensions.LocalPlayerCompletedChallenge(MonoTouch.GameKit.IGKChallengeEventHandlerDelegate,MonoTouch.GameKit.GKChallenge)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKChallengeEventHandlerDelegate" />
      </Targets>
      <Member MemberName="LocalPlayerReceivedChallenge">
        <MemberSignature Language="C#" Value="public static void LocalPlayerReceivedChallenge (this MonoTouch.GameKit.IGKChallengeEventHandlerDelegate This, MonoTouch.GameKit.GKChallenge challenge);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LocalPlayerReceivedChallenge(class MonoTouch.GameKit.IGKChallengeEventHandlerDelegate This, class MonoTouch.GameKit.GKChallenge challenge) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKChallengeEventHandlerDelegate" RefType="this" />
          <Parameter Name="challenge" Type="MonoTouch.GameKit.GKChallenge" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="challenge">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKChallengeEventHandlerDelegate_Extensions" Member="M:MonoTouch.GameKit.GKChallengeEventHandlerDelegate_Extensions.LocalPlayerReceivedChallenge(MonoTouch.GameKit.IGKChallengeEventHandlerDelegate,MonoTouch.GameKit.GKChallenge)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKChallengeEventHandlerDelegate" />
      </Targets>
      <Member MemberName="LocalPlayerSelectedChallenge">
        <MemberSignature Language="C#" Value="public static void LocalPlayerSelectedChallenge (this MonoTouch.GameKit.IGKChallengeEventHandlerDelegate This, MonoTouch.GameKit.GKChallenge challenge);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LocalPlayerSelectedChallenge(class MonoTouch.GameKit.IGKChallengeEventHandlerDelegate This, class MonoTouch.GameKit.GKChallenge challenge) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKChallengeEventHandlerDelegate" RefType="this" />
          <Parameter Name="challenge" Type="MonoTouch.GameKit.GKChallenge" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="challenge">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKChallengeEventHandlerDelegate_Extensions" Member="M:MonoTouch.GameKit.GKChallengeEventHandlerDelegate_Extensions.LocalPlayerSelectedChallenge(MonoTouch.GameKit.IGKChallengeEventHandlerDelegate,MonoTouch.GameKit.GKChallenge)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKChallengeEventHandlerDelegate" />
      </Targets>
      <Member MemberName="RemotePlayerCompletedChallenge">
        <MemberSignature Language="C#" Value="public static void RemotePlayerCompletedChallenge (this MonoTouch.GameKit.IGKChallengeEventHandlerDelegate This, MonoTouch.GameKit.GKChallenge challenge);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemotePlayerCompletedChallenge(class MonoTouch.GameKit.IGKChallengeEventHandlerDelegate This, class MonoTouch.GameKit.GKChallenge challenge) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKChallengeEventHandlerDelegate" RefType="this" />
          <Parameter Name="challenge" Type="MonoTouch.GameKit.GKChallenge" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="challenge">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKChallengeEventHandlerDelegate_Extensions" Member="M:MonoTouch.GameKit.GKChallengeEventHandlerDelegate_Extensions.RemotePlayerCompletedChallenge(MonoTouch.GameKit.IGKChallengeEventHandlerDelegate,MonoTouch.GameKit.GKChallenge)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKChallengeEventHandlerDelegate" />
      </Targets>
      <Member MemberName="ShouldShowBannerForLocallyCompletedChallenge">
        <MemberSignature Language="C#" Value="public static bool ShouldShowBannerForLocallyCompletedChallenge (this MonoTouch.GameKit.IGKChallengeEventHandlerDelegate This, MonoTouch.GameKit.GKChallenge challenge);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldShowBannerForLocallyCompletedChallenge(class MonoTouch.GameKit.IGKChallengeEventHandlerDelegate This, class MonoTouch.GameKit.GKChallenge challenge) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKChallengeEventHandlerDelegate" RefType="this" />
          <Parameter Name="challenge" Type="MonoTouch.GameKit.GKChallenge" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="challenge">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKChallengeEventHandlerDelegate_Extensions" Member="M:MonoTouch.GameKit.GKChallengeEventHandlerDelegate_Extensions.ShouldShowBannerForLocallyCompletedChallenge(MonoTouch.GameKit.IGKChallengeEventHandlerDelegate,MonoTouch.GameKit.GKChallenge)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKChallengeEventHandlerDelegate" />
      </Targets>
      <Member MemberName="ShouldShowBannerForLocallyReceivedChallenge">
        <MemberSignature Language="C#" Value="public static bool ShouldShowBannerForLocallyReceivedChallenge (this MonoTouch.GameKit.IGKChallengeEventHandlerDelegate This, MonoTouch.GameKit.GKChallenge challenge);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldShowBannerForLocallyReceivedChallenge(class MonoTouch.GameKit.IGKChallengeEventHandlerDelegate This, class MonoTouch.GameKit.GKChallenge challenge) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKChallengeEventHandlerDelegate" RefType="this" />
          <Parameter Name="challenge" Type="MonoTouch.GameKit.GKChallenge" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="challenge">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKChallengeEventHandlerDelegate_Extensions" Member="M:MonoTouch.GameKit.GKChallengeEventHandlerDelegate_Extensions.ShouldShowBannerForLocallyReceivedChallenge(MonoTouch.GameKit.IGKChallengeEventHandlerDelegate,MonoTouch.GameKit.GKChallenge)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKChallengeEventHandlerDelegate" />
      </Targets>
      <Member MemberName="ShouldShowBannerForRemotelyCompletedChallenge">
        <MemberSignature Language="C#" Value="public static bool ShouldShowBannerForRemotelyCompletedChallenge (this MonoTouch.GameKit.IGKChallengeEventHandlerDelegate This, MonoTouch.GameKit.GKChallenge challenge);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldShowBannerForRemotelyCompletedChallenge(class MonoTouch.GameKit.IGKChallengeEventHandlerDelegate This, class MonoTouch.GameKit.GKChallenge challenge) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKChallengeEventHandlerDelegate" RefType="this" />
          <Parameter Name="challenge" Type="MonoTouch.GameKit.GKChallenge" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="challenge">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKChallengeEventHandlerDelegate_Extensions" Member="M:MonoTouch.GameKit.GKChallengeEventHandlerDelegate_Extensions.ShouldShowBannerForRemotelyCompletedChallenge(MonoTouch.GameKit.IGKChallengeEventHandlerDelegate,MonoTouch.GameKit.GKChallenge)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKChallengeListener" />
      </Targets>
      <Member MemberName="DidCompleteChallenge">
        <MemberSignature Language="C#" Value="public static void DidCompleteChallenge (this MonoTouch.GameKit.IGKChallengeListener This, MonoTouch.GameKit.GKPlayer player, MonoTouch.GameKit.GKChallenge challenge, MonoTouch.GameKit.GKPlayer friendPlayer);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidCompleteChallenge(class MonoTouch.GameKit.IGKChallengeListener This, class MonoTouch.GameKit.GKPlayer player, class MonoTouch.GameKit.GKChallenge challenge, class MonoTouch.GameKit.GKPlayer friendPlayer) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKChallengeListener" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="challenge" Type="MonoTouch.GameKit.GKChallenge" />
          <Parameter Name="friendPlayer" Type="MonoTouch.GameKit.GKPlayer" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="challenge">To be added.</param>
          <param name="friendPlayer">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKChallengeListener_Extensions" Member="M:MonoTouch.GameKit.GKChallengeListener_Extensions.DidCompleteChallenge(MonoTouch.GameKit.IGKChallengeListener,MonoTouch.GameKit.GKPlayer,MonoTouch.GameKit.GKChallenge,MonoTouch.GameKit.GKPlayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKChallengeListener" />
      </Targets>
      <Member MemberName="DidReceiveChallenge">
        <MemberSignature Language="C#" Value="public static void DidReceiveChallenge (this MonoTouch.GameKit.IGKChallengeListener This, MonoTouch.GameKit.GKPlayer player, MonoTouch.GameKit.GKChallenge challenge);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveChallenge(class MonoTouch.GameKit.IGKChallengeListener This, class MonoTouch.GameKit.GKPlayer player, class MonoTouch.GameKit.GKChallenge challenge) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKChallengeListener" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="challenge" Type="MonoTouch.GameKit.GKChallenge" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="challenge">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKChallengeListener_Extensions" Member="M:MonoTouch.GameKit.GKChallengeListener_Extensions.DidReceiveChallenge(MonoTouch.GameKit.IGKChallengeListener,MonoTouch.GameKit.GKPlayer,MonoTouch.GameKit.GKChallenge)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKChallengeListener" />
      </Targets>
      <Member MemberName="IssuedChallengeWasCompleted">
        <MemberSignature Language="C#" Value="public static void IssuedChallengeWasCompleted (this MonoTouch.GameKit.IGKChallengeListener This, MonoTouch.GameKit.GKPlayer player, MonoTouch.GameKit.GKChallenge challenge, MonoTouch.GameKit.GKPlayer friendPlayer);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void IssuedChallengeWasCompleted(class MonoTouch.GameKit.IGKChallengeListener This, class MonoTouch.GameKit.GKPlayer player, class MonoTouch.GameKit.GKChallenge challenge, class MonoTouch.GameKit.GKPlayer friendPlayer) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKChallengeListener" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="challenge" Type="MonoTouch.GameKit.GKChallenge" />
          <Parameter Name="friendPlayer" Type="MonoTouch.GameKit.GKPlayer" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="challenge">To be added.</param>
          <param name="friendPlayer">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKChallengeListener_Extensions" Member="M:MonoTouch.GameKit.GKChallengeListener_Extensions.IssuedChallengeWasCompleted(MonoTouch.GameKit.IGKChallengeListener,MonoTouch.GameKit.GKPlayer,MonoTouch.GameKit.GKChallenge,MonoTouch.GameKit.GKPlayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKChallengeListener" />
      </Targets>
      <Member MemberName="WantsToPlayChallenge">
        <MemberSignature Language="C#" Value="public static void WantsToPlayChallenge (this MonoTouch.GameKit.IGKChallengeListener This, MonoTouch.GameKit.GKPlayer player, MonoTouch.GameKit.GKChallenge challenge);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WantsToPlayChallenge(class MonoTouch.GameKit.IGKChallengeListener This, class MonoTouch.GameKit.GKPlayer player, class MonoTouch.GameKit.GKChallenge challenge) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKChallengeListener" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="challenge" Type="MonoTouch.GameKit.GKChallenge" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="challenge">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKChallengeListener_Extensions" Member="M:MonoTouch.GameKit.GKChallengeListener_Extensions.WantsToPlayChallenge(MonoTouch.GameKit.IGKChallengeListener,MonoTouch.GameKit.GKPlayer,MonoTouch.GameKit.GKChallenge)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.GKError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.GameKit.GKError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.GameKit.GKError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.GameKit.GKError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.GameKit.GKError value</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKErrorExtensions" Member="M:MonoTouch.GameKit.GKErrorExtensions.GetDomain(MonoTouch.GameKit.GKError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKGameSessionEventListener" />
      </Targets>
      <Member MemberName="DidAddPlayer">
        <MemberSignature Language="C#" Value="public static void DidAddPlayer (this MonoTouch.GameKit.IGKGameSessionEventListener This, MonoTouch.GameKit.GKGameSession session, MonoTouch.GameKit.GKCloudPlayer player);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAddPlayer(class MonoTouch.GameKit.IGKGameSessionEventListener This, class MonoTouch.GameKit.GKGameSession session, class MonoTouch.GameKit.GKCloudPlayer player) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKGameSessionEventListener" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.GameKit.GKGameSession" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKCloudPlayer" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="session">To be added.</param>
          <param name="player">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKGameSessionEventListener_Extensions" Member="M:MonoTouch.GameKit.GKGameSessionEventListener_Extensions.DidAddPlayer(MonoTouch.GameKit.IGKGameSessionEventListener,MonoTouch.GameKit.GKGameSession,MonoTouch.GameKit.GKCloudPlayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKGameSessionEventListener" />
      </Targets>
      <Member MemberName="DidChangeConnectionState">
        <MemberSignature Language="C#" Value="public static void DidChangeConnectionState (this MonoTouch.GameKit.IGKGameSessionEventListener This, MonoTouch.GameKit.GKGameSession session, MonoTouch.GameKit.GKCloudPlayer player, MonoTouch.GameKit.GKConnectionState newState);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidChangeConnectionState(class MonoTouch.GameKit.IGKGameSessionEventListener This, class MonoTouch.GameKit.GKGameSession session, class MonoTouch.GameKit.GKCloudPlayer player, valuetype MonoTouch.GameKit.GKConnectionState newState) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKGameSessionEventListener" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.GameKit.GKGameSession" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKCloudPlayer" />
          <Parameter Name="newState" Type="MonoTouch.GameKit.GKConnectionState" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="session">To be added.</param>
          <param name="player">To be added.</param>
          <param name="newState">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKGameSessionEventListener_Extensions" Member="M:MonoTouch.GameKit.GKGameSessionEventListener_Extensions.DidChangeConnectionState(MonoTouch.GameKit.IGKGameSessionEventListener,MonoTouch.GameKit.GKGameSession,MonoTouch.GameKit.GKCloudPlayer,MonoTouch.GameKit.GKConnectionState)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKGameSessionEventListener" />
      </Targets>
      <Member MemberName="DidReceiveData">
        <MemberSignature Language="C#" Value="public static void DidReceiveData (this MonoTouch.GameKit.IGKGameSessionEventListener This, MonoTouch.GameKit.GKGameSession session, MonoTouch.Foundation.NSData data, MonoTouch.GameKit.GKCloudPlayer player);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveData(class MonoTouch.GameKit.IGKGameSessionEventListener This, class MonoTouch.GameKit.GKGameSession session, class MonoTouch.Foundation.NSData data, class MonoTouch.GameKit.GKCloudPlayer player) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKGameSessionEventListener" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.GameKit.GKGameSession" />
          <Parameter Name="data" Type="MonoTouch.Foundation.NSData" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKCloudPlayer" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="session">To be added.</param>
          <param name="data">To be added.</param>
          <param name="player">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKGameSessionEventListener_Extensions" Member="M:MonoTouch.GameKit.GKGameSessionEventListener_Extensions.DidReceiveData(MonoTouch.GameKit.IGKGameSessionEventListener,MonoTouch.GameKit.GKGameSession,MonoTouch.Foundation.NSData,MonoTouch.GameKit.GKCloudPlayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKGameSessionEventListener" />
      </Targets>
      <Member MemberName="DidReceiveMessage">
        <MemberSignature Language="C#" Value="public static void DidReceiveMessage (this MonoTouch.GameKit.IGKGameSessionEventListener This, MonoTouch.GameKit.GKGameSession session, string message, MonoTouch.Foundation.NSData data, MonoTouch.GameKit.GKCloudPlayer player);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveMessage(class MonoTouch.GameKit.IGKGameSessionEventListener This, class MonoTouch.GameKit.GKGameSession session, string message, class MonoTouch.Foundation.NSData data, class MonoTouch.GameKit.GKCloudPlayer player) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKGameSessionEventListener" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.GameKit.GKGameSession" />
          <Parameter Name="message" Type="System.String" />
          <Parameter Name="data" Type="MonoTouch.Foundation.NSData" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKCloudPlayer" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="session">To be added.</param>
          <param name="message">To be added.</param>
          <param name="data">To be added.</param>
          <param name="player">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKGameSessionEventListener_Extensions" Member="M:MonoTouch.GameKit.GKGameSessionEventListener_Extensions.DidReceiveMessage(MonoTouch.GameKit.IGKGameSessionEventListener,MonoTouch.GameKit.GKGameSession,System.String,MonoTouch.Foundation.NSData,MonoTouch.GameKit.GKCloudPlayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKGameSessionEventListener" />
      </Targets>
      <Member MemberName="DidRemovePlayer">
        <MemberSignature Language="C#" Value="public static void DidRemovePlayer (this MonoTouch.GameKit.IGKGameSessionEventListener This, MonoTouch.GameKit.GKGameSession session, MonoTouch.GameKit.GKCloudPlayer player);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRemovePlayer(class MonoTouch.GameKit.IGKGameSessionEventListener This, class MonoTouch.GameKit.GKGameSession session, class MonoTouch.GameKit.GKCloudPlayer player) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKGameSessionEventListener" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.GameKit.GKGameSession" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKCloudPlayer" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="session">To be added.</param>
          <param name="player">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKGameSessionEventListener_Extensions" Member="M:MonoTouch.GameKit.GKGameSessionEventListener_Extensions.DidRemovePlayer(MonoTouch.GameKit.IGKGameSessionEventListener,MonoTouch.GameKit.GKGameSession,MonoTouch.GameKit.GKCloudPlayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKGameSessionEventListener" />
      </Targets>
      <Member MemberName="DidSaveData">
        <MemberSignature Language="C#" Value="public static void DidSaveData (this MonoTouch.GameKit.IGKGameSessionEventListener This, MonoTouch.GameKit.GKGameSession session, MonoTouch.GameKit.GKCloudPlayer player, MonoTouch.Foundation.NSData data);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSaveData(class MonoTouch.GameKit.IGKGameSessionEventListener This, class MonoTouch.GameKit.GKGameSession session, class MonoTouch.GameKit.GKCloudPlayer player, class MonoTouch.Foundation.NSData data) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKGameSessionEventListener" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.GameKit.GKGameSession" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKCloudPlayer" />
          <Parameter Name="data" Type="MonoTouch.Foundation.NSData" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="session">To be added.</param>
          <param name="player">To be added.</param>
          <param name="data">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKGameSessionEventListener_Extensions" Member="M:MonoTouch.GameKit.GKGameSessionEventListener_Extensions.DidSaveData(MonoTouch.GameKit.IGKGameSessionEventListener,MonoTouch.GameKit.GKGameSession,MonoTouch.GameKit.GKCloudPlayer,MonoTouch.Foundation.NSData)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKInviteEventListener" />
      </Targets>
      <Member MemberName="DidAcceptInvite">
        <MemberSignature Language="C#" Value="public static void DidAcceptInvite (this MonoTouch.GameKit.IGKInviteEventListener This, MonoTouch.GameKit.GKPlayer player, MonoTouch.GameKit.GKInvite invite);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAcceptInvite(class MonoTouch.GameKit.IGKInviteEventListener This, class MonoTouch.GameKit.GKPlayer player, class MonoTouch.GameKit.GKInvite invite) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKInviteEventListener" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="invite" Type="MonoTouch.GameKit.GKInvite" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="invite">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKInviteEventListener_Extensions" Member="M:MonoTouch.GameKit.GKInviteEventListener_Extensions.DidAcceptInvite(MonoTouch.GameKit.IGKInviteEventListener,MonoTouch.GameKit.GKPlayer,MonoTouch.GameKit.GKInvite)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKInviteEventListener" />
      </Targets>
      <Member MemberName="DidRequestMatch">
        <MemberSignature Language="C#" Value="public static void DidRequestMatch (this MonoTouch.GameKit.IGKInviteEventListener This, MonoTouch.GameKit.GKPlayer player, MonoTouch.GameKit.GKPlayer[] recipientPlayers);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRequestMatch(class MonoTouch.GameKit.IGKInviteEventListener This, class MonoTouch.GameKit.GKPlayer player, class MonoTouch.GameKit.GKPlayer[] recipientPlayers) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKInviteEventListener" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="recipientPlayers" Type="MonoTouch.GameKit.GKPlayer[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="recipientPlayers">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKInviteEventListener_Extensions" Member="M:MonoTouch.GameKit.GKInviteEventListener_Extensions.DidRequestMatch(MonoTouch.GameKit.IGKInviteEventListener,MonoTouch.GameKit.GKPlayer,MonoTouch.GameKit.GKPlayer[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKInviteEventListener" />
      </Targets>
      <Member MemberName="DidRequestMatch">
        <MemberSignature Language="C#" Value="public static void DidRequestMatch (this MonoTouch.GameKit.IGKInviteEventListener This, MonoTouch.GameKit.GKPlayer player, string[] playerIDs);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRequestMatch(class MonoTouch.GameKit.IGKInviteEventListener This, class MonoTouch.GameKit.GKPlayer player, string[] playerIDs) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKInviteEventListener" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="playerIDs" Type="System.String[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="playerIDs">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKInviteEventListener_Extensions" Member="M:MonoTouch.GameKit.GKInviteEventListener_Extensions.DidRequestMatch(MonoTouch.GameKit.IGKInviteEventListener,MonoTouch.GameKit.GKPlayer,System.String[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKMatchDelegate" />
      </Targets>
      <Member MemberName="DataReceived">
        <MemberSignature Language="C#" Value="public static void DataReceived (this MonoTouch.GameKit.IGKMatchDelegate This, MonoTouch.GameKit.GKMatch match, MonoTouch.Foundation.NSData data, string playerId);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DataReceived(class MonoTouch.GameKit.IGKMatchDelegate This, class MonoTouch.GameKit.GKMatch match, class MonoTouch.Foundation.NSData data, string playerId) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKMatchDelegate" RefType="this" />
          <Parameter Name="match" Type="MonoTouch.GameKit.GKMatch" />
          <Parameter Name="data" Type="MonoTouch.Foundation.NSData" />
          <Parameter Name="playerId" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="match">To be added.</param>
          <param name="data">To be added.</param>
          <param name="playerId">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKMatchDelegate_Extensions" Member="M:MonoTouch.GameKit.GKMatchDelegate_Extensions.DataReceived(MonoTouch.GameKit.IGKMatchDelegate,MonoTouch.GameKit.GKMatch,MonoTouch.Foundation.NSData,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKMatchDelegate" />
      </Targets>
      <Member MemberName="DataReceivedForRecipient">
        <MemberSignature Language="C#" Value="public static void DataReceivedForRecipient (this MonoTouch.GameKit.IGKMatchDelegate This, MonoTouch.GameKit.GKMatch match, MonoTouch.Foundation.NSData data, MonoTouch.GameKit.GKPlayer recipient, MonoTouch.GameKit.GKPlayer player);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DataReceivedForRecipient(class MonoTouch.GameKit.IGKMatchDelegate This, class MonoTouch.GameKit.GKMatch match, class MonoTouch.Foundation.NSData data, class MonoTouch.GameKit.GKPlayer recipient, class MonoTouch.GameKit.GKPlayer player) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKMatchDelegate" RefType="this" />
          <Parameter Name="match" Type="MonoTouch.GameKit.GKMatch" />
          <Parameter Name="data" Type="MonoTouch.Foundation.NSData" />
          <Parameter Name="recipient" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="match">To be added.</param>
          <param name="data">To be added.</param>
          <param name="recipient">To be added.</param>
          <param name="player">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKMatchDelegate_Extensions" Member="M:MonoTouch.GameKit.GKMatchDelegate_Extensions.DataReceivedForRecipient(MonoTouch.GameKit.IGKMatchDelegate,MonoTouch.GameKit.GKMatch,MonoTouch.Foundation.NSData,MonoTouch.GameKit.GKPlayer,MonoTouch.GameKit.GKPlayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKMatchDelegate" />
      </Targets>
      <Member MemberName="DataReceivedFromPlayer">
        <MemberSignature Language="C#" Value="public static void DataReceivedFromPlayer (this MonoTouch.GameKit.IGKMatchDelegate This, MonoTouch.GameKit.GKMatch match, MonoTouch.Foundation.NSData data, MonoTouch.GameKit.GKPlayer player);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DataReceivedFromPlayer(class MonoTouch.GameKit.IGKMatchDelegate This, class MonoTouch.GameKit.GKMatch match, class MonoTouch.Foundation.NSData data, class MonoTouch.GameKit.GKPlayer player) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKMatchDelegate" RefType="this" />
          <Parameter Name="match" Type="MonoTouch.GameKit.GKMatch" />
          <Parameter Name="data" Type="MonoTouch.Foundation.NSData" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="match">To be added.</param>
          <param name="data">To be added.</param>
          <param name="player">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKMatchDelegate_Extensions" Member="M:MonoTouch.GameKit.GKMatchDelegate_Extensions.DataReceivedFromPlayer(MonoTouch.GameKit.IGKMatchDelegate,MonoTouch.GameKit.GKMatch,MonoTouch.Foundation.NSData,MonoTouch.GameKit.GKPlayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKMatchDelegate" />
      </Targets>
      <Member MemberName="Failed">
        <MemberSignature Language="C#" Value="public static void Failed (this MonoTouch.GameKit.IGKMatchDelegate This, MonoTouch.GameKit.GKMatch match, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Failed(class MonoTouch.GameKit.IGKMatchDelegate This, class MonoTouch.GameKit.GKMatch match, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKMatchDelegate" RefType="this" />
          <Parameter Name="match" Type="MonoTouch.GameKit.GKMatch" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="match">To be added.</param>
          <param name="error">To be added.This parameter can be .</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKMatchDelegate_Extensions" Member="M:MonoTouch.GameKit.GKMatchDelegate_Extensions.Failed(MonoTouch.GameKit.IGKMatchDelegate,MonoTouch.GameKit.GKMatch,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKMatchDelegate" />
      </Targets>
      <Member MemberName="ShouldReinviteDisconnectedPlayer">
        <MemberSignature Language="C#" Value="public static bool ShouldReinviteDisconnectedPlayer (this MonoTouch.GameKit.IGKMatchDelegate This, MonoTouch.GameKit.GKMatch match, MonoTouch.GameKit.GKPlayer player);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldReinviteDisconnectedPlayer(class MonoTouch.GameKit.IGKMatchDelegate This, class MonoTouch.GameKit.GKMatch match, class MonoTouch.GameKit.GKPlayer player) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKMatchDelegate" RefType="this" />
          <Parameter Name="match" Type="MonoTouch.GameKit.GKMatch" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="match">To be added.</param>
          <param name="player">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKMatchDelegate_Extensions" Member="M:MonoTouch.GameKit.GKMatchDelegate_Extensions.ShouldReinviteDisconnectedPlayer(MonoTouch.GameKit.IGKMatchDelegate,MonoTouch.GameKit.GKMatch,MonoTouch.GameKit.GKPlayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKMatchDelegate" />
      </Targets>
      <Member MemberName="ShouldReinvitePlayer">
        <MemberSignature Language="C#" Value="public static bool ShouldReinvitePlayer (this MonoTouch.GameKit.IGKMatchDelegate This, MonoTouch.GameKit.GKMatch match, string playerId);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldReinvitePlayer(class MonoTouch.GameKit.IGKMatchDelegate This, class MonoTouch.GameKit.GKMatch match, string playerId) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKMatchDelegate" RefType="this" />
          <Parameter Name="match" Type="MonoTouch.GameKit.GKMatch" />
          <Parameter Name="playerId" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="match">To be added.</param>
          <param name="playerId">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKMatchDelegate_Extensions" Member="M:MonoTouch.GameKit.GKMatchDelegate_Extensions.ShouldReinvitePlayer(MonoTouch.GameKit.IGKMatchDelegate,MonoTouch.GameKit.GKMatch,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKMatchDelegate" />
      </Targets>
      <Member MemberName="StateChanged">
        <MemberSignature Language="C#" Value="public static void StateChanged (this MonoTouch.GameKit.IGKMatchDelegate This, MonoTouch.GameKit.GKMatch match, string playerId, MonoTouch.GameKit.GKPlayerConnectionState state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StateChanged(class MonoTouch.GameKit.IGKMatchDelegate This, class MonoTouch.GameKit.GKMatch match, string playerId, valuetype MonoTouch.GameKit.GKPlayerConnectionState state) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKMatchDelegate" RefType="this" />
          <Parameter Name="match" Type="MonoTouch.GameKit.GKMatch" />
          <Parameter Name="playerId" Type="System.String" />
          <Parameter Name="state" Type="MonoTouch.GameKit.GKPlayerConnectionState" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="match">To be added.</param>
          <param name="playerId">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKMatchDelegate_Extensions" Member="M:MonoTouch.GameKit.GKMatchDelegate_Extensions.StateChanged(MonoTouch.GameKit.IGKMatchDelegate,MonoTouch.GameKit.GKMatch,System.String,MonoTouch.GameKit.GKPlayerConnectionState)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKMatchDelegate" />
      </Targets>
      <Member MemberName="StateChangedForPlayer">
        <MemberSignature Language="C#" Value="public static void StateChangedForPlayer (this MonoTouch.GameKit.IGKMatchDelegate This, MonoTouch.GameKit.GKMatch match, MonoTouch.GameKit.GKPlayer player, MonoTouch.GameKit.GKPlayerConnectionState state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StateChangedForPlayer(class MonoTouch.GameKit.IGKMatchDelegate This, class MonoTouch.GameKit.GKMatch match, class MonoTouch.GameKit.GKPlayer player, valuetype MonoTouch.GameKit.GKPlayerConnectionState state) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKMatchDelegate" RefType="this" />
          <Parameter Name="match" Type="MonoTouch.GameKit.GKMatch" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="state" Type="MonoTouch.GameKit.GKPlayerConnectionState" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="match">To be added.</param>
          <param name="player">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKMatchDelegate_Extensions" Member="M:MonoTouch.GameKit.GKMatchDelegate_Extensions.StateChangedForPlayer(MonoTouch.GameKit.IGKMatchDelegate,MonoTouch.GameKit.GKMatch,MonoTouch.GameKit.GKPlayer,MonoTouch.GameKit.GKPlayerConnectionState)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKMatchmakerViewControllerDelegate" />
      </Targets>
      <Member MemberName="HostedPlayerDidAccept">
        <MemberSignature Language="C#" Value="public static void HostedPlayerDidAccept (this MonoTouch.GameKit.IGKMatchmakerViewControllerDelegate This, MonoTouch.GameKit.GKMatchmakerViewController viewController, MonoTouch.GameKit.GKPlayer playerID);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HostedPlayerDidAccept(class MonoTouch.GameKit.IGKMatchmakerViewControllerDelegate This, class MonoTouch.GameKit.GKMatchmakerViewController viewController, class MonoTouch.GameKit.GKPlayer playerID) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKMatchmakerViewControllerDelegate" RefType="this" />
          <Parameter Name="viewController" Type="MonoTouch.GameKit.GKMatchmakerViewController" />
          <Parameter Name="playerID" Type="MonoTouch.GameKit.GKPlayer" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="viewController">To be added.</param>
          <param name="playerID">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKMatchmakerViewControllerDelegate_Extensions" Member="M:MonoTouch.GameKit.GKMatchmakerViewControllerDelegate_Extensions.HostedPlayerDidAccept(MonoTouch.GameKit.IGKMatchmakerViewControllerDelegate,MonoTouch.GameKit.GKMatchmakerViewController,MonoTouch.GameKit.GKPlayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKMatchmakerViewControllerDelegate" />
      </Targets>
      <Member MemberName="ReceivedAcceptFromHostedPlayer">
        <MemberSignature Language="C#" Value="public static void ReceivedAcceptFromHostedPlayer (this MonoTouch.GameKit.IGKMatchmakerViewControllerDelegate This, MonoTouch.GameKit.GKMatchmakerViewController viewController, string playerID);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceivedAcceptFromHostedPlayer(class MonoTouch.GameKit.IGKMatchmakerViewControllerDelegate This, class MonoTouch.GameKit.GKMatchmakerViewController viewController, string playerID) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKMatchmakerViewControllerDelegate" RefType="this" />
          <Parameter Name="viewController" Type="MonoTouch.GameKit.GKMatchmakerViewController" />
          <Parameter Name="playerID" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="viewController">To be added.</param>
          <param name="playerID">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKMatchmakerViewControllerDelegate_Extensions" Member="M:MonoTouch.GameKit.GKMatchmakerViewControllerDelegate_Extensions.ReceivedAcceptFromHostedPlayer(MonoTouch.GameKit.IGKMatchmakerViewControllerDelegate,MonoTouch.GameKit.GKMatchmakerViewController,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKPeerPickerControllerDelegate" />
      </Targets>
      <Member MemberName="ConnectionTypeSelected">
        <MemberSignature Language="C#" Value="public static void ConnectionTypeSelected (this MonoTouch.GameKit.IGKPeerPickerControllerDelegate This, MonoTouch.GameKit.GKPeerPickerController picker, MonoTouch.GameKit.GKPeerPickerConnectionType type);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConnectionTypeSelected(class MonoTouch.GameKit.IGKPeerPickerControllerDelegate This, class MonoTouch.GameKit.GKPeerPickerController picker, valuetype MonoTouch.GameKit.GKPeerPickerConnectionType type) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKPeerPickerControllerDelegate" RefType="this" />
          <Parameter Name="picker" Type="MonoTouch.GameKit.GKPeerPickerController" />
          <Parameter Name="type" Type="MonoTouch.GameKit.GKPeerPickerConnectionType" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="picker">To be added.</param>
          <param name="type">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKPeerPickerControllerDelegate_Extensions" Member="M:MonoTouch.GameKit.GKPeerPickerControllerDelegate_Extensions.ConnectionTypeSelected(MonoTouch.GameKit.IGKPeerPickerControllerDelegate,MonoTouch.GameKit.GKPeerPickerController,MonoTouch.GameKit.GKPeerPickerConnectionType)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKPeerPickerControllerDelegate" />
      </Targets>
      <Member MemberName="ControllerCancelled">
        <MemberSignature Language="C#" Value="public static void ControllerCancelled (this MonoTouch.GameKit.IGKPeerPickerControllerDelegate This, MonoTouch.GameKit.GKPeerPickerController picker);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ControllerCancelled(class MonoTouch.GameKit.IGKPeerPickerControllerDelegate This, class MonoTouch.GameKit.GKPeerPickerController picker) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKPeerPickerControllerDelegate" RefType="this" />
          <Parameter Name="picker" Type="MonoTouch.GameKit.GKPeerPickerController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="picker">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKPeerPickerControllerDelegate_Extensions" Member="M:MonoTouch.GameKit.GKPeerPickerControllerDelegate_Extensions.ControllerCancelled(MonoTouch.GameKit.IGKPeerPickerControllerDelegate,MonoTouch.GameKit.GKPeerPickerController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKPeerPickerControllerDelegate" />
      </Targets>
      <Member MemberName="GetSession">
        <MemberSignature Language="C#" Value="public static MonoTouch.GameKit.GKSession GetSession (this MonoTouch.GameKit.IGKPeerPickerControllerDelegate This, MonoTouch.GameKit.GKPeerPickerController picker, MonoTouch.GameKit.GKPeerPickerConnectionType forType);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.GameKit.GKSession GetSession(class MonoTouch.GameKit.IGKPeerPickerControllerDelegate This, class MonoTouch.GameKit.GKPeerPickerController picker, valuetype MonoTouch.GameKit.GKPeerPickerConnectionType forType) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.GameKit.GKSession</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKPeerPickerControllerDelegate" RefType="this" />
          <Parameter Name="picker" Type="MonoTouch.GameKit.GKPeerPickerController" />
          <Parameter Name="forType" Type="MonoTouch.GameKit.GKPeerPickerConnectionType" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="picker">To be added.</param>
          <param name="forType">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKPeerPickerControllerDelegate_Extensions" Member="M:MonoTouch.GameKit.GKPeerPickerControllerDelegate_Extensions.GetSession(MonoTouch.GameKit.IGKPeerPickerControllerDelegate,MonoTouch.GameKit.GKPeerPickerController,MonoTouch.GameKit.GKPeerPickerConnectionType)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKPeerPickerControllerDelegate" />
      </Targets>
      <Member MemberName="PeerConnected">
        <MemberSignature Language="C#" Value="public static void PeerConnected (this MonoTouch.GameKit.IGKPeerPickerControllerDelegate This, MonoTouch.GameKit.GKPeerPickerController picker, string peerId, MonoTouch.GameKit.GKSession toSession);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PeerConnected(class MonoTouch.GameKit.IGKPeerPickerControllerDelegate This, class MonoTouch.GameKit.GKPeerPickerController picker, string peerId, class MonoTouch.GameKit.GKSession toSession) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKPeerPickerControllerDelegate" RefType="this" />
          <Parameter Name="picker" Type="MonoTouch.GameKit.GKPeerPickerController" />
          <Parameter Name="peerId" Type="System.String" />
          <Parameter Name="toSession" Type="MonoTouch.GameKit.GKSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="picker">To be added.</param>
          <param name="peerId">To be added.</param>
          <param name="toSession">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKPeerPickerControllerDelegate_Extensions" Member="M:MonoTouch.GameKit.GKPeerPickerControllerDelegate_Extensions.PeerConnected(MonoTouch.GameKit.IGKPeerPickerControllerDelegate,MonoTouch.GameKit.GKPeerPickerController,System.String,MonoTouch.GameKit.GKSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKSavedGameListener" />
      </Targets>
      <Member MemberName="DidModifySavedGame">
        <MemberSignature Language="C#" Value="public static void DidModifySavedGame (this MonoTouch.GameKit.IGKSavedGameListener This, MonoTouch.GameKit.GKPlayer player, MonoTouch.GameKit.GKSavedGame savedGame);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidModifySavedGame(class MonoTouch.GameKit.IGKSavedGameListener This, class MonoTouch.GameKit.GKPlayer player, class MonoTouch.GameKit.GKSavedGame savedGame) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKSavedGameListener" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="savedGame" Type="MonoTouch.GameKit.GKSavedGame" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="savedGame">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKSavedGameListener_Extensions" Member="M:MonoTouch.GameKit.GKSavedGameListener_Extensions.DidModifySavedGame(MonoTouch.GameKit.IGKSavedGameListener,MonoTouch.GameKit.GKPlayer,MonoTouch.GameKit.GKSavedGame)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKSavedGameListener" />
      </Targets>
      <Member MemberName="HasConflictingSavedGames">
        <MemberSignature Language="C#" Value="public static void HasConflictingSavedGames (this MonoTouch.GameKit.IGKSavedGameListener This, MonoTouch.GameKit.GKPlayer player, MonoTouch.GameKit.GKSavedGame[] savedGames);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HasConflictingSavedGames(class MonoTouch.GameKit.IGKSavedGameListener This, class MonoTouch.GameKit.GKPlayer player, class MonoTouch.GameKit.GKSavedGame[] savedGames) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKSavedGameListener" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="savedGames" Type="MonoTouch.GameKit.GKSavedGame[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="savedGames">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKSavedGameListener_Extensions" Member="M:MonoTouch.GameKit.GKSavedGameListener_Extensions.HasConflictingSavedGames(MonoTouch.GameKit.IGKSavedGameListener,MonoTouch.GameKit.GKPlayer,MonoTouch.GameKit.GKSavedGame[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKSessionDelegate" />
      </Targets>
      <Member MemberName="FailedWithError">
        <MemberSignature Language="C#" Value="public static void FailedWithError (this MonoTouch.GameKit.IGKSessionDelegate This, MonoTouch.GameKit.GKSession session, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FailedWithError(class MonoTouch.GameKit.IGKSessionDelegate This, class MonoTouch.GameKit.GKSession session, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.GameKit.GKSession" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKSessionDelegate_Extensions" Member="M:MonoTouch.GameKit.GKSessionDelegate_Extensions.FailedWithError(MonoTouch.GameKit.IGKSessionDelegate,MonoTouch.GameKit.GKSession,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKSessionDelegate" />
      </Targets>
      <Member MemberName="PeerChangedState">
        <MemberSignature Language="C#" Value="public static void PeerChangedState (this MonoTouch.GameKit.IGKSessionDelegate This, MonoTouch.GameKit.GKSession session, string peerID, MonoTouch.GameKit.GKPeerConnectionState state);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PeerChangedState(class MonoTouch.GameKit.IGKSessionDelegate This, class MonoTouch.GameKit.GKSession session, string peerID, valuetype MonoTouch.GameKit.GKPeerConnectionState state) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.GameKit.GKSession" />
          <Parameter Name="peerID" Type="System.String" />
          <Parameter Name="state" Type="MonoTouch.GameKit.GKPeerConnectionState" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="peerID">To be added.</param>
          <param name="state">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKSessionDelegate_Extensions" Member="M:MonoTouch.GameKit.GKSessionDelegate_Extensions.PeerChangedState(MonoTouch.GameKit.IGKSessionDelegate,MonoTouch.GameKit.GKSession,System.String,MonoTouch.GameKit.GKPeerConnectionState)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKSessionDelegate" />
      </Targets>
      <Member MemberName="PeerConnectionFailed">
        <MemberSignature Language="C#" Value="public static void PeerConnectionFailed (this MonoTouch.GameKit.IGKSessionDelegate This, MonoTouch.GameKit.GKSession session, string peerID, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PeerConnectionFailed(class MonoTouch.GameKit.IGKSessionDelegate This, class MonoTouch.GameKit.GKSession session, string peerID, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.GameKit.GKSession" />
          <Parameter Name="peerID" Type="System.String" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="peerID">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKSessionDelegate_Extensions" Member="M:MonoTouch.GameKit.GKSessionDelegate_Extensions.PeerConnectionFailed(MonoTouch.GameKit.IGKSessionDelegate,MonoTouch.GameKit.GKSession,System.String,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKSessionDelegate" />
      </Targets>
      <Member MemberName="PeerConnectionRequest">
        <MemberSignature Language="C#" Value="public static void PeerConnectionRequest (this MonoTouch.GameKit.IGKSessionDelegate This, MonoTouch.GameKit.GKSession session, string peerID);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PeerConnectionRequest(class MonoTouch.GameKit.IGKSessionDelegate This, class MonoTouch.GameKit.GKSession session, string peerID) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.GameKit.GKSession" />
          <Parameter Name="peerID" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="peerID">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKSessionDelegate_Extensions" Member="M:MonoTouch.GameKit.GKSessionDelegate_Extensions.PeerConnectionRequest(MonoTouch.GameKit.IGKSessionDelegate,MonoTouch.GameKit.GKSession,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKTurnBasedEventHandlerDelegate" />
      </Targets>
      <Member MemberName="HandleMatchEnded">
        <MemberSignature Language="C#" Value="public static void HandleMatchEnded (this MonoTouch.GameKit.IGKTurnBasedEventHandlerDelegate This, MonoTouch.GameKit.GKTurnBasedMatch match);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleMatchEnded(class MonoTouch.GameKit.IGKTurnBasedEventHandlerDelegate This, class MonoTouch.GameKit.GKTurnBasedMatch match) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKTurnBasedEventHandlerDelegate" RefType="this" />
          <Parameter Name="match" Type="MonoTouch.GameKit.GKTurnBasedMatch" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="match">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKTurnBasedEventHandlerDelegate_Extensions" Member="M:MonoTouch.GameKit.GKTurnBasedEventHandlerDelegate_Extensions.HandleMatchEnded(MonoTouch.GameKit.IGKTurnBasedEventHandlerDelegate,MonoTouch.GameKit.GKTurnBasedMatch)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKTurnBasedEventHandlerDelegate" />
      </Targets>
      <Member MemberName="HandleTurnEventForMatch">
        <MemberSignature Language="C#" Value="public static void HandleTurnEventForMatch (this MonoTouch.GameKit.IGKTurnBasedEventHandlerDelegate This, MonoTouch.GameKit.GKTurnBasedMatch match);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleTurnEventForMatch(class MonoTouch.GameKit.IGKTurnBasedEventHandlerDelegate This, class MonoTouch.GameKit.GKTurnBasedMatch match) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKTurnBasedEventHandlerDelegate" RefType="this" />
          <Parameter Name="match" Type="MonoTouch.GameKit.GKTurnBasedMatch" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="match">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKTurnBasedEventHandlerDelegate_Extensions" Member="M:MonoTouch.GameKit.GKTurnBasedEventHandlerDelegate_Extensions.HandleTurnEventForMatch(MonoTouch.GameKit.IGKTurnBasedEventHandlerDelegate,MonoTouch.GameKit.GKTurnBasedMatch)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKTurnBasedEventListener" />
      </Targets>
      <Member MemberName="DidRequestMatchWithOtherPlayers">
        <MemberSignature Language="C#" Value="public static void DidRequestMatchWithOtherPlayers (this MonoTouch.GameKit.IGKTurnBasedEventListener This, MonoTouch.GameKit.GKPlayer player, MonoTouch.GameKit.GKPlayer[] playersToInvite);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRequestMatchWithOtherPlayers(class MonoTouch.GameKit.IGKTurnBasedEventListener This, class MonoTouch.GameKit.GKPlayer player, class MonoTouch.GameKit.GKPlayer[] playersToInvite) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKTurnBasedEventListener" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="playersToInvite" Type="MonoTouch.GameKit.GKPlayer[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="playersToInvite">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKTurnBasedEventListener_Extensions" Member="M:MonoTouch.GameKit.GKTurnBasedEventListener_Extensions.DidRequestMatchWithOtherPlayers(MonoTouch.GameKit.IGKTurnBasedEventListener,MonoTouch.GameKit.GKPlayer,MonoTouch.GameKit.GKPlayer[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKTurnBasedEventListener" />
      </Targets>
      <Member MemberName="DidRequestMatchWithPlayers">
        <MemberSignature Language="C#" Value="public static void DidRequestMatchWithPlayers (this MonoTouch.GameKit.IGKTurnBasedEventListener This, MonoTouch.GameKit.GKPlayer player, string[] playerIDsToInvite);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRequestMatchWithPlayers(class MonoTouch.GameKit.IGKTurnBasedEventListener This, class MonoTouch.GameKit.GKPlayer player, string[] playerIDsToInvite) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKTurnBasedEventListener" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="playerIDsToInvite" Type="System.String[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="playerIDsToInvite">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKTurnBasedEventListener_Extensions" Member="M:MonoTouch.GameKit.GKTurnBasedEventListener_Extensions.DidRequestMatchWithPlayers(MonoTouch.GameKit.IGKTurnBasedEventListener,MonoTouch.GameKit.GKPlayer,System.String[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKTurnBasedEventListener" />
      </Targets>
      <Member MemberName="MatchEnded">
        <MemberSignature Language="C#" Value="public static void MatchEnded (this MonoTouch.GameKit.IGKTurnBasedEventListener This, MonoTouch.GameKit.GKPlayer player, MonoTouch.GameKit.GKTurnBasedMatch match);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MatchEnded(class MonoTouch.GameKit.IGKTurnBasedEventListener This, class MonoTouch.GameKit.GKPlayer player, class MonoTouch.GameKit.GKTurnBasedMatch match) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKTurnBasedEventListener" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="match" Type="MonoTouch.GameKit.GKTurnBasedMatch" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="match">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKTurnBasedEventListener_Extensions" Member="M:MonoTouch.GameKit.GKTurnBasedEventListener_Extensions.MatchEnded(MonoTouch.GameKit.IGKTurnBasedEventListener,MonoTouch.GameKit.GKPlayer,MonoTouch.GameKit.GKTurnBasedMatch)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKTurnBasedEventListener" />
      </Targets>
      <Member MemberName="ReceivedExchangeCancellation">
        <MemberSignature Language="C#" Value="public static void ReceivedExchangeCancellation (this MonoTouch.GameKit.IGKTurnBasedEventListener This, MonoTouch.GameKit.GKPlayer player, MonoTouch.GameKit.GKTurnBasedExchange exchange, MonoTouch.GameKit.GKTurnBasedMatch match);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceivedExchangeCancellation(class MonoTouch.GameKit.IGKTurnBasedEventListener This, class MonoTouch.GameKit.GKPlayer player, class MonoTouch.GameKit.GKTurnBasedExchange exchange, class MonoTouch.GameKit.GKTurnBasedMatch match) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKTurnBasedEventListener" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="exchange" Type="MonoTouch.GameKit.GKTurnBasedExchange" />
          <Parameter Name="match" Type="MonoTouch.GameKit.GKTurnBasedMatch" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="exchange">To be added.</param>
          <param name="match">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKTurnBasedEventListener_Extensions" Member="M:MonoTouch.GameKit.GKTurnBasedEventListener_Extensions.ReceivedExchangeCancellation(MonoTouch.GameKit.IGKTurnBasedEventListener,MonoTouch.GameKit.GKPlayer,MonoTouch.GameKit.GKTurnBasedExchange,MonoTouch.GameKit.GKTurnBasedMatch)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKTurnBasedEventListener" />
      </Targets>
      <Member MemberName="ReceivedExchangeReplies">
        <MemberSignature Language="C#" Value="public static void ReceivedExchangeReplies (this MonoTouch.GameKit.IGKTurnBasedEventListener This, MonoTouch.GameKit.GKPlayer player, MonoTouch.GameKit.GKTurnBasedExchangeReply[] replies, MonoTouch.GameKit.GKTurnBasedExchange exchange, MonoTouch.GameKit.GKTurnBasedMatch match);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceivedExchangeReplies(class MonoTouch.GameKit.IGKTurnBasedEventListener This, class MonoTouch.GameKit.GKPlayer player, class MonoTouch.GameKit.GKTurnBasedExchangeReply[] replies, class MonoTouch.GameKit.GKTurnBasedExchange exchange, class MonoTouch.GameKit.GKTurnBasedMatch match) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKTurnBasedEventListener" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="replies" Type="MonoTouch.GameKit.GKTurnBasedExchangeReply[]" />
          <Parameter Name="exchange" Type="MonoTouch.GameKit.GKTurnBasedExchange" />
          <Parameter Name="match" Type="MonoTouch.GameKit.GKTurnBasedMatch" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="replies">To be added.</param>
          <param name="exchange">To be added.</param>
          <param name="match">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKTurnBasedEventListener_Extensions" Member="M:MonoTouch.GameKit.GKTurnBasedEventListener_Extensions.ReceivedExchangeReplies(MonoTouch.GameKit.IGKTurnBasedEventListener,MonoTouch.GameKit.GKPlayer,MonoTouch.GameKit.GKTurnBasedExchangeReply[],MonoTouch.GameKit.GKTurnBasedExchange,MonoTouch.GameKit.GKTurnBasedMatch)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKTurnBasedEventListener" />
      </Targets>
      <Member MemberName="ReceivedExchangeRequest">
        <MemberSignature Language="C#" Value="public static void ReceivedExchangeRequest (this MonoTouch.GameKit.IGKTurnBasedEventListener This, MonoTouch.GameKit.GKPlayer player, MonoTouch.GameKit.GKTurnBasedExchange exchange, MonoTouch.GameKit.GKTurnBasedMatch match);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceivedExchangeRequest(class MonoTouch.GameKit.IGKTurnBasedEventListener This, class MonoTouch.GameKit.GKPlayer player, class MonoTouch.GameKit.GKTurnBasedExchange exchange, class MonoTouch.GameKit.GKTurnBasedMatch match) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKTurnBasedEventListener" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="exchange" Type="MonoTouch.GameKit.GKTurnBasedExchange" />
          <Parameter Name="match" Type="MonoTouch.GameKit.GKTurnBasedMatch" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="exchange">To be added.</param>
          <param name="match">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKTurnBasedEventListener_Extensions" Member="M:MonoTouch.GameKit.GKTurnBasedEventListener_Extensions.ReceivedExchangeRequest(MonoTouch.GameKit.IGKTurnBasedEventListener,MonoTouch.GameKit.GKPlayer,MonoTouch.GameKit.GKTurnBasedExchange,MonoTouch.GameKit.GKTurnBasedMatch)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKTurnBasedEventListener" />
      </Targets>
      <Member MemberName="ReceivedTurnEvent">
        <MemberSignature Language="C#" Value="public static void ReceivedTurnEvent (this MonoTouch.GameKit.IGKTurnBasedEventListener This, MonoTouch.GameKit.GKPlayer player, MonoTouch.GameKit.GKTurnBasedMatch match, bool becameActive);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceivedTurnEvent(class MonoTouch.GameKit.IGKTurnBasedEventListener This, class MonoTouch.GameKit.GKPlayer player, class MonoTouch.GameKit.GKTurnBasedMatch match, bool becameActive) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKTurnBasedEventListener" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="match" Type="MonoTouch.GameKit.GKTurnBasedMatch" />
          <Parameter Name="becameActive" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="match">To be added.</param>
          <param name="becameActive">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKTurnBasedEventListener_Extensions" Member="M:MonoTouch.GameKit.GKTurnBasedEventListener_Extensions.ReceivedTurnEvent(MonoTouch.GameKit.IGKTurnBasedEventListener,MonoTouch.GameKit.GKPlayer,MonoTouch.GameKit.GKTurnBasedMatch,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKTurnBasedEventListener" />
      </Targets>
      <Member MemberName="WantsToQuitMatch">
        <MemberSignature Language="C#" Value="public static void WantsToQuitMatch (this MonoTouch.GameKit.IGKTurnBasedEventListener This, MonoTouch.GameKit.GKPlayer player, MonoTouch.GameKit.GKTurnBasedMatch match);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WantsToQuitMatch(class MonoTouch.GameKit.IGKTurnBasedEventListener This, class MonoTouch.GameKit.GKPlayer player, class MonoTouch.GameKit.GKTurnBasedMatch match) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKTurnBasedEventListener" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameKit.GKPlayer" />
          <Parameter Name="match" Type="MonoTouch.GameKit.GKTurnBasedMatch" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="player">To be added.</param>
          <param name="match">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKTurnBasedEventListener_Extensions" Member="M:MonoTouch.GameKit.GKTurnBasedEventListener_Extensions.WantsToQuitMatch(MonoTouch.GameKit.IGKTurnBasedEventListener,MonoTouch.GameKit.GKPlayer,MonoTouch.GameKit.GKTurnBasedMatch)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKVoiceChatClient" />
      </Targets>
      <Member MemberName="FailedToConnect">
        <MemberSignature Language="C#" Value="public static void FailedToConnect (this MonoTouch.GameKit.IGKVoiceChatClient This, MonoTouch.GameKit.GKVoiceChatService voiceChatService, string participantID, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FailedToConnect(class MonoTouch.GameKit.IGKVoiceChatClient This, class MonoTouch.GameKit.GKVoiceChatService voiceChatService, string participantID, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKVoiceChatClient" RefType="this" />
          <Parameter Name="voiceChatService" Type="MonoTouch.GameKit.GKVoiceChatService" />
          <Parameter Name="participantID" Type="System.String" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="voiceChatService">To be added.</param>
          <param name="participantID">To be added.</param>
          <param name="error">To be added.This parameter can be .</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKVoiceChatClient_Extensions" Member="M:MonoTouch.GameKit.GKVoiceChatClient_Extensions.FailedToConnect(MonoTouch.GameKit.IGKVoiceChatClient,MonoTouch.GameKit.GKVoiceChatService,System.String,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKVoiceChatClient" />
      </Targets>
      <Member MemberName="ReceivedInvitation">
        <MemberSignature Language="C#" Value="public static void ReceivedInvitation (this MonoTouch.GameKit.IGKVoiceChatClient This, MonoTouch.GameKit.GKVoiceChatService voiceChatService, string participantID, int callID);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceivedInvitation(class MonoTouch.GameKit.IGKVoiceChatClient This, class MonoTouch.GameKit.GKVoiceChatService voiceChatService, string participantID, int32 callID) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void ReceivedInvitation (this MonoTouch.GameKit.IGKVoiceChatClient This, MonoTouch.GameKit.GKVoiceChatService voiceChatService, string participantID, nint callID);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceivedInvitation(class MonoTouch.GameKit.IGKVoiceChatClient This, class MonoTouch.GameKit.GKVoiceChatService voiceChatService, string participantID, valuetype System.nint callID) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKVoiceChatClient" RefType="this" />
          <Parameter Name="voiceChatService" Type="MonoTouch.GameKit.GKVoiceChatService" />
          <Parameter Name="participantID" Type="System.String" />
          <Parameter Name="callID" Type="System.Int32" apistyle="classic" />
          <Parameter Name="callID" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="voiceChatService">To be added.</param>
          <param name="participantID">To be added.</param>
          <param name="callID">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKVoiceChatClient_Extensions" Member="M:MonoTouch.GameKit.GKVoiceChatClient_Extensions.ReceivedInvitation(MonoTouch.GameKit.IGKVoiceChatClient,MonoTouch.GameKit.GKVoiceChatService,System.String,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKVoiceChatClient" />
      </Targets>
      <Member MemberName="SendRealTimeData">
        <MemberSignature Language="C#" Value="public static void SendRealTimeData (this MonoTouch.GameKit.IGKVoiceChatClient This, MonoTouch.GameKit.GKVoiceChatService voiceChatService, MonoTouch.Foundation.NSData data, string participantID);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SendRealTimeData(class MonoTouch.GameKit.IGKVoiceChatClient This, class MonoTouch.GameKit.GKVoiceChatService voiceChatService, class MonoTouch.Foundation.NSData data, string participantID) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKVoiceChatClient" RefType="this" />
          <Parameter Name="voiceChatService" Type="MonoTouch.GameKit.GKVoiceChatService" />
          <Parameter Name="data" Type="MonoTouch.Foundation.NSData" />
          <Parameter Name="participantID" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="voiceChatService">To be added.</param>
          <param name="data">To be added.</param>
          <param name="participantID">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKVoiceChatClient_Extensions" Member="M:MonoTouch.GameKit.GKVoiceChatClient_Extensions.SendRealTimeData(MonoTouch.GameKit.IGKVoiceChatClient,MonoTouch.GameKit.GKVoiceChatService,MonoTouch.Foundation.NSData,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKVoiceChatClient" />
      </Targets>
      <Member MemberName="Started">
        <MemberSignature Language="C#" Value="public static void Started (this MonoTouch.GameKit.IGKVoiceChatClient This, MonoTouch.GameKit.GKVoiceChatService voiceChatService, string participantID);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Started(class MonoTouch.GameKit.IGKVoiceChatClient This, class MonoTouch.GameKit.GKVoiceChatService voiceChatService, string participantID) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKVoiceChatClient" RefType="this" />
          <Parameter Name="voiceChatService" Type="MonoTouch.GameKit.GKVoiceChatService" />
          <Parameter Name="participantID" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="voiceChatService">To be added.</param>
          <param name="participantID">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKVoiceChatClient_Extensions" Member="M:MonoTouch.GameKit.GKVoiceChatClient_Extensions.Started(MonoTouch.GameKit.IGKVoiceChatClient,MonoTouch.GameKit.GKVoiceChatService,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.IGKVoiceChatClient" />
      </Targets>
      <Member MemberName="Stopped">
        <MemberSignature Language="C#" Value="public static void Stopped (this MonoTouch.GameKit.IGKVoiceChatClient This, MonoTouch.GameKit.GKVoiceChatService voiceChatService, string participantID, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Stopped(class MonoTouch.GameKit.IGKVoiceChatClient This, class MonoTouch.GameKit.GKVoiceChatService voiceChatService, string participantID, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameKit.IGKVoiceChatClient" RefType="this" />
          <Parameter Name="voiceChatService" Type="MonoTouch.GameKit.GKVoiceChatService" />
          <Parameter Name="participantID" Type="System.String" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="voiceChatService">To be added.</param>
          <param name="participantID">To be added.</param>
          <param name="error">To be added.This parameter can be .</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKVoiceChatClient_Extensions" Member="M:MonoTouch.GameKit.GKVoiceChatClient_Extensions.Stopped(MonoTouch.GameKit.IGKVoiceChatClient,MonoTouch.GameKit.GKVoiceChatService,System.String,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameKit.GKVoiceChatServiceError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.GameKit.GKVoiceChatServiceError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.GameKit.GKVoiceChatServiceError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.GameKit.GKVoiceChatServiceError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.GameKit.GKVoiceChatServiceError value</summary>
        </Docs>
        <Link Type="MonoTouch.GameKit.GKVoiceChatServiceErrorExtensions" Member="M:MonoTouch.GameKit.GKVoiceChatServiceErrorExtensions.GetDomain(MonoTouch.GameKit.GKVoiceChatServiceError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameplayKit.IGKAgentDelegate" />
      </Targets>
      <Member MemberName="AgentDidUpdate">
        <MemberSignature Language="C#" Value="public static void AgentDidUpdate (this MonoTouch.GameplayKit.IGKAgentDelegate This, MonoTouch.GameplayKit.GKAgent agent);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AgentDidUpdate(class MonoTouch.GameplayKit.IGKAgentDelegate This, class MonoTouch.GameplayKit.GKAgent agent) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameplayKit.IGKAgentDelegate" RefType="this" />
          <Parameter Name="agent" Type="MonoTouch.GameplayKit.GKAgent" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="agent">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameplayKit.GKAgentDelegate_Extensions" Member="M:MonoTouch.GameplayKit.GKAgentDelegate_Extensions.AgentDidUpdate(MonoTouch.GameplayKit.IGKAgentDelegate,MonoTouch.GameplayKit.GKAgent)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameplayKit.IGKAgentDelegate" />
      </Targets>
      <Member MemberName="AgentWillUpdate">
        <MemberSignature Language="C#" Value="public static void AgentWillUpdate (this MonoTouch.GameplayKit.IGKAgentDelegate This, MonoTouch.GameplayKit.GKAgent agent);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AgentWillUpdate(class MonoTouch.GameplayKit.IGKAgentDelegate This, class MonoTouch.GameplayKit.GKAgent agent) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameplayKit.IGKAgentDelegate" RefType="this" />
          <Parameter Name="agent" Type="MonoTouch.GameplayKit.GKAgent" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="agent">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameplayKit.GKAgentDelegate_Extensions" Member="M:MonoTouch.GameplayKit.GKAgentDelegate_Extensions.AgentWillUpdate(MonoTouch.GameplayKit.IGKAgentDelegate,MonoTouch.GameplayKit.GKAgent)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameplayKit.IGKGameModel" />
      </Targets>
      <Member MemberName="GetScore">
        <MemberSignature Language="C#" Value="public static int GetScore (this MonoTouch.GameplayKit.IGKGameModel This, MonoTouch.GameplayKit.IGKGameModelPlayer player);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetScore(class MonoTouch.GameplayKit.IGKGameModel This, class MonoTouch.GameplayKit.IGKGameModelPlayer player) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nint GetScore (this MonoTouch.GameplayKit.IGKGameModel This, MonoTouch.GameplayKit.IGKGameModelPlayer player);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nint GetScore(class MonoTouch.GameplayKit.IGKGameModel This, class MonoTouch.GameplayKit.IGKGameModelPlayer player) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Int32</ReturnType>
          <ReturnType apistyle="unified">System.nint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameplayKit.IGKGameModel" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameplayKit.IGKGameModelPlayer" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="player">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameplayKit.GKGameModel_Extensions" Member="M:MonoTouch.GameplayKit.GKGameModel_Extensions.GetScore(MonoTouch.GameplayKit.IGKGameModel,MonoTouch.GameplayKit.IGKGameModelPlayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameplayKit.IGKGameModel" />
      </Targets>
      <Member MemberName="IsLoss">
        <MemberSignature Language="C#" Value="public static bool IsLoss (this MonoTouch.GameplayKit.IGKGameModel This, MonoTouch.GameplayKit.IGKGameModelPlayer player);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLoss(class MonoTouch.GameplayKit.IGKGameModel This, class MonoTouch.GameplayKit.IGKGameModelPlayer player) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameplayKit.IGKGameModel" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameplayKit.IGKGameModelPlayer" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="player">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameplayKit.GKGameModel_Extensions" Member="M:MonoTouch.GameplayKit.GKGameModel_Extensions.IsLoss(MonoTouch.GameplayKit.IGKGameModel,MonoTouch.GameplayKit.IGKGameModelPlayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameplayKit.IGKGameModel" />
      </Targets>
      <Member MemberName="IsWin">
        <MemberSignature Language="C#" Value="public static bool IsWin (this MonoTouch.GameplayKit.IGKGameModel This, MonoTouch.GameplayKit.IGKGameModelPlayer player);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWin(class MonoTouch.GameplayKit.IGKGameModel This, class MonoTouch.GameplayKit.IGKGameModelPlayer player) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameplayKit.IGKGameModel" RefType="this" />
          <Parameter Name="player" Type="MonoTouch.GameplayKit.IGKGameModelPlayer" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="player">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameplayKit.GKGameModel_Extensions" Member="M:MonoTouch.GameplayKit.GKGameModel_Extensions.IsWin(MonoTouch.GameplayKit.IGKGameModel,MonoTouch.GameplayKit.IGKGameModelPlayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameplayKit.IGKGameModel" />
      </Targets>
      <Member MemberName="UnapplyGameModelUpdate">
        <MemberSignature Language="C#" Value="public static void UnapplyGameModelUpdate (this MonoTouch.GameplayKit.IGKGameModel This, MonoTouch.GameplayKit.IGKGameModelUpdate gameModelUpdate);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UnapplyGameModelUpdate(class MonoTouch.GameplayKit.IGKGameModel This, class MonoTouch.GameplayKit.IGKGameModelUpdate gameModelUpdate) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameplayKit.IGKGameModel" RefType="this" />
          <Parameter Name="gameModelUpdate" Type="MonoTouch.GameplayKit.IGKGameModelUpdate" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="gameModelUpdate">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GameplayKit.GKGameModel_Extensions" Member="M:MonoTouch.GameplayKit.GKGameModel_Extensions.UnapplyGameModelUpdate(MonoTouch.GameplayKit.IGKGameModel,MonoTouch.GameplayKit.IGKGameModelUpdate)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GameplayKit.IGKGameModelPlayer" />
      </Targets>
      <Member MemberName="GetPlayerId">
        <MemberSignature Language="C#" Value="public static int GetPlayerId (this MonoTouch.GameplayKit.IGKGameModelPlayer This);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetPlayerId(class MonoTouch.GameplayKit.IGKGameModelPlayer This) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nint GetPlayerId (this MonoTouch.GameplayKit.IGKGameModelPlayer This);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nint GetPlayerId(class MonoTouch.GameplayKit.IGKGameModelPlayer This) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Int32</ReturnType>
          <ReturnType apistyle="unified">System.nint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GameplayKit.IGKGameModelPlayer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <summary>Returns a value identifying the <see cref="T:Monotouch.GameplayKit.IGKGameModelPlayer" />.</summary>
        </Docs>
        <Link Type="MonoTouch.GameplayKit.GKGameModelPlayer_Extensions" Member="M:MonoTouch.GameplayKit.GKGameModelPlayer_Extensions.GetPlayerId(MonoTouch.GameplayKit.IGKGameModelPlayer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.GLKit.IGLKViewControllerDelegate" />
      </Targets>
      <Member MemberName="WillPause">
        <MemberSignature Language="C#" Value="public static void WillPause (this MonoTouch.GLKit.IGLKViewControllerDelegate This, MonoTouch.GLKit.GLKViewController controller, bool pause);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillPause(class MonoTouch.GLKit.IGLKViewControllerDelegate This, class MonoTouch.GLKit.GLKViewController controller, bool pause) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.GLKit.IGLKViewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.GLKit.GLKViewController" />
          <Parameter Name="pause" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="pause">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.GLKit.GLKViewControllerDelegate_Extensions" Member="M:MonoTouch.GLKit.GLKViewControllerDelegate_Extensions.WillPause(MonoTouch.GLKit.IGLKViewControllerDelegate,MonoTouch.GLKit.GLKViewController,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HealthKit.HKErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.HealthKit.HKErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.HealthKit.HKErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.HealthKit.HKErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.HealthKit.HKErrorCode value</summary>
        </Docs>
        <Link Type="MonoTouch.HealthKit.HKErrorCodeExtensions" Member="M:MonoTouch.HealthKit.HKErrorCodeExtensions.GetDomain(MonoTouch.HealthKit.HKErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMAccessoryBrowserDelegate" />
      </Targets>
      <Member MemberName="DidFindNewAccessory">
        <MemberSignature Language="C#" Value="public static void DidFindNewAccessory (this MonoTouch.HomeKit.IHMAccessoryBrowserDelegate This, MonoTouch.HomeKit.HMAccessoryBrowser browser, MonoTouch.HomeKit.HMAccessory accessory);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFindNewAccessory(class MonoTouch.HomeKit.IHMAccessoryBrowserDelegate This, class MonoTouch.HomeKit.HMAccessoryBrowser browser, class MonoTouch.HomeKit.HMAccessory accessory) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMAccessoryBrowserDelegate" RefType="this" />
          <Parameter Name="browser" Type="MonoTouch.HomeKit.HMAccessoryBrowser" />
          <Parameter Name="accessory" Type="MonoTouch.HomeKit.HMAccessory" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="browser">To be added.</param>
          <param name="accessory">To be added.</param>
          <summary>The <paramref name="browser" /> found <paramref name="accessory" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMAccessoryBrowserDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMAccessoryBrowserDelegate_Extensions.DidFindNewAccessory(MonoTouch.HomeKit.IHMAccessoryBrowserDelegate,MonoTouch.HomeKit.HMAccessoryBrowser,MonoTouch.HomeKit.HMAccessory)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMAccessoryBrowserDelegate" />
      </Targets>
      <Member MemberName="DidRemoveNewAccessory">
        <MemberSignature Language="C#" Value="public static void DidRemoveNewAccessory (this MonoTouch.HomeKit.IHMAccessoryBrowserDelegate This, MonoTouch.HomeKit.HMAccessoryBrowser browser, MonoTouch.HomeKit.HMAccessory accessory);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRemoveNewAccessory(class MonoTouch.HomeKit.IHMAccessoryBrowserDelegate This, class MonoTouch.HomeKit.HMAccessoryBrowser browser, class MonoTouch.HomeKit.HMAccessory accessory) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMAccessoryBrowserDelegate" RefType="this" />
          <Parameter Name="browser" Type="MonoTouch.HomeKit.HMAccessoryBrowser" />
          <Parameter Name="accessory" Type="MonoTouch.HomeKit.HMAccessory" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="browser">To be added.</param>
          <param name="accessory">To be added.</param>
          <summary>The <paramref name="browser" /> removed <paramref name="accessory" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMAccessoryBrowserDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMAccessoryBrowserDelegate_Extensions.DidRemoveNewAccessory(MonoTouch.HomeKit.IHMAccessoryBrowserDelegate,MonoTouch.HomeKit.HMAccessoryBrowser,MonoTouch.HomeKit.HMAccessory)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMAccessoryDelegate" />
      </Targets>
      <Member MemberName="DidUpdateAssociatedServiceType">
        <MemberSignature Language="C#" Value="public static void DidUpdateAssociatedServiceType (this MonoTouch.HomeKit.IHMAccessoryDelegate This, MonoTouch.HomeKit.HMAccessory accessory, MonoTouch.HomeKit.HMService service);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateAssociatedServiceType(class MonoTouch.HomeKit.IHMAccessoryDelegate This, class MonoTouch.HomeKit.HMAccessory accessory, class MonoTouch.HomeKit.HMService service) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMAccessoryDelegate" RefType="this" />
          <Parameter Name="accessory" Type="MonoTouch.HomeKit.HMAccessory" />
          <Parameter Name="service" Type="MonoTouch.HomeKit.HMService" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="accessory">To be added.</param>
          <param name="service">To be added.</param>
          <summary>The <paramref name="accessory" /> updated the service type for <paramref name="service" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMAccessoryDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMAccessoryDelegate_Extensions.DidUpdateAssociatedServiceType(MonoTouch.HomeKit.IHMAccessoryDelegate,MonoTouch.HomeKit.HMAccessory,MonoTouch.HomeKit.HMService)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMAccessoryDelegate" />
      </Targets>
      <Member MemberName="DidUpdateName">
        <MemberSignature Language="C#" Value="public static void DidUpdateName (this MonoTouch.HomeKit.IHMAccessoryDelegate This, MonoTouch.HomeKit.HMAccessory accessory);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateName(class MonoTouch.HomeKit.IHMAccessoryDelegate This, class MonoTouch.HomeKit.HMAccessory accessory) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMAccessoryDelegate" RefType="this" />
          <Parameter Name="accessory" Type="MonoTouch.HomeKit.HMAccessory" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="accessory">To be added.</param>
          <summary>The <paramref name="accessory" /> updated its name.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMAccessoryDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMAccessoryDelegate_Extensions.DidUpdateName(MonoTouch.HomeKit.IHMAccessoryDelegate,MonoTouch.HomeKit.HMAccessory)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMAccessoryDelegate" />
      </Targets>
      <Member MemberName="DidUpdateNameForService">
        <MemberSignature Language="C#" Value="public static void DidUpdateNameForService (this MonoTouch.HomeKit.IHMAccessoryDelegate This, MonoTouch.HomeKit.HMAccessory accessory, MonoTouch.HomeKit.HMService service);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateNameForService(class MonoTouch.HomeKit.IHMAccessoryDelegate This, class MonoTouch.HomeKit.HMAccessory accessory, class MonoTouch.HomeKit.HMService service) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMAccessoryDelegate" RefType="this" />
          <Parameter Name="accesssory" Type="MonoTouch.HomeKit.HMAccessory" />
          <Parameter Name="service" Type="MonoTouch.HomeKit.HMService" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="accessory">To be added.</param>
          <param name="service">To be added.</param>
          <summary>The <paramref name="accessory" /> updated the name of <paramref name="service" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMAccessoryDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMAccessoryDelegate_Extensions.DidUpdateNameForService(MonoTouch.HomeKit.IHMAccessoryDelegate,MonoTouch.HomeKit.HMAccessory,MonoTouch.HomeKit.HMService)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMAccessoryDelegate" />
      </Targets>
      <Member MemberName="DidUpdateReachability">
        <MemberSignature Language="C#" Value="public static void DidUpdateReachability (this MonoTouch.HomeKit.IHMAccessoryDelegate This, MonoTouch.HomeKit.HMAccessory accessory);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateReachability(class MonoTouch.HomeKit.IHMAccessoryDelegate This, class MonoTouch.HomeKit.HMAccessory accessory) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMAccessoryDelegate" RefType="this" />
          <Parameter Name="accessory" Type="MonoTouch.HomeKit.HMAccessory" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="accessory">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMAccessoryDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMAccessoryDelegate_Extensions.DidUpdateReachability(MonoTouch.HomeKit.IHMAccessoryDelegate,MonoTouch.HomeKit.HMAccessory)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMAccessoryDelegate" />
      </Targets>
      <Member MemberName="DidUpdateServices">
        <MemberSignature Language="C#" Value="public static void DidUpdateServices (this MonoTouch.HomeKit.IHMAccessoryDelegate This, MonoTouch.HomeKit.HMAccessory accessory);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateServices(class MonoTouch.HomeKit.IHMAccessoryDelegate This, class MonoTouch.HomeKit.HMAccessory accessory) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMAccessoryDelegate" RefType="this" />
          <Parameter Name="accessory" Type="MonoTouch.HomeKit.HMAccessory" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="accessory">To be added.</param>
          <summary>The <paramref name="accessory" /> updated its services.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMAccessoryDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMAccessoryDelegate_Extensions.DidUpdateServices(MonoTouch.HomeKit.IHMAccessoryDelegate,MonoTouch.HomeKit.HMAccessory)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMAccessoryDelegate" />
      </Targets>
      <Member MemberName="DidUpdateValueForCharacteristic">
        <MemberSignature Language="C#" Value="public static void DidUpdateValueForCharacteristic (this MonoTouch.HomeKit.IHMAccessoryDelegate This, MonoTouch.HomeKit.HMAccessory accessory, MonoTouch.HomeKit.HMService service, MonoTouch.HomeKit.HMCharacteristic characteristic);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateValueForCharacteristic(class MonoTouch.HomeKit.IHMAccessoryDelegate This, class MonoTouch.HomeKit.HMAccessory accessory, class MonoTouch.HomeKit.HMService service, class MonoTouch.HomeKit.HMCharacteristic characteristic) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMAccessoryDelegate" RefType="this" />
          <Parameter Name="accessory" Type="MonoTouch.HomeKit.HMAccessory" />
          <Parameter Name="service" Type="MonoTouch.HomeKit.HMService" />
          <Parameter Name="characteristic" Type="MonoTouch.HomeKit.HMCharacteristic" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="accessory">To be added.</param>
          <param name="service">To be added.</param>
          <param name="characteristic">To be added.</param>
          <summary>The <paramref name="accessory" /> updated the value of <paramref name="characteristic" /> on <paramref name="service" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMAccessoryDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMAccessoryDelegate_Extensions.DidUpdateValueForCharacteristic(MonoTouch.HomeKit.IHMAccessoryDelegate,MonoTouch.HomeKit.HMAccessory,MonoTouch.HomeKit.HMService,MonoTouch.HomeKit.HMCharacteristic)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMCameraSnapshotControlDelegate" />
      </Targets>
      <Member MemberName="DidTakeSnapshot">
        <MemberSignature Language="C#" Value="public static void DidTakeSnapshot (this MonoTouch.HomeKit.IHMCameraSnapshotControlDelegate This, MonoTouch.HomeKit.HMCameraSnapshotControl cameraSnapshotControl, MonoTouch.HomeKit.HMCameraSnapshot snapshot, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidTakeSnapshot(class MonoTouch.HomeKit.IHMCameraSnapshotControlDelegate This, class MonoTouch.HomeKit.HMCameraSnapshotControl cameraSnapshotControl, class MonoTouch.HomeKit.HMCameraSnapshot snapshot, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMCameraSnapshotControlDelegate" RefType="this" />
          <Parameter Name="cameraSnapshotControl" Type="MonoTouch.HomeKit.HMCameraSnapshotControl" />
          <Parameter Name="snapshot" Type="MonoTouch.HomeKit.HMCameraSnapshot" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="cameraSnapshotControl">To be added.</param>
          <param name="snapshot">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMCameraSnapshotControlDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMCameraSnapshotControlDelegate_Extensions.DidTakeSnapshot(MonoTouch.HomeKit.IHMCameraSnapshotControlDelegate,MonoTouch.HomeKit.HMCameraSnapshotControl,MonoTouch.HomeKit.HMCameraSnapshot,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMCameraStreamControlDelegate" />
      </Targets>
      <Member MemberName="DidStartStream">
        <MemberSignature Language="C#" Value="public static void DidStartStream (this MonoTouch.HomeKit.IHMCameraStreamControlDelegate This, MonoTouch.HomeKit.HMCameraStreamControl cameraStreamControl);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidStartStream(class MonoTouch.HomeKit.IHMCameraStreamControlDelegate This, class MonoTouch.HomeKit.HMCameraStreamControl cameraStreamControl) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMCameraStreamControlDelegate" RefType="this" />
          <Parameter Name="cameraStreamControl" Type="MonoTouch.HomeKit.HMCameraStreamControl" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="cameraStreamControl">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMCameraStreamControlDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMCameraStreamControlDelegate_Extensions.DidStartStream(MonoTouch.HomeKit.IHMCameraStreamControlDelegate,MonoTouch.HomeKit.HMCameraStreamControl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMCameraStreamControlDelegate" />
      </Targets>
      <Member MemberName="DidStopStream">
        <MemberSignature Language="C#" Value="public static void DidStopStream (this MonoTouch.HomeKit.IHMCameraStreamControlDelegate This, MonoTouch.HomeKit.HMCameraStreamControl cameraStreamControl, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidStopStream(class MonoTouch.HomeKit.IHMCameraStreamControlDelegate This, class MonoTouch.HomeKit.HMCameraStreamControl cameraStreamControl, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMCameraStreamControlDelegate" RefType="this" />
          <Parameter Name="cameraStreamControl" Type="MonoTouch.HomeKit.HMCameraStreamControl" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="cameraStreamControl">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMCameraStreamControlDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMCameraStreamControlDelegate_Extensions.DidStopStream(MonoTouch.HomeKit.IHMCameraStreamControlDelegate,MonoTouch.HomeKit.HMCameraStreamControl,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidAddAccessory">
        <MemberSignature Language="C#" Value="public static void DidAddAccessory (this MonoTouch.HomeKit.IHMHomeDelegate This, MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMAccessory accessory);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAddAccessory(class MonoTouch.HomeKit.IHMHomeDelegate This, class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMAccessory accessory) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="accessory" Type="MonoTouch.HomeKit.HMAccessory" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="accessory">To be added.</param>
          <summary>The <paramref name="accessory" /> was added to <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidAddAccessory(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMAccessory)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidAddActionSet">
        <MemberSignature Language="C#" Value="public static void DidAddActionSet (this MonoTouch.HomeKit.IHMHomeDelegate This, MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMActionSet actionSet);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAddActionSet(class MonoTouch.HomeKit.IHMHomeDelegate This, class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMActionSet actionSet) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="actionSet" Type="MonoTouch.HomeKit.HMActionSet" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="actionSet">To be added.</param>
          <summary>The <paramref name="actionSet" /> was added to <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidAddActionSet(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMActionSet)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidAddRoom">
        <MemberSignature Language="C#" Value="public static void DidAddRoom (this MonoTouch.HomeKit.IHMHomeDelegate This, MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMRoom room);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAddRoom(class MonoTouch.HomeKit.IHMHomeDelegate This, class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMRoom room) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="room" Type="MonoTouch.HomeKit.HMRoom" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="room">To be added.</param>
          <summary>The <paramref name="room" /> was added to <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidAddRoom(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMRoom)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidAddRoomToZone">
        <MemberSignature Language="C#" Value="public static void DidAddRoomToZone (this MonoTouch.HomeKit.IHMHomeDelegate This, MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMRoom room, MonoTouch.HomeKit.HMZone zone);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAddRoomToZone(class MonoTouch.HomeKit.IHMHomeDelegate This, class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMRoom room, class MonoTouch.HomeKit.HMZone zone) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="room" Type="MonoTouch.HomeKit.HMRoom" />
          <Parameter Name="zone" Type="MonoTouch.HomeKit.HMZone" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="room">To be added.</param>
          <param name="zone">To be added.</param>
          <summary>The <paramref name="room" /> was added to <paramref name="zone" />, which belongs to <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidAddRoomToZone(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMRoom,MonoTouch.HomeKit.HMZone)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidAddService">
        <MemberSignature Language="C#" Value="public static void DidAddService (this MonoTouch.HomeKit.IHMHomeDelegate This, MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMService service, MonoTouch.HomeKit.HMServiceGroup group);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAddService(class MonoTouch.HomeKit.IHMHomeDelegate This, class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMService service, class MonoTouch.HomeKit.HMServiceGroup group) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="service" Type="MonoTouch.HomeKit.HMService" />
          <Parameter Name="group" Type="MonoTouch.HomeKit.HMServiceGroup" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="service">To be added.</param>
          <param name="group">To be added.</param>
          <summary>The <paramref name="service" /> was added to <paramref name="group" />, which belongs to <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidAddService(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMService,MonoTouch.HomeKit.HMServiceGroup)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidAddServiceGroup">
        <MemberSignature Language="C#" Value="public static void DidAddServiceGroup (this MonoTouch.HomeKit.IHMHomeDelegate This, MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMServiceGroup group);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAddServiceGroup(class MonoTouch.HomeKit.IHMHomeDelegate This, class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMServiceGroup group) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="serviceGroup" Type="MonoTouch.HomeKit.HMServiceGroup" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="group">To be added.</param>
          <summary>The <paramref name="group" /> was added to <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidAddServiceGroup(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMServiceGroup)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidAddTrigger">
        <MemberSignature Language="C#" Value="public static void DidAddTrigger (this MonoTouch.HomeKit.IHMHomeDelegate This, MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMTrigger trigger);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAddTrigger(class MonoTouch.HomeKit.IHMHomeDelegate This, class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMTrigger trigger) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="trigger" Type="MonoTouch.HomeKit.HMTrigger" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="trigger">To be added.</param>
          <summary>The <paramref name="trigger" /> was added to <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidAddTrigger(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMTrigger)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidAddUser">
        <MemberSignature Language="C#" Value="public static void DidAddUser (this MonoTouch.HomeKit.IHMHomeDelegate This, MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMUser user);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAddUser(class MonoTouch.HomeKit.IHMHomeDelegate This, class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMUser user) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="user" Type="MonoTouch.HomeKit.HMUser" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="user">To be added.</param>
          <summary>The <paramref name="user" /> was added to <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidAddUser(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMUser)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidAddZone">
        <MemberSignature Language="C#" Value="public static void DidAddZone (this MonoTouch.HomeKit.IHMHomeDelegate This, MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMZone zone);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAddZone(class MonoTouch.HomeKit.IHMHomeDelegate This, class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMZone zone) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="zone" Type="MonoTouch.HomeKit.HMZone" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="zone">To be added.</param>
          <summary>The <paramref name="zone" /> was added to <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidAddZone(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMZone)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidEncounterError">
        <MemberSignature Language="C#" Value="public static void DidEncounterError (this MonoTouch.HomeKit.IHMHomeDelegate This, MonoTouch.HomeKit.HMHome home, MonoTouch.Foundation.NSError error, MonoTouch.HomeKit.HMAccessory accessory);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidEncounterError(class MonoTouch.HomeKit.IHMHomeDelegate This, class MonoTouch.HomeKit.HMHome home, class MonoTouch.Foundation.NSError error, class MonoTouch.HomeKit.HMAccessory accessory) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
          <Parameter Name="accessory" Type="MonoTouch.HomeKit.HMAccessory" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="error">To be added.</param>
          <param name="accessory">To be added.</param>
          <summary>The <paramref name="error" /> occurred in <paramref name="accessory" />, which belongs to <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidEncounterError(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.Foundation.NSError,MonoTouch.HomeKit.HMAccessory)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidRemoveAccessory">
        <MemberSignature Language="C#" Value="public static void DidRemoveAccessory (this MonoTouch.HomeKit.IHMHomeDelegate This, MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMAccessory accessory);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRemoveAccessory(class MonoTouch.HomeKit.IHMHomeDelegate This, class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMAccessory accessory) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="accessory" Type="MonoTouch.HomeKit.HMAccessory" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="accessory">To be added.</param>
          <summary>The <paramref name="accessory" /> was removed from <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidRemoveAccessory(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMAccessory)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidRemoveActionSet">
        <MemberSignature Language="C#" Value="public static void DidRemoveActionSet (this MonoTouch.HomeKit.IHMHomeDelegate This, MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMActionSet actionSet);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRemoveActionSet(class MonoTouch.HomeKit.IHMHomeDelegate This, class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMActionSet actionSet) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="actionSet" Type="MonoTouch.HomeKit.HMActionSet" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="actionSet">To be added.</param>
          <summary>The <paramref name="actionSet" /> was removed from <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidRemoveActionSet(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMActionSet)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidRemoveRoom">
        <MemberSignature Language="C#" Value="public static void DidRemoveRoom (this MonoTouch.HomeKit.IHMHomeDelegate This, MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMRoom room);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRemoveRoom(class MonoTouch.HomeKit.IHMHomeDelegate This, class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMRoom room) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="room" Type="MonoTouch.HomeKit.HMRoom" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="room">To be added.</param>
          <summary>The <paramref name="room" /> was removed from <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidRemoveRoom(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMRoom)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidRemoveRoomFromZone">
        <MemberSignature Language="C#" Value="public static void DidRemoveRoomFromZone (this MonoTouch.HomeKit.IHMHomeDelegate This, MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMRoom room, MonoTouch.HomeKit.HMZone zone);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRemoveRoomFromZone(class MonoTouch.HomeKit.IHMHomeDelegate This, class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMRoom room, class MonoTouch.HomeKit.HMZone zone) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="room" Type="MonoTouch.HomeKit.HMRoom" />
          <Parameter Name="zone" Type="MonoTouch.HomeKit.HMZone" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="room">To be added.</param>
          <param name="zone">To be added.</param>
          <summary>The <paramref name="room" /> was removed from <paramref name="zone" />, which belongs to <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidRemoveRoomFromZone(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMRoom,MonoTouch.HomeKit.HMZone)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidRemoveService">
        <MemberSignature Language="C#" Value="public static void DidRemoveService (this MonoTouch.HomeKit.IHMHomeDelegate This, MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMService service, MonoTouch.HomeKit.HMServiceGroup group);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRemoveService(class MonoTouch.HomeKit.IHMHomeDelegate This, class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMService service, class MonoTouch.HomeKit.HMServiceGroup group) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="service" Type="MonoTouch.HomeKit.HMService" />
          <Parameter Name="group" Type="MonoTouch.HomeKit.HMServiceGroup" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="service">To be added.</param>
          <param name="group">To be added.</param>
          <summary>The <paramref name="service" /> was removed from <paramref name="group" />, which belongs to <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidRemoveService(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMService,MonoTouch.HomeKit.HMServiceGroup)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidRemoveServiceGroup">
        <MemberSignature Language="C#" Value="public static void DidRemoveServiceGroup (this MonoTouch.HomeKit.IHMHomeDelegate This, MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMServiceGroup group);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRemoveServiceGroup(class MonoTouch.HomeKit.IHMHomeDelegate This, class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMServiceGroup group) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="serviceGroup" Type="MonoTouch.HomeKit.HMServiceGroup" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="group">To be added.</param>
          <summary>The <paramref name="service" /> was removed from <paramref name="group" />, which belongs to <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidRemoveServiceGroup(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMServiceGroup)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidRemoveTrigger">
        <MemberSignature Language="C#" Value="public static void DidRemoveTrigger (this MonoTouch.HomeKit.IHMHomeDelegate This, MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMTrigger trigger);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRemoveTrigger(class MonoTouch.HomeKit.IHMHomeDelegate This, class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMTrigger trigger) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="trigger" Type="MonoTouch.HomeKit.HMTrigger" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="trigger">To be added.</param>
          <summary>The <paramref name="trigger" /> was removed from <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidRemoveTrigger(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMTrigger)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidRemoveUser">
        <MemberSignature Language="C#" Value="public static void DidRemoveUser (this MonoTouch.HomeKit.IHMHomeDelegate This, MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMUser user);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRemoveUser(class MonoTouch.HomeKit.IHMHomeDelegate This, class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMUser user) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="user" Type="MonoTouch.HomeKit.HMUser" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="user">To be added.</param>
          <summary>The <paramref name="user" /> was removed from <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidRemoveUser(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMUser)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidRemoveZone">
        <MemberSignature Language="C#" Value="public static void DidRemoveZone (this MonoTouch.HomeKit.IHMHomeDelegate This, MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMZone zone);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRemoveZone(class MonoTouch.HomeKit.IHMHomeDelegate This, class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMZone zone) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="zone" Type="MonoTouch.HomeKit.HMZone" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="zone">To be added.</param>
          <summary>The <paramref name="zone" /> was removed from <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidRemoveZone(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMZone)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidUnblockAccessory">
        <MemberSignature Language="C#" Value="public static void DidUnblockAccessory (this MonoTouch.HomeKit.IHMHomeDelegate This, MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMAccessory accessory);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUnblockAccessory(class MonoTouch.HomeKit.IHMHomeDelegate This, class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMAccessory accessory) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="accessory" Type="MonoTouch.HomeKit.HMAccessory" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="accessory">To be added.</param>
          <summary>The <paramref name="accessory" />, which belongs to <paramref name="home" />, was unblocked.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidUnblockAccessory(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMAccessory)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidUpdateActionsForActionSet">
        <MemberSignature Language="C#" Value="public static void DidUpdateActionsForActionSet (this MonoTouch.HomeKit.IHMHomeDelegate This, MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMActionSet actionSet);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateActionsForActionSet(class MonoTouch.HomeKit.IHMHomeDelegate This, class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMActionSet actionSet) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="actionSet" Type="MonoTouch.HomeKit.HMActionSet" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="actionSet">To be added.</param>
          <summary>The an action in <paramref name="actionSet" />, which belongs to <paramref name="home" />, was updated.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidUpdateActionsForActionSet(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMActionSet)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidUpdateNameForActionSet">
        <MemberSignature Language="C#" Value="public static void DidUpdateNameForActionSet (this MonoTouch.HomeKit.IHMHomeDelegate This, MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMActionSet actionSet);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateNameForActionSet(class MonoTouch.HomeKit.IHMHomeDelegate This, class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMActionSet actionSet) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="actionSet" Type="MonoTouch.HomeKit.HMActionSet" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="actionSet">To be added.</param>
          <summary>The name of the <paramref name="actionSet" />, which belongs to <paramref name="home" />, was updated.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidUpdateNameForActionSet(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMActionSet)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidUpdateNameForHome">
        <MemberSignature Language="C#" Value="public static void DidUpdateNameForHome (this MonoTouch.HomeKit.IHMHomeDelegate This, MonoTouch.HomeKit.HMHome home);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateNameForHome(class MonoTouch.HomeKit.IHMHomeDelegate This, class MonoTouch.HomeKit.HMHome home) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <summary>The name of the <paramref name="home" /> was updated.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidUpdateNameForHome(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidUpdateNameForRoom">
        <MemberSignature Language="C#" Value="public static void DidUpdateNameForRoom (this MonoTouch.HomeKit.IHMHomeDelegate This, MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMRoom room);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateNameForRoom(class MonoTouch.HomeKit.IHMHomeDelegate This, class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMRoom room) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="room" Type="MonoTouch.HomeKit.HMRoom" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="room">To be added.</param>
          <summary>The name of the <paramref name="room" />, which belongs to <paramref name="home" />, was updated.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidUpdateNameForRoom(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMRoom)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidUpdateNameForServiceGroup">
        <MemberSignature Language="C#" Value="public static void DidUpdateNameForServiceGroup (this MonoTouch.HomeKit.IHMHomeDelegate This, MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMServiceGroup group);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateNameForServiceGroup(class MonoTouch.HomeKit.IHMHomeDelegate This, class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMServiceGroup group) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="serviceGroup" Type="MonoTouch.HomeKit.HMServiceGroup" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="group">To be added.</param>
          <summary>The name of the <paramref name="group" />, which belongs to <paramref name="home" />, was updated.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidUpdateNameForServiceGroup(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMServiceGroup)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidUpdateNameForTrigger">
        <MemberSignature Language="C#" Value="public static void DidUpdateNameForTrigger (this MonoTouch.HomeKit.IHMHomeDelegate This, MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMTrigger trigger);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateNameForTrigger(class MonoTouch.HomeKit.IHMHomeDelegate This, class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMTrigger trigger) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="trigger" Type="MonoTouch.HomeKit.HMTrigger" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="trigger">To be added.</param>
          <summary>The name of the <paramref name="trigger" />, which belongs to <paramref name="home" />, was updated.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidUpdateNameForTrigger(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMTrigger)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidUpdateNameForZone">
        <MemberSignature Language="C#" Value="public static void DidUpdateNameForZone (this MonoTouch.HomeKit.IHMHomeDelegate This, MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMZone zone);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateNameForZone(class MonoTouch.HomeKit.IHMHomeDelegate This, class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMZone zone) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="zone" Type="MonoTouch.HomeKit.HMZone" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="zone">To be added.</param>
          <summary>The name of the <paramref name="zone" />, which belongs to <paramref name="home" />, was updated.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidUpdateNameForZone(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMZone)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidUpdateRoom">
        <MemberSignature Language="C#" Value="public static void DidUpdateRoom (this MonoTouch.HomeKit.IHMHomeDelegate This, MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMRoom room, MonoTouch.HomeKit.HMAccessory accessory);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateRoom(class MonoTouch.HomeKit.IHMHomeDelegate This, class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMRoom room, class MonoTouch.HomeKit.HMAccessory accessory) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="room" Type="MonoTouch.HomeKit.HMRoom" />
          <Parameter Name="accessory" Type="MonoTouch.HomeKit.HMAccessory" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="room">To be added.</param>
          <param name="accessory">To be added.</param>
          <summary>The <paramref name="accessory" /> was assigned to <paramref name="room" />, which belongs to <paramref name="home" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidUpdateRoom(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMRoom,MonoTouch.HomeKit.HMAccessory)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeDelegate" />
      </Targets>
      <Member MemberName="DidUpdateTrigger">
        <MemberSignature Language="C#" Value="public static void DidUpdateTrigger (this MonoTouch.HomeKit.IHMHomeDelegate This, MonoTouch.HomeKit.HMHome home, MonoTouch.HomeKit.HMTrigger trigger);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateTrigger(class MonoTouch.HomeKit.IHMHomeDelegate This, class MonoTouch.HomeKit.HMHome home, class MonoTouch.HomeKit.HMTrigger trigger) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeDelegate" RefType="this" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
          <Parameter Name="trigger" Type="MonoTouch.HomeKit.HMTrigger" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="home">To be added.</param>
          <param name="trigger">To be added.</param>
          <summary>The  <paramref name="trigger" />, which belongs to <paramref name="home" />, was updated.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeDelegate_Extensions.DidUpdateTrigger(MonoTouch.HomeKit.IHMHomeDelegate,MonoTouch.HomeKit.HMHome,MonoTouch.HomeKit.HMTrigger)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeManagerDelegate" />
      </Targets>
      <Member MemberName="DidAddHome">
        <MemberSignature Language="C#" Value="public static void DidAddHome (this MonoTouch.HomeKit.IHMHomeManagerDelegate This, MonoTouch.HomeKit.HMHomeManager manager, MonoTouch.HomeKit.HMHome home);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAddHome(class MonoTouch.HomeKit.IHMHomeManagerDelegate This, class MonoTouch.HomeKit.HMHomeManager manager, class MonoTouch.HomeKit.HMHome home) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.HomeKit.HMHomeManager" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">To be added.</param>
          <param name="home">To be added.</param>
          <summary>The <paramref name="home" /> was added to <paramref name="manager" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeManagerDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeManagerDelegate_Extensions.DidAddHome(MonoTouch.HomeKit.IHMHomeManagerDelegate,MonoTouch.HomeKit.HMHomeManager,MonoTouch.HomeKit.HMHome)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeManagerDelegate" />
      </Targets>
      <Member MemberName="DidRemoveHome">
        <MemberSignature Language="C#" Value="public static void DidRemoveHome (this MonoTouch.HomeKit.IHMHomeManagerDelegate This, MonoTouch.HomeKit.HMHomeManager manager, MonoTouch.HomeKit.HMHome home);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRemoveHome(class MonoTouch.HomeKit.IHMHomeManagerDelegate This, class MonoTouch.HomeKit.HMHomeManager manager, class MonoTouch.HomeKit.HMHome home) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.HomeKit.HMHomeManager" />
          <Parameter Name="home" Type="MonoTouch.HomeKit.HMHome" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">To be added.</param>
          <param name="home">To be added.</param>
          <summary>The <paramref name="home" /> was removed from <paramref name="manager" />.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeManagerDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeManagerDelegate_Extensions.DidRemoveHome(MonoTouch.HomeKit.IHMHomeManagerDelegate,MonoTouch.HomeKit.HMHomeManager,MonoTouch.HomeKit.HMHome)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeManagerDelegate" />
      </Targets>
      <Member MemberName="DidUpdateHomes">
        <MemberSignature Language="C#" Value="public static void DidUpdateHomes (this MonoTouch.HomeKit.IHMHomeManagerDelegate This, MonoTouch.HomeKit.HMHomeManager manager);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateHomes(class MonoTouch.HomeKit.IHMHomeManagerDelegate This, class MonoTouch.HomeKit.HMHomeManager manager) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.HomeKit.HMHomeManager" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">To be added.</param>
          <summary>A home in <paramref name="manager" /> was updated.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeManagerDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeManagerDelegate_Extensions.DidUpdateHomes(MonoTouch.HomeKit.IHMHomeManagerDelegate,MonoTouch.HomeKit.HMHomeManager)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.HomeKit.IHMHomeManagerDelegate" />
      </Targets>
      <Member MemberName="DidUpdatePrimaryHome">
        <MemberSignature Language="C#" Value="public static void DidUpdatePrimaryHome (this MonoTouch.HomeKit.IHMHomeManagerDelegate This, MonoTouch.HomeKit.HMHomeManager manager);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdatePrimaryHome(class MonoTouch.HomeKit.IHMHomeManagerDelegate This, class MonoTouch.HomeKit.HMHomeManager manager) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.HomeKit.IHMHomeManagerDelegate" RefType="this" />
          <Parameter Name="manager" Type="MonoTouch.HomeKit.HMHomeManager" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="manager">To be added.</param>
          <summary>The primary home in <paramref name="manager" /> was updated.</summary>
        </Docs>
        <Link Type="MonoTouch.HomeKit.HMHomeManagerDelegate_Extensions" Member="M:MonoTouch.HomeKit.HMHomeManagerDelegate_Extensions.DidUpdatePrimaryHome(MonoTouch.HomeKit.IHMHomeManagerDelegate,MonoTouch.HomeKit.HMHomeManager)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.iAd.IADBannerViewDelegate" />
      </Targets>
      <Member MemberName="ActionFinished">
        <MemberSignature Language="C#" Value="public static void ActionFinished (this MonoTouch.iAd.IADBannerViewDelegate This, MonoTouch.iAd.ADBannerView banner);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ActionFinished(class MonoTouch.iAd.IADBannerViewDelegate This, class MonoTouch.iAd.ADBannerView banner) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.iAd.IADBannerViewDelegate" RefType="this" />
          <Parameter Name="banner" Type="MonoTouch.iAd.ADBannerView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="banner">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.ADBannerViewDelegate_Extensions" Member="M:MonoTouch.iAd.ADBannerViewDelegate_Extensions.ActionFinished(MonoTouch.iAd.IADBannerViewDelegate,MonoTouch.iAd.ADBannerView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.iAd.IADBannerViewDelegate" />
      </Targets>
      <Member MemberName="ActionShouldBegin">
        <MemberSignature Language="C#" Value="public static bool ActionShouldBegin (this MonoTouch.iAd.IADBannerViewDelegate This, MonoTouch.iAd.ADBannerView banner, bool willLeaveApplication);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ActionShouldBegin(class MonoTouch.iAd.IADBannerViewDelegate This, class MonoTouch.iAd.ADBannerView banner, bool willLeaveApplication) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.iAd.IADBannerViewDelegate" RefType="this" />
          <Parameter Name="banner" Type="MonoTouch.iAd.ADBannerView" />
          <Parameter Name="willLeaveApplication" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="banner">To be added.</param>
          <param name="willLeaveApplication">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.ADBannerViewDelegate_Extensions" Member="M:MonoTouch.iAd.ADBannerViewDelegate_Extensions.ActionShouldBegin(MonoTouch.iAd.IADBannerViewDelegate,MonoTouch.iAd.ADBannerView,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.iAd.IADBannerViewDelegate" />
      </Targets>
      <Member MemberName="AdLoaded">
        <MemberSignature Language="C#" Value="public static void AdLoaded (this MonoTouch.iAd.IADBannerViewDelegate This, MonoTouch.iAd.ADBannerView banner);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AdLoaded(class MonoTouch.iAd.IADBannerViewDelegate This, class MonoTouch.iAd.ADBannerView banner) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.iAd.IADBannerViewDelegate" RefType="this" />
          <Parameter Name="banner" Type="MonoTouch.iAd.ADBannerView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="banner">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.ADBannerViewDelegate_Extensions" Member="M:MonoTouch.iAd.ADBannerViewDelegate_Extensions.AdLoaded(MonoTouch.iAd.IADBannerViewDelegate,MonoTouch.iAd.ADBannerView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.iAd.IADBannerViewDelegate" />
      </Targets>
      <Member MemberName="FailedToReceiveAd">
        <MemberSignature Language="C#" Value="public static void FailedToReceiveAd (this MonoTouch.iAd.IADBannerViewDelegate This, MonoTouch.iAd.ADBannerView banner, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FailedToReceiveAd(class MonoTouch.iAd.IADBannerViewDelegate This, class MonoTouch.iAd.ADBannerView banner, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.iAd.IADBannerViewDelegate" RefType="this" />
          <Parameter Name="banner" Type="MonoTouch.iAd.ADBannerView" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="banner">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.ADBannerViewDelegate_Extensions" Member="M:MonoTouch.iAd.ADBannerViewDelegate_Extensions.FailedToReceiveAd(MonoTouch.iAd.IADBannerViewDelegate,MonoTouch.iAd.ADBannerView,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.iAd.IADBannerViewDelegate" />
      </Targets>
      <Member MemberName="WillLoad">
        <MemberSignature Language="C#" Value="public static void WillLoad (this MonoTouch.iAd.IADBannerViewDelegate This, MonoTouch.iAd.ADBannerView bannerView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillLoad(class MonoTouch.iAd.IADBannerViewDelegate This, class MonoTouch.iAd.ADBannerView bannerView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.iAd.IADBannerViewDelegate" RefType="this" />
          <Parameter Name="bannerView" Type="MonoTouch.iAd.ADBannerView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="bannerView">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.ADBannerViewDelegate_Extensions" Member="M:MonoTouch.iAd.ADBannerViewDelegate_Extensions.WillLoad(MonoTouch.iAd.IADBannerViewDelegate,MonoTouch.iAd.ADBannerView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.iAd.ADClientError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.iAd.ADClientError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.iAd.ADClientError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.iAd.ADClientError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.ADClientErrorExtensions" Member="M:MonoTouch.iAd.ADClientErrorExtensions.GetDomain(MonoTouch.iAd.ADClientError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.iAd.ADError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.iAd.ADError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.iAd.ADError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.iAd.ADError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.iAd.ADError value</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.ADErrorExtensions" Member="M:MonoTouch.iAd.ADErrorExtensions.GetDomain(MonoTouch.iAd.ADError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.iAd.IADInterstitialAdDelegate" />
      </Targets>
      <Member MemberName="WillLoad">
        <MemberSignature Language="C#" Value="public static void WillLoad (this MonoTouch.iAd.IADInterstitialAdDelegate This, MonoTouch.iAd.ADInterstitialAd interstitialAd);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillLoad(class MonoTouch.iAd.IADInterstitialAdDelegate This, class MonoTouch.iAd.ADInterstitialAd interstitialAd) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.iAd.IADInterstitialAdDelegate" RefType="this" />
          <Parameter Name="interstitialAd" Type="MonoTouch.iAd.ADInterstitialAd" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="interstitialAd">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.ADInterstitialAdDelegate_Extensions" Member="M:MonoTouch.iAd.ADInterstitialAdDelegate_Extensions.WillLoad(MonoTouch.iAd.IADInterstitialAdDelegate,MonoTouch.iAd.ADInterstitialAd)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIViewController" />
      </Targets>
      <Member MemberName="DisplayingBannerAd">
        <MemberSignature Language="C#" Value="public static bool DisplayingBannerAd (this MonoTouch.UIKit.UIViewController This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DisplayingBannerAd(class MonoTouch.UIKit.UIViewController This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UIViewController" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.IAdAdditions" Member="M:MonoTouch.iAd.IAdAdditions.DisplayingBannerAd(MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIViewController" />
      </Targets>
      <Member MemberName="GetCanDisplayBannerAds">
        <MemberSignature Language="C#" Value="public static bool GetCanDisplayBannerAds (this MonoTouch.UIKit.UIViewController This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetCanDisplayBannerAds(class MonoTouch.UIKit.UIViewController This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UIViewController" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.IAdAdditions" Member="M:MonoTouch.iAd.IAdAdditions.GetCanDisplayBannerAds(MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIViewController" />
      </Targets>
      <Member MemberName="GetInterstitialPresentationPolicy">
        <MemberSignature Language="C#" Value="public static MonoTouch.iAd.ADInterstitialPresentationPolicy GetInterstitialPresentationPolicy (this MonoTouch.UIKit.UIViewController This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.iAd.ADInterstitialPresentationPolicy GetInterstitialPresentationPolicy(class MonoTouch.UIKit.UIViewController This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.iAd.ADInterstitialPresentationPolicy</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UIViewController" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.IAdAdditions" Member="M:MonoTouch.iAd.IAdAdditions.GetInterstitialPresentationPolicy(MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIViewController" />
      </Targets>
      <Member MemberName="GetOriginalContentView">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIView GetOriginalContentView (this MonoTouch.UIKit.UIViewController This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UIView GetOriginalContentView(class MonoTouch.UIKit.UIViewController This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIView</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UIViewController" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.IAdAdditions" Member="M:MonoTouch.iAd.IAdAdditions.GetOriginalContentView(MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIViewController" />
      </Targets>
      <Member MemberName="PresentingFullScreenAd">
        <MemberSignature Language="C#" Value="public static bool PresentingFullScreenAd (this MonoTouch.UIKit.UIViewController This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool PresentingFullScreenAd(class MonoTouch.UIKit.UIViewController This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UIViewController" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.IAdAdditions" Member="M:MonoTouch.iAd.IAdAdditions.PresentingFullScreenAd(MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIViewController" />
      </Targets>
      <Member MemberName="RequestInterstitialAdPresentation">
        <MemberSignature Language="C#" Value="public static bool RequestInterstitialAdPresentation (this MonoTouch.UIKit.UIViewController This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool RequestInterstitialAdPresentation(class MonoTouch.UIKit.UIViewController This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UIViewController" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.IAdAdditions" Member="M:MonoTouch.iAd.IAdAdditions.RequestInterstitialAdPresentation(MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIViewController" />
      </Targets>
      <Member MemberName="SetCanDisplayBannerAds">
        <MemberSignature Language="C#" Value="public static void SetCanDisplayBannerAds (this MonoTouch.UIKit.UIViewController This, bool value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCanDisplayBannerAds(class MonoTouch.UIKit.UIViewController This, bool value) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UIViewController" RefType="this" />
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="value">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.IAdAdditions" Member="M:MonoTouch.iAd.IAdAdditions.SetCanDisplayBannerAds(MonoTouch.UIKit.UIViewController,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIViewController" />
      </Targets>
      <Member MemberName="SetInterstitialPresentationPolicy">
        <MemberSignature Language="C#" Value="public static void SetInterstitialPresentationPolicy (this MonoTouch.UIKit.UIViewController This, MonoTouch.iAd.ADInterstitialPresentationPolicy policy);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetInterstitialPresentationPolicy(class MonoTouch.UIKit.UIViewController This, valuetype MonoTouch.iAd.ADInterstitialPresentationPolicy policy) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UIViewController" RefType="this" />
          <Parameter Name="policy" Type="MonoTouch.iAd.ADInterstitialPresentationPolicy" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="policy">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.IAdAdditions" Member="M:MonoTouch.iAd.IAdAdditions.SetInterstitialPresentationPolicy(MonoTouch.UIKit.UIViewController,MonoTouch.iAd.ADInterstitialPresentationPolicy)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIViewController" />
      </Targets>
      <Member MemberName="ShouldPresentInterstitialAd">
        <MemberSignature Language="C#" Value="public static bool ShouldPresentInterstitialAd (this MonoTouch.UIKit.UIViewController This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldPresentInterstitialAd(class MonoTouch.UIKit.UIViewController This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UIViewController" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.IAdAdditions" Member="M:MonoTouch.iAd.IAdAdditions.ShouldPresentInterstitialAd(MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MediaPlayer.MPMoviePlayerController" />
      </Targets>
      <Member MemberName="CancelPreroll">
        <MemberSignature Language="C#" Value="public static void CancelPreroll (this MonoTouch.MediaPlayer.MPMoviePlayerController This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CancelPreroll(class MonoTouch.MediaPlayer.MPMoviePlayerController This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MediaPlayer.MPMoviePlayerController" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.IAdPreroll" Member="M:MonoTouch.iAd.IAdPreroll.CancelPreroll(MonoTouch.MediaPlayer.MPMoviePlayerController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MediaPlayer.MPMoviePlayerController" />
      </Targets>
      <Member MemberName="PlayPrerollAd" apistyle="unified">
        <MemberSignature Language="C#" Value="public static void PlayPrerollAd (this MonoTouch.MediaPlayer.MPMoviePlayerController This, Action&lt;MonoTouch.Foundation.NSError&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PlayPrerollAd(class MonoTouch.MediaPlayer.MPMoviePlayerController This, class System.Action`1&lt;class MonoTouch.Foundation.NSError&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MediaPlayer.MPMoviePlayerController" RefType="this" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSError&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V6))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.IAdPreroll" Member="M:MonoTouch.iAd.IAdPreroll.PlayPrerollAd(MonoTouch.MediaPlayer.MPMoviePlayerController,System.Action{MonoTouch.Foundation.NSError})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVKit.AVPlayerViewController" />
      </Targets>
      <Member MemberName="CancelPreroll">
        <MemberSignature Language="C#" Value="public static void CancelPreroll (this MonoTouch.AVKit.AVPlayerViewController This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CancelPreroll(class MonoTouch.AVKit.AVPlayerViewController This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVKit.AVPlayerViewController" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.iAdPreroll_AVPlayerViewController" Member="M:MonoTouch.iAd.iAdPreroll_AVPlayerViewController.CancelPreroll(MonoTouch.AVKit.AVPlayerViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.AVKit.AVPlayerViewController" />
      </Targets>
      <Member MemberName="PlayPrerollAd">
        <MemberSignature Language="C#" Value="public static void PlayPrerollAd (this MonoTouch.AVKit.AVPlayerViewController This, Action&lt;MonoTouch.Foundation.NSError&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PlayPrerollAd(class MonoTouch.AVKit.AVPlayerViewController This, class System.Action`1&lt;class MonoTouch.Foundation.NSError&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.AVKit.AVPlayerViewController" RefType="this" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSError&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V0))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.iAd.iAdPreroll_AVPlayerViewController" Member="M:MonoTouch.iAd.iAdPreroll_AVPlayerViewController.PlayPrerollAd(MonoTouch.AVKit.AVPlayerViewController,System.Action{MonoTouch.Foundation.NSError})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ImageIO.CGImageMetadataErrors" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.ImageIO.CGImageMetadataErrors self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.ImageIO.CGImageMetadataErrors self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.ImageIO.CGImageMetadataErrors" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.ImageIO.CGImageMetadataErrors value</summary>
        </Docs>
        <Link Type="MonoTouch.ImageIO.CGImageMetadataErrorsExtensions" Member="M:MonoTouch.ImageIO.CGImageMetadataErrorsExtensions.GetDomain(MonoTouch.ImageIO.CGImageMetadataErrors)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKAnnotation" />
      </Targets>
      <Member MemberName="GetSubtitle">
        <MemberSignature Language="C#" Value="public static string GetSubtitle (this MonoTouch.MapKit.IMKAnnotation This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetSubtitle(class MonoTouch.MapKit.IMKAnnotation This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKAnnotation" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKAnnotation_Extensions" Member="M:MonoTouch.MapKit.MKAnnotation_Extensions.GetSubtitle(MonoTouch.MapKit.IMKAnnotation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKAnnotation" />
      </Targets>
      <Member MemberName="GetTitle">
        <MemberSignature Language="C#" Value="public static string GetTitle (this MonoTouch.MapKit.IMKAnnotation This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTitle(class MonoTouch.MapKit.IMKAnnotation This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKAnnotation" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKAnnotation_Extensions" Member="M:MonoTouch.MapKit.MKAnnotation_Extensions.GetTitle(MonoTouch.MapKit.IMKAnnotation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKAnnotation" />
      </Targets>
      <Member MemberName="SetCoordinate" apistyle="unified">
        <MemberSignature Language="C#" Value="public static void SetCoordinate (this MonoTouch.MapKit.IMKAnnotation This, MonoTouch.CoreLocation.CLLocationCoordinate2D value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCoordinate(class MonoTouch.MapKit.IMKAnnotation This, valuetype MonoTouch.CoreLocation.CLLocationCoordinate2D value) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKAnnotation" RefType="this" />
          <Parameter Name="value" Type="MonoTouch.CoreLocation.CLLocationCoordinate2D" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="value">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKAnnotation_Extensions" Member="M:MonoTouch.MapKit.MKAnnotation_Extensions.SetCoordinate(MonoTouch.MapKit.IMKAnnotation,MonoTouch.CoreLocation.CLLocationCoordinate2D)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.MKErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.MapKit.MKErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.MapKit.MKErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.MapKit.MKErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.MapKit.MKErrorCode value</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKErrorCodeExtensions" Member="M:MonoTouch.MapKit.MKErrorCodeExtensions.GetDomain(MonoTouch.MapKit.MKErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKLocalSearchCompleterDelegate" />
      </Targets>
      <Member MemberName="DidFail">
        <MemberSignature Language="C#" Value="public static void DidFail (this MonoTouch.MapKit.IMKLocalSearchCompleterDelegate This, MonoTouch.MapKit.MKLocalSearchCompleter completer, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFail(class MonoTouch.MapKit.IMKLocalSearchCompleterDelegate This, class MonoTouch.MapKit.MKLocalSearchCompleter completer, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKLocalSearchCompleterDelegate" RefType="this" />
          <Parameter Name="completer" Type="MonoTouch.MapKit.MKLocalSearchCompleter" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="completer">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKLocalSearchCompleterDelegate_Extensions" Member="M:MonoTouch.MapKit.MKLocalSearchCompleterDelegate_Extensions.DidFail(MonoTouch.MapKit.IMKLocalSearchCompleterDelegate,MonoTouch.MapKit.MKLocalSearchCompleter,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKLocalSearchCompleterDelegate" />
      </Targets>
      <Member MemberName="DidUpdateResults">
        <MemberSignature Language="C#" Value="public static void DidUpdateResults (this MonoTouch.MapKit.IMKLocalSearchCompleterDelegate This, MonoTouch.MapKit.MKLocalSearchCompleter completer);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateResults(class MonoTouch.MapKit.IMKLocalSearchCompleterDelegate This, class MonoTouch.MapKit.MKLocalSearchCompleter completer) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKLocalSearchCompleterDelegate" RefType="this" />
          <Parameter Name="completer" Type="MonoTouch.MapKit.MKLocalSearchCompleter" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="completer">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKLocalSearchCompleterDelegate_Extensions" Member="M:MonoTouch.MapKit.MKLocalSearchCompleterDelegate_Extensions.DidUpdateResults(MonoTouch.MapKit.IMKLocalSearchCompleterDelegate,MonoTouch.MapKit.MKLocalSearchCompleter)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="CalloutAccessoryControlTapped">
        <MemberSignature Language="C#" Value="public static void CalloutAccessoryControlTapped (this MonoTouch.MapKit.IMKMapViewDelegate This, MonoTouch.MapKit.MKMapView mapView, MonoTouch.MapKit.MKAnnotationView view, MonoTouch.UIKit.UIControl control);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CalloutAccessoryControlTapped(class MonoTouch.MapKit.IMKMapViewDelegate This, class MonoTouch.MapKit.MKMapView mapView, class MonoTouch.MapKit.MKAnnotationView view, class MonoTouch.UIKit.UIControl control) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
          <Parameter Name="view" Type="MonoTouch.MapKit.MKAnnotationView" />
          <Parameter Name="control" Type="MonoTouch.UIKit.UIControl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <param name="view">To be added.</param>
          <param name="control">To be added.</param>
          <summary>Called when the callout accessory <param name="control" /> has been tapped.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.CalloutAccessoryControlTapped(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView,MonoTouch.MapKit.MKAnnotationView,MonoTouch.UIKit.UIControl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="ChangedDragState">
        <MemberSignature Language="C#" Value="public static void ChangedDragState (this MonoTouch.MapKit.IMKMapViewDelegate This, MonoTouch.MapKit.MKMapView mapView, MonoTouch.MapKit.MKAnnotationView annotationView, MonoTouch.MapKit.MKAnnotationViewDragState newState, MonoTouch.MapKit.MKAnnotationViewDragState oldState);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangedDragState(class MonoTouch.MapKit.IMKMapViewDelegate This, class MonoTouch.MapKit.MKMapView mapView, class MonoTouch.MapKit.MKAnnotationView annotationView, valuetype MonoTouch.MapKit.MKAnnotationViewDragState newState, valuetype MonoTouch.MapKit.MKAnnotationViewDragState oldState) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
          <Parameter Name="annotationView" Type="MonoTouch.MapKit.MKAnnotationView" />
          <Parameter Name="newState" Type="MonoTouch.MapKit.MKAnnotationViewDragState" />
          <Parameter Name="oldState" Type="MonoTouch.MapKit.MKAnnotationViewDragState" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <param name="annotationView">To be added.</param>
          <param name="newState">To be added.</param>
          <param name="oldState">To be added.</param>
          <summary>Called when the drag state has changed from <param name="oldState" /> to <param name="newState" />.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.ChangedDragState(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView,MonoTouch.MapKit.MKAnnotationView,MonoTouch.MapKit.MKAnnotationViewDragState,MonoTouch.MapKit.MKAnnotationViewDragState)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="DidAddAnnotationViews">
        <MemberSignature Language="C#" Value="public static void DidAddAnnotationViews (this MonoTouch.MapKit.IMKMapViewDelegate This, MonoTouch.MapKit.MKMapView mapView, MonoTouch.MapKit.MKAnnotationView[] views);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAddAnnotationViews(class MonoTouch.MapKit.IMKMapViewDelegate This, class MonoTouch.MapKit.MKMapView mapView, class MonoTouch.MapKit.MKAnnotationView[] views) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
          <Parameter Name="views" Type="MonoTouch.MapKit.MKAnnotationView[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <param name="views">To be added.</param>
          <summary>Called when an annotation view (or views) have been added to <param name="mapView" />.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.DidAddAnnotationViews(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView,MonoTouch.MapKit.MKAnnotationView[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="DidAddOverlayRenderers">
        <MemberSignature Language="C#" Value="public static void DidAddOverlayRenderers (this MonoTouch.MapKit.IMKMapViewDelegate This, MonoTouch.MapKit.MKMapView mapView, MonoTouch.MapKit.MKOverlayRenderer[] renderers);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAddOverlayRenderers(class MonoTouch.MapKit.IMKMapViewDelegate This, class MonoTouch.MapKit.MKMapView mapView, class MonoTouch.MapKit.MKOverlayRenderer[] renderers) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
          <Parameter Name="renderers" Type="MonoTouch.MapKit.MKOverlayRenderer[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <param name="renderers">To be added.</param>
          <summary>Called when an overlay renderer (or renderers) have been added to <param name="mapView" />.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.DidAddOverlayRenderers(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView,MonoTouch.MapKit.MKOverlayRenderer[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="DidAddOverlayViews">
        <MemberSignature Language="C#" Value="public static void DidAddOverlayViews (this MonoTouch.MapKit.IMKMapViewDelegate This, MonoTouch.MapKit.MKMapView mapView, MonoTouch.MapKit.MKOverlayView overlayViews);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAddOverlayViews(class MonoTouch.MapKit.IMKMapViewDelegate This, class MonoTouch.MapKit.MKMapView mapView, class MonoTouch.MapKit.MKOverlayView overlayViews) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
          <Parameter Name="overlayViews" Type="MonoTouch.MapKit.MKOverlayView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <param name="overlayViews">To be added.</param>
          <summary>Called when <param name="overlayViews" /> have been added to <param name="mapView" />.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.DidAddOverlayViews(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView,MonoTouch.MapKit.MKOverlayView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="DidChangeUserTrackingMode" apistyle="unified">
        <MemberSignature Language="C#" Value="public static void DidChangeUserTrackingMode (this MonoTouch.MapKit.IMKMapViewDelegate This, MonoTouch.MapKit.MKMapView mapView, MonoTouch.MapKit.MKUserTrackingMode mode, bool animated);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidChangeUserTrackingMode(class MonoTouch.MapKit.IMKMapViewDelegate This, class MonoTouch.MapKit.MKMapView mapView, valuetype MonoTouch.MapKit.MKUserTrackingMode mode, bool animated) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
          <Parameter Name="mode" Type="MonoTouch.MapKit.MKUserTrackingMode" />
          <Parameter Name="animated" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <param name="mode">To be added.</param>
          <param name="animated">To be added.</param>
          <summary>Indicates a change in the active <see cref="T:Monotouch.MapKit.MKUserTrackingMode" />.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.DidChangeUserTrackingMode(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView,MonoTouch.MapKit.MKUserTrackingMode,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="DidDeselectAnnotationView">
        <MemberSignature Language="C#" Value="public static void DidDeselectAnnotationView (this MonoTouch.MapKit.IMKMapViewDelegate This, MonoTouch.MapKit.MKMapView mapView, MonoTouch.MapKit.MKAnnotationView view);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDeselectAnnotationView(class MonoTouch.MapKit.IMKMapViewDelegate This, class MonoTouch.MapKit.MKMapView mapView, class MonoTouch.MapKit.MKAnnotationView view) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
          <Parameter Name="view" Type="MonoTouch.MapKit.MKAnnotationView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <param name="view">To be added.</param>
          <summary>Indicates that <param name="view" /> has been deselected.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.DidDeselectAnnotationView(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView,MonoTouch.MapKit.MKAnnotationView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="DidFailToLocateUser">
        <MemberSignature Language="C#" Value="public static void DidFailToLocateUser (this MonoTouch.MapKit.IMKMapViewDelegate This, MonoTouch.MapKit.MKMapView mapView, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFailToLocateUser(class MonoTouch.MapKit.IMKMapViewDelegate This, class MonoTouch.MapKit.MKMapView mapView, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <param name="error">To be added.</param>
          <summary>Indicates that the attempt to locate the current user has failed due to <param name="error" />.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.DidFailToLocateUser(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="DidFinishRenderingMap">
        <MemberSignature Language="C#" Value="public static void DidFinishRenderingMap (this MonoTouch.MapKit.IMKMapViewDelegate This, MonoTouch.MapKit.MKMapView mapView, bool fullyRendered);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinishRenderingMap(class MonoTouch.MapKit.IMKMapViewDelegate This, class MonoTouch.MapKit.MKMapView mapView, bool fullyRendered) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
          <Parameter Name="fullyRendered" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <param name="fullyRendered">To be added.</param>
          <summary>Indicates that rendering of <param name="mapView" /> has completed.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.DidFinishRenderingMap(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="DidSelectAnnotationView">
        <MemberSignature Language="C#" Value="public static void DidSelectAnnotationView (this MonoTouch.MapKit.IMKMapViewDelegate This, MonoTouch.MapKit.MKMapView mapView, MonoTouch.MapKit.MKAnnotationView view);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSelectAnnotationView(class MonoTouch.MapKit.IMKMapViewDelegate This, class MonoTouch.MapKit.MKMapView mapView, class MonoTouch.MapKit.MKAnnotationView view) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
          <Parameter Name="view" Type="MonoTouch.MapKit.MKAnnotationView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <param name="view">To be added.</param>
          <summary>Indicates that the specified <see cref="T:Monotouch.MapKit.MKAnnotationView" /> has been selected.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.DidSelectAnnotationView(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView,MonoTouch.MapKit.MKAnnotationView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="DidStopLocatingUser">
        <MemberSignature Language="C#" Value="public static void DidStopLocatingUser (this MonoTouch.MapKit.IMKMapViewDelegate This, MonoTouch.MapKit.MKMapView mapView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidStopLocatingUser(class MonoTouch.MapKit.IMKMapViewDelegate This, class MonoTouch.MapKit.MKMapView mapView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <summary>Indicates the system has stopped attemptig to locate the user.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.DidStopLocatingUser(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="DidUpdateUserLocation">
        <MemberSignature Language="C#" Value="public static void DidUpdateUserLocation (this MonoTouch.MapKit.IMKMapViewDelegate This, MonoTouch.MapKit.MKMapView mapView, MonoTouch.MapKit.MKUserLocation userLocation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateUserLocation(class MonoTouch.MapKit.IMKMapViewDelegate This, class MonoTouch.MapKit.MKMapView mapView, class MonoTouch.MapKit.MKUserLocation userLocation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
          <Parameter Name="userLocation" Type="MonoTouch.MapKit.MKUserLocation" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <param name="userLocation">To be added.</param>
          <summary>Indicates the system has provided an update to the user's location.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.DidUpdateUserLocation(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView,MonoTouch.MapKit.MKUserLocation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="GetViewForAnnotation" apistyle="unified">
        <MemberSignature Language="C#" Value="public static MonoTouch.MapKit.MKAnnotationView GetViewForAnnotation (this MonoTouch.MapKit.IMKMapViewDelegate This, MonoTouch.MapKit.MKMapView mapView, MonoTouch.MapKit.IMKAnnotation annotation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.MapKit.MKAnnotationView GetViewForAnnotation(class MonoTouch.MapKit.IMKMapViewDelegate This, class MonoTouch.MapKit.MKMapView mapView, class MonoTouch.MapKit.IMKAnnotation annotation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.MapKit.MKAnnotationView</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
          <Parameter Name="annotation" Type="MonoTouch.MapKit.IMKAnnotation" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <param name="annotation">To be added.</param>
          <summary>Returns the <see cref="T:Monotouch.MapKit.MKAnnotationView" /> associated with the <param name="annotation" />.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.GetViewForAnnotation(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView,MonoTouch.MapKit.IMKAnnotation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="GetViewForOverlay" apistyle="unified">
        <MemberSignature Language="C#" Value="public static MonoTouch.MapKit.MKOverlayView GetViewForOverlay (this MonoTouch.MapKit.IMKMapViewDelegate This, MonoTouch.MapKit.MKMapView mapView, MonoTouch.MapKit.IMKOverlay overlay);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.MapKit.MKOverlayView GetViewForOverlay(class MonoTouch.MapKit.IMKMapViewDelegate This, class MonoTouch.MapKit.MKMapView mapView, class MonoTouch.MapKit.IMKOverlay overlay) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.MapKit.MKOverlayView</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
          <Parameter Name="overlay" Type="MonoTouch.MapKit.IMKOverlay" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <param name="overlay">To be added.</param>
          <summary>Use MKOverlayRenderer.RendererForOverlay instead</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.GetViewForOverlay(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView,MonoTouch.MapKit.IMKOverlay)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="LoadingMapFailed">
        <MemberSignature Language="C#" Value="public static void LoadingMapFailed (this MonoTouch.MapKit.IMKMapViewDelegate This, MonoTouch.MapKit.MKMapView mapView, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadingMapFailed(class MonoTouch.MapKit.IMKMapViewDelegate This, class MonoTouch.MapKit.MKMapView mapView, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <param name="error">To be added.</param>
          <summary>Indicates an <param name="error" /> caused loading to fail.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.LoadingMapFailed(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="MapLoaded">
        <MemberSignature Language="C#" Value="public static void MapLoaded (this MonoTouch.MapKit.IMKMapViewDelegate This, MonoTouch.MapKit.MKMapView mapView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MapLoaded(class MonoTouch.MapKit.IMKMapViewDelegate This, class MonoTouch.MapKit.MKMapView mapView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <summary>Indicates that loading of map data has completed.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.MapLoaded(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="OverlayRenderer">
        <MemberSignature Language="C#" Value="public static MonoTouch.MapKit.MKOverlayRenderer OverlayRenderer (this MonoTouch.MapKit.IMKMapViewDelegate This, MonoTouch.MapKit.MKMapView mapView, MonoTouch.MapKit.IMKOverlay overlay);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.MapKit.MKOverlayRenderer OverlayRenderer(class MonoTouch.MapKit.IMKMapViewDelegate This, class MonoTouch.MapKit.MKMapView mapView, class MonoTouch.MapKit.IMKOverlay overlay) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.MapKit.MKOverlayRenderer</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
          <Parameter Name="overlay" Type="MonoTouch.MapKit.IMKOverlay" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">The  being rendered.</param>
          <param name="overlay">The overlay requiring a renderer.</param>
          <summary>Calculates he <see cref="T:MonoTouch.MapKit.MKOverlayRenderer" /> appropriate to the <paramref name="overlay" />.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.OverlayRenderer(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView,MonoTouch.MapKit.IMKOverlay)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="RegionChanged">
        <MemberSignature Language="C#" Value="public static void RegionChanged (this MonoTouch.MapKit.IMKMapViewDelegate This, MonoTouch.MapKit.MKMapView mapView, bool animated);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegionChanged(class MonoTouch.MapKit.IMKMapViewDelegate This, class MonoTouch.MapKit.MKMapView mapView, bool animated) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
          <Parameter Name="animated" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <param name="animated">To be added.</param>
          <summary>Indicates the region displayed by <param name="mapView" /> has changed.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.RegionChanged(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="RegionWillChange">
        <MemberSignature Language="C#" Value="public static void RegionWillChange (this MonoTouch.MapKit.IMKMapViewDelegate This, MonoTouch.MapKit.MKMapView mapView, bool animated);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegionWillChange(class MonoTouch.MapKit.IMKMapViewDelegate This, class MonoTouch.MapKit.MKMapView mapView, bool animated) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
          <Parameter Name="animated" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <param name="animated">To be added.</param>
          <summary>Indicates the region displayed by <param name="mapView" /> is about to change.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.RegionWillChange(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="WillStartLoadingMap">
        <MemberSignature Language="C#" Value="public static void WillStartLoadingMap (this MonoTouch.MapKit.IMKMapViewDelegate This, MonoTouch.MapKit.MKMapView mapView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillStartLoadingMap(class MonoTouch.MapKit.IMKMapViewDelegate This, class MonoTouch.MapKit.MKMapView mapView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <summary>Indicates that loading of map data is about to begin.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.WillStartLoadingMap(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="WillStartLocatingUser">
        <MemberSignature Language="C#" Value="public static void WillStartLocatingUser (this MonoTouch.MapKit.IMKMapViewDelegate This, MonoTouch.MapKit.MKMapView mapView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillStartLocatingUser(class MonoTouch.MapKit.IMKMapViewDelegate This, class MonoTouch.MapKit.MKMapView mapView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <summary>Indicates that the system will start attempting to locate the user.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.WillStartLocatingUser(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKMapViewDelegate" />
      </Targets>
      <Member MemberName="WillStartRenderingMap">
        <MemberSignature Language="C#" Value="public static void WillStartRenderingMap (this MonoTouch.MapKit.IMKMapViewDelegate This, MonoTouch.MapKit.MKMapView mapView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillStartRenderingMap(class MonoTouch.MapKit.IMKMapViewDelegate This, class MonoTouch.MapKit.MKMapView mapView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKMapViewDelegate" RefType="this" />
          <Parameter Name="mapView" Type="MonoTouch.MapKit.MKMapView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="mapView">To be added.</param>
          <summary>Indicates that rendering of <param name="mapView" /> is about to begin.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKMapViewDelegate_Extensions" Member="M:MonoTouch.MapKit.MKMapViewDelegate_Extensions.WillStartRenderingMap(MonoTouch.MapKit.IMKMapViewDelegate,MonoTouch.MapKit.MKMapView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKOverlay" />
      </Targets>
      <Member MemberName="GetCanReplaceMapContent" apistyle="unified">
        <MemberSignature Language="C#" Value="public static bool GetCanReplaceMapContent (this MonoTouch.MapKit.IMKOverlay This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetCanReplaceMapContent(class MonoTouch.MapKit.IMKOverlay This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKOverlay" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKOverlay_Extensions" Member="M:MonoTouch.MapKit.MKOverlay_Extensions.GetCanReplaceMapContent(MonoTouch.MapKit.IMKOverlay)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MapKit.IMKOverlay" />
      </Targets>
      <Member MemberName="Intersects">
        <MemberSignature Language="C#" Value="public static bool Intersects (this MonoTouch.MapKit.IMKOverlay This, MonoTouch.MapKit.MKMapRect rect);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Intersects(class MonoTouch.MapKit.IMKOverlay This, valuetype MonoTouch.MapKit.MKMapRect rect) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MapKit.IMKOverlay" RefType="this" />
          <Parameter Name="rect" Type="MonoTouch.MapKit.MKMapRect" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="rect">The area being checked for intersection with this .</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.MKOverlay_Extensions" Member="M:MonoTouch.MapKit.MKOverlay_Extensions.Intersects(MonoTouch.MapKit.IMKOverlay,MonoTouch.MapKit.MKMapRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSUserActivity" />
      </Targets>
      <Member MemberName="GetMapItem">
        <MemberSignature Language="C#" Value="public static MonoTouch.MapKit.MKMapItem GetMapItem (this MonoTouch.Foundation.NSUserActivity This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.MapKit.MKMapItem GetMapItem(class MonoTouch.Foundation.NSUserActivity This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.MapKit.MKMapItem</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSUserActivity" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.NSUserActivity_MKMapItem" Member="M:MonoTouch.MapKit.NSUserActivity_MKMapItem.GetMapItem(MonoTouch.Foundation.NSUserActivity)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSUserActivity" />
      </Targets>
      <Member MemberName="SetMapItem">
        <MemberSignature Language="C#" Value="public static void SetMapItem (this MonoTouch.Foundation.NSUserActivity This, MonoTouch.MapKit.MKMapItem item);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetMapItem(class MonoTouch.Foundation.NSUserActivity This, class MonoTouch.MapKit.MKMapItem item) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSUserActivity" RefType="this" />
          <Parameter Name="item" Type="MonoTouch.MapKit.MKMapItem" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="item">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MapKit.NSUserActivity_MKMapItem" Member="M:MonoTouch.MapKit.NSUserActivity_MKMapItem.SetMapItem(MonoTouch.Foundation.NSUserActivity,MonoTouch.MapKit.MKMapItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MediaPlayer.MPErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.MediaPlayer.MPErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.MediaPlayer.MPErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.MediaPlayer.MPErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MediaPlayer.MPErrorCodeExtensions" Member="M:MonoTouch.MediaPlayer.MPErrorCodeExtensions.GetDomain(MonoTouch.MediaPlayer.MPErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MediaPlayer.IMPMediaPickerControllerDelegate" />
      </Targets>
      <Member MemberName="MediaItemsPicked">
        <MemberSignature Language="C#" Value="public static void MediaItemsPicked (this MonoTouch.MediaPlayer.IMPMediaPickerControllerDelegate This, MonoTouch.MediaPlayer.MPMediaPickerController sender, MonoTouch.MediaPlayer.MPMediaItemCollection mediaItemCollection);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MediaItemsPicked(class MonoTouch.MediaPlayer.IMPMediaPickerControllerDelegate This, class MonoTouch.MediaPlayer.MPMediaPickerController sender, class MonoTouch.MediaPlayer.MPMediaItemCollection mediaItemCollection) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MediaPlayer.IMPMediaPickerControllerDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.MediaPlayer.MPMediaPickerController" />
          <Parameter Name="mediaItemCollection" Type="MonoTouch.MediaPlayer.MPMediaItemCollection" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <param name="mediaItemCollection">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MediaPlayer.MPMediaPickerControllerDelegate_Extensions" Member="M:MonoTouch.MediaPlayer.MPMediaPickerControllerDelegate_Extensions.MediaItemsPicked(MonoTouch.MediaPlayer.IMPMediaPickerControllerDelegate,MonoTouch.MediaPlayer.MPMediaPickerController,MonoTouch.MediaPlayer.MPMediaItemCollection)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MediaPlayer.IMPMediaPickerControllerDelegate" />
      </Targets>
      <Member MemberName="MediaPickerDidCancel">
        <MemberSignature Language="C#" Value="public static void MediaPickerDidCancel (this MonoTouch.MediaPlayer.IMPMediaPickerControllerDelegate This, MonoTouch.MediaPlayer.MPMediaPickerController sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MediaPickerDidCancel(class MonoTouch.MediaPlayer.IMPMediaPickerControllerDelegate This, class MonoTouch.MediaPlayer.MPMediaPickerController sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MediaPlayer.IMPMediaPickerControllerDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.MediaPlayer.MPMediaPickerController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MediaPlayer.MPMediaPickerControllerDelegate_Extensions" Member="M:MonoTouch.MediaPlayer.MPMediaPickerControllerDelegate_Extensions.MediaPickerDidCancel(MonoTouch.MediaPlayer.IMPMediaPickerControllerDelegate,MonoTouch.MediaPlayer.MPMediaPickerController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MediaPlayer.IMPPlayableContentDataSource" />
      </Targets>
      <Member MemberName="BeginLoadingChildItems">
        <MemberSignature Language="C#" Value="public static void BeginLoadingChildItems (this MonoTouch.MediaPlayer.IMPPlayableContentDataSource This, MonoTouch.Foundation.NSIndexPath indexPath, Action&lt;MonoTouch.Foundation.NSError&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BeginLoadingChildItems(class MonoTouch.MediaPlayer.IMPPlayableContentDataSource This, class MonoTouch.Foundation.NSIndexPath indexPath, class System.Action`1&lt;class MonoTouch.Foundation.NSError&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MediaPlayer.IMPPlayableContentDataSource" RefType="this" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSError&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V0))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="indexPath">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MediaPlayer.MPPlayableContentDataSource_Extensions" Member="M:MonoTouch.MediaPlayer.MPPlayableContentDataSource_Extensions.BeginLoadingChildItems(MonoTouch.MediaPlayer.IMPPlayableContentDataSource,MonoTouch.Foundation.NSIndexPath,System.Action{MonoTouch.Foundation.NSError})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MediaPlayer.IMPPlayableContentDataSource" />
      </Targets>
      <Member MemberName="ChildItemsDisplayPlaybackProgress">
        <MemberSignature Language="C#" Value="public static bool ChildItemsDisplayPlaybackProgress (this MonoTouch.MediaPlayer.IMPPlayableContentDataSource This, MonoTouch.Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ChildItemsDisplayPlaybackProgress(class MonoTouch.MediaPlayer.IMPPlayableContentDataSource This, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MediaPlayer.IMPPlayableContentDataSource" RefType="this" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="indexPath">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MediaPlayer.MPPlayableContentDataSource_Extensions" Member="M:MonoTouch.MediaPlayer.MPPlayableContentDataSource_Extensions.ChildItemsDisplayPlaybackProgress(MonoTouch.MediaPlayer.IMPPlayableContentDataSource,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MediaPlayer.IMPPlayableContentDelegate" />
      </Targets>
      <Member MemberName="ContextUpdated">
        <MemberSignature Language="C#" Value="public static void ContextUpdated (this MonoTouch.MediaPlayer.IMPPlayableContentDelegate This, MonoTouch.MediaPlayer.MPPlayableContentManager contentManager, MonoTouch.MediaPlayer.MPPlayableContentManagerContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ContextUpdated(class MonoTouch.MediaPlayer.IMPPlayableContentDelegate This, class MonoTouch.MediaPlayer.MPPlayableContentManager contentManager, class MonoTouch.MediaPlayer.MPPlayableContentManagerContext context) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MediaPlayer.IMPPlayableContentDelegate" RefType="this" />
          <Parameter Name="contentManager" Type="MonoTouch.MediaPlayer.MPPlayableContentManager" />
          <Parameter Name="context" Type="MonoTouch.MediaPlayer.MPPlayableContentManagerContext" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="contentManager">To be added.</param>
          <param name="context">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MediaPlayer.MPPlayableContentDelegate_Extensions" Member="M:MonoTouch.MediaPlayer.MPPlayableContentDelegate_Extensions.ContextUpdated(MonoTouch.MediaPlayer.IMPPlayableContentDelegate,MonoTouch.MediaPlayer.MPPlayableContentManager,MonoTouch.MediaPlayer.MPPlayableContentManagerContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MediaPlayer.IMPPlayableContentDelegate" />
      </Targets>
      <Member MemberName="InitializePlaybackQueue">
        <MemberSignature Language="C#" Value="public static void InitializePlaybackQueue (this MonoTouch.MediaPlayer.IMPPlayableContentDelegate This, MonoTouch.MediaPlayer.MPPlayableContentManager contentManager, Action&lt;MonoTouch.Foundation.NSError&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InitializePlaybackQueue(class MonoTouch.MediaPlayer.IMPPlayableContentDelegate This, class MonoTouch.MediaPlayer.MPPlayableContentManager contentManager, class System.Action`1&lt;class MonoTouch.Foundation.NSError&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MediaPlayer.IMPPlayableContentDelegate" RefType="this" />
          <Parameter Name="contentManager" Type="MonoTouch.MediaPlayer.MPPlayableContentManager" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSError&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V11))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="contentManager">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MediaPlayer.MPPlayableContentDelegate_Extensions" Member="M:MonoTouch.MediaPlayer.MPPlayableContentDelegate_Extensions.InitializePlaybackQueue(MonoTouch.MediaPlayer.IMPPlayableContentDelegate,MonoTouch.MediaPlayer.MPPlayableContentManager,System.Action{MonoTouch.Foundation.NSError})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MediaPlayer.IMPPlayableContentDelegate" />
      </Targets>
      <Member MemberName="InitiatePlaybackOfContentItem">
        <MemberSignature Language="C#" Value="public static void InitiatePlaybackOfContentItem (this MonoTouch.MediaPlayer.IMPPlayableContentDelegate This, MonoTouch.MediaPlayer.MPPlayableContentManager contentManager, MonoTouch.Foundation.NSIndexPath indexPath, Action&lt;MonoTouch.Foundation.NSError&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InitiatePlaybackOfContentItem(class MonoTouch.MediaPlayer.IMPPlayableContentDelegate This, class MonoTouch.MediaPlayer.MPPlayableContentManager contentManager, class MonoTouch.Foundation.NSIndexPath indexPath, class System.Action`1&lt;class MonoTouch.Foundation.NSError&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MediaPlayer.IMPPlayableContentDelegate" RefType="this" />
          <Parameter Name="contentManager" Type="MonoTouch.MediaPlayer.MPPlayableContentManager" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSError&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V7))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="contentManager">To be added.</param>
          <param name="indexPath">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MediaPlayer.MPPlayableContentDelegate_Extensions" Member="M:MonoTouch.MediaPlayer.MPPlayableContentDelegate_Extensions.InitiatePlaybackOfContentItem(MonoTouch.MediaPlayer.IMPPlayableContentDelegate,MonoTouch.MediaPlayer.MPPlayableContentManager,MonoTouch.Foundation.NSIndexPath,System.Action{MonoTouch.Foundation.NSError})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MediaPlayer.IMPPlayableContentDelegate" />
      </Targets>
      <Member MemberName="PlayableContentManager">
        <MemberSignature Language="C#" Value="public static void PlayableContentManager (this MonoTouch.MediaPlayer.IMPPlayableContentDelegate This, MonoTouch.MediaPlayer.MPPlayableContentManager contentManager, MonoTouch.Foundation.NSIndexPath indexPath, Action&lt;MonoTouch.Foundation.NSError&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PlayableContentManager(class MonoTouch.MediaPlayer.IMPPlayableContentDelegate This, class MonoTouch.MediaPlayer.MPPlayableContentManager contentManager, class MonoTouch.Foundation.NSIndexPath indexPath, class System.Action`1&lt;class MonoTouch.Foundation.NSError&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MediaPlayer.IMPPlayableContentDelegate" RefType="this" />
          <Parameter Name="contentManager" Type="MonoTouch.MediaPlayer.MPPlayableContentManager" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSError&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V0))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="contentManager">To be added.</param>
          <param name="indexPath">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MediaPlayer.MPPlayableContentDelegate_Extensions" Member="M:MonoTouch.MediaPlayer.MPPlayableContentDelegate_Extensions.PlayableContentManager(MonoTouch.MediaPlayer.IMPPlayableContentDelegate,MonoTouch.MediaPlayer.MPPlayableContentManager,MonoTouch.Foundation.NSIndexPath,System.Action{MonoTouch.Foundation.NSError})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreMedia.CMMediaType" />
      </Targets>
      <Member MemberName="GetLocalizedName">
        <MemberSignature Language="C#" Value="public static string GetLocalizedName (this MonoTouch.CoreMedia.CMMediaType mediaType);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetLocalizedName(valuetype MonoTouch.CoreMedia.CMMediaType mediaType) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="mediaType" Type="MonoTouch.CoreMedia.CMMediaType" RefType="this" />
        </Parameters>
        <Docs>
          <param name="mediaType">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MediaToolbox.MTFormatNames" Member="M:MonoTouch.MediaToolbox.MTFormatNames.GetLocalizedName(MonoTouch.CoreMedia.CMMediaType)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreMedia.CMMediaType" />
      </Targets>
      <Member MemberName="GetLocalizedName">
        <MemberSignature Language="C#" Value="public static string GetLocalizedName (this MonoTouch.CoreMedia.CMMediaType mediaType, uint mediaSubType);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetLocalizedName(valuetype MonoTouch.CoreMedia.CMMediaType mediaType, unsigned int32 mediaSubType) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="mediaType" Type="MonoTouch.CoreMedia.CMMediaType" RefType="this" />
          <Parameter Name="mediaSubType" Type="System.UInt32" />
        </Parameters>
        <Docs>
          <param name="mediaType">To be added.</param>
          <param name="mediaSubType">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MediaToolbox.MTFormatNames" Member="M:MonoTouch.MediaToolbox.MTFormatNames.GetLocalizedName(MonoTouch.CoreMedia.CMMediaType,System.UInt32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MessageUI.MFMailComposeErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.MessageUI.MFMailComposeErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.MessageUI.MFMailComposeErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.MessageUI.MFMailComposeErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.MessageUI.MFMailComposeErrorCode value</summary>
        </Docs>
        <Link Type="MonoTouch.MessageUI.MFMailComposeErrorCodeExtensions" Member="M:MonoTouch.MessageUI.MFMailComposeErrorCodeExtensions.GetDomain(MonoTouch.MessageUI.MFMailComposeErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MessageUI.IMFMailComposeViewControllerDelegate" />
      </Targets>
      <Member MemberName="Finished">
        <MemberSignature Language="C#" Value="public static void Finished (this MonoTouch.MessageUI.IMFMailComposeViewControllerDelegate This, MonoTouch.MessageUI.MFMailComposeViewController controller, MonoTouch.MessageUI.MFMailComposeResult result, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Finished(class MonoTouch.MessageUI.IMFMailComposeViewControllerDelegate This, class MonoTouch.MessageUI.MFMailComposeViewController controller, valuetype MonoTouch.MessageUI.MFMailComposeResult result, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MessageUI.IMFMailComposeViewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.MessageUI.MFMailComposeViewController" />
          <Parameter Name="result" Type="MonoTouch.MessageUI.MFMailComposeResult" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="result">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MessageUI.MFMailComposeViewControllerDelegate_Extensions" Member="M:MonoTouch.MessageUI.MFMailComposeViewControllerDelegate_Extensions.Finished(MonoTouch.MessageUI.IMFMailComposeViewControllerDelegate,MonoTouch.MessageUI.MFMailComposeViewController,MonoTouch.MessageUI.MFMailComposeResult,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLBlitCommandEncoder" />
      </Targets>
      <Member MemberName="CopyFromBuffer">
        <MemberSignature Language="C#" Value="public static void CopyFromBuffer (this MonoTouch.Metal.IMTLBlitCommandEncoder This, MonoTouch.Metal.IMTLBuffer sourceBuffer, uint sourceOffset, uint sourceBytesPerRow, uint sourceBytesPerImage, MonoTouch.Metal.MTLSize sourceSize, MonoTouch.Metal.IMTLTexture destinationTexture, uint destinationSlice, uint destinationLevel, MonoTouch.Metal.MTLOrigin destinationOrigin, MonoTouch.Metal.MTLBlitOption options);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyFromBuffer(class MonoTouch.Metal.IMTLBlitCommandEncoder This, class MonoTouch.Metal.IMTLBuffer sourceBuffer, unsigned int32 sourceOffset, unsigned int32 sourceBytesPerRow, unsigned int32 sourceBytesPerImage, valuetype MonoTouch.Metal.MTLSize sourceSize, class MonoTouch.Metal.IMTLTexture destinationTexture, unsigned int32 destinationSlice, unsigned int32 destinationLevel, valuetype MonoTouch.Metal.MTLOrigin destinationOrigin, valuetype MonoTouch.Metal.MTLBlitOption options) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void CopyFromBuffer (this MonoTouch.Metal.IMTLBlitCommandEncoder This, MonoTouch.Metal.IMTLBuffer sourceBuffer, nuint sourceOffset, nuint sourceBytesPerRow, nuint sourceBytesPerImage, MonoTouch.Metal.MTLSize sourceSize, MonoTouch.Metal.IMTLTexture destinationTexture, nuint destinationSlice, nuint destinationLevel, MonoTouch.Metal.MTLOrigin destinationOrigin, MonoTouch.Metal.MTLBlitOption options);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyFromBuffer(class MonoTouch.Metal.IMTLBlitCommandEncoder This, class MonoTouch.Metal.IMTLBuffer sourceBuffer, valuetype System.nuint sourceOffset, valuetype System.nuint sourceBytesPerRow, valuetype System.nuint sourceBytesPerImage, valuetype MonoTouch.Metal.MTLSize sourceSize, class MonoTouch.Metal.IMTLTexture destinationTexture, valuetype System.nuint destinationSlice, valuetype System.nuint destinationLevel, valuetype MonoTouch.Metal.MTLOrigin destinationOrigin, valuetype MonoTouch.Metal.MTLBlitOption options) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLBlitCommandEncoder" RefType="this" />
          <Parameter Name="sourceBuffer" Type="MonoTouch.Metal.IMTLBuffer" />
          <Parameter Name="sourceOffset" Type="System.UInt32" apistyle="classic" />
          <Parameter Name="sourceBytesPerRow" Type="System.UInt32" apistyle="classic" />
          <Parameter Name="sourceBytesPerImage" Type="System.UInt32" apistyle="classic" />
          <Parameter Name="sourceSize" Type="MonoTouch.Metal.MTLSize" />
          <Parameter Name="destinationTexture" Type="MonoTouch.Metal.IMTLTexture" />
          <Parameter Name="destinationSlice" Type="System.UInt32" apistyle="classic" />
          <Parameter Name="destinationLevel" Type="System.UInt32" apistyle="classic" />
          <Parameter Name="destinationOrigin" Type="MonoTouch.Metal.MTLOrigin" />
          <Parameter Name="options" Type="MonoTouch.Metal.MTLBlitOption" />
          <Parameter Name="sourceOffset" Type="System.nuint" apistyle="unified" />
          <Parameter Name="sourceBytesPerRow" Type="System.nuint" apistyle="unified" />
          <Parameter Name="sourceBytesPerImage" Type="System.nuint" apistyle="unified" />
          <Parameter Name="destinationSlice" Type="System.nuint" apistyle="unified" />
          <Parameter Name="destinationLevel" Type="System.nuint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="sourceBuffer">To be added.</param>
          <param name="sourceOffset">To be added.</param>
          <param name="sourceBytesPerRow">To be added.</param>
          <param name="sourceBytesPerImage">To be added.</param>
          <param name="sourceSize">To be added.</param>
          <param name="destinationTexture">To be added.</param>
          <param name="destinationSlice">To be added.</param>
          <param name="destinationLevel">To be added.</param>
          <param name="destinationOrigin">To be added.</param>
          <param name="options">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLBlitCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLBlitCommandEncoder_Extensions.CopyFromBuffer(MonoTouch.Metal.IMTLBlitCommandEncoder,MonoTouch.Metal.IMTLBuffer,System.nuint,System.nuint,System.nuint,MonoTouch.Metal.MTLSize,MonoTouch.Metal.IMTLTexture,System.nuint,System.nuint,MonoTouch.Metal.MTLOrigin,MonoTouch.Metal.MTLBlitOption)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLBlitCommandEncoder" />
      </Targets>
      <Member MemberName="CopyFromTexture">
        <MemberSignature Language="C#" Value="public static void CopyFromTexture (this MonoTouch.Metal.IMTLBlitCommandEncoder This, MonoTouch.Metal.IMTLTexture sourceTexture, uint sourceSlice, uint sourceLevel, MonoTouch.Metal.MTLOrigin sourceOrigin, MonoTouch.Metal.MTLSize sourceSize, MonoTouch.Metal.IMTLBuffer destinationBuffer, uint destinationOffset, uint destinatinBytesPerRow, uint destinationBytesPerImage, MonoTouch.Metal.MTLBlitOption options);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyFromTexture(class MonoTouch.Metal.IMTLBlitCommandEncoder This, class MonoTouch.Metal.IMTLTexture sourceTexture, unsigned int32 sourceSlice, unsigned int32 sourceLevel, valuetype MonoTouch.Metal.MTLOrigin sourceOrigin, valuetype MonoTouch.Metal.MTLSize sourceSize, class MonoTouch.Metal.IMTLBuffer destinationBuffer, unsigned int32 destinationOffset, unsigned int32 destinatinBytesPerRow, unsigned int32 destinationBytesPerImage, valuetype MonoTouch.Metal.MTLBlitOption options) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void CopyFromTexture (this MonoTouch.Metal.IMTLBlitCommandEncoder This, MonoTouch.Metal.IMTLTexture sourceTexture, nuint sourceSlice, nuint sourceLevel, MonoTouch.Metal.MTLOrigin sourceOrigin, MonoTouch.Metal.MTLSize sourceSize, MonoTouch.Metal.IMTLBuffer destinationBuffer, nuint destinationOffset, nuint destinatinBytesPerRow, nuint destinationBytesPerImage, MonoTouch.Metal.MTLBlitOption options);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyFromTexture(class MonoTouch.Metal.IMTLBlitCommandEncoder This, class MonoTouch.Metal.IMTLTexture sourceTexture, valuetype System.nuint sourceSlice, valuetype System.nuint sourceLevel, valuetype MonoTouch.Metal.MTLOrigin sourceOrigin, valuetype MonoTouch.Metal.MTLSize sourceSize, class MonoTouch.Metal.IMTLBuffer destinationBuffer, valuetype System.nuint destinationOffset, valuetype System.nuint destinatinBytesPerRow, valuetype System.nuint destinationBytesPerImage, valuetype MonoTouch.Metal.MTLBlitOption options) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLBlitCommandEncoder" RefType="this" />
          <Parameter Name="sourceTexture" Type="MonoTouch.Metal.IMTLTexture" />
          <Parameter Name="sourceSlice" Type="System.UInt32" apistyle="classic" />
          <Parameter Name="sourceLevel" Type="System.UInt32" apistyle="classic" />
          <Parameter Name="sourceOrigin" Type="MonoTouch.Metal.MTLOrigin" />
          <Parameter Name="sourceSize" Type="MonoTouch.Metal.MTLSize" />
          <Parameter Name="destinationBuffer" Type="MonoTouch.Metal.IMTLBuffer" />
          <Parameter Name="destinationOffset" Type="System.UInt32" apistyle="classic" />
          <Parameter Name="destinatinBytesPerRow" Type="System.UInt32" apistyle="classic" />
          <Parameter Name="destinationBytesPerImage" Type="System.UInt32" apistyle="classic" />
          <Parameter Name="options" Type="MonoTouch.Metal.MTLBlitOption" />
          <Parameter Name="sourceSlice" Type="System.nuint" apistyle="unified" />
          <Parameter Name="sourceLevel" Type="System.nuint" apistyle="unified" />
          <Parameter Name="destinationOffset" Type="System.nuint" apistyle="unified" />
          <Parameter Name="destinatinBytesPerRow" Type="System.nuint" apistyle="unified" />
          <Parameter Name="destinationBytesPerImage" Type="System.nuint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="sourceTexture">To be added.</param>
          <param name="sourceSlice">To be added.</param>
          <param name="sourceLevel">To be added.</param>
          <param name="sourceOrigin">To be added.</param>
          <param name="sourceSize">To be added.</param>
          <param name="destinationBuffer">To be added.</param>
          <param name="destinationOffset">To be added.</param>
          <param name="destinatinBytesPerRow">To be added.</param>
          <param name="destinationBytesPerImage">To be added.</param>
          <param name="options">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLBlitCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLBlitCommandEncoder_Extensions.CopyFromTexture(MonoTouch.Metal.IMTLBlitCommandEncoder,MonoTouch.Metal.IMTLTexture,System.nuint,System.nuint,MonoTouch.Metal.MTLOrigin,MonoTouch.Metal.MTLSize,MonoTouch.Metal.IMTLBuffer,System.nuint,System.nuint,System.nuint,MonoTouch.Metal.MTLBlitOption)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.MTLCommandBufferError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.Metal.MTLCommandBufferError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.Metal.MTLCommandBufferError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.Metal.MTLCommandBufferError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.Metal.MTLCommandBufferError value</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLCommandBufferErrorExtensions" Member="M:MonoTouch.Metal.MTLCommandBufferErrorExtensions.GetDomain(MonoTouch.Metal.MTLCommandBufferError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLComputeCommandEncoder" />
      </Targets>
      <Member MemberName="DispatchThreadgroups">
        <MemberSignature Language="C#" Value="public static void DispatchThreadgroups (this MonoTouch.Metal.IMTLComputeCommandEncoder This, MonoTouch.Metal.IMTLBuffer indirectBuffer, uint indirectBufferOffset, MonoTouch.Metal.MTLSize threadsPerThreadgroup);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DispatchThreadgroups(class MonoTouch.Metal.IMTLComputeCommandEncoder This, class MonoTouch.Metal.IMTLBuffer indirectBuffer, unsigned int32 indirectBufferOffset, valuetype MonoTouch.Metal.MTLSize threadsPerThreadgroup) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void DispatchThreadgroups (this MonoTouch.Metal.IMTLComputeCommandEncoder This, MonoTouch.Metal.IMTLBuffer indirectBuffer, nuint indirectBufferOffset, MonoTouch.Metal.MTLSize threadsPerThreadgroup);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DispatchThreadgroups(class MonoTouch.Metal.IMTLComputeCommandEncoder This, class MonoTouch.Metal.IMTLBuffer indirectBuffer, valuetype System.nuint indirectBufferOffset, valuetype MonoTouch.Metal.MTLSize threadsPerThreadgroup) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLComputeCommandEncoder" RefType="this" />
          <Parameter Name="indirectBuffer" Type="MonoTouch.Metal.IMTLBuffer" />
          <Parameter Name="indirectBufferOffset" Type="System.UInt32" apistyle="classic" />
          <Parameter Name="threadsPerThreadgroup" Type="MonoTouch.Metal.MTLSize" />
          <Parameter Name="indirectBufferOffset" Type="System.nuint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="indirectBuffer">To be added.</param>
          <param name="indirectBufferOffset">To be added.</param>
          <param name="threadsPerThreadgroup">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLComputeCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLComputeCommandEncoder_Extensions.DispatchThreadgroups(MonoTouch.Metal.IMTLComputeCommandEncoder,MonoTouch.Metal.IMTLBuffer,System.nuint,MonoTouch.Metal.MTLSize)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLDevice" />
      </Targets>
      <Member MemberName="CreateBuffer&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static MonoTouch.Metal.IMTLBuffer CreateBuffer&lt;T&gt; (this MonoTouch.Metal.IMTLDevice This, T[] data, MonoTouch.Metal.MTLResourceOptions options) where T : struct;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Metal.IMTLBuffer CreateBuffer&lt;struct .ctor (class System.ValueType) T&gt;(class MonoTouch.Metal.IMTLDevice This, !!T[] data, valuetype MonoTouch.Metal.MTLResourceOptions options) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.IMTLBuffer</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
              <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
              <BaseTypeName>System.ValueType</BaseTypeName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLDevice" RefType="this" />
          <Parameter Name="data" Type="T[]" />
          <Parameter Name="options" Type="MonoTouch.Metal.MTLResourceOptions" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="This">To be added.</param>
          <param name="data">To be added.</param>
          <param name="options">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLDevice_Extensions" Member="M:MonoTouch.Metal.MTLDevice_Extensions.CreateBuffer``1(MonoTouch.Metal.IMTLDevice,``0[],MonoTouch.Metal.MTLResourceOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLDevice" />
      </Targets>
      <Member MemberName="CreateBufferNoCopy&lt;T&gt;">
        <MemberSignature Language="C#" Value="public static MonoTouch.Metal.IMTLBuffer CreateBufferNoCopy&lt;T&gt; (this MonoTouch.Metal.IMTLDevice This, T[] data, MonoTouch.Metal.MTLResourceOptions options, MonoTouch.Metal.MTLDeallocator deallocator) where T : struct;" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Metal.IMTLBuffer CreateBufferNoCopy&lt;struct .ctor (class System.ValueType) T&gt;(class MonoTouch.Metal.IMTLDevice This, !!T[] data, valuetype MonoTouch.Metal.MTLResourceOptions options, class MonoTouch.Metal.MTLDeallocator deallocator) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.IMTLBuffer</ReturnType>
        </ReturnValue>
        <TypeParameters>
          <TypeParameter Name="T">
            <Constraints>
              <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
              <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
              <BaseTypeName>System.ValueType</BaseTypeName>
            </Constraints>
          </TypeParameter>
        </TypeParameters>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLDevice" RefType="this" />
          <Parameter Name="data" Type="T[]" />
          <Parameter Name="options" Type="MonoTouch.Metal.MTLResourceOptions" />
          <Parameter Name="deallocator" Type="MonoTouch.Metal.MTLDeallocator" />
        </Parameters>
        <Docs>
          <typeparam name="T">To be added.</typeparam>
          <param name="This">To be added.</param>
          <param name="data">To be added.</param>
          <param name="options">To be added.</param>
          <param name="deallocator">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLDevice_Extensions" Member="M:MonoTouch.Metal.MTLDevice_Extensions.CreateBufferNoCopy``1(MonoTouch.Metal.IMTLDevice,``0[],MonoTouch.Metal.MTLResourceOptions,MonoTouch.Metal.MTLDeallocator)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLDevice" />
      </Targets>
      <Member MemberName="CreateComputePipelineState">
        <MemberSignature Language="C#" Value="public static MonoTouch.Metal.IMTLComputePipelineState CreateComputePipelineState (this MonoTouch.Metal.IMTLDevice This, MonoTouch.Metal.MTLComputePipelineDescriptor descriptor, MonoTouch.Metal.MTLPipelineOption options, out MonoTouch.Metal.MTLComputePipelineReflection reflection, out MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Metal.IMTLComputePipelineState CreateComputePipelineState(class MonoTouch.Metal.IMTLDevice This, class MonoTouch.Metal.MTLComputePipelineDescriptor descriptor, valuetype MonoTouch.Metal.MTLPipelineOption options, class MonoTouch.Metal.MTLComputePipelineReflection reflection, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.IMTLComputePipelineState</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLDevice" RefType="this" />
          <Parameter Name="descriptor" Type="MonoTouch.Metal.MTLComputePipelineDescriptor" />
          <Parameter Name="options" Type="MonoTouch.Metal.MTLPipelineOption" />
          <Parameter Name="reflection" Type="MonoTouch.Metal.MTLComputePipelineReflection&amp;" RefType="out" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="descriptor">To be added.</param>
          <param name="options">To be added.</param>
          <param name="reflection">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLDevice_Extensions" Member="M:MonoTouch.Metal.MTLDevice_Extensions.CreateComputePipelineState(MonoTouch.Metal.IMTLDevice,MonoTouch.Metal.MTLComputePipelineDescriptor,MonoTouch.Metal.MTLPipelineOption,MonoTouch.Metal.MTLComputePipelineReflection@,MonoTouch.Foundation.NSError@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLDevice" />
      </Targets>
      <Member MemberName="CreateComputePipelineState">
        <MemberSignature Language="C#" Value="public static void CreateComputePipelineState (this MonoTouch.Metal.IMTLDevice This, MonoTouch.Metal.MTLComputePipelineDescriptor descriptor, MonoTouch.Metal.MTLPipelineOption options, MonoTouch.Metal.MTLNewComputePipelineStateWithReflectionCompletionHandler completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateComputePipelineState(class MonoTouch.Metal.IMTLDevice This, class MonoTouch.Metal.MTLComputePipelineDescriptor descriptor, valuetype MonoTouch.Metal.MTLPipelineOption options, class MonoTouch.Metal.MTLNewComputePipelineStateWithReflectionCompletionHandler completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLDevice" RefType="this" />
          <Parameter Name="descriptor" Type="MonoTouch.Metal.MTLComputePipelineDescriptor" />
          <Parameter Name="options" Type="MonoTouch.Metal.MTLPipelineOption" />
          <Parameter Name="completionHandler" Type="MonoTouch.Metal.MTLNewComputePipelineStateWithReflectionCompletionHandler">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDMTLNewComputePipelineStateWithReflectionCompletionHandler))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="descriptor">To be added.</param>
          <param name="options">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLDevice_Extensions" Member="M:MonoTouch.Metal.MTLDevice_Extensions.CreateComputePipelineState(MonoTouch.Metal.IMTLDevice,MonoTouch.Metal.MTLComputePipelineDescriptor,MonoTouch.Metal.MTLPipelineOption,MonoTouch.Metal.MTLNewComputePipelineStateWithReflectionCompletionHandler)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLDevice" />
      </Targets>
      <Member MemberName="GetMaxThreadsPerThreadgroup">
        <MemberSignature Language="C#" Value="public static MonoTouch.Metal.MTLSize GetMaxThreadsPerThreadgroup (this MonoTouch.Metal.IMTLDevice This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.Metal.MTLSize GetMaxThreadsPerThreadgroup(class MonoTouch.Metal.IMTLDevice This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.MTLSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLDevice" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLDevice_Extensions" Member="M:MonoTouch.Metal.MTLDevice_Extensions.GetMaxThreadsPerThreadgroup(MonoTouch.Metal.IMTLDevice)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLDevice" />
      </Targets>
      <Member MemberName="SupportsTextureSampleCount">
        <MemberSignature Language="C#" Value="public static bool SupportsTextureSampleCount (this MonoTouch.Metal.IMTLDevice This, uint sampleCount);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SupportsTextureSampleCount(class MonoTouch.Metal.IMTLDevice This, unsigned int32 sampleCount) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static bool SupportsTextureSampleCount (this MonoTouch.Metal.IMTLDevice This, nuint sampleCount);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SupportsTextureSampleCount(class MonoTouch.Metal.IMTLDevice This, valuetype System.nuint sampleCount) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLDevice" RefType="this" />
          <Parameter Name="sampleCount" Type="System.UInt32" apistyle="classic" />
          <Parameter Name="sampleCount" Type="System.nuint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="sampleCount">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLDevice_Extensions" Member="M:MonoTouch.Metal.MTLDevice_Extensions.SupportsTextureSampleCount(MonoTouch.Metal.IMTLDevice,System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.MTLLibraryError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.Metal.MTLLibraryError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.Metal.MTLLibraryError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.Metal.MTLLibraryError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.Metal.MTLLibraryError value</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLLibraryErrorExtensions" Member="M:MonoTouch.Metal.MTLLibraryErrorExtensions.GetDomain(MonoTouch.Metal.MTLLibraryError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLRenderCommandEncoder" />
      </Targets>
      <Member MemberName="DrawIndexedPrimitives">
        <MemberSignature Language="C#" Value="public static void DrawIndexedPrimitives (this MonoTouch.Metal.IMTLRenderCommandEncoder This, MonoTouch.Metal.MTLPrimitiveType primitiveType, MonoTouch.Metal.MTLIndexType indexType, MonoTouch.Metal.IMTLBuffer indexBuffer, uint indexBufferOffset, MonoTouch.Metal.IMTLBuffer indirectBuffer, uint indirectBufferOffset);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawIndexedPrimitives(class MonoTouch.Metal.IMTLRenderCommandEncoder This, valuetype MonoTouch.Metal.MTLPrimitiveType primitiveType, valuetype MonoTouch.Metal.MTLIndexType indexType, class MonoTouch.Metal.IMTLBuffer indexBuffer, unsigned int32 indexBufferOffset, class MonoTouch.Metal.IMTLBuffer indirectBuffer, unsigned int32 indirectBufferOffset) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void DrawIndexedPrimitives (this MonoTouch.Metal.IMTLRenderCommandEncoder This, MonoTouch.Metal.MTLPrimitiveType primitiveType, MonoTouch.Metal.MTLIndexType indexType, MonoTouch.Metal.IMTLBuffer indexBuffer, nuint indexBufferOffset, MonoTouch.Metal.IMTLBuffer indirectBuffer, nuint indirectBufferOffset);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawIndexedPrimitives(class MonoTouch.Metal.IMTLRenderCommandEncoder This, valuetype MonoTouch.Metal.MTLPrimitiveType primitiveType, valuetype MonoTouch.Metal.MTLIndexType indexType, class MonoTouch.Metal.IMTLBuffer indexBuffer, valuetype System.nuint indexBufferOffset, class MonoTouch.Metal.IMTLBuffer indirectBuffer, valuetype System.nuint indirectBufferOffset) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLRenderCommandEncoder" RefType="this" />
          <Parameter Name="primitiveType" Type="MonoTouch.Metal.MTLPrimitiveType" />
          <Parameter Name="indexType" Type="MonoTouch.Metal.MTLIndexType" />
          <Parameter Name="indexBuffer" Type="MonoTouch.Metal.IMTLBuffer" />
          <Parameter Name="indexBufferOffset" Type="System.UInt32" apistyle="classic" />
          <Parameter Name="indirectBuffer" Type="MonoTouch.Metal.IMTLBuffer" />
          <Parameter Name="indirectBufferOffset" Type="System.UInt32" apistyle="classic" />
          <Parameter Name="indexBufferOffset" Type="System.nuint" apistyle="unified" />
          <Parameter Name="indirectBufferOffset" Type="System.nuint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="primitiveType">To be added.</param>
          <param name="indexType">To be added.</param>
          <param name="indexBuffer">To be added.</param>
          <param name="indexBufferOffset">To be added.</param>
          <param name="indirectBuffer">To be added.</param>
          <param name="indirectBufferOffset">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLRenderCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLRenderCommandEncoder_Extensions.DrawIndexedPrimitives(MonoTouch.Metal.IMTLRenderCommandEncoder,MonoTouch.Metal.MTLPrimitiveType,MonoTouch.Metal.MTLIndexType,MonoTouch.Metal.IMTLBuffer,System.nuint,MonoTouch.Metal.IMTLBuffer,System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLRenderCommandEncoder" />
      </Targets>
      <Member MemberName="DrawIndexedPrimitives">
        <MemberSignature Language="C#" Value="public static void DrawIndexedPrimitives (this MonoTouch.Metal.IMTLRenderCommandEncoder This, MonoTouch.Metal.MTLPrimitiveType primitiveType, uint indexCount, MonoTouch.Metal.MTLIndexType indexType, MonoTouch.Metal.IMTLBuffer indexBuffer, uint indexBufferOffset, uint instanceCount, int baseVertex, uint baseInstance);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawIndexedPrimitives(class MonoTouch.Metal.IMTLRenderCommandEncoder This, valuetype MonoTouch.Metal.MTLPrimitiveType primitiveType, unsigned int32 indexCount, valuetype MonoTouch.Metal.MTLIndexType indexType, class MonoTouch.Metal.IMTLBuffer indexBuffer, unsigned int32 indexBufferOffset, unsigned int32 instanceCount, int32 baseVertex, unsigned int32 baseInstance) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void DrawIndexedPrimitives (this MonoTouch.Metal.IMTLRenderCommandEncoder This, MonoTouch.Metal.MTLPrimitiveType primitiveType, nuint indexCount, MonoTouch.Metal.MTLIndexType indexType, MonoTouch.Metal.IMTLBuffer indexBuffer, nuint indexBufferOffset, nuint instanceCount, nint baseVertex, nuint baseInstance);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawIndexedPrimitives(class MonoTouch.Metal.IMTLRenderCommandEncoder This, valuetype MonoTouch.Metal.MTLPrimitiveType primitiveType, valuetype System.nuint indexCount, valuetype MonoTouch.Metal.MTLIndexType indexType, class MonoTouch.Metal.IMTLBuffer indexBuffer, valuetype System.nuint indexBufferOffset, valuetype System.nuint instanceCount, valuetype System.nint baseVertex, valuetype System.nuint baseInstance) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLRenderCommandEncoder" RefType="this" />
          <Parameter Name="primitiveType" Type="MonoTouch.Metal.MTLPrimitiveType" />
          <Parameter Name="indexCount" Type="System.UInt32" apistyle="classic" />
          <Parameter Name="indexType" Type="MonoTouch.Metal.MTLIndexType" />
          <Parameter Name="indexBuffer" Type="MonoTouch.Metal.IMTLBuffer" />
          <Parameter Name="indexBufferOffset" Type="System.UInt32" apistyle="classic" />
          <Parameter Name="instanceCount" Type="System.UInt32" apistyle="classic" />
          <Parameter Name="baseVertex" Type="System.Int32" apistyle="classic" />
          <Parameter Name="baseInstance" Type="System.UInt32" apistyle="classic" />
          <Parameter Name="indexCount" Type="System.nuint" apistyle="unified" />
          <Parameter Name="indexBufferOffset" Type="System.nuint" apistyle="unified" />
          <Parameter Name="instanceCount" Type="System.nuint" apistyle="unified" />
          <Parameter Name="baseVertex" Type="System.nint" apistyle="unified" />
          <Parameter Name="baseInstance" Type="System.nuint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="primitiveType">To be added.</param>
          <param name="indexCount">To be added.</param>
          <param name="indexType">To be added.</param>
          <param name="indexBuffer">To be added.</param>
          <param name="indexBufferOffset">To be added.</param>
          <param name="instanceCount">To be added.</param>
          <param name="baseVertex">To be added.</param>
          <param name="baseInstance">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLRenderCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLRenderCommandEncoder_Extensions.DrawIndexedPrimitives(MonoTouch.Metal.IMTLRenderCommandEncoder,MonoTouch.Metal.MTLPrimitiveType,System.nuint,MonoTouch.Metal.MTLIndexType,MonoTouch.Metal.IMTLBuffer,System.nuint,System.nuint,System.nint,System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLRenderCommandEncoder" />
      </Targets>
      <Member MemberName="DrawPrimitives">
        <MemberSignature Language="C#" Value="public static void DrawPrimitives (this MonoTouch.Metal.IMTLRenderCommandEncoder This, MonoTouch.Metal.MTLPrimitiveType primitiveType, MonoTouch.Metal.IMTLBuffer indirectBuffer, uint indirectBufferOffset);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawPrimitives(class MonoTouch.Metal.IMTLRenderCommandEncoder This, valuetype MonoTouch.Metal.MTLPrimitiveType primitiveType, class MonoTouch.Metal.IMTLBuffer indirectBuffer, unsigned int32 indirectBufferOffset) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void DrawPrimitives (this MonoTouch.Metal.IMTLRenderCommandEncoder This, MonoTouch.Metal.MTLPrimitiveType primitiveType, MonoTouch.Metal.IMTLBuffer indirectBuffer, nuint indirectBufferOffset);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawPrimitives(class MonoTouch.Metal.IMTLRenderCommandEncoder This, valuetype MonoTouch.Metal.MTLPrimitiveType primitiveType, class MonoTouch.Metal.IMTLBuffer indirectBuffer, valuetype System.nuint indirectBufferOffset) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLRenderCommandEncoder" RefType="this" />
          <Parameter Name="primitiveType" Type="MonoTouch.Metal.MTLPrimitiveType" />
          <Parameter Name="indirectBuffer" Type="MonoTouch.Metal.IMTLBuffer" />
          <Parameter Name="indirectBufferOffset" Type="System.UInt32" apistyle="classic" />
          <Parameter Name="indirectBufferOffset" Type="System.nuint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="primitiveType">To be added.</param>
          <param name="indirectBuffer">To be added.</param>
          <param name="indirectBufferOffset">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLRenderCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLRenderCommandEncoder_Extensions.DrawPrimitives(MonoTouch.Metal.IMTLRenderCommandEncoder,MonoTouch.Metal.MTLPrimitiveType,MonoTouch.Metal.IMTLBuffer,System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLRenderCommandEncoder" />
      </Targets>
      <Member MemberName="DrawPrimitives">
        <MemberSignature Language="C#" Value="public static void DrawPrimitives (this MonoTouch.Metal.IMTLRenderCommandEncoder This, MonoTouch.Metal.MTLPrimitiveType primitiveType, uint vertexStart, uint vertexCount, uint instanceCount, uint baseInstance);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawPrimitives(class MonoTouch.Metal.IMTLRenderCommandEncoder This, valuetype MonoTouch.Metal.MTLPrimitiveType primitiveType, unsigned int32 vertexStart, unsigned int32 vertexCount, unsigned int32 instanceCount, unsigned int32 baseInstance) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void DrawPrimitives (this MonoTouch.Metal.IMTLRenderCommandEncoder This, MonoTouch.Metal.MTLPrimitiveType primitiveType, nuint vertexStart, nuint vertexCount, nuint instanceCount, nuint baseInstance);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawPrimitives(class MonoTouch.Metal.IMTLRenderCommandEncoder This, valuetype MonoTouch.Metal.MTLPrimitiveType primitiveType, valuetype System.nuint vertexStart, valuetype System.nuint vertexCount, valuetype System.nuint instanceCount, valuetype System.nuint baseInstance) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLRenderCommandEncoder" RefType="this" />
          <Parameter Name="primitiveType" Type="MonoTouch.Metal.MTLPrimitiveType" />
          <Parameter Name="vertexStart" Type="System.UInt32" apistyle="classic" />
          <Parameter Name="vertexCount" Type="System.UInt32" apistyle="classic" />
          <Parameter Name="instanceCount" Type="System.UInt32" apistyle="classic" />
          <Parameter Name="baseInstance" Type="System.UInt32" apistyle="classic" />
          <Parameter Name="vertexStart" Type="System.nuint" apistyle="unified" />
          <Parameter Name="vertexCount" Type="System.nuint" apistyle="unified" />
          <Parameter Name="instanceCount" Type="System.nuint" apistyle="unified" />
          <Parameter Name="baseInstance" Type="System.nuint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="primitiveType">To be added.</param>
          <param name="vertexStart">To be added.</param>
          <param name="vertexCount">To be added.</param>
          <param name="instanceCount">To be added.</param>
          <param name="baseInstance">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLRenderCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLRenderCommandEncoder_Extensions.DrawPrimitives(MonoTouch.Metal.IMTLRenderCommandEncoder,MonoTouch.Metal.MTLPrimitiveType,System.nuint,System.nuint,System.nuint,System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLRenderCommandEncoder" />
      </Targets>
      <Member MemberName="SetDepthClipMode">
        <MemberSignature Language="C#" Value="public static void SetDepthClipMode (this MonoTouch.Metal.IMTLRenderCommandEncoder This, MonoTouch.Metal.MTLDepthClipMode depthClipMode);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDepthClipMode(class MonoTouch.Metal.IMTLRenderCommandEncoder This, valuetype MonoTouch.Metal.MTLDepthClipMode depthClipMode) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLRenderCommandEncoder" RefType="this" />
          <Parameter Name="depthClipMode" Type="MonoTouch.Metal.MTLDepthClipMode" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="depthClipMode">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLRenderCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLRenderCommandEncoder_Extensions.SetDepthClipMode(MonoTouch.Metal.IMTLRenderCommandEncoder,MonoTouch.Metal.MTLDepthClipMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLRenderCommandEncoder" />
      </Targets>
      <Member MemberName="SetStencilFrontReferenceValue">
        <MemberSignature Language="C#" Value="public static void SetStencilFrontReferenceValue (this MonoTouch.Metal.IMTLRenderCommandEncoder This, uint frontReferenceValue, uint backReferenceValue);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStencilFrontReferenceValue(class MonoTouch.Metal.IMTLRenderCommandEncoder This, unsigned int32 frontReferenceValue, unsigned int32 backReferenceValue) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLRenderCommandEncoder" RefType="this" />
          <Parameter Name="frontReferenceValue" Type="System.UInt32" />
          <Parameter Name="backReferenceValue" Type="System.UInt32" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="frontReferenceValue">To be added.</param>
          <param name="backReferenceValue">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLRenderCommandEncoder_Extensions" Member="M:MonoTouch.Metal.MTLRenderCommandEncoder_Extensions.SetStencilFrontReferenceValue(MonoTouch.Metal.IMTLRenderCommandEncoder,System.UInt32,System.UInt32)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.MTLRenderPipelineError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.Metal.MTLRenderPipelineError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.Metal.MTLRenderPipelineError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.Metal.MTLRenderPipelineError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.Metal.MTLRenderPipelineError value</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLRenderPipelineErrorExtensions" Member="M:MonoTouch.Metal.MTLRenderPipelineErrorExtensions.GetDomain(MonoTouch.Metal.MTLRenderPipelineError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLResource" />
      </Targets>
      <Member MemberName="GetStorageMode">
        <MemberSignature Language="C#" Value="public static MonoTouch.Metal.MTLStorageMode GetStorageMode (this MonoTouch.Metal.IMTLResource This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.Metal.MTLStorageMode GetStorageMode(class MonoTouch.Metal.IMTLResource This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.MTLStorageMode</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLResource" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLResource_Extensions" Member="M:MonoTouch.Metal.MTLResource_Extensions.GetStorageMode(MonoTouch.Metal.IMTLResource)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLTexture" />
      </Targets>
      <Member MemberName="CreateTextureView">
        <MemberSignature Language="C#" Value="public static MonoTouch.Metal.IMTLTexture CreateTextureView (this MonoTouch.Metal.IMTLTexture This, MonoTouch.Metal.MTLPixelFormat pixelFormat, MonoTouch.Metal.MTLTextureType textureType, MonoTouch.Foundation.NSRange levelRange, MonoTouch.Foundation.NSRange sliceRange);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Metal.IMTLTexture CreateTextureView(class MonoTouch.Metal.IMTLTexture This, valuetype MonoTouch.Metal.MTLPixelFormat pixelFormat, valuetype MonoTouch.Metal.MTLTextureType textureType, valuetype MonoTouch.Foundation.NSRange levelRange, valuetype MonoTouch.Foundation.NSRange sliceRange) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.IMTLTexture</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLTexture" RefType="this" />
          <Parameter Name="pixelFormat" Type="MonoTouch.Metal.MTLPixelFormat" />
          <Parameter Name="textureType" Type="MonoTouch.Metal.MTLTextureType" />
          <Parameter Name="levelRange" Type="MonoTouch.Foundation.NSRange" />
          <Parameter Name="sliceRange" Type="MonoTouch.Foundation.NSRange" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="pixelFormat">To be added.</param>
          <param name="textureType">To be added.</param>
          <param name="levelRange">To be added.</param>
          <param name="sliceRange">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLTexture_Extensions" Member="M:MonoTouch.Metal.MTLTexture_Extensions.CreateTextureView(MonoTouch.Metal.IMTLTexture,MonoTouch.Metal.MTLPixelFormat,MonoTouch.Metal.MTLTextureType,MonoTouch.Foundation.NSRange,MonoTouch.Foundation.NSRange)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLTexture" />
      </Targets>
      <Member MemberName="GetBuffer">
        <MemberSignature Language="C#" Value="public static MonoTouch.Metal.IMTLBuffer GetBuffer (this MonoTouch.Metal.IMTLTexture This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Metal.IMTLBuffer GetBuffer(class MonoTouch.Metal.IMTLTexture This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.IMTLBuffer</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLTexture" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLTexture_Extensions" Member="M:MonoTouch.Metal.MTLTexture_Extensions.GetBuffer(MonoTouch.Metal.IMTLTexture)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLTexture" />
      </Targets>
      <Member MemberName="GetBufferBytesPerRow">
        <MemberSignature Language="C#" Value="public static uint GetBufferBytesPerRow (this MonoTouch.Metal.IMTLTexture This);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 GetBufferBytesPerRow(class MonoTouch.Metal.IMTLTexture This) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nuint GetBufferBytesPerRow (this MonoTouch.Metal.IMTLTexture This);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nuint GetBufferBytesPerRow(class MonoTouch.Metal.IMTLTexture This) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.UInt32</ReturnType>
          <ReturnType apistyle="unified">System.nuint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLTexture" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLTexture_Extensions" Member="M:MonoTouch.Metal.MTLTexture_Extensions.GetBufferBytesPerRow(MonoTouch.Metal.IMTLTexture)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLTexture" />
      </Targets>
      <Member MemberName="GetBufferOffset">
        <MemberSignature Language="C#" Value="public static uint GetBufferOffset (this MonoTouch.Metal.IMTLTexture This);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 GetBufferOffset(class MonoTouch.Metal.IMTLTexture This) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nuint GetBufferOffset (this MonoTouch.Metal.IMTLTexture This);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nuint GetBufferOffset(class MonoTouch.Metal.IMTLTexture This) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.UInt32</ReturnType>
          <ReturnType apistyle="unified">System.nuint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLTexture" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLTexture_Extensions" Member="M:MonoTouch.Metal.MTLTexture_Extensions.GetBufferOffset(MonoTouch.Metal.IMTLTexture)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLTexture" />
      </Targets>
      <Member MemberName="GetParentRelativeLevel">
        <MemberSignature Language="C#" Value="public static uint GetParentRelativeLevel (this MonoTouch.Metal.IMTLTexture This);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 GetParentRelativeLevel(class MonoTouch.Metal.IMTLTexture This) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nuint GetParentRelativeLevel (this MonoTouch.Metal.IMTLTexture This);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nuint GetParentRelativeLevel(class MonoTouch.Metal.IMTLTexture This) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.UInt32</ReturnType>
          <ReturnType apistyle="unified">System.nuint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLTexture" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLTexture_Extensions" Member="M:MonoTouch.Metal.MTLTexture_Extensions.GetParentRelativeLevel(MonoTouch.Metal.IMTLTexture)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLTexture" />
      </Targets>
      <Member MemberName="GetParentRelativeSlice">
        <MemberSignature Language="C#" Value="public static uint GetParentRelativeSlice (this MonoTouch.Metal.IMTLTexture This);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 GetParentRelativeSlice(class MonoTouch.Metal.IMTLTexture This) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nuint GetParentRelativeSlice (this MonoTouch.Metal.IMTLTexture This);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nuint GetParentRelativeSlice(class MonoTouch.Metal.IMTLTexture This) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.UInt32</ReturnType>
          <ReturnType apistyle="unified">System.nuint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLTexture" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLTexture_Extensions" Member="M:MonoTouch.Metal.MTLTexture_Extensions.GetParentRelativeSlice(MonoTouch.Metal.IMTLTexture)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLTexture" />
      </Targets>
      <Member MemberName="GetParentTexture">
        <MemberSignature Language="C#" Value="public static MonoTouch.Metal.IMTLTexture GetParentTexture (this MonoTouch.Metal.IMTLTexture This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Metal.IMTLTexture GetParentTexture(class MonoTouch.Metal.IMTLTexture This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.IMTLTexture</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLTexture" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLTexture_Extensions" Member="M:MonoTouch.Metal.MTLTexture_Extensions.GetParentTexture(MonoTouch.Metal.IMTLTexture)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.IMTLTexture" />
      </Targets>
      <Member MemberName="GetUsage">
        <MemberSignature Language="C#" Value="public static MonoTouch.Metal.MTLTextureUsage GetUsage (this MonoTouch.Metal.IMTLTexture This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.Metal.MTLTextureUsage GetUsage(class MonoTouch.Metal.IMTLTexture This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.MTLTextureUsage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Metal.IMTLTexture" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLTexture_Extensions" Member="M:MonoTouch.Metal.MTLTexture_Extensions.GetUsage(MonoTouch.Metal.IMTLTexture)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Metal.MTLVertexFormat" />
      </Targets>
      <Member MemberName="ToModelVertexFormat">
        <MemberSignature Language="C#" Value="public static MonoTouch.ModelIO.MDLVertexFormat ToModelVertexFormat (this MonoTouch.Metal.MTLVertexFormat vertexFormat);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.ModelIO.MDLVertexFormat ToModelVertexFormat(valuetype MonoTouch.Metal.MTLVertexFormat vertexFormat) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.ModelIO.MDLVertexFormat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="vertexFormat" Type="MonoTouch.Metal.MTLVertexFormat" RefType="this" />
        </Parameters>
        <Docs>
          <param name="vertexFormat">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Metal.MTLVertexFormatExtensions" Member="M:MonoTouch.Metal.MTLVertexFormatExtensions.ToModelVertexFormat(MonoTouch.Metal.MTLVertexFormat)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ModelIO.IMDLMeshBuffer" />
      </Targets>
      <Member MemberName="GetAllocator">
        <MemberSignature Language="C#" Value="public static MonoTouch.ModelIO.IMDLMeshBufferAllocator GetAllocator (this MonoTouch.ModelIO.IMDLMeshBuffer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.ModelIO.IMDLMeshBufferAllocator GetAllocator(class MonoTouch.ModelIO.IMDLMeshBuffer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.ModelIO.IMDLMeshBufferAllocator</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ModelIO.IMDLMeshBuffer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the allocator that was used to allocate memory for the mesh buffer..</summary>
        </Docs>
        <Link Type="MonoTouch.ModelIO.MDLMeshBuffer_Extensions" Member="M:MonoTouch.ModelIO.MDLMeshBuffer_Extensions.GetAllocator(MonoTouch.ModelIO.IMDLMeshBuffer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ModelIO.IMDLMeshBuffer" />
      </Targets>
      <Member MemberName="GetLength">
        <MemberSignature Language="C#" Value="public static uint GetLength (this MonoTouch.ModelIO.IMDLMeshBuffer This);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 GetLength(class MonoTouch.ModelIO.IMDLMeshBuffer This) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nuint GetLength (this MonoTouch.ModelIO.IMDLMeshBuffer This);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nuint GetLength(class MonoTouch.ModelIO.IMDLMeshBuffer This) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.UInt32</ReturnType>
          <ReturnType apistyle="unified">System.nuint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ModelIO.IMDLMeshBuffer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the length of the buffer, in bytes.</summary>
        </Docs>
        <Link Type="MonoTouch.ModelIO.MDLMeshBuffer_Extensions" Member="M:MonoTouch.ModelIO.MDLMeshBuffer_Extensions.GetLength(MonoTouch.ModelIO.IMDLMeshBuffer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ModelIO.IMDLMeshBuffer" />
      </Targets>
      <Member MemberName="GetType">
        <MemberSignature Language="C#" Value="public static MonoTouch.ModelIO.MDLMeshBufferType GetType (this MonoTouch.ModelIO.IMDLMeshBuffer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.ModelIO.MDLMeshBufferType GetType(class MonoTouch.ModelIO.IMDLMeshBuffer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.ModelIO.MDLMeshBufferType</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ModelIO.IMDLMeshBuffer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns a value that indicates whether the buffer contains indices or vertices.</summary>
        </Docs>
        <Link Type="MonoTouch.ModelIO.MDLMeshBuffer_Extensions" Member="M:MonoTouch.ModelIO.MDLMeshBuffer_Extensions.GetType(MonoTouch.ModelIO.IMDLMeshBuffer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ModelIO.IMDLMeshBuffer" />
      </Targets>
      <Member MemberName="GetZone">
        <MemberSignature Language="C#" Value="public static MonoTouch.ModelIO.IMDLMeshBufferZone GetZone (this MonoTouch.ModelIO.IMDLMeshBuffer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.ModelIO.IMDLMeshBufferZone GetZone(class MonoTouch.ModelIO.IMDLMeshBuffer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.ModelIO.IMDLMeshBufferZone</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ModelIO.IMDLMeshBuffer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the memory pool that the buffer occupies..</summary>
        </Docs>
        <Link Type="MonoTouch.ModelIO.MDLMeshBuffer_Extensions" Member="M:MonoTouch.ModelIO.MDLMeshBuffer_Extensions.GetZone(MonoTouch.ModelIO.IMDLMeshBuffer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ModelIO.IMDLMeshBufferZone" />
      </Targets>
      <Member MemberName="GetAllocator">
        <MemberSignature Language="C#" Value="public static MonoTouch.ModelIO.IMDLMeshBufferAllocator GetAllocator (this MonoTouch.ModelIO.IMDLMeshBufferZone This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.ModelIO.IMDLMeshBufferAllocator GetAllocator(class MonoTouch.ModelIO.IMDLMeshBufferZone This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.ModelIO.IMDLMeshBufferAllocator</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ModelIO.IMDLMeshBufferZone" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ModelIO.MDLMeshBufferZone_Extensions" Member="M:MonoTouch.ModelIO.MDLMeshBufferZone_Extensions.GetAllocator(MonoTouch.ModelIO.IMDLMeshBufferZone)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ModelIO.IMDLMeshBufferZone" />
      </Targets>
      <Member MemberName="GetCapacity">
        <MemberSignature Language="C#" Value="public static uint GetCapacity (this MonoTouch.ModelIO.IMDLMeshBufferZone This);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 GetCapacity(class MonoTouch.ModelIO.IMDLMeshBufferZone This) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nuint GetCapacity (this MonoTouch.ModelIO.IMDLMeshBufferZone This);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nuint GetCapacity(class MonoTouch.ModelIO.IMDLMeshBufferZone This) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.UInt32</ReturnType>
          <ReturnType apistyle="unified">System.nuint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ModelIO.IMDLMeshBufferZone" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ModelIO.MDLMeshBufferZone_Extensions" Member="M:MonoTouch.ModelIO.MDLMeshBufferZone_Extensions.GetCapacity(MonoTouch.ModelIO.IMDLMeshBufferZone)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ModelIO.IMDLTransformComponent" />
      </Targets>
      <Member MemberName="GetLocalTransform" apistyle="unified">
        <MemberSignature Language="C#" Value="public static MonoTouch.OpenTK.Matrix4 GetLocalTransform (this MonoTouch.ModelIO.IMDLTransformComponent This, double atTime);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.OpenTK.Matrix4 GetLocalTransform(class MonoTouch.ModelIO.IMDLTransformComponent This, float64 atTime) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.OpenTK.Matrix4</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ModelIO.IMDLTransformComponent" RefType="this" />
          <Parameter Name="atTime" Type="System.Double" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="atTime">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ModelIO.MDLTransformComponent_Extensions" Member="M:MonoTouch.ModelIO.MDLTransformComponent_Extensions.GetLocalTransform(MonoTouch.ModelIO.IMDLTransformComponent,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ModelIO.IMDLTransformComponent" />
      </Targets>
      <Member MemberName="SetLocalTransform">
        <MemberSignature Language="C#" Value="public static void SetLocalTransform (this MonoTouch.ModelIO.IMDLTransformComponent This, OpenTK.Matrix4 transform);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetLocalTransform(class MonoTouch.ModelIO.IMDLTransformComponent This, valuetype OpenTK.Matrix4 transform) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void SetLocalTransform (this MonoTouch.ModelIO.IMDLTransformComponent This, MonoTouch.OpenTK.Matrix4 transform);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetLocalTransform(class MonoTouch.ModelIO.IMDLTransformComponent This, valuetype MonoTouch.OpenTK.Matrix4 transform) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ModelIO.IMDLTransformComponent" RefType="this" />
          <Parameter Name="transform" Type="OpenTK.Matrix4" apistyle="classic" />
          <Parameter Name="transform" Type="MonoTouch.OpenTK.Matrix4" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="transform">To be added.</param>
          <summary>Replaces all transform information, including time-based transforms, with the specified static transform.</summary>
        </Docs>
        <Link Type="MonoTouch.ModelIO.MDLTransformComponent_Extensions" Member="M:MonoTouch.ModelIO.MDLTransformComponent_Extensions.SetLocalTransform(MonoTouch.ModelIO.IMDLTransformComponent,MonoTouch.OpenTK.Matrix4)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ModelIO.IMDLTransformComponent" />
      </Targets>
      <Member MemberName="SetLocalTransform">
        <MemberSignature Language="C#" Value="public static void SetLocalTransform (this MonoTouch.ModelIO.IMDLTransformComponent This, OpenTK.Matrix4 transform, double time);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetLocalTransform(class MonoTouch.ModelIO.IMDLTransformComponent This, valuetype OpenTK.Matrix4 transform, float64 time) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void SetLocalTransform (this MonoTouch.ModelIO.IMDLTransformComponent This, MonoTouch.OpenTK.Matrix4 transform, double time);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetLocalTransform(class MonoTouch.ModelIO.IMDLTransformComponent This, valuetype MonoTouch.OpenTK.Matrix4 transform, float64 time) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ModelIO.IMDLTransformComponent" RefType="this" />
          <Parameter Name="transform" Type="OpenTK.Matrix4" apistyle="classic" />
          <Parameter Name="time" Type="System.Double" />
          <Parameter Name="transform" Type="MonoTouch.OpenTK.Matrix4" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="transform">To be added.</param>
          <param name="time">To be added.</param>
          <summary>Inserts the specified transform at the specified time.</summary>
        </Docs>
        <Link Type="MonoTouch.ModelIO.MDLTransformComponent_Extensions" Member="M:MonoTouch.ModelIO.MDLTransformComponent_Extensions.SetLocalTransform(MonoTouch.ModelIO.IMDLTransformComponent,MonoTouch.OpenTK.Matrix4,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ModelIO.MDLVertexFormat" />
      </Targets>
      <Member MemberName="ToMetalVertexFormat">
        <MemberSignature Language="C#" Value="public static MonoTouch.Metal.MTLVertexFormat ToMetalVertexFormat (this MonoTouch.ModelIO.MDLVertexFormat vertexFormat);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.Metal.MTLVertexFormat ToMetalVertexFormat(valuetype MonoTouch.ModelIO.MDLVertexFormat vertexFormat) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.MTLVertexFormat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="vertexFormat" Type="MonoTouch.ModelIO.MDLVertexFormat" RefType="this" />
        </Parameters>
        <Docs>
          <param name="vertexFormat">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ModelIO.MDLVertexFormatExtensions" Member="M:MonoTouch.ModelIO.MDLVertexFormatExtensions.ToMetalVertexFormat(MonoTouch.ModelIO.MDLVertexFormat)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MultipeerConnectivity.IMCAdvertiserAssistantDelegate" />
      </Targets>
      <Member MemberName="DidDismissInvitation">
        <MemberSignature Language="C#" Value="public static void DidDismissInvitation (this MonoTouch.MultipeerConnectivity.IMCAdvertiserAssistantDelegate This, MonoTouch.MultipeerConnectivity.MCAdvertiserAssistant advertiserAssistant);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDismissInvitation(class MonoTouch.MultipeerConnectivity.IMCAdvertiserAssistantDelegate This, class MonoTouch.MultipeerConnectivity.MCAdvertiserAssistant advertiserAssistant) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MultipeerConnectivity.IMCAdvertiserAssistantDelegate" RefType="this" />
          <Parameter Name="advertiserAssistant" Type="MonoTouch.MultipeerConnectivity.MCAdvertiserAssistant" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="advertiserAssistant">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MultipeerConnectivity.MCAdvertiserAssistantDelegate_Extensions" Member="M:MonoTouch.MultipeerConnectivity.MCAdvertiserAssistantDelegate_Extensions.DidDismissInvitation(MonoTouch.MultipeerConnectivity.IMCAdvertiserAssistantDelegate,MonoTouch.MultipeerConnectivity.MCAdvertiserAssistant)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MultipeerConnectivity.IMCAdvertiserAssistantDelegate" />
      </Targets>
      <Member MemberName="WillPresentInvitation">
        <MemberSignature Language="C#" Value="public static void WillPresentInvitation (this MonoTouch.MultipeerConnectivity.IMCAdvertiserAssistantDelegate This, MonoTouch.MultipeerConnectivity.MCAdvertiserAssistant advertiserAssistant);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillPresentInvitation(class MonoTouch.MultipeerConnectivity.IMCAdvertiserAssistantDelegate This, class MonoTouch.MultipeerConnectivity.MCAdvertiserAssistant advertiserAssistant) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MultipeerConnectivity.IMCAdvertiserAssistantDelegate" RefType="this" />
          <Parameter Name="advertiserAssistant" Type="MonoTouch.MultipeerConnectivity.MCAdvertiserAssistant" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="advertiserAssistant">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MultipeerConnectivity.MCAdvertiserAssistantDelegate_Extensions" Member="M:MonoTouch.MultipeerConnectivity.MCAdvertiserAssistantDelegate_Extensions.WillPresentInvitation(MonoTouch.MultipeerConnectivity.IMCAdvertiserAssistantDelegate,MonoTouch.MultipeerConnectivity.MCAdvertiserAssistant)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MultipeerConnectivity.IMCBrowserViewControllerDelegate" />
      </Targets>
      <Member MemberName="ShouldPresentNearbyPeer">
        <MemberSignature Language="C#" Value="public static bool ShouldPresentNearbyPeer (this MonoTouch.MultipeerConnectivity.IMCBrowserViewControllerDelegate This, MonoTouch.MultipeerConnectivity.MCBrowserViewController browserViewController, MonoTouch.MultipeerConnectivity.MCPeerID peerID, MonoTouch.Foundation.NSDictionary info);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldPresentNearbyPeer(class MonoTouch.MultipeerConnectivity.IMCBrowserViewControllerDelegate This, class MonoTouch.MultipeerConnectivity.MCBrowserViewController browserViewController, class MonoTouch.MultipeerConnectivity.MCPeerID peerID, class MonoTouch.Foundation.NSDictionary info) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MultipeerConnectivity.IMCBrowserViewControllerDelegate" RefType="this" />
          <Parameter Name="browserViewController" Type="MonoTouch.MultipeerConnectivity.MCBrowserViewController" />
          <Parameter Name="peerID" Type="MonoTouch.MultipeerConnectivity.MCPeerID" />
          <Parameter Name="info" Type="MonoTouch.Foundation.NSDictionary" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="browserViewController">To be added.</param>
          <param name="peerID">To be added.</param>
          <param name="info">To be added.This parameter can be .</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MultipeerConnectivity.MCBrowserViewControllerDelegate_Extensions" Member="M:MonoTouch.MultipeerConnectivity.MCBrowserViewControllerDelegate_Extensions.ShouldPresentNearbyPeer(MonoTouch.MultipeerConnectivity.IMCBrowserViewControllerDelegate,MonoTouch.MultipeerConnectivity.MCBrowserViewController,MonoTouch.MultipeerConnectivity.MCPeerID,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MultipeerConnectivity.MCError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.MultipeerConnectivity.MCError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.MultipeerConnectivity.MCError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.MultipeerConnectivity.MCError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.MultipeerConnectivity.MCError value</summary>
        </Docs>
        <Link Type="MonoTouch.MultipeerConnectivity.MCErrorExtensions" Member="M:MonoTouch.MultipeerConnectivity.MCErrorExtensions.GetDomain(MonoTouch.MultipeerConnectivity.MCError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MultipeerConnectivity.IMCNearbyServiceAdvertiserDelegate" />
      </Targets>
      <Member MemberName="DidNotStartAdvertisingPeer">
        <MemberSignature Language="C#" Value="public static void DidNotStartAdvertisingPeer (this MonoTouch.MultipeerConnectivity.IMCNearbyServiceAdvertiserDelegate This, MonoTouch.MultipeerConnectivity.MCNearbyServiceAdvertiser advertiser, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidNotStartAdvertisingPeer(class MonoTouch.MultipeerConnectivity.IMCNearbyServiceAdvertiserDelegate This, class MonoTouch.MultipeerConnectivity.MCNearbyServiceAdvertiser advertiser, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MultipeerConnectivity.IMCNearbyServiceAdvertiserDelegate" RefType="this" />
          <Parameter Name="advertiser" Type="MonoTouch.MultipeerConnectivity.MCNearbyServiceAdvertiser" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="advertiser">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MultipeerConnectivity.MCNearbyServiceAdvertiserDelegate_Extensions" Member="M:MonoTouch.MultipeerConnectivity.MCNearbyServiceAdvertiserDelegate_Extensions.DidNotStartAdvertisingPeer(MonoTouch.MultipeerConnectivity.IMCNearbyServiceAdvertiserDelegate,MonoTouch.MultipeerConnectivity.MCNearbyServiceAdvertiser,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MultipeerConnectivity.IMCNearbyServiceBrowserDelegate" />
      </Targets>
      <Member MemberName="DidNotStartBrowsingForPeers">
        <MemberSignature Language="C#" Value="public static void DidNotStartBrowsingForPeers (this MonoTouch.MultipeerConnectivity.IMCNearbyServiceBrowserDelegate This, MonoTouch.MultipeerConnectivity.MCNearbyServiceBrowser browser, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidNotStartBrowsingForPeers(class MonoTouch.MultipeerConnectivity.IMCNearbyServiceBrowserDelegate This, class MonoTouch.MultipeerConnectivity.MCNearbyServiceBrowser browser, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MultipeerConnectivity.IMCNearbyServiceBrowserDelegate" RefType="this" />
          <Parameter Name="browser" Type="MonoTouch.MultipeerConnectivity.MCNearbyServiceBrowser" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="browser">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MultipeerConnectivity.MCNearbyServiceBrowserDelegate_Extensions" Member="M:MonoTouch.MultipeerConnectivity.MCNearbyServiceBrowserDelegate_Extensions.DidNotStartBrowsingForPeers(MonoTouch.MultipeerConnectivity.IMCNearbyServiceBrowserDelegate,MonoTouch.MultipeerConnectivity.MCNearbyServiceBrowser,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.MultipeerConnectivity.IMCSessionDelegate" />
      </Targets>
      <Member MemberName="DidReceiveCertificate">
        <MemberSignature Language="C#" Value="public static bool DidReceiveCertificate (this MonoTouch.MultipeerConnectivity.IMCSessionDelegate This, MonoTouch.MultipeerConnectivity.MCSession session, MonoTouch.Security.SecCertificate[] certificate, MonoTouch.MultipeerConnectivity.MCPeerID peerID, Action&lt;bool&gt; certificateHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DidReceiveCertificate(class MonoTouch.MultipeerConnectivity.IMCSessionDelegate This, class MonoTouch.MultipeerConnectivity.MCSession session, class MonoTouch.Security.SecCertificate[] certificate, class MonoTouch.MultipeerConnectivity.MCPeerID peerID, class System.Action`1&lt;bool&gt; certificateHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.MultipeerConnectivity.IMCSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.MultipeerConnectivity.MCSession" />
          <Parameter Name="certificate" Type="MonoTouch.Security.SecCertificate[]" />
          <Parameter Name="peerID" Type="MonoTouch.MultipeerConnectivity.MCPeerID" />
          <Parameter Name="certificateHandler" Type="System.Action&lt;System.Boolean&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V12))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="certificate">To be added.This parameter can be .</param>
          <param name="peerID">To be added.</param>
          <param name="certificateHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.MultipeerConnectivity.MCSessionDelegate_Extensions" Member="M:MonoTouch.MultipeerConnectivity.MCSessionDelegate_Extensions.DidReceiveCertificate(MonoTouch.MultipeerConnectivity.IMCSessionDelegate,MonoTouch.MultipeerConnectivity.MCSession,MonoTouch.Security.SecCertificate[],MonoTouch.MultipeerConnectivity.MCPeerID,System.Action{System.Boolean})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.NetworkExtension.NEAppProxyFlowError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.NetworkExtension.NEAppProxyFlowError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.NetworkExtension.NEAppProxyFlowError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.NetworkExtension.NEAppProxyFlowError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.NetworkExtension.NEAppProxyFlowErrorExtensions" Member="M:MonoTouch.NetworkExtension.NEAppProxyFlowErrorExtensions.GetDomain(MonoTouch.NetworkExtension.NEAppProxyFlowError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.NetworkExtension.NEFilterManagerError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.NetworkExtension.NEFilterManagerError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.NetworkExtension.NEFilterManagerError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.NetworkExtension.NEFilterManagerError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.NetworkExtension.NEFilterManagerErrorExtensions" Member="M:MonoTouch.NetworkExtension.NEFilterManagerErrorExtensions.GetDomain(MonoTouch.NetworkExtension.NEFilterManagerError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.NetworkExtension.NETunnelProviderError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.NetworkExtension.NETunnelProviderError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.NetworkExtension.NETunnelProviderError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.NetworkExtension.NETunnelProviderError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.NetworkExtension.NETunnelProviderErrorExtensions" Member="M:MonoTouch.NetworkExtension.NETunnelProviderErrorExtensions.GetDomain(MonoTouch.NetworkExtension.NETunnelProviderError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.NetworkExtension.NEVpnError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.NetworkExtension.NEVpnError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.NetworkExtension.NEVpnError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.NetworkExtension.NEVpnError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.NetworkExtension.NEVpnErrorExtensions" Member="M:MonoTouch.NetworkExtension.NEVpnErrorExtensions.GetDomain(MonoTouch.NetworkExtension.NEVpnError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSMutableUrlRequest" />
      </Targets>
      <Member MemberName="BindTo">
        <MemberSignature Language="C#" Value="public static void BindTo (this MonoTouch.Foundation.NSMutableUrlRequest This, MonoTouch.NetworkExtension.NEHotspotHelperCommand command);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BindTo(class MonoTouch.Foundation.NSMutableUrlRequest This, class MonoTouch.NetworkExtension.NEHotspotHelperCommand command) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSMutableUrlRequest" RefType="this" />
          <Parameter Name="command" Type="MonoTouch.NetworkExtension.NEHotspotHelperCommand" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="command">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.NetworkExtension.NSMutableURLRequest_NEHotspotHelper" Member="M:MonoTouch.NetworkExtension.NSMutableURLRequest_NEHotspotHelper.BindTo(MonoTouch.Foundation.NSMutableUrlRequest,MonoTouch.NetworkExtension.NEHotspotHelperCommand)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate" />
      </Targets>
      <Member MemberName="EvaluateTrust">
        <MemberSignature Language="C#" Value="public static void EvaluateTrust (this MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate This, MonoTouch.NetworkExtension.NWTcpConnection connection, MonoTouch.Foundation.NSArray peerCertificateChain, Action&lt;MonoTouch.Security.SecTrust&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EvaluateTrust(class MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate This, class MonoTouch.NetworkExtension.NWTcpConnection connection, class MonoTouch.Foundation.NSArray peerCertificateChain, class System.Action`1&lt;class MonoTouch.Security.SecTrust&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.NetworkExtension.NWTcpConnection" />
          <Parameter Name="peerCertificateChain" Type="MonoTouch.Foundation.NSArray" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Security.SecTrust&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V24))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="connection">To be added.</param>
          <param name="peerCertificateChain">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.NetworkExtension.NWTcpConnectionAuthenticationDelegate_Extensions" Member="M:MonoTouch.NetworkExtension.NWTcpConnectionAuthenticationDelegate_Extensions.EvaluateTrust(MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate,MonoTouch.NetworkExtension.NWTcpConnection,MonoTouch.Foundation.NSArray,System.Action{MonoTouch.Security.SecTrust})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate" />
      </Targets>
      <Member MemberName="EvaluateTrustAsync">
        <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;MonoTouch.Security.SecTrust&gt; EvaluateTrustAsync (this MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate This, MonoTouch.NetworkExtension.NWTcpConnection connection, MonoTouch.Foundation.NSArray peerCertificateChain);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class MonoTouch.Security.SecTrust&gt; EvaluateTrustAsync(class MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate This, class MonoTouch.NetworkExtension.NWTcpConnection connection, class MonoTouch.Foundation.NSArray peerCertificateChain) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Threading.Tasks.Task&lt;MonoTouch.Security.SecTrust&gt;</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.NetworkExtension.NWTcpConnection" />
          <Parameter Name="peerCertificateChain" Type="MonoTouch.Foundation.NSArray" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="connection">To be added.</param>
          <param name="peerCertificateChain">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.NetworkExtension.NWTcpConnectionAuthenticationDelegate_Extensions" Member="M:MonoTouch.NetworkExtension.NWTcpConnectionAuthenticationDelegate_Extensions.EvaluateTrustAsync(MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate,MonoTouch.NetworkExtension.NWTcpConnection,MonoTouch.Foundation.NSArray)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate" />
      </Targets>
      <Member MemberName="ProvideIdentity">
        <MemberSignature Language="C#" Value="public static void ProvideIdentity (this MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate This, MonoTouch.NetworkExtension.NWTcpConnection connection, Action&lt;MonoTouch.Security.SecIdentity,MonoTouch.Foundation.NSArray&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ProvideIdentity(class MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate This, class MonoTouch.NetworkExtension.NWTcpConnection connection, class System.Action`2&lt;class MonoTouch.Security.SecIdentity, class MonoTouch.Foundation.NSArray&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.NetworkExtension.NWTcpConnection" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Security.SecIdentity,MonoTouch.Foundation.NSArray&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity2V42))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="connection">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.NetworkExtension.NWTcpConnectionAuthenticationDelegate_Extensions" Member="M:MonoTouch.NetworkExtension.NWTcpConnectionAuthenticationDelegate_Extensions.ProvideIdentity(MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate,MonoTouch.NetworkExtension.NWTcpConnection,System.Action{MonoTouch.Security.SecIdentity,MonoTouch.Foundation.NSArray})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate" />
      </Targets>
      <Member MemberName="ShouldEvaluateTrust">
        <MemberSignature Language="C#" Value="public static bool ShouldEvaluateTrust (this MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate This, MonoTouch.NetworkExtension.NWTcpConnection connection);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldEvaluateTrust(class MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate This, class MonoTouch.NetworkExtension.NWTcpConnection connection) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.NetworkExtension.NWTcpConnection" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="connection">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.NetworkExtension.NWTcpConnectionAuthenticationDelegate_Extensions" Member="M:MonoTouch.NetworkExtension.NWTcpConnectionAuthenticationDelegate_Extensions.ShouldEvaluateTrust(MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate,MonoTouch.NetworkExtension.NWTcpConnection)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate" />
      </Targets>
      <Member MemberName="ShouldProvideIdentity">
        <MemberSignature Language="C#" Value="public static bool ShouldProvideIdentity (this MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate This, MonoTouch.NetworkExtension.NWTcpConnection connection);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldProvideIdentity(class MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate This, class MonoTouch.NetworkExtension.NWTcpConnection connection) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate" RefType="this" />
          <Parameter Name="connection" Type="MonoTouch.NetworkExtension.NWTcpConnection" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="connection">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.NetworkExtension.NWTcpConnectionAuthenticationDelegate_Extensions" Member="M:MonoTouch.NetworkExtension.NWTcpConnectionAuthenticationDelegate_Extensions.ShouldProvideIdentity(MonoTouch.NetworkExtension.INWTcpConnectionAuthenticationDelegate,MonoTouch.NetworkExtension.NWTcpConnection)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.NotificationCenter.INCWidgetProviding" />
      </Targets>
      <Member MemberName="GetWidgetMarginInsets">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIEdgeInsets GetWidgetMarginInsets (this MonoTouch.NotificationCenter.INCWidgetProviding This, MonoTouch.UIKit.UIEdgeInsets defaultMarginInsets);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.UIKit.UIEdgeInsets GetWidgetMarginInsets(class MonoTouch.NotificationCenter.INCWidgetProviding This, valuetype MonoTouch.UIKit.UIEdgeInsets defaultMarginInsets) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIEdgeInsets</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.NotificationCenter.INCWidgetProviding" RefType="this" />
          <Parameter Name="defaultMarginInsets" Type="MonoTouch.UIKit.UIEdgeInsets" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="defaultMarginInsets">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.NotificationCenter.NCWidgetProviding_Extensions" Member="M:MonoTouch.NotificationCenter.NCWidgetProviding_Extensions.GetWidgetMarginInsets(MonoTouch.NotificationCenter.INCWidgetProviding,MonoTouch.UIKit.UIEdgeInsets)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.NotificationCenter.INCWidgetProviding" />
      </Targets>
      <Member MemberName="WidgetActiveDisplayModeDidChange">
        <MemberSignature Language="C#" Value="public static void WidgetActiveDisplayModeDidChange (this MonoTouch.NotificationCenter.INCWidgetProviding This, MonoTouch.NotificationCenter.NCWidgetDisplayMode activeDisplayMode, System.Drawing.SizeF maxSize);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WidgetActiveDisplayModeDidChange(class MonoTouch.NotificationCenter.INCWidgetProviding This, valuetype MonoTouch.NotificationCenter.NCWidgetDisplayMode activeDisplayMode, valuetype System.Drawing.SizeF maxSize) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void WidgetActiveDisplayModeDidChange (this MonoTouch.NotificationCenter.INCWidgetProviding This, MonoTouch.NotificationCenter.NCWidgetDisplayMode activeDisplayMode, MonoTouch.CoreGraphics.CGSize maxSize);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WidgetActiveDisplayModeDidChange(class MonoTouch.NotificationCenter.INCWidgetProviding This, valuetype MonoTouch.NotificationCenter.NCWidgetDisplayMode activeDisplayMode, valuetype MonoTouch.CoreGraphics.CGSize maxSize) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.NotificationCenter.INCWidgetProviding" RefType="this" />
          <Parameter Name="activeDisplayMode" Type="MonoTouch.NotificationCenter.NCWidgetDisplayMode" />
          <Parameter Name="maxSize" Type="System.Drawing.SizeF" apistyle="classic" />
          <Parameter Name="maxSize" Type="MonoTouch.CoreGraphics.CGSize" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="activeDisplayMode">To be added.</param>
          <param name="maxSize">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.NotificationCenter.NCWidgetProviding_Extensions" Member="M:MonoTouch.NotificationCenter.NCWidgetProviding_Extensions.WidgetActiveDisplayModeDidChange(MonoTouch.NotificationCenter.INCWidgetProviding,MonoTouch.NotificationCenter.NCWidgetDisplayMode,MonoTouch.CoreGraphics.CGSize)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.NotificationCenter.INCWidgetProviding" />
      </Targets>
      <Member MemberName="WidgetPerformUpdate">
        <MemberSignature Language="C#" Value="public static void WidgetPerformUpdate (this MonoTouch.NotificationCenter.INCWidgetProviding This, Action&lt;MonoTouch.NotificationCenter.NCUpdateResult&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WidgetPerformUpdate(class MonoTouch.NotificationCenter.INCWidgetProviding This, class System.Action`1&lt;valuetype MonoTouch.NotificationCenter.NCUpdateResult&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.NotificationCenter.INCWidgetProviding" RefType="this" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.NotificationCenter.NCUpdateResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V1))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.NotificationCenter.NCWidgetProviding_Extensions" Member="M:MonoTouch.NotificationCenter.NCWidgetProviding_Extensions.WidgetPerformUpdate(MonoTouch.NotificationCenter.INCWidgetProviding,System.Action{MonoTouch.NotificationCenter.NCUpdateResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSExtensionContext" />
      </Targets>
      <Member MemberName="GetWidgetActiveDisplayMode">
        <MemberSignature Language="C#" Value="public static MonoTouch.NotificationCenter.NCWidgetDisplayMode GetWidgetActiveDisplayMode (this MonoTouch.Foundation.NSExtensionContext This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.NotificationCenter.NCWidgetDisplayMode GetWidgetActiveDisplayMode(class MonoTouch.Foundation.NSExtensionContext This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.NotificationCenter.NCWidgetDisplayMode</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSExtensionContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.NotificationCenter.NSExtensionContext_NCWidgetAdditions" Member="M:MonoTouch.NotificationCenter.NSExtensionContext_NCWidgetAdditions.GetWidgetActiveDisplayMode(MonoTouch.Foundation.NSExtensionContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSExtensionContext" />
      </Targets>
      <Member MemberName="GetWidgetLargestAvailableDisplayMode">
        <MemberSignature Language="C#" Value="public static MonoTouch.NotificationCenter.NCWidgetDisplayMode GetWidgetLargestAvailableDisplayMode (this MonoTouch.Foundation.NSExtensionContext This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.NotificationCenter.NCWidgetDisplayMode GetWidgetLargestAvailableDisplayMode(class MonoTouch.Foundation.NSExtensionContext This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.NotificationCenter.NCWidgetDisplayMode</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSExtensionContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.NotificationCenter.NSExtensionContext_NCWidgetAdditions" Member="M:MonoTouch.NotificationCenter.NSExtensionContext_NCWidgetAdditions.GetWidgetLargestAvailableDisplayMode(MonoTouch.Foundation.NSExtensionContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSExtensionContext" />
      </Targets>
      <Member MemberName="GetWidgetMaximumSize">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF GetWidgetMaximumSize (this MonoTouch.Foundation.NSExtensionContext This, MonoTouch.NotificationCenter.NCWidgetDisplayMode displayMode);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF GetWidgetMaximumSize(class MonoTouch.Foundation.NSExtensionContext This, valuetype MonoTouch.NotificationCenter.NCWidgetDisplayMode displayMode) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGSize GetWidgetMaximumSize (this MonoTouch.Foundation.NSExtensionContext This, MonoTouch.NotificationCenter.NCWidgetDisplayMode displayMode);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGSize GetWidgetMaximumSize(class MonoTouch.Foundation.NSExtensionContext This, valuetype MonoTouch.NotificationCenter.NCWidgetDisplayMode displayMode) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.SizeF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSExtensionContext" RefType="this" />
          <Parameter Name="displayMode" Type="MonoTouch.NotificationCenter.NCWidgetDisplayMode" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="displayMode">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.NotificationCenter.NSExtensionContext_NCWidgetAdditions" Member="M:MonoTouch.NotificationCenter.NSExtensionContext_NCWidgetAdditions.GetWidgetMaximumSize(MonoTouch.Foundation.NSExtensionContext,MonoTouch.NotificationCenter.NCWidgetDisplayMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSExtensionContext" />
      </Targets>
      <Member MemberName="SetWidgetLargestAvailableDisplayMode">
        <MemberSignature Language="C#" Value="public static void SetWidgetLargestAvailableDisplayMode (this MonoTouch.Foundation.NSExtensionContext This, MonoTouch.NotificationCenter.NCWidgetDisplayMode mode);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetWidgetLargestAvailableDisplayMode(class MonoTouch.Foundation.NSExtensionContext This, valuetype MonoTouch.NotificationCenter.NCWidgetDisplayMode mode) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSExtensionContext" RefType="this" />
          <Parameter Name="mode" Type="MonoTouch.NotificationCenter.NCWidgetDisplayMode" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="mode">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.NotificationCenter.NSExtensionContext_NCWidgetAdditions" Member="M:MonoTouch.NotificationCenter.NSExtensionContext_NCWidgetAdditions.SetWidgetLargestAvailableDisplayMode(MonoTouch.Foundation.NSExtensionContext,MonoTouch.NotificationCenter.NCWidgetDisplayMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ObjCRuntime.Platform" />
      </Targets>
      <Member MemberName="CompareIosVersion">
        <MemberSignature Language="C#" Value="public static int CompareIosVersion (this MonoTouch.ObjCRuntime.Platform a, MonoTouch.ObjCRuntime.Platform b);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CompareIosVersion(valuetype MonoTouch.ObjCRuntime.Platform a, valuetype MonoTouch.ObjCRuntime.Platform b) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="MonoTouch.ObjCRuntime.Platform" RefType="this" />
          <Parameter Name="b" Type="MonoTouch.ObjCRuntime.Platform" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="b">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ObjCRuntime.PlatformHelper" Member="M:MonoTouch.ObjCRuntime.PlatformHelper.CompareIosVersion(MonoTouch.ObjCRuntime.Platform,MonoTouch.ObjCRuntime.Platform)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ObjCRuntime.Platform" />
      </Targets>
      <Member MemberName="CompareMacVersion">
        <MemberSignature Language="C#" Value="public static int CompareMacVersion (this MonoTouch.ObjCRuntime.Platform a, MonoTouch.ObjCRuntime.Platform b);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CompareMacVersion(valuetype MonoTouch.ObjCRuntime.Platform a, valuetype MonoTouch.ObjCRuntime.Platform b) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Int32</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="a" Type="MonoTouch.ObjCRuntime.Platform" RefType="this" />
          <Parameter Name="b" Type="MonoTouch.ObjCRuntime.Platform" />
        </Parameters>
        <Docs>
          <param name="a">To be added.</param>
          <param name="b">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ObjCRuntime.PlatformHelper" Member="M:MonoTouch.ObjCRuntime.PlatformHelper.CompareMacVersion(MonoTouch.ObjCRuntime.Platform,MonoTouch.ObjCRuntime.Platform)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ObjCRuntime.Platform" />
      </Targets>
      <Member MemberName="Is64BitOnlyOnCurrentPlatform">
        <MemberSignature Language="C#" Value="public static bool Is64BitOnlyOnCurrentPlatform (this MonoTouch.ObjCRuntime.Platform platform);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Is64BitOnlyOnCurrentPlatform(valuetype MonoTouch.ObjCRuntime.Platform platform) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="platform" Type="MonoTouch.ObjCRuntime.Platform" RefType="this" />
        </Parameters>
        <Docs>
          <param name="platform">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ObjCRuntime.PlatformHelper" Member="M:MonoTouch.ObjCRuntime.PlatformHelper.Is64BitOnlyOnCurrentPlatform(MonoTouch.ObjCRuntime.Platform)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ObjCRuntime.Platform" />
      </Targets>
      <Member MemberName="IsIos">
        <MemberSignature Language="C#" Value="public static bool IsIos (this MonoTouch.ObjCRuntime.Platform platform);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsIos(valuetype MonoTouch.ObjCRuntime.Platform platform) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="platform" Type="MonoTouch.ObjCRuntime.Platform" RefType="this" />
        </Parameters>
        <Docs>
          <param name="platform">Platform to probe.</param>
          <summary>Determines if the specified platform is iOS.</summary>
        </Docs>
        <Link Type="MonoTouch.ObjCRuntime.PlatformHelper" Member="M:MonoTouch.ObjCRuntime.PlatformHelper.IsIos(MonoTouch.ObjCRuntime.Platform)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ObjCRuntime.Platform" />
      </Targets>
      <Member MemberName="IsMac">
        <MemberSignature Language="C#" Value="public static bool IsMac (this MonoTouch.ObjCRuntime.Platform platform);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsMac(valuetype MonoTouch.ObjCRuntime.Platform platform) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="platform" Type="MonoTouch.ObjCRuntime.Platform" RefType="this" />
        </Parameters>
        <Docs>
          <param name="platform">Platform to probe.</param>
          <summary>Determines if the specified platform is MacOS.</summary>
        </Docs>
        <Link Type="MonoTouch.ObjCRuntime.PlatformHelper" Member="M:MonoTouch.ObjCRuntime.PlatformHelper.IsMac(MonoTouch.ObjCRuntime.Platform)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ObjCRuntime.Platform" />
      </Targets>
      <Member MemberName="IsValid">
        <MemberSignature Language="C#" Value="public static bool IsValid (this MonoTouch.ObjCRuntime.Platform platform);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValid(valuetype MonoTouch.ObjCRuntime.Platform platform) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="platform" Type="MonoTouch.ObjCRuntime.Platform" RefType="this" />
        </Parameters>
        <Docs>
          <param name="platform">Platform to probe.</param>
          <summary>Validates the Platform value against known API versions.</summary>
        </Docs>
        <Link Type="MonoTouch.ObjCRuntime.PlatformHelper" Member="M:MonoTouch.ObjCRuntime.PlatformHelper.IsValid(MonoTouch.ObjCRuntime.Platform)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ObjCRuntime.Platform" />
      </Targets>
      <Member MemberName="ToArch">
        <MemberSignature Language="C#" Value="public static MonoTouch.ObjCRuntime.Platform ToArch (this MonoTouch.ObjCRuntime.Platform platform);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.ObjCRuntime.Platform ToArch(valuetype MonoTouch.ObjCRuntime.Platform platform) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.ObjCRuntime.Platform</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="platform" Type="MonoTouch.ObjCRuntime.Platform" RefType="this" />
        </Parameters>
        <Docs>
          <param name="platform">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ObjCRuntime.PlatformHelper" Member="M:MonoTouch.ObjCRuntime.PlatformHelper.ToArch(MonoTouch.ObjCRuntime.Platform)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ObjCRuntime.Platform" />
      </Targets>
      <Member MemberName="ToIosArch">
        <MemberSignature Language="C#" Value="public static MonoTouch.ObjCRuntime.Platform ToIosArch (this MonoTouch.ObjCRuntime.Platform platform);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.ObjCRuntime.Platform ToIosArch(valuetype MonoTouch.ObjCRuntime.Platform platform) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.ObjCRuntime.Platform</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="platform" Type="MonoTouch.ObjCRuntime.Platform" RefType="this" />
        </Parameters>
        <Docs>
          <param name="platform">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ObjCRuntime.PlatformHelper" Member="M:MonoTouch.ObjCRuntime.PlatformHelper.ToIosArch(MonoTouch.ObjCRuntime.Platform)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ObjCRuntime.Platform" />
      </Targets>
      <Member MemberName="ToIosVersion">
        <MemberSignature Language="C#" Value="public static MonoTouch.ObjCRuntime.Platform ToIosVersion (this MonoTouch.ObjCRuntime.Platform platform);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.ObjCRuntime.Platform ToIosVersion(valuetype MonoTouch.ObjCRuntime.Platform platform) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.ObjCRuntime.Platform</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="platform" Type="MonoTouch.ObjCRuntime.Platform" RefType="this" />
        </Parameters>
        <Docs>
          <param name="platform">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ObjCRuntime.PlatformHelper" Member="M:MonoTouch.ObjCRuntime.PlatformHelper.ToIosVersion(MonoTouch.ObjCRuntime.Platform)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ObjCRuntime.Platform" />
      </Targets>
      <Member MemberName="ToMacArch">
        <MemberSignature Language="C#" Value="public static MonoTouch.ObjCRuntime.Platform ToMacArch (this MonoTouch.ObjCRuntime.Platform platform);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.ObjCRuntime.Platform ToMacArch(valuetype MonoTouch.ObjCRuntime.Platform platform) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.ObjCRuntime.Platform</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="platform" Type="MonoTouch.ObjCRuntime.Platform" RefType="this" />
        </Parameters>
        <Docs>
          <param name="platform">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ObjCRuntime.PlatformHelper" Member="M:MonoTouch.ObjCRuntime.PlatformHelper.ToMacArch(MonoTouch.ObjCRuntime.Platform)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ObjCRuntime.Platform" />
      </Targets>
      <Member MemberName="ToMacVersion">
        <MemberSignature Language="C#" Value="public static MonoTouch.ObjCRuntime.Platform ToMacVersion (this MonoTouch.ObjCRuntime.Platform platform);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.ObjCRuntime.Platform ToMacVersion(valuetype MonoTouch.ObjCRuntime.Platform platform) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.ObjCRuntime.Platform</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="platform" Type="MonoTouch.ObjCRuntime.Platform" RefType="this" />
        </Parameters>
        <Docs>
          <param name="platform">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ObjCRuntime.PlatformHelper" Member="M:MonoTouch.ObjCRuntime.PlatformHelper.ToMacVersion(MonoTouch.ObjCRuntime.Platform)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ObjCRuntime.Platform" />
      </Targets>
      <Member MemberName="ToVersion">
        <MemberSignature Language="C#" Value="public static MonoTouch.ObjCRuntime.Platform ToVersion (this MonoTouch.ObjCRuntime.Platform platform);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.ObjCRuntime.Platform ToVersion(valuetype MonoTouch.ObjCRuntime.Platform platform) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.ObjCRuntime.Platform</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="platform" Type="MonoTouch.ObjCRuntime.Platform" RefType="this" />
        </Parameters>
        <Docs>
          <param name="platform">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ObjCRuntime.PlatformHelper" Member="M:MonoTouch.ObjCRuntime.PlatformHelper.ToVersion(MonoTouch.ObjCRuntime.Platform)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PassKit.IPKAddPassesViewControllerDelegate" />
      </Targets>
      <Member MemberName="Finished">
        <MemberSignature Language="C#" Value="public static void Finished (this MonoTouch.PassKit.IPKAddPassesViewControllerDelegate This, MonoTouch.PassKit.PKAddPassesViewController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Finished(class MonoTouch.PassKit.IPKAddPassesViewControllerDelegate This, class MonoTouch.PassKit.PKAddPassesViewController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PassKit.IPKAddPassesViewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.PassKit.PKAddPassesViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.PassKit.PKAddPassesViewControllerDelegate_Extensions" Member="M:MonoTouch.PassKit.PKAddPassesViewControllerDelegate_Extensions.Finished(MonoTouch.PassKit.IPKAddPassesViewControllerDelegate,MonoTouch.PassKit.PKAddPassesViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate" />
      </Targets>
      <Member MemberName="DidSelectPaymentMethod">
        <MemberSignature Language="C#" Value="public static void DidSelectPaymentMethod (this MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate This, MonoTouch.PassKit.PKPaymentAuthorizationViewController controller, MonoTouch.PassKit.PKPaymentMethod paymentMethod, Action&lt;MonoTouch.PassKit.PKPaymentSummaryItem[]&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSelectPaymentMethod(class MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate This, class MonoTouch.PassKit.PKPaymentAuthorizationViewController controller, class MonoTouch.PassKit.PKPaymentMethod paymentMethod, class System.Action`1&lt;class MonoTouch.PassKit.PKPaymentSummaryItem[]&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.PassKit.PKPaymentAuthorizationViewController" />
          <Parameter Name="paymentMethod" Type="MonoTouch.PassKit.PKPaymentMethod" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.PassKit.PKPaymentSummaryItem[]&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V31))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="paymentMethod">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Called after the user has selected a payment method.</summary>
        </Docs>
        <Link Type="MonoTouch.PassKit.PKPaymentAuthorizationViewControllerDelegate_Extensions" Member="M:MonoTouch.PassKit.PKPaymentAuthorizationViewControllerDelegate_Extensions.DidSelectPaymentMethod(MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate,MonoTouch.PassKit.PKPaymentAuthorizationViewController,MonoTouch.PassKit.PKPaymentMethod,System.Action{MonoTouch.PassKit.PKPaymentSummaryItem[]})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate" />
      </Targets>
      <Member MemberName="DidSelectShippingAddress">
        <MemberSignature Language="C#" Value="public static void DidSelectShippingAddress (this MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate This, MonoTouch.PassKit.PKPaymentAuthorizationViewController controller, MonoTouch.AddressBook.ABRecord address, MonoTouch.PassKit.PKPaymentShippingAddressSelected completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSelectShippingAddress(class MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate This, class MonoTouch.PassKit.PKPaymentAuthorizationViewController controller, class MonoTouch.AddressBook.ABRecord address, class MonoTouch.PassKit.PKPaymentShippingAddressSelected completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.PassKit.PKPaymentAuthorizationViewController" />
          <Parameter Name="address" Type="MonoTouch.AddressBook.ABRecord" />
          <Parameter Name="completion" Type="MonoTouch.PassKit.PKPaymentShippingAddressSelected">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDPKPaymentShippingAddressSelected))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="address">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Indicates the user selected a shipping address.</summary>
        </Docs>
        <Link Type="MonoTouch.PassKit.PKPaymentAuthorizationViewControllerDelegate_Extensions" Member="M:MonoTouch.PassKit.PKPaymentAuthorizationViewControllerDelegate_Extensions.DidSelectShippingAddress(MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate,MonoTouch.PassKit.PKPaymentAuthorizationViewController,MonoTouch.AddressBook.ABRecord,MonoTouch.PassKit.PKPaymentShippingAddressSelected)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate" />
      </Targets>
      <Member MemberName="DidSelectShippingContact">
        <MemberSignature Language="C#" Value="public static void DidSelectShippingContact (this MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate This, MonoTouch.PassKit.PKPaymentAuthorizationViewController controller, MonoTouch.PassKit.PKContact contact, MonoTouch.PassKit.PKPaymentShippingAddressSelected completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSelectShippingContact(class MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate This, class MonoTouch.PassKit.PKPaymentAuthorizationViewController controller, class MonoTouch.PassKit.PKContact contact, class MonoTouch.PassKit.PKPaymentShippingAddressSelected completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.PassKit.PKPaymentAuthorizationViewController" />
          <Parameter Name="contact" Type="MonoTouch.PassKit.PKContact" />
          <Parameter Name="completion" Type="MonoTouch.PassKit.PKPaymentShippingAddressSelected">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDPKPaymentShippingAddressSelected))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="contact">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Called after the user has selected a shipping contact.</summary>
        </Docs>
        <Link Type="MonoTouch.PassKit.PKPaymentAuthorizationViewControllerDelegate_Extensions" Member="M:MonoTouch.PassKit.PKPaymentAuthorizationViewControllerDelegate_Extensions.DidSelectShippingContact(MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate,MonoTouch.PassKit.PKPaymentAuthorizationViewController,MonoTouch.PassKit.PKContact,MonoTouch.PassKit.PKPaymentShippingAddressSelected)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate" />
      </Targets>
      <Member MemberName="DidSelectShippingMethod">
        <MemberSignature Language="C#" Value="public static void DidSelectShippingMethod (this MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate This, MonoTouch.PassKit.PKPaymentAuthorizationViewController controller, MonoTouch.PassKit.PKShippingMethod shippingMethod, MonoTouch.PassKit.PKPaymentShippingMethodSelected completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSelectShippingMethod(class MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate This, class MonoTouch.PassKit.PKPaymentAuthorizationViewController controller, class MonoTouch.PassKit.PKShippingMethod shippingMethod, class MonoTouch.PassKit.PKPaymentShippingMethodSelected completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.PassKit.PKPaymentAuthorizationViewController" />
          <Parameter Name="shippingMethod" Type="MonoTouch.PassKit.PKShippingMethod" />
          <Parameter Name="completion" Type="MonoTouch.PassKit.PKPaymentShippingMethodSelected">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDPKPaymentShippingMethodSelected))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="shippingMethod">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>Indicates the user selected a shippingmethod.</summary>
        </Docs>
        <Link Type="MonoTouch.PassKit.PKPaymentAuthorizationViewControllerDelegate_Extensions" Member="M:MonoTouch.PassKit.PKPaymentAuthorizationViewControllerDelegate_Extensions.DidSelectShippingMethod(MonoTouch.PassKit.IPKPaymentAuthorizationViewControllerDelegate,MonoTouch.PassKit.PKPaymentAuthorizationViewController,MonoTouch.PassKit.PKShippingMethod,MonoTouch.PassKit.PKPaymentShippingMethodSelected)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Photos.PHAsset" />
      </Targets>
      <Member MemberName="CancelContentEditingInputRequest">
        <MemberSignature Language="C#" Value="public static void CancelContentEditingInputRequest (this MonoTouch.Photos.PHAsset This, uint requestID);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CancelContentEditingInputRequest(class MonoTouch.Photos.PHAsset This, unsigned int32 requestID) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void CancelContentEditingInputRequest (this MonoTouch.Photos.PHAsset This, nuint requestID);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CancelContentEditingInputRequest(class MonoTouch.Photos.PHAsset This, valuetype System.nuint requestID) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Photos.PHAsset" RefType="this" />
          <Parameter Name="requestID" Type="System.UInt32" apistyle="classic" />
          <Parameter Name="requestID" Type="System.nuint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="requestID">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Photos.PHAssetContentEditingInputExtensions" Member="M:MonoTouch.Photos.PHAssetContentEditingInputExtensions.CancelContentEditingInputRequest(MonoTouch.Photos.PHAsset,System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Photos.PHAsset" />
      </Targets>
      <Member MemberName="RequestContentEditingInput">
        <MemberSignature Language="C#" Value="public static uint RequestContentEditingInput (this MonoTouch.Photos.PHAsset This, MonoTouch.Photos.PHContentEditingInputRequestOptions options, MonoTouch.Photos.PHContentEditingHandler completionHandler);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 RequestContentEditingInput(class MonoTouch.Photos.PHAsset This, class MonoTouch.Photos.PHContentEditingInputRequestOptions options, class MonoTouch.Photos.PHContentEditingHandler completionHandler) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nuint RequestContentEditingInput (this MonoTouch.Photos.PHAsset This, MonoTouch.Photos.PHContentEditingInputRequestOptions options, MonoTouch.Photos.PHContentEditingHandler completionHandler);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nuint RequestContentEditingInput(class MonoTouch.Photos.PHAsset This, class MonoTouch.Photos.PHContentEditingInputRequestOptions options, class MonoTouch.Photos.PHContentEditingHandler completionHandler) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.UInt32</ReturnType>
          <ReturnType apistyle="unified">System.nuint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Photos.PHAsset" RefType="this" />
          <Parameter Name="options" Type="MonoTouch.Photos.PHContentEditingInputRequestOptions" />
          <Parameter Name="completionHandler" Type="MonoTouch.Photos.PHContentEditingHandler">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDPHContentEditingHandler))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="options">
            <para>To be added.</para>
            <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
          </param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Photos.PHAssetContentEditingInputExtensions" Member="M:MonoTouch.Photos.PHAssetContentEditingInputExtensions.RequestContentEditingInput(MonoTouch.Photos.PHAsset,MonoTouch.Photos.PHContentEditingInputRequestOptions,MonoTouch.Photos.PHContentEditingHandler)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PhotosUI.IPHLivePhotoViewDelegate" />
      </Targets>
      <Member MemberName="DidEndPlayback">
        <MemberSignature Language="C#" Value="public static void DidEndPlayback (this MonoTouch.PhotosUI.IPHLivePhotoViewDelegate This, MonoTouch.PhotosUI.PHLivePhotoView livePhotoView, MonoTouch.PhotosUI.PHLivePhotoViewPlaybackStyle playbackStyle);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidEndPlayback(class MonoTouch.PhotosUI.IPHLivePhotoViewDelegate This, class MonoTouch.PhotosUI.PHLivePhotoView livePhotoView, valuetype MonoTouch.PhotosUI.PHLivePhotoViewPlaybackStyle playbackStyle) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PhotosUI.IPHLivePhotoViewDelegate" RefType="this" />
          <Parameter Name="livePhotoView" Type="MonoTouch.PhotosUI.PHLivePhotoView" />
          <Parameter Name="playbackStyle" Type="MonoTouch.PhotosUI.PHLivePhotoViewPlaybackStyle" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="livePhotoView">To be added.</param>
          <param name="playbackStyle">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.PhotosUI.PHLivePhotoViewDelegate_Extensions" Member="M:MonoTouch.PhotosUI.PHLivePhotoViewDelegate_Extensions.DidEndPlayback(MonoTouch.PhotosUI.IPHLivePhotoViewDelegate,MonoTouch.PhotosUI.PHLivePhotoView,MonoTouch.PhotosUI.PHLivePhotoViewPlaybackStyle)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PhotosUI.IPHLivePhotoViewDelegate" />
      </Targets>
      <Member MemberName="WillBeginPlayback">
        <MemberSignature Language="C#" Value="public static void WillBeginPlayback (this MonoTouch.PhotosUI.IPHLivePhotoViewDelegate This, MonoTouch.PhotosUI.PHLivePhotoView livePhotoView, MonoTouch.PhotosUI.PHLivePhotoViewPlaybackStyle playbackStyle);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillBeginPlayback(class MonoTouch.PhotosUI.IPHLivePhotoViewDelegate This, class MonoTouch.PhotosUI.PHLivePhotoView livePhotoView, valuetype MonoTouch.PhotosUI.PHLivePhotoViewPlaybackStyle playbackStyle) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PhotosUI.IPHLivePhotoViewDelegate" RefType="this" />
          <Parameter Name="livePhotoView" Type="MonoTouch.PhotosUI.PHLivePhotoView" />
          <Parameter Name="playbackStyle" Type="MonoTouch.PhotosUI.PHLivePhotoViewPlaybackStyle" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="livePhotoView">To be added.</param>
          <param name="playbackStyle">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.PhotosUI.PHLivePhotoViewDelegate_Extensions" Member="M:MonoTouch.PhotosUI.PHLivePhotoViewDelegate_Extensions.WillBeginPlayback(MonoTouch.PhotosUI.IPHLivePhotoViewDelegate,MonoTouch.PhotosUI.PHLivePhotoView,MonoTouch.PhotosUI.PHLivePhotoViewPlaybackStyle)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.PushKit.IPKPushRegistryDelegate" />
      </Targets>
      <Member MemberName="DidInvalidatePushToken">
        <MemberSignature Language="C#" Value="public static void DidInvalidatePushToken (this MonoTouch.PushKit.IPKPushRegistryDelegate This, MonoTouch.PushKit.PKPushRegistry registry, string type);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidInvalidatePushToken(class MonoTouch.PushKit.IPKPushRegistryDelegate This, class MonoTouch.PushKit.PKPushRegistry registry, string type) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.PushKit.IPKPushRegistryDelegate" RefType="this" />
          <Parameter Name="registry" Type="MonoTouch.PushKit.PKPushRegistry" />
          <Parameter Name="type" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="registry">To be added.</param>
          <param name="type">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.PushKit.PKPushRegistryDelegate_Extensions" Member="M:MonoTouch.PushKit.PKPushRegistryDelegate_Extensions.DidInvalidatePushToken(MonoTouch.PushKit.IPKPushRegistryDelegate,MonoTouch.PushKit.PKPushRegistry,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.QuickLook.IQLPreviewControllerDelegate" />
      </Targets>
      <Member MemberName="DidDismiss">
        <MemberSignature Language="C#" Value="public static void DidDismiss (this MonoTouch.QuickLook.IQLPreviewControllerDelegate This, MonoTouch.QuickLook.QLPreviewController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDismiss(class MonoTouch.QuickLook.IQLPreviewControllerDelegate This, class MonoTouch.QuickLook.QLPreviewController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.QuickLook.IQLPreviewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.QuickLook.QLPreviewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.QuickLook.QLPreviewControllerDelegate_Extensions" Member="M:MonoTouch.QuickLook.QLPreviewControllerDelegate_Extensions.DidDismiss(MonoTouch.QuickLook.IQLPreviewControllerDelegate,MonoTouch.QuickLook.QLPreviewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.QuickLook.IQLPreviewControllerDelegate" />
      </Targets>
      <Member MemberName="FrameForPreviewItem" apistyle="unified">
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGRect FrameForPreviewItem (this MonoTouch.QuickLook.IQLPreviewControllerDelegate This, MonoTouch.QuickLook.QLPreviewController controller, MonoTouch.QuickLook.IQLPreviewItem item, ref MonoTouch.UIKit.UIView view);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGRect FrameForPreviewItem(class MonoTouch.QuickLook.IQLPreviewControllerDelegate This, class MonoTouch.QuickLook.QLPreviewController controller, class MonoTouch.QuickLook.IQLPreviewItem item, class MonoTouch.UIKit.UIView view) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.QuickLook.IQLPreviewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.QuickLook.QLPreviewController" />
          <Parameter Name="item" Type="MonoTouch.QuickLook.IQLPreviewItem" />
          <Parameter Name="view" Type="MonoTouch.UIKit.UIView&amp;" RefType="ref" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="item">To be added.</param>
          <param name="view">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.QuickLook.QLPreviewControllerDelegate_Extensions" Member="M:MonoTouch.QuickLook.QLPreviewControllerDelegate_Extensions.FrameForPreviewItem(MonoTouch.QuickLook.IQLPreviewControllerDelegate,MonoTouch.QuickLook.QLPreviewController,MonoTouch.QuickLook.IQLPreviewItem,MonoTouch.UIKit.UIView@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.QuickLook.IQLPreviewControllerDelegate" />
      </Targets>
      <Member MemberName="ShouldOpenUrl" apistyle="unified">
        <MemberSignature Language="C#" Value="public static bool ShouldOpenUrl (this MonoTouch.QuickLook.IQLPreviewControllerDelegate This, MonoTouch.QuickLook.QLPreviewController controller, MonoTouch.Foundation.NSUrl url, MonoTouch.QuickLook.IQLPreviewItem item);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldOpenUrl(class MonoTouch.QuickLook.IQLPreviewControllerDelegate This, class MonoTouch.QuickLook.QLPreviewController controller, class MonoTouch.Foundation.NSUrl url, class MonoTouch.QuickLook.IQLPreviewItem item) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.QuickLook.IQLPreviewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.QuickLook.QLPreviewController" />
          <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="item" Type="MonoTouch.QuickLook.IQLPreviewItem" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="url">To be added.</param>
          <param name="item">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.QuickLook.QLPreviewControllerDelegate_Extensions" Member="M:MonoTouch.QuickLook.QLPreviewControllerDelegate_Extensions.ShouldOpenUrl(MonoTouch.QuickLook.IQLPreviewControllerDelegate,MonoTouch.QuickLook.QLPreviewController,MonoTouch.Foundation.NSUrl,MonoTouch.QuickLook.IQLPreviewItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.QuickLook.IQLPreviewControllerDelegate" />
      </Targets>
      <Member MemberName="TransitionImageForPreviewItem" apistyle="unified">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIImage TransitionImageForPreviewItem (this MonoTouch.QuickLook.IQLPreviewControllerDelegate This, MonoTouch.QuickLook.QLPreviewController controller, MonoTouch.QuickLook.IQLPreviewItem item, MonoTouch.CoreGraphics.CGRect contentRect);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UIImage TransitionImageForPreviewItem(class MonoTouch.QuickLook.IQLPreviewControllerDelegate This, class MonoTouch.QuickLook.QLPreviewController controller, class MonoTouch.QuickLook.IQLPreviewItem item, valuetype MonoTouch.CoreGraphics.CGRect contentRect) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.QuickLook.IQLPreviewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.QuickLook.QLPreviewController" />
          <Parameter Name="item" Type="MonoTouch.QuickLook.IQLPreviewItem" />
          <Parameter Name="contentRect" Type="MonoTouch.CoreGraphics.CGRect" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="item">To be added.</param>
          <param name="contentRect">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.QuickLook.QLPreviewControllerDelegate_Extensions" Member="M:MonoTouch.QuickLook.QLPreviewControllerDelegate_Extensions.TransitionImageForPreviewItem(MonoTouch.QuickLook.IQLPreviewControllerDelegate,MonoTouch.QuickLook.QLPreviewController,MonoTouch.QuickLook.IQLPreviewItem,MonoTouch.CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.QuickLook.IQLPreviewControllerDelegate" />
      </Targets>
      <Member MemberName="TransitionViewForPreviewItem">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIView TransitionViewForPreviewItem (this MonoTouch.QuickLook.IQLPreviewControllerDelegate This, MonoTouch.QuickLook.QLPreviewController controller, MonoTouch.QuickLook.IQLPreviewItem item);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UIView TransitionViewForPreviewItem(class MonoTouch.QuickLook.IQLPreviewControllerDelegate This, class MonoTouch.QuickLook.QLPreviewController controller, class MonoTouch.QuickLook.IQLPreviewItem item) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIView</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.QuickLook.IQLPreviewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.QuickLook.QLPreviewController" />
          <Parameter Name="item" Type="MonoTouch.QuickLook.IQLPreviewItem" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="item">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.QuickLook.QLPreviewControllerDelegate_Extensions" Member="M:MonoTouch.QuickLook.QLPreviewControllerDelegate_Extensions.TransitionViewForPreviewItem(MonoTouch.QuickLook.IQLPreviewControllerDelegate,MonoTouch.QuickLook.QLPreviewController,MonoTouch.QuickLook.IQLPreviewItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.QuickLook.IQLPreviewControllerDelegate" />
      </Targets>
      <Member MemberName="WillDismiss">
        <MemberSignature Language="C#" Value="public static void WillDismiss (this MonoTouch.QuickLook.IQLPreviewControllerDelegate This, MonoTouch.QuickLook.QLPreviewController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillDismiss(class MonoTouch.QuickLook.IQLPreviewControllerDelegate This, class MonoTouch.QuickLook.QLPreviewController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.QuickLook.IQLPreviewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.QuickLook.QLPreviewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.QuickLook.QLPreviewControllerDelegate_Extensions" Member="M:MonoTouch.QuickLook.QLPreviewControllerDelegate_Extensions.WillDismiss(MonoTouch.QuickLook.IQLPreviewControllerDelegate,MonoTouch.QuickLook.QLPreviewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSExtensionContext" />
      </Targets>
      <Member MemberName="CompleteRequest" apistyle="unified">
        <MemberSignature Language="C#" Value="public static void CompleteRequest (this MonoTouch.Foundation.NSExtensionContext This, MonoTouch.Foundation.NSUrl broadcastURL, MonoTouch.ReplayKit.RPBroadcastConfiguration broadcastConfiguration, MonoTouch.Foundation.NSDictionary&lt;MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSCoding&gt; setupInfo);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CompleteRequest(class MonoTouch.Foundation.NSExtensionContext This, class MonoTouch.Foundation.NSUrl broadcastURL, class MonoTouch.ReplayKit.RPBroadcastConfiguration broadcastConfiguration, class MonoTouch.Foundation.NSDictionary`2&lt;class MonoTouch.Foundation.NSString, class MonoTouch.Foundation.NSCoding&gt; setupInfo) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSExtensionContext" RefType="this" />
          <Parameter Name="broadcastURL" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="broadcastConfiguration" Type="MonoTouch.ReplayKit.RPBroadcastConfiguration" />
          <Parameter Name="setupInfo" Type="MonoTouch.Foundation.NSDictionary&lt;MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSCoding&gt;" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="broadcastURL">To be added.</param>
          <param name="broadcastConfiguration">To be added.</param>
          <param name="setupInfo">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ReplayKit.NSExtensionContext_RPBroadcastExtension" Member="M:MonoTouch.ReplayKit.NSExtensionContext_RPBroadcastExtension.CompleteRequest(MonoTouch.Foundation.NSExtensionContext,MonoTouch.Foundation.NSUrl,MonoTouch.ReplayKit.RPBroadcastConfiguration,MonoTouch.Foundation.NSDictionary{MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSCoding})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSExtensionContext" />
      </Targets>
      <Member MemberName="LoadBroadcastingApplicationInfo">
        <MemberSignature Language="C#" Value="public static void LoadBroadcastingApplicationInfo (this MonoTouch.Foundation.NSExtensionContext This, MonoTouch.ReplayKit.LoadBroadcastingHandler handler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadBroadcastingApplicationInfo(class MonoTouch.Foundation.NSExtensionContext This, class MonoTouch.ReplayKit.LoadBroadcastingHandler handler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSExtensionContext" RefType="this" />
          <Parameter Name="handler" Type="MonoTouch.ReplayKit.LoadBroadcastingHandler">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDLoadBroadcastingHandler))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="handler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ReplayKit.NSExtensionContext_RPBroadcastExtension" Member="M:MonoTouch.ReplayKit.NSExtensionContext_RPBroadcastExtension.LoadBroadcastingApplicationInfo(MonoTouch.Foundation.NSExtensionContext,MonoTouch.ReplayKit.LoadBroadcastingHandler)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ReplayKit.IRPPreviewViewControllerDelegate" />
      </Targets>
      <Member MemberName="DidFinish">
        <MemberSignature Language="C#" Value="public static void DidFinish (this MonoTouch.ReplayKit.IRPPreviewViewControllerDelegate This, MonoTouch.ReplayKit.RPPreviewViewController previewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinish(class MonoTouch.ReplayKit.IRPPreviewViewControllerDelegate This, class MonoTouch.ReplayKit.RPPreviewViewController previewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ReplayKit.IRPPreviewViewControllerDelegate" RefType="this" />
          <Parameter Name="previewController" Type="MonoTouch.ReplayKit.RPPreviewViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="previewController">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ReplayKit.RPPreviewViewControllerDelegate_Extensions" Member="M:MonoTouch.ReplayKit.RPPreviewViewControllerDelegate_Extensions.DidFinish(MonoTouch.ReplayKit.IRPPreviewViewControllerDelegate,MonoTouch.ReplayKit.RPPreviewViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ReplayKit.IRPPreviewViewControllerDelegate" />
      </Targets>
      <Member MemberName="DidFinish" apistyle="unified">
        <MemberSignature Language="C#" Value="public static void DidFinish (this MonoTouch.ReplayKit.IRPPreviewViewControllerDelegate This, MonoTouch.ReplayKit.RPPreviewViewController previewController, MonoTouch.Foundation.NSSet&lt;MonoTouch.Foundation.NSString&gt; activityTypes);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinish(class MonoTouch.ReplayKit.IRPPreviewViewControllerDelegate This, class MonoTouch.ReplayKit.RPPreviewViewController previewController, class MonoTouch.Foundation.NSSet`1&lt;class MonoTouch.Foundation.NSString&gt; activityTypes) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ReplayKit.IRPPreviewViewControllerDelegate" RefType="this" />
          <Parameter Name="previewController" Type="MonoTouch.ReplayKit.RPPreviewViewController" />
          <Parameter Name="activityTypes" Type="MonoTouch.Foundation.NSSet&lt;MonoTouch.Foundation.NSString&gt;" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="previewController">To be added.</param>
          <param name="activityTypes">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ReplayKit.RPPreviewViewControllerDelegate_Extensions" Member="M:MonoTouch.ReplayKit.RPPreviewViewControllerDelegate_Extensions.DidFinish(MonoTouch.ReplayKit.IRPPreviewViewControllerDelegate,MonoTouch.ReplayKit.RPPreviewViewController,MonoTouch.Foundation.NSSet{MonoTouch.Foundation.NSString})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ReplayKit.RPRecordingError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.ReplayKit.RPRecordingError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.ReplayKit.RPRecordingError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.ReplayKit.RPRecordingError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.ReplayKit.RPRecordingError value</summary>
        </Docs>
        <Link Type="MonoTouch.ReplayKit.RPRecordingErrorExtensions" Member="M:MonoTouch.ReplayKit.RPRecordingErrorExtensions.GetDomain(MonoTouch.ReplayKit.RPRecordingError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ReplayKit.IRPScreenRecorderDelegate" />
      </Targets>
      <Member MemberName="DidChangeAvailability">
        <MemberSignature Language="C#" Value="public static void DidChangeAvailability (this MonoTouch.ReplayKit.IRPScreenRecorderDelegate This, MonoTouch.ReplayKit.RPScreenRecorder screenRecorder);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidChangeAvailability(class MonoTouch.ReplayKit.IRPScreenRecorderDelegate This, class MonoTouch.ReplayKit.RPScreenRecorder screenRecorder) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ReplayKit.IRPScreenRecorderDelegate" RefType="this" />
          <Parameter Name="screenRecorder" Type="MonoTouch.ReplayKit.RPScreenRecorder" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="screenRecorder">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ReplayKit.RPScreenRecorderDelegate_Extensions" Member="M:MonoTouch.ReplayKit.RPScreenRecorderDelegate_Extensions.DidChangeAvailability(MonoTouch.ReplayKit.IRPScreenRecorderDelegate,MonoTouch.ReplayKit.RPScreenRecorder)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.ReplayKit.IRPScreenRecorderDelegate" />
      </Targets>
      <Member MemberName="DidStopRecording">
        <MemberSignature Language="C#" Value="public static void DidStopRecording (this MonoTouch.ReplayKit.IRPScreenRecorderDelegate This, MonoTouch.ReplayKit.RPScreenRecorder screenRecorder, MonoTouch.Foundation.NSError error, MonoTouch.ReplayKit.RPPreviewViewController previewViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidStopRecording(class MonoTouch.ReplayKit.IRPScreenRecorderDelegate This, class MonoTouch.ReplayKit.RPScreenRecorder screenRecorder, class MonoTouch.Foundation.NSError error, class MonoTouch.ReplayKit.RPPreviewViewController previewViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.ReplayKit.IRPScreenRecorderDelegate" RefType="this" />
          <Parameter Name="screenRecorder" Type="MonoTouch.ReplayKit.RPScreenRecorder" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
          <Parameter Name="previewViewController" Type="MonoTouch.ReplayKit.RPPreviewViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="screenRecorder">To be added.</param>
          <param name="error">To be added.</param>
          <param name="previewViewController">To be added.This parameter can be .</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.ReplayKit.RPScreenRecorderDelegate_Extensions" Member="M:MonoTouch.ReplayKit.RPScreenRecorderDelegate_Extensions.DidStopRecording(MonoTouch.ReplayKit.IRPScreenRecorderDelegate,MonoTouch.ReplayKit.RPScreenRecorder,MonoTouch.Foundation.NSError,MonoTouch.ReplayKit.RPPreviewViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SafariServices.SFContentBlockerErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.SafariServices.SFContentBlockerErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.SafariServices.SFContentBlockerErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.SafariServices.SFContentBlockerErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.SafariServices.SFContentBlockerErrorCode value</summary>
        </Docs>
        <Link Type="MonoTouch.SafariServices.SFContentBlockerErrorCodeExtensions" Member="M:MonoTouch.SafariServices.SFContentBlockerErrorCodeExtensions.GetDomain(MonoTouch.SafariServices.SFContentBlockerErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SafariServices.ISFSafariViewControllerDelegate" />
      </Targets>
      <Member MemberName="DidCompleteInitialLoad">
        <MemberSignature Language="C#" Value="public static void DidCompleteInitialLoad (this MonoTouch.SafariServices.ISFSafariViewControllerDelegate This, MonoTouch.SafariServices.SFSafariViewController controller, bool didLoadSuccessfully);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidCompleteInitialLoad(class MonoTouch.SafariServices.ISFSafariViewControllerDelegate This, class MonoTouch.SafariServices.SFSafariViewController controller, bool didLoadSuccessfully) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SafariServices.ISFSafariViewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.SafariServices.SFSafariViewController" />
          <Parameter Name="didLoadSuccessfully" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="didLoadSuccessfully">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SafariServices.SFSafariViewControllerDelegate_Extensions" Member="M:MonoTouch.SafariServices.SFSafariViewControllerDelegate_Extensions.DidCompleteInitialLoad(MonoTouch.SafariServices.ISFSafariViewControllerDelegate,MonoTouch.SafariServices.SFSafariViewController,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SafariServices.ISFSafariViewControllerDelegate" />
      </Targets>
      <Member MemberName="DidFinish">
        <MemberSignature Language="C#" Value="public static void DidFinish (this MonoTouch.SafariServices.ISFSafariViewControllerDelegate This, MonoTouch.SafariServices.SFSafariViewController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinish(class MonoTouch.SafariServices.ISFSafariViewControllerDelegate This, class MonoTouch.SafariServices.SFSafariViewController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SafariServices.ISFSafariViewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.SafariServices.SFSafariViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SafariServices.SFSafariViewControllerDelegate_Extensions" Member="M:MonoTouch.SafariServices.SFSafariViewControllerDelegate_Extensions.DidFinish(MonoTouch.SafariServices.ISFSafariViewControllerDelegate,MonoTouch.SafariServices.SFSafariViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SafariServices.ISFSafariViewControllerDelegate" />
      </Targets>
      <Member MemberName="GetActivityItems">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIActivity[] GetActivityItems (this MonoTouch.SafariServices.ISFSafariViewControllerDelegate This, MonoTouch.SafariServices.SFSafariViewController controller, MonoTouch.Foundation.NSUrl url, string title);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UIActivity[] GetActivityItems(class MonoTouch.SafariServices.ISFSafariViewControllerDelegate This, class MonoTouch.SafariServices.SFSafariViewController controller, class MonoTouch.Foundation.NSUrl url, string title) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIActivity[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SafariServices.ISFSafariViewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.SafariServices.SFSafariViewController" />
          <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="title" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="url">To be added.</param>
          <param name="title">To be added.This parameter can be .</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SafariServices.SFSafariViewControllerDelegate_Extensions" Member="M:MonoTouch.SafariServices.SFSafariViewControllerDelegate_Extensions.GetActivityItems(MonoTouch.SafariServices.ISFSafariViewControllerDelegate,MonoTouch.SafariServices.SFSafariViewController,MonoTouch.Foundation.NSUrl,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNActionable" />
      </Targets>
      <Member MemberName="GetActionKeys">
        <MemberSignature Language="C#" Value="public static string[] GetActionKeys (this MonoTouch.SceneKit.ISCNActionable This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetActionKeys(class MonoTouch.SceneKit.ISCNActionable This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNActionable" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNActionable_Extensions" Member="M:MonoTouch.SceneKit.SCNActionable_Extensions.GetActionKeys(MonoTouch.SceneKit.ISCNActionable)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.SCNErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.SceneKit.SCNErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.SceneKit.SCNErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.SceneKit.SCNErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.SceneKit.SCNErrorCode value</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNErrorCodeExtensions" Member="M:MonoTouch.SceneKit.SCNErrorCodeExtensions.GetDomain(MonoTouch.SceneKit.SCNErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNNodeRendererDelegate" />
      </Targets>
      <Member MemberName="Render">
        <MemberSignature Language="C#" Value="public static void Render (this MonoTouch.SceneKit.ISCNNodeRendererDelegate This, MonoTouch.SceneKit.SCNNode node, MonoTouch.SceneKit.SCNRenderer renderer, MonoTouch.Foundation.NSDictionary arguments);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Render(class MonoTouch.SceneKit.ISCNNodeRendererDelegate This, class MonoTouch.SceneKit.SCNNode node, class MonoTouch.SceneKit.SCNRenderer renderer, class MonoTouch.Foundation.NSDictionary arguments) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNNodeRendererDelegate" RefType="this" />
          <Parameter Name="node" Type="MonoTouch.SceneKit.SCNNode" />
          <Parameter Name="renderer" Type="MonoTouch.SceneKit.SCNRenderer" />
          <Parameter Name="arguments" Type="MonoTouch.Foundation.NSDictionary" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="node">To be added.</param>
          <param name="renderer">To be added.</param>
          <param name="arguments">To be added.This parameter can be .</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNNodeRendererDelegate_Extensions" Member="M:MonoTouch.SceneKit.SCNNodeRendererDelegate_Extensions.Render(MonoTouch.SceneKit.ISCNNodeRendererDelegate,MonoTouch.SceneKit.SCNNode,MonoTouch.SceneKit.SCNRenderer,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNPhysicsContactDelegate" />
      </Targets>
      <Member MemberName="DidBeginContact">
        <MemberSignature Language="C#" Value="public static void DidBeginContact (this MonoTouch.SceneKit.ISCNPhysicsContactDelegate This, MonoTouch.SceneKit.SCNPhysicsWorld world, MonoTouch.SceneKit.SCNPhysicsContact contact);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidBeginContact(class MonoTouch.SceneKit.ISCNPhysicsContactDelegate This, class MonoTouch.SceneKit.SCNPhysicsWorld world, class MonoTouch.SceneKit.SCNPhysicsContact contact) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNPhysicsContactDelegate" RefType="this" />
          <Parameter Name="world" Type="MonoTouch.SceneKit.SCNPhysicsWorld" />
          <Parameter Name="contact" Type="MonoTouch.SceneKit.SCNPhysicsContact" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="world">To be added.</param>
          <param name="contact">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNPhysicsContactDelegate_Extensions" Member="M:MonoTouch.SceneKit.SCNPhysicsContactDelegate_Extensions.DidBeginContact(MonoTouch.SceneKit.ISCNPhysicsContactDelegate,MonoTouch.SceneKit.SCNPhysicsWorld,MonoTouch.SceneKit.SCNPhysicsContact)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNPhysicsContactDelegate" />
      </Targets>
      <Member MemberName="DidEndContact">
        <MemberSignature Language="C#" Value="public static void DidEndContact (this MonoTouch.SceneKit.ISCNPhysicsContactDelegate This, MonoTouch.SceneKit.SCNPhysicsWorld world, MonoTouch.SceneKit.SCNPhysicsContact contact);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidEndContact(class MonoTouch.SceneKit.ISCNPhysicsContactDelegate This, class MonoTouch.SceneKit.SCNPhysicsWorld world, class MonoTouch.SceneKit.SCNPhysicsContact contact) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNPhysicsContactDelegate" RefType="this" />
          <Parameter Name="world" Type="MonoTouch.SceneKit.SCNPhysicsWorld" />
          <Parameter Name="contact" Type="MonoTouch.SceneKit.SCNPhysicsContact" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="world">To be added.</param>
          <param name="contact">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNPhysicsContactDelegate_Extensions" Member="M:MonoTouch.SceneKit.SCNPhysicsContactDelegate_Extensions.DidEndContact(MonoTouch.SceneKit.ISCNPhysicsContactDelegate,MonoTouch.SceneKit.SCNPhysicsWorld,MonoTouch.SceneKit.SCNPhysicsContact)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNPhysicsContactDelegate" />
      </Targets>
      <Member MemberName="DidUpdateContact">
        <MemberSignature Language="C#" Value="public static void DidUpdateContact (this MonoTouch.SceneKit.ISCNPhysicsContactDelegate This, MonoTouch.SceneKit.SCNPhysicsWorld world, MonoTouch.SceneKit.SCNPhysicsContact contact);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateContact(class MonoTouch.SceneKit.ISCNPhysicsContactDelegate This, class MonoTouch.SceneKit.SCNPhysicsWorld world, class MonoTouch.SceneKit.SCNPhysicsContact contact) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNPhysicsContactDelegate" RefType="this" />
          <Parameter Name="world" Type="MonoTouch.SceneKit.SCNPhysicsWorld" />
          <Parameter Name="contact" Type="MonoTouch.SceneKit.SCNPhysicsContact" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="world">To be added.</param>
          <param name="contact">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNPhysicsContactDelegate_Extensions" Member="M:MonoTouch.SceneKit.SCNPhysicsContactDelegate_Extensions.DidUpdateContact(MonoTouch.SceneKit.ISCNPhysicsContactDelegate,MonoTouch.SceneKit.SCNPhysicsWorld,MonoTouch.SceneKit.SCNPhysicsContact)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNProgramDelegate" />
      </Targets>
      <Member MemberName="HandleError">
        <MemberSignature Language="C#" Value="public static void HandleError (this MonoTouch.SceneKit.ISCNProgramDelegate This, MonoTouch.SceneKit.SCNProgram program, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleError(class MonoTouch.SceneKit.ISCNProgramDelegate This, class MonoTouch.SceneKit.SCNProgram program, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNProgramDelegate" RefType="this" />
          <Parameter Name="program" Type="MonoTouch.SceneKit.SCNProgram" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="program">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNProgramDelegate_Extensions" Member="M:MonoTouch.SceneKit.SCNProgramDelegate_Extensions.HandleError(MonoTouch.SceneKit.ISCNProgramDelegate,MonoTouch.SceneKit.SCNProgram,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneExportDelegate" />
      </Targets>
      <Member MemberName="WriteImage">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSUrl WriteImage (this MonoTouch.SceneKit.ISCNSceneExportDelegate This, MonoTouch.UIKit.UIImage image, MonoTouch.Foundation.NSUrl documentURL, MonoTouch.Foundation.NSUrl originalImageURL);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSUrl WriteImage(class MonoTouch.SceneKit.ISCNSceneExportDelegate This, class MonoTouch.UIKit.UIImage image, class MonoTouch.Foundation.NSUrl documentURL, class MonoTouch.Foundation.NSUrl originalImageURL) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSUrl</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneExportDelegate" RefType="this" />
          <Parameter Name="image" Type="MonoTouch.UIKit.UIImage" />
          <Parameter Name="documentURL" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="originalImageURL" Type="MonoTouch.Foundation.NSUrl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="image">To be added.</param>
          <param name="documentURL">To be added.</param>
          <param name="originalImageURL">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneExportDelegate_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneExportDelegate_Extensions.WriteImage(MonoTouch.SceneKit.ISCNSceneExportDelegate,MonoTouch.UIKit.UIImage,MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSUrl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRenderer" />
      </Targets>
      <Member MemberName="GetAudioEngine">
        <MemberSignature Language="C#" Value="public static MonoTouch.AVFoundation.AVAudioEngine GetAudioEngine (this MonoTouch.SceneKit.ISCNSceneRenderer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.AVFoundation.AVAudioEngine GetAudioEngine(class MonoTouch.SceneKit.ISCNSceneRenderer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.AVFoundation.AVAudioEngine</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRenderer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRenderer_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRenderer_Extensions.GetAudioEngine(MonoTouch.SceneKit.ISCNSceneRenderer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRenderer" />
      </Targets>
      <Member MemberName="GetAudioEnvironmentNode">
        <MemberSignature Language="C#" Value="public static MonoTouch.AVFoundation.AVAudioEnvironmentNode GetAudioEnvironmentNode (this MonoTouch.SceneKit.ISCNSceneRenderer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.AVFoundation.AVAudioEnvironmentNode GetAudioEnvironmentNode(class MonoTouch.SceneKit.ISCNSceneRenderer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.AVFoundation.AVAudioEnvironmentNode</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRenderer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRenderer_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRenderer_Extensions.GetAudioEnvironmentNode(MonoTouch.SceneKit.ISCNSceneRenderer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRenderer" />
      </Targets>
      <Member MemberName="GetAudioListener">
        <MemberSignature Language="C#" Value="public static MonoTouch.SceneKit.SCNNode GetAudioListener (this MonoTouch.SceneKit.ISCNSceneRenderer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.SceneKit.SCNNode GetAudioListener(class MonoTouch.SceneKit.ISCNSceneRenderer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.SceneKit.SCNNode</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRenderer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRenderer_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRenderer_Extensions.GetAudioListener(MonoTouch.SceneKit.ISCNSceneRenderer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRenderer" />
      </Targets>
      <Member MemberName="GetColorPixelFormat">
        <MemberSignature Language="C#" Value="public static MonoTouch.Metal.MTLPixelFormat GetColorPixelFormat (this MonoTouch.SceneKit.ISCNSceneRenderer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.Metal.MTLPixelFormat GetColorPixelFormat(class MonoTouch.SceneKit.ISCNSceneRenderer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.MTLPixelFormat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRenderer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRenderer_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRenderer_Extensions.GetColorPixelFormat(MonoTouch.SceneKit.ISCNSceneRenderer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRenderer" />
      </Targets>
      <Member MemberName="GetCommandQueue">
        <MemberSignature Language="C#" Value="public static MonoTouch.Metal.IMTLCommandQueue GetCommandQueue (this MonoTouch.SceneKit.ISCNSceneRenderer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Metal.IMTLCommandQueue GetCommandQueue(class MonoTouch.SceneKit.ISCNSceneRenderer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.IMTLCommandQueue</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRenderer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRenderer_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRenderer_Extensions.GetCommandQueue(MonoTouch.SceneKit.ISCNSceneRenderer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRenderer" />
      </Targets>
      <Member MemberName="GetCurrentRenderCommandEncoder">
        <MemberSignature Language="C#" Value="public static MonoTouch.Metal.IMTLRenderCommandEncoder GetCurrentRenderCommandEncoder (this MonoTouch.SceneKit.ISCNSceneRenderer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Metal.IMTLRenderCommandEncoder GetCurrentRenderCommandEncoder(class MonoTouch.SceneKit.ISCNSceneRenderer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.IMTLRenderCommandEncoder</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRenderer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRenderer_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRenderer_Extensions.GetCurrentRenderCommandEncoder(MonoTouch.SceneKit.ISCNSceneRenderer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRenderer" />
      </Targets>
      <Member MemberName="GetDebugOptions">
        <MemberSignature Language="C#" Value="public static MonoTouch.SceneKit.SCNDebugOptions GetDebugOptions (this MonoTouch.SceneKit.ISCNSceneRenderer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.SceneKit.SCNDebugOptions GetDebugOptions(class MonoTouch.SceneKit.ISCNSceneRenderer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.SceneKit.SCNDebugOptions</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRenderer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRenderer_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRenderer_Extensions.GetDebugOptions(MonoTouch.SceneKit.ISCNSceneRenderer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRenderer" />
      </Targets>
      <Member MemberName="GetDepthPixelFormat">
        <MemberSignature Language="C#" Value="public static MonoTouch.Metal.MTLPixelFormat GetDepthPixelFormat (this MonoTouch.SceneKit.ISCNSceneRenderer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.Metal.MTLPixelFormat GetDepthPixelFormat(class MonoTouch.SceneKit.ISCNSceneRenderer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.MTLPixelFormat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRenderer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRenderer_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRenderer_Extensions.GetDepthPixelFormat(MonoTouch.SceneKit.ISCNSceneRenderer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRenderer" />
      </Targets>
      <Member MemberName="GetDevice">
        <MemberSignature Language="C#" Value="public static MonoTouch.Metal.IMTLDevice GetDevice (this MonoTouch.SceneKit.ISCNSceneRenderer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Metal.IMTLDevice GetDevice(class MonoTouch.SceneKit.ISCNSceneRenderer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.IMTLDevice</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRenderer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRenderer_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRenderer_Extensions.GetDevice(MonoTouch.SceneKit.ISCNSceneRenderer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRenderer" />
      </Targets>
      <Member MemberName="GetNodesInsideFrustum">
        <MemberSignature Language="C#" Value="public static MonoTouch.SceneKit.SCNNode[] GetNodesInsideFrustum (this MonoTouch.SceneKit.ISCNSceneRenderer This, MonoTouch.SceneKit.SCNNode pointOfView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.SceneKit.SCNNode[] GetNodesInsideFrustum(class MonoTouch.SceneKit.ISCNSceneRenderer This, class MonoTouch.SceneKit.SCNNode pointOfView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.SceneKit.SCNNode[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRenderer" RefType="this" />
          <Parameter Name="pointOfView" Type="MonoTouch.SceneKit.SCNNode" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pointOfView">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRenderer_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRenderer_Extensions.GetNodesInsideFrustum(MonoTouch.SceneKit.ISCNSceneRenderer,MonoTouch.SceneKit.SCNNode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRenderer" />
      </Targets>
      <Member MemberName="GetRenderingApi">
        <MemberSignature Language="C#" Value="public static MonoTouch.SceneKit.SCNRenderingApi GetRenderingApi (this MonoTouch.SceneKit.ISCNSceneRenderer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.SceneKit.SCNRenderingApi GetRenderingApi(class MonoTouch.SceneKit.ISCNSceneRenderer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.SceneKit.SCNRenderingApi</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRenderer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRenderer_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRenderer_Extensions.GetRenderingApi(MonoTouch.SceneKit.ISCNSceneRenderer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRenderer" />
      </Targets>
      <Member MemberName="GetStencilPixelFormat">
        <MemberSignature Language="C#" Value="public static MonoTouch.Metal.MTLPixelFormat GetStencilPixelFormat (this MonoTouch.SceneKit.ISCNSceneRenderer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.Metal.MTLPixelFormat GetStencilPixelFormat(class MonoTouch.SceneKit.ISCNSceneRenderer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Metal.MTLPixelFormat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRenderer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRenderer_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRenderer_Extensions.GetStencilPixelFormat(MonoTouch.SceneKit.ISCNSceneRenderer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRenderer" />
      </Targets>
      <Member MemberName="PresentScene">
        <MemberSignature Language="C#" Value="public static void PresentScene (this MonoTouch.SceneKit.ISCNSceneRenderer This, MonoTouch.SceneKit.SCNScene scene, MonoTouch.SpriteKit.SKTransition transition, MonoTouch.SceneKit.SCNNode pointOfView, Action completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PresentScene(class MonoTouch.SceneKit.ISCNSceneRenderer This, class MonoTouch.SceneKit.SCNScene scene, class MonoTouch.SpriteKit.SKTransition transition, class MonoTouch.SceneKit.SCNNode pointOfView, class System.Action completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRenderer" RefType="this" />
          <Parameter Name="scene" Type="MonoTouch.SceneKit.SCNScene" />
          <Parameter Name="transition" Type="MonoTouch.SpriteKit.SKTransition" />
          <Parameter Name="pointOfView" Type="MonoTouch.SceneKit.SCNNode" />
          <Parameter Name="completionHandler" Type="System.Action">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDAction))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scene">To be added.</param>
          <param name="transition">To be added.</param>
          <param name="pointOfView">To be added.This parameter can be .</param>
          <param name="completionHandler">To be added.This parameter can be .</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRenderer_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRenderer_Extensions.PresentScene(MonoTouch.SceneKit.ISCNSceneRenderer,MonoTouch.SceneKit.SCNScene,MonoTouch.SpriteKit.SKTransition,MonoTouch.SceneKit.SCNNode,System.Action)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRenderer" />
      </Targets>
      <Member MemberName="SetAudioListener">
        <MemberSignature Language="C#" Value="public static void SetAudioListener (this MonoTouch.SceneKit.ISCNSceneRenderer This, MonoTouch.SceneKit.SCNNode value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAudioListener(class MonoTouch.SceneKit.ISCNSceneRenderer This, class MonoTouch.SceneKit.SCNNode value) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRenderer" RefType="this" />
          <Parameter Name="value" Type="MonoTouch.SceneKit.SCNNode" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="value">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRenderer_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRenderer_Extensions.SetAudioListener(MonoTouch.SceneKit.ISCNSceneRenderer,MonoTouch.SceneKit.SCNNode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRenderer" />
      </Targets>
      <Member MemberName="SetDebugOptions">
        <MemberSignature Language="C#" Value="public static void SetDebugOptions (this MonoTouch.SceneKit.ISCNSceneRenderer This, MonoTouch.SceneKit.SCNDebugOptions value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDebugOptions(class MonoTouch.SceneKit.ISCNSceneRenderer This, valuetype MonoTouch.SceneKit.SCNDebugOptions value) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRenderer" RefType="this" />
          <Parameter Name="value" Type="MonoTouch.SceneKit.SCNDebugOptions" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="value">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRenderer_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRenderer_Extensions.SetDebugOptions(MonoTouch.SceneKit.ISCNSceneRenderer,MonoTouch.SceneKit.SCNDebugOptions)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRendererDelegate" />
      </Targets>
      <Member MemberName="DidApplyAnimations" apistyle="unified">
        <MemberSignature Language="C#" Value="public static void DidApplyAnimations (this MonoTouch.SceneKit.ISCNSceneRendererDelegate This, MonoTouch.SceneKit.ISCNSceneRenderer renderer, double timeInSeconds);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidApplyAnimations(class MonoTouch.SceneKit.ISCNSceneRendererDelegate This, class MonoTouch.SceneKit.ISCNSceneRenderer renderer, float64 timeInSeconds) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRendererDelegate" RefType="this" />
          <Parameter Name="renderer" Type="MonoTouch.SceneKit.ISCNSceneRenderer" />
          <Parameter Name="timeInSeconds" Type="System.Double" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="renderer">To be added.</param>
          <param name="timeInSeconds">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRendererDelegate_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRendererDelegate_Extensions.DidApplyAnimations(MonoTouch.SceneKit.ISCNSceneRendererDelegate,MonoTouch.SceneKit.ISCNSceneRenderer,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRendererDelegate" />
      </Targets>
      <Member MemberName="DidRenderScene" apistyle="unified">
        <MemberSignature Language="C#" Value="public static void DidRenderScene (this MonoTouch.SceneKit.ISCNSceneRendererDelegate This, MonoTouch.SceneKit.ISCNSceneRenderer renderer, MonoTouch.SceneKit.SCNScene scene, double timeInSeconds);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRenderScene(class MonoTouch.SceneKit.ISCNSceneRendererDelegate This, class MonoTouch.SceneKit.ISCNSceneRenderer renderer, class MonoTouch.SceneKit.SCNScene scene, float64 timeInSeconds) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRendererDelegate" RefType="this" />
          <Parameter Name="renderer" Type="MonoTouch.SceneKit.ISCNSceneRenderer" />
          <Parameter Name="scene" Type="MonoTouch.SceneKit.SCNScene" />
          <Parameter Name="timeInSeconds" Type="System.Double" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="renderer">To be added.</param>
          <param name="scene">To be added.</param>
          <param name="timeInSeconds">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRendererDelegate_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRendererDelegate_Extensions.DidRenderScene(MonoTouch.SceneKit.ISCNSceneRendererDelegate,MonoTouch.SceneKit.ISCNSceneRenderer,MonoTouch.SceneKit.SCNScene,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRendererDelegate" />
      </Targets>
      <Member MemberName="DidSimulatePhysics" apistyle="unified">
        <MemberSignature Language="C#" Value="public static void DidSimulatePhysics (this MonoTouch.SceneKit.ISCNSceneRendererDelegate This, MonoTouch.SceneKit.ISCNSceneRenderer renderer, double timeInSeconds);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSimulatePhysics(class MonoTouch.SceneKit.ISCNSceneRendererDelegate This, class MonoTouch.SceneKit.ISCNSceneRenderer renderer, float64 timeInSeconds) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRendererDelegate" RefType="this" />
          <Parameter Name="renderer" Type="MonoTouch.SceneKit.ISCNSceneRenderer" />
          <Parameter Name="timeInSeconds" Type="System.Double" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="renderer">To be added.</param>
          <param name="timeInSeconds">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRendererDelegate_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRendererDelegate_Extensions.DidSimulatePhysics(MonoTouch.SceneKit.ISCNSceneRendererDelegate,MonoTouch.SceneKit.ISCNSceneRenderer,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRendererDelegate" />
      </Targets>
      <Member MemberName="Update" apistyle="unified">
        <MemberSignature Language="C#" Value="public static void Update (this MonoTouch.SceneKit.ISCNSceneRendererDelegate This, MonoTouch.SceneKit.ISCNSceneRenderer renderer, double timeInSeconds);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Update(class MonoTouch.SceneKit.ISCNSceneRendererDelegate This, class MonoTouch.SceneKit.ISCNSceneRenderer renderer, float64 timeInSeconds) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRendererDelegate" RefType="this" />
          <Parameter Name="renderer" Type="MonoTouch.SceneKit.ISCNSceneRenderer" />
          <Parameter Name="timeInSeconds" Type="System.Double" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="renderer">To be added.</param>
          <param name="timeInSeconds">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRendererDelegate_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRendererDelegate_Extensions.Update(MonoTouch.SceneKit.ISCNSceneRendererDelegate,MonoTouch.SceneKit.ISCNSceneRenderer,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNSceneRendererDelegate" />
      </Targets>
      <Member MemberName="WillRenderScene" apistyle="unified">
        <MemberSignature Language="C#" Value="public static void WillRenderScene (this MonoTouch.SceneKit.ISCNSceneRendererDelegate This, MonoTouch.SceneKit.ISCNSceneRenderer renderer, MonoTouch.SceneKit.SCNScene scene, double timeInSeconds);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillRenderScene(class MonoTouch.SceneKit.ISCNSceneRendererDelegate This, class MonoTouch.SceneKit.ISCNSceneRenderer renderer, class MonoTouch.SceneKit.SCNScene scene, float64 timeInSeconds) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNSceneRendererDelegate" RefType="this" />
          <Parameter Name="renderer" Type="MonoTouch.SceneKit.ISCNSceneRenderer" />
          <Parameter Name="scene" Type="MonoTouch.SceneKit.SCNScene" />
          <Parameter Name="timeInSeconds" Type="System.Double" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="renderer">To be added.</param>
          <param name="scene">To be added.</param>
          <param name="timeInSeconds">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNSceneRendererDelegate_Extensions" Member="M:MonoTouch.SceneKit.SCNSceneRendererDelegate_Extensions.WillRenderScene(MonoTouch.SceneKit.ISCNSceneRendererDelegate,MonoTouch.SceneKit.ISCNSceneRenderer,MonoTouch.SceneKit.SCNScene,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNShadable" />
      </Targets>
      <Member MemberName="GetProgram">
        <MemberSignature Language="C#" Value="public static MonoTouch.SceneKit.SCNProgram GetProgram (this MonoTouch.SceneKit.ISCNShadable This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.SceneKit.SCNProgram GetProgram(class MonoTouch.SceneKit.ISCNShadable This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.SceneKit.SCNProgram</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNShadable" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNShadable_Extensions" Member="M:MonoTouch.SceneKit.SCNShadable_Extensions.GetProgram(MonoTouch.SceneKit.ISCNShadable)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNShadable" />
      </Targets>
      <Member MemberName="GetWeakShaderModifiers">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSDictionary GetWeakShaderModifiers (this MonoTouch.SceneKit.ISCNShadable This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSDictionary GetWeakShaderModifiers(class MonoTouch.SceneKit.ISCNShadable This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSDictionary</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNShadable" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNShadable_Extensions" Member="M:MonoTouch.SceneKit.SCNShadable_Extensions.GetWeakShaderModifiers(MonoTouch.SceneKit.ISCNShadable)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNShadable" />
      </Targets>
      <Member MemberName="HandleBinding">
        <MemberSignature Language="C#" Value="public static void HandleBinding (this MonoTouch.SceneKit.ISCNShadable This, string symbol, MonoTouch.SceneKit.SCNBindingHandler handler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleBinding(class MonoTouch.SceneKit.ISCNShadable This, string symbol, class MonoTouch.SceneKit.SCNBindingHandler handler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNShadable" RefType="this" />
          <Parameter Name="symbol" Type="System.String" />
          <Parameter Name="handler" Type="MonoTouch.SceneKit.SCNBindingHandler">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDSCNBindingHandler))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="symbol">To be added.</param>
          <param name="handler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNShadable_Extensions" Member="M:MonoTouch.SceneKit.SCNShadable_Extensions.HandleBinding(MonoTouch.SceneKit.ISCNShadable,System.String,MonoTouch.SceneKit.SCNBindingHandler)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNShadable" />
      </Targets>
      <Member MemberName="HandleUnbinding">
        <MemberSignature Language="C#" Value="public static void HandleUnbinding (this MonoTouch.SceneKit.ISCNShadable This, string symbol, MonoTouch.SceneKit.SCNBindingHandler handler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleUnbinding(class MonoTouch.SceneKit.ISCNShadable This, string symbol, class MonoTouch.SceneKit.SCNBindingHandler handler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNShadable" RefType="this" />
          <Parameter Name="symbol" Type="System.String" />
          <Parameter Name="handler" Type="MonoTouch.SceneKit.SCNBindingHandler">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDSCNBindingHandler))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="symbol">To be added.</param>
          <param name="handler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNShadable_Extensions" Member="M:MonoTouch.SceneKit.SCNShadable_Extensions.HandleUnbinding(MonoTouch.SceneKit.ISCNShadable,System.String,MonoTouch.SceneKit.SCNBindingHandler)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNShadable" />
      </Targets>
      <Member MemberName="SetProgram">
        <MemberSignature Language="C#" Value="public static void SetProgram (this MonoTouch.SceneKit.ISCNShadable This, MonoTouch.SceneKit.SCNProgram value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetProgram(class MonoTouch.SceneKit.ISCNShadable This, class MonoTouch.SceneKit.SCNProgram value) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNShadable" RefType="this" />
          <Parameter Name="value" Type="MonoTouch.SceneKit.SCNProgram" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="value">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNShadable_Extensions" Member="M:MonoTouch.SceneKit.SCNShadable_Extensions.SetProgram(MonoTouch.SceneKit.ISCNShadable,MonoTouch.SceneKit.SCNProgram)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SceneKit.ISCNShadable" />
      </Targets>
      <Member MemberName="SetWeakShaderModifiers">
        <MemberSignature Language="C#" Value="public static void SetWeakShaderModifiers (this MonoTouch.SceneKit.ISCNShadable This, MonoTouch.Foundation.NSDictionary value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetWeakShaderModifiers(class MonoTouch.SceneKit.ISCNShadable This, class MonoTouch.Foundation.NSDictionary value) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SceneKit.ISCNShadable" RefType="this" />
          <Parameter Name="value" Type="MonoTouch.Foundation.NSDictionary" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="value">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.SceneKit.SCNShadable_Extensions" Member="M:MonoTouch.SceneKit.SCNShadable_Extensions.SetWeakShaderModifiers(MonoTouch.SceneKit.ISCNShadable,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Security.SecAuthenticationUI" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetConstant (this MonoTouch.Security.SecAuthenticationUI self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetConstant(valuetype MonoTouch.Security.SecAuthenticationUI self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.Security.SecAuthenticationUI" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Security.SecAuthenticationUIExtensions" Member="M:MonoTouch.Security.SecAuthenticationUIExtensions.GetConstant(MonoTouch.Security.SecAuthenticationUI)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Security.SecTokenID" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetConstant (this MonoTouch.Security.SecTokenID self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetConstant(valuetype MonoTouch.Security.SecTokenID self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.Security.SecTokenID" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Security.SecTokenIDExtensions" Member="M:MonoTouch.Security.SecTokenIDExtensions.GetConstant(MonoTouch.Security.SecTokenID)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate" />
      </Targets>
      <Member MemberName="DidDetectSpeech">
        <MemberSignature Language="C#" Value="public static void DidDetectSpeech (this MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate This, MonoTouch.Speech.SFSpeechRecognitionTask task);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDetectSpeech(class MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate This, class MonoTouch.Speech.SFSpeechRecognitionTask task) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate" RefType="this" />
          <Parameter Name="task" Type="MonoTouch.Speech.SFSpeechRecognitionTask" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="task">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Speech.SFSpeechRecognitionTaskDelegate_Extensions" Member="M:MonoTouch.Speech.SFSpeechRecognitionTaskDelegate_Extensions.DidDetectSpeech(MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate,MonoTouch.Speech.SFSpeechRecognitionTask)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate" />
      </Targets>
      <Member MemberName="DidFinishRecognition">
        <MemberSignature Language="C#" Value="public static void DidFinishRecognition (this MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate This, MonoTouch.Speech.SFSpeechRecognitionTask task, MonoTouch.Speech.SFSpeechRecognitionResult recognitionResult);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinishRecognition(class MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate This, class MonoTouch.Speech.SFSpeechRecognitionTask task, class MonoTouch.Speech.SFSpeechRecognitionResult recognitionResult) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate" RefType="this" />
          <Parameter Name="task" Type="MonoTouch.Speech.SFSpeechRecognitionTask" />
          <Parameter Name="recognitionResult" Type="MonoTouch.Speech.SFSpeechRecognitionResult" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="task">To be added.</param>
          <param name="recognitionResult">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Speech.SFSpeechRecognitionTaskDelegate_Extensions" Member="M:MonoTouch.Speech.SFSpeechRecognitionTaskDelegate_Extensions.DidFinishRecognition(MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate,MonoTouch.Speech.SFSpeechRecognitionTask,MonoTouch.Speech.SFSpeechRecognitionResult)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate" />
      </Targets>
      <Member MemberName="DidFinishSuccessfully">
        <MemberSignature Language="C#" Value="public static void DidFinishSuccessfully (this MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate This, MonoTouch.Speech.SFSpeechRecognitionTask task, bool successfully);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinishSuccessfully(class MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate This, class MonoTouch.Speech.SFSpeechRecognitionTask task, bool successfully) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate" RefType="this" />
          <Parameter Name="task" Type="MonoTouch.Speech.SFSpeechRecognitionTask" />
          <Parameter Name="successfully" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="task">To be added.</param>
          <param name="successfully">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Speech.SFSpeechRecognitionTaskDelegate_Extensions" Member="M:MonoTouch.Speech.SFSpeechRecognitionTaskDelegate_Extensions.DidFinishSuccessfully(MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate,MonoTouch.Speech.SFSpeechRecognitionTask,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate" />
      </Targets>
      <Member MemberName="DidHypothesizeTranscription">
        <MemberSignature Language="C#" Value="public static void DidHypothesizeTranscription (this MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate This, MonoTouch.Speech.SFSpeechRecognitionTask task, MonoTouch.Speech.SFTranscription transcription);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidHypothesizeTranscription(class MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate This, class MonoTouch.Speech.SFSpeechRecognitionTask task, class MonoTouch.Speech.SFTranscription transcription) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate" RefType="this" />
          <Parameter Name="task" Type="MonoTouch.Speech.SFSpeechRecognitionTask" />
          <Parameter Name="transcription" Type="MonoTouch.Speech.SFTranscription" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="task">To be added.</param>
          <param name="transcription">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Speech.SFSpeechRecognitionTaskDelegate_Extensions" Member="M:MonoTouch.Speech.SFSpeechRecognitionTaskDelegate_Extensions.DidHypothesizeTranscription(MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate,MonoTouch.Speech.SFSpeechRecognitionTask,MonoTouch.Speech.SFTranscription)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate" />
      </Targets>
      <Member MemberName="DidRecordAudioPcmBuffer">
        <MemberSignature Language="C#" Value="public static void DidRecordAudioPcmBuffer (this MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate This, MonoTouch.Speech.SFSpeechRecognitionTask task, MonoTouch.AVFoundation.AVAudioPcmBuffer audioPcmBuffer);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRecordAudioPcmBuffer(class MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate This, class MonoTouch.Speech.SFSpeechRecognitionTask task, class MonoTouch.AVFoundation.AVAudioPcmBuffer audioPcmBuffer) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate" RefType="this" />
          <Parameter Name="task" Type="MonoTouch.Speech.SFSpeechRecognitionTask" />
          <Parameter Name="audioPcmBuffer" Type="MonoTouch.AVFoundation.AVAudioPcmBuffer" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="task">To be added.</param>
          <param name="audioPcmBuffer">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Speech.SFSpeechRecognitionTaskDelegate_Extensions" Member="M:MonoTouch.Speech.SFSpeechRecognitionTaskDelegate_Extensions.DidRecordAudioPcmBuffer(MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate,MonoTouch.Speech.SFSpeechRecognitionTask,MonoTouch.AVFoundation.AVAudioPcmBuffer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate" />
      </Targets>
      <Member MemberName="FinishedReadingAudio">
        <MemberSignature Language="C#" Value="public static void FinishedReadingAudio (this MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate This, MonoTouch.Speech.SFSpeechRecognitionTask task);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FinishedReadingAudio(class MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate This, class MonoTouch.Speech.SFSpeechRecognitionTask task) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate" RefType="this" />
          <Parameter Name="task" Type="MonoTouch.Speech.SFSpeechRecognitionTask" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="task">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Speech.SFSpeechRecognitionTaskDelegate_Extensions" Member="M:MonoTouch.Speech.SFSpeechRecognitionTaskDelegate_Extensions.FinishedReadingAudio(MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate,MonoTouch.Speech.SFSpeechRecognitionTask)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate" />
      </Targets>
      <Member MemberName="TaskWasCancelled">
        <MemberSignature Language="C#" Value="public static void TaskWasCancelled (this MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate This, MonoTouch.Speech.SFSpeechRecognitionTask task);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TaskWasCancelled(class MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate This, class MonoTouch.Speech.SFSpeechRecognitionTask task) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate" RefType="this" />
          <Parameter Name="task" Type="MonoTouch.Speech.SFSpeechRecognitionTask" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="task">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Speech.SFSpeechRecognitionTaskDelegate_Extensions" Member="M:MonoTouch.Speech.SFSpeechRecognitionTaskDelegate_Extensions.TaskWasCancelled(MonoTouch.Speech.ISFSpeechRecognitionTaskDelegate,MonoTouch.Speech.SFSpeechRecognitionTask)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Speech.ISFSpeechRecognizerDelegate" />
      </Targets>
      <Member MemberName="AvailabilityDidChange">
        <MemberSignature Language="C#" Value="public static void AvailabilityDidChange (this MonoTouch.Speech.ISFSpeechRecognizerDelegate This, MonoTouch.Speech.SFSpeechRecognizer speechRecognizer, bool available);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AvailabilityDidChange(class MonoTouch.Speech.ISFSpeechRecognizerDelegate This, class MonoTouch.Speech.SFSpeechRecognizer speechRecognizer, bool available) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Speech.ISFSpeechRecognizerDelegate" RefType="this" />
          <Parameter Name="speechRecognizer" Type="MonoTouch.Speech.SFSpeechRecognizer" />
          <Parameter Name="available" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="speechRecognizer">To be added.</param>
          <param name="available">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.Speech.SFSpeechRecognizerDelegate_Extensions" Member="M:MonoTouch.Speech.SFSpeechRecognizerDelegate_Extensions.AvailabilityDidChange(MonoTouch.Speech.ISFSpeechRecognizerDelegate,MonoTouch.Speech.SFSpeechRecognizer,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UITouch" />
      </Targets>
      <Member MemberName="LocationInNode">
        <MemberSignature Language="C#" Value="public static System.Drawing.PointF LocationInNode (this MonoTouch.UIKit.UITouch This, MonoTouch.SpriteKit.SKNode node);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.PointF LocationInNode(class MonoTouch.UIKit.UITouch This, class MonoTouch.SpriteKit.SKNode node) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGPoint LocationInNode (this MonoTouch.UIKit.UITouch This, MonoTouch.SpriteKit.SKNode node);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGPoint LocationInNode(class MonoTouch.UIKit.UITouch This, class MonoTouch.SpriteKit.SKNode node) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.PointF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGPoint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UITouch" RefType="this" />
          <Parameter Name="node" Type="MonoTouch.SpriteKit.SKNode" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="node">To be added.</param>
          <summary>The current position of <c>this</c> in the coordinate system of <paramref name="node" />.</summary>
        </Docs>
        <Link Type="MonoTouch.SpriteKit.SKNodeTouches_UITouch" Member="M:MonoTouch.SpriteKit.SKNodeTouches_UITouch.LocationInNode(MonoTouch.UIKit.UITouch,MonoTouch.SpriteKit.SKNode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UITouch" />
      </Targets>
      <Member MemberName="PreviousLocationInNode">
        <MemberSignature Language="C#" Value="public static System.Drawing.PointF PreviousLocationInNode (this MonoTouch.UIKit.UITouch This, MonoTouch.SpriteKit.SKNode node);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.PointF PreviousLocationInNode(class MonoTouch.UIKit.UITouch This, class MonoTouch.SpriteKit.SKNode node) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGPoint PreviousLocationInNode (this MonoTouch.UIKit.UITouch This, MonoTouch.SpriteKit.SKNode node);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGPoint PreviousLocationInNode(class MonoTouch.UIKit.UITouch This, class MonoTouch.SpriteKit.SKNode node) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.PointF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGPoint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UITouch" RefType="this" />
          <Parameter Name="node" Type="MonoTouch.SpriteKit.SKNode" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="node">To be added.</param>
          <summary>The previous location of <c>this</c> in the coordinate system of <paramref name="node" />.</summary>
        </Docs>
        <Link Type="MonoTouch.SpriteKit.SKNodeTouches_UITouch" Member="M:MonoTouch.SpriteKit.SKNodeTouches_UITouch.PreviousLocationInNode(MonoTouch.UIKit.UITouch,MonoTouch.SpriteKit.SKNode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SpriteKit.ISKPhysicsContactDelegate" />
      </Targets>
      <Member MemberName="DidBeginContact">
        <MemberSignature Language="C#" Value="public static void DidBeginContact (this MonoTouch.SpriteKit.ISKPhysicsContactDelegate This, MonoTouch.SpriteKit.SKPhysicsContact contact);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidBeginContact(class MonoTouch.SpriteKit.ISKPhysicsContactDelegate This, class MonoTouch.SpriteKit.SKPhysicsContact contact) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SpriteKit.ISKPhysicsContactDelegate" RefType="this" />
          <Parameter Name="contact" Type="MonoTouch.SpriteKit.SKPhysicsContact" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="contact">To be added.</param>
          <summary>Method that is called when contact is started.</summary>
        </Docs>
        <Link Type="MonoTouch.SpriteKit.SKPhysicsContactDelegate_Extensions" Member="M:MonoTouch.SpriteKit.SKPhysicsContactDelegate_Extensions.DidBeginContact(MonoTouch.SpriteKit.ISKPhysicsContactDelegate,MonoTouch.SpriteKit.SKPhysicsContact)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SpriteKit.ISKPhysicsContactDelegate" />
      </Targets>
      <Member MemberName="DidEndContact">
        <MemberSignature Language="C#" Value="public static void DidEndContact (this MonoTouch.SpriteKit.ISKPhysicsContactDelegate This, MonoTouch.SpriteKit.SKPhysicsContact contact);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidEndContact(class MonoTouch.SpriteKit.ISKPhysicsContactDelegate This, class MonoTouch.SpriteKit.SKPhysicsContact contact) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SpriteKit.ISKPhysicsContactDelegate" RefType="this" />
          <Parameter Name="contact" Type="MonoTouch.SpriteKit.SKPhysicsContact" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="contact">To be added.</param>
          <summary>Method that is called after contact ends.</summary>
        </Docs>
        <Link Type="MonoTouch.SpriteKit.SKPhysicsContactDelegate_Extensions" Member="M:MonoTouch.SpriteKit.SKPhysicsContactDelegate_Extensions.DidEndContact(MonoTouch.SpriteKit.ISKPhysicsContactDelegate,MonoTouch.SpriteKit.SKPhysicsContact)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SpriteKit.ISKSceneDelegate" />
      </Targets>
      <Member MemberName="DidApplyConstraints">
        <MemberSignature Language="C#" Value="public static void DidApplyConstraints (this MonoTouch.SpriteKit.ISKSceneDelegate This, MonoTouch.SpriteKit.SKScene scene);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidApplyConstraints(class MonoTouch.SpriteKit.ISKSceneDelegate This, class MonoTouch.SpriteKit.SKScene scene) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SpriteKit.ISKSceneDelegate" RefType="this" />
          <Parameter Name="scene" Type="MonoTouch.SpriteKit.SKScene" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scene">To be added.</param>
          <summary>Method that is called after constraints are applied to <paramref name="scene" />.</summary>
        </Docs>
        <Link Type="MonoTouch.SpriteKit.SKSceneDelegate_Extensions" Member="M:MonoTouch.SpriteKit.SKSceneDelegate_Extensions.DidApplyConstraints(MonoTouch.SpriteKit.ISKSceneDelegate,MonoTouch.SpriteKit.SKScene)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SpriteKit.ISKSceneDelegate" />
      </Targets>
      <Member MemberName="DidEvaluateActions">
        <MemberSignature Language="C#" Value="public static void DidEvaluateActions (this MonoTouch.SpriteKit.ISKSceneDelegate This, MonoTouch.SpriteKit.SKScene scene);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidEvaluateActions(class MonoTouch.SpriteKit.ISKSceneDelegate This, class MonoTouch.SpriteKit.SKScene scene) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SpriteKit.ISKSceneDelegate" RefType="this" />
          <Parameter Name="scene" Type="MonoTouch.SpriteKit.SKScene" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scene">To be added.</param>
          <summary>Method that is called after all scene actions are evaluated for <paramref name="scene" />.</summary>
        </Docs>
        <Link Type="MonoTouch.SpriteKit.SKSceneDelegate_Extensions" Member="M:MonoTouch.SpriteKit.SKSceneDelegate_Extensions.DidEvaluateActions(MonoTouch.SpriteKit.ISKSceneDelegate,MonoTouch.SpriteKit.SKScene)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SpriteKit.ISKSceneDelegate" />
      </Targets>
      <Member MemberName="DidFinishUpdate">
        <MemberSignature Language="C#" Value="public static void DidFinishUpdate (this MonoTouch.SpriteKit.ISKSceneDelegate This, MonoTouch.SpriteKit.SKScene scene);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinishUpdate(class MonoTouch.SpriteKit.ISKSceneDelegate This, class MonoTouch.SpriteKit.SKScene scene) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SpriteKit.ISKSceneDelegate" RefType="this" />
          <Parameter Name="scene" Type="MonoTouch.SpriteKit.SKScene" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scene">To be added.</param>
          <summary>Method that is called after the <paramref name="scene" /> is updated.</summary>
        </Docs>
        <Link Type="MonoTouch.SpriteKit.SKSceneDelegate_Extensions" Member="M:MonoTouch.SpriteKit.SKSceneDelegate_Extensions.DidFinishUpdate(MonoTouch.SpriteKit.ISKSceneDelegate,MonoTouch.SpriteKit.SKScene)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SpriteKit.ISKSceneDelegate" />
      </Targets>
      <Member MemberName="DidSimulatePhysics">
        <MemberSignature Language="C#" Value="public static void DidSimulatePhysics (this MonoTouch.SpriteKit.ISKSceneDelegate This, MonoTouch.SpriteKit.SKScene scene);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSimulatePhysics(class MonoTouch.SpriteKit.ISKSceneDelegate This, class MonoTouch.SpriteKit.SKScene scene) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SpriteKit.ISKSceneDelegate" RefType="this" />
          <Parameter Name="scene" Type="MonoTouch.SpriteKit.SKScene" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scene">To be added.</param>
          <summary>Method that is called after physics simulation for <paramref name="scene" /> is complete.</summary>
        </Docs>
        <Link Type="MonoTouch.SpriteKit.SKSceneDelegate_Extensions" Member="M:MonoTouch.SpriteKit.SKSceneDelegate_Extensions.DidSimulatePhysics(MonoTouch.SpriteKit.ISKSceneDelegate,MonoTouch.SpriteKit.SKScene)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.SpriteKit.ISKSceneDelegate" />
      </Targets>
      <Member MemberName="Update">
        <MemberSignature Language="C#" Value="public static void Update (this MonoTouch.SpriteKit.ISKSceneDelegate This, double currentTime, MonoTouch.SpriteKit.SKScene scene);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Update(class MonoTouch.SpriteKit.ISKSceneDelegate This, float64 currentTime, class MonoTouch.SpriteKit.SKScene scene) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.SpriteKit.ISKSceneDelegate" RefType="this" />
          <Parameter Name="currentTime" Type="System.Double" />
          <Parameter Name="scene" Type="MonoTouch.SpriteKit.SKScene" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="currentTime">To be added.</param>
          <param name="scene">To be added.</param>
          <summary>Method that is called once per frame, if <paramref name="scene" /> is presented and not paused, before any animation takes place.</summary>
        </Docs>
        <Link Type="MonoTouch.SpriteKit.SKSceneDelegate_Extensions" Member="M:MonoTouch.SpriteKit.SKSceneDelegate_Extensions.Update(MonoTouch.SpriteKit.ISKSceneDelegate,System.Double,MonoTouch.SpriteKit.SKScene)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.StoreKit.SKError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.StoreKit.SKError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.StoreKit.SKError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.StoreKit.SKError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.StoreKit.SKError value</summary>
        </Docs>
        <Link Type="MonoTouch.StoreKit.SKErrorExtensions" Member="M:MonoTouch.StoreKit.SKErrorExtensions.GetDomain(MonoTouch.StoreKit.SKError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.StoreKit.ISKPaymentTransactionObserver" />
      </Targets>
      <Member MemberName="RemovedTransactions">
        <MemberSignature Language="C#" Value="public static void RemovedTransactions (this MonoTouch.StoreKit.ISKPaymentTransactionObserver This, MonoTouch.StoreKit.SKPaymentQueue queue, MonoTouch.StoreKit.SKPaymentTransaction[] transactions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovedTransactions(class MonoTouch.StoreKit.ISKPaymentTransactionObserver This, class MonoTouch.StoreKit.SKPaymentQueue queue, class MonoTouch.StoreKit.SKPaymentTransaction[] transactions) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.StoreKit.ISKPaymentTransactionObserver" RefType="this" />
          <Parameter Name="queue" Type="MonoTouch.StoreKit.SKPaymentQueue" />
          <Parameter Name="transactions" Type="MonoTouch.StoreKit.SKPaymentTransaction[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="queue">To be added.</param>
          <param name="transactions">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.StoreKit.SKPaymentTransactionObserver_Extensions" Member="M:MonoTouch.StoreKit.SKPaymentTransactionObserver_Extensions.RemovedTransactions(MonoTouch.StoreKit.ISKPaymentTransactionObserver,MonoTouch.StoreKit.SKPaymentQueue,MonoTouch.StoreKit.SKPaymentTransaction[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.StoreKit.ISKPaymentTransactionObserver" />
      </Targets>
      <Member MemberName="RestoreCompletedTransactionsFailedWithError">
        <MemberSignature Language="C#" Value="public static void RestoreCompletedTransactionsFailedWithError (this MonoTouch.StoreKit.ISKPaymentTransactionObserver This, MonoTouch.StoreKit.SKPaymentQueue queue, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RestoreCompletedTransactionsFailedWithError(class MonoTouch.StoreKit.ISKPaymentTransactionObserver This, class MonoTouch.StoreKit.SKPaymentQueue queue, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.StoreKit.ISKPaymentTransactionObserver" RefType="this" />
          <Parameter Name="queue" Type="MonoTouch.StoreKit.SKPaymentQueue" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="queue">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.StoreKit.SKPaymentTransactionObserver_Extensions" Member="M:MonoTouch.StoreKit.SKPaymentTransactionObserver_Extensions.RestoreCompletedTransactionsFailedWithError(MonoTouch.StoreKit.ISKPaymentTransactionObserver,MonoTouch.StoreKit.SKPaymentQueue,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.StoreKit.ISKPaymentTransactionObserver" />
      </Targets>
      <Member MemberName="RestoreCompletedTransactionsFinished">
        <MemberSignature Language="C#" Value="public static void RestoreCompletedTransactionsFinished (this MonoTouch.StoreKit.ISKPaymentTransactionObserver This, MonoTouch.StoreKit.SKPaymentQueue queue);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RestoreCompletedTransactionsFinished(class MonoTouch.StoreKit.ISKPaymentTransactionObserver This, class MonoTouch.StoreKit.SKPaymentQueue queue) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.StoreKit.ISKPaymentTransactionObserver" RefType="this" />
          <Parameter Name="queue" Type="MonoTouch.StoreKit.SKPaymentQueue" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="queue">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.StoreKit.SKPaymentTransactionObserver_Extensions" Member="M:MonoTouch.StoreKit.SKPaymentTransactionObserver_Extensions.RestoreCompletedTransactionsFinished(MonoTouch.StoreKit.ISKPaymentTransactionObserver,MonoTouch.StoreKit.SKPaymentQueue)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.StoreKit.ISKPaymentTransactionObserver" />
      </Targets>
      <Member MemberName="UpdatedDownloads">
        <MemberSignature Language="C#" Value="public static void UpdatedDownloads (this MonoTouch.StoreKit.ISKPaymentTransactionObserver This, MonoTouch.StoreKit.SKPaymentQueue queue, MonoTouch.StoreKit.SKDownload[] downloads);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdatedDownloads(class MonoTouch.StoreKit.ISKPaymentTransactionObserver This, class MonoTouch.StoreKit.SKPaymentQueue queue, class MonoTouch.StoreKit.SKDownload[] downloads) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.StoreKit.ISKPaymentTransactionObserver" RefType="this" />
          <Parameter Name="queue" Type="MonoTouch.StoreKit.SKPaymentQueue" />
          <Parameter Name="downloads" Type="MonoTouch.StoreKit.SKDownload[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="queue">To be added.</param>
          <param name="downloads">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.StoreKit.SKPaymentTransactionObserver_Extensions" Member="M:MonoTouch.StoreKit.SKPaymentTransactionObserver_Extensions.UpdatedDownloads(MonoTouch.StoreKit.ISKPaymentTransactionObserver,MonoTouch.StoreKit.SKPaymentQueue,MonoTouch.StoreKit.SKDownload[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.StoreKit.ISKRequestDelegate" />
      </Targets>
      <Member MemberName="RequestFailed">
        <MemberSignature Language="C#" Value="public static void RequestFailed (this MonoTouch.StoreKit.ISKRequestDelegate This, MonoTouch.StoreKit.SKRequest request, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RequestFailed(class MonoTouch.StoreKit.ISKRequestDelegate This, class MonoTouch.StoreKit.SKRequest request, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.StoreKit.ISKRequestDelegate" RefType="this" />
          <Parameter Name="request" Type="MonoTouch.StoreKit.SKRequest" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="request">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.StoreKit.SKRequestDelegate_Extensions" Member="M:MonoTouch.StoreKit.SKRequestDelegate_Extensions.RequestFailed(MonoTouch.StoreKit.ISKRequestDelegate,MonoTouch.StoreKit.SKRequest,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.StoreKit.ISKRequestDelegate" />
      </Targets>
      <Member MemberName="RequestFinished">
        <MemberSignature Language="C#" Value="public static void RequestFinished (this MonoTouch.StoreKit.ISKRequestDelegate This, MonoTouch.StoreKit.SKRequest request);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RequestFinished(class MonoTouch.StoreKit.ISKRequestDelegate This, class MonoTouch.StoreKit.SKRequest request) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.StoreKit.ISKRequestDelegate" RefType="this" />
          <Parameter Name="request" Type="MonoTouch.StoreKit.SKRequest" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="request">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.StoreKit.SKRequestDelegate_Extensions" Member="M:MonoTouch.StoreKit.SKRequestDelegate_Extensions.RequestFinished(MonoTouch.StoreKit.ISKRequestDelegate,MonoTouch.StoreKit.SKRequest)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.StoreKit.ISKStoreProductViewControllerDelegate" />
      </Targets>
      <Member MemberName="Finished">
        <MemberSignature Language="C#" Value="public static void Finished (this MonoTouch.StoreKit.ISKStoreProductViewControllerDelegate This, MonoTouch.StoreKit.SKStoreProductViewController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Finished(class MonoTouch.StoreKit.ISKStoreProductViewControllerDelegate This, class MonoTouch.StoreKit.SKStoreProductViewController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.StoreKit.ISKStoreProductViewControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.StoreKit.SKStoreProductViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.StoreKit.SKStoreProductViewControllerDelegate_Extensions" Member="M:MonoTouch.StoreKit.SKStoreProductViewControllerDelegate_Extensions.Finished(MonoTouch.StoreKit.ISKStoreProductViewControllerDelegate,MonoTouch.StoreKit.SKStoreProductViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSAttributedString" />
      </Targets>
      <Member MemberName="ContainsAttachments">
        <MemberSignature Language="C#" Value="public static bool ContainsAttachments (this MonoTouch.Foundation.NSAttributedString This, MonoTouch.Foundation.NSRange range);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsAttachments(class MonoTouch.Foundation.NSAttributedString This, valuetype MonoTouch.Foundation.NSRange range) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSAttributedString" RefType="this" />
          <Parameter Name="range" Type="MonoTouch.Foundation.NSRange" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="range">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSAttributedString_NSAttributedStringKitAdditions" Member="M:MonoTouch.UIKit.NSAttributedString_NSAttributedStringKitAdditions.ContainsAttachments(MonoTouch.Foundation.NSAttributedString,MonoTouch.Foundation.NSRange)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSCoder" />
      </Targets>
      <Member MemberName="DecodeCGAffineTransform">
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGAffineTransform DecodeCGAffineTransform (this MonoTouch.Foundation.NSCoder This, string key);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGAffineTransform DecodeCGAffineTransform(class MonoTouch.Foundation.NSCoder This, string key) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGAffineTransform</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSCoder" RefType="this" />
          <Parameter Name="key" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">MonoTouch.Foundation.NSCoder.</param>
          <param name="key">Key identified with the affine transform.</param>
          <summary>Decodes and then returns the affine transform structure that is associated with the designated key.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding" Member="M:MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding.DecodeCGAffineTransform(MonoTouch.Foundation.NSCoder,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSCoder" />
      </Targets>
      <Member MemberName="DecodeCGPoint">
        <MemberSignature Language="C#" Value="public static System.Drawing.PointF DecodeCGPoint (this MonoTouch.Foundation.NSCoder This, string key);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.PointF DecodeCGPoint(class MonoTouch.Foundation.NSCoder This, string key) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGPoint DecodeCGPoint (this MonoTouch.Foundation.NSCoder This, string key);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGPoint DecodeCGPoint(class MonoTouch.Foundation.NSCoder This, string key) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.PointF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGPoint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSCoder" RefType="this" />
          <Parameter Name="key" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">MonoTouch.Foundation.NSCoder.</param>
          <param name="key">Key that is identified with the point.</param>
          <summary>Decodes and then returns the point structure that is associated with the designated key.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding" Member="M:MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding.DecodeCGPoint(MonoTouch.Foundation.NSCoder,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSCoder" />
      </Targets>
      <Member MemberName="DecodeCGRect">
        <MemberSignature Language="C#" Value="public static System.Drawing.RectangleF DecodeCGRect (this MonoTouch.Foundation.NSCoder This, string key);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.RectangleF DecodeCGRect(class MonoTouch.Foundation.NSCoder This, string key) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGRect DecodeCGRect (this MonoTouch.Foundation.NSCoder This, string key);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGRect DecodeCGRect(class MonoTouch.Foundation.NSCoder This, string key) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.RectangleF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSCoder" RefType="this" />
          <Parameter Name="key" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">MonoTouch.Foundation.NSCoder.</param>
          <param name="key">Key that is identified with the affine transform.</param>
          <summary>Decodes and then returns the rectangle structure that is associated with the designated key.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding" Member="M:MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding.DecodeCGRect(MonoTouch.Foundation.NSCoder,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSCoder" />
      </Targets>
      <Member MemberName="DecodeCGSize">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF DecodeCGSize (this MonoTouch.Foundation.NSCoder This, string key);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF DecodeCGSize(class MonoTouch.Foundation.NSCoder This, string key) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGSize DecodeCGSize (this MonoTouch.Foundation.NSCoder This, string key);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGSize DecodeCGSize(class MonoTouch.Foundation.NSCoder This, string key) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.SizeF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSCoder" RefType="this" />
          <Parameter Name="key" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">MonoTouch.Foundation.NSCoder.</param>
          <param name="key">Key that is identified with the rect.</param>
          <summary>Decodes and then returns the size structure that is associated with the designated key.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding" Member="M:MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding.DecodeCGSize(MonoTouch.Foundation.NSCoder,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSCoder" />
      </Targets>
      <Member MemberName="DecodeCGVector">
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGVector DecodeCGVector (this MonoTouch.Foundation.NSCoder This, string key);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGVector DecodeCGVector(class MonoTouch.Foundation.NSCoder This, string key) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.CoreGraphics.CGVector</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSCoder" RefType="this" />
          <Parameter Name="key" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">MonoTouch.Foundation.NSCoder.</param>
          <param name="key">Key that is identified with the vector.</param>
          <summary>Decodes and then returns the vector structure that is associated with the designated key.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding" Member="M:MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding.DecodeCGVector(MonoTouch.Foundation.NSCoder,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSCoder" />
      </Targets>
      <Member MemberName="DecodeUIEdgeInsets">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIEdgeInsets DecodeUIEdgeInsets (this MonoTouch.Foundation.NSCoder This, string key);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.UIKit.UIEdgeInsets DecodeUIEdgeInsets(class MonoTouch.Foundation.NSCoder This, string key) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIEdgeInsets</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSCoder" RefType="this" />
          <Parameter Name="key" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">MonoTouch.Foundation.NSCoder.</param>
          <param name="key">Key that is identified with the edge insets.</param>
          <summary>Decodes and then returns the edge insets that are associated with the designated key.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding" Member="M:MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding.DecodeUIEdgeInsets(MonoTouch.Foundation.NSCoder,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSCoder" />
      </Targets>
      <Member MemberName="DecodeUIOffsetForKey">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIOffset DecodeUIOffsetForKey (this MonoTouch.Foundation.NSCoder This, string key);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.UIKit.UIOffset DecodeUIOffsetForKey(class MonoTouch.Foundation.NSCoder This, string key) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIOffset</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSCoder" RefType="this" />
          <Parameter Name="key" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">MonoTouch.Foundation.NSCoder.</param>
          <param name="key">Key that is identified with the offset.</param>
          <summary>Decodes and then returns the offset that is associated with the designated key.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding" Member="M:MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding.DecodeUIOffsetForKey(MonoTouch.Foundation.NSCoder,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSCoder" />
      </Targets>
      <Member MemberName="Encode">
        <MemberSignature Language="C#" Value="public static void Encode (this MonoTouch.Foundation.NSCoder This, MonoTouch.CoreGraphics.CGAffineTransform transform, string forKey);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Encode(class MonoTouch.Foundation.NSCoder This, valuetype MonoTouch.CoreGraphics.CGAffineTransform transform, string forKey) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSCoder" RefType="this" />
          <Parameter Name="transform" Type="MonoTouch.CoreGraphics.CGAffineTransform" />
          <Parameter Name="forKey" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">MonoTouch.Foundation.NSCoder.</param>
          <param name="transform">The specified affine transform.</param>
          <param name="forKey">Designated key in the receiver archive.</param>
          <summary>Encodes the affine transform and also associates it with the designated key.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding" Member="M:MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding.Encode(MonoTouch.Foundation.NSCoder,MonoTouch.CoreGraphics.CGAffineTransform,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSCoder" />
      </Targets>
      <Member MemberName="Encode">
        <MemberSignature Language="C#" Value="public static void Encode (this MonoTouch.Foundation.NSCoder This, System.Drawing.PointF point, string forKey);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Encode(class MonoTouch.Foundation.NSCoder This, valuetype System.Drawing.PointF point, string forKey) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void Encode (this MonoTouch.Foundation.NSCoder This, MonoTouch.CoreGraphics.CGPoint point, string forKey);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Encode(class MonoTouch.Foundation.NSCoder This, valuetype MonoTouch.CoreGraphics.CGPoint point, string forKey) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSCoder" RefType="this" />
          <Parameter Name="point" Type="System.Drawing.PointF" apistyle="classic" />
          <Parameter Name="forKey" Type="System.String" />
          <Parameter Name="point" Type="MonoTouch.CoreGraphics.CGPoint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">MonoTouch.Foundation.NSCoder.</param>
          <param name="point">The specified point.</param>
          <param name="forKey">Designated key in the receiver archive.</param>
          <summary>Encodes the point and also associates it with the designated key.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding" Member="M:MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding.Encode(MonoTouch.Foundation.NSCoder,MonoTouch.CoreGraphics.CGPoint,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSCoder" />
      </Targets>
      <Member MemberName="Encode">
        <MemberSignature Language="C#" Value="public static void Encode (this MonoTouch.Foundation.NSCoder This, System.Drawing.RectangleF rect, string forKey);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Encode(class MonoTouch.Foundation.NSCoder This, valuetype System.Drawing.RectangleF rect, string forKey) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void Encode (this MonoTouch.Foundation.NSCoder This, MonoTouch.CoreGraphics.CGRect rect, string forKey);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Encode(class MonoTouch.Foundation.NSCoder This, valuetype MonoTouch.CoreGraphics.CGRect rect, string forKey) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSCoder" RefType="this" />
          <Parameter Name="rect" Type="System.Drawing.RectangleF" apistyle="classic" />
          <Parameter Name="forKey" Type="System.String" />
          <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">MonoTouch.Foundation.NSCoder.</param>
          <param name="rect">The specified rectangle.</param>
          <param name="forKey">Designated key in the receiver archive.</param>
          <summary>Encodes the rectangle and also associates it with the designated key.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding" Member="M:MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding.Encode(MonoTouch.Foundation.NSCoder,MonoTouch.CoreGraphics.CGRect,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSCoder" />
      </Targets>
      <Member MemberName="Encode">
        <MemberSignature Language="C#" Value="public static void Encode (this MonoTouch.Foundation.NSCoder This, System.Drawing.SizeF size, string forKey);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Encode(class MonoTouch.Foundation.NSCoder This, valuetype System.Drawing.SizeF size, string forKey) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void Encode (this MonoTouch.Foundation.NSCoder This, MonoTouch.CoreGraphics.CGSize size, string forKey);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Encode(class MonoTouch.Foundation.NSCoder This, valuetype MonoTouch.CoreGraphics.CGSize size, string forKey) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSCoder" RefType="this" />
          <Parameter Name="size" Type="System.Drawing.SizeF" apistyle="classic" />
          <Parameter Name="forKey" Type="System.String" />
          <Parameter Name="size" Type="MonoTouch.CoreGraphics.CGSize" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">MonoTouch.Foundation.NSCoder.</param>
          <param name="size">The specified size.</param>
          <param name="forKey">Designated key in the receiver archive.</param>
          <summary>Encodes the size and also associates it with the designated key.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding" Member="M:MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding.Encode(MonoTouch.Foundation.NSCoder,MonoTouch.CoreGraphics.CGSize,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSCoder" />
      </Targets>
      <Member MemberName="Encode">
        <MemberSignature Language="C#" Value="public static void Encode (this MonoTouch.Foundation.NSCoder This, MonoTouch.CoreGraphics.CGVector vector, string forKey);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Encode(class MonoTouch.Foundation.NSCoder This, valuetype MonoTouch.CoreGraphics.CGVector vector, string forKey) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSCoder" RefType="this" />
          <Parameter Name="vector" Type="MonoTouch.CoreGraphics.CGVector" />
          <Parameter Name="forKey" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">MonoTouch.Foundation.NSCoder.</param>
          <param name="vector">The specified vector.</param>
          <param name="forKey">Designated key in the receiver archive.</param>
          <summary>Encodes the vector and also associates it with the designated key.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding" Member="M:MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding.Encode(MonoTouch.Foundation.NSCoder,MonoTouch.CoreGraphics.CGVector,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSCoder" />
      </Targets>
      <Member MemberName="Encode">
        <MemberSignature Language="C#" Value="public static void Encode (this MonoTouch.Foundation.NSCoder This, MonoTouch.UIKit.UIEdgeInsets edgeInsets, string forKey);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Encode(class MonoTouch.Foundation.NSCoder This, valuetype MonoTouch.UIKit.UIEdgeInsets edgeInsets, string forKey) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSCoder" RefType="this" />
          <Parameter Name="edgeInsets" Type="MonoTouch.UIKit.UIEdgeInsets" />
          <Parameter Name="forKey" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">MonoTouch.Foundation.NSCoder.</param>
          <param name="edgeInsets">The specified edge insets.</param>
          <param name="forKey">Designated key in the receiver archive.</param>
          <summary>Encodes the edge insets and also associates them with the designated key.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding" Member="M:MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding.Encode(MonoTouch.Foundation.NSCoder,MonoTouch.UIKit.UIEdgeInsets,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSCoder" />
      </Targets>
      <Member MemberName="Encode">
        <MemberSignature Language="C#" Value="public static void Encode (this MonoTouch.Foundation.NSCoder This, MonoTouch.UIKit.UIOffset uiOffset, string forKey);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Encode(class MonoTouch.Foundation.NSCoder This, valuetype MonoTouch.UIKit.UIOffset uiOffset, string forKey) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSCoder" RefType="this" />
          <Parameter Name="uiOffset" Type="MonoTouch.UIKit.UIOffset" />
          <Parameter Name="forKey" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">MonoTouch.Foundation.NSCoder.</param>
          <param name="uiOffset">The specified offset.</param>
          <param name="forKey">Designated key in the receiver archive.</param>
          <summary>Encodes the offset and also associates it with the designated key.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding" Member="M:MonoTouch.UIKit.NSCoder_UIGeometryKeyedCoding.Encode(MonoTouch.Foundation.NSCoder,MonoTouch.UIKit.UIOffset,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="DrawString">
        <MemberSignature Language="C#" Value="public static void DrawString (this MonoTouch.Foundation.NSString This, System.Drawing.RectangleF rect, MonoTouch.Foundation.NSStringDrawingOptions options, MonoTouch.UIKit.UIStringAttributes attributes, MonoTouch.Foundation.NSStringDrawingContext context);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawString(class MonoTouch.Foundation.NSString This, valuetype System.Drawing.RectangleF rect, valuetype MonoTouch.Foundation.NSStringDrawingOptions options, class MonoTouch.UIKit.UIStringAttributes attributes, class MonoTouch.Foundation.NSStringDrawingContext context) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void DrawString (this MonoTouch.Foundation.NSString This, MonoTouch.CoreGraphics.CGRect rect, MonoTouch.Foundation.NSStringDrawingOptions options, MonoTouch.UIKit.UIStringAttributes attributes, MonoTouch.Foundation.NSStringDrawingContext context);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawString(class MonoTouch.Foundation.NSString This, valuetype MonoTouch.CoreGraphics.CGRect rect, valuetype MonoTouch.Foundation.NSStringDrawingOptions options, class MonoTouch.UIKit.UIStringAttributes attributes, class MonoTouch.Foundation.NSStringDrawingContext context) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="rect" Type="System.Drawing.RectangleF" apistyle="classic" />
          <Parameter Name="options" Type="MonoTouch.Foundation.NSStringDrawingOptions" />
          <Parameter Name="attributes" Type="MonoTouch.UIKit.UIStringAttributes" />
          <Parameter Name="context" Type="MonoTouch.Foundation.NSStringDrawingContext" />
          <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="rect">To be added.</param>
          <param name="options">To be added.</param>
          <param name="attributes">To be added.</param>
          <param name="context">To be added.</param>
          <summary>Draws the string in the specified rect, with the specified options.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSExtendedStringDrawing" Member="M:MonoTouch.UIKit.NSExtendedStringDrawing.DrawString(MonoTouch.Foundation.NSString,MonoTouch.CoreGraphics.CGRect,MonoTouch.Foundation.NSStringDrawingOptions,MonoTouch.UIKit.UIStringAttributes,MonoTouch.Foundation.NSStringDrawingContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="GetBoundingRect">
        <MemberSignature Language="C#" Value="public static System.Drawing.RectangleF GetBoundingRect (this MonoTouch.Foundation.NSString This, System.Drawing.SizeF size, MonoTouch.Foundation.NSStringDrawingOptions options, MonoTouch.UIKit.UIStringAttributes attributes, MonoTouch.Foundation.NSStringDrawingContext context);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.RectangleF GetBoundingRect(class MonoTouch.Foundation.NSString This, valuetype System.Drawing.SizeF size, valuetype MonoTouch.Foundation.NSStringDrawingOptions options, class MonoTouch.UIKit.UIStringAttributes attributes, class MonoTouch.Foundation.NSStringDrawingContext context) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGRect GetBoundingRect (this MonoTouch.Foundation.NSString This, MonoTouch.CoreGraphics.CGSize size, MonoTouch.Foundation.NSStringDrawingOptions options, MonoTouch.UIKit.UIStringAttributes attributes, MonoTouch.Foundation.NSStringDrawingContext context);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGRect GetBoundingRect(class MonoTouch.Foundation.NSString This, valuetype MonoTouch.CoreGraphics.CGSize size, valuetype MonoTouch.Foundation.NSStringDrawingOptions options, class MonoTouch.UIKit.UIStringAttributes attributes, class MonoTouch.Foundation.NSStringDrawingContext context) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.RectangleF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="size" Type="System.Drawing.SizeF" apistyle="classic" />
          <Parameter Name="options" Type="MonoTouch.Foundation.NSStringDrawingOptions" />
          <Parameter Name="attributes" Type="MonoTouch.UIKit.UIStringAttributes" />
          <Parameter Name="context" Type="MonoTouch.Foundation.NSStringDrawingContext" />
          <Parameter Name="size" Type="MonoTouch.CoreGraphics.CGSize" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="size">To be added.</param>
          <param name="options">To be added.</param>
          <param name="attributes">To be added.</param>
          <param name="context">To be added.</param>
          <summary>The bounding box for the string, given the specified options.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSExtendedStringDrawing" Member="M:MonoTouch.UIKit.NSExtendedStringDrawing.GetBoundingRect(MonoTouch.Foundation.NSString,MonoTouch.CoreGraphics.CGSize,MonoTouch.Foundation.NSStringDrawingOptions,MonoTouch.UIKit.UIStringAttributes,MonoTouch.Foundation.NSStringDrawingContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="WeakDrawString">
        <MemberSignature Language="C#" Value="public static void WeakDrawString (this MonoTouch.Foundation.NSString This, System.Drawing.RectangleF rect, MonoTouch.Foundation.NSStringDrawingOptions options, MonoTouch.Foundation.NSDictionary attributes, MonoTouch.Foundation.NSStringDrawingContext context);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WeakDrawString(class MonoTouch.Foundation.NSString This, valuetype System.Drawing.RectangleF rect, valuetype MonoTouch.Foundation.NSStringDrawingOptions options, class MonoTouch.Foundation.NSDictionary attributes, class MonoTouch.Foundation.NSStringDrawingContext context) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void WeakDrawString (this MonoTouch.Foundation.NSString This, MonoTouch.CoreGraphics.CGRect rect, MonoTouch.Foundation.NSStringDrawingOptions options, MonoTouch.Foundation.NSDictionary attributes, MonoTouch.Foundation.NSStringDrawingContext context);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WeakDrawString(class MonoTouch.Foundation.NSString This, valuetype MonoTouch.CoreGraphics.CGRect rect, valuetype MonoTouch.Foundation.NSStringDrawingOptions options, class MonoTouch.Foundation.NSDictionary attributes, class MonoTouch.Foundation.NSStringDrawingContext context) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="rect" Type="System.Drawing.RectangleF" apistyle="classic" />
          <Parameter Name="options" Type="MonoTouch.Foundation.NSStringDrawingOptions" />
          <Parameter Name="attributes" Type="MonoTouch.Foundation.NSDictionary" />
          <Parameter Name="context" Type="MonoTouch.Foundation.NSStringDrawingContext" />
          <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="rect">To be added.</param>
          <param name="options">To be added.</param>
          <param name="attributes">To be added.</param>
          <param name="context">
            <para>To be added.</para>
            <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
          </param>
          <summary>Draws the string in the specified <paramref name="context" /> in the given <paramref name="rect" /> and with the specified <paramref name="options" /> and <paramref name="attributes" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSExtendedStringDrawing" Member="M:MonoTouch.UIKit.NSExtendedStringDrawing.WeakDrawString(MonoTouch.Foundation.NSString,MonoTouch.CoreGraphics.CGRect,MonoTouch.Foundation.NSStringDrawingOptions,MonoTouch.Foundation.NSDictionary,MonoTouch.Foundation.NSStringDrawingContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="WeakGetBoundingRect">
        <MemberSignature Language="C#" Value="public static System.Drawing.RectangleF WeakGetBoundingRect (this MonoTouch.Foundation.NSString This, System.Drawing.SizeF size, MonoTouch.Foundation.NSStringDrawingOptions options, MonoTouch.Foundation.NSDictionary attributes, MonoTouch.Foundation.NSStringDrawingContext context);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.RectangleF WeakGetBoundingRect(class MonoTouch.Foundation.NSString This, valuetype System.Drawing.SizeF size, valuetype MonoTouch.Foundation.NSStringDrawingOptions options, class MonoTouch.Foundation.NSDictionary attributes, class MonoTouch.Foundation.NSStringDrawingContext context) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGRect WeakGetBoundingRect (this MonoTouch.Foundation.NSString This, MonoTouch.CoreGraphics.CGSize size, MonoTouch.Foundation.NSStringDrawingOptions options, MonoTouch.Foundation.NSDictionary attributes, MonoTouch.Foundation.NSStringDrawingContext context);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGRect WeakGetBoundingRect(class MonoTouch.Foundation.NSString This, valuetype MonoTouch.CoreGraphics.CGSize size, valuetype MonoTouch.Foundation.NSStringDrawingOptions options, class MonoTouch.Foundation.NSDictionary attributes, class MonoTouch.Foundation.NSStringDrawingContext context) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.RectangleF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="size" Type="System.Drawing.SizeF" apistyle="classic" />
          <Parameter Name="options" Type="MonoTouch.Foundation.NSStringDrawingOptions" />
          <Parameter Name="attributes" Type="MonoTouch.Foundation.NSDictionary" />
          <Parameter Name="context" Type="MonoTouch.Foundation.NSStringDrawingContext" />
          <Parameter Name="size" Type="MonoTouch.CoreGraphics.CGSize" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="size">To be added.</param>
          <param name="options">To be added.</param>
          <param name="attributes">To be added.</param>
          <param name="context">
            <para>To be added.</para>
            <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
          </param>
          <summary>The bounding box for the string, given the specified options.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSExtendedStringDrawing" Member="M:MonoTouch.UIKit.NSExtendedStringDrawing.WeakGetBoundingRect(MonoTouch.Foundation.NSString,MonoTouch.CoreGraphics.CGSize,MonoTouch.Foundation.NSStringDrawingOptions,MonoTouch.Foundation.NSDictionary,MonoTouch.Foundation.NSStringDrawingContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.NSLayoutConstraint" />
      </Targets>
      <Member MemberName="GetIdentifier">
        <MemberSignature Language="C#" Value="public static string GetIdentifier (this MonoTouch.UIKit.NSLayoutConstraint This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetIdentifier(class MonoTouch.UIKit.NSLayoutConstraint This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.NSLayoutConstraint" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSIdentifier" Member="M:MonoTouch.UIKit.NSIdentifier.GetIdentifier(MonoTouch.UIKit.NSLayoutConstraint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.NSLayoutConstraint" />
      </Targets>
      <Member MemberName="Identifier">
        <MemberSignature Language="C#" Value="public static string Identifier (this MonoTouch.UIKit.NSLayoutConstraint This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Identifier(class MonoTouch.UIKit.NSLayoutConstraint This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.NSLayoutConstraint" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns an identifier that can be used to request an item.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSIdentifier" Member="M:MonoTouch.UIKit.NSIdentifier.Identifier(MonoTouch.UIKit.NSLayoutConstraint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.NSLayoutConstraint" />
      </Targets>
      <Member MemberName="SetIdentifier">
        <MemberSignature Language="C#" Value="public static void SetIdentifier (this MonoTouch.UIKit.NSLayoutConstraint This, string id);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIdentifier(class MonoTouch.UIKit.NSLayoutConstraint This, string id) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.NSLayoutConstraint" RefType="this" />
          <Parameter Name="id" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="id">
            <para>To be added.</para>
            <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
          </param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSIdentifier" Member="M:MonoTouch.UIKit.NSIdentifier.SetIdentifier(MonoTouch.UIKit.NSLayoutConstraint,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.INSLayoutManagerDelegate" />
      </Targets>
      <Member MemberName="BoundingBoxForControlGlyph">
        <MemberSignature Language="C#" Value="public static System.Drawing.RectangleF BoundingBoxForControlGlyph (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, uint glyphIndex, MonoTouch.UIKit.NSTextContainer textContainer, System.Drawing.RectangleF proposedRect, System.Drawing.PointF glyphPosition, uint charIndex);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.RectangleF BoundingBoxForControlGlyph(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, unsigned int32 glyphIndex, class MonoTouch.UIKit.NSTextContainer textContainer, valuetype System.Drawing.RectangleF proposedRect, valuetype System.Drawing.PointF glyphPosition, unsigned int32 charIndex) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGRect BoundingBoxForControlGlyph (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, nuint glyphIndex, MonoTouch.UIKit.NSTextContainer textContainer, MonoTouch.CoreGraphics.CGRect proposedRect, MonoTouch.CoreGraphics.CGPoint glyphPosition, nuint charIndex);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGRect BoundingBoxForControlGlyph(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, valuetype System.nuint glyphIndex, class MonoTouch.UIKit.NSTextContainer textContainer, valuetype MonoTouch.CoreGraphics.CGRect proposedRect, valuetype MonoTouch.CoreGraphics.CGPoint glyphPosition, valuetype System.nuint charIndex) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.RectangleF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.INSLayoutManagerDelegate" RefType="this" />
          <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
          <Parameter Name="glyphIndex" Type="System.UInt32" apistyle="classic" />
          <Parameter Name="textContainer" Type="MonoTouch.UIKit.NSTextContainer" />
          <Parameter Name="proposedRect" Type="System.Drawing.RectangleF" apistyle="classic" />
          <Parameter Name="glyphPosition" Type="System.Drawing.PointF" apistyle="classic" />
          <Parameter Name="charIndex" Type="System.UInt32" apistyle="classic" />
          <Parameter Name="glyphIndex" Type="System.nuint" apistyle="unified" />
          <Parameter Name="proposedRect" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
          <Parameter Name="glyphPosition" Type="MonoTouch.CoreGraphics.CGPoint" apistyle="unified" />
          <Parameter Name="charIndex" Type="System.nuint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="layoutManager">To be added.</param>
          <param name="glyphIndex">To be added.</param>
          <param name="textContainer">To be added.</param>
          <param name="proposedRect">To be added.</param>
          <param name="glyphPosition">To be added.</param>
          <param name="charIndex">To be added.</param>
          <summary>The <see cref="T:System.Drawing.RectangleF" /> bounding the specified control glyph.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions" Member="M:MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions.BoundingBoxForControlGlyph(MonoTouch.UIKit.INSLayoutManagerDelegate,MonoTouch.UIKit.NSLayoutManager,System.nuint,MonoTouch.UIKit.NSTextContainer,MonoTouch.CoreGraphics.CGRect,MonoTouch.CoreGraphics.CGPoint,System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.INSLayoutManagerDelegate" />
      </Targets>
      <Member MemberName="DidChangeGeometry">
        <MemberSignature Language="C#" Value="public static void DidChangeGeometry (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, MonoTouch.UIKit.NSTextContainer textContainer, System.Drawing.SizeF oldSize);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidChangeGeometry(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, class MonoTouch.UIKit.NSTextContainer textContainer, valuetype System.Drawing.SizeF oldSize) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void DidChangeGeometry (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, MonoTouch.UIKit.NSTextContainer textContainer, MonoTouch.CoreGraphics.CGSize oldSize);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidChangeGeometry(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, class MonoTouch.UIKit.NSTextContainer textContainer, valuetype MonoTouch.CoreGraphics.CGSize oldSize) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.INSLayoutManagerDelegate" RefType="this" />
          <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
          <Parameter Name="textContainer" Type="MonoTouch.UIKit.NSTextContainer" />
          <Parameter Name="oldSize" Type="System.Drawing.SizeF" apistyle="classic" />
          <Parameter Name="oldSize" Type="MonoTouch.CoreGraphics.CGSize" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="layoutManager">To be added.</param>
          <param name="textContainer">To be added.</param>
          <param name="oldSize">To be added.</param>
          <summary>The geometry of <paramref name="textContainer" /> changed from <paramref name="oldSize" />, and <paramref name="layoutManager" /> will invalidate the layout.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions" Member="M:MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions.DidChangeGeometry(MonoTouch.UIKit.INSLayoutManagerDelegate,MonoTouch.UIKit.NSLayoutManager,MonoTouch.UIKit.NSTextContainer,MonoTouch.CoreGraphics.CGSize)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.INSLayoutManagerDelegate" />
      </Targets>
      <Member MemberName="DidCompleteLayout">
        <MemberSignature Language="C#" Value="public static void DidCompleteLayout (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, MonoTouch.UIKit.NSTextContainer textContainer, bool layoutFinishedFlag);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidCompleteLayout(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, class MonoTouch.UIKit.NSTextContainer textContainer, bool layoutFinishedFlag) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.INSLayoutManagerDelegate" RefType="this" />
          <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
          <Parameter Name="textContainer" Type="MonoTouch.UIKit.NSTextContainer" />
          <Parameter Name="layoutFinishedFlag" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="layoutManager">To be added.</param>
          <param name="textContainer">To be added.</param>
          <param name="layoutFinishedFlag">To be added.</param>
          <summary>Indicates that the specified NSLayoutManager has finished laying out text in the specified text container.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions" Member="M:MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions.DidCompleteLayout(MonoTouch.UIKit.INSLayoutManagerDelegate,MonoTouch.UIKit.NSLayoutManager,MonoTouch.UIKit.NSTextContainer,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.INSLayoutManagerDelegate" />
      </Targets>
      <Member MemberName="DidInvalidatedLayout">
        <MemberSignature Language="C#" Value="public static void DidInvalidatedLayout (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidInvalidatedLayout(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.INSLayoutManagerDelegate" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.UIKit.NSLayoutManager" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="sender">To be added.</param>
          <summary>Indicates that the NSLayoutManager has invalidated layout information (not glyph information).</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions" Member="M:MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions.DidInvalidatedLayout(MonoTouch.UIKit.INSLayoutManagerDelegate,MonoTouch.UIKit.NSLayoutManager)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.INSLayoutManagerDelegate" />
      </Targets>
      <Member MemberName="LineSpacingAfterGlyphAtIndex">
        <MemberSignature Language="C#" Value="public static float LineSpacingAfterGlyphAtIndex (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, uint glyphIndex, System.Drawing.RectangleF rect);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 LineSpacingAfterGlyphAtIndex(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, unsigned int32 glyphIndex, valuetype System.Drawing.RectangleF rect) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nfloat LineSpacingAfterGlyphAtIndex (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, nuint glyphIndex, MonoTouch.CoreGraphics.CGRect rect);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat LineSpacingAfterGlyphAtIndex(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, valuetype System.nuint glyphIndex, valuetype MonoTouch.CoreGraphics.CGRect rect) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Single</ReturnType>
          <ReturnType apistyle="unified">System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.INSLayoutManagerDelegate" RefType="this" />
          <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
          <Parameter Name="glyphIndex" Type="System.UInt32" apistyle="classic" />
          <Parameter Name="rect" Type="System.Drawing.RectangleF" apistyle="classic" />
          <Parameter Name="glyphIndex" Type="System.nuint" apistyle="unified" />
          <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="layoutManager">To be added.</param>
          <param name="glyphIndex">To be added.</param>
          <param name="rect">To be added.</param>
          <summary>The line spacing after the line ending with the specified glyph index.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions" Member="M:MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions.LineSpacingAfterGlyphAtIndex(MonoTouch.UIKit.INSLayoutManagerDelegate,MonoTouch.UIKit.NSLayoutManager,System.nuint,MonoTouch.CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.INSLayoutManagerDelegate" />
      </Targets>
      <Member MemberName="ParagraphSpacingAfterGlyphAtIndex">
        <MemberSignature Language="C#" Value="public static float ParagraphSpacingAfterGlyphAtIndex (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, uint glyphIndex, System.Drawing.RectangleF rect);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ParagraphSpacingAfterGlyphAtIndex(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, unsigned int32 glyphIndex, valuetype System.Drawing.RectangleF rect) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nfloat ParagraphSpacingAfterGlyphAtIndex (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, nuint glyphIndex, MonoTouch.CoreGraphics.CGRect rect);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat ParagraphSpacingAfterGlyphAtIndex(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, valuetype System.nuint glyphIndex, valuetype MonoTouch.CoreGraphics.CGRect rect) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Single</ReturnType>
          <ReturnType apistyle="unified">System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.INSLayoutManagerDelegate" RefType="this" />
          <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
          <Parameter Name="glyphIndex" Type="System.UInt32" apistyle="classic" />
          <Parameter Name="rect" Type="System.Drawing.RectangleF" apistyle="classic" />
          <Parameter Name="glyphIndex" Type="System.nuint" apistyle="unified" />
          <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="layoutManager">To be added.</param>
          <param name="glyphIndex">To be added.</param>
          <param name="rect">To be added.</param>
          <summary>The paragraph spacing after the line ending with the specified glyph index.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions" Member="M:MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions.ParagraphSpacingAfterGlyphAtIndex(MonoTouch.UIKit.INSLayoutManagerDelegate,MonoTouch.UIKit.NSLayoutManager,System.nuint,MonoTouch.CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.INSLayoutManagerDelegate" />
      </Targets>
      <Member MemberName="ParagraphSpacingBeforeGlyphAtIndex">
        <MemberSignature Language="C#" Value="public static float ParagraphSpacingBeforeGlyphAtIndex (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, uint glyphIndex, System.Drawing.RectangleF rect);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ParagraphSpacingBeforeGlyphAtIndex(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, unsigned int32 glyphIndex, valuetype System.Drawing.RectangleF rect) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nfloat ParagraphSpacingBeforeGlyphAtIndex (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, nuint glyphIndex, MonoTouch.CoreGraphics.CGRect rect);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat ParagraphSpacingBeforeGlyphAtIndex(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, valuetype System.nuint glyphIndex, valuetype MonoTouch.CoreGraphics.CGRect rect) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Single</ReturnType>
          <ReturnType apistyle="unified">System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.INSLayoutManagerDelegate" RefType="this" />
          <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
          <Parameter Name="glyphIndex" Type="System.UInt32" apistyle="classic" />
          <Parameter Name="rect" Type="System.Drawing.RectangleF" apistyle="classic" />
          <Parameter Name="glyphIndex" Type="System.nuint" apistyle="unified" />
          <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="layoutManager">To be added.</param>
          <param name="glyphIndex">To be added.</param>
          <param name="rect">To be added.</param>
          <summary>The paragraph spacing before the line starting with the specified glyph index.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions" Member="M:MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions.ParagraphSpacingBeforeGlyphAtIndex(MonoTouch.UIKit.INSLayoutManagerDelegate,MonoTouch.UIKit.NSLayoutManager,System.nuint,MonoTouch.CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.INSLayoutManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldBreakLineByHyphenatingBeforeCharacter">
        <MemberSignature Language="C#" Value="public static bool ShouldBreakLineByHyphenatingBeforeCharacter (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, uint charIndex);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldBreakLineByHyphenatingBeforeCharacter(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, unsigned int32 charIndex) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static bool ShouldBreakLineByHyphenatingBeforeCharacter (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, nuint charIndex);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldBreakLineByHyphenatingBeforeCharacter(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, valuetype System.nuint charIndex) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.INSLayoutManagerDelegate" RefType="this" />
          <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
          <Parameter Name="charIndex" Type="System.UInt32" apistyle="classic" />
          <Parameter Name="charIndex" Type="System.nuint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="layoutManager">To be added.</param>
          <param name="charIndex">To be added.</param>
          <summary>Whether a line should break with a hyphen at the specified point. Called frequently.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions" Member="M:MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions.ShouldBreakLineByHyphenatingBeforeCharacter(MonoTouch.UIKit.INSLayoutManagerDelegate,MonoTouch.UIKit.NSLayoutManager,System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.INSLayoutManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldBreakLineByWordBeforeCharacter">
        <MemberSignature Language="C#" Value="public static bool ShouldBreakLineByWordBeforeCharacter (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, uint charIndex);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldBreakLineByWordBeforeCharacter(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, unsigned int32 charIndex) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static bool ShouldBreakLineByWordBeforeCharacter (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, nuint charIndex);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldBreakLineByWordBeforeCharacter(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, valuetype System.nuint charIndex) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.INSLayoutManagerDelegate" RefType="this" />
          <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
          <Parameter Name="charIndex" Type="System.UInt32" apistyle="classic" />
          <Parameter Name="charIndex" Type="System.nuint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="layoutManager">To be added.</param>
          <param name="charIndex">To be added.</param>
          <summary>Whether a line should have a soft line break. Called frequently.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions" Member="M:MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions.ShouldBreakLineByWordBeforeCharacter(MonoTouch.UIKit.INSLayoutManagerDelegate,MonoTouch.UIKit.NSLayoutManager,System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.INSLayoutManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldGenerateGlyphs">
        <MemberSignature Language="C#" Value="public static uint ShouldGenerateGlyphs (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, IntPtr glyphBuffer, IntPtr props, IntPtr charIndexes, MonoTouch.UIKit.UIFont aFont, MonoTouch.Foundation.NSRange glyphRange);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ShouldGenerateGlyphs(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, native int glyphBuffer, native int props, native int charIndexes, class MonoTouch.UIKit.UIFont aFont, valuetype MonoTouch.Foundation.NSRange glyphRange) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nuint ShouldGenerateGlyphs (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, IntPtr glyphBuffer, IntPtr props, IntPtr charIndexes, MonoTouch.UIKit.UIFont aFont, MonoTouch.Foundation.NSRange glyphRange);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nuint ShouldGenerateGlyphs(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, native int glyphBuffer, native int props, native int charIndexes, class MonoTouch.UIKit.UIFont aFont, valuetype MonoTouch.Foundation.NSRange glyphRange) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.UInt32</ReturnType>
          <ReturnType apistyle="unified">System.nuint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.INSLayoutManagerDelegate" RefType="this" />
          <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
          <Parameter Name="glyphBuffer" Type="System.IntPtr" />
          <Parameter Name="props" Type="System.IntPtr" />
          <Parameter Name="charIndexes" Type="System.IntPtr" />
          <Parameter Name="aFont" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="glyphRange" Type="MonoTouch.Foundation.NSRange" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="layoutManager">To be added.</param>
          <param name="glyphBuffer">To be added.</param>
          <param name="props">To be added.</param>
          <param name="charIndexes">To be added.</param>
          <param name="aFont">To be added.</param>
          <param name="glyphRange">To be added.</param>
          <summary>When overridden, allows the app developer to customize the initial glyph generation process.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions" Member="M:MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions.ShouldGenerateGlyphs(MonoTouch.UIKit.INSLayoutManagerDelegate,MonoTouch.UIKit.NSLayoutManager,System.IntPtr,System.IntPtr,System.IntPtr,MonoTouch.UIKit.UIFont,MonoTouch.Foundation.NSRange)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.INSLayoutManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldSetLineFragmentRect">
        <MemberSignature Language="C#" Value="public static bool ShouldSetLineFragmentRect (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, ref System.Drawing.RectangleF lineFragmentRect, ref System.Drawing.RectangleF lineFragmentUsedRect, ref float baselineOffset, MonoTouch.UIKit.NSTextContainer textContainer, MonoTouch.Foundation.NSRange glyphRange);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldSetLineFragmentRect(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, valuetype System.Drawing.RectangleF lineFragmentRect, valuetype System.Drawing.RectangleF lineFragmentUsedRect, float32 baselineOffset, class MonoTouch.UIKit.NSTextContainer textContainer, valuetype MonoTouch.Foundation.NSRange glyphRange) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static bool ShouldSetLineFragmentRect (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, ref MonoTouch.CoreGraphics.CGRect lineFragmentRect, ref MonoTouch.CoreGraphics.CGRect lineFragmentUsedRect, ref nfloat baselineOffset, MonoTouch.UIKit.NSTextContainer textContainer, MonoTouch.Foundation.NSRange glyphRange);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldSetLineFragmentRect(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, valuetype MonoTouch.CoreGraphics.CGRect lineFragmentRect, valuetype MonoTouch.CoreGraphics.CGRect lineFragmentUsedRect, valuetype System.nfloat baselineOffset, class MonoTouch.UIKit.NSTextContainer textContainer, valuetype MonoTouch.Foundation.NSRange glyphRange) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.INSLayoutManagerDelegate" RefType="this" />
          <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
          <Parameter Name="lineFragmentRect" Type="System.Drawing.RectangleF&amp;" RefType="ref" apistyle="classic" />
          <Parameter Name="lineFragmentUsedRect" Type="System.Drawing.RectangleF&amp;" RefType="ref" apistyle="classic" />
          <Parameter Name="baselineOffset" Type="System.Single&amp;" RefType="ref" apistyle="classic" />
          <Parameter Name="textContainer" Type="MonoTouch.UIKit.NSTextContainer" />
          <Parameter Name="glyphRange" Type="MonoTouch.Foundation.NSRange" />
          <Parameter Name="lineFragmentRect" Type="MonoTouch.CoreGraphics.CGRect&amp;" RefType="ref" apistyle="unified" />
          <Parameter Name="lineFragmentUsedRect" Type="MonoTouch.CoreGraphics.CGRect&amp;" RefType="ref" apistyle="unified" />
          <Parameter Name="baselineOffset" Type="System.nfloat&amp;" RefType="ref" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="layoutManager">To be added.</param>
          <param name="lineFragmentRect">To be added.</param>
          <param name="lineFragmentUsedRect">To be added.</param>
          <param name="baselineOffset">To be added.</param>
          <param name="textContainer">To be added.</param>
          <param name="glyphRange">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions" Member="M:MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions.ShouldSetLineFragmentRect(MonoTouch.UIKit.INSLayoutManagerDelegate,MonoTouch.UIKit.NSLayoutManager,MonoTouch.CoreGraphics.CGRect@,MonoTouch.CoreGraphics.CGRect@,System.nfloat@,MonoTouch.UIKit.NSTextContainer,MonoTouch.Foundation.NSRange)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.INSLayoutManagerDelegate" />
      </Targets>
      <Member MemberName="ShouldUseAction">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.NSControlCharacterAction ShouldUseAction (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, MonoTouch.UIKit.NSControlCharacterAction action, uint charIndex);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.UIKit.NSControlCharacterAction ShouldUseAction(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, valuetype MonoTouch.UIKit.NSControlCharacterAction action, unsigned int32 charIndex) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.NSControlCharacterAction ShouldUseAction (this MonoTouch.UIKit.INSLayoutManagerDelegate This, MonoTouch.UIKit.NSLayoutManager layoutManager, MonoTouch.UIKit.NSControlCharacterAction action, nuint charIndex);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.UIKit.NSControlCharacterAction ShouldUseAction(class MonoTouch.UIKit.INSLayoutManagerDelegate This, class MonoTouch.UIKit.NSLayoutManager layoutManager, valuetype MonoTouch.UIKit.NSControlCharacterAction action, valuetype System.nuint charIndex) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.NSControlCharacterAction</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.INSLayoutManagerDelegate" RefType="this" />
          <Parameter Name="layoutManager" Type="MonoTouch.UIKit.NSLayoutManager" />
          <Parameter Name="action" Type="MonoTouch.UIKit.NSControlCharacterAction" />
          <Parameter Name="charIndex" Type="System.UInt32" apistyle="classic" />
          <Parameter Name="charIndex" Type="System.nuint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="layoutManager">To be added.</param>
          <param name="action">To be added.</param>
          <param name="charIndex">To be added.</param>
          <summary>The control character action for the control character at the specified index.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions" Member="M:MonoTouch.UIKit.NSLayoutManagerDelegate_Extensions.ShouldUseAction(MonoTouch.UIKit.INSLayoutManagerDelegate,MonoTouch.UIKit.NSLayoutManager,MonoTouch.UIKit.NSControlCharacterAction,System.nuint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSMutableAttributedString" />
      </Targets>
      <Member MemberName="FixAttributesInRange">
        <MemberSignature Language="C#" Value="public static void FixAttributesInRange (this MonoTouch.Foundation.NSMutableAttributedString This, MonoTouch.Foundation.NSRange range);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FixAttributesInRange(class MonoTouch.Foundation.NSMutableAttributedString This, valuetype MonoTouch.Foundation.NSRange range) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSMutableAttributedString" RefType="this" />
          <Parameter Name="range" Type="MonoTouch.Foundation.NSRange" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="range">To be added.</param>
          <summary>Cleans up inconsistencies that can accumulate over many edits.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSMutableAttributedStringKitAdditions" Member="M:MonoTouch.UIKit.NSMutableAttributedStringKitAdditions.FixAttributesInRange(MonoTouch.Foundation.NSMutableAttributedString,MonoTouch.Foundation.NSRange)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="DrawString">
        <MemberSignature Language="C#" Value="public static void DrawString (this MonoTouch.Foundation.NSString This, System.Drawing.PointF point, MonoTouch.UIKit.UIStringAttributes attributes);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawString(class MonoTouch.Foundation.NSString This, valuetype System.Drawing.PointF point, class MonoTouch.UIKit.UIStringAttributes attributes) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void DrawString (this MonoTouch.Foundation.NSString This, MonoTouch.CoreGraphics.CGPoint point, MonoTouch.UIKit.UIStringAttributes attributes);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawString(class MonoTouch.Foundation.NSString This, valuetype MonoTouch.CoreGraphics.CGPoint point, class MonoTouch.UIKit.UIStringAttributes attributes) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="point" Type="System.Drawing.PointF" apistyle="classic" />
          <Parameter Name="attributes" Type="MonoTouch.UIKit.UIStringAttributes" />
          <Parameter Name="point" Type="MonoTouch.CoreGraphics.CGPoint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="point">To be added.</param>
          <param name="attributes">To be added.</param>
          <summary>Draws the string at the specified <paramref name="point" /> and with the specified <paramref name="attributes" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSStringDrawing" Member="M:MonoTouch.UIKit.NSStringDrawing.DrawString(MonoTouch.Foundation.NSString,MonoTouch.CoreGraphics.CGPoint,MonoTouch.UIKit.UIStringAttributes)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="DrawString">
        <MemberSignature Language="C#" Value="public static void DrawString (this MonoTouch.Foundation.NSString This, System.Drawing.RectangleF rect, MonoTouch.UIKit.UIStringAttributes attributes);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawString(class MonoTouch.Foundation.NSString This, valuetype System.Drawing.RectangleF rect, class MonoTouch.UIKit.UIStringAttributes attributes) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void DrawString (this MonoTouch.Foundation.NSString This, MonoTouch.CoreGraphics.CGRect rect, MonoTouch.UIKit.UIStringAttributes attributes);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawString(class MonoTouch.Foundation.NSString This, valuetype MonoTouch.CoreGraphics.CGRect rect, class MonoTouch.UIKit.UIStringAttributes attributes) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="rect" Type="System.Drawing.RectangleF" apistyle="classic" />
          <Parameter Name="attributes" Type="MonoTouch.UIKit.UIStringAttributes" />
          <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="rect">To be added.</param>
          <param name="attributes">To be added.</param>
          <summary>Draws the string in the specified <paramref name="rect" /> and with the specified <paramref name="attributes" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSStringDrawing" Member="M:MonoTouch.UIKit.NSStringDrawing.DrawString(MonoTouch.Foundation.NSString,MonoTouch.CoreGraphics.CGRect,MonoTouch.UIKit.UIStringAttributes)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="GetSizeUsingAttributes">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF GetSizeUsingAttributes (this MonoTouch.Foundation.NSString This, MonoTouch.UIKit.UIStringAttributes attributes);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF GetSizeUsingAttributes(class MonoTouch.Foundation.NSString This, class MonoTouch.UIKit.UIStringAttributes attributes) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGSize GetSizeUsingAttributes (this MonoTouch.Foundation.NSString This, MonoTouch.UIKit.UIStringAttributes attributes);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGSize GetSizeUsingAttributes(class MonoTouch.Foundation.NSString This, class MonoTouch.UIKit.UIStringAttributes attributes) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.SizeF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="attributes" Type="MonoTouch.UIKit.UIStringAttributes" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="attributes">To be added.</param>
          <summary>The SizeF of the string, if rendered with the specified <paramref name="attributes" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSStringDrawing" Member="M:MonoTouch.UIKit.NSStringDrawing.GetSizeUsingAttributes(MonoTouch.Foundation.NSString,MonoTouch.UIKit.UIStringAttributes)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="WeakDrawString">
        <MemberSignature Language="C#" Value="public static void WeakDrawString (this MonoTouch.Foundation.NSString This, System.Drawing.PointF point, MonoTouch.Foundation.NSDictionary attributes);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WeakDrawString(class MonoTouch.Foundation.NSString This, valuetype System.Drawing.PointF point, class MonoTouch.Foundation.NSDictionary attributes) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void WeakDrawString (this MonoTouch.Foundation.NSString This, MonoTouch.CoreGraphics.CGPoint point, MonoTouch.Foundation.NSDictionary attributes);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WeakDrawString(class MonoTouch.Foundation.NSString This, valuetype MonoTouch.CoreGraphics.CGPoint point, class MonoTouch.Foundation.NSDictionary attributes) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="point" Type="System.Drawing.PointF" apistyle="classic" />
          <Parameter Name="attributes" Type="MonoTouch.Foundation.NSDictionary" />
          <Parameter Name="point" Type="MonoTouch.CoreGraphics.CGPoint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="point">To be added.</param>
          <param name="attributes">To be added.</param>
          <summary>Draws the string, in a rectangle that is anchored at <paramref name="point" />, with the specified <paramref name="attributes" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSStringDrawing" Member="M:MonoTouch.UIKit.NSStringDrawing.WeakDrawString(MonoTouch.Foundation.NSString,MonoTouch.CoreGraphics.CGPoint,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="WeakDrawString">
        <MemberSignature Language="C#" Value="public static void WeakDrawString (this MonoTouch.Foundation.NSString This, System.Drawing.RectangleF rect, MonoTouch.Foundation.NSDictionary attributes);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WeakDrawString(class MonoTouch.Foundation.NSString This, valuetype System.Drawing.RectangleF rect, class MonoTouch.Foundation.NSDictionary attributes) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void WeakDrawString (this MonoTouch.Foundation.NSString This, MonoTouch.CoreGraphics.CGRect rect, MonoTouch.Foundation.NSDictionary attributes);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WeakDrawString(class MonoTouch.Foundation.NSString This, valuetype MonoTouch.CoreGraphics.CGRect rect, class MonoTouch.Foundation.NSDictionary attributes) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="rect" Type="System.Drawing.RectangleF" apistyle="classic" />
          <Parameter Name="attributes" Type="MonoTouch.Foundation.NSDictionary" />
          <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="rect">To be added.</param>
          <param name="attributes">To be added.</param>
          <summary>Draws the string—in the rectangle <paramref name="rect" />—with the specified <paramref name="attributes" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSStringDrawing" Member="M:MonoTouch.UIKit.NSStringDrawing.WeakDrawString(MonoTouch.Foundation.NSString,MonoTouch.CoreGraphics.CGRect,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="WeakGetSizeUsingAttributes">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF WeakGetSizeUsingAttributes (this MonoTouch.Foundation.NSString This, MonoTouch.Foundation.NSDictionary attributes);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF WeakGetSizeUsingAttributes(class MonoTouch.Foundation.NSString This, class MonoTouch.Foundation.NSDictionary attributes) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGSize WeakGetSizeUsingAttributes (this MonoTouch.Foundation.NSString This, MonoTouch.Foundation.NSDictionary attributes);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGSize WeakGetSizeUsingAttributes(class MonoTouch.Foundation.NSString This, class MonoTouch.Foundation.NSDictionary attributes) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.SizeF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="attributes" Type="MonoTouch.Foundation.NSDictionary" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="attributes">To be added.</param>
          <summary>Returns the size of the rendered string.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSStringDrawing" Member="M:MonoTouch.UIKit.NSStringDrawing.WeakGetSizeUsingAttributes(MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.INSTextStorageDelegate" />
      </Targets>
      <Member MemberName="DidProcessEditing">
        <MemberSignature Language="C#" Value="public static void DidProcessEditing (this MonoTouch.UIKit.INSTextStorageDelegate This, MonoTouch.UIKit.NSTextStorage textStorage, MonoTouch.UIKit.NSTextStorageEditActions editedMask, MonoTouch.Foundation.NSRange editedRange, int delta);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidProcessEditing(class MonoTouch.UIKit.INSTextStorageDelegate This, class MonoTouch.UIKit.NSTextStorage textStorage, valuetype MonoTouch.UIKit.NSTextStorageEditActions editedMask, valuetype MonoTouch.Foundation.NSRange editedRange, int32 delta) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void DidProcessEditing (this MonoTouch.UIKit.INSTextStorageDelegate This, MonoTouch.UIKit.NSTextStorage textStorage, MonoTouch.UIKit.NSTextStorageEditActions editedMask, MonoTouch.Foundation.NSRange editedRange, nint delta);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidProcessEditing(class MonoTouch.UIKit.INSTextStorageDelegate This, class MonoTouch.UIKit.NSTextStorage textStorage, valuetype MonoTouch.UIKit.NSTextStorageEditActions editedMask, valuetype MonoTouch.Foundation.NSRange editedRange, valuetype System.nint delta) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.INSTextStorageDelegate" RefType="this" />
          <Parameter Name="textStorage" Type="MonoTouch.UIKit.NSTextStorage" />
          <Parameter Name="editedMask" Type="MonoTouch.UIKit.NSTextStorageEditActions" />
          <Parameter Name="editedRange" Type="MonoTouch.Foundation.NSRange" />
          <Parameter Name="delta" Type="System.Int32" apistyle="classic" />
          <Parameter Name="delta" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textStorage">To be added.</param>
          <param name="editedMask">To be added.</param>
          <param name="editedRange">To be added.</param>
          <param name="delta">To be added.</param>
          <summary>Indicates that editing has completed for the specified editedRange.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSTextStorageDelegate_Extensions" Member="M:MonoTouch.UIKit.NSTextStorageDelegate_Extensions.DidProcessEditing(MonoTouch.UIKit.INSTextStorageDelegate,MonoTouch.UIKit.NSTextStorage,MonoTouch.UIKit.NSTextStorageEditActions,MonoTouch.Foundation.NSRange,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.INSTextStorageDelegate" />
      </Targets>
      <Member MemberName="WillProcessEditing">
        <MemberSignature Language="C#" Value="public static void WillProcessEditing (this MonoTouch.UIKit.INSTextStorageDelegate This, MonoTouch.UIKit.NSTextStorage textStorage, MonoTouch.UIKit.NSTextStorageEditActions editedMask, MonoTouch.Foundation.NSRange editedRange, int delta);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillProcessEditing(class MonoTouch.UIKit.INSTextStorageDelegate This, class MonoTouch.UIKit.NSTextStorage textStorage, valuetype MonoTouch.UIKit.NSTextStorageEditActions editedMask, valuetype MonoTouch.Foundation.NSRange editedRange, int32 delta) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void WillProcessEditing (this MonoTouch.UIKit.INSTextStorageDelegate This, MonoTouch.UIKit.NSTextStorage textStorage, MonoTouch.UIKit.NSTextStorageEditActions editedMask, MonoTouch.Foundation.NSRange editedRange, nint delta);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillProcessEditing(class MonoTouch.UIKit.INSTextStorageDelegate This, class MonoTouch.UIKit.NSTextStorage textStorage, valuetype MonoTouch.UIKit.NSTextStorageEditActions editedMask, valuetype MonoTouch.Foundation.NSRange editedRange, valuetype System.nint delta) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.INSTextStorageDelegate" RefType="this" />
          <Parameter Name="textStorage" Type="MonoTouch.UIKit.NSTextStorage" />
          <Parameter Name="editedMask" Type="MonoTouch.UIKit.NSTextStorageEditActions" />
          <Parameter Name="editedRange" Type="MonoTouch.Foundation.NSRange" />
          <Parameter Name="delta" Type="System.Int32" apistyle="classic" />
          <Parameter Name="delta" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textStorage">To be added.</param>
          <param name="editedMask">To be added.</param>
          <param name="editedRange">To be added.</param>
          <param name="delta">To be added.</param>
          <summary>Indicates that processing of the editing on the specified editedRange is about to start.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.NSTextStorageDelegate_Extensions" Member="M:MonoTouch.UIKit.NSTextStorageDelegate_Extensions.WillProcessEditing(MonoTouch.UIKit.INSTextStorageDelegate,MonoTouch.UIKit.NSTextStorage,MonoTouch.UIKit.NSTextStorageEditActions,MonoTouch.Foundation.NSRange,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIViewController" />
      </Targets>
      <Member MemberName="GetTransitionCoordinator">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.IUIViewControllerTransitionCoordinator GetTransitionCoordinator (this MonoTouch.UIKit.UIViewController This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.IUIViewControllerTransitionCoordinator GetTransitionCoordinator(class MonoTouch.UIKit.UIViewController This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.IUIViewControllerTransitionCoordinator</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UIViewController" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>The IUIViewControllerTransitionCoordinator coordinating the transition of the specified UIViewController.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.TransitionCoordinator_UIViewController" Member="M:MonoTouch.UIKit.TransitionCoordinator_UIViewController.GetTransitionCoordinator(MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAccelerometerDelegate" />
      </Targets>
      <Member MemberName="DidAccelerate">
        <MemberSignature Language="C#" Value="public static void DidAccelerate (this MonoTouch.UIKit.IUIAccelerometerDelegate This, MonoTouch.UIKit.UIAccelerometer accelerometer, MonoTouch.UIKit.UIAcceleration acceleration);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidAccelerate(class MonoTouch.UIKit.IUIAccelerometerDelegate This, class MonoTouch.UIKit.UIAccelerometer accelerometer, class MonoTouch.UIKit.UIAcceleration acceleration) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAccelerometerDelegate" RefType="this" />
          <Parameter Name="accelerometer" Type="MonoTouch.UIKit.UIAccelerometer" />
          <Parameter Name="acceleration" Type="MonoTouch.UIKit.UIAcceleration" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="accelerometer">To be added.</param>
          <param name="acceleration">To be added.</param>
          <summary>Indicates that an acceleration measurement has occurred.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAccelerometerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIAccelerometerDelegate_Extensions.DidAccelerate(MonoTouch.UIKit.IUIAccelerometerDelegate,MonoTouch.UIKit.UIAccelerometer,MonoTouch.UIKit.UIAcceleration)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAccessibilityContainer" />
      </Targets>
      <Member MemberName="AccessibilityElementCount">
        <MemberSignature Language="C#" Value="public static int AccessibilityElementCount (this MonoTouch.UIKit.IUIAccessibilityContainer This);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 AccessibilityElementCount(class MonoTouch.UIKit.IUIAccessibilityContainer This) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nint AccessibilityElementCount (this MonoTouch.UIKit.IUIAccessibilityContainer This);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nint AccessibilityElementCount(class MonoTouch.UIKit.IUIAccessibilityContainer This) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Int32</ReturnType>
          <ReturnType apistyle="unified">System.nint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAccessibilityContainer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the number of elements in the accessibility container.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAccessibilityContainer_Extensions" Member="M:MonoTouch.UIKit.UIAccessibilityContainer_Extensions.AccessibilityElementCount(MonoTouch.UIKit.IUIAccessibilityContainer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAccessibilityContainer" />
      </Targets>
      <Member MemberName="GetAccessibilityElementAt">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSObject GetAccessibilityElementAt (this MonoTouch.UIKit.IUIAccessibilityContainer This, int index);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSObject GetAccessibilityElementAt(class MonoTouch.UIKit.IUIAccessibilityContainer This, int32 index) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSObject GetAccessibilityElementAt (this MonoTouch.UIKit.IUIAccessibilityContainer This, nint index);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSObject GetAccessibilityElementAt(class MonoTouch.UIKit.IUIAccessibilityContainer This, valuetype System.nint index) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSObject</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAccessibilityContainer" RefType="this" />
          <Parameter Name="index" Type="System.Int32" apistyle="classic" />
          <Parameter Name="index" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="index">To be added.</param>
          <summary>Returns the element at <paramref name="index" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAccessibilityContainer_Extensions" Member="M:MonoTouch.UIKit.UIAccessibilityContainer_Extensions.GetAccessibilityElementAt(MonoTouch.UIKit.IUIAccessibilityContainer,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAccessibilityContainer" />
      </Targets>
      <Member MemberName="GetAccessibilityElements">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSObject GetAccessibilityElements (this MonoTouch.UIKit.IUIAccessibilityContainer This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSObject GetAccessibilityElements(class MonoTouch.UIKit.IUIAccessibilityContainer This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSObject</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAccessibilityContainer" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the elements in the accessibility container.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAccessibilityContainer_Extensions" Member="M:MonoTouch.UIKit.UIAccessibilityContainer_Extensions.GetAccessibilityElements(MonoTouch.UIKit.IUIAccessibilityContainer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAccessibilityContainer" />
      </Targets>
      <Member MemberName="GetIndexOfAccessibilityElement">
        <MemberSignature Language="C#" Value="public static int GetIndexOfAccessibilityElement (this MonoTouch.UIKit.IUIAccessibilityContainer This, MonoTouch.Foundation.NSObject element);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetIndexOfAccessibilityElement(class MonoTouch.UIKit.IUIAccessibilityContainer This, class MonoTouch.Foundation.NSObject element) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nint GetIndexOfAccessibilityElement (this MonoTouch.UIKit.IUIAccessibilityContainer This, MonoTouch.Foundation.NSObject element);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nint GetIndexOfAccessibilityElement(class MonoTouch.UIKit.IUIAccessibilityContainer This, class MonoTouch.Foundation.NSObject element) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Int32</ReturnType>
          <ReturnType apistyle="unified">System.nint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAccessibilityContainer" RefType="this" />
          <Parameter Name="element" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="element">To be added.</param>
          <summary>Returns the index of <paramref name="element" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAccessibilityContainer_Extensions" Member="M:MonoTouch.UIKit.UIAccessibilityContainer_Extensions.GetIndexOfAccessibilityElement(MonoTouch.UIKit.IUIAccessibilityContainer,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAccessibilityContainer" />
      </Targets>
      <Member MemberName="SetAccessibilityElements">
        <MemberSignature Language="C#" Value="public static void SetAccessibilityElements (this MonoTouch.UIKit.IUIAccessibilityContainer This, MonoTouch.Foundation.NSObject elements);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAccessibilityElements(class MonoTouch.UIKit.IUIAccessibilityContainer This, class MonoTouch.Foundation.NSObject elements) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAccessibilityContainer" RefType="this" />
          <Parameter Name="elements" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="elements">To be added.</param>
          <summary>Assigns <paramref name="elements" /> to the contents of the accessibilty container.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAccessibilityContainer_Extensions" Member="M:MonoTouch.UIKit.UIAccessibilityContainer_Extensions.SetAccessibilityElements(MonoTouch.UIKit.IUIAccessibilityContainer,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIActionSheetDelegate" />
      </Targets>
      <Member MemberName="Canceled">
        <MemberSignature Language="C#" Value="public static void Canceled (this MonoTouch.UIKit.IUIActionSheetDelegate This, MonoTouch.UIKit.UIActionSheet actionSheet);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Canceled(class MonoTouch.UIKit.IUIActionSheetDelegate This, class MonoTouch.UIKit.UIActionSheet actionSheet) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIActionSheetDelegate" RefType="this" />
          <Parameter Name="actionSheet" Type="MonoTouch.UIKit.UIActionSheet" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="actionSheet">To be added.</param>
          <summary>Indicates that the UIActionSheet was canceled.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIActionSheetDelegate_Extensions" Member="M:MonoTouch.UIKit.UIActionSheetDelegate_Extensions.Canceled(MonoTouch.UIKit.IUIActionSheetDelegate,MonoTouch.UIKit.UIActionSheet)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIActionSheetDelegate" />
      </Targets>
      <Member MemberName="Clicked">
        <MemberSignature Language="C#" Value="public static void Clicked (this MonoTouch.UIKit.IUIActionSheetDelegate This, MonoTouch.UIKit.UIActionSheet actionSheet, int buttonIndex);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Clicked(class MonoTouch.UIKit.IUIActionSheetDelegate This, class MonoTouch.UIKit.UIActionSheet actionSheet, int32 buttonIndex) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void Clicked (this MonoTouch.UIKit.IUIActionSheetDelegate This, MonoTouch.UIKit.UIActionSheet actionSheet, nint buttonIndex);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Clicked(class MonoTouch.UIKit.IUIActionSheetDelegate This, class MonoTouch.UIKit.UIActionSheet actionSheet, valuetype System.nint buttonIndex) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIActionSheetDelegate" RefType="this" />
          <Parameter Name="actionSheet" Type="MonoTouch.UIKit.UIActionSheet" />
          <Parameter Name="buttonIndex" Type="System.Int32" apistyle="classic" />
          <Parameter Name="buttonIndex" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="actionSheet">To be added.</param>
          <param name="buttonIndex">To be added.</param>
          <summary>Indicates that the button at the buttonIndex was clicked.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIActionSheetDelegate_Extensions" Member="M:MonoTouch.UIKit.UIActionSheetDelegate_Extensions.Clicked(MonoTouch.UIKit.IUIActionSheetDelegate,MonoTouch.UIKit.UIActionSheet,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIActionSheetDelegate" />
      </Targets>
      <Member MemberName="Dismissed">
        <MemberSignature Language="C#" Value="public static void Dismissed (this MonoTouch.UIKit.IUIActionSheetDelegate This, MonoTouch.UIKit.UIActionSheet actionSheet, int buttonIndex);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Dismissed(class MonoTouch.UIKit.IUIActionSheetDelegate This, class MonoTouch.UIKit.UIActionSheet actionSheet, int32 buttonIndex) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void Dismissed (this MonoTouch.UIKit.IUIActionSheetDelegate This, MonoTouch.UIKit.UIActionSheet actionSheet, nint buttonIndex);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Dismissed(class MonoTouch.UIKit.IUIActionSheetDelegate This, class MonoTouch.UIKit.UIActionSheet actionSheet, valuetype System.nint buttonIndex) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIActionSheetDelegate" RefType="this" />
          <Parameter Name="actionSheet" Type="MonoTouch.UIKit.UIActionSheet" />
          <Parameter Name="buttonIndex" Type="System.Int32" apistyle="classic" />
          <Parameter Name="buttonIndex" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="actionSheet">To be added.</param>
          <param name="buttonIndex">To be added.</param>
          <summary>Indicates that the action was dismissed from the screen due to pushing of the button at buttonIndex.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIActionSheetDelegate_Extensions" Member="M:MonoTouch.UIKit.UIActionSheetDelegate_Extensions.Dismissed(MonoTouch.UIKit.IUIActionSheetDelegate,MonoTouch.UIKit.UIActionSheet,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIActionSheetDelegate" />
      </Targets>
      <Member MemberName="Presented">
        <MemberSignature Language="C#" Value="public static void Presented (this MonoTouch.UIKit.IUIActionSheetDelegate This, MonoTouch.UIKit.UIActionSheet actionSheet);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Presented(class MonoTouch.UIKit.IUIActionSheetDelegate This, class MonoTouch.UIKit.UIActionSheet actionSheet) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIActionSheetDelegate" RefType="this" />
          <Parameter Name="actionSheet" Type="MonoTouch.UIKit.UIActionSheet" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="actionSheet">To be added.</param>
          <summary>Indicates that the action sheet was presented to the user.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIActionSheetDelegate_Extensions" Member="M:MonoTouch.UIKit.UIActionSheetDelegate_Extensions.Presented(MonoTouch.UIKit.IUIActionSheetDelegate,MonoTouch.UIKit.UIActionSheet)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIActionSheetDelegate" />
      </Targets>
      <Member MemberName="WillDismiss">
        <MemberSignature Language="C#" Value="public static void WillDismiss (this MonoTouch.UIKit.IUIActionSheetDelegate This, MonoTouch.UIKit.UIActionSheet actionSheet, int buttonIndex);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillDismiss(class MonoTouch.UIKit.IUIActionSheetDelegate This, class MonoTouch.UIKit.UIActionSheet actionSheet, int32 buttonIndex) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void WillDismiss (this MonoTouch.UIKit.IUIActionSheetDelegate This, MonoTouch.UIKit.UIActionSheet actionSheet, nint buttonIndex);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillDismiss(class MonoTouch.UIKit.IUIActionSheetDelegate This, class MonoTouch.UIKit.UIActionSheet actionSheet, valuetype System.nint buttonIndex) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIActionSheetDelegate" RefType="this" />
          <Parameter Name="actionSheet" Type="MonoTouch.UIKit.UIActionSheet" />
          <Parameter Name="buttonIndex" Type="System.Int32" apistyle="classic" />
          <Parameter Name="buttonIndex" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="actionSheet">To be added.</param>
          <param name="buttonIndex">To be added.</param>
          <summary>Indicates that the action sheet will shortly be dismissed due to pushing of the button at buttonIndex.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIActionSheetDelegate_Extensions" Member="M:MonoTouch.UIKit.UIActionSheetDelegate_Extensions.WillDismiss(MonoTouch.UIKit.IUIActionSheetDelegate,MonoTouch.UIKit.UIActionSheet,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIActionSheetDelegate" />
      </Targets>
      <Member MemberName="WillPresent">
        <MemberSignature Language="C#" Value="public static void WillPresent (this MonoTouch.UIKit.IUIActionSheetDelegate This, MonoTouch.UIKit.UIActionSheet actionSheet);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillPresent(class MonoTouch.UIKit.IUIActionSheetDelegate This, class MonoTouch.UIKit.UIActionSheet actionSheet) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIActionSheetDelegate" RefType="this" />
          <Parameter Name="actionSheet" Type="MonoTouch.UIKit.UIActionSheet" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="actionSheet">To be added.</param>
          <summary>Indicates that the action sheet is about to be presented.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIActionSheetDelegate_Extensions" Member="M:MonoTouch.UIKit.UIActionSheetDelegate_Extensions.WillPresent(MonoTouch.UIKit.IUIActionSheetDelegate,MonoTouch.UIKit.UIActionSheet)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIActivityItemSource" />
      </Targets>
      <Member MemberName="GetDataTypeIdentifierForActivity">
        <MemberSignature Language="C#" Value="public static string GetDataTypeIdentifierForActivity (this MonoTouch.UIKit.IUIActivityItemSource This, MonoTouch.UIKit.UIActivityViewController activityViewController, MonoTouch.Foundation.NSString activityType);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDataTypeIdentifierForActivity(class MonoTouch.UIKit.IUIActivityItemSource This, class MonoTouch.UIKit.UIActivityViewController activityViewController, class MonoTouch.Foundation.NSString activityType) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIActivityItemSource" RefType="this" />
          <Parameter Name="activityViewController" Type="MonoTouch.UIKit.UIActivityViewController" />
          <Parameter Name="activityType" Type="MonoTouch.Foundation.NSString" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="activityViewController">To be added.</param>
          <param name="activityType">To be added.</param>
          <summary>If the specified  provides NSData, this method returns the Uniform Type Identifier (UTI) of the item.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIActivityItemSource_Extensions" Member="M:MonoTouch.UIKit.UIActivityItemSource_Extensions.GetDataTypeIdentifierForActivity(MonoTouch.UIKit.IUIActivityItemSource,MonoTouch.UIKit.UIActivityViewController,MonoTouch.Foundation.NSString)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIActivityItemSource" />
      </Targets>
      <Member MemberName="GetSubjectForActivity">
        <MemberSignature Language="C#" Value="public static string GetSubjectForActivity (this MonoTouch.UIKit.IUIActivityItemSource This, MonoTouch.UIKit.UIActivityViewController activityViewController, MonoTouch.Foundation.NSString activityType);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetSubjectForActivity(class MonoTouch.UIKit.IUIActivityItemSource This, class MonoTouch.UIKit.UIActivityViewController activityViewController, class MonoTouch.Foundation.NSString activityType) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIActivityItemSource" RefType="this" />
          <Parameter Name="activityViewController" Type="MonoTouch.UIKit.UIActivityViewController" />
          <Parameter Name="activityType" Type="MonoTouch.Foundation.NSString" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="activityViewController">To be added.</param>
          <param name="activityType">To be added.</param>
          <summary>Returns the subject for the specified  .</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIActivityItemSource_Extensions" Member="M:MonoTouch.UIKit.UIActivityItemSource_Extensions.GetSubjectForActivity(MonoTouch.UIKit.IUIActivityItemSource,MonoTouch.UIKit.UIActivityViewController,MonoTouch.Foundation.NSString)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIActivityItemSource" />
      </Targets>
      <Member MemberName="GetThumbnailImageForActivity">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIImage GetThumbnailImageForActivity (this MonoTouch.UIKit.IUIActivityItemSource This, MonoTouch.UIKit.UIActivityViewController activityViewController, MonoTouch.Foundation.NSString activityType, System.Drawing.SizeF suggestedSize);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UIImage GetThumbnailImageForActivity(class MonoTouch.UIKit.IUIActivityItemSource This, class MonoTouch.UIKit.UIActivityViewController activityViewController, class MonoTouch.Foundation.NSString activityType, valuetype System.Drawing.SizeF suggestedSize) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIImage GetThumbnailImageForActivity (this MonoTouch.UIKit.IUIActivityItemSource This, MonoTouch.UIKit.UIActivityViewController activityViewController, MonoTouch.Foundation.NSString activityType, MonoTouch.CoreGraphics.CGSize suggestedSize);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UIImage GetThumbnailImageForActivity(class MonoTouch.UIKit.IUIActivityItemSource This, class MonoTouch.UIKit.UIActivityViewController activityViewController, class MonoTouch.Foundation.NSString activityType, valuetype MonoTouch.CoreGraphics.CGSize suggestedSize) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIImage</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIActivityItemSource" RefType="this" />
          <Parameter Name="activityViewController" Type="MonoTouch.UIKit.UIActivityViewController" />
          <Parameter Name="activityType" Type="MonoTouch.Foundation.NSString" />
          <Parameter Name="suggestedSize" Type="System.Drawing.SizeF" apistyle="classic" />
          <Parameter Name="suggestedSize" Type="MonoTouch.CoreGraphics.CGSize" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="activityViewController">To be added.</param>
          <param name="activityType">To be added.</param>
          <param name="suggestedSize">To be added.</param>
          <summary>Returns the preview image for the specified .</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIActivityItemSource_Extensions" Member="M:MonoTouch.UIKit.UIActivityItemSource_Extensions.GetThumbnailImageForActivity(MonoTouch.UIKit.IUIActivityItemSource,MonoTouch.UIKit.UIActivityViewController,MonoTouch.Foundation.NSString,MonoTouch.CoreGraphics.CGSize)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAdaptivePresentationControllerDelegate" />
      </Targets>
      <Member MemberName="GetAdaptivePresentationStyle">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIModalPresentationStyle GetAdaptivePresentationStyle (this MonoTouch.UIKit.IUIAdaptivePresentationControllerDelegate This, MonoTouch.UIKit.UIPresentationController forPresentationController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.UIKit.UIModalPresentationStyle GetAdaptivePresentationStyle(class MonoTouch.UIKit.IUIAdaptivePresentationControllerDelegate This, class MonoTouch.UIKit.UIPresentationController forPresentationController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIModalPresentationStyle</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAdaptivePresentationControllerDelegate" RefType="this" />
          <Parameter Name="forPresentationController" Type="MonoTouch.UIKit.UIPresentationController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="forPresentationController">To be added.</param>
          <summary>Returns the new presentation style to use after a change to the <paramref name="forPresentationController" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAdaptivePresentationControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIAdaptivePresentationControllerDelegate_Extensions.GetAdaptivePresentationStyle(MonoTouch.UIKit.IUIAdaptivePresentationControllerDelegate,MonoTouch.UIKit.UIPresentationController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAdaptivePresentationControllerDelegate" />
      </Targets>
      <Member MemberName="GetAdaptivePresentationStyle">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIModalPresentationStyle GetAdaptivePresentationStyle (this MonoTouch.UIKit.IUIAdaptivePresentationControllerDelegate This, MonoTouch.UIKit.UIPresentationController controller, MonoTouch.UIKit.UITraitCollection traitCollection);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.UIKit.UIModalPresentationStyle GetAdaptivePresentationStyle(class MonoTouch.UIKit.IUIAdaptivePresentationControllerDelegate This, class MonoTouch.UIKit.UIPresentationController controller, class MonoTouch.UIKit.UITraitCollection traitCollection) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIModalPresentationStyle</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAdaptivePresentationControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIPresentationController" />
          <Parameter Name="traitCollection" Type="MonoTouch.UIKit.UITraitCollection" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="traitCollection">To be added.</param>
          <summary>The presentation style to use for the specified <paramref name="controller" /> and <paramref name="traitCollection" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAdaptivePresentationControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIAdaptivePresentationControllerDelegate_Extensions.GetAdaptivePresentationStyle(MonoTouch.UIKit.IUIAdaptivePresentationControllerDelegate,MonoTouch.UIKit.UIPresentationController,MonoTouch.UIKit.UITraitCollection)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAdaptivePresentationControllerDelegate" />
      </Targets>
      <Member MemberName="GetViewControllerForAdaptivePresentation">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIViewController GetViewControllerForAdaptivePresentation (this MonoTouch.UIKit.IUIAdaptivePresentationControllerDelegate This, MonoTouch.UIKit.UIPresentationController controller, MonoTouch.UIKit.UIModalPresentationStyle style);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UIViewController GetViewControllerForAdaptivePresentation(class MonoTouch.UIKit.IUIAdaptivePresentationControllerDelegate This, class MonoTouch.UIKit.UIPresentationController controller, valuetype MonoTouch.UIKit.UIModalPresentationStyle style) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIViewController</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAdaptivePresentationControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIPresentationController" />
          <Parameter Name="style" Type="MonoTouch.UIKit.UIModalPresentationStyle" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="style">To be added.</param>
          <summary>The view controller to use for the specified <paramref name="style" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAdaptivePresentationControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIAdaptivePresentationControllerDelegate_Extensions.GetViewControllerForAdaptivePresentation(MonoTouch.UIKit.IUIAdaptivePresentationControllerDelegate,MonoTouch.UIKit.UIPresentationController,MonoTouch.UIKit.UIModalPresentationStyle)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAdaptivePresentationControllerDelegate" />
      </Targets>
      <Member MemberName="WillPresent">
        <MemberSignature Language="C#" Value="public static void WillPresent (this MonoTouch.UIKit.IUIAdaptivePresentationControllerDelegate This, MonoTouch.UIKit.UIPresentationController presentationController, MonoTouch.UIKit.UIModalPresentationStyle style, MonoTouch.UIKit.IUIViewControllerTransitionCoordinator transitionCoordinator);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillPresent(class MonoTouch.UIKit.IUIAdaptivePresentationControllerDelegate This, class MonoTouch.UIKit.UIPresentationController presentationController, valuetype MonoTouch.UIKit.UIModalPresentationStyle style, class MonoTouch.UIKit.IUIViewControllerTransitionCoordinator transitionCoordinator) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAdaptivePresentationControllerDelegate" RefType="this" />
          <Parameter Name="presentationController" Type="MonoTouch.UIKit.UIPresentationController" />
          <Parameter Name="style" Type="MonoTouch.UIKit.UIModalPresentationStyle" />
          <Parameter Name="transitionCoordinator" Type="MonoTouch.UIKit.IUIViewControllerTransitionCoordinator" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="presentationController">To be added.</param>
          <param name="style">To be added.</param>
          <param name="transitionCoordinator">To be added.</param>
          <summary>Called prior to presentation.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAdaptivePresentationControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIAdaptivePresentationControllerDelegate_Extensions.WillPresent(MonoTouch.UIKit.IUIAdaptivePresentationControllerDelegate,MonoTouch.UIKit.UIPresentationController,MonoTouch.UIKit.UIModalPresentationStyle,MonoTouch.UIKit.IUIViewControllerTransitionCoordinator)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAlertViewDelegate" />
      </Targets>
      <Member MemberName="Canceled">
        <MemberSignature Language="C#" Value="public static void Canceled (this MonoTouch.UIKit.IUIAlertViewDelegate This, MonoTouch.UIKit.UIAlertView alertView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Canceled(class MonoTouch.UIKit.IUIAlertViewDelegate This, class MonoTouch.UIKit.UIAlertView alertView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAlertViewDelegate" RefType="this" />
          <Parameter Name="alertView" Type="MonoTouch.UIKit.UIAlertView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="alertView">To be added.</param>
          <summary>Indicates that this UIAlertView is about to be canceled.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAlertViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIAlertViewDelegate_Extensions.Canceled(MonoTouch.UIKit.IUIAlertViewDelegate,MonoTouch.UIKit.UIAlertView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAlertViewDelegate" />
      </Targets>
      <Member MemberName="Clicked">
        <MemberSignature Language="C#" Value="public static void Clicked (this MonoTouch.UIKit.IUIAlertViewDelegate This, MonoTouch.UIKit.UIAlertView alertview, int buttonIndex);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Clicked(class MonoTouch.UIKit.IUIAlertViewDelegate This, class MonoTouch.UIKit.UIAlertView alertview, int32 buttonIndex) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void Clicked (this MonoTouch.UIKit.IUIAlertViewDelegate This, MonoTouch.UIKit.UIAlertView alertview, nint buttonIndex);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Clicked(class MonoTouch.UIKit.IUIAlertViewDelegate This, class MonoTouch.UIKit.UIAlertView alertview, valuetype System.nint buttonIndex) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAlertViewDelegate" RefType="this" />
          <Parameter Name="alertview" Type="MonoTouch.UIKit.UIAlertView" />
          <Parameter Name="buttonIndex" Type="System.Int32" apistyle="classic" />
          <Parameter Name="buttonIndex" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="alertview">To be added.</param>
          <param name="buttonIndex">To be added.</param>
          <summary>Indicates that the user has clicked a button in this UIAlertView.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAlertViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIAlertViewDelegate_Extensions.Clicked(MonoTouch.UIKit.IUIAlertViewDelegate,MonoTouch.UIKit.UIAlertView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAlertViewDelegate" />
      </Targets>
      <Member MemberName="Dismissed">
        <MemberSignature Language="C#" Value="public static void Dismissed (this MonoTouch.UIKit.IUIAlertViewDelegate This, MonoTouch.UIKit.UIAlertView alertView, int buttonIndex);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Dismissed(class MonoTouch.UIKit.IUIAlertViewDelegate This, class MonoTouch.UIKit.UIAlertView alertView, int32 buttonIndex) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void Dismissed (this MonoTouch.UIKit.IUIAlertViewDelegate This, MonoTouch.UIKit.UIAlertView alertView, nint buttonIndex);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Dismissed(class MonoTouch.UIKit.IUIAlertViewDelegate This, class MonoTouch.UIKit.UIAlertView alertView, valuetype System.nint buttonIndex) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAlertViewDelegate" RefType="this" />
          <Parameter Name="alertView" Type="MonoTouch.UIKit.UIAlertView" />
          <Parameter Name="buttonIndex" Type="System.Int32" apistyle="classic" />
          <Parameter Name="buttonIndex" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="alertView">To be added.</param>
          <param name="buttonIndex">To be added.</param>
          <summary>Indicates that this UIAlertView has been dismissed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAlertViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIAlertViewDelegate_Extensions.Dismissed(MonoTouch.UIKit.IUIAlertViewDelegate,MonoTouch.UIKit.UIAlertView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAlertViewDelegate" />
      </Targets>
      <Member MemberName="Presented">
        <MemberSignature Language="C#" Value="public static void Presented (this MonoTouch.UIKit.IUIAlertViewDelegate This, MonoTouch.UIKit.UIAlertView alertView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Presented(class MonoTouch.UIKit.IUIAlertViewDelegate This, class MonoTouch.UIKit.UIAlertView alertView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAlertViewDelegate" RefType="this" />
          <Parameter Name="alertView" Type="MonoTouch.UIKit.UIAlertView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="alertView">To be added.</param>
          <summary>Indicates that this UIAlertView has been presented to the application user.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAlertViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIAlertViewDelegate_Extensions.Presented(MonoTouch.UIKit.IUIAlertViewDelegate,MonoTouch.UIKit.UIAlertView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAlertViewDelegate" />
      </Targets>
      <Member MemberName="ShouldEnableFirstOtherButton">
        <MemberSignature Language="C#" Value="public static bool ShouldEnableFirstOtherButton (this MonoTouch.UIKit.IUIAlertViewDelegate This, MonoTouch.UIKit.UIAlertView alertView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldEnableFirstOtherButton(class MonoTouch.UIKit.IUIAlertViewDelegate This, class MonoTouch.UIKit.UIAlertView alertView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAlertViewDelegate" RefType="this" />
          <Parameter Name="alertView" Type="MonoTouch.UIKit.UIAlertView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="alertView">To be added.</param>
          <summary>Whether the first non-cancel button in this UIAlertView should be enabled.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAlertViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIAlertViewDelegate_Extensions.ShouldEnableFirstOtherButton(MonoTouch.UIKit.IUIAlertViewDelegate,MonoTouch.UIKit.UIAlertView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAlertViewDelegate" />
      </Targets>
      <Member MemberName="WillDismiss">
        <MemberSignature Language="C#" Value="public static void WillDismiss (this MonoTouch.UIKit.IUIAlertViewDelegate This, MonoTouch.UIKit.UIAlertView alertView, int buttonIndex);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillDismiss(class MonoTouch.UIKit.IUIAlertViewDelegate This, class MonoTouch.UIKit.UIAlertView alertView, int32 buttonIndex) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void WillDismiss (this MonoTouch.UIKit.IUIAlertViewDelegate This, MonoTouch.UIKit.UIAlertView alertView, nint buttonIndex);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillDismiss(class MonoTouch.UIKit.IUIAlertViewDelegate This, class MonoTouch.UIKit.UIAlertView alertView, valuetype System.nint buttonIndex) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAlertViewDelegate" RefType="this" />
          <Parameter Name="alertView" Type="MonoTouch.UIKit.UIAlertView" />
          <Parameter Name="buttonIndex" Type="System.Int32" apistyle="classic" />
          <Parameter Name="buttonIndex" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="alertView">To be added.</param>
          <param name="buttonIndex">To be added.</param>
          <summary>Indicates that this UIAlertView will shortly be dismissed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAlertViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIAlertViewDelegate_Extensions.WillDismiss(MonoTouch.UIKit.IUIAlertViewDelegate,MonoTouch.UIKit.UIAlertView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIAlertViewDelegate" />
      </Targets>
      <Member MemberName="WillPresent">
        <MemberSignature Language="C#" Value="public static void WillPresent (this MonoTouch.UIKit.IUIAlertViewDelegate This, MonoTouch.UIKit.UIAlertView alertView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillPresent(class MonoTouch.UIKit.IUIAlertViewDelegate This, class MonoTouch.UIKit.UIAlertView alertView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIAlertViewDelegate" RefType="this" />
          <Parameter Name="alertView" Type="MonoTouch.UIKit.UIAlertView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="alertView">To be added.</param>
          <summary>Indicates that this UIAlertView will shortly be presented to the application user.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIAlertViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIAlertViewDelegate_Extensions.WillPresent(MonoTouch.UIKit.IUIAlertViewDelegate,MonoTouch.UIKit.UIAlertView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="AccessibilityPerformMagicTap">
        <MemberSignature Language="C#" Value="public static bool AccessibilityPerformMagicTap (this MonoTouch.UIKit.IUIApplicationDelegate This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AccessibilityPerformMagicTap(class MonoTouch.UIKit.IUIApplicationDelegate This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <summary>Performs the most important action of the app. Often, this is toggling the most important state of the app.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.AccessibilityPerformMagicTap(MonoTouch.UIKit.IUIApplicationDelegate)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="ApplicationSignificantTimeChange">
        <MemberSignature Language="C#" Value="public static void ApplicationSignificantTimeChange (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ApplicationSignificantTimeChange(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <summary>Indicates a significant change in time, such as midnight, change to Daylight Savings, or a shift in timezone.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.ApplicationSignificantTimeChange(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="ChangedStatusBarFrame">
        <MemberSignature Language="C#" Value="public static void ChangedStatusBarFrame (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, System.Drawing.RectangleF oldStatusBarFrame);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangedStatusBarFrame(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, valuetype System.Drawing.RectangleF oldStatusBarFrame) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void ChangedStatusBarFrame (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.CoreGraphics.CGRect oldStatusBarFrame);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangedStatusBarFrame(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, valuetype MonoTouch.CoreGraphics.CGRect oldStatusBarFrame) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="oldStatusBarFrame" Type="System.Drawing.RectangleF" apistyle="classic" />
          <Parameter Name="oldStatusBarFrame" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <param name="oldStatusBarFrame">The status bar's previous Frame.</param>
          <summary>Indicates that the frame of the status bar has changed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.ChangedStatusBarFrame(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="ContinueUserActivity">
        <MemberSignature Language="C#" Value="public static bool ContinueUserActivity (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.Foundation.NSUserActivity userActivity, MonoTouch.UIKit.UIApplicationRestorationHandler completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContinueUserActivity(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.Foundation.NSUserActivity userActivity, class MonoTouch.UIKit.UIApplicationRestorationHandler completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="userActivity" Type="MonoTouch.Foundation.NSUserActivity" />
          <Parameter Name="completionHandler" Type="MonoTouch.UIKit.UIApplicationRestorationHandler">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDUIApplicationRestorationHandler))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">The  singleton.</param>
          <param name="userActivity">The user activity identifier.</param>
          <param name="completionHandler">System-provided callback that can be called with appropriate  or  objects.</param>
          <summary>Informs the app that there is data associated with continuing a task specified as a <see cref="T:MonoTouch.Foundation.NSUserActivity" /> object, and then returns whether the app continued the activity.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.ContinueUserActivity(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.Foundation.NSUserActivity,MonoTouch.UIKit.UIApplicationRestorationHandler)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="DidChangeStatusBarOrientation">
        <MemberSignature Language="C#" Value="public static void DidChangeStatusBarOrientation (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.UIKit.UIInterfaceOrientation oldStatusBarOrientation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidChangeStatusBarOrientation(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, valuetype MonoTouch.UIKit.UIInterfaceOrientation oldStatusBarOrientation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="oldStatusBarOrientation" Type="MonoTouch.UIKit.UIInterfaceOrientation" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <param name="oldStatusBarOrientation">The status bar's previous orientation.</param>
          <summary>Indicates that the orientation of the status bar has changed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.DidChangeStatusBarOrientation(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.UIKit.UIInterfaceOrientation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="DidDecodeRestorableState">
        <MemberSignature Language="C#" Value="public static void DidDecodeRestorableState (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.Foundation.NSCoder coder);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDecodeRestorableState(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.Foundation.NSCoder coder) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <param name="coder">To be added.</param>
          <summary>Indicates that the app should restore highest-level state.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.DidDecodeRestorableState(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.Foundation.NSCoder)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="DidEnterBackground">
        <MemberSignature Language="C#" Value="public static void DidEnterBackground (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidEnterBackground(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <summary>Indicates that the application has entered the background.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.DidEnterBackground(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="DidFailToContinueUserActivitiy">
        <MemberSignature Language="C#" Value="public static void DidFailToContinueUserActivitiy (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, string userActivityType, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFailToContinueUserActivitiy(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, string userActivityType, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="userActivityType" Type="System.String" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">To be added.</param>
          <param name="userActivityType">To be added.</param>
          <param name="error">To be added.</param>
          <summary>Informs the app that the activity of the <paramref name="userActivityType" /> type could not be continued, and specifies a <paramref name="error" /> as the reason for the failure.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.DidFailToContinueUserActivitiy(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,System.String,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="DidReceiveRemoteNotification">
        <MemberSignature Language="C#" Value="public static void DidReceiveRemoteNotification (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.Foundation.NSDictionary userInfo, Action&lt;MonoTouch.UIKit.UIBackgroundFetchResult&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveRemoteNotification(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.Foundation.NSDictionary userInfo, class System.Action`1&lt;valuetype MonoTouch.UIKit.UIBackgroundFetchResult&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="userInfo" Type="MonoTouch.Foundation.NSDictionary" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.UIKit.UIBackgroundFetchResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V4))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Handle to the UIApplication.</param>
          <param name="userInfo">To be added.</param>
          <param name="completionHandler">Callback to invoke to notify the operating system of the result of the background fetch operation.</param>
          <summary>Indicates that the app received a remote notification.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.DidReceiveRemoteNotification(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.Foundation.NSDictionary,System.Action{MonoTouch.UIKit.UIBackgroundFetchResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="DidRegisterUserNotificationSettings">
        <MemberSignature Language="C#" Value="public static void DidRegisterUserNotificationSettings (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.UIKit.UIUserNotificationSettings notificationSettings);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidRegisterUserNotificationSettings(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.UIKit.UIUserNotificationSettings notificationSettings) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="notificationSettings" Type="MonoTouch.UIKit.UIUserNotificationSettings" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">To be added.</param>
          <param name="notificationSettings">To be added.</param>
          <summary>Informs the app of the type of notifications it can use, as a <see cref="T:MonoTouch.UIKit.UIUserNotificationSettings" /> object.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.DidRegisterUserNotificationSettings(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.UIKit.UIUserNotificationSettings)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="FailedToRegisterForRemoteNotifications">
        <MemberSignature Language="C#" Value="public static void FailedToRegisterForRemoteNotifications (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FailedToRegisterForRemoteNotifications(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <param name="error">To be added.</param>
          <summary>Indicates that Apple Push Service did not successfully compete the registration process.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.FailedToRegisterForRemoteNotifications(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="FinishedLaunching">
        <MemberSignature Language="C#" Value="public static void FinishedLaunching (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FinishedLaunching(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <summary>The application has finished launching.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.FinishedLaunching(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="FinishedLaunching">
        <MemberSignature Language="C#" Value="public static bool FinishedLaunching (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.Foundation.NSDictionary launchOptions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool FinishedLaunching(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.Foundation.NSDictionary launchOptions) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="launchOptions" Type="MonoTouch.Foundation.NSDictionary" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <param name="launchOptions">An NSDictionary with the launch options, can be null.   Possible key values are UIApplication's LaunchOption static properties.</param>
          <summary>Indicates that launching has finished and the app will shortly begin running.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.FinishedLaunching(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="GetSupportedInterfaceOrientations">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIInterfaceOrientationMask GetSupportedInterfaceOrientations (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.UIKit.UIWindow forWindow);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.UIKit.UIInterfaceOrientationMask GetSupportedInterfaceOrientations(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.UIKit.UIWindow forWindow) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIInterfaceOrientationMask</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="forWindow" Type="MonoTouch.UIKit.UIWindow">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.Transient</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <param name="forWindow">To be added.</param>
          <summary>The interface orientations supported by the app.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.GetSupportedInterfaceOrientations(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.UIKit.UIWindow)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="GetViewController">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIViewController GetViewController (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, string[] restorationIdentifierComponents, MonoTouch.Foundation.NSCoder coder);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UIViewController GetViewController(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, string[] restorationIdentifierComponents, class MonoTouch.Foundation.NSCoder coder) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIViewController</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="restorationIdentifierComponents" Type="System.String[]" />
          <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <param name="restorationIdentifierComponents">An array of identifiers that identify the path to the desired view controller, which should be last.</param>
          <param name="coder">To be added.</param>
          <summary>Retrieves the UIViewController identified by the last value in the restorationIdentifierComponents parameter.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.GetViewController(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,System.String[],MonoTouch.Foundation.NSCoder)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="GetWindow">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIWindow GetWindow (this MonoTouch.UIKit.IUIApplicationDelegate This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UIWindow GetWindow(class MonoTouch.UIKit.IUIApplicationDelegate This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIWindow</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.GetWindow(MonoTouch.UIKit.IUIApplicationDelegate)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="HandleAction">
        <MemberSignature Language="C#" Value="public static void HandleAction (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, string actionIdentifier, MonoTouch.Foundation.NSDictionary remoteNotificationInfo, MonoTouch.Foundation.NSDictionary responseInfo, Action completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleAction(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, string actionIdentifier, class MonoTouch.Foundation.NSDictionary remoteNotificationInfo, class MonoTouch.Foundation.NSDictionary responseInfo, class System.Action completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="actionIdentifier" Type="System.String" />
          <Parameter Name="remoteNotificationInfo" Type="MonoTouch.Foundation.NSDictionary" />
          <Parameter Name="responseInfo" Type="MonoTouch.Foundation.NSDictionary" />
          <Parameter Name="completionHandler" Type="System.Action">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDAction))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">To be added.</param>
          <param name="actionIdentifier">To be added.</param>
          <param name="remoteNotificationInfo">To be added.</param>
          <param name="responseInfo">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>Informs the app of a custom action to perform based on a remote notification, and includes the <paramref name="actionIdentifier" /> value, <paramref name="remoteNoticationInfo" /> data from the notification, and <paramref name="completionHandler" /> for the app developer to run after performing the action.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.HandleAction(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,System.String,MonoTouch.Foundation.NSDictionary,MonoTouch.Foundation.NSDictionary,System.Action)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="HandleAction">
        <MemberSignature Language="C#" Value="public static void HandleAction (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, string actionIdentifier, MonoTouch.Foundation.NSDictionary remoteNotificationInfo, Action completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleAction(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, string actionIdentifier, class MonoTouch.Foundation.NSDictionary remoteNotificationInfo, class System.Action completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="actionIdentifier" Type="System.String" />
          <Parameter Name="remoteNotificationInfo" Type="MonoTouch.Foundation.NSDictionary" />
          <Parameter Name="completionHandler" Type="System.Action">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDAction))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">To be added.</param>
          <param name="actionIdentifier">To be added.</param>
          <param name="remoteNotificationInfo">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>Informs the app of a custom action to perform based on a push notification, and includes the <paramref name="actionIdentifier" /> value, <paramref name="remoteNoticationInfo" /> data from the notification, and <paramref name="completionHandler" /> for the app developer to run after performing the action.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.HandleAction(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,System.String,MonoTouch.Foundation.NSDictionary,System.Action)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="HandleAction">
        <MemberSignature Language="C#" Value="public static void HandleAction (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, string actionIdentifier, MonoTouch.UIKit.UILocalNotification localNotification, MonoTouch.Foundation.NSDictionary responseInfo, Action completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleAction(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, string actionIdentifier, class MonoTouch.UIKit.UILocalNotification localNotification, class MonoTouch.Foundation.NSDictionary responseInfo, class System.Action completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="actionIdentifier" Type="System.String" />
          <Parameter Name="localNotification" Type="MonoTouch.UIKit.UILocalNotification" />
          <Parameter Name="responseInfo" Type="MonoTouch.Foundation.NSDictionary" />
          <Parameter Name="completionHandler" Type="System.Action">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDAction))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">To be added.</param>
          <param name="actionIdentifier">To be added.</param>
          <param name="localNotification">To be added.</param>
          <param name="responseInfo">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>Informs the app of a custom action to perform based on a local notification, and includes the <paramref name="actionIdentifier" /> value, <paramref name="responseInfo" /> data from the notification, and <paramref name="completionHandler" /> for the app developer to run after performing the action.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.HandleAction(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,System.String,MonoTouch.UIKit.UILocalNotification,MonoTouch.Foundation.NSDictionary,System.Action)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="HandleAction">
        <MemberSignature Language="C#" Value="public static void HandleAction (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, string actionIdentifier, MonoTouch.UIKit.UILocalNotification localNotification, Action completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleAction(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, string actionIdentifier, class MonoTouch.UIKit.UILocalNotification localNotification, class System.Action completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="actionIdentifier" Type="System.String" />
          <Parameter Name="localNotification" Type="MonoTouch.UIKit.UILocalNotification" />
          <Parameter Name="completionHandler" Type="System.Action">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDAction))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">To be added.</param>
          <param name="actionIdentifier">To be added.</param>
          <param name="localNotification">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>Informs the app that the user selected an action identified by the <paramref name="actionIdentifier" /> value from an alert of a <see cref="T:MonoTouch.UIKit.UILocalNotification" /> object, and executes the <paramref name="completionHandler" /> block after it completes the action.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.HandleAction(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,System.String,MonoTouch.UIKit.UILocalNotification,System.Action)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="HandleEventsForBackgroundUrl" apistyle="unified">
        <MemberSignature Language="C#" Value="public static void HandleEventsForBackgroundUrl (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, string sessionIdentifier, Action completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleEventsForBackgroundUrl(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, string sessionIdentifier, class System.Action completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="sessionIdentifier" Type="System.String" />
          <Parameter Name="completionHandler" Type="System.Action">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDAction))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">To be added.</param>
          <param name="sessionIdentifier">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>Raised when events relating to a background <see cref="T:MonoTouch.UIKit.NSUrlSession" /> are waiting to be processed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.HandleEventsForBackgroundUrl(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,System.String,System.Action)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="HandleOpenURL">
        <MemberSignature Language="C#" Value="public static bool HandleOpenURL (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.Foundation.NSUrl url);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HandleOpenURL(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.Foundation.NSUrl url) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <param name="url">To be added.</param>
          <summary>Developers should use <see cref="M:MonoTouch.UIKit.UIApplicationDelegate.OpenUrl" /> rather than this deprecated method.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.HandleOpenURL(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.Foundation.NSUrl)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="HandleWatchKitExtensionRequest">
        <MemberSignature Language="C#" Value="public static void HandleWatchKitExtensionRequest (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.Foundation.NSDictionary userInfo, Action&lt;MonoTouch.Foundation.NSDictionary&gt; reply);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HandleWatchKitExtensionRequest(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.Foundation.NSDictionary userInfo, class System.Action`1&lt;class MonoTouch.Foundation.NSDictionary&gt; reply) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="userInfo" Type="MonoTouch.Foundation.NSDictionary" />
          <Parameter Name="reply" Type="System.Action&lt;MonoTouch.Foundation.NSDictionary&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V10))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">To be added.</param>
          <param name="userInfo">To be added.</param>
          <param name="reply">To be added.</param>
          <summary>A watchkit extension has made a request.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.HandleWatchKitExtensionRequest(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.Foundation.NSDictionary,System.Action{MonoTouch.Foundation.NSDictionary})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="OnActivated">
        <MemberSignature Language="C#" Value="public static void OnActivated (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OnActivated(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <summary>The app has moved from the inactive to actie state.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.OnActivated(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="OnResignActivation">
        <MemberSignature Language="C#" Value="public static void OnResignActivation (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OnResignActivation(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <summary>The app is about to move from the active state to the inactive state.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.OnResignActivation(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="OpenUrl">
        <MemberSignature Language="C#" Value="public static bool OpenUrl (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication app, MonoTouch.Foundation.NSUrl url, MonoTouch.Foundation.NSDictionary options);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool OpenUrl(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication app, class MonoTouch.Foundation.NSUrl url, class MonoTouch.Foundation.NSDictionary options) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="app" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="options" Type="MonoTouch.Foundation.NSDictionary" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="app">To be added.</param>
          <param name="url">To be added.</param>
          <param name="options">To be added.</param>
          <summary>Indicates that the application should open the specified <paramref name="url" /> with context from <paramref name="options" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.OpenUrl(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="OpenUrl">
        <MemberSignature Language="C#" Value="public static bool OpenUrl (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.Foundation.NSUrl url, string sourceApplication, MonoTouch.Foundation.NSObject annotation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool OpenUrl(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.Foundation.NSUrl url, string sourceApplication, class MonoTouch.Foundation.NSObject annotation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="url" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="sourceApplication" Type="System.String" />
          <Parameter Name="annotation" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to this application ().</param>
          <param name="url">The  specified by the calling application.</param>
          <param name="sourceApplication">The bundle ID of the calling application.</param>
          <param name="annotation">Optional property-list data passed by the calling application.</param>
          <summary>Loads a resource from the specified URL.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.OpenUrl(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.Foundation.NSUrl,System.String,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="PerformActionForShortcutItem">
        <MemberSignature Language="C#" Value="public static void PerformActionForShortcutItem (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.UIKit.UIApplicationShortcutItem shortcutItem, MonoTouch.UIKit.UIOperationHandler completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformActionForShortcutItem(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.UIKit.UIApplicationShortcutItem shortcutItem, class MonoTouch.UIKit.UIOperationHandler completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="shortcutItem" Type="MonoTouch.UIKit.UIApplicationShortcutItem" />
          <Parameter Name="completionHandler" Type="MonoTouch.UIKit.UIOperationHandler">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDUIOperationHandler))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">To be added.</param>
          <param name="shortcutItem">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>Called by the system when the user initiates a Home screen quick action, unless the interaction was handled in <see cref="M:Monotouch.UIKit.UIApplicationDelegate.WillFinishLaunching" /> or <see cref="M:Monotouch.UIKit.UIApplicationDelegate.DidFinishLaunching" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.PerformActionForShortcutItem(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.UIKit.UIApplicationShortcutItem,MonoTouch.UIKit.UIOperationHandler)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="PerformFetch">
        <MemberSignature Language="C#" Value="public static void PerformFetch (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, Action&lt;MonoTouch.UIKit.UIBackgroundFetchResult&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformFetch(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class System.Action`1&lt;valuetype MonoTouch.UIKit.UIBackgroundFetchResult&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.UIKit.UIBackgroundFetchResult&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V4))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Handle to the UIApplication.</param>
          <param name="completionHandler">Callback to invoke to notify the operating system of the result of the background fetch operation.</param>
          <summary>Indicates that the application can begin a fetch operation if it has data to download.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.PerformFetch(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,System.Action{MonoTouch.UIKit.UIBackgroundFetchResult})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="ProtectedDataDidBecomeAvailable">
        <MemberSignature Language="C#" Value="public static void ProtectedDataDidBecomeAvailable (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ProtectedDataDidBecomeAvailable(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <summary>Protected files are now available.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.ProtectedDataDidBecomeAvailable(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="ProtectedDataWillBecomeUnavailable">
        <MemberSignature Language="C#" Value="public static void ProtectedDataWillBecomeUnavailable (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ProtectedDataWillBecomeUnavailable(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <summary>Indicates that protected files are about to be encrypted and unavailable for reading.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.ProtectedDataWillBecomeUnavailable(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="ReceivedLocalNotification">
        <MemberSignature Language="C#" Value="public static void ReceivedLocalNotification (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.UIKit.UILocalNotification notification);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceivedLocalNotification(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.UIKit.UILocalNotification notification) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="notification" Type="MonoTouch.UIKit.UILocalNotification" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <param name="notification">To be added.</param>
          <summary>Indicates that the app received a local notification.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.ReceivedLocalNotification(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.UIKit.UILocalNotification)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="ReceivedRemoteNotification">
        <MemberSignature Language="C#" Value="public static void ReceivedRemoteNotification (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.Foundation.NSDictionary userInfo);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceivedRemoteNotification(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.Foundation.NSDictionary userInfo) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="userInfo" Type="MonoTouch.Foundation.NSDictionary" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <param name="userInfo">A dictionary whose "aps" key contains information related to the notification</param>
          <summary>Indicates that the app received a remote notification.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.ReceivedRemoteNotification(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="ReceiveMemoryWarning">
        <MemberSignature Language="C#" Value="public static void ReceiveMemoryWarning (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceiveMemoryWarning(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <summary>The app has received a low-memory warning from the system.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.ReceiveMemoryWarning(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="RegisteredForRemoteNotifications">
        <MemberSignature Language="C#" Value="public static void RegisteredForRemoteNotifications (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.Foundation.NSData deviceToken);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisteredForRemoteNotifications(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.Foundation.NSData deviceToken) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="deviceToken" Type="MonoTouch.Foundation.NSData" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <param name="deviceToken">To be added.</param>
          <summary>Indicates that the device successfully registered with Apple Push Service.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.RegisteredForRemoteNotifications(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.Foundation.NSData)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="SetWindow">
        <MemberSignature Language="C#" Value="public static void SetWindow (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIWindow value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetWindow(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIWindow value) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="value" Type="MonoTouch.UIKit.UIWindow" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="value">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.SetWindow(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIWindow)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="ShouldAllowExtensionPointIdentifier">
        <MemberSignature Language="C#" Value="public static bool ShouldAllowExtensionPointIdentifier (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.Foundation.NSString extensionPointIdentifier);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldAllowExtensionPointIdentifier(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.Foundation.NSString extensionPointIdentifier) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="extensionPointIdentifier" Type="MonoTouch.Foundation.NSString" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">To be added.</param>
          <param name="extensionPointIdentifier">To be added.</param>
          <summary>Requests permission from the app to run app extensions based on the extension point identified by <paramref name="extensionPointIdentifier" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.ShouldAllowExtensionPointIdentifier(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.Foundation.NSString)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="ShouldRequestHealthAuthorization">
        <MemberSignature Language="C#" Value="public static void ShouldRequestHealthAuthorization (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ShouldRequestHealthAuthorization(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">To be added.</param>
          <summary>The system calls this method when the developer's app should ask the user for access to HealthKit data.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.ShouldRequestHealthAuthorization(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="ShouldRestoreApplicationState">
        <MemberSignature Language="C#" Value="public static bool ShouldRestoreApplicationState (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.Foundation.NSCoder coder);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldRestoreApplicationState(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.Foundation.NSCoder coder) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <param name="coder">To be added.</param>
          <summary>Whether the application should restore saved state information.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.ShouldRestoreApplicationState(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.Foundation.NSCoder)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="ShouldSaveApplicationState">
        <MemberSignature Language="C#" Value="public static bool ShouldSaveApplicationState (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.Foundation.NSCoder coder);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldSaveApplicationState(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.Foundation.NSCoder coder) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <param name="coder">To be added.</param>
          <summary>Whether the application should save application state information.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.ShouldSaveApplicationState(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.Foundation.NSCoder)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="UserActivityUpdated">
        <MemberSignature Language="C#" Value="public static void UserActivityUpdated (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.Foundation.NSUserActivity userActivity);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UserActivityUpdated(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.Foundation.NSUserActivity userActivity) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="userActivity" Type="MonoTouch.Foundation.NSUserActivity" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">To be added.</param>
          <param name="userActivity">To be added.</param>
          <summary>Informs the app that the <see cref="T:MonoTouch.Foundation.NSUserActivity" /> object in <paramref name="userActivity" /> has been updated.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.UserActivityUpdated(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.Foundation.NSUserActivity)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="WillChangeStatusBarFrame">
        <MemberSignature Language="C#" Value="public static void WillChangeStatusBarFrame (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, System.Drawing.RectangleF newStatusBarFrame);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillChangeStatusBarFrame(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, valuetype System.Drawing.RectangleF newStatusBarFrame) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void WillChangeStatusBarFrame (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.CoreGraphics.CGRect newStatusBarFrame);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillChangeStatusBarFrame(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, valuetype MonoTouch.CoreGraphics.CGRect newStatusBarFrame) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="newStatusBarFrame" Type="System.Drawing.RectangleF" apistyle="classic" />
          <Parameter Name="newStatusBarFrame" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <param name="newStatusBarFrame">To be added.</param>
          <summary>Indicates that the frame of the status bar is about to change.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.WillChangeStatusBarFrame(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.CoreGraphics.CGRect)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="WillChangeStatusBarOrientation">
        <MemberSignature Language="C#" Value="public static void WillChangeStatusBarOrientation (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.UIKit.UIInterfaceOrientation newStatusBarOrientation, double duration);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillChangeStatusBarOrientation(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, valuetype MonoTouch.UIKit.UIInterfaceOrientation newStatusBarOrientation, float64 duration) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="newStatusBarOrientation" Type="MonoTouch.UIKit.UIInterfaceOrientation" />
          <Parameter Name="duration" Type="System.Double" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <param name="newStatusBarOrientation">To be added.</param>
          <param name="duration">To be added.</param>
          <summary>Indicates that the orientation of the status bar is about to change.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.WillChangeStatusBarOrientation(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.UIKit.UIInterfaceOrientation,System.Double)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="WillContinueUserActivity">
        <MemberSignature Language="C#" Value="public static bool WillContinueUserActivity (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, string userActivityType);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WillContinueUserActivity(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, string userActivityType) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="userActivityType" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">The  singleton for the app.</param>
          <param name="userActivityType">The user activity identifier.</param>
          <summary>Informs the app that the user is attempting to continue a <paramref name="userActivityType" /> action for which data might not be available, and returns to notify the user that the app will continue the activity.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.WillContinueUserActivity(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="WillEncodeRestorableState">
        <MemberSignature Language="C#" Value="public static void WillEncodeRestorableState (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.Foundation.NSCoder coder);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillEncodeRestorableState(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.Foundation.NSCoder coder) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <param name="coder">To be added.</param>
          <summary>Indicates that the app is about to store application state data.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.WillEncodeRestorableState(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.Foundation.NSCoder)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="WillEnterForeground">
        <MemberSignature Language="C#" Value="public static void WillEnterForeground (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillEnterForeground(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <summary>Indicates that the application is about to enter the foreground.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.WillEnterForeground(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="WillFinishLaunching">
        <MemberSignature Language="C#" Value="public static bool WillFinishLaunching (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application, MonoTouch.Foundation.NSDictionary launchOptions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WillFinishLaunching(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application, class MonoTouch.Foundation.NSDictionary launchOptions) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
          <Parameter Name="launchOptions" Type="MonoTouch.Foundation.NSDictionary" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <param name="launchOptions">An NSDictionary with the launch options, can be null.   Possible key values are UIApplication's LaunchOption static properties.</param>
          <summary>Indicates that the app is about to finish its launching procedures.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.WillFinishLaunching(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIApplicationDelegate" />
      </Targets>
      <Member MemberName="WillTerminate">
        <MemberSignature Language="C#" Value="public static void WillTerminate (this MonoTouch.UIKit.IUIApplicationDelegate This, MonoTouch.UIKit.UIApplication application);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillTerminate(class MonoTouch.UIKit.IUIApplicationDelegate This, class MonoTouch.UIKit.UIApplication application) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIApplicationDelegate" RefType="this" />
          <Parameter Name="application" Type="MonoTouch.UIKit.UIApplication" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="application">Reference to the UIApplication that invoked this delegate method.</param>
          <summary>Indicates that the app is about to terminate.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIApplicationDelegate_Extensions" Member="M:MonoTouch.UIKit.UIApplicationDelegate_Extensions.WillTerminate(MonoTouch.UIKit.IUIApplicationDelegate,MonoTouch.UIKit.UIApplication)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIBarPositioningDelegate" />
      </Targets>
      <Member MemberName="GetPositionForBar">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIBarPosition GetPositionForBar (this MonoTouch.UIKit.IUIBarPositioningDelegate This, MonoTouch.UIKit.IUIBarPositioning barPositioning);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.UIKit.UIBarPosition GetPositionForBar(class MonoTouch.UIKit.IUIBarPositioningDelegate This, class MonoTouch.UIKit.IUIBarPositioning barPositioning) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIBarPosition</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIBarPositioningDelegate" RefType="this" />
          <Parameter Name="barPositioning" Type="MonoTouch.UIKit.IUIBarPositioning" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="barPositioning">To be added.</param>
          <summary>Returns the position for <paramref name="barPositioning" /> after it has been added to the user interface.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIBarPositioningDelegate_Extensions" Member="M:MonoTouch.UIKit.UIBarPositioningDelegate_Extensions.GetPositionForBar(MonoTouch.UIKit.IUIBarPositioningDelegate,MonoTouch.UIKit.IUIBarPositioning)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDataSource" />
      </Targets>
      <Member MemberName="CanMoveItem">
        <MemberSignature Language="C#" Value="public static bool CanMoveItem (this MonoTouch.UIKit.IUICollectionViewDataSource This, MonoTouch.UIKit.UICollectionView collectionView, MonoTouch.Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanMoveItem(class MonoTouch.UIKit.IUICollectionViewDataSource This, class MonoTouch.UIKit.UICollectionView collectionView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDataSource" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDataSource_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDataSource_Extensions.CanMoveItem(MonoTouch.UIKit.IUICollectionViewDataSource,MonoTouch.UIKit.UICollectionView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDataSource" />
      </Targets>
      <Member MemberName="GetViewForSupplementaryElement">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UICollectionReusableView GetViewForSupplementaryElement (this MonoTouch.UIKit.IUICollectionViewDataSource This, MonoTouch.UIKit.UICollectionView collectionView, MonoTouch.Foundation.NSString elementKind, MonoTouch.Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UICollectionReusableView GetViewForSupplementaryElement(class MonoTouch.UIKit.IUICollectionViewDataSource This, class MonoTouch.UIKit.UICollectionView collectionView, class MonoTouch.Foundation.NSString elementKind, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UICollectionReusableView</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDataSource" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="elementKind" Type="MonoTouch.Foundation.NSString" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="elementKind">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>The reusable view used for the supplementary element at the specified indexPath.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDataSource_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDataSource_Extensions.GetViewForSupplementaryElement(MonoTouch.UIKit.IUICollectionViewDataSource,MonoTouch.UIKit.UICollectionView,MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDataSource" />
      </Targets>
      <Member MemberName="MoveItem">
        <MemberSignature Language="C#" Value="public static void MoveItem (this MonoTouch.UIKit.IUICollectionViewDataSource This, MonoTouch.UIKit.UICollectionView collectionView, MonoTouch.Foundation.NSIndexPath sourceIndexPath, MonoTouch.Foundation.NSIndexPath destinationIndexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveItem(class MonoTouch.UIKit.IUICollectionViewDataSource This, class MonoTouch.UIKit.UICollectionView collectionView, class MonoTouch.Foundation.NSIndexPath sourceIndexPath, class MonoTouch.Foundation.NSIndexPath destinationIndexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDataSource" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="sourceIndexPath" Type="MonoTouch.Foundation.NSIndexPath" />
          <Parameter Name="destinationIndexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="sourceIndexPath">To be added.</param>
          <param name="destinationIndexPath">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDataSource_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDataSource_Extensions.MoveItem(MonoTouch.UIKit.IUICollectionViewDataSource,MonoTouch.UIKit.UICollectionView,MonoTouch.Foundation.NSIndexPath,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDataSource" />
      </Targets>
      <Member MemberName="NumberOfSections">
        <MemberSignature Language="C#" Value="public static int NumberOfSections (this MonoTouch.UIKit.IUICollectionViewDataSource This, MonoTouch.UIKit.UICollectionView collectionView);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 NumberOfSections(class MonoTouch.UIKit.IUICollectionViewDataSource This, class MonoTouch.UIKit.UICollectionView collectionView) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nint NumberOfSections (this MonoTouch.UIKit.IUICollectionViewDataSource This, MonoTouch.UIKit.UICollectionView collectionView);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nint NumberOfSections(class MonoTouch.UIKit.IUICollectionViewDataSource This, class MonoTouch.UIKit.UICollectionView collectionView) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Int32</ReturnType>
          <ReturnType apistyle="unified">System.nint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDataSource" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <summary>The number of sections in this UICollectionViewDataSource.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDataSource_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDataSource_Extensions.NumberOfSections(MonoTouch.UIKit.IUICollectionViewDataSource,MonoTouch.UIKit.UICollectionView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDataSourcePrefetching" />
      </Targets>
      <Member MemberName="CancelPrefetching">
        <MemberSignature Language="C#" Value="public static void CancelPrefetching (this MonoTouch.UIKit.IUICollectionViewDataSourcePrefetching This, MonoTouch.UIKit.UICollectionView collectionView, MonoTouch.Foundation.NSIndexPath[] indexPaths);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CancelPrefetching(class MonoTouch.UIKit.IUICollectionViewDataSourcePrefetching This, class MonoTouch.UIKit.UICollectionView collectionView, class MonoTouch.Foundation.NSIndexPath[] indexPaths) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDataSourcePrefetching" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="indexPaths" Type="MonoTouch.Foundation.NSIndexPath[]" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="collectionView">To be added.</param>
          <param name="indexPaths">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDataSourcePrefetching_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDataSourcePrefetching_Extensions.CancelPrefetching(MonoTouch.UIKit.IUICollectionViewDataSourcePrefetching,MonoTouch.UIKit.UICollectionView,MonoTouch.Foundation.NSIndexPath[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="CanFocusItem">
        <MemberSignature Language="C#" Value="public static bool CanFocusItem (this MonoTouch.UIKit.IUICollectionViewDelegate This, MonoTouch.UIKit.UICollectionView collectionView, MonoTouch.Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanFocusItem(class MonoTouch.UIKit.IUICollectionViewDelegate This, class MonoTouch.UIKit.UICollectionView collectionView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">The  is associated with this.</param>
          <param name="indexPath">The  of the item being checked.</param>
          <summary>Whether the item at <paramref name="indexPath" /> can be focused.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.CanFocusItem(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="CanPerformAction">
        <MemberSignature Language="C#" Value="public static bool CanPerformAction (this MonoTouch.UIKit.IUICollectionViewDelegate This, MonoTouch.UIKit.UICollectionView collectionView, MonoTouch.ObjCRuntime.Selector action, MonoTouch.Foundation.NSIndexPath indexPath, MonoTouch.Foundation.NSObject sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanPerformAction(class MonoTouch.UIKit.IUICollectionViewDelegate This, class MonoTouch.UIKit.UICollectionView collectionView, class MonoTouch.ObjCRuntime.Selector action, class MonoTouch.Foundation.NSIndexPath indexPath, class MonoTouch.Foundation.NSObject sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="action" Type="MonoTouch.ObjCRuntime.Selector" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="action">To be added.</param>
          <param name="indexPath">To be added.</param>
          <param name="sender">To be added.</param>
          <summary>Whether the cell at the specified <paramref name="indexPath" /> supports the specified action.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.CanPerformAction(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.ObjCRuntime.Selector,MonoTouch.Foundation.NSIndexPath,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="CellDisplayingEnded">
        <MemberSignature Language="C#" Value="public static void CellDisplayingEnded (this MonoTouch.UIKit.IUICollectionViewDelegate This, MonoTouch.UIKit.UICollectionView collectionView, MonoTouch.UIKit.UICollectionViewCell cell, MonoTouch.Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CellDisplayingEnded(class MonoTouch.UIKit.IUICollectionViewDelegate This, class MonoTouch.UIKit.UICollectionView collectionView, class MonoTouch.UIKit.UICollectionViewCell cell, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="cell" Type="MonoTouch.UIKit.UICollectionViewCell" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="cell">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>Indicates that the cell at the specified indexPath has been removed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.CellDisplayingEnded(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.UIKit.UICollectionViewCell,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="DidUpdateFocus">
        <MemberSignature Language="C#" Value="public static void DidUpdateFocus (this MonoTouch.UIKit.IUICollectionViewDelegate This, MonoTouch.UIKit.UICollectionView collectionView, MonoTouch.UIKit.UICollectionViewFocusUpdateContext context, MonoTouch.UIKit.UIFocusAnimationCoordinator coordinator);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateFocus(class MonoTouch.UIKit.IUICollectionViewDelegate This, class MonoTouch.UIKit.UICollectionView collectionView, class MonoTouch.UIKit.UICollectionViewFocusUpdateContext context, class MonoTouch.UIKit.UIFocusAnimationCoordinator coordinator) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="context" Type="MonoTouch.UIKit.UICollectionViewFocusUpdateContext" />
          <Parameter Name="coordinator" Type="MonoTouch.UIKit.UIFocusAnimationCoordinator" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="context">Metadata for the focus change.</param>
          <param name="coordinator">The  coordinating the focus-change animations.</param>
          <summary>Indicates that the focus changed as detailed in the <paramref name="context" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.DidUpdateFocus(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.UIKit.UICollectionViewFocusUpdateContext,MonoTouch.UIKit.UIFocusAnimationCoordinator)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="GetIndexPathForPreferredFocusedView">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSIndexPath GetIndexPathForPreferredFocusedView (this MonoTouch.UIKit.IUICollectionViewDelegate This, MonoTouch.UIKit.UICollectionView collectionView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSIndexPath GetIndexPathForPreferredFocusedView(class MonoTouch.UIKit.IUICollectionViewDelegate This, class MonoTouch.UIKit.UICollectionView collectionView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSIndexPath</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <summary>When overridden, allows the developer to specify the item that should initially receive focus.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.GetIndexPathForPreferredFocusedView(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="GetTargetContentOffset">
        <MemberSignature Language="C#" Value="public static System.Drawing.PointF GetTargetContentOffset (this MonoTouch.UIKit.IUICollectionViewDelegate This, MonoTouch.UIKit.UICollectionView collectionView, System.Drawing.PointF proposedContentOffset);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.PointF GetTargetContentOffset(class MonoTouch.UIKit.IUICollectionViewDelegate This, class MonoTouch.UIKit.UICollectionView collectionView, valuetype System.Drawing.PointF proposedContentOffset) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGPoint GetTargetContentOffset (this MonoTouch.UIKit.IUICollectionViewDelegate This, MonoTouch.UIKit.UICollectionView collectionView, MonoTouch.CoreGraphics.CGPoint proposedContentOffset);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGPoint GetTargetContentOffset(class MonoTouch.UIKit.IUICollectionViewDelegate This, class MonoTouch.UIKit.UICollectionView collectionView, valuetype MonoTouch.CoreGraphics.CGPoint proposedContentOffset) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.PointF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGPoint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="proposedContentOffset" Type="System.Drawing.PointF" apistyle="classic" />
          <Parameter Name="proposedContentOffset" Type="MonoTouch.CoreGraphics.CGPoint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="proposedContentOffset">To be added.</param>
          <summary>When overridden, allows the developer to modify the content offset for layout and animation changes.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.GetTargetContentOffset(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.CoreGraphics.CGPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="GetTargetIndexPathForMove">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSIndexPath GetTargetIndexPathForMove (this MonoTouch.UIKit.IUICollectionViewDelegate This, MonoTouch.UIKit.UICollectionView collectionView, MonoTouch.Foundation.NSIndexPath originalIndexPath, MonoTouch.Foundation.NSIndexPath proposedIndexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSIndexPath GetTargetIndexPathForMove(class MonoTouch.UIKit.IUICollectionViewDelegate This, class MonoTouch.UIKit.UICollectionView collectionView, class MonoTouch.Foundation.NSIndexPath originalIndexPath, class MonoTouch.Foundation.NSIndexPath proposedIndexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSIndexPath</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="originalIndexPath" Type="MonoTouch.Foundation.NSIndexPath" />
          <Parameter Name="proposedIndexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="originalIndexPath">To be added.</param>
          <param name="proposedIndexPath">To be added.</param>
          <summary>When overridden, allows the developer to modify the final location of a moved item. (For instance, to disallow a move to a particular <paramref name="proposedIndexPath" />.)</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.GetTargetIndexPathForMove(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.Foundation.NSIndexPath,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="ItemDeselected">
        <MemberSignature Language="C#" Value="public static void ItemDeselected (this MonoTouch.UIKit.IUICollectionViewDelegate This, MonoTouch.UIKit.UICollectionView collectionView, MonoTouch.Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ItemDeselected(class MonoTouch.UIKit.IUICollectionViewDelegate This, class MonoTouch.UIKit.UICollectionView collectionView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>Indicates that the cell at the specified indexPath has been deselected.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.ItemDeselected(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="ItemHighlighted">
        <MemberSignature Language="C#" Value="public static void ItemHighlighted (this MonoTouch.UIKit.IUICollectionViewDelegate This, MonoTouch.UIKit.UICollectionView collectionView, MonoTouch.Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ItemHighlighted(class MonoTouch.UIKit.IUICollectionViewDelegate This, class MonoTouch.UIKit.UICollectionView collectionView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>Indicates that the cell at the specified indexPath has been highlighted.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.ItemHighlighted(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="ItemSelected">
        <MemberSignature Language="C#" Value="public static void ItemSelected (this MonoTouch.UIKit.IUICollectionViewDelegate This, MonoTouch.UIKit.UICollectionView collectionView, MonoTouch.Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ItemSelected(class MonoTouch.UIKit.IUICollectionViewDelegate This, class MonoTouch.UIKit.UICollectionView collectionView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>Indicates that the cell at the specified indexPath has been selected.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.ItemSelected(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="ItemUnhighlighted">
        <MemberSignature Language="C#" Value="public static void ItemUnhighlighted (this MonoTouch.UIKit.IUICollectionViewDelegate This, MonoTouch.UIKit.UICollectionView collectionView, MonoTouch.Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ItemUnhighlighted(class MonoTouch.UIKit.IUICollectionViewDelegate This, class MonoTouch.UIKit.UICollectionView collectionView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>Indicates that the cell at the specified indexPath has been unhighlighted.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.ItemUnhighlighted(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="PerformAction">
        <MemberSignature Language="C#" Value="public static void PerformAction (this MonoTouch.UIKit.IUICollectionViewDelegate This, MonoTouch.UIKit.UICollectionView collectionView, MonoTouch.ObjCRuntime.Selector action, MonoTouch.Foundation.NSIndexPath indexPath, MonoTouch.Foundation.NSObject sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformAction(class MonoTouch.UIKit.IUICollectionViewDelegate This, class MonoTouch.UIKit.UICollectionView collectionView, class MonoTouch.ObjCRuntime.Selector action, class MonoTouch.Foundation.NSIndexPath indexPath, class MonoTouch.Foundation.NSObject sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="action" Type="MonoTouch.ObjCRuntime.Selector" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="action">To be added.</param>
          <param name="indexPath">To be added.</param>
          <param name="sender">To be added.</param>
          <summary>Whether the cell at the specified indexPath supports the specified Copy or Paste action.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.PerformAction(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.ObjCRuntime.Selector,MonoTouch.Foundation.NSIndexPath,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="ShouldDeselectItem">
        <MemberSignature Language="C#" Value="public static bool ShouldDeselectItem (this MonoTouch.UIKit.IUICollectionViewDelegate This, MonoTouch.UIKit.UICollectionView collectionView, MonoTouch.Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldDeselectItem(class MonoTouch.UIKit.IUICollectionViewDelegate This, class MonoTouch.UIKit.UICollectionView collectionView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>Whether the cell at the specified indexPath should allow itself to be deselected.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.ShouldDeselectItem(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="ShouldHighlightItem">
        <MemberSignature Language="C#" Value="public static bool ShouldHighlightItem (this MonoTouch.UIKit.IUICollectionViewDelegate This, MonoTouch.UIKit.UICollectionView collectionView, MonoTouch.Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldHighlightItem(class MonoTouch.UIKit.IUICollectionViewDelegate This, class MonoTouch.UIKit.UICollectionView collectionView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>Whether the cell at the specified indexPath should allow itself to be highlighted.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.ShouldHighlightItem(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="ShouldSelectItem">
        <MemberSignature Language="C#" Value="public static bool ShouldSelectItem (this MonoTouch.UIKit.IUICollectionViewDelegate This, MonoTouch.UIKit.UICollectionView collectionView, MonoTouch.Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldSelectItem(class MonoTouch.UIKit.IUICollectionViewDelegate This, class MonoTouch.UIKit.UICollectionView collectionView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>Whether the cell at the specified indexPath allows itself to be selected.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.ShouldSelectItem(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="ShouldShowMenu">
        <MemberSignature Language="C#" Value="public static bool ShouldShowMenu (this MonoTouch.UIKit.IUICollectionViewDelegate This, MonoTouch.UIKit.UICollectionView collectionView, MonoTouch.Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldShowMenu(class MonoTouch.UIKit.IUICollectionViewDelegate This, class MonoTouch.UIKit.UICollectionView collectionView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>Whether the cell at the specified indexPath should show an Action menu.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.ShouldShowMenu(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="ShouldUpdateFocus">
        <MemberSignature Language="C#" Value="public static bool ShouldUpdateFocus (this MonoTouch.UIKit.IUICollectionViewDelegate This, MonoTouch.UIKit.UICollectionView collectionView, MonoTouch.UIKit.UICollectionViewFocusUpdateContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldUpdateFocus(class MonoTouch.UIKit.IUICollectionViewDelegate This, class MonoTouch.UIKit.UICollectionView collectionView, class MonoTouch.UIKit.UICollectionViewFocusUpdateContext context) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="context" Type="MonoTouch.UIKit.UICollectionViewFocusUpdateContext" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="context">To be added.</param>
          <summary>When overridden, allows the developer to prevent the focus change specified in <paramref name="context" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.ShouldUpdateFocus(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.UIKit.UICollectionViewFocusUpdateContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="SupplementaryViewDisplayingEnded">
        <MemberSignature Language="C#" Value="public static void SupplementaryViewDisplayingEnded (this MonoTouch.UIKit.IUICollectionViewDelegate This, MonoTouch.UIKit.UICollectionView collectionView, MonoTouch.UIKit.UICollectionReusableView view, MonoTouch.Foundation.NSString elementKind, MonoTouch.Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SupplementaryViewDisplayingEnded(class MonoTouch.UIKit.IUICollectionViewDelegate This, class MonoTouch.UIKit.UICollectionView collectionView, class MonoTouch.UIKit.UICollectionReusableView view, class MonoTouch.Foundation.NSString elementKind, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="view" Type="MonoTouch.UIKit.UICollectionReusableView" />
          <Parameter Name="elementKind" Type="MonoTouch.Foundation.NSString" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="view">To be added.</param>
          <param name="elementKind">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>Indicates that the supplementary view at the specified indexPath has been removed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.SupplementaryViewDisplayingEnded(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.UIKit.UICollectionReusableView,MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="TransitionLayout">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UICollectionViewTransitionLayout TransitionLayout (this MonoTouch.UIKit.IUICollectionViewDelegate This, MonoTouch.UIKit.UICollectionView collectionView, MonoTouch.UIKit.UICollectionViewLayout fromLayout, MonoTouch.UIKit.UICollectionViewLayout toLayout);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UICollectionViewTransitionLayout TransitionLayout(class MonoTouch.UIKit.IUICollectionViewDelegate This, class MonoTouch.UIKit.UICollectionView collectionView, class MonoTouch.UIKit.UICollectionViewLayout fromLayout, class MonoTouch.UIKit.UICollectionViewLayout toLayout) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UICollectionViewTransitionLayout</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="fromLayout" Type="MonoTouch.UIKit.UICollectionViewLayout" />
          <Parameter Name="toLayout" Type="MonoTouch.UIKit.UICollectionViewLayout" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="fromLayout">To be added.</param>
          <param name="toLayout">To be added.</param>
          <summary>The UICollectionViewTransitionLayout to be used when moving from the specified fromLayout to the toLayout.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.TransitionLayout(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.UIKit.UICollectionViewLayout,MonoTouch.UIKit.UICollectionViewLayout)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="WillDisplayCell">
        <MemberSignature Language="C#" Value="public static void WillDisplayCell (this MonoTouch.UIKit.IUICollectionViewDelegate This, MonoTouch.UIKit.UICollectionView collectionView, MonoTouch.UIKit.UICollectionViewCell cell, MonoTouch.Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillDisplayCell(class MonoTouch.UIKit.IUICollectionViewDelegate This, class MonoTouch.UIKit.UICollectionView collectionView, class MonoTouch.UIKit.UICollectionViewCell cell, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="cell" Type="MonoTouch.UIKit.UICollectionViewCell" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="cell">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>The <paramref name="cell" /> is about to be displayed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.WillDisplayCell(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.UIKit.UICollectionViewCell,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegate" />
      </Targets>
      <Member MemberName="WillDisplaySupplementaryView">
        <MemberSignature Language="C#" Value="public static void WillDisplaySupplementaryView (this MonoTouch.UIKit.IUICollectionViewDelegate This, MonoTouch.UIKit.UICollectionView collectionView, MonoTouch.UIKit.UICollectionReusableView view, string elementKind, MonoTouch.Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillDisplaySupplementaryView(class MonoTouch.UIKit.IUICollectionViewDelegate This, class MonoTouch.UIKit.UICollectionView collectionView, class MonoTouch.UIKit.UICollectionReusableView view, string elementKind, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegate" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="view" Type="MonoTouch.UIKit.UICollectionReusableView" />
          <Parameter Name="elementKind" Type="System.String" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="view">To be added.</param>
          <param name="elementKind">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>The supplementary <paramref name="view" /> is about to be displayed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegate_Extensions.WillDisplaySupplementaryView(MonoTouch.UIKit.IUICollectionViewDelegate,MonoTouch.UIKit.UICollectionView,MonoTouch.UIKit.UICollectionReusableView,System.String,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout" />
      </Targets>
      <Member MemberName="GetInsetForSection">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIEdgeInsets GetInsetForSection (this MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout This, MonoTouch.UIKit.UICollectionView collectionView, MonoTouch.UIKit.UICollectionViewLayout layout, int section);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.UIKit.UIEdgeInsets GetInsetForSection(class MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout This, class MonoTouch.UIKit.UICollectionView collectionView, class MonoTouch.UIKit.UICollectionViewLayout layout, int32 section) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIEdgeInsets GetInsetForSection (this MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout This, MonoTouch.UIKit.UICollectionView collectionView, MonoTouch.UIKit.UICollectionViewLayout layout, nint section);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.UIKit.UIEdgeInsets GetInsetForSection(class MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout This, class MonoTouch.UIKit.UICollectionView collectionView, class MonoTouch.UIKit.UICollectionViewLayout layout, valuetype System.nint section) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIEdgeInsets</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="layout" Type="MonoTouch.UIKit.UICollectionViewLayout" />
          <Parameter Name="section" Type="System.Int32" apistyle="classic" />
          <Parameter Name="section" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="layout">To be added.</param>
          <param name="section">To be added.</param>
          <summary>The margins to apply to content in the specified section.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegateFlowLayout_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegateFlowLayout_Extensions.GetInsetForSection(MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout,MonoTouch.UIKit.UICollectionView,MonoTouch.UIKit.UICollectionViewLayout,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout" />
      </Targets>
      <Member MemberName="GetMinimumInteritemSpacingForSection">
        <MemberSignature Language="C#" Value="public static float GetMinimumInteritemSpacingForSection (this MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout This, MonoTouch.UIKit.UICollectionView collectionView, MonoTouch.UIKit.UICollectionViewLayout layout, int section);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 GetMinimumInteritemSpacingForSection(class MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout This, class MonoTouch.UIKit.UICollectionView collectionView, class MonoTouch.UIKit.UICollectionViewLayout layout, int32 section) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nfloat GetMinimumInteritemSpacingForSection (this MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout This, MonoTouch.UIKit.UICollectionView collectionView, MonoTouch.UIKit.UICollectionViewLayout layout, nint section);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat GetMinimumInteritemSpacingForSection(class MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout This, class MonoTouch.UIKit.UICollectionView collectionView, class MonoTouch.UIKit.UICollectionViewLayout layout, valuetype System.nint section) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Single</ReturnType>
          <ReturnType apistyle="unified">System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="layout" Type="MonoTouch.UIKit.UICollectionViewLayout" />
          <Parameter Name="section" Type="System.Int32" apistyle="classic" />
          <Parameter Name="section" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="layout">To be added.</param>
          <param name="section">To be added.</param>
          <summary>The spacing between items in the rows or columns of a section.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegateFlowLayout_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegateFlowLayout_Extensions.GetMinimumInteritemSpacingForSection(MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout,MonoTouch.UIKit.UICollectionView,MonoTouch.UIKit.UICollectionViewLayout,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout" />
      </Targets>
      <Member MemberName="GetMinimumLineSpacingForSection">
        <MemberSignature Language="C#" Value="public static float GetMinimumLineSpacingForSection (this MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout This, MonoTouch.UIKit.UICollectionView collectionView, MonoTouch.UIKit.UICollectionViewLayout layout, int section);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 GetMinimumLineSpacingForSection(class MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout This, class MonoTouch.UIKit.UICollectionView collectionView, class MonoTouch.UIKit.UICollectionViewLayout layout, int32 section) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nfloat GetMinimumLineSpacingForSection (this MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout This, MonoTouch.UIKit.UICollectionView collectionView, MonoTouch.UIKit.UICollectionViewLayout layout, nint section);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat GetMinimumLineSpacingForSection(class MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout This, class MonoTouch.UIKit.UICollectionView collectionView, class MonoTouch.UIKit.UICollectionViewLayout layout, valuetype System.nint section) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Single</ReturnType>
          <ReturnType apistyle="unified">System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="layout" Type="MonoTouch.UIKit.UICollectionViewLayout" />
          <Parameter Name="section" Type="System.Int32" apistyle="classic" />
          <Parameter Name="section" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="layout">To be added.</param>
          <param name="section">To be added.</param>
          <summary>The spacing between rows or columns of a section.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegateFlowLayout_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegateFlowLayout_Extensions.GetMinimumLineSpacingForSection(MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout,MonoTouch.UIKit.UICollectionView,MonoTouch.UIKit.UICollectionViewLayout,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout" />
      </Targets>
      <Member MemberName="GetReferenceSizeForFooter">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF GetReferenceSizeForFooter (this MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout This, MonoTouch.UIKit.UICollectionView collectionView, MonoTouch.UIKit.UICollectionViewLayout layout, int section);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF GetReferenceSizeForFooter(class MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout This, class MonoTouch.UIKit.UICollectionView collectionView, class MonoTouch.UIKit.UICollectionViewLayout layout, int32 section) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGSize GetReferenceSizeForFooter (this MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout This, MonoTouch.UIKit.UICollectionView collectionView, MonoTouch.UIKit.UICollectionViewLayout layout, nint section);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGSize GetReferenceSizeForFooter(class MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout This, class MonoTouch.UIKit.UICollectionView collectionView, class MonoTouch.UIKit.UICollectionViewLayout layout, valuetype System.nint section) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.SizeF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="layout" Type="MonoTouch.UIKit.UICollectionViewLayout" />
          <Parameter Name="section" Type="System.Int32" apistyle="classic" />
          <Parameter Name="section" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="layout">To be added.</param>
          <param name="section">To be added.</param>
          <summary>The size of the footer view for the specified section.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegateFlowLayout_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegateFlowLayout_Extensions.GetReferenceSizeForFooter(MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout,MonoTouch.UIKit.UICollectionView,MonoTouch.UIKit.UICollectionViewLayout,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout" />
      </Targets>
      <Member MemberName="GetReferenceSizeForHeader">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF GetReferenceSizeForHeader (this MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout This, MonoTouch.UIKit.UICollectionView collectionView, MonoTouch.UIKit.UICollectionViewLayout layout, int section);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF GetReferenceSizeForHeader(class MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout This, class MonoTouch.UIKit.UICollectionView collectionView, class MonoTouch.UIKit.UICollectionViewLayout layout, int32 section) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGSize GetReferenceSizeForHeader (this MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout This, MonoTouch.UIKit.UICollectionView collectionView, MonoTouch.UIKit.UICollectionViewLayout layout, nint section);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGSize GetReferenceSizeForHeader(class MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout This, class MonoTouch.UIKit.UICollectionView collectionView, class MonoTouch.UIKit.UICollectionViewLayout layout, valuetype System.nint section) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.SizeF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="layout" Type="MonoTouch.UIKit.UICollectionViewLayout" />
          <Parameter Name="section" Type="System.Int32" apistyle="classic" />
          <Parameter Name="section" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="layout">To be added.</param>
          <param name="section">To be added.</param>
          <summary>The size of the header view for the specified section.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegateFlowLayout_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegateFlowLayout_Extensions.GetReferenceSizeForHeader(MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout,MonoTouch.UIKit.UICollectionView,MonoTouch.UIKit.UICollectionViewLayout,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout" />
      </Targets>
      <Member MemberName="GetSizeForItem">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF GetSizeForItem (this MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout This, MonoTouch.UIKit.UICollectionView collectionView, MonoTouch.UIKit.UICollectionViewLayout layout, MonoTouch.Foundation.NSIndexPath indexPath);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF GetSizeForItem(class MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout This, class MonoTouch.UIKit.UICollectionView collectionView, class MonoTouch.UIKit.UICollectionViewLayout layout, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGSize GetSizeForItem (this MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout This, MonoTouch.UIKit.UICollectionView collectionView, MonoTouch.UIKit.UICollectionViewLayout layout, MonoTouch.Foundation.NSIndexPath indexPath);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGSize GetSizeForItem(class MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout This, class MonoTouch.UIKit.UICollectionView collectionView, class MonoTouch.UIKit.UICollectionViewLayout layout, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.SizeF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout" RefType="this" />
          <Parameter Name="collectionView" Type="MonoTouch.UIKit.UICollectionView" />
          <Parameter Name="layout" Type="MonoTouch.UIKit.UICollectionViewLayout" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="collectionView">To be added.</param>
          <param name="layout">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>The size of the specified item's cell.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollectionViewDelegateFlowLayout_Extensions" Member="M:MonoTouch.UIKit.UICollectionViewDelegateFlowLayout_Extensions.GetSizeForItem(MonoTouch.UIKit.IUICollectionViewDelegateFlowLayout,MonoTouch.UIKit.UICollectionView,MonoTouch.UIKit.UICollectionViewLayout,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollisionBehaviorDelegate" />
      </Targets>
      <Member MemberName="BeganBoundaryContact">
        <MemberSignature Language="C#" Value="public static void BeganBoundaryContact (this MonoTouch.UIKit.IUICollisionBehaviorDelegate This, MonoTouch.UIKit.UICollisionBehavior behavior, MonoTouch.UIKit.IUIDynamicItem dynamicItem, MonoTouch.Foundation.NSObject boundaryIdentifier, System.Drawing.PointF atPoint);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BeganBoundaryContact(class MonoTouch.UIKit.IUICollisionBehaviorDelegate This, class MonoTouch.UIKit.UICollisionBehavior behavior, class MonoTouch.UIKit.IUIDynamicItem dynamicItem, class MonoTouch.Foundation.NSObject boundaryIdentifier, valuetype System.Drawing.PointF atPoint) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void BeganBoundaryContact (this MonoTouch.UIKit.IUICollisionBehaviorDelegate This, MonoTouch.UIKit.UICollisionBehavior behavior, MonoTouch.UIKit.IUIDynamicItem dynamicItem, MonoTouch.Foundation.NSObject boundaryIdentifier, MonoTouch.CoreGraphics.CGPoint atPoint);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BeganBoundaryContact(class MonoTouch.UIKit.IUICollisionBehaviorDelegate This, class MonoTouch.UIKit.UICollisionBehavior behavior, class MonoTouch.UIKit.IUIDynamicItem dynamicItem, class MonoTouch.Foundation.NSObject boundaryIdentifier, valuetype MonoTouch.CoreGraphics.CGPoint atPoint) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollisionBehaviorDelegate" RefType="this" />
          <Parameter Name="behavior" Type="MonoTouch.UIKit.UICollisionBehavior" />
          <Parameter Name="dynamicItem" Type="MonoTouch.UIKit.IUIDynamicItem" />
          <Parameter Name="boundaryIdentifier" Type="MonoTouch.Foundation.NSObject" />
          <Parameter Name="atPoint" Type="System.Drawing.PointF" apistyle="classic" />
          <Parameter Name="atPoint" Type="MonoTouch.CoreGraphics.CGPoint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="behavior">To be added.</param>
          <param name="dynamicItem">To be added.</param>
          <param name="boundaryIdentifier">The identifier of the boundary collided with. If , the collision was with the reference boundary.This parameter can be .</param>
          <param name="atPoint">To be added.</param>
          <summary>Indicates that boundary contact has begun between the dynamicItem and the boundaryIdentifier.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollisionBehaviorDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollisionBehaviorDelegate_Extensions.BeganBoundaryContact(MonoTouch.UIKit.IUICollisionBehaviorDelegate,MonoTouch.UIKit.UICollisionBehavior,MonoTouch.UIKit.IUIDynamicItem,MonoTouch.Foundation.NSObject,MonoTouch.CoreGraphics.CGPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollisionBehaviorDelegate" />
      </Targets>
      <Member MemberName="BeganContact">
        <MemberSignature Language="C#" Value="public static void BeganContact (this MonoTouch.UIKit.IUICollisionBehaviorDelegate This, MonoTouch.UIKit.UICollisionBehavior behavior, MonoTouch.UIKit.IUIDynamicItem firstItem, MonoTouch.UIKit.IUIDynamicItem secondItem, System.Drawing.PointF atPoint);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BeganContact(class MonoTouch.UIKit.IUICollisionBehaviorDelegate This, class MonoTouch.UIKit.UICollisionBehavior behavior, class MonoTouch.UIKit.IUIDynamicItem firstItem, class MonoTouch.UIKit.IUIDynamicItem secondItem, valuetype System.Drawing.PointF atPoint) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void BeganContact (this MonoTouch.UIKit.IUICollisionBehaviorDelegate This, MonoTouch.UIKit.UICollisionBehavior behavior, MonoTouch.UIKit.IUIDynamicItem firstItem, MonoTouch.UIKit.IUIDynamicItem secondItem, MonoTouch.CoreGraphics.CGPoint atPoint);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BeganContact(class MonoTouch.UIKit.IUICollisionBehaviorDelegate This, class MonoTouch.UIKit.UICollisionBehavior behavior, class MonoTouch.UIKit.IUIDynamicItem firstItem, class MonoTouch.UIKit.IUIDynamicItem secondItem, valuetype MonoTouch.CoreGraphics.CGPoint atPoint) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollisionBehaviorDelegate" RefType="this" />
          <Parameter Name="behavior" Type="MonoTouch.UIKit.UICollisionBehavior" />
          <Parameter Name="firstItem" Type="MonoTouch.UIKit.IUIDynamicItem" />
          <Parameter Name="secondItem" Type="MonoTouch.UIKit.IUIDynamicItem" />
          <Parameter Name="atPoint" Type="System.Drawing.PointF" apistyle="classic" />
          <Parameter Name="atPoint" Type="MonoTouch.CoreGraphics.CGPoint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="behavior">To be added.</param>
          <param name="firstItem">To be added.</param>
          <param name="secondItem">To be added.</param>
          <param name="atPoint">To be added.</param>
          <summary>Indicates that contact between dynamic items has begun.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollisionBehaviorDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollisionBehaviorDelegate_Extensions.BeganContact(MonoTouch.UIKit.IUICollisionBehaviorDelegate,MonoTouch.UIKit.UICollisionBehavior,MonoTouch.UIKit.IUIDynamicItem,MonoTouch.UIKit.IUIDynamicItem,MonoTouch.CoreGraphics.CGPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollisionBehaviorDelegate" />
      </Targets>
      <Member MemberName="EndedBoundaryContact">
        <MemberSignature Language="C#" Value="public static void EndedBoundaryContact (this MonoTouch.UIKit.IUICollisionBehaviorDelegate This, MonoTouch.UIKit.UICollisionBehavior behavior, MonoTouch.UIKit.IUIDynamicItem dynamicItem, MonoTouch.Foundation.NSObject boundaryIdentifier);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndedBoundaryContact(class MonoTouch.UIKit.IUICollisionBehaviorDelegate This, class MonoTouch.UIKit.UICollisionBehavior behavior, class MonoTouch.UIKit.IUIDynamicItem dynamicItem, class MonoTouch.Foundation.NSObject boundaryIdentifier) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollisionBehaviorDelegate" RefType="this" />
          <Parameter Name="behavior" Type="MonoTouch.UIKit.UICollisionBehavior" />
          <Parameter Name="dynamicItem" Type="MonoTouch.UIKit.IUIDynamicItem" />
          <Parameter Name="boundaryIdentifier" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="behavior">To be added.</param>
          <param name="dynamicItem">To be added.</param>
          <param name="boundaryIdentifier">The identifier of the boundary collided with. If , the collision was with the reference boundary.This parameter can be .</param>
          <summary>Indicates that the dynamicItem has stopped contacting the boundary.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollisionBehaviorDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollisionBehaviorDelegate_Extensions.EndedBoundaryContact(MonoTouch.UIKit.IUICollisionBehaviorDelegate,MonoTouch.UIKit.UICollisionBehavior,MonoTouch.UIKit.IUIDynamicItem,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUICollisionBehaviorDelegate" />
      </Targets>
      <Member MemberName="EndedContact">
        <MemberSignature Language="C#" Value="public static void EndedContact (this MonoTouch.UIKit.IUICollisionBehaviorDelegate This, MonoTouch.UIKit.UICollisionBehavior behavior, MonoTouch.UIKit.IUIDynamicItem firstItem, MonoTouch.UIKit.IUIDynamicItem secondItem);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndedContact(class MonoTouch.UIKit.IUICollisionBehaviorDelegate This, class MonoTouch.UIKit.UICollisionBehavior behavior, class MonoTouch.UIKit.IUIDynamicItem firstItem, class MonoTouch.UIKit.IUIDynamicItem secondItem) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUICollisionBehaviorDelegate" RefType="this" />
          <Parameter Name="behavior" Type="MonoTouch.UIKit.UICollisionBehavior" />
          <Parameter Name="firstItem" Type="MonoTouch.UIKit.IUIDynamicItem" />
          <Parameter Name="secondItem" Type="MonoTouch.UIKit.IUIDynamicItem" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="behavior">To be added.</param>
          <param name="firstItem">To be added.</param>
          <param name="secondItem">To be added.</param>
          <summary>Indicates that the two dynamic items have stopped contacting each other.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UICollisionBehaviorDelegate_Extensions" Member="M:MonoTouch.UIKit.UICollisionBehaviorDelegate_Extensions.EndedContact(MonoTouch.UIKit.IUICollisionBehaviorDelegate,MonoTouch.UIKit.UICollisionBehavior,MonoTouch.UIKit.IUIDynamicItem,MonoTouch.UIKit.IUIDynamicItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIContentSizeCategory" />
      </Targets>
      <Member MemberName="GetConstant">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetConstant (this MonoTouch.UIKit.UIContentSizeCategory self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetConstant(valuetype MonoTouch.UIKit.UIContentSizeCategory self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.UIKit.UIContentSizeCategory" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIContentSizeCategoryExtensions" Member="M:MonoTouch.UIKit.UIContentSizeCategoryExtensions.GetConstant(MonoTouch.UIKit.UIContentSizeCategory)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIDeviceOrientation" />
      </Targets>
      <Member MemberName="IsFlat">
        <MemberSignature Language="C#" Value="public static bool IsFlat (this MonoTouch.UIKit.UIDeviceOrientation orientation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsFlat(valuetype MonoTouch.UIKit.UIDeviceOrientation orientation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="orientation" Type="MonoTouch.UIKit.UIDeviceOrientation" RefType="this" />
        </Parameters>
        <Docs>
          <param name="orientation">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDeviceOrientationExtensions" Member="M:MonoTouch.UIKit.UIDeviceOrientationExtensions.IsFlat(MonoTouch.UIKit.UIDeviceOrientation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIDeviceOrientation" />
      </Targets>
      <Member MemberName="IsLandscape">
        <MemberSignature Language="C#" Value="public static bool IsLandscape (this MonoTouch.UIKit.UIDeviceOrientation orientation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLandscape(valuetype MonoTouch.UIKit.UIDeviceOrientation orientation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="orientation" Type="MonoTouch.UIKit.UIDeviceOrientation" RefType="this" />
        </Parameters>
        <Docs>
          <param name="orientation">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDeviceOrientationExtensions" Member="M:MonoTouch.UIKit.UIDeviceOrientationExtensions.IsLandscape(MonoTouch.UIKit.UIDeviceOrientation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIDeviceOrientation" />
      </Targets>
      <Member MemberName="IsPortrait">
        <MemberSignature Language="C#" Value="public static bool IsPortrait (this MonoTouch.UIKit.UIDeviceOrientation orientation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPortrait(valuetype MonoTouch.UIKit.UIDeviceOrientation orientation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="orientation" Type="MonoTouch.UIKit.UIDeviceOrientation" RefType="this" />
        </Parameters>
        <Docs>
          <param name="orientation">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDeviceOrientationExtensions" Member="M:MonoTouch.UIKit.UIDeviceOrientationExtensions.IsPortrait(MonoTouch.UIKit.UIDeviceOrientation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="CanPerformAction">
        <MemberSignature Language="C#" Value="public static bool CanPerformAction (this MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate This, MonoTouch.UIKit.UIDocumentInteractionController controller, MonoTouch.ObjCRuntime.Selector action);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanPerformAction(class MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate This, class MonoTouch.UIKit.UIDocumentInteractionController controller, class MonoTouch.ObjCRuntime.Selector action) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentInteractionController" />
          <Parameter Name="action" Type="MonoTouch.ObjCRuntime.Selector" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="action">To be added.This parameter can be .</param>
          <summary>Developers should not use this deprecated method, which determines whether the specified controller should support the specified action.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions.CanPerformAction(MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate,MonoTouch.UIKit.UIDocumentInteractionController,MonoTouch.ObjCRuntime.Selector)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="DidDismissOpenInMenu">
        <MemberSignature Language="C#" Value="public static void DidDismissOpenInMenu (this MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate This, MonoTouch.UIKit.UIDocumentInteractionController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDismissOpenInMenu(class MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate This, class MonoTouch.UIKit.UIDocumentInteractionController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentInteractionController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>Indicates that the controller has dismissed its "Open In..." menu.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions.DidDismissOpenInMenu(MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate,MonoTouch.UIKit.UIDocumentInteractionController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="DidDismissOptionsMenu">
        <MemberSignature Language="C#" Value="public static void DidDismissOptionsMenu (this MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate This, MonoTouch.UIKit.UIDocumentInteractionController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDismissOptionsMenu(class MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate This, class MonoTouch.UIKit.UIDocumentInteractionController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentInteractionController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>Indicates that the controller has dismissed its "Options" menu.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions.DidDismissOptionsMenu(MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate,MonoTouch.UIKit.UIDocumentInteractionController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="DidEndPreview">
        <MemberSignature Language="C#" Value="public static void DidEndPreview (this MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate This, MonoTouch.UIKit.UIDocumentInteractionController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidEndPreview(class MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate This, class MonoTouch.UIKit.UIDocumentInteractionController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentInteractionController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>Indicates that the controller has ended its document preview.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions.DidEndPreview(MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate,MonoTouch.UIKit.UIDocumentInteractionController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="DidEndSendingToApplication">
        <MemberSignature Language="C#" Value="public static void DidEndSendingToApplication (this MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate This, MonoTouch.UIKit.UIDocumentInteractionController controller, string application);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidEndSendingToApplication(class MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate This, class MonoTouch.UIKit.UIDocumentInteractionController controller, string application) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentInteractionController" />
          <Parameter Name="application" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="application">To be added.This parameter can be .</param>
          <summary>Indicates that the controller's document has been handed off to the specified application.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions.DidEndSendingToApplication(MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate,MonoTouch.UIKit.UIDocumentInteractionController,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="PerformAction">
        <MemberSignature Language="C#" Value="public static bool PerformAction (this MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate This, MonoTouch.UIKit.UIDocumentInteractionController controller, MonoTouch.ObjCRuntime.Selector action);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool PerformAction(class MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate This, class MonoTouch.UIKit.UIDocumentInteractionController controller, class MonoTouch.ObjCRuntime.Selector action) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentInteractionController" />
          <Parameter Name="action" Type="MonoTouch.ObjCRuntime.Selector" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="action">To be added.This parameter can be .</param>
          <summary>Application developers should not use this deprecated method, which performs the specified action on the specified controller.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions.PerformAction(MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate,MonoTouch.UIKit.UIDocumentInteractionController,MonoTouch.ObjCRuntime.Selector)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="RectangleForPreview">
        <MemberSignature Language="C#" Value="public static System.Drawing.RectangleF RectangleForPreview (this MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate This, MonoTouch.UIKit.UIDocumentInteractionController controller);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.RectangleF RectangleForPreview(class MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate This, class MonoTouch.UIKit.UIDocumentInteractionController controller) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGRect RectangleForPreview (this MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate This, MonoTouch.UIKit.UIDocumentInteractionController controller);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGRect RectangleForPreview(class MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate This, class MonoTouch.UIKit.UIDocumentInteractionController controller) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.RectangleF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentInteractionController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>The RectangleF used as the starting point for animating the display of a document preview.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions.RectangleForPreview(MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate,MonoTouch.UIKit.UIDocumentInteractionController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="ViewControllerForPreview">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIViewController ViewControllerForPreview (this MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate This, MonoTouch.UIKit.UIDocumentInteractionController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UIViewController ViewControllerForPreview(class MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate This, class MonoTouch.UIKit.UIDocumentInteractionController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIViewController</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentInteractionController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>The UIViewController that provides the document preview.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions.ViewControllerForPreview(MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate,MonoTouch.UIKit.UIDocumentInteractionController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="ViewForPreview">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIView ViewForPreview (this MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate This, MonoTouch.UIKit.UIDocumentInteractionController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UIView ViewForPreview(class MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate This, class MonoTouch.UIKit.UIDocumentInteractionController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIView</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentInteractionController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>The UIView to use as the starting point for the animation preview. If null, the preview fades into place.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions.ViewForPreview(MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate,MonoTouch.UIKit.UIDocumentInteractionController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="WillBeginPreview">
        <MemberSignature Language="C#" Value="public static void WillBeginPreview (this MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate This, MonoTouch.UIKit.UIDocumentInteractionController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillBeginPreview(class MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate This, class MonoTouch.UIKit.UIDocumentInteractionController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentInteractionController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>Indicates that document preview is about to start.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions.WillBeginPreview(MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate,MonoTouch.UIKit.UIDocumentInteractionController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="WillBeginSendingToApplication">
        <MemberSignature Language="C#" Value="public static void WillBeginSendingToApplication (this MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate This, MonoTouch.UIKit.UIDocumentInteractionController controller, string application);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillBeginSendingToApplication(class MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate This, class MonoTouch.UIKit.UIDocumentInteractionController controller, string application) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentInteractionController" />
          <Parameter Name="application" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="application">To be added.This parameter can be .</param>
          <summary>Indicates that the controller's document is about to be handed off to the specified application.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions.WillBeginSendingToApplication(MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate,MonoTouch.UIKit.UIDocumentInteractionController,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="WillPresentOpenInMenu">
        <MemberSignature Language="C#" Value="public static void WillPresentOpenInMenu (this MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate This, MonoTouch.UIKit.UIDocumentInteractionController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillPresentOpenInMenu(class MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate This, class MonoTouch.UIKit.UIDocumentInteractionController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentInteractionController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>Indicates that the "Open In..." menu is about to be presented to the app user.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions.WillPresentOpenInMenu(MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate,MonoTouch.UIKit.UIDocumentInteractionController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="WillPresentOptionsMenu">
        <MemberSignature Language="C#" Value="public static void WillPresentOptionsMenu (this MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate This, MonoTouch.UIKit.UIDocumentInteractionController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillPresentOptionsMenu(class MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate This, class MonoTouch.UIKit.UIDocumentInteractionController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentInteractionController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>Indicates that the "Options" menu is about to be presented to the app user.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDocumentInteractionControllerDelegate_Extensions.WillPresentOptionsMenu(MonoTouch.UIKit.IUIDocumentInteractionControllerDelegate,MonoTouch.UIKit.UIDocumentInteractionController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDocumentPickerDelegate" />
      </Targets>
      <Member MemberName="WasCancelled">
        <MemberSignature Language="C#" Value="public static void WasCancelled (this MonoTouch.UIKit.IUIDocumentPickerDelegate This, MonoTouch.UIKit.UIDocumentPickerViewController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WasCancelled(class MonoTouch.UIKit.IUIDocumentPickerDelegate This, class MonoTouch.UIKit.UIDocumentPickerViewController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDocumentPickerDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UIDocumentPickerViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>The user dismissed the picker.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDocumentPickerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIDocumentPickerDelegate_Extensions.WasCancelled(MonoTouch.UIKit.IUIDocumentPickerDelegate,MonoTouch.UIKit.UIDocumentPickerViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDynamicItem" />
      </Targets>
      <Member MemberName="GetCollisionBoundingPath">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIBezierPath GetCollisionBoundingPath (this MonoTouch.UIKit.IUIDynamicItem This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UIBezierPath GetCollisionBoundingPath(class MonoTouch.UIKit.IUIDynamicItem This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIBezierPath</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDynamicItem" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDynamicItem_Extensions" Member="M:MonoTouch.UIKit.UIDynamicItem_Extensions.GetCollisionBoundingPath(MonoTouch.UIKit.IUIDynamicItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIDynamicItem" />
      </Targets>
      <Member MemberName="GetCollisionBoundsType">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIDynamicItemCollisionBoundsType GetCollisionBoundsType (this MonoTouch.UIKit.IUIDynamicItem This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.UIKit.UIDynamicItemCollisionBoundsType GetCollisionBoundsType(class MonoTouch.UIKit.IUIDynamicItem This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIDynamicItemCollisionBoundsType</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIDynamicItem" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIDynamicItem_Extensions" Member="M:MonoTouch.UIKit.UIDynamicItem_Extensions.GetCollisionBoundsType(MonoTouch.UIKit.IUIDynamicItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIFocusEnvironment" />
      </Targets>
      <Member MemberName="GetPreferredFocusEnvironments">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.IUIFocusEnvironment[] GetPreferredFocusEnvironments (this MonoTouch.UIKit.IUIFocusEnvironment This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.IUIFocusEnvironment[] GetPreferredFocusEnvironments(class MonoTouch.UIKit.IUIFocusEnvironment This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.IUIFocusEnvironment[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIFocusEnvironment" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIFocusEnvironment_Extensions" Member="M:MonoTouch.UIKit.UIFocusEnvironment_Extensions.GetPreferredFocusEnvironments(MonoTouch.UIKit.IUIFocusEnvironment)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIFocusEnvironment" />
      </Targets>
      <Member MemberName="SetPreferredFocusEnvironments">
        <MemberSignature Language="C#" Value="public static void SetPreferredFocusEnvironments (this MonoTouch.UIKit.IUIFocusEnvironment This, MonoTouch.UIKit.IUIFocusEnvironment[] value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetPreferredFocusEnvironments(class MonoTouch.UIKit.IUIFocusEnvironment This, class MonoTouch.UIKit.IUIFocusEnvironment[] value) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIFocusEnvironment" RefType="this" />
          <Parameter Name="value" Type="MonoTouch.UIKit.IUIFocusEnvironment[]" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="value">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIFocusEnvironment_Extensions" Member="M:MonoTouch.UIKit.UIFocusEnvironment_Extensions.SetPreferredFocusEnvironments(MonoTouch.UIKit.IUIFocusEnvironment,MonoTouch.UIKit.IUIFocusEnvironment[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIGestureRecognizerDelegate" />
      </Targets>
      <Member MemberName="ShouldBegin">
        <MemberSignature Language="C#" Value="public static bool ShouldBegin (this MonoTouch.UIKit.IUIGestureRecognizerDelegate This, MonoTouch.UIKit.UIGestureRecognizer recognizer);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldBegin(class MonoTouch.UIKit.IUIGestureRecognizerDelegate This, class MonoTouch.UIKit.UIGestureRecognizer recognizer) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIGestureRecognizerDelegate" RefType="this" />
          <Parameter Name="recognizer" Type="MonoTouch.UIKit.UIGestureRecognizer" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="recognizer">To be added.</param>
          <summary>Whether the gesture recognition should begin.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIGestureRecognizerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIGestureRecognizerDelegate_Extensions.ShouldBegin(MonoTouch.UIKit.IUIGestureRecognizerDelegate,MonoTouch.UIKit.UIGestureRecognizer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIGestureRecognizerDelegate" />
      </Targets>
      <Member MemberName="ShouldBeRequiredToFailBy">
        <MemberSignature Language="C#" Value="public static bool ShouldBeRequiredToFailBy (this MonoTouch.UIKit.IUIGestureRecognizerDelegate This, MonoTouch.UIKit.UIGestureRecognizer gestureRecognizer, MonoTouch.UIKit.UIGestureRecognizer otherGestureRecognizer);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldBeRequiredToFailBy(class MonoTouch.UIKit.IUIGestureRecognizerDelegate This, class MonoTouch.UIKit.UIGestureRecognizer gestureRecognizer, class MonoTouch.UIKit.UIGestureRecognizer otherGestureRecognizer) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIGestureRecognizerDelegate" RefType="this" />
          <Parameter Name="gestureRecognizer" Type="MonoTouch.UIKit.UIGestureRecognizer" />
          <Parameter Name="otherGestureRecognizer" Type="MonoTouch.UIKit.UIGestureRecognizer" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="gestureRecognizer">To be added.</param>
          <param name="otherGestureRecognizer">To be added.</param>
          <summary>Whether there is a dynamic failure requirement between the specified gesture recognizers.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIGestureRecognizerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIGestureRecognizerDelegate_Extensions.ShouldBeRequiredToFailBy(MonoTouch.UIKit.IUIGestureRecognizerDelegate,MonoTouch.UIKit.UIGestureRecognizer,MonoTouch.UIKit.UIGestureRecognizer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIGestureRecognizerDelegate" />
      </Targets>
      <Member MemberName="ShouldReceivePress">
        <MemberSignature Language="C#" Value="public static bool ShouldReceivePress (this MonoTouch.UIKit.IUIGestureRecognizerDelegate This, MonoTouch.UIKit.UIGestureRecognizer gestureRecognizer, MonoTouch.UIKit.UIPress press);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldReceivePress(class MonoTouch.UIKit.IUIGestureRecognizerDelegate This, class MonoTouch.UIKit.UIGestureRecognizer gestureRecognizer, class MonoTouch.UIKit.UIPress press) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIGestureRecognizerDelegate" RefType="this" />
          <Parameter Name="gestureRecognizer" Type="MonoTouch.UIKit.UIGestureRecognizer" />
          <Parameter Name="press" Type="MonoTouch.UIKit.UIPress" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="gestureRecognizer">To be added.</param>
          <param name="press">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIGestureRecognizerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIGestureRecognizerDelegate_Extensions.ShouldReceivePress(MonoTouch.UIKit.IUIGestureRecognizerDelegate,MonoTouch.UIKit.UIGestureRecognizer,MonoTouch.UIKit.UIPress)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIGestureRecognizerDelegate" />
      </Targets>
      <Member MemberName="ShouldReceiveTouch">
        <MemberSignature Language="C#" Value="public static bool ShouldReceiveTouch (this MonoTouch.UIKit.IUIGestureRecognizerDelegate This, MonoTouch.UIKit.UIGestureRecognizer recognizer, MonoTouch.UIKit.UITouch touch);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldReceiveTouch(class MonoTouch.UIKit.IUIGestureRecognizerDelegate This, class MonoTouch.UIKit.UIGestureRecognizer recognizer, class MonoTouch.UIKit.UITouch touch) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIGestureRecognizerDelegate" RefType="this" />
          <Parameter Name="recognizer" Type="MonoTouch.UIKit.UIGestureRecognizer" />
          <Parameter Name="touch" Type="MonoTouch.UIKit.UITouch" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="recognizer">To be added.</param>
          <param name="touch">To be added.</param>
          <summary>Whether the recognizer should receive the specified touch.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIGestureRecognizerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIGestureRecognizerDelegate_Extensions.ShouldReceiveTouch(MonoTouch.UIKit.IUIGestureRecognizerDelegate,MonoTouch.UIKit.UIGestureRecognizer,MonoTouch.UIKit.UITouch)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIGestureRecognizerDelegate" />
      </Targets>
      <Member MemberName="ShouldRecognizeSimultaneously">
        <MemberSignature Language="C#" Value="public static bool ShouldRecognizeSimultaneously (this MonoTouch.UIKit.IUIGestureRecognizerDelegate This, MonoTouch.UIKit.UIGestureRecognizer gestureRecognizer, MonoTouch.UIKit.UIGestureRecognizer otherGestureRecognizer);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldRecognizeSimultaneously(class MonoTouch.UIKit.IUIGestureRecognizerDelegate This, class MonoTouch.UIKit.UIGestureRecognizer gestureRecognizer, class MonoTouch.UIKit.UIGestureRecognizer otherGestureRecognizer) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIGestureRecognizerDelegate" RefType="this" />
          <Parameter Name="gestureRecognizer" Type="MonoTouch.UIKit.UIGestureRecognizer" />
          <Parameter Name="otherGestureRecognizer" Type="MonoTouch.UIKit.UIGestureRecognizer" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="gestureRecognizer">To be added.</param>
          <param name="otherGestureRecognizer">To be added.</param>
          <summary>Whether the two gesture recognizers should be allowed to recognize gestures simultaneously.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIGestureRecognizerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIGestureRecognizerDelegate_Extensions.ShouldRecognizeSimultaneously(MonoTouch.UIKit.IUIGestureRecognizerDelegate,MonoTouch.UIKit.UIGestureRecognizer,MonoTouch.UIKit.UIGestureRecognizer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIGestureRecognizerDelegate" />
      </Targets>
      <Member MemberName="ShouldRequireFailureOf">
        <MemberSignature Language="C#" Value="public static bool ShouldRequireFailureOf (this MonoTouch.UIKit.IUIGestureRecognizerDelegate This, MonoTouch.UIKit.UIGestureRecognizer gestureRecognizer, MonoTouch.UIKit.UIGestureRecognizer otherGestureRecognizer);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldRequireFailureOf(class MonoTouch.UIKit.IUIGestureRecognizerDelegate This, class MonoTouch.UIKit.UIGestureRecognizer gestureRecognizer, class MonoTouch.UIKit.UIGestureRecognizer otherGestureRecognizer) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIGestureRecognizerDelegate" RefType="this" />
          <Parameter Name="gestureRecognizer" Type="MonoTouch.UIKit.UIGestureRecognizer" />
          <Parameter Name="otherGestureRecognizer" Type="MonoTouch.UIKit.UIGestureRecognizer" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="gestureRecognizer">To be added.</param>
          <param name="otherGestureRecognizer">To be added.</param>
          <summary>Whether the specified gestureRecognizer should be required to fail by the otherGestureRecognizer.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIGestureRecognizerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIGestureRecognizerDelegate_Extensions.ShouldRequireFailureOf(MonoTouch.UIKit.IUIGestureRecognizerDelegate,MonoTouch.UIKit.UIGestureRecognizer,MonoTouch.UIKit.UIGestureRecognizer)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIGuidedAccessRestrictionDelegate" />
      </Targets>
      <Member MemberName="GetDetailTextForGuidedAccessRestriction">
        <MemberSignature Language="C#" Value="public static string GetDetailTextForGuidedAccessRestriction (this MonoTouch.UIKit.IUIGuidedAccessRestrictionDelegate This, string restrictionIdentifier);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDetailTextForGuidedAccessRestriction(class MonoTouch.UIKit.IUIGuidedAccessRestrictionDelegate This, string restrictionIdentifier) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIGuidedAccessRestrictionDelegate" RefType="this" />
          <Parameter Name="restrictionIdentifier" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="restrictionIdentifier">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIGuidedAccessRestrictionDelegate_Extensions" Member="M:MonoTouch.UIKit.UIGuidedAccessRestrictionDelegate_Extensions.GetDetailTextForGuidedAccessRestriction(MonoTouch.UIKit.IUIGuidedAccessRestrictionDelegate,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIImagePickerControllerDelegate" />
      </Targets>
      <Member MemberName="Canceled">
        <MemberSignature Language="C#" Value="public static void Canceled (this MonoTouch.UIKit.IUIImagePickerControllerDelegate This, MonoTouch.UIKit.UIImagePickerController picker);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Canceled(class MonoTouch.UIKit.IUIImagePickerControllerDelegate This, class MonoTouch.UIKit.UIImagePickerController picker) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIImagePickerControllerDelegate" RefType="this" />
          <Parameter Name="picker" Type="MonoTouch.UIKit.UIImagePickerController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="picker">To be added.</param>
          <summary>Indicates that the user cancelled the media-picking operation.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIImagePickerControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIImagePickerControllerDelegate_Extensions.Canceled(MonoTouch.UIKit.IUIImagePickerControllerDelegate,MonoTouch.UIKit.UIImagePickerController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIImagePickerControllerDelegate" />
      </Targets>
      <Member MemberName="FinishedPickingImage">
        <MemberSignature Language="C#" Value="public static void FinishedPickingImage (this MonoTouch.UIKit.IUIImagePickerControllerDelegate This, MonoTouch.UIKit.UIImagePickerController picker, MonoTouch.UIKit.UIImage image, MonoTouch.Foundation.NSDictionary editingInfo);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FinishedPickingImage(class MonoTouch.UIKit.IUIImagePickerControllerDelegate This, class MonoTouch.UIKit.UIImagePickerController picker, class MonoTouch.UIKit.UIImage image, class MonoTouch.Foundation.NSDictionary editingInfo) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIImagePickerControllerDelegate" RefType="this" />
          <Parameter Name="picker" Type="MonoTouch.UIKit.UIImagePickerController" />
          <Parameter Name="image" Type="MonoTouch.UIKit.UIImage" />
          <Parameter Name="editingInfo" Type="MonoTouch.Foundation.NSDictionary" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="picker">To be added.</param>
          <param name="image">To be added.</param>
          <param name="editingInfo">To be added.</param>
          <summary>Indicates that the user has completed picking an image.|b</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIImagePickerControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIImagePickerControllerDelegate_Extensions.FinishedPickingImage(MonoTouch.UIKit.IUIImagePickerControllerDelegate,MonoTouch.UIKit.UIImagePickerController,MonoTouch.UIKit.UIImage,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIImagePickerControllerDelegate" />
      </Targets>
      <Member MemberName="FinishedPickingMedia">
        <MemberSignature Language="C#" Value="public static void FinishedPickingMedia (this MonoTouch.UIKit.IUIImagePickerControllerDelegate This, MonoTouch.UIKit.UIImagePickerController picker, MonoTouch.Foundation.NSDictionary info);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FinishedPickingMedia(class MonoTouch.UIKit.IUIImagePickerControllerDelegate This, class MonoTouch.UIKit.UIImagePickerController picker, class MonoTouch.Foundation.NSDictionary info) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIImagePickerControllerDelegate" RefType="this" />
          <Parameter Name="picker" Type="MonoTouch.UIKit.UIImagePickerController" />
          <Parameter Name="info" Type="MonoTouch.Foundation.NSDictionary" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="picker">To be added.</param>
          <param name="info">To be added.</param>
          <summary>Indicates that the user has picked a picture or movie.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIImagePickerControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIImagePickerControllerDelegate_Extensions.FinishedPickingMedia(MonoTouch.UIKit.IUIImagePickerControllerDelegate,MonoTouch.UIKit.UIImagePickerController,MonoTouch.Foundation.NSDictionary)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIInterfaceOrientation" />
      </Targets>
      <Member MemberName="IsLandscape">
        <MemberSignature Language="C#" Value="public static bool IsLandscape (this MonoTouch.UIKit.UIInterfaceOrientation orientation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLandscape(valuetype MonoTouch.UIKit.UIInterfaceOrientation orientation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="orientation" Type="MonoTouch.UIKit.UIInterfaceOrientation" RefType="this" />
        </Parameters>
        <Docs>
          <param name="orientation">The value to operate on.</param>
          <summary>Determines if the origination is one of the landscape
        values.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIInterfaceOrientationExtensions" Member="M:MonoTouch.UIKit.UIInterfaceOrientationExtensions.IsLandscape(MonoTouch.UIKit.UIInterfaceOrientation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIInterfaceOrientation" />
      </Targets>
      <Member MemberName="IsPortrait">
        <MemberSignature Language="C#" Value="public static bool IsPortrait (this MonoTouch.UIKit.UIInterfaceOrientation orientation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPortrait(valuetype MonoTouch.UIKit.UIInterfaceOrientation orientation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="orientation" Type="MonoTouch.UIKit.UIInterfaceOrientation" RefType="this" />
        </Parameters>
        <Docs>
          <param name="orientation">The value to operate on.</param>
          <summary>Determines if the orientation is one of the portrait orientations.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIInterfaceOrientationExtensions" Member="M:MonoTouch.UIKit.UIInterfaceOrientationExtensions.IsPortrait(MonoTouch.UIKit.UIInterfaceOrientation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUILayoutSupport" />
      </Targets>
      <Member MemberName="GetBottomAnchor">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.NSLayoutYAxisAnchor GetBottomAnchor (this MonoTouch.UIKit.IUILayoutSupport This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.NSLayoutYAxisAnchor GetBottomAnchor(class MonoTouch.UIKit.IUILayoutSupport This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.NSLayoutYAxisAnchor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUILayoutSupport" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UILayoutSupport_Extensions" Member="M:MonoTouch.UIKit.UILayoutSupport_Extensions.GetBottomAnchor(MonoTouch.UIKit.IUILayoutSupport)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUILayoutSupport" />
      </Targets>
      <Member MemberName="GetHeightAnchor">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.NSLayoutDimension GetHeightAnchor (this MonoTouch.UIKit.IUILayoutSupport This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.NSLayoutDimension GetHeightAnchor(class MonoTouch.UIKit.IUILayoutSupport This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.NSLayoutDimension</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUILayoutSupport" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UILayoutSupport_Extensions" Member="M:MonoTouch.UIKit.UILayoutSupport_Extensions.GetHeightAnchor(MonoTouch.UIKit.IUILayoutSupport)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUILayoutSupport" />
      </Targets>
      <Member MemberName="GetTopAnchor">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.NSLayoutYAxisAnchor GetTopAnchor (this MonoTouch.UIKit.IUILayoutSupport This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.NSLayoutYAxisAnchor GetTopAnchor(class MonoTouch.UIKit.IUILayoutSupport This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.NSLayoutYAxisAnchor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUILayoutSupport" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UILayoutSupport_Extensions" Member="M:MonoTouch.UIKit.UILayoutSupport_Extensions.GetTopAnchor(MonoTouch.UIKit.IUILayoutSupport)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUINavigationBarDelegate" />
      </Targets>
      <Member MemberName="DidPopItem">
        <MemberSignature Language="C#" Value="public static void DidPopItem (this MonoTouch.UIKit.IUINavigationBarDelegate This, MonoTouch.UIKit.UINavigationBar navigationBar, MonoTouch.UIKit.UINavigationItem item);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidPopItem(class MonoTouch.UIKit.IUINavigationBarDelegate This, class MonoTouch.UIKit.UINavigationBar navigationBar, class MonoTouch.UIKit.UINavigationItem item) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUINavigationBarDelegate" RefType="this" />
          <Parameter Name="navigationBar" Type="MonoTouch.UIKit.UINavigationBar" />
          <Parameter Name="item" Type="MonoTouch.UIKit.UINavigationItem" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="navigationBar">To be added.</param>
          <param name="item">To be added.</param>
          <summary>Called by the system shortly after the  has been popped from the navigation stack.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UINavigationBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UINavigationBarDelegate_Extensions.DidPopItem(MonoTouch.UIKit.IUINavigationBarDelegate,MonoTouch.UIKit.UINavigationBar,MonoTouch.UIKit.UINavigationItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUINavigationBarDelegate" />
      </Targets>
      <Member MemberName="DidPushItem">
        <MemberSignature Language="C#" Value="public static void DidPushItem (this MonoTouch.UIKit.IUINavigationBarDelegate This, MonoTouch.UIKit.UINavigationBar navigationBar, MonoTouch.UIKit.UINavigationItem item);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidPushItem(class MonoTouch.UIKit.IUINavigationBarDelegate This, class MonoTouch.UIKit.UINavigationBar navigationBar, class MonoTouch.UIKit.UINavigationItem item) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUINavigationBarDelegate" RefType="this" />
          <Parameter Name="navigationBar" Type="MonoTouch.UIKit.UINavigationBar" />
          <Parameter Name="item" Type="MonoTouch.UIKit.UINavigationItem" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="navigationBar">To be added.</param>
          <param name="item">To be added.</param>
          <summary>Called by the system shortly after the  has been pushed onto the navigation stack.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UINavigationBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UINavigationBarDelegate_Extensions.DidPushItem(MonoTouch.UIKit.IUINavigationBarDelegate,MonoTouch.UIKit.UINavigationBar,MonoTouch.UIKit.UINavigationItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUINavigationBarDelegate" />
      </Targets>
      <Member MemberName="ShouldPopItem">
        <MemberSignature Language="C#" Value="public static bool ShouldPopItem (this MonoTouch.UIKit.IUINavigationBarDelegate This, MonoTouch.UIKit.UINavigationBar navigationBar, MonoTouch.UIKit.UINavigationItem item);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldPopItem(class MonoTouch.UIKit.IUINavigationBarDelegate This, class MonoTouch.UIKit.UINavigationBar navigationBar, class MonoTouch.UIKit.UINavigationItem item) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUINavigationBarDelegate" RefType="this" />
          <Parameter Name="navigationBar" Type="MonoTouch.UIKit.UINavigationBar" />
          <Parameter Name="item" Type="MonoTouch.UIKit.UINavigationItem" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="navigationBar">To be added.</param>
          <param name="item">To be added.</param>
          <summary>Called by the system prior to popping the .</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UINavigationBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UINavigationBarDelegate_Extensions.ShouldPopItem(MonoTouch.UIKit.IUINavigationBarDelegate,MonoTouch.UIKit.UINavigationBar,MonoTouch.UIKit.UINavigationItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUINavigationBarDelegate" />
      </Targets>
      <Member MemberName="ShouldPushItem">
        <MemberSignature Language="C#" Value="public static bool ShouldPushItem (this MonoTouch.UIKit.IUINavigationBarDelegate This, MonoTouch.UIKit.UINavigationBar navigationBar, MonoTouch.UIKit.UINavigationItem item);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldPushItem(class MonoTouch.UIKit.IUINavigationBarDelegate This, class MonoTouch.UIKit.UINavigationBar navigationBar, class MonoTouch.UIKit.UINavigationItem item) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUINavigationBarDelegate" RefType="this" />
          <Parameter Name="navigationBar" Type="MonoTouch.UIKit.UINavigationBar" />
          <Parameter Name="item" Type="MonoTouch.UIKit.UINavigationItem" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="navigationBar">To be added.</param>
          <param name="item">To be added.</param>
          <summary>Called by the system prior to pushing the  onto the navigation stack.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UINavigationBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UINavigationBarDelegate_Extensions.ShouldPushItem(MonoTouch.UIKit.IUINavigationBarDelegate,MonoTouch.UIKit.UINavigationBar,MonoTouch.UIKit.UINavigationItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUINavigationControllerDelegate" />
      </Targets>
      <Member MemberName="DidShowViewController">
        <MemberSignature Language="C#" Value="public static void DidShowViewController (this MonoTouch.UIKit.IUINavigationControllerDelegate This, MonoTouch.UIKit.UINavigationController navigationController, MonoTouch.UIKit.UIViewController viewController, bool animated);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidShowViewController(class MonoTouch.UIKit.IUINavigationControllerDelegate This, class MonoTouch.UIKit.UINavigationController navigationController, class MonoTouch.UIKit.UIViewController viewController, bool animated) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUINavigationControllerDelegate" RefType="this" />
          <Parameter Name="navigationController" Type="MonoTouch.UIKit.UINavigationController" />
          <Parameter Name="viewController" Type="MonoTouch.UIKit.UIViewController" />
          <Parameter Name="animated" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="navigationController">To be added.</param>
          <param name="viewController">To be added.</param>
          <param name="animated">To be added.</param>
          <summary>Extension method called shortly after the <paramref name="viewController" /> has been made visible.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UINavigationControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UINavigationControllerDelegate_Extensions.DidShowViewController(MonoTouch.UIKit.IUINavigationControllerDelegate,MonoTouch.UIKit.UINavigationController,MonoTouch.UIKit.UIViewController,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUINavigationControllerDelegate" />
      </Targets>
      <Member MemberName="GetAnimationControllerForOperation">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning GetAnimationControllerForOperation (this MonoTouch.UIKit.IUINavigationControllerDelegate This, MonoTouch.UIKit.UINavigationController navigationController, MonoTouch.UIKit.UINavigationControllerOperation operation, MonoTouch.UIKit.UIViewController fromViewController, MonoTouch.UIKit.UIViewController toViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning GetAnimationControllerForOperation(class MonoTouch.UIKit.IUINavigationControllerDelegate This, class MonoTouch.UIKit.UINavigationController navigationController, valuetype MonoTouch.UIKit.UINavigationControllerOperation operation, class MonoTouch.UIKit.UIViewController fromViewController, class MonoTouch.UIKit.UIViewController toViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUINavigationControllerDelegate" RefType="this" />
          <Parameter Name="navigationController" Type="MonoTouch.UIKit.UINavigationController" />
          <Parameter Name="operation" Type="MonoTouch.UIKit.UINavigationControllerOperation" />
          <Parameter Name="fromViewController" Type="MonoTouch.UIKit.UIViewController" />
          <Parameter Name="toViewController" Type="MonoTouch.UIKit.UIViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="navigationController">To be added.</param>
          <param name="operation">To be added.</param>
          <param name="fromViewController">To be added.</param>
          <param name="toViewController">To be added.</param>
          <summary>Called by the system to retrieve the transition animation for the <paramref name="operation" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UINavigationControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UINavigationControllerDelegate_Extensions.GetAnimationControllerForOperation(MonoTouch.UIKit.IUINavigationControllerDelegate,MonoTouch.UIKit.UINavigationController,MonoTouch.UIKit.UINavigationControllerOperation,MonoTouch.UIKit.UIViewController,MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUINavigationControllerDelegate" />
      </Targets>
      <Member MemberName="GetInteractionControllerForAnimationController">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning GetInteractionControllerForAnimationController (this MonoTouch.UIKit.IUINavigationControllerDelegate This, MonoTouch.UIKit.UINavigationController navigationController, MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning animationController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning GetInteractionControllerForAnimationController(class MonoTouch.UIKit.IUINavigationControllerDelegate This, class MonoTouch.UIKit.UINavigationController navigationController, class MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning animationController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUINavigationControllerDelegate" RefType="this" />
          <Parameter Name="navigationController" Type="MonoTouch.UIKit.UINavigationController" />
          <Parameter Name="animationController" Type="MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="navigationController">To be added.</param>
          <param name="animationController">To be added.</param>
          <summary>Called by the system to retrieve an interactive transition animation.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UINavigationControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UINavigationControllerDelegate_Extensions.GetInteractionControllerForAnimationController(MonoTouch.UIKit.IUINavigationControllerDelegate,MonoTouch.UIKit.UINavigationController,MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUINavigationControllerDelegate" />
      </Targets>
      <Member MemberName="GetPreferredInterfaceOrientation">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIInterfaceOrientation GetPreferredInterfaceOrientation (this MonoTouch.UIKit.IUINavigationControllerDelegate This, MonoTouch.UIKit.UINavigationController navigationController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.UIKit.UIInterfaceOrientation GetPreferredInterfaceOrientation(class MonoTouch.UIKit.IUINavigationControllerDelegate This, class MonoTouch.UIKit.UINavigationController navigationController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIInterfaceOrientation</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUINavigationControllerDelegate" RefType="this" />
          <Parameter Name="navigationController" Type="MonoTouch.UIKit.UINavigationController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="navigationController">To be added.</param>
          <summary>Can be overridden to set the preferred interface orientation of the .</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UINavigationControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UINavigationControllerDelegate_Extensions.GetPreferredInterfaceOrientation(MonoTouch.UIKit.IUINavigationControllerDelegate,MonoTouch.UIKit.UINavigationController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUINavigationControllerDelegate" />
      </Targets>
      <Member MemberName="SupportedInterfaceOrientations">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIInterfaceOrientationMask SupportedInterfaceOrientations (this MonoTouch.UIKit.IUINavigationControllerDelegate This, MonoTouch.UIKit.UINavigationController navigationController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.UIKit.UIInterfaceOrientationMask SupportedInterfaceOrientations(class MonoTouch.UIKit.IUINavigationControllerDelegate This, class MonoTouch.UIKit.UINavigationController navigationController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIInterfaceOrientationMask</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUINavigationControllerDelegate" RefType="this" />
          <Parameter Name="navigationController" Type="MonoTouch.UIKit.UINavigationController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="navigationController">To be added.</param>
          <summary>Can be overridden to dynamically specify the supported orientations of the .</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UINavigationControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UINavigationControllerDelegate_Extensions.SupportedInterfaceOrientations(MonoTouch.UIKit.IUINavigationControllerDelegate,MonoTouch.UIKit.UINavigationController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUINavigationControllerDelegate" />
      </Targets>
      <Member MemberName="WillShowViewController">
        <MemberSignature Language="C#" Value="public static void WillShowViewController (this MonoTouch.UIKit.IUINavigationControllerDelegate This, MonoTouch.UIKit.UINavigationController navigationController, MonoTouch.UIKit.UIViewController viewController, bool animated);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillShowViewController(class MonoTouch.UIKit.IUINavigationControllerDelegate This, class MonoTouch.UIKit.UINavigationController navigationController, class MonoTouch.UIKit.UIViewController viewController, bool animated) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUINavigationControllerDelegate" RefType="this" />
          <Parameter Name="navigationController" Type="MonoTouch.UIKit.UINavigationController" />
          <Parameter Name="viewController" Type="MonoTouch.UIKit.UIViewController" />
          <Parameter Name="animated" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="navigationController">To be added.</param>
          <param name="viewController">To be added.</param>
          <param name="animated">To be added.</param>
          <summary>Called by the system shortly before the  is displayed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UINavigationControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UINavigationControllerDelegate_Extensions.WillShowViewController(MonoTouch.UIKit.IUINavigationControllerDelegate,MonoTouch.UIKit.UINavigationController,MonoTouch.UIKit.UIViewController,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPageViewControllerDataSource" />
      </Targets>
      <Member MemberName="GetPresentationCount">
        <MemberSignature Language="C#" Value="public static int GetPresentationCount (this MonoTouch.UIKit.IUIPageViewControllerDataSource This, MonoTouch.UIKit.UIPageViewController pageViewController);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetPresentationCount(class MonoTouch.UIKit.IUIPageViewControllerDataSource This, class MonoTouch.UIKit.UIPageViewController pageViewController) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nint GetPresentationCount (this MonoTouch.UIKit.IUIPageViewControllerDataSource This, MonoTouch.UIKit.UIPageViewController pageViewController);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nint GetPresentationCount(class MonoTouch.UIKit.IUIPageViewControllerDataSource This, class MonoTouch.UIKit.UIPageViewController pageViewController) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Int32</ReturnType>
          <ReturnType apistyle="unified">System.nint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPageViewControllerDataSource" RefType="this" />
          <Parameter Name="pageViewController" Type="MonoTouch.UIKit.UIPageViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pageViewController">To be added.</param>
          <summary>The number of pages to be shown in the page indicator.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPageViewControllerDataSource_Extensions" Member="M:MonoTouch.UIKit.UIPageViewControllerDataSource_Extensions.GetPresentationCount(MonoTouch.UIKit.IUIPageViewControllerDataSource,MonoTouch.UIKit.UIPageViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPageViewControllerDataSource" />
      </Targets>
      <Member MemberName="GetPresentationIndex">
        <MemberSignature Language="C#" Value="public static int GetPresentationIndex (this MonoTouch.UIKit.IUIPageViewControllerDataSource This, MonoTouch.UIKit.UIPageViewController pageViewController);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetPresentationIndex(class MonoTouch.UIKit.IUIPageViewControllerDataSource This, class MonoTouch.UIKit.UIPageViewController pageViewController) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nint GetPresentationIndex (this MonoTouch.UIKit.IUIPageViewControllerDataSource This, MonoTouch.UIKit.UIPageViewController pageViewController);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nint GetPresentationIndex(class MonoTouch.UIKit.IUIPageViewControllerDataSource This, class MonoTouch.UIKit.UIPageViewController pageViewController) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Int32</ReturnType>
          <ReturnType apistyle="unified">System.nint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPageViewControllerDataSource" RefType="this" />
          <Parameter Name="pageViewController" Type="MonoTouch.UIKit.UIPageViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pageViewController">To be added.</param>
          <summary>The index of the page to be highlighted in the page indicator.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPageViewControllerDataSource_Extensions" Member="M:MonoTouch.UIKit.UIPageViewControllerDataSource_Extensions.GetPresentationIndex(MonoTouch.UIKit.IUIPageViewControllerDataSource,MonoTouch.UIKit.UIPageViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPageViewControllerDelegate" />
      </Targets>
      <Member MemberName="DidFinishAnimating">
        <MemberSignature Language="C#" Value="public static void DidFinishAnimating (this MonoTouch.UIKit.IUIPageViewControllerDelegate This, MonoTouch.UIKit.UIPageViewController pageViewController, bool finished, MonoTouch.UIKit.UIViewController[] previousViewControllers, bool completed);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinishAnimating(class MonoTouch.UIKit.IUIPageViewControllerDelegate This, class MonoTouch.UIKit.UIPageViewController pageViewController, bool finished, class MonoTouch.UIKit.UIViewController[] previousViewControllers, bool completed) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPageViewControllerDelegate" RefType="this" />
          <Parameter Name="pageViewController" Type="MonoTouch.UIKit.UIPageViewController" />
          <Parameter Name="finished" Type="System.Boolean" />
          <Parameter Name="previousViewControllers" Type="MonoTouch.UIKit.UIViewController[]" />
          <Parameter Name="completed" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pageViewController">To be added.</param>
          <param name="finished">To be added.</param>
          <param name="previousViewControllers">To be added.</param>
          <param name="completed">To be added.</param>
          <summary>Indicates that animation has completed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPageViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPageViewControllerDelegate_Extensions.DidFinishAnimating(MonoTouch.UIKit.IUIPageViewControllerDelegate,MonoTouch.UIKit.UIPageViewController,System.Boolean,MonoTouch.UIKit.UIViewController[],System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPageViewControllerDelegate" />
      </Targets>
      <Member MemberName="GetPreferredInterfaceOrientationForPresentation">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIInterfaceOrientation GetPreferredInterfaceOrientationForPresentation (this MonoTouch.UIKit.IUIPageViewControllerDelegate This, MonoTouch.UIKit.UIPageViewController pageViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.UIKit.UIInterfaceOrientation GetPreferredInterfaceOrientationForPresentation(class MonoTouch.UIKit.IUIPageViewControllerDelegate This, class MonoTouch.UIKit.UIPageViewController pageViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIInterfaceOrientation</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPageViewControllerDelegate" RefType="this" />
          <Parameter Name="pageViewController" Type="MonoTouch.UIKit.UIPageViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pageViewController">To be added.</param>
          <summary>The preferred orientation of the UIPageViewController.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPageViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPageViewControllerDelegate_Extensions.GetPreferredInterfaceOrientationForPresentation(MonoTouch.UIKit.IUIPageViewControllerDelegate,MonoTouch.UIKit.UIPageViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPageViewControllerDelegate" />
      </Targets>
      <Member MemberName="GetSpineLocation">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIPageViewControllerSpineLocation GetSpineLocation (this MonoTouch.UIKit.IUIPageViewControllerDelegate This, MonoTouch.UIKit.UIPageViewController pageViewController, MonoTouch.UIKit.UIInterfaceOrientation orientation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.UIKit.UIPageViewControllerSpineLocation GetSpineLocation(class MonoTouch.UIKit.IUIPageViewControllerDelegate This, class MonoTouch.UIKit.UIPageViewController pageViewController, valuetype MonoTouch.UIKit.UIInterfaceOrientation orientation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIPageViewControllerSpineLocation</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPageViewControllerDelegate" RefType="this" />
          <Parameter Name="pageViewController" Type="MonoTouch.UIKit.UIPageViewController" />
          <Parameter Name="orientation" Type="MonoTouch.UIKit.UIInterfaceOrientation" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pageViewController">To be added.</param>
          <param name="orientation">To be added.</param>
          <summary>The location of the spine of the UIPageViewController.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPageViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPageViewControllerDelegate_Extensions.GetSpineLocation(MonoTouch.UIKit.IUIPageViewControllerDelegate,MonoTouch.UIKit.UIPageViewController,MonoTouch.UIKit.UIInterfaceOrientation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPageViewControllerDelegate" />
      </Targets>
      <Member MemberName="SupportedInterfaceOrientations">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIInterfaceOrientationMask SupportedInterfaceOrientations (this MonoTouch.UIKit.IUIPageViewControllerDelegate This, MonoTouch.UIKit.UIPageViewController pageViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.UIKit.UIInterfaceOrientationMask SupportedInterfaceOrientations(class MonoTouch.UIKit.IUIPageViewControllerDelegate This, class MonoTouch.UIKit.UIPageViewController pageViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIInterfaceOrientationMask</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPageViewControllerDelegate" RefType="this" />
          <Parameter Name="pageViewController" Type="MonoTouch.UIKit.UIPageViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pageViewController">To be added.</param>
          <summary>The supported interface orientations.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPageViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPageViewControllerDelegate_Extensions.SupportedInterfaceOrientations(MonoTouch.UIKit.IUIPageViewControllerDelegate,MonoTouch.UIKit.UIPageViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPageViewControllerDelegate" />
      </Targets>
      <Member MemberName="WillTransition">
        <MemberSignature Language="C#" Value="public static void WillTransition (this MonoTouch.UIKit.IUIPageViewControllerDelegate This, MonoTouch.UIKit.UIPageViewController pageViewController, MonoTouch.UIKit.UIViewController[] pendingViewControllers);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillTransition(class MonoTouch.UIKit.IUIPageViewControllerDelegate This, class MonoTouch.UIKit.UIPageViewController pageViewController, class MonoTouch.UIKit.UIViewController[] pendingViewControllers) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPageViewControllerDelegate" RefType="this" />
          <Parameter Name="pageViewController" Type="MonoTouch.UIKit.UIPageViewController" />
          <Parameter Name="pendingViewControllers" Type="MonoTouch.UIKit.UIViewController[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pageViewController">To be added.</param>
          <param name="pendingViewControllers">To be added.</param>
          <summary>Indicates that a transition is about to begin.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPageViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPageViewControllerDelegate_Extensions.WillTransition(MonoTouch.UIKit.IUIPageViewControllerDelegate,MonoTouch.UIKit.UIPageViewController,MonoTouch.UIKit.UIViewController[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPickerViewAccessibilityDelegate" />
      </Targets>
      <Member MemberName="GetAccessibilityHint">
        <MemberSignature Language="C#" Value="public static string GetAccessibilityHint (this MonoTouch.UIKit.IUIPickerViewAccessibilityDelegate This, MonoTouch.UIKit.UIPickerView pickerView, int component);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetAccessibilityHint(class MonoTouch.UIKit.IUIPickerViewAccessibilityDelegate This, class MonoTouch.UIKit.UIPickerView pickerView, int32 component) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static string GetAccessibilityHint (this MonoTouch.UIKit.IUIPickerViewAccessibilityDelegate This, MonoTouch.UIKit.UIPickerView pickerView, nint component);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetAccessibilityHint(class MonoTouch.UIKit.IUIPickerViewAccessibilityDelegate This, class MonoTouch.UIKit.UIPickerView pickerView, valuetype System.nint component) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPickerViewAccessibilityDelegate" RefType="this" />
          <Parameter Name="pickerView" Type="MonoTouch.UIKit.UIPickerView" />
          <Parameter Name="component" Type="System.Int32" apistyle="classic" />
          <Parameter Name="component" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pickerView">To be added.</param>
          <param name="component">To be added.</param>
          <summary>Returns a description of what the <paramref name="component" /> action is on the <paramref name="pickerView" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPickerViewAccessibilityDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPickerViewAccessibilityDelegate_Extensions.GetAccessibilityHint(MonoTouch.UIKit.IUIPickerViewAccessibilityDelegate,MonoTouch.UIKit.UIPickerView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPickerViewAccessibilityDelegate" />
      </Targets>
      <Member MemberName="GetAccessibilityLabel">
        <MemberSignature Language="C#" Value="public static string GetAccessibilityLabel (this MonoTouch.UIKit.IUIPickerViewAccessibilityDelegate This, MonoTouch.UIKit.UIPickerView pickerView, int acessibilityLabelForComponent);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetAccessibilityLabel(class MonoTouch.UIKit.IUIPickerViewAccessibilityDelegate This, class MonoTouch.UIKit.UIPickerView pickerView, int32 acessibilityLabelForComponent) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static string GetAccessibilityLabel (this MonoTouch.UIKit.IUIPickerViewAccessibilityDelegate This, MonoTouch.UIKit.UIPickerView pickerView, nint acessibilityLabelForComponent);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetAccessibilityLabel(class MonoTouch.UIKit.IUIPickerViewAccessibilityDelegate This, class MonoTouch.UIKit.UIPickerView pickerView, valuetype System.nint acessibilityLabelForComponent) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPickerViewAccessibilityDelegate" RefType="this" />
          <Parameter Name="pickerView" Type="MonoTouch.UIKit.UIPickerView" />
          <Parameter Name="acessibilityLabelForComponent" Type="System.Int32" apistyle="classic" />
          <Parameter Name="acessibilityLabelForComponent" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pickerView">To be added.</param>
          <param name="acessibilityLabelForComponent">To be added.</param>
          <summary>Returns the accessibility label for a component.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPickerViewAccessibilityDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPickerViewAccessibilityDelegate_Extensions.GetAccessibilityLabel(MonoTouch.UIKit.IUIPickerViewAccessibilityDelegate,MonoTouch.UIKit.UIPickerView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPickerViewDelegate" />
      </Targets>
      <Member MemberName="GetAttributedTitle">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSAttributedString GetAttributedTitle (this MonoTouch.UIKit.IUIPickerViewDelegate This, MonoTouch.UIKit.UIPickerView pickerView, int row, int component);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSAttributedString GetAttributedTitle(class MonoTouch.UIKit.IUIPickerViewDelegate This, class MonoTouch.UIKit.UIPickerView pickerView, int32 row, int32 component) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSAttributedString GetAttributedTitle (this MonoTouch.UIKit.IUIPickerViewDelegate This, MonoTouch.UIKit.UIPickerView pickerView, nint row, nint component);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSAttributedString GetAttributedTitle(class MonoTouch.UIKit.IUIPickerViewDelegate This, class MonoTouch.UIKit.UIPickerView pickerView, valuetype System.nint row, valuetype System.nint component) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSAttributedString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPickerViewDelegate" RefType="this" />
          <Parameter Name="pickerView" Type="MonoTouch.UIKit.UIPickerView" />
          <Parameter Name="row" Type="System.Int32" apistyle="classic" />
          <Parameter Name="component" Type="System.Int32" apistyle="classic" />
          <Parameter Name="row" Type="System.nint" apistyle="unified" />
          <Parameter Name="component" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pickerView">Reference to the view making this request.</param>
          <param name="row" />
          <param name="component" />
          <summary>Method invoked to get an attributed string for a particular component in the picker view.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPickerViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPickerViewDelegate_Extensions.GetAttributedTitle(MonoTouch.UIKit.IUIPickerViewDelegate,MonoTouch.UIKit.UIPickerView,System.nint,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPickerViewDelegate" />
      </Targets>
      <Member MemberName="GetComponentWidth">
        <MemberSignature Language="C#" Value="public static float GetComponentWidth (this MonoTouch.UIKit.IUIPickerViewDelegate This, MonoTouch.UIKit.UIPickerView pickerView, int component);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 GetComponentWidth(class MonoTouch.UIKit.IUIPickerViewDelegate This, class MonoTouch.UIKit.UIPickerView pickerView, int32 component) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nfloat GetComponentWidth (this MonoTouch.UIKit.IUIPickerViewDelegate This, MonoTouch.UIKit.UIPickerView pickerView, nint component);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat GetComponentWidth(class MonoTouch.UIKit.IUIPickerViewDelegate This, class MonoTouch.UIKit.UIPickerView pickerView, valuetype System.nint component) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Single</ReturnType>
          <ReturnType apistyle="unified">System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPickerViewDelegate" RefType="this" />
          <Parameter Name="pickerView" Type="MonoTouch.UIKit.UIPickerView" />
          <Parameter Name="component" Type="System.Int32" apistyle="classic" />
          <Parameter Name="component" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pickerView">To be added.</param>
          <param name="component">To be added.</param>
          <summary>The width of the component at the specified index.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPickerViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPickerViewDelegate_Extensions.GetComponentWidth(MonoTouch.UIKit.IUIPickerViewDelegate,MonoTouch.UIKit.UIPickerView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPickerViewDelegate" />
      </Targets>
      <Member MemberName="GetRowHeight">
        <MemberSignature Language="C#" Value="public static float GetRowHeight (this MonoTouch.UIKit.IUIPickerViewDelegate This, MonoTouch.UIKit.UIPickerView pickerView, int component);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 GetRowHeight(class MonoTouch.UIKit.IUIPickerViewDelegate This, class MonoTouch.UIKit.UIPickerView pickerView, int32 component) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nfloat GetRowHeight (this MonoTouch.UIKit.IUIPickerViewDelegate This, MonoTouch.UIKit.UIPickerView pickerView, nint component);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat GetRowHeight(class MonoTouch.UIKit.IUIPickerViewDelegate This, class MonoTouch.UIKit.UIPickerView pickerView, valuetype System.nint component) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Single</ReturnType>
          <ReturnType apistyle="unified">System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPickerViewDelegate" RefType="this" />
          <Parameter Name="pickerView" Type="MonoTouch.UIKit.UIPickerView" />
          <Parameter Name="component" Type="System.Int32" apistyle="classic" />
          <Parameter Name="component" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pickerView">To be added.</param>
          <param name="component">To be added.</param>
          <summary>The height of the component at the specified index.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPickerViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPickerViewDelegate_Extensions.GetRowHeight(MonoTouch.UIKit.IUIPickerViewDelegate,MonoTouch.UIKit.UIPickerView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPickerViewDelegate" />
      </Targets>
      <Member MemberName="GetTitle">
        <MemberSignature Language="C#" Value="public static string GetTitle (this MonoTouch.UIKit.IUIPickerViewDelegate This, MonoTouch.UIKit.UIPickerView pickerView, int row, int component);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTitle(class MonoTouch.UIKit.IUIPickerViewDelegate This, class MonoTouch.UIKit.UIPickerView pickerView, int32 row, int32 component) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static string GetTitle (this MonoTouch.UIKit.IUIPickerViewDelegate This, MonoTouch.UIKit.UIPickerView pickerView, nint row, nint component);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTitle(class MonoTouch.UIKit.IUIPickerViewDelegate This, class MonoTouch.UIKit.UIPickerView pickerView, valuetype System.nint row, valuetype System.nint component) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPickerViewDelegate" RefType="this" />
          <Parameter Name="pickerView" Type="MonoTouch.UIKit.UIPickerView" />
          <Parameter Name="row" Type="System.Int32" apistyle="classic" />
          <Parameter Name="component" Type="System.Int32" apistyle="classic" />
          <Parameter Name="row" Type="System.nint" apistyle="unified" />
          <Parameter Name="component" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pickerView">To be added.</param>
          <param name="row">To be added.</param>
          <param name="component">To be added.</param>
          <summary>The title of the specified component in the specified row.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPickerViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPickerViewDelegate_Extensions.GetTitle(MonoTouch.UIKit.IUIPickerViewDelegate,MonoTouch.UIKit.UIPickerView,System.nint,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPickerViewDelegate" />
      </Targets>
      <Member MemberName="GetView">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIView GetView (this MonoTouch.UIKit.IUIPickerViewDelegate This, MonoTouch.UIKit.UIPickerView pickerView, int row, int component, MonoTouch.UIKit.UIView view);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UIView GetView(class MonoTouch.UIKit.IUIPickerViewDelegate This, class MonoTouch.UIKit.UIPickerView pickerView, int32 row, int32 component, class MonoTouch.UIKit.UIView view) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIView GetView (this MonoTouch.UIKit.IUIPickerViewDelegate This, MonoTouch.UIKit.UIPickerView pickerView, nint row, nint component, MonoTouch.UIKit.UIView view);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UIView GetView(class MonoTouch.UIKit.IUIPickerViewDelegate This, class MonoTouch.UIKit.UIPickerView pickerView, valuetype System.nint row, valuetype System.nint component, class MonoTouch.UIKit.UIView view) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIView</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPickerViewDelegate" RefType="this" />
          <Parameter Name="pickerView" Type="MonoTouch.UIKit.UIPickerView" />
          <Parameter Name="row" Type="System.Int32" apistyle="classic" />
          <Parameter Name="component" Type="System.Int32" apistyle="classic" />
          <Parameter Name="view" Type="MonoTouch.UIKit.UIView" />
          <Parameter Name="row" Type="System.nint" apistyle="unified" />
          <Parameter Name="component" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pickerView">To be added.</param>
          <param name="row">To be added.</param>
          <param name="component">To be added.</param>
          <param name="view">To be added.</param>
          <summary>Retrieves the view for a given row and component. The last argument is the previously-used UIView, which is now hidden and cached.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPickerViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPickerViewDelegate_Extensions.GetView(MonoTouch.UIKit.IUIPickerViewDelegate,MonoTouch.UIKit.UIPickerView,System.nint,System.nint,MonoTouch.UIKit.UIView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPickerViewDelegate" />
      </Targets>
      <Member MemberName="Selected">
        <MemberSignature Language="C#" Value="public static void Selected (this MonoTouch.UIKit.IUIPickerViewDelegate This, MonoTouch.UIKit.UIPickerView pickerView, int row, int component);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Selected(class MonoTouch.UIKit.IUIPickerViewDelegate This, class MonoTouch.UIKit.UIPickerView pickerView, int32 row, int32 component) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void Selected (this MonoTouch.UIKit.IUIPickerViewDelegate This, MonoTouch.UIKit.UIPickerView pickerView, nint row, nint component);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Selected(class MonoTouch.UIKit.IUIPickerViewDelegate This, class MonoTouch.UIKit.UIPickerView pickerView, valuetype System.nint row, valuetype System.nint component) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPickerViewDelegate" RefType="this" />
          <Parameter Name="pickerView" Type="MonoTouch.UIKit.UIPickerView" />
          <Parameter Name="row" Type="System.Int32" apistyle="classic" />
          <Parameter Name="component" Type="System.Int32" apistyle="classic" />
          <Parameter Name="row" Type="System.nint" apistyle="unified" />
          <Parameter Name="component" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="pickerView">To be added.</param>
          <param name="row">To be added.</param>
          <param name="component">To be added.</param>
          <summary>Indicates that the user has selected a row in the component.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPickerViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPickerViewDelegate_Extensions.Selected(MonoTouch.UIKit.IUIPickerViewDelegate,MonoTouch.UIKit.UIPickerView,System.nint,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPopoverControllerDelegate" />
      </Targets>
      <Member MemberName="DidDismiss">
        <MemberSignature Language="C#" Value="public static void DidDismiss (this MonoTouch.UIKit.IUIPopoverControllerDelegate This, MonoTouch.UIKit.UIPopoverController popoverController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDismiss(class MonoTouch.UIKit.IUIPopoverControllerDelegate This, class MonoTouch.UIKit.UIPopoverController popoverController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPopoverControllerDelegate" RefType="this" />
          <Parameter Name="popoverController" Type="MonoTouch.UIKit.UIPopoverController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="popoverController">To be added.</param>
          <summary>Indicates that the UIPopover was dismissed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPopoverControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPopoverControllerDelegate_Extensions.DidDismiss(MonoTouch.UIKit.IUIPopoverControllerDelegate,MonoTouch.UIKit.UIPopoverController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPopoverControllerDelegate" />
      </Targets>
      <Member MemberName="ShouldDismiss">
        <MemberSignature Language="C#" Value="public static bool ShouldDismiss (this MonoTouch.UIKit.IUIPopoverControllerDelegate This, MonoTouch.UIKit.UIPopoverController popoverController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldDismiss(class MonoTouch.UIKit.IUIPopoverControllerDelegate This, class MonoTouch.UIKit.UIPopoverController popoverController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPopoverControllerDelegate" RefType="this" />
          <Parameter Name="popoverController" Type="MonoTouch.UIKit.UIPopoverController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="popoverController">To be added.</param>
          <summary>Whether the popover should be dismissed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPopoverControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPopoverControllerDelegate_Extensions.ShouldDismiss(MonoTouch.UIKit.IUIPopoverControllerDelegate,MonoTouch.UIKit.UIPopoverController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPopoverControllerDelegate" />
      </Targets>
      <Member MemberName="WillReposition">
        <MemberSignature Language="C#" Value="public static void WillReposition (this MonoTouch.UIKit.IUIPopoverControllerDelegate This, MonoTouch.UIKit.UIPopoverController popoverController, ref System.Drawing.RectangleF rect, ref MonoTouch.UIKit.UIView view);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillReposition(class MonoTouch.UIKit.IUIPopoverControllerDelegate This, class MonoTouch.UIKit.UIPopoverController popoverController, valuetype System.Drawing.RectangleF rect, class MonoTouch.UIKit.UIView view) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void WillReposition (this MonoTouch.UIKit.IUIPopoverControllerDelegate This, MonoTouch.UIKit.UIPopoverController popoverController, ref MonoTouch.CoreGraphics.CGRect rect, ref MonoTouch.UIKit.UIView view);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillReposition(class MonoTouch.UIKit.IUIPopoverControllerDelegate This, class MonoTouch.UIKit.UIPopoverController popoverController, valuetype MonoTouch.CoreGraphics.CGRect rect, class MonoTouch.UIKit.UIView view) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPopoverControllerDelegate" RefType="this" />
          <Parameter Name="popoverController" Type="MonoTouch.UIKit.UIPopoverController" />
          <Parameter Name="rect" Type="System.Drawing.RectangleF&amp;" RefType="ref" apistyle="classic" />
          <Parameter Name="view" Type="MonoTouch.UIKit.UIView&amp;" RefType="ref" />
          <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect&amp;" RefType="ref" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="popoverController">To be added.</param>
          <param name="rect">To be added.</param>
          <param name="view">To be added.</param>
          <summary>Indicates that the popover is about to change position.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPopoverControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPopoverControllerDelegate_Extensions.WillReposition(MonoTouch.UIKit.IUIPopoverControllerDelegate,MonoTouch.UIKit.UIPopoverController,MonoTouch.CoreGraphics.CGRect@,MonoTouch.UIKit.UIView@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPopoverPresentationControllerDelegate" />
      </Targets>
      <Member MemberName="DidDismissPopover">
        <MemberSignature Language="C#" Value="public static void DidDismissPopover (this MonoTouch.UIKit.IUIPopoverPresentationControllerDelegate This, MonoTouch.UIKit.UIPopoverPresentationController popoverPresentationController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDismissPopover(class MonoTouch.UIKit.IUIPopoverPresentationControllerDelegate This, class MonoTouch.UIKit.UIPopoverPresentationController popoverPresentationController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPopoverPresentationControllerDelegate" RefType="this" />
          <Parameter Name="popoverPresentationController" Type="MonoTouch.UIKit.UIPopoverPresentationController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="popoverPresentationController">To be added.</param>
          <summary>The popover that is controlled by <paramref name="popoverPresentationController" /> was dismissed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPopoverPresentationControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPopoverPresentationControllerDelegate_Extensions.DidDismissPopover(MonoTouch.UIKit.IUIPopoverPresentationControllerDelegate,MonoTouch.UIKit.UIPopoverPresentationController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPopoverPresentationControllerDelegate" />
      </Targets>
      <Member MemberName="PrepareForPopoverPresentation">
        <MemberSignature Language="C#" Value="public static void PrepareForPopoverPresentation (this MonoTouch.UIKit.IUIPopoverPresentationControllerDelegate This, MonoTouch.UIKit.UIPopoverPresentationController popoverPresentationController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PrepareForPopoverPresentation(class MonoTouch.UIKit.IUIPopoverPresentationControllerDelegate This, class MonoTouch.UIKit.UIPopoverPresentationController popoverPresentationController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPopoverPresentationControllerDelegate" RefType="this" />
          <Parameter Name="popoverPresentationController" Type="MonoTouch.UIKit.UIPopoverPresentationController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="popoverPresentationController">To be added.</param>
          <summary>The popover that is controlled by <paramref name="popoverPresentationController" /> will be presented soon.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPopoverPresentationControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPopoverPresentationControllerDelegate_Extensions.PrepareForPopoverPresentation(MonoTouch.UIKit.IUIPopoverPresentationControllerDelegate,MonoTouch.UIKit.UIPopoverPresentationController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPopoverPresentationControllerDelegate" />
      </Targets>
      <Member MemberName="ShouldDismissPopover">
        <MemberSignature Language="C#" Value="public static bool ShouldDismissPopover (this MonoTouch.UIKit.IUIPopoverPresentationControllerDelegate This, MonoTouch.UIKit.UIPopoverPresentationController popoverPresentationController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldDismissPopover(class MonoTouch.UIKit.IUIPopoverPresentationControllerDelegate This, class MonoTouch.UIKit.UIPopoverPresentationController popoverPresentationController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPopoverPresentationControllerDelegate" RefType="this" />
          <Parameter Name="popoverPresentationController" Type="MonoTouch.UIKit.UIPopoverPresentationController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="popoverPresentationController">To be added.</param>
          <summary>Asks if the popover that is controlled by <paramref name="popoverPresentationController" /> should be dismissed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPopoverPresentationControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPopoverPresentationControllerDelegate_Extensions.ShouldDismissPopover(MonoTouch.UIKit.IUIPopoverPresentationControllerDelegate,MonoTouch.UIKit.UIPopoverPresentationController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPopoverPresentationControllerDelegate" />
      </Targets>
      <Member MemberName="WillRepositionPopover">
        <MemberSignature Language="C#" Value="public static void WillRepositionPopover (this MonoTouch.UIKit.IUIPopoverPresentationControllerDelegate This, MonoTouch.UIKit.UIPopoverPresentationController popoverPresentationController, ref System.Drawing.RectangleF targetRect, ref MonoTouch.UIKit.UIView inView);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillRepositionPopover(class MonoTouch.UIKit.IUIPopoverPresentationControllerDelegate This, class MonoTouch.UIKit.UIPopoverPresentationController popoverPresentationController, valuetype System.Drawing.RectangleF targetRect, class MonoTouch.UIKit.UIView inView) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void WillRepositionPopover (this MonoTouch.UIKit.IUIPopoverPresentationControllerDelegate This, MonoTouch.UIKit.UIPopoverPresentationController popoverPresentationController, ref MonoTouch.CoreGraphics.CGRect targetRect, ref MonoTouch.UIKit.UIView inView);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillRepositionPopover(class MonoTouch.UIKit.IUIPopoverPresentationControllerDelegate This, class MonoTouch.UIKit.UIPopoverPresentationController popoverPresentationController, valuetype MonoTouch.CoreGraphics.CGRect targetRect, class MonoTouch.UIKit.UIView inView) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPopoverPresentationControllerDelegate" RefType="this" />
          <Parameter Name="popoverPresentationController" Type="MonoTouch.UIKit.UIPopoverPresentationController" />
          <Parameter Name="targetRect" Type="System.Drawing.RectangleF&amp;" RefType="ref" apistyle="classic" />
          <Parameter Name="inView" Type="MonoTouch.UIKit.UIView&amp;" RefType="ref" />
          <Parameter Name="targetRect" Type="MonoTouch.CoreGraphics.CGRect&amp;" RefType="ref" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="popoverPresentationController">To be added.</param>
          <param name="targetRect">To be added.</param>
          <param name="inView">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPopoverPresentationControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPopoverPresentationControllerDelegate_Extensions.WillRepositionPopover(MonoTouch.UIKit.IUIPopoverPresentationControllerDelegate,MonoTouch.UIKit.UIPopoverPresentationController,MonoTouch.CoreGraphics.CGRect@,MonoTouch.UIKit.UIView@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPrinterPickerControllerDelegate" />
      </Targets>
      <Member MemberName="DidDismiss">
        <MemberSignature Language="C#" Value="public static void DidDismiss (this MonoTouch.UIKit.IUIPrinterPickerControllerDelegate This, MonoTouch.UIKit.UIPrinterPickerController printerPickerController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDismiss(class MonoTouch.UIKit.IUIPrinterPickerControllerDelegate This, class MonoTouch.UIKit.UIPrinterPickerController printerPickerController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPrinterPickerControllerDelegate" RefType="this" />
          <Parameter Name="printerPickerController" Type="MonoTouch.UIKit.UIPrinterPickerController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="printerPickerController">The printer picker controller that is being displayed.</param>
          <summary>The <paramref name="printerPickerController" /> was dismissed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPrinterPickerControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPrinterPickerControllerDelegate_Extensions.DidDismiss(MonoTouch.UIKit.IUIPrinterPickerControllerDelegate,MonoTouch.UIKit.UIPrinterPickerController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPrinterPickerControllerDelegate" />
      </Targets>
      <Member MemberName="DidPresent">
        <MemberSignature Language="C#" Value="public static void DidPresent (this MonoTouch.UIKit.IUIPrinterPickerControllerDelegate This, MonoTouch.UIKit.UIPrinterPickerController printerPickerController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidPresent(class MonoTouch.UIKit.IUIPrinterPickerControllerDelegate This, class MonoTouch.UIKit.UIPrinterPickerController printerPickerController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPrinterPickerControllerDelegate" RefType="this" />
          <Parameter Name="printerPickerController" Type="MonoTouch.UIKit.UIPrinterPickerController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="printerPickerController">The printer picker controller that is being displayed.</param>
          <summary>TThe <paramref name="printerPickerController" /> was presented.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPrinterPickerControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPrinterPickerControllerDelegate_Extensions.DidPresent(MonoTouch.UIKit.IUIPrinterPickerControllerDelegate,MonoTouch.UIKit.UIPrinterPickerController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPrinterPickerControllerDelegate" />
      </Targets>
      <Member MemberName="DidSelectPrinter">
        <MemberSignature Language="C#" Value="public static void DidSelectPrinter (this MonoTouch.UIKit.IUIPrinterPickerControllerDelegate This, MonoTouch.UIKit.UIPrinterPickerController printerPickerController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidSelectPrinter(class MonoTouch.UIKit.IUIPrinterPickerControllerDelegate This, class MonoTouch.UIKit.UIPrinterPickerController printerPickerController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPrinterPickerControllerDelegate" RefType="this" />
          <Parameter Name="printerPickerController" Type="MonoTouch.UIKit.UIPrinterPickerController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="printerPickerController">The printer picker controller that is being displayed.</param>
          <summary>The <paramref name="printerPickerController" /> selected a printer.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPrinterPickerControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPrinterPickerControllerDelegate_Extensions.DidSelectPrinter(MonoTouch.UIKit.IUIPrinterPickerControllerDelegate,MonoTouch.UIKit.UIPrinterPickerController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPrinterPickerControllerDelegate" />
      </Targets>
      <Member MemberName="GetParentViewController">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIViewController GetParentViewController (this MonoTouch.UIKit.IUIPrinterPickerControllerDelegate This, MonoTouch.UIKit.UIPrinterPickerController printerPickerController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UIViewController GetParentViewController(class MonoTouch.UIKit.IUIPrinterPickerControllerDelegate This, class MonoTouch.UIKit.UIPrinterPickerController printerPickerController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIViewController</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPrinterPickerControllerDelegate" RefType="this" />
          <Parameter Name="printerPickerController" Type="MonoTouch.UIKit.UIPrinterPickerController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="printerPickerController">The printer picker controller that is being displayed.</param>
          <summary>Gets the parent view controller of the <paramref name="printerPickerController" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPrinterPickerControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPrinterPickerControllerDelegate_Extensions.GetParentViewController(MonoTouch.UIKit.IUIPrinterPickerControllerDelegate,MonoTouch.UIKit.UIPrinterPickerController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPrinterPickerControllerDelegate" />
      </Targets>
      <Member MemberName="ShouldShowPrinter">
        <MemberSignature Language="C#" Value="public static bool ShouldShowPrinter (this MonoTouch.UIKit.IUIPrinterPickerControllerDelegate This, MonoTouch.UIKit.UIPrinterPickerController printerPickerController, MonoTouch.UIKit.UIPrinter printer);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldShowPrinter(class MonoTouch.UIKit.IUIPrinterPickerControllerDelegate This, class MonoTouch.UIKit.UIPrinterPickerController printerPickerController, class MonoTouch.UIKit.UIPrinter printer) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPrinterPickerControllerDelegate" RefType="this" />
          <Parameter Name="printerPickerController" Type="MonoTouch.UIKit.UIPrinterPickerController" />
          <Parameter Name="printer" Type="MonoTouch.UIKit.UIPrinter" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="printerPickerController">The printer picker controller that is being displayed.</param>
          <param name="printer">Designated printer for consideration by the delegate.</param>
          <summary>The <paramref name="printerPickerController" /> should show <paramref name="printer" /> to the user.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPrinterPickerControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPrinterPickerControllerDelegate_Extensions.ShouldShowPrinter(MonoTouch.UIKit.IUIPrinterPickerControllerDelegate,MonoTouch.UIKit.UIPrinterPickerController,MonoTouch.UIKit.UIPrinter)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPrinterPickerControllerDelegate" />
      </Targets>
      <Member MemberName="WillDismiss">
        <MemberSignature Language="C#" Value="public static void WillDismiss (this MonoTouch.UIKit.IUIPrinterPickerControllerDelegate This, MonoTouch.UIKit.UIPrinterPickerController printerPickerController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillDismiss(class MonoTouch.UIKit.IUIPrinterPickerControllerDelegate This, class MonoTouch.UIKit.UIPrinterPickerController printerPickerController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPrinterPickerControllerDelegate" RefType="this" />
          <Parameter Name="printerPickerController" Type="MonoTouch.UIKit.UIPrinterPickerController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="printerPickerController">The printer picker controller that is being displayed.</param>
          <summary>The <paramref name="printerPickerController" /> is about to be dismissed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPrinterPickerControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPrinterPickerControllerDelegate_Extensions.WillDismiss(MonoTouch.UIKit.IUIPrinterPickerControllerDelegate,MonoTouch.UIKit.UIPrinterPickerController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPrinterPickerControllerDelegate" />
      </Targets>
      <Member MemberName="WillPresent">
        <MemberSignature Language="C#" Value="public static void WillPresent (this MonoTouch.UIKit.IUIPrinterPickerControllerDelegate This, MonoTouch.UIKit.UIPrinterPickerController printerPickerController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillPresent(class MonoTouch.UIKit.IUIPrinterPickerControllerDelegate This, class MonoTouch.UIKit.UIPrinterPickerController printerPickerController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPrinterPickerControllerDelegate" RefType="this" />
          <Parameter Name="printerPickerController" Type="MonoTouch.UIKit.UIPrinterPickerController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="printerPickerController">The printer picker controller that is being displayed.</param>
          <summary>The <paramref name="printerPickerController" /> is about to be presented.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPrinterPickerControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPrinterPickerControllerDelegate_Extensions.WillPresent(MonoTouch.UIKit.IUIPrinterPickerControllerDelegate,MonoTouch.UIKit.UIPrinterPickerController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIPrintError" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.UIKit.UIPrintError self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.UIKit.UIPrintError self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.UIKit.UIPrintError" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.UIKit.UIPrintError value</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPrintErrorExtensions" Member="M:MonoTouch.UIKit.UIPrintErrorExtensions.GetDomain(MonoTouch.UIKit.UIPrintError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="ChoosePaper">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIPrintPaper ChoosePaper (this MonoTouch.UIKit.IUIPrintInteractionControllerDelegate This, MonoTouch.UIKit.UIPrintInteractionController printInteractionController, MonoTouch.UIKit.UIPrintPaper[] paperList);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UIPrintPaper ChoosePaper(class MonoTouch.UIKit.IUIPrintInteractionControllerDelegate This, class MonoTouch.UIKit.UIPrintInteractionController printInteractionController, class MonoTouch.UIKit.UIPrintPaper[] paperList) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIPrintPaper</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" RefType="this" />
          <Parameter Name="printInteractionController" Type="MonoTouch.UIKit.UIPrintInteractionController" />
          <Parameter Name="paperList" Type="MonoTouch.UIKit.UIPrintPaper[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="printInteractionController">To be added.</param>
          <param name="paperList">To be added.</param>
          <summary>Retrieves an object holding the paper size and printing area to use for a printing job.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions.ChoosePaper(MonoTouch.UIKit.IUIPrintInteractionControllerDelegate,MonoTouch.UIKit.UIPrintInteractionController,MonoTouch.UIKit.UIPrintPaper[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="CutLengthForPaper">
        <MemberSignature Language="C#" Value="public static float CutLengthForPaper (this MonoTouch.UIKit.IUIPrintInteractionControllerDelegate This, MonoTouch.UIKit.UIPrintInteractionController printInteractionController, MonoTouch.UIKit.UIPrintPaper paper);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 CutLengthForPaper(class MonoTouch.UIKit.IUIPrintInteractionControllerDelegate This, class MonoTouch.UIKit.UIPrintInteractionController printInteractionController, class MonoTouch.UIKit.UIPrintPaper paper) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nfloat CutLengthForPaper (this MonoTouch.UIKit.IUIPrintInteractionControllerDelegate This, MonoTouch.UIKit.UIPrintInteractionController printInteractionController, MonoTouch.UIKit.UIPrintPaper paper);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat CutLengthForPaper(class MonoTouch.UIKit.IUIPrintInteractionControllerDelegate This, class MonoTouch.UIKit.UIPrintInteractionController printInteractionController, class MonoTouch.UIKit.UIPrintPaper paper) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Single</ReturnType>
          <ReturnType apistyle="unified">System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" RefType="this" />
          <Parameter Name="printInteractionController" Type="MonoTouch.UIKit.UIPrintInteractionController" />
          <Parameter Name="paper" Type="MonoTouch.UIKit.UIPrintPaper" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="printInteractionController">To be added.</param>
          <param name="paper">To be added.</param>
          <summary>The length to use when cutting the page.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions.CutLengthForPaper(MonoTouch.UIKit.IUIPrintInteractionControllerDelegate,MonoTouch.UIKit.UIPrintInteractionController,MonoTouch.UIKit.UIPrintPaper)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="DidDismissPrinterOptions">
        <MemberSignature Language="C#" Value="public static void DidDismissPrinterOptions (this MonoTouch.UIKit.IUIPrintInteractionControllerDelegate This, MonoTouch.UIKit.UIPrintInteractionController printInteractionController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDismissPrinterOptions(class MonoTouch.UIKit.IUIPrintInteractionControllerDelegate This, class MonoTouch.UIKit.UIPrintInteractionController printInteractionController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" RefType="this" />
          <Parameter Name="printInteractionController" Type="MonoTouch.UIKit.UIPrintInteractionController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="printInteractionController">To be added.</param>
          <summary>Indicates that the printer user interface has been dismissed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions.DidDismissPrinterOptions(MonoTouch.UIKit.IUIPrintInteractionControllerDelegate,MonoTouch.UIKit.UIPrintInteractionController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="DidFinishJob">
        <MemberSignature Language="C#" Value="public static void DidFinishJob (this MonoTouch.UIKit.IUIPrintInteractionControllerDelegate This, MonoTouch.UIKit.UIPrintInteractionController printInteractionController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinishJob(class MonoTouch.UIKit.IUIPrintInteractionControllerDelegate This, class MonoTouch.UIKit.UIPrintInteractionController printInteractionController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" RefType="this" />
          <Parameter Name="printInteractionController" Type="MonoTouch.UIKit.UIPrintInteractionController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="printInteractionController">To be added.</param>
          <summary>Indicates that the print job has ended.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions.DidFinishJob(MonoTouch.UIKit.IUIPrintInteractionControllerDelegate,MonoTouch.UIKit.UIPrintInteractionController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="DidPresentPrinterOptions">
        <MemberSignature Language="C#" Value="public static void DidPresentPrinterOptions (this MonoTouch.UIKit.IUIPrintInteractionControllerDelegate This, MonoTouch.UIKit.UIPrintInteractionController printInteractionController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidPresentPrinterOptions(class MonoTouch.UIKit.IUIPrintInteractionControllerDelegate This, class MonoTouch.UIKit.UIPrintInteractionController printInteractionController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" RefType="this" />
          <Parameter Name="printInteractionController" Type="MonoTouch.UIKit.UIPrintInteractionController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="printInteractionController">To be added.</param>
          <summary>Indicates that the printing-options user interface has been presented.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions.DidPresentPrinterOptions(MonoTouch.UIKit.IUIPrintInteractionControllerDelegate,MonoTouch.UIKit.UIPrintInteractionController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="GetViewController">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIViewController GetViewController (this MonoTouch.UIKit.IUIPrintInteractionControllerDelegate This, MonoTouch.UIKit.UIPrintInteractionController printInteractionController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UIViewController GetViewController(class MonoTouch.UIKit.IUIPrintInteractionControllerDelegate This, class MonoTouch.UIKit.UIPrintInteractionController printInteractionController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIViewController</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" RefType="this" />
          <Parameter Name="printInteractionController" Type="MonoTouch.UIKit.UIPrintInteractionController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="printInteractionController">To be added.</param>
          <summary>Returns the parent UIViewController for managing the printing-options view.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions.GetViewController(MonoTouch.UIKit.IUIPrintInteractionControllerDelegate,MonoTouch.UIKit.UIPrintInteractionController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="WillDismissPrinterOptions">
        <MemberSignature Language="C#" Value="public static void WillDismissPrinterOptions (this MonoTouch.UIKit.IUIPrintInteractionControllerDelegate This, MonoTouch.UIKit.UIPrintInteractionController printInteractionController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillDismissPrinterOptions(class MonoTouch.UIKit.IUIPrintInteractionControllerDelegate This, class MonoTouch.UIKit.UIPrintInteractionController printInteractionController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" RefType="this" />
          <Parameter Name="printInteractionController" Type="MonoTouch.UIKit.UIPrintInteractionController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="printInteractionController">To be added.</param>
          <summary>Indicates that the printing-options user interface will be dismissed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions.WillDismissPrinterOptions(MonoTouch.UIKit.IUIPrintInteractionControllerDelegate,MonoTouch.UIKit.UIPrintInteractionController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="WillPresentPrinterOptions">
        <MemberSignature Language="C#" Value="public static void WillPresentPrinterOptions (this MonoTouch.UIKit.IUIPrintInteractionControllerDelegate This, MonoTouch.UIKit.UIPrintInteractionController printInteractionController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillPresentPrinterOptions(class MonoTouch.UIKit.IUIPrintInteractionControllerDelegate This, class MonoTouch.UIKit.UIPrintInteractionController printInteractionController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" RefType="this" />
          <Parameter Name="printInteractionController" Type="MonoTouch.UIKit.UIPrintInteractionController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="printInteractionController">To be added.</param>
          <summary>Indicates that the printing-options interface is about to be displayed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions.WillPresentPrinterOptions(MonoTouch.UIKit.IUIPrintInteractionControllerDelegate,MonoTouch.UIKit.UIPrintInteractionController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" />
      </Targets>
      <Member MemberName="WillStartJob">
        <MemberSignature Language="C#" Value="public static void WillStartJob (this MonoTouch.UIKit.IUIPrintInteractionControllerDelegate This, MonoTouch.UIKit.UIPrintInteractionController printInteractionController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillStartJob(class MonoTouch.UIKit.IUIPrintInteractionControllerDelegate This, class MonoTouch.UIKit.UIPrintInteractionController printInteractionController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIPrintInteractionControllerDelegate" RefType="this" />
          <Parameter Name="printInteractionController" Type="MonoTouch.UIKit.UIPrintInteractionController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="printInteractionController">To be added.</param>
          <summary>Indicates that the print job is about to begin.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIPrintInteractionControllerDelegate_Extensions.WillStartJob(MonoTouch.UIKit.IUIPrintInteractionControllerDelegate,MonoTouch.UIKit.UIPrintInteractionController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIResponder" />
      </Targets>
      <Member MemberName="DecreaseSize">
        <MemberSignature Language="C#" Value="public static void DecreaseSize (this MonoTouch.UIKit.UIResponder This, MonoTouch.Foundation.NSObject sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DecreaseSize(class MonoTouch.UIKit.UIResponder This, class MonoTouch.Foundation.NSObject sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UIResponder" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="sender">
            <para>To be added.</para>
            <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
          </param>
          <summary>A hardware keyboard request (Command-minus) to decrease the size of the <see cref="T:MonoTouch.UIKit.UIResponder" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIResponder_NSObjectExtension" Member="M:MonoTouch.UIKit.UIResponder_NSObjectExtension.DecreaseSize(MonoTouch.UIKit.UIResponder,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIResponder" />
      </Targets>
      <Member MemberName="IncreaseSize">
        <MemberSignature Language="C#" Value="public static void IncreaseSize (this MonoTouch.UIKit.UIResponder This, MonoTouch.Foundation.NSObject sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void IncreaseSize(class MonoTouch.UIKit.UIResponder This, class MonoTouch.Foundation.NSObject sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UIResponder" RefType="this" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="sender">
            <para>To be added.</para>
            <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
          </param>
          <summary>A hardware keyboard request (Command-plus) to increase the size of the <see cref="T:MonoTouch.UIKit.UIResponder" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIResponder_NSObjectExtension" Member="M:MonoTouch.UIKit.UIResponder_NSObjectExtension.IncreaseSize(MonoTouch.UIKit.UIResponder,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIScrollViewAccessibilityDelegate" />
      </Targets>
      <Member MemberName="GetAccessibilityScrollStatus">
        <MemberSignature Language="C#" Value="public static string GetAccessibilityScrollStatus (this MonoTouch.UIKit.IUIScrollViewAccessibilityDelegate This, MonoTouch.UIKit.UIScrollView scrollView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetAccessibilityScrollStatus(class MonoTouch.UIKit.IUIScrollViewAccessibilityDelegate This, class MonoTouch.UIKit.UIScrollView scrollView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIScrollViewAccessibilityDelegate" RefType="this" />
          <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scrollView">To be added.</param>
          <summary>Gets a string that represents the current relative progress through a document or collection of documents. (For example, "Volume 34 of 51.")</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIScrollViewAccessibilityDelegate_Extensions" Member="M:MonoTouch.UIKit.UIScrollViewAccessibilityDelegate_Extensions.GetAccessibilityScrollStatus(MonoTouch.UIKit.IUIScrollViewAccessibilityDelegate,MonoTouch.UIKit.UIScrollView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIScrollViewDelegate" />
      </Targets>
      <Member MemberName="DecelerationEnded">
        <MemberSignature Language="C#" Value="public static void DecelerationEnded (this MonoTouch.UIKit.IUIScrollViewDelegate This, MonoTouch.UIKit.UIScrollView scrollView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DecelerationEnded(class MonoTouch.UIKit.IUIScrollViewDelegate This, class MonoTouch.UIKit.UIScrollView scrollView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIScrollViewDelegate" RefType="this" />
          <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scrollView">Scroll view object that is decelerating the scrolling content.</param>
          <summary>Indicates that deceleration relating to a scroll event has ended.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIScrollViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIScrollViewDelegate_Extensions.DecelerationEnded(MonoTouch.UIKit.IUIScrollViewDelegate,MonoTouch.UIKit.UIScrollView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIScrollViewDelegate" />
      </Targets>
      <Member MemberName="DecelerationStarted">
        <MemberSignature Language="C#" Value="public static void DecelerationStarted (this MonoTouch.UIKit.IUIScrollViewDelegate This, MonoTouch.UIKit.UIScrollView scrollView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DecelerationStarted(class MonoTouch.UIKit.IUIScrollViewDelegate This, class MonoTouch.UIKit.UIScrollView scrollView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIScrollViewDelegate" RefType="this" />
          <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scrollView">Scroll view object that is decelerating the scrolling content.</param>
          <summary>Indicates that deceleration of a scrolling event has begun.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIScrollViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIScrollViewDelegate_Extensions.DecelerationStarted(MonoTouch.UIKit.IUIScrollViewDelegate,MonoTouch.UIKit.UIScrollView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIScrollViewDelegate" />
      </Targets>
      <Member MemberName="DidZoom">
        <MemberSignature Language="C#" Value="public static void DidZoom (this MonoTouch.UIKit.IUIScrollViewDelegate This, MonoTouch.UIKit.UIScrollView scrollView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidZoom(class MonoTouch.UIKit.IUIScrollViewDelegate This, class MonoTouch.UIKit.UIScrollView scrollView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIScrollViewDelegate" RefType="this" />
          <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scrollView">Scroll view being zoomed.</param>
          <summary>Indicates that the specified scrollView has zoomed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIScrollViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIScrollViewDelegate_Extensions.DidZoom(MonoTouch.UIKit.IUIScrollViewDelegate,MonoTouch.UIKit.UIScrollView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIScrollViewDelegate" />
      </Targets>
      <Member MemberName="DraggingEnded">
        <MemberSignature Language="C#" Value="public static void DraggingEnded (this MonoTouch.UIKit.IUIScrollViewDelegate This, MonoTouch.UIKit.UIScrollView scrollView, bool willDecelerate);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DraggingEnded(class MonoTouch.UIKit.IUIScrollViewDelegate This, class MonoTouch.UIKit.UIScrollView scrollView, bool willDecelerate) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIScrollViewDelegate" RefType="this" />
          <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
          <Parameter Name="willDecelerate" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scrollView">Scroll view where the content finished scrolling.</param>
          <param name="willDecelerate"> if the scrolling movement will continue (but decelerate) after the user lifts their finger. If  then the scrolling stops immediately upon touch-up.</param>
          <summary>Indicates that dragging has completed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIScrollViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIScrollViewDelegate_Extensions.DraggingEnded(MonoTouch.UIKit.IUIScrollViewDelegate,MonoTouch.UIKit.UIScrollView,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIScrollViewDelegate" />
      </Targets>
      <Member MemberName="DraggingStarted">
        <MemberSignature Language="C#" Value="public static void DraggingStarted (this MonoTouch.UIKit.IUIScrollViewDelegate This, MonoTouch.UIKit.UIScrollView scrollView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DraggingStarted(class MonoTouch.UIKit.IUIScrollViewDelegate This, class MonoTouch.UIKit.UIScrollView scrollView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIScrollViewDelegate" RefType="this" />
          <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scrollView">Scroll view whose content is about to be scrolled.</param>
          <summary>Indicates that dragging has begun.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIScrollViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIScrollViewDelegate_Extensions.DraggingStarted(MonoTouch.UIKit.IUIScrollViewDelegate,MonoTouch.UIKit.UIScrollView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIScrollViewDelegate" />
      </Targets>
      <Member MemberName="ScrollAnimationEnded">
        <MemberSignature Language="C#" Value="public static void ScrollAnimationEnded (this MonoTouch.UIKit.IUIScrollViewDelegate This, MonoTouch.UIKit.UIScrollView scrollView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ScrollAnimationEnded(class MonoTouch.UIKit.IUIScrollViewDelegate This, class MonoTouch.UIKit.UIScrollView scrollView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIScrollViewDelegate" RefType="this" />
          <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scrollView">Scroll view that is performing a scrolling animation.</param>
          <summary>Indicates that all animations relating to scrolling have completed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIScrollViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIScrollViewDelegate_Extensions.ScrollAnimationEnded(MonoTouch.UIKit.IUIScrollViewDelegate,MonoTouch.UIKit.UIScrollView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIScrollViewDelegate" />
      </Targets>
      <Member MemberName="Scrolled">
        <MemberSignature Language="C#" Value="public static void Scrolled (this MonoTouch.UIKit.IUIScrollViewDelegate This, MonoTouch.UIKit.UIScrollView scrollView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Scrolled(class MonoTouch.UIKit.IUIScrollViewDelegate This, class MonoTouch.UIKit.UIScrollView scrollView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIScrollViewDelegate" RefType="this" />
          <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scrollView">Scroll view where the scrolling occurred.</param>
          <summary>Indicates that the specified scrollView has scrolled.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIScrollViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIScrollViewDelegate_Extensions.Scrolled(MonoTouch.UIKit.IUIScrollViewDelegate,MonoTouch.UIKit.UIScrollView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIScrollViewDelegate" />
      </Targets>
      <Member MemberName="ScrolledToTop">
        <MemberSignature Language="C#" Value="public static void ScrolledToTop (this MonoTouch.UIKit.IUIScrollViewDelegate This, MonoTouch.UIKit.UIScrollView scrollView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ScrolledToTop(class MonoTouch.UIKit.IUIScrollViewDelegate This, class MonoTouch.UIKit.UIScrollView scrollView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIScrollViewDelegate" RefType="this" />
          <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scrollView">Scroll view that was scrolled.</param>
          <summary>Indicates that the specified scrollView's scrolling has ended at the top.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIScrollViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIScrollViewDelegate_Extensions.ScrolledToTop(MonoTouch.UIKit.IUIScrollViewDelegate,MonoTouch.UIKit.UIScrollView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIScrollViewDelegate" />
      </Targets>
      <Member MemberName="ShouldScrollToTop">
        <MemberSignature Language="C#" Value="public static bool ShouldScrollToTop (this MonoTouch.UIKit.IUIScrollViewDelegate This, MonoTouch.UIKit.UIScrollView scrollView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldScrollToTop(class MonoTouch.UIKit.IUIScrollViewDelegate This, class MonoTouch.UIKit.UIScrollView scrollView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIScrollViewDelegate" RefType="this" />
          <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scrollView">Scroll view requesting whether scroll is allowed.</param>
          <summary>Whether a scroll to the beginning of the scrollView should be permitted.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIScrollViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIScrollViewDelegate_Extensions.ShouldScrollToTop(MonoTouch.UIKit.IUIScrollViewDelegate,MonoTouch.UIKit.UIScrollView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIScrollViewDelegate" />
      </Targets>
      <Member MemberName="ViewForZoomingInScrollView">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIView ViewForZoomingInScrollView (this MonoTouch.UIKit.IUIScrollViewDelegate This, MonoTouch.UIKit.UIScrollView scrollView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UIView ViewForZoomingInScrollView(class MonoTouch.UIKit.IUIScrollViewDelegate This, class MonoTouch.UIKit.UIScrollView scrollView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIView</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIScrollViewDelegate" RefType="this" />
          <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scrollView">Scroll view displaying the content.</param>
          <summary>The UIView to scale when zooming is requested.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIScrollViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIScrollViewDelegate_Extensions.ViewForZoomingInScrollView(MonoTouch.UIKit.IUIScrollViewDelegate,MonoTouch.UIKit.UIScrollView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIScrollViewDelegate" />
      </Targets>
      <Member MemberName="WillEndDragging">
        <MemberSignature Language="C#" Value="public static void WillEndDragging (this MonoTouch.UIKit.IUIScrollViewDelegate This, MonoTouch.UIKit.UIScrollView scrollView, System.Drawing.PointF velocity, ref System.Drawing.PointF targetContentOffset);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillEndDragging(class MonoTouch.UIKit.IUIScrollViewDelegate This, class MonoTouch.UIKit.UIScrollView scrollView, valuetype System.Drawing.PointF velocity, valuetype System.Drawing.PointF targetContentOffset) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void WillEndDragging (this MonoTouch.UIKit.IUIScrollViewDelegate This, MonoTouch.UIKit.UIScrollView scrollView, MonoTouch.CoreGraphics.CGPoint velocity, ref MonoTouch.CoreGraphics.CGPoint targetContentOffset);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillEndDragging(class MonoTouch.UIKit.IUIScrollViewDelegate This, class MonoTouch.UIKit.UIScrollView scrollView, valuetype MonoTouch.CoreGraphics.CGPoint velocity, valuetype MonoTouch.CoreGraphics.CGPoint targetContentOffset) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIScrollViewDelegate" RefType="this" />
          <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
          <Parameter Name="velocity" Type="System.Drawing.PointF" apistyle="classic" />
          <Parameter Name="targetContentOffset" Type="System.Drawing.PointF&amp;" RefType="ref" apistyle="classic" />
          <Parameter Name="velocity" Type="MonoTouch.CoreGraphics.CGPoint" apistyle="unified" />
          <Parameter Name="targetContentOffset" Type="MonoTouch.CoreGraphics.CGPoint&amp;" RefType="ref" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scrollView">Scroll view where user touch ended.</param>
          <param name="velocity">The velocity of the scroll view (in points) when the touch ended.</param>
          <param name="targetContentOffset">The expected offset when the scrolling action decelerates to a stop.</param>
          <summary>Indicates that dragging is about to end.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIScrollViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIScrollViewDelegate_Extensions.WillEndDragging(MonoTouch.UIKit.IUIScrollViewDelegate,MonoTouch.UIKit.UIScrollView,MonoTouch.CoreGraphics.CGPoint,MonoTouch.CoreGraphics.CGPoint@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIScrollViewDelegate" />
      </Targets>
      <Member MemberName="ZoomingEnded">
        <MemberSignature Language="C#" Value="public static void ZoomingEnded (this MonoTouch.UIKit.IUIScrollViewDelegate This, MonoTouch.UIKit.UIScrollView scrollView, MonoTouch.UIKit.UIView withView, float atScale);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZoomingEnded(class MonoTouch.UIKit.IUIScrollViewDelegate This, class MonoTouch.UIKit.UIScrollView scrollView, class MonoTouch.UIKit.UIView withView, float32 atScale) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void ZoomingEnded (this MonoTouch.UIKit.IUIScrollViewDelegate This, MonoTouch.UIKit.UIScrollView scrollView, MonoTouch.UIKit.UIView withView, nfloat atScale);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZoomingEnded(class MonoTouch.UIKit.IUIScrollViewDelegate This, class MonoTouch.UIKit.UIScrollView scrollView, class MonoTouch.UIKit.UIView withView, valuetype System.nfloat atScale) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIScrollViewDelegate" RefType="this" />
          <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
          <Parameter Name="withView" Type="MonoTouch.UIKit.UIView" />
          <Parameter Name="atScale" Type="System.Single" apistyle="classic" />
          <Parameter Name="atScale" Type="System.nfloat" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scrollView">Scroll view containing the content being zoomed.</param>
          <param name="withView">View representing the content that needs to be scaled.</param>
          <param name="atScale">The scale factor to use. This value must be between the limits set by the  properties  and .</param>
          <summary>Indicates that zooming has completed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIScrollViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIScrollViewDelegate_Extensions.ZoomingEnded(MonoTouch.UIKit.IUIScrollViewDelegate,MonoTouch.UIKit.UIScrollView,MonoTouch.UIKit.UIView,System.nfloat)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIScrollViewDelegate" />
      </Targets>
      <Member MemberName="ZoomingStarted">
        <MemberSignature Language="C#" Value="public static void ZoomingStarted (this MonoTouch.UIKit.IUIScrollViewDelegate This, MonoTouch.UIKit.UIScrollView scrollView, MonoTouch.UIKit.UIView view);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZoomingStarted(class MonoTouch.UIKit.IUIScrollViewDelegate This, class MonoTouch.UIKit.UIScrollView scrollView, class MonoTouch.UIKit.UIView view) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIScrollViewDelegate" RefType="this" />
          <Parameter Name="scrollView" Type="MonoTouch.UIKit.UIScrollView" />
          <Parameter Name="view" Type="MonoTouch.UIKit.UIView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="scrollView">Scroll view containing the content.</param>
          <param name="view">The content view about to be zoomed.</param>
          <summary>Indicates that zooming has begun.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIScrollViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIScrollViewDelegate_Extensions.ZoomingStarted(MonoTouch.UIKit.IUIScrollViewDelegate,MonoTouch.UIKit.UIScrollView,MonoTouch.UIKit.UIView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchBarDelegate" />
      </Targets>
      <Member MemberName="BookmarkButtonClicked">
        <MemberSignature Language="C#" Value="public static void BookmarkButtonClicked (this MonoTouch.UIKit.IUISearchBarDelegate This, MonoTouch.UIKit.UISearchBar searchBar);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BookmarkButtonClicked(class MonoTouch.UIKit.IUISearchBarDelegate This, class MonoTouch.UIKit.UISearchBar searchBar) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchBarDelegate" RefType="this" />
          <Parameter Name="searchBar" Type="MonoTouch.UIKit.UISearchBar" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchBar">To be added.</param>
          <summary>Indicates that the bookmark button was tapped.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchBarDelegate_Extensions.BookmarkButtonClicked(MonoTouch.UIKit.IUISearchBarDelegate,MonoTouch.UIKit.UISearchBar)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchBarDelegate" />
      </Targets>
      <Member MemberName="CancelButtonClicked">
        <MemberSignature Language="C#" Value="public static void CancelButtonClicked (this MonoTouch.UIKit.IUISearchBarDelegate This, MonoTouch.UIKit.UISearchBar searchBar);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CancelButtonClicked(class MonoTouch.UIKit.IUISearchBarDelegate This, class MonoTouch.UIKit.UISearchBar searchBar) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchBarDelegate" RefType="this" />
          <Parameter Name="searchBar" Type="MonoTouch.UIKit.UISearchBar" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchBar">To be added.</param>
          <summary>Indicates that the cancel button was tapped.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchBarDelegate_Extensions.CancelButtonClicked(MonoTouch.UIKit.IUISearchBarDelegate,MonoTouch.UIKit.UISearchBar)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchBarDelegate" />
      </Targets>
      <Member MemberName="ListButtonClicked">
        <MemberSignature Language="C#" Value="public static void ListButtonClicked (this MonoTouch.UIKit.IUISearchBarDelegate This, MonoTouch.UIKit.UISearchBar searchBar);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ListButtonClicked(class MonoTouch.UIKit.IUISearchBarDelegate This, class MonoTouch.UIKit.UISearchBar searchBar) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchBarDelegate" RefType="this" />
          <Parameter Name="searchBar" Type="MonoTouch.UIKit.UISearchBar" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchBar">To be added.</param>
          <summary>Indicates that the list button was tapped.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchBarDelegate_Extensions.ListButtonClicked(MonoTouch.UIKit.IUISearchBarDelegate,MonoTouch.UIKit.UISearchBar)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchBarDelegate" />
      </Targets>
      <Member MemberName="OnEditingStarted">
        <MemberSignature Language="C#" Value="public static void OnEditingStarted (this MonoTouch.UIKit.IUISearchBarDelegate This, MonoTouch.UIKit.UISearchBar searchBar);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OnEditingStarted(class MonoTouch.UIKit.IUISearchBarDelegate This, class MonoTouch.UIKit.UISearchBar searchBar) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchBarDelegate" RefType="this" />
          <Parameter Name="searchBar" Type="MonoTouch.UIKit.UISearchBar" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchBar">To be added.</param>
          <summary>Indicates that the user has begun editing the search text.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchBarDelegate_Extensions.OnEditingStarted(MonoTouch.UIKit.IUISearchBarDelegate,MonoTouch.UIKit.UISearchBar)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchBarDelegate" />
      </Targets>
      <Member MemberName="OnEditingStopped">
        <MemberSignature Language="C#" Value="public static void OnEditingStopped (this MonoTouch.UIKit.IUISearchBarDelegate This, MonoTouch.UIKit.UISearchBar searchBar);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OnEditingStopped(class MonoTouch.UIKit.IUISearchBarDelegate This, class MonoTouch.UIKit.UISearchBar searchBar) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchBarDelegate" RefType="this" />
          <Parameter Name="searchBar" Type="MonoTouch.UIKit.UISearchBar" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchBar">To be added.</param>
          <summary>Indicates that the user has stopped editing the text field.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchBarDelegate_Extensions.OnEditingStopped(MonoTouch.UIKit.IUISearchBarDelegate,MonoTouch.UIKit.UISearchBar)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchBarDelegate" />
      </Targets>
      <Member MemberName="SearchButtonClicked">
        <MemberSignature Language="C#" Value="public static void SearchButtonClicked (this MonoTouch.UIKit.IUISearchBarDelegate This, MonoTouch.UIKit.UISearchBar searchBar);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SearchButtonClicked(class MonoTouch.UIKit.IUISearchBarDelegate This, class MonoTouch.UIKit.UISearchBar searchBar) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchBarDelegate" RefType="this" />
          <Parameter Name="searchBar" Type="MonoTouch.UIKit.UISearchBar" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchBar">To be added.</param>
          <summary>Indicates that the search button was tapped.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchBarDelegate_Extensions.SearchButtonClicked(MonoTouch.UIKit.IUISearchBarDelegate,MonoTouch.UIKit.UISearchBar)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchBarDelegate" />
      </Targets>
      <Member MemberName="SelectedScopeButtonIndexChanged">
        <MemberSignature Language="C#" Value="public static void SelectedScopeButtonIndexChanged (this MonoTouch.UIKit.IUISearchBarDelegate This, MonoTouch.UIKit.UISearchBar searchBar, int selectedScope);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SelectedScopeButtonIndexChanged(class MonoTouch.UIKit.IUISearchBarDelegate This, class MonoTouch.UIKit.UISearchBar searchBar, int32 selectedScope) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void SelectedScopeButtonIndexChanged (this MonoTouch.UIKit.IUISearchBarDelegate This, MonoTouch.UIKit.UISearchBar searchBar, nint selectedScope);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SelectedScopeButtonIndexChanged(class MonoTouch.UIKit.IUISearchBarDelegate This, class MonoTouch.UIKit.UISearchBar searchBar, valuetype System.nint selectedScope) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchBarDelegate" RefType="this" />
          <Parameter Name="searchBar" Type="MonoTouch.UIKit.UISearchBar" />
          <Parameter Name="selectedScope" Type="System.Int32" apistyle="classic" />
          <Parameter Name="selectedScope" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchBar">To be added.</param>
          <param name="selectedScope">To be added.</param>
          <summary>Indicates that the user has changed the scope of the search.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchBarDelegate_Extensions.SelectedScopeButtonIndexChanged(MonoTouch.UIKit.IUISearchBarDelegate,MonoTouch.UIKit.UISearchBar,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchBarDelegate" />
      </Targets>
      <Member MemberName="ShouldBeginEditing">
        <MemberSignature Language="C#" Value="public static bool ShouldBeginEditing (this MonoTouch.UIKit.IUISearchBarDelegate This, MonoTouch.UIKit.UISearchBar searchBar);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldBeginEditing(class MonoTouch.UIKit.IUISearchBarDelegate This, class MonoTouch.UIKit.UISearchBar searchBar) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchBarDelegate" RefType="this" />
          <Parameter Name="searchBar" Type="MonoTouch.UIKit.UISearchBar" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchBar">To be added.</param>
          <summary>Whether editing of the search text should be allowed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchBarDelegate_Extensions.ShouldBeginEditing(MonoTouch.UIKit.IUISearchBarDelegate,MonoTouch.UIKit.UISearchBar)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchBarDelegate" />
      </Targets>
      <Member MemberName="ShouldChangeTextInRange">
        <MemberSignature Language="C#" Value="public static bool ShouldChangeTextInRange (this MonoTouch.UIKit.IUISearchBarDelegate This, MonoTouch.UIKit.UISearchBar searchBar, MonoTouch.Foundation.NSRange range, string text);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldChangeTextInRange(class MonoTouch.UIKit.IUISearchBarDelegate This, class MonoTouch.UIKit.UISearchBar searchBar, valuetype MonoTouch.Foundation.NSRange range, string text) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchBarDelegate" RefType="this" />
          <Parameter Name="searchBar" Type="MonoTouch.UIKit.UISearchBar" />
          <Parameter Name="range" Type="MonoTouch.Foundation.NSRange" />
          <Parameter Name="text" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchBar">To be added.</param>
          <param name="range">To be added.</param>
          <param name="text">To be added.</param>
          <summary>Whether the text in the specified range should be replaced with the specified text.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchBarDelegate_Extensions.ShouldChangeTextInRange(MonoTouch.UIKit.IUISearchBarDelegate,MonoTouch.UIKit.UISearchBar,MonoTouch.Foundation.NSRange,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchBarDelegate" />
      </Targets>
      <Member MemberName="ShouldEndEditing">
        <MemberSignature Language="C#" Value="public static bool ShouldEndEditing (this MonoTouch.UIKit.IUISearchBarDelegate This, MonoTouch.UIKit.UISearchBar searchBar);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldEndEditing(class MonoTouch.UIKit.IUISearchBarDelegate This, class MonoTouch.UIKit.UISearchBar searchBar) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchBarDelegate" RefType="this" />
          <Parameter Name="searchBar" Type="MonoTouch.UIKit.UISearchBar" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchBar">To be added.</param>
          <summary>Whether the editing of the search text should end.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchBarDelegate_Extensions.ShouldEndEditing(MonoTouch.UIKit.IUISearchBarDelegate,MonoTouch.UIKit.UISearchBar)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchBarDelegate" />
      </Targets>
      <Member MemberName="TextChanged">
        <MemberSignature Language="C#" Value="public static void TextChanged (this MonoTouch.UIKit.IUISearchBarDelegate This, MonoTouch.UIKit.UISearchBar searchBar, string searchText);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TextChanged(class MonoTouch.UIKit.IUISearchBarDelegate This, class MonoTouch.UIKit.UISearchBar searchBar, string searchText) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchBarDelegate" RefType="this" />
          <Parameter Name="searchBar" Type="MonoTouch.UIKit.UISearchBar" />
          <Parameter Name="searchText" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchBar">To be added.</param>
          <param name="searchText">To be added.</param>
          <summary>Indicates that the search text has changed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchBarDelegate_Extensions.TextChanged(MonoTouch.UIKit.IUISearchBarDelegate,MonoTouch.UIKit.UISearchBar,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchControllerDelegate" />
      </Targets>
      <Member MemberName="DidDismissSearchController">
        <MemberSignature Language="C#" Value="public static void DidDismissSearchController (this MonoTouch.UIKit.IUISearchControllerDelegate This, MonoTouch.UIKit.UISearchController searchController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDismissSearchController(class MonoTouch.UIKit.IUISearchControllerDelegate This, class MonoTouch.UIKit.UISearchController searchController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchControllerDelegate" RefType="this" />
          <Parameter Name="searchController" Type="MonoTouch.UIKit.UISearchController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchController">To be added.</param>
          <summary>The <paramref name="searchController" /> was dismissed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchControllerDelegate_Extensions.DidDismissSearchController(MonoTouch.UIKit.IUISearchControllerDelegate,MonoTouch.UIKit.UISearchController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchControllerDelegate" />
      </Targets>
      <Member MemberName="DidPresentSearchController">
        <MemberSignature Language="C#" Value="public static void DidPresentSearchController (this MonoTouch.UIKit.IUISearchControllerDelegate This, MonoTouch.UIKit.UISearchController searchController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidPresentSearchController(class MonoTouch.UIKit.IUISearchControllerDelegate This, class MonoTouch.UIKit.UISearchController searchController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchControllerDelegate" RefType="this" />
          <Parameter Name="searchController" Type="MonoTouch.UIKit.UISearchController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchController">To be added.</param>
          <summary>The <paramref name="searchController" /> was presented.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchControllerDelegate_Extensions.DidPresentSearchController(MonoTouch.UIKit.IUISearchControllerDelegate,MonoTouch.UIKit.UISearchController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchControllerDelegate" />
      </Targets>
      <Member MemberName="PresentSearchController">
        <MemberSignature Language="C#" Value="public static void PresentSearchController (this MonoTouch.UIKit.IUISearchControllerDelegate This, MonoTouch.UIKit.UISearchController searchController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PresentSearchController(class MonoTouch.UIKit.IUISearchControllerDelegate This, class MonoTouch.UIKit.UISearchController searchController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchControllerDelegate" RefType="this" />
          <Parameter Name="searchController" Type="MonoTouch.UIKit.UISearchController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchController">To be added.</param>
          <summary>Presents the <paramref name="searchController" /> to the user.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchControllerDelegate_Extensions.PresentSearchController(MonoTouch.UIKit.IUISearchControllerDelegate,MonoTouch.UIKit.UISearchController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchControllerDelegate" />
      </Targets>
      <Member MemberName="WillDismissSearchController">
        <MemberSignature Language="C#" Value="public static void WillDismissSearchController (this MonoTouch.UIKit.IUISearchControllerDelegate This, MonoTouch.UIKit.UISearchController searchController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillDismissSearchController(class MonoTouch.UIKit.IUISearchControllerDelegate This, class MonoTouch.UIKit.UISearchController searchController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchControllerDelegate" RefType="this" />
          <Parameter Name="searchController" Type="MonoTouch.UIKit.UISearchController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchController">To be added.</param>
          <summary>The <paramref name="searchController" /> is about to be dismissed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchControllerDelegate_Extensions.WillDismissSearchController(MonoTouch.UIKit.IUISearchControllerDelegate,MonoTouch.UIKit.UISearchController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchControllerDelegate" />
      </Targets>
      <Member MemberName="WillPresentSearchController">
        <MemberSignature Language="C#" Value="public static void WillPresentSearchController (this MonoTouch.UIKit.IUISearchControllerDelegate This, MonoTouch.UIKit.UISearchController searchController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillPresentSearchController(class MonoTouch.UIKit.IUISearchControllerDelegate This, class MonoTouch.UIKit.UISearchController searchController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchControllerDelegate" RefType="this" />
          <Parameter Name="searchController" Type="MonoTouch.UIKit.UISearchController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="searchController">To be added.</param>
          <summary>The <paramref name="searchController" /> is about to be presented.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchControllerDelegate_Extensions.WillPresentSearchController(MonoTouch.UIKit.IUISearchControllerDelegate,MonoTouch.UIKit.UISearchController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchDisplayDelegate" />
      </Targets>
      <Member MemberName="DidBeginSearch">
        <MemberSignature Language="C#" Value="public static void DidBeginSearch (this MonoTouch.UIKit.IUISearchDisplayDelegate This, MonoTouch.UIKit.UISearchDisplayController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidBeginSearch(class MonoTouch.UIKit.IUISearchDisplayDelegate This, class MonoTouch.UIKit.UISearchDisplayController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchDisplayDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UISearchDisplayController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>Indicates that searching has started.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchDisplayDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchDisplayDelegate_Extensions.DidBeginSearch(MonoTouch.UIKit.IUISearchDisplayDelegate,MonoTouch.UIKit.UISearchDisplayController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchDisplayDelegate" />
      </Targets>
      <Member MemberName="DidEndSearch">
        <MemberSignature Language="C#" Value="public static void DidEndSearch (this MonoTouch.UIKit.IUISearchDisplayDelegate This, MonoTouch.UIKit.UISearchDisplayController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidEndSearch(class MonoTouch.UIKit.IUISearchDisplayDelegate This, class MonoTouch.UIKit.UISearchDisplayController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchDisplayDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UISearchDisplayController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>Indicates that searching has ended.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchDisplayDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchDisplayDelegate_Extensions.DidEndSearch(MonoTouch.UIKit.IUISearchDisplayDelegate,MonoTouch.UIKit.UISearchDisplayController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchDisplayDelegate" />
      </Targets>
      <Member MemberName="DidHideSearchResults">
        <MemberSignature Language="C#" Value="public static void DidHideSearchResults (this MonoTouch.UIKit.IUISearchDisplayDelegate This, MonoTouch.UIKit.UISearchDisplayController controller, MonoTouch.UIKit.UITableView tableView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidHideSearchResults(class MonoTouch.UIKit.IUISearchDisplayDelegate This, class MonoTouch.UIKit.UISearchDisplayController controller, class MonoTouch.UIKit.UITableView tableView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchDisplayDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UISearchDisplayController" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="tableView">To be added.</param>
          <summary>Indicates that the controller hid its table view of results.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchDisplayDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchDisplayDelegate_Extensions.DidHideSearchResults(MonoTouch.UIKit.IUISearchDisplayDelegate,MonoTouch.UIKit.UISearchDisplayController,MonoTouch.UIKit.UITableView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchDisplayDelegate" />
      </Targets>
      <Member MemberName="DidLoadSearchResults">
        <MemberSignature Language="C#" Value="public static void DidLoadSearchResults (this MonoTouch.UIKit.IUISearchDisplayDelegate This, MonoTouch.UIKit.UISearchDisplayController controller, MonoTouch.UIKit.UITableView tableView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidLoadSearchResults(class MonoTouch.UIKit.IUISearchDisplayDelegate This, class MonoTouch.UIKit.UISearchDisplayController controller, class MonoTouch.UIKit.UITableView tableView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchDisplayDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UISearchDisplayController" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="tableView">To be added.</param>
          <summary>Indicates that the controller has loaded its UITableView of results.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchDisplayDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchDisplayDelegate_Extensions.DidLoadSearchResults(MonoTouch.UIKit.IUISearchDisplayDelegate,MonoTouch.UIKit.UISearchDisplayController,MonoTouch.UIKit.UITableView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchDisplayDelegate" />
      </Targets>
      <Member MemberName="DidShowSearchResults">
        <MemberSignature Language="C#" Value="public static void DidShowSearchResults (this MonoTouch.UIKit.IUISearchDisplayDelegate This, MonoTouch.UIKit.UISearchDisplayController controller, MonoTouch.UIKit.UITableView tableView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidShowSearchResults(class MonoTouch.UIKit.IUISearchDisplayDelegate This, class MonoTouch.UIKit.UISearchDisplayController controller, class MonoTouch.UIKit.UITableView tableView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchDisplayDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UISearchDisplayController" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="tableView">To be added.</param>
          <summary>Indicates that the controller has begun displayed its UITableView of results.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchDisplayDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchDisplayDelegate_Extensions.DidShowSearchResults(MonoTouch.UIKit.IUISearchDisplayDelegate,MonoTouch.UIKit.UISearchDisplayController,MonoTouch.UIKit.UITableView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchDisplayDelegate" />
      </Targets>
      <Member MemberName="ShouldReloadForSearchScope">
        <MemberSignature Language="C#" Value="public static bool ShouldReloadForSearchScope (this MonoTouch.UIKit.IUISearchDisplayDelegate This, MonoTouch.UIKit.UISearchDisplayController controller, int forSearchOption);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldReloadForSearchScope(class MonoTouch.UIKit.IUISearchDisplayDelegate This, class MonoTouch.UIKit.UISearchDisplayController controller, int32 forSearchOption) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static bool ShouldReloadForSearchScope (this MonoTouch.UIKit.IUISearchDisplayDelegate This, MonoTouch.UIKit.UISearchDisplayController controller, nint forSearchOption);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldReloadForSearchScope(class MonoTouch.UIKit.IUISearchDisplayDelegate This, class MonoTouch.UIKit.UISearchDisplayController controller, valuetype System.nint forSearchOption) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchDisplayDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UISearchDisplayController" />
          <Parameter Name="forSearchOption" Type="System.Int32" apistyle="classic" />
          <Parameter Name="forSearchOption" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="forSearchOption">To be added.</param>
          <summary>Whether data should be reloaded, given the change in search options.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchDisplayDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchDisplayDelegate_Extensions.ShouldReloadForSearchScope(MonoTouch.UIKit.IUISearchDisplayDelegate,MonoTouch.UIKit.UISearchDisplayController,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchDisplayDelegate" />
      </Targets>
      <Member MemberName="ShouldReloadForSearchString">
        <MemberSignature Language="C#" Value="public static bool ShouldReloadForSearchString (this MonoTouch.UIKit.IUISearchDisplayDelegate This, MonoTouch.UIKit.UISearchDisplayController controller, string forSearchString);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldReloadForSearchString(class MonoTouch.UIKit.IUISearchDisplayDelegate This, class MonoTouch.UIKit.UISearchDisplayController controller, string forSearchString) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchDisplayDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UISearchDisplayController" />
          <Parameter Name="forSearchString" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="forSearchString">To be added.</param>
          <summary>Whether data should be reloaded, given the change in search string.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchDisplayDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchDisplayDelegate_Extensions.ShouldReloadForSearchString(MonoTouch.UIKit.IUISearchDisplayDelegate,MonoTouch.UIKit.UISearchDisplayController,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchDisplayDelegate" />
      </Targets>
      <Member MemberName="WillBeginSearch">
        <MemberSignature Language="C#" Value="public static void WillBeginSearch (this MonoTouch.UIKit.IUISearchDisplayDelegate This, MonoTouch.UIKit.UISearchDisplayController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillBeginSearch(class MonoTouch.UIKit.IUISearchDisplayDelegate This, class MonoTouch.UIKit.UISearchDisplayController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchDisplayDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UISearchDisplayController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>Indicates that searching is about to start.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchDisplayDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchDisplayDelegate_Extensions.WillBeginSearch(MonoTouch.UIKit.IUISearchDisplayDelegate,MonoTouch.UIKit.UISearchDisplayController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchDisplayDelegate" />
      </Targets>
      <Member MemberName="WillEndSearch">
        <MemberSignature Language="C#" Value="public static void WillEndSearch (this MonoTouch.UIKit.IUISearchDisplayDelegate This, MonoTouch.UIKit.UISearchDisplayController controller);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillEndSearch(class MonoTouch.UIKit.IUISearchDisplayDelegate This, class MonoTouch.UIKit.UISearchDisplayController controller) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchDisplayDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UISearchDisplayController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <summary>Indicates that search is about to finish.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchDisplayDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchDisplayDelegate_Extensions.WillEndSearch(MonoTouch.UIKit.IUISearchDisplayDelegate,MonoTouch.UIKit.UISearchDisplayController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchDisplayDelegate" />
      </Targets>
      <Member MemberName="WillHideSearchResults">
        <MemberSignature Language="C#" Value="public static void WillHideSearchResults (this MonoTouch.UIKit.IUISearchDisplayDelegate This, MonoTouch.UIKit.UISearchDisplayController controller, MonoTouch.UIKit.UITableView tableView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillHideSearchResults(class MonoTouch.UIKit.IUISearchDisplayDelegate This, class MonoTouch.UIKit.UISearchDisplayController controller, class MonoTouch.UIKit.UITableView tableView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchDisplayDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UISearchDisplayController" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="tableView">To be added.</param>
          <summary>Indicates that the controller is about to hide its UITableView of results.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchDisplayDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchDisplayDelegate_Extensions.WillHideSearchResults(MonoTouch.UIKit.IUISearchDisplayDelegate,MonoTouch.UIKit.UISearchDisplayController,MonoTouch.UIKit.UITableView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchDisplayDelegate" />
      </Targets>
      <Member MemberName="WillShowSearchResults">
        <MemberSignature Language="C#" Value="public static void WillShowSearchResults (this MonoTouch.UIKit.IUISearchDisplayDelegate This, MonoTouch.UIKit.UISearchDisplayController controller, MonoTouch.UIKit.UITableView tableView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillShowSearchResults(class MonoTouch.UIKit.IUISearchDisplayDelegate This, class MonoTouch.UIKit.UISearchDisplayController controller, class MonoTouch.UIKit.UITableView tableView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchDisplayDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UISearchDisplayController" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="tableView">To be added.</param>
          <summary>Indicates that the controller is about to show its UITableView of results.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchDisplayDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchDisplayDelegate_Extensions.WillShowSearchResults(MonoTouch.UIKit.IUISearchDisplayDelegate,MonoTouch.UIKit.UISearchDisplayController,MonoTouch.UIKit.UITableView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISearchDisplayDelegate" />
      </Targets>
      <Member MemberName="WillUnloadSearchResults">
        <MemberSignature Language="C#" Value="public static void WillUnloadSearchResults (this MonoTouch.UIKit.IUISearchDisplayDelegate This, MonoTouch.UIKit.UISearchDisplayController controller, MonoTouch.UIKit.UITableView tableView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillUnloadSearchResults(class MonoTouch.UIKit.IUISearchDisplayDelegate This, class MonoTouch.UIKit.UISearchDisplayController controller, class MonoTouch.UIKit.UITableView tableView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISearchDisplayDelegate" RefType="this" />
          <Parameter Name="controller" Type="MonoTouch.UIKit.UISearchDisplayController" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="controller">To be added.</param>
          <param name="tableView">To be added.</param>
          <summary>Indicates that the controller is about to unload its UITableView of results.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISearchDisplayDelegate_Extensions" Member="M:MonoTouch.UIKit.UISearchDisplayDelegate_Extensions.WillUnloadSearchResults(MonoTouch.UIKit.IUISearchDisplayDelegate,MonoTouch.UIKit.UISearchDisplayController,MonoTouch.UIKit.UITableView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIViewController" />
      </Targets>
      <Member MemberName="CollapseSecondaryViewController">
        <MemberSignature Language="C#" Value="public static void CollapseSecondaryViewController (this MonoTouch.UIKit.UIViewController This, MonoTouch.UIKit.UIViewController secondaryViewController, MonoTouch.UIKit.UISplitViewController splitViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CollapseSecondaryViewController(class MonoTouch.UIKit.UIViewController This, class MonoTouch.UIKit.UIViewController secondaryViewController, class MonoTouch.UIKit.UISplitViewController splitViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UIViewController" RefType="this" />
          <Parameter Name="secondaryViewController" Type="MonoTouch.UIKit.UIViewController" />
          <Parameter Name="splitViewController" Type="MonoTouch.UIKit.UISplitViewController" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="secondaryViewController">To be added.</param>
          <param name="splitViewController">To be added.</param>
          <summary>Collapses the secondary view controller on <paramref name="splitViewController" /></summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISplitViewController_UIViewController" Member="M:MonoTouch.UIKit.UISplitViewController_UIViewController.CollapseSecondaryViewController(MonoTouch.UIKit.UIViewController,MonoTouch.UIKit.UIViewController,MonoTouch.UIKit.UISplitViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIViewController" />
      </Targets>
      <Member MemberName="GetSplitViewController">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UISplitViewController GetSplitViewController (this MonoTouch.UIKit.UIViewController This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UISplitViewController GetSplitViewController(class MonoTouch.UIKit.UIViewController This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UISplitViewController</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UIViewController" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns te split view controller for the nested view controller.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISplitViewController_UIViewController" Member="M:MonoTouch.UIKit.UISplitViewController_UIViewController.GetSplitViewController(MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIViewController" />
      </Targets>
      <Member MemberName="SeparateSecondaryViewControllerForSplitViewController">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIViewController SeparateSecondaryViewControllerForSplitViewController (this MonoTouch.UIKit.UIViewController This, MonoTouch.UIKit.UISplitViewController splitViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UIViewController SeparateSecondaryViewControllerForSplitViewController(class MonoTouch.UIKit.UIViewController This, class MonoTouch.UIKit.UISplitViewController splitViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIViewController</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UIViewController" RefType="this" />
          <Parameter Name="splitViewController" Type="MonoTouch.UIKit.UISplitViewController" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="splitViewController">To be added.</param>
          <summary>Returns the separate secondary view controller for <paramref name="splitViewController" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISplitViewController_UIViewController" Member="M:MonoTouch.UIKit.UISplitViewController_UIViewController.SeparateSecondaryViewControllerForSplitViewController(MonoTouch.UIKit.UIViewController,MonoTouch.UIKit.UISplitViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISplitViewControllerDelegate" />
      </Targets>
      <Member MemberName="CollapseSecondViewController">
        <MemberSignature Language="C#" Value="public static bool CollapseSecondViewController (this MonoTouch.UIKit.IUISplitViewControllerDelegate This, MonoTouch.UIKit.UISplitViewController splitViewController, MonoTouch.UIKit.UIViewController secondaryViewController, MonoTouch.UIKit.UIViewController primaryViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CollapseSecondViewController(class MonoTouch.UIKit.IUISplitViewControllerDelegate This, class MonoTouch.UIKit.UISplitViewController splitViewController, class MonoTouch.UIKit.UIViewController secondaryViewController, class MonoTouch.UIKit.UIViewController primaryViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISplitViewControllerDelegate" RefType="this" />
          <Parameter Name="splitViewController" Type="MonoTouch.UIKit.UISplitViewController" />
          <Parameter Name="secondaryViewController" Type="MonoTouch.UIKit.UIViewController" />
          <Parameter Name="primaryViewController" Type="MonoTouch.UIKit.UIViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="splitViewController">Designates the split view controller with the collapsing interface.</param>
          <param name="secondaryViewController">Designates the secondary view controller for the split view interface.</param>
          <param name="primaryViewController">Designates the primary view controller for the split view interface.</param>
          <summary>Collapses the secondary view controller on <paramref name="splitViewController" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions.CollapseSecondViewController(MonoTouch.UIKit.IUISplitViewControllerDelegate,MonoTouch.UIKit.UISplitViewController,MonoTouch.UIKit.UIViewController,MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISplitViewControllerDelegate" />
      </Targets>
      <Member MemberName="EventShowDetailViewController">
        <MemberSignature Language="C#" Value="public static bool EventShowDetailViewController (this MonoTouch.UIKit.IUISplitViewControllerDelegate This, MonoTouch.UIKit.UISplitViewController splitViewController, MonoTouch.UIKit.UIViewController vc, MonoTouch.Foundation.NSObject sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool EventShowDetailViewController(class MonoTouch.UIKit.IUISplitViewControllerDelegate This, class MonoTouch.UIKit.UISplitViewController splitViewController, class MonoTouch.UIKit.UIViewController vc, class MonoTouch.Foundation.NSObject sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISplitViewControllerDelegate" RefType="this" />
          <Parameter Name="splitViewController" Type="MonoTouch.UIKit.UISplitViewController" />
          <Parameter Name="vc" Type="MonoTouch.UIKit.UIViewController" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="splitViewController">Designates the split view controller that has its secondary view being updated.</param>
          <param name="vc">The view controller that is being displayed in the secondary position.</param>
          <param name="sender">The action making the request.</param>
          <summary>Returns true if the delegate will display the detail view itself, rather than relying on <paramref name="splitViewController" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions.EventShowDetailViewController(MonoTouch.UIKit.IUISplitViewControllerDelegate,MonoTouch.UIKit.UISplitViewController,MonoTouch.UIKit.UIViewController,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISplitViewControllerDelegate" />
      </Targets>
      <Member MemberName="EventShowViewController">
        <MemberSignature Language="C#" Value="public static bool EventShowViewController (this MonoTouch.UIKit.IUISplitViewControllerDelegate This, MonoTouch.UIKit.UISplitViewController splitViewController, MonoTouch.UIKit.UIViewController vc, MonoTouch.Foundation.NSObject sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool EventShowViewController(class MonoTouch.UIKit.IUISplitViewControllerDelegate This, class MonoTouch.UIKit.UISplitViewController splitViewController, class MonoTouch.UIKit.UIViewController vc, class MonoTouch.Foundation.NSObject sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISplitViewControllerDelegate" RefType="this" />
          <Parameter Name="splitViewController" Type="MonoTouch.UIKit.UISplitViewController" />
          <Parameter Name="vc" Type="MonoTouch.UIKit.UIViewController" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="splitViewController">Designates the split view controller that has its primary view being updated.</param>
          <param name="vc">The view controller that is being displayed in the primary position.</param>
          <param name="sender">The action making the request.</param>
          <summary>Shows <paramref name="vc" /> in the primary position.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions.EventShowViewController(MonoTouch.UIKit.IUISplitViewControllerDelegate,MonoTouch.UIKit.UISplitViewController,MonoTouch.UIKit.UIViewController,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISplitViewControllerDelegate" />
      </Targets>
      <Member MemberName="GetPreferredInterfaceOrientationForPresentation">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIInterfaceOrientation GetPreferredInterfaceOrientationForPresentation (this MonoTouch.UIKit.IUISplitViewControllerDelegate This, MonoTouch.UIKit.UISplitViewController splitViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.UIKit.UIInterfaceOrientation GetPreferredInterfaceOrientationForPresentation(class MonoTouch.UIKit.IUISplitViewControllerDelegate This, class MonoTouch.UIKit.UISplitViewController splitViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIInterfaceOrientation</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISplitViewControllerDelegate" RefType="this" />
          <Parameter Name="splitViewController" Type="MonoTouch.UIKit.UISplitViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="splitViewController">Designates the split view controller that will be presented onscreen.</param>
          <summary>Returns the preferred user interface orientation to use when presenting <paramref name="splitViewController" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions.GetPreferredInterfaceOrientationForPresentation(MonoTouch.UIKit.IUISplitViewControllerDelegate,MonoTouch.UIKit.UISplitViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISplitViewControllerDelegate" />
      </Targets>
      <Member MemberName="GetPrimaryViewControllerForCollapsingSplitViewController">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIViewController GetPrimaryViewControllerForCollapsingSplitViewController (this MonoTouch.UIKit.IUISplitViewControllerDelegate This, MonoTouch.UIKit.UISplitViewController splitViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UIViewController GetPrimaryViewControllerForCollapsingSplitViewController(class MonoTouch.UIKit.IUISplitViewControllerDelegate This, class MonoTouch.UIKit.UISplitViewController splitViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIViewController</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISplitViewControllerDelegate" RefType="this" />
          <Parameter Name="splitViewController" Type="MonoTouch.UIKit.UISplitViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="splitViewController">Designates the split view controller whose interface is collapsing.</param>
          <summary>Returns the primary view controller for the collapsing view controller <paramref name="splitViewController" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions.GetPrimaryViewControllerForCollapsingSplitViewController(MonoTouch.UIKit.IUISplitViewControllerDelegate,MonoTouch.UIKit.UISplitViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISplitViewControllerDelegate" />
      </Targets>
      <Member MemberName="GetPrimaryViewControllerForExpandingSplitViewController">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIViewController GetPrimaryViewControllerForExpandingSplitViewController (this MonoTouch.UIKit.IUISplitViewControllerDelegate This, MonoTouch.UIKit.UISplitViewController splitViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UIViewController GetPrimaryViewControllerForExpandingSplitViewController(class MonoTouch.UIKit.IUISplitViewControllerDelegate This, class MonoTouch.UIKit.UISplitViewController splitViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIViewController</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISplitViewControllerDelegate" RefType="this" />
          <Parameter Name="splitViewController" Type="MonoTouch.UIKit.UISplitViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="splitViewController">To be added.</param>
          <summary>Returns the primary view controller for the expanding view controller <paramref name="splitViewController" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions.GetPrimaryViewControllerForExpandingSplitViewController(MonoTouch.UIKit.IUISplitViewControllerDelegate,MonoTouch.UIKit.UISplitViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISplitViewControllerDelegate" />
      </Targets>
      <Member MemberName="GetTargetDisplayModeForAction">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UISplitViewControllerDisplayMode GetTargetDisplayModeForAction (this MonoTouch.UIKit.IUISplitViewControllerDelegate This, MonoTouch.UIKit.UISplitViewController svc);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.UIKit.UISplitViewControllerDisplayMode GetTargetDisplayModeForAction(class MonoTouch.UIKit.IUISplitViewControllerDelegate This, class MonoTouch.UIKit.UISplitViewController svc) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UISplitViewControllerDisplayMode</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISplitViewControllerDelegate" RefType="this" />
          <Parameter Name="svc" Type="MonoTouch.UIKit.UISplitViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="svc">Split view controller whose action might be triggered.</param>
          <summary>Returns the display mode for the <paramref name="svc" /> action.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions.GetTargetDisplayModeForAction(MonoTouch.UIKit.IUISplitViewControllerDelegate,MonoTouch.UIKit.UISplitViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISplitViewControllerDelegate" />
      </Targets>
      <Member MemberName="SeparateSecondaryViewController">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIViewController SeparateSecondaryViewController (this MonoTouch.UIKit.IUISplitViewControllerDelegate This, MonoTouch.UIKit.UISplitViewController splitViewController, MonoTouch.UIKit.UIViewController primaryViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UIViewController SeparateSecondaryViewController(class MonoTouch.UIKit.IUISplitViewControllerDelegate This, class MonoTouch.UIKit.UISplitViewController splitViewController, class MonoTouch.UIKit.UIViewController primaryViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIViewController</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISplitViewControllerDelegate" RefType="this" />
          <Parameter Name="splitViewController" Type="MonoTouch.UIKit.UISplitViewController" />
          <Parameter Name="primaryViewController" Type="MonoTouch.UIKit.UIViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="splitViewController">The split view controller with the expanding interface.</param>
          <param name="primaryViewController">Primary view controller specified for the expanded split view interface.</param>
          <summary>Returns a new secondary view controller to use in split-view mode, or nil to use the default.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions.SeparateSecondaryViewController(MonoTouch.UIKit.IUISplitViewControllerDelegate,MonoTouch.UIKit.UISplitViewController,MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISplitViewControllerDelegate" />
      </Targets>
      <Member MemberName="ShouldHideViewController">
        <MemberSignature Language="C#" Value="public static bool ShouldHideViewController (this MonoTouch.UIKit.IUISplitViewControllerDelegate This, MonoTouch.UIKit.UISplitViewController svc, MonoTouch.UIKit.UIViewController viewController, MonoTouch.UIKit.UIInterfaceOrientation inOrientation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldHideViewController(class MonoTouch.UIKit.IUISplitViewControllerDelegate This, class MonoTouch.UIKit.UISplitViewController svc, class MonoTouch.UIKit.UIViewController viewController, valuetype MonoTouch.UIKit.UIInterfaceOrientation inOrientation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISplitViewControllerDelegate" RefType="this" />
          <Parameter Name="svc" Type="MonoTouch.UIKit.UISplitViewController" />
          <Parameter Name="viewController" Type="MonoTouch.UIKit.UIViewController" />
          <Parameter Name="inOrientation" Type="MonoTouch.UIKit.UIInterfaceOrientation" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="svc">The designated split view controller whose action might be triggered.</param>
          <param name="viewController">The specified view controller.</param>
          <param name="inOrientation">The specified orientation.</param>
          <summary>Whether the specified viewController should be hidden in the specified orientation.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions.ShouldHideViewController(MonoTouch.UIKit.IUISplitViewControllerDelegate,MonoTouch.UIKit.UISplitViewController,MonoTouch.UIKit.UIViewController,MonoTouch.UIKit.UIInterfaceOrientation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISplitViewControllerDelegate" />
      </Targets>
      <Member MemberName="SupportedInterfaceOrientations">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIInterfaceOrientationMask SupportedInterfaceOrientations (this MonoTouch.UIKit.IUISplitViewControllerDelegate This, MonoTouch.UIKit.UISplitViewController splitViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.UIKit.UIInterfaceOrientationMask SupportedInterfaceOrientations(class MonoTouch.UIKit.IUISplitViewControllerDelegate This, class MonoTouch.UIKit.UISplitViewController splitViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIInterfaceOrientationMask</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISplitViewControllerDelegate" RefType="this" />
          <Parameter Name="splitViewController" Type="MonoTouch.UIKit.UISplitViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="splitViewController">The split view controller.</param>
          <summary>Returns the supported interface orientations for <paramref name="splitViewController" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions.SupportedInterfaceOrientations(MonoTouch.UIKit.IUISplitViewControllerDelegate,MonoTouch.UIKit.UISplitViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISplitViewControllerDelegate" />
      </Targets>
      <Member MemberName="WillChangeDisplayMode">
        <MemberSignature Language="C#" Value="public static void WillChangeDisplayMode (this MonoTouch.UIKit.IUISplitViewControllerDelegate This, MonoTouch.UIKit.UISplitViewController svc, MonoTouch.UIKit.UISplitViewControllerDisplayMode displayMode);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillChangeDisplayMode(class MonoTouch.UIKit.IUISplitViewControllerDelegate This, class MonoTouch.UIKit.UISplitViewController svc, valuetype MonoTouch.UIKit.UISplitViewControllerDisplayMode displayMode) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISplitViewControllerDelegate" RefType="this" />
          <Parameter Name="svc" Type="MonoTouch.UIKit.UISplitViewController" />
          <Parameter Name="displayMode" Type="MonoTouch.UIKit.UISplitViewControllerDisplayMode" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="svc">The split view controller whose display mode is changing.</param>
          <param name="displayMode">TThe new display mode that will be applied.</param>
          <summary>The split view controller <paramref name="svc" /> will change its display mode to <paramref name="displayMode" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions.WillChangeDisplayMode(MonoTouch.UIKit.IUISplitViewControllerDelegate,MonoTouch.UIKit.UISplitViewController,MonoTouch.UIKit.UISplitViewControllerDisplayMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISplitViewControllerDelegate" />
      </Targets>
      <Member MemberName="WillHideViewController">
        <MemberSignature Language="C#" Value="public static void WillHideViewController (this MonoTouch.UIKit.IUISplitViewControllerDelegate This, MonoTouch.UIKit.UISplitViewController svc, MonoTouch.UIKit.UIViewController aViewController, MonoTouch.UIKit.UIBarButtonItem barButtonItem, MonoTouch.UIKit.UIPopoverController pc);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillHideViewController(class MonoTouch.UIKit.IUISplitViewControllerDelegate This, class MonoTouch.UIKit.UISplitViewController svc, class MonoTouch.UIKit.UIViewController aViewController, class MonoTouch.UIKit.UIBarButtonItem barButtonItem, class MonoTouch.UIKit.UIPopoverController pc) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISplitViewControllerDelegate" RefType="this" />
          <Parameter Name="svc" Type="MonoTouch.UIKit.UISplitViewController" />
          <Parameter Name="aViewController" Type="MonoTouch.UIKit.UIViewController" />
          <Parameter Name="barButtonItem" Type="MonoTouch.UIKit.UIBarButtonItem" />
          <Parameter Name="pc" Type="MonoTouch.UIKit.UIPopoverController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="svc">The split view controller whose display mode is changing.</param>
          <param name="aViewController">Specified view controller.</param>
          <param name="barButtonItem">An enumeration of the predefined s.</param>
          <param name="pc">Specified popover controller.</param>
          <summary>Indicates that the UISplitViewController is about to be hidden.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions.WillHideViewController(MonoTouch.UIKit.IUISplitViewControllerDelegate,MonoTouch.UIKit.UISplitViewController,MonoTouch.UIKit.UIViewController,MonoTouch.UIKit.UIBarButtonItem,MonoTouch.UIKit.UIPopoverController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISplitViewControllerDelegate" />
      </Targets>
      <Member MemberName="WillPresentViewController">
        <MemberSignature Language="C#" Value="public static void WillPresentViewController (this MonoTouch.UIKit.IUISplitViewControllerDelegate This, MonoTouch.UIKit.UISplitViewController svc, MonoTouch.UIKit.UIPopoverController pc, MonoTouch.UIKit.UIViewController aViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillPresentViewController(class MonoTouch.UIKit.IUISplitViewControllerDelegate This, class MonoTouch.UIKit.UISplitViewController svc, class MonoTouch.UIKit.UIPopoverController pc, class MonoTouch.UIKit.UIViewController aViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISplitViewControllerDelegate" RefType="this" />
          <Parameter Name="svc" Type="MonoTouch.UIKit.UISplitViewController" />
          <Parameter Name="pc" Type="MonoTouch.UIKit.UIPopoverController" />
          <Parameter Name="aViewController" Type="MonoTouch.UIKit.UIViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="svc">The split view controller whose display mode is changing.</param>
          <param name="pc">Specified popover controller.</param>
          <param name="aViewController">Specified view controller.</param>
          <summary>Indicates that the UISplitViewController is about to be presented.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions.WillPresentViewController(MonoTouch.UIKit.IUISplitViewControllerDelegate,MonoTouch.UIKit.UISplitViewController,MonoTouch.UIKit.UIPopoverController,MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUISplitViewControllerDelegate" />
      </Targets>
      <Member MemberName="WillShowViewController">
        <MemberSignature Language="C#" Value="public static void WillShowViewController (this MonoTouch.UIKit.IUISplitViewControllerDelegate This, MonoTouch.UIKit.UISplitViewController svc, MonoTouch.UIKit.UIViewController aViewController, MonoTouch.UIKit.UIBarButtonItem button);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillShowViewController(class MonoTouch.UIKit.IUISplitViewControllerDelegate This, class MonoTouch.UIKit.UISplitViewController svc, class MonoTouch.UIKit.UIViewController aViewController, class MonoTouch.UIKit.UIBarButtonItem button) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUISplitViewControllerDelegate" RefType="this" />
          <Parameter Name="svc" Type="MonoTouch.UIKit.UISplitViewController" />
          <Parameter Name="aViewController" Type="MonoTouch.UIKit.UIViewController" />
          <Parameter Name="button" Type="MonoTouch.UIKit.UIBarButtonItem" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="svc">The split view controller whose display mode is changing.</param>
          <param name="aViewController">Specified view controller.</param>
          <param name="button">An enumeration of the predefined s.</param>
          <summary>Indicates that the UISplitViewController is about to be shown.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UISplitViewControllerDelegate_Extensions.WillShowViewController(MonoTouch.UIKit.IUISplitViewControllerDelegate,MonoTouch.UIKit.UISplitViewController,MonoTouch.UIKit.UIViewController,MonoTouch.UIKit.UIBarButtonItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIStateRestoring" />
      </Targets>
      <Member MemberName="ApplicationFinishedRestoringState">
        <MemberSignature Language="C#" Value="public static void ApplicationFinishedRestoringState (this MonoTouch.UIKit.IUIStateRestoring This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ApplicationFinishedRestoringState(class MonoTouch.UIKit.IUIStateRestoring This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIStateRestoring" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <summary>Indicates that the application has finished restoring state.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStateRestoring_Extensions" Member="M:MonoTouch.UIKit.UIStateRestoring_Extensions.ApplicationFinishedRestoringState(MonoTouch.UIKit.IUIStateRestoring)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIStateRestoring" />
      </Targets>
      <Member MemberName="DecodeRestorableState">
        <MemberSignature Language="C#" Value="public static void DecodeRestorableState (this MonoTouch.UIKit.IUIStateRestoring This, MonoTouch.Foundation.NSCoder coder);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DecodeRestorableState(class MonoTouch.UIKit.IUIStateRestoring This, class MonoTouch.Foundation.NSCoder coder) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIStateRestoring" RefType="this" />
          <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="coder">To be added.</param>
          <summary>Decodes and restores state.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStateRestoring_Extensions" Member="M:MonoTouch.UIKit.UIStateRestoring_Extensions.DecodeRestorableState(MonoTouch.UIKit.IUIStateRestoring,MonoTouch.Foundation.NSCoder)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIStateRestoring" />
      </Targets>
      <Member MemberName="EncodeRestorableState">
        <MemberSignature Language="C#" Value="public static void EncodeRestorableState (this MonoTouch.UIKit.IUIStateRestoring This, MonoTouch.Foundation.NSCoder coder);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EncodeRestorableState(class MonoTouch.UIKit.IUIStateRestoring This, class MonoTouch.Foundation.NSCoder coder) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIStateRestoring" RefType="this" />
          <Parameter Name="coder" Type="MonoTouch.Foundation.NSCoder" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="coder">To be added.</param>
          <summary>Encodes state-related information.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStateRestoring_Extensions" Member="M:MonoTouch.UIKit.UIStateRestoring_Extensions.EncodeRestorableState(MonoTouch.UIKit.IUIStateRestoring,MonoTouch.Foundation.NSCoder)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIStateRestoring" />
      </Targets>
      <Member MemberName="GetObjectRestorationClass">
        <MemberSignature Language="C#" Value="public static MonoTouch.ObjCRuntime.Class GetObjectRestorationClass (this MonoTouch.UIKit.IUIStateRestoring This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.ObjCRuntime.Class GetObjectRestorationClass(class MonoTouch.UIKit.IUIStateRestoring This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.ObjCRuntime.Class</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIStateRestoring" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Gets the class that recreates the restored object.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStateRestoring_Extensions" Member="M:MonoTouch.UIKit.UIStateRestoring_Extensions.GetObjectRestorationClass(MonoTouch.UIKit.IUIStateRestoring)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIStateRestoring" />
      </Targets>
      <Member MemberName="GetRestorationParent">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.IUIStateRestoring GetRestorationParent (this MonoTouch.UIKit.IUIStateRestoring This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.IUIStateRestoring GetRestorationParent(class MonoTouch.UIKit.IUIStateRestoring This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.IUIStateRestoring</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIStateRestoring" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Gets the parent of the object to restore.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStateRestoring_Extensions" Member="M:MonoTouch.UIKit.UIStateRestoring_Extensions.GetRestorationParent(MonoTouch.UIKit.IUIStateRestoring)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="DrawString">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF DrawString (this MonoTouch.Foundation.NSString This, System.Drawing.PointF point, MonoTouch.UIKit.UIFont font);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF DrawString(class MonoTouch.Foundation.NSString This, valuetype System.Drawing.PointF point, class MonoTouch.UIKit.UIFont font) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGSize DrawString (this MonoTouch.Foundation.NSString This, MonoTouch.CoreGraphics.CGPoint point, MonoTouch.UIKit.UIFont font);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGSize DrawString(class MonoTouch.Foundation.NSString This, valuetype MonoTouch.CoreGraphics.CGPoint point, class MonoTouch.UIKit.UIFont font) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.SizeF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="point" Type="System.Drawing.PointF" apistyle="classic" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="point" Type="MonoTouch.CoreGraphics.CGPoint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="point">To be added.</param>
          <param name="font">To be added.</param>
          <summary>Draws the string at the specified <param name="point" />, using the <param name="font" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.DrawString(MonoTouch.Foundation.NSString,MonoTouch.CoreGraphics.CGPoint,MonoTouch.UIKit.UIFont)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="DrawString">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF DrawString (this MonoTouch.Foundation.NSString This, System.Drawing.PointF point, float width, MonoTouch.UIKit.UIFont font, MonoTouch.UIKit.UILineBreakMode breakMode);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF DrawString(class MonoTouch.Foundation.NSString This, valuetype System.Drawing.PointF point, float32 width, class MonoTouch.UIKit.UIFont font, valuetype MonoTouch.UIKit.UILineBreakMode breakMode) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGSize DrawString (this MonoTouch.Foundation.NSString This, MonoTouch.CoreGraphics.CGPoint point, nfloat width, MonoTouch.UIKit.UIFont font, MonoTouch.UIKit.UILineBreakMode breakMode);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGSize DrawString(class MonoTouch.Foundation.NSString This, valuetype MonoTouch.CoreGraphics.CGPoint point, valuetype System.nfloat width, class MonoTouch.UIKit.UIFont font, valuetype MonoTouch.UIKit.UILineBreakMode breakMode) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.SizeF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="point" Type="System.Drawing.PointF" apistyle="classic" />
          <Parameter Name="width" Type="System.Single" apistyle="classic" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="breakMode" Type="MonoTouch.UIKit.UILineBreakMode" />
          <Parameter Name="point" Type="MonoTouch.CoreGraphics.CGPoint" apistyle="unified" />
          <Parameter Name="width" Type="System.nfloat" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="point">To be added.</param>
          <param name="width">To be added.</param>
          <param name="font">To be added.</param>
          <param name="breakMode">To be added.</param>
          <summary>Draws the string, starting at the specified <param name="point" /> and extending <param name="width" />, using the <param name="font" />, with the specified line-breaking <param name="breakMode" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.DrawString(MonoTouch.Foundation.NSString,MonoTouch.CoreGraphics.CGPoint,System.nfloat,MonoTouch.UIKit.UIFont,MonoTouch.UIKit.UILineBreakMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="DrawString">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF DrawString (this MonoTouch.Foundation.NSString This, System.Drawing.PointF point, float width, MonoTouch.UIKit.UIFont font, float fontSize, MonoTouch.UIKit.UILineBreakMode breakMode, MonoTouch.UIKit.UIBaselineAdjustment adjustment);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF DrawString(class MonoTouch.Foundation.NSString This, valuetype System.Drawing.PointF point, float32 width, class MonoTouch.UIKit.UIFont font, float32 fontSize, valuetype MonoTouch.UIKit.UILineBreakMode breakMode, valuetype MonoTouch.UIKit.UIBaselineAdjustment adjustment) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGSize DrawString (this MonoTouch.Foundation.NSString This, MonoTouch.CoreGraphics.CGPoint point, nfloat width, MonoTouch.UIKit.UIFont font, nfloat fontSize, MonoTouch.UIKit.UILineBreakMode breakMode, MonoTouch.UIKit.UIBaselineAdjustment adjustment);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGSize DrawString(class MonoTouch.Foundation.NSString This, valuetype MonoTouch.CoreGraphics.CGPoint point, valuetype System.nfloat width, class MonoTouch.UIKit.UIFont font, valuetype System.nfloat fontSize, valuetype MonoTouch.UIKit.UILineBreakMode breakMode, valuetype MonoTouch.UIKit.UIBaselineAdjustment adjustment) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.SizeF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="point" Type="System.Drawing.PointF" apistyle="classic" />
          <Parameter Name="width" Type="System.Single" apistyle="classic" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="fontSize" Type="System.Single" apistyle="classic" />
          <Parameter Name="breakMode" Type="MonoTouch.UIKit.UILineBreakMode" />
          <Parameter Name="adjustment" Type="MonoTouch.UIKit.UIBaselineAdjustment" />
          <Parameter Name="point" Type="MonoTouch.CoreGraphics.CGPoint" apistyle="unified" />
          <Parameter Name="width" Type="System.nfloat" apistyle="unified" />
          <Parameter Name="fontSize" Type="System.nfloat" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="point">To be added.</param>
          <param name="width">To be added.</param>
          <param name="font">To be added.</param>
          <param name="fontSize">To be added.</param>
          <param name="breakMode">To be added.</param>
          <param name="adjustment">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.DrawString(MonoTouch.Foundation.NSString,MonoTouch.CoreGraphics.CGPoint,System.nfloat,MonoTouch.UIKit.UIFont,System.nfloat,MonoTouch.UIKit.UILineBreakMode,MonoTouch.UIKit.UIBaselineAdjustment)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="DrawString">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF DrawString (this MonoTouch.Foundation.NSString This, System.Drawing.PointF point, float width, MonoTouch.UIKit.UIFont font, float minFontSize, ref float actualFontSize, MonoTouch.UIKit.UILineBreakMode breakMode, MonoTouch.UIKit.UIBaselineAdjustment adjustment);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF DrawString(class MonoTouch.Foundation.NSString This, valuetype System.Drawing.PointF point, float32 width, class MonoTouch.UIKit.UIFont font, float32 minFontSize, float32 actualFontSize, valuetype MonoTouch.UIKit.UILineBreakMode breakMode, valuetype MonoTouch.UIKit.UIBaselineAdjustment adjustment) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGSize DrawString (this MonoTouch.Foundation.NSString This, MonoTouch.CoreGraphics.CGPoint point, nfloat width, MonoTouch.UIKit.UIFont font, nfloat minFontSize, ref nfloat actualFontSize, MonoTouch.UIKit.UILineBreakMode breakMode, MonoTouch.UIKit.UIBaselineAdjustment adjustment);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGSize DrawString(class MonoTouch.Foundation.NSString This, valuetype MonoTouch.CoreGraphics.CGPoint point, valuetype System.nfloat width, class MonoTouch.UIKit.UIFont font, valuetype System.nfloat minFontSize, valuetype System.nfloat actualFontSize, valuetype MonoTouch.UIKit.UILineBreakMode breakMode, valuetype MonoTouch.UIKit.UIBaselineAdjustment adjustment) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.SizeF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="point" Type="System.Drawing.PointF" apistyle="classic" />
          <Parameter Name="width" Type="System.Single" apistyle="classic" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="minFontSize" Type="System.Single" apistyle="classic" />
          <Parameter Name="actualFontSize" Type="System.Single&amp;" RefType="ref" apistyle="classic" />
          <Parameter Name="breakMode" Type="MonoTouch.UIKit.UILineBreakMode" />
          <Parameter Name="adjustment" Type="MonoTouch.UIKit.UIBaselineAdjustment" />
          <Parameter Name="point" Type="MonoTouch.CoreGraphics.CGPoint" apistyle="unified" />
          <Parameter Name="width" Type="System.nfloat" apistyle="unified" />
          <Parameter Name="minFontSize" Type="System.nfloat" apistyle="unified" />
          <Parameter Name="actualFontSize" Type="System.nfloat&amp;" RefType="ref" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="point">To be added.</param>
          <param name="width">To be added.</param>
          <param name="font">To be added.</param>
          <param name="minFontSize">To be added.</param>
          <param name="actualFontSize">To be added.</param>
          <param name="breakMode">To be added.</param>
          <param name="adjustment">To be added.</param>
          <summary>Draws the string, starting at the specified <param name="point" /> with a baseline <param name="adjustment" /> and extending <param name="width" />, using the <param name="font" /> in the size range specified, with the specified line-breaking <param name="mode" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.DrawString(MonoTouch.Foundation.NSString,MonoTouch.CoreGraphics.CGPoint,System.nfloat,MonoTouch.UIKit.UIFont,System.nfloat,System.nfloat@,MonoTouch.UIKit.UILineBreakMode,MonoTouch.UIKit.UIBaselineAdjustment)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="DrawString">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF DrawString (this MonoTouch.Foundation.NSString This, System.Drawing.RectangleF rect, MonoTouch.UIKit.UIFont font);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF DrawString(class MonoTouch.Foundation.NSString This, valuetype System.Drawing.RectangleF rect, class MonoTouch.UIKit.UIFont font) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGSize DrawString (this MonoTouch.Foundation.NSString This, MonoTouch.CoreGraphics.CGRect rect, MonoTouch.UIKit.UIFont font);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGSize DrawString(class MonoTouch.Foundation.NSString This, valuetype MonoTouch.CoreGraphics.CGRect rect, class MonoTouch.UIKit.UIFont font) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.SizeF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="rect" Type="System.Drawing.RectangleF" apistyle="classic" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="rect">To be added.</param>
          <param name="font">To be added.</param>
          <summary>Draws the string in the <param name="rect" />, using the <param name="font" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.DrawString(MonoTouch.Foundation.NSString,MonoTouch.CoreGraphics.CGRect,MonoTouch.UIKit.UIFont)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="DrawString">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF DrawString (this MonoTouch.Foundation.NSString This, System.Drawing.RectangleF rect, MonoTouch.UIKit.UIFont font, MonoTouch.UIKit.UILineBreakMode mode);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF DrawString(class MonoTouch.Foundation.NSString This, valuetype System.Drawing.RectangleF rect, class MonoTouch.UIKit.UIFont font, valuetype MonoTouch.UIKit.UILineBreakMode mode) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGSize DrawString (this MonoTouch.Foundation.NSString This, MonoTouch.CoreGraphics.CGRect rect, MonoTouch.UIKit.UIFont font, MonoTouch.UIKit.UILineBreakMode mode);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGSize DrawString(class MonoTouch.Foundation.NSString This, valuetype MonoTouch.CoreGraphics.CGRect rect, class MonoTouch.UIKit.UIFont font, valuetype MonoTouch.UIKit.UILineBreakMode mode) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.SizeF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="rect" Type="System.Drawing.RectangleF" apistyle="classic" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="mode" Type="MonoTouch.UIKit.UILineBreakMode" />
          <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="rect">To be added.</param>
          <param name="font">To be added.</param>
          <param name="mode">To be added.</param>
          <summary>Draws the string in the specified <param name="rect" />, using the <param name="font" />, with the specified line-breaking <param name="mode" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.DrawString(MonoTouch.Foundation.NSString,MonoTouch.CoreGraphics.CGRect,MonoTouch.UIKit.UIFont,MonoTouch.UIKit.UILineBreakMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="DrawString">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF DrawString (this MonoTouch.Foundation.NSString This, System.Drawing.RectangleF rect, MonoTouch.UIKit.UIFont font, MonoTouch.UIKit.UILineBreakMode mode, MonoTouch.UIKit.UITextAlignment alignment);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF DrawString(class MonoTouch.Foundation.NSString This, valuetype System.Drawing.RectangleF rect, class MonoTouch.UIKit.UIFont font, valuetype MonoTouch.UIKit.UILineBreakMode mode, valuetype MonoTouch.UIKit.UITextAlignment alignment) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGSize DrawString (this MonoTouch.Foundation.NSString This, MonoTouch.CoreGraphics.CGRect rect, MonoTouch.UIKit.UIFont font, MonoTouch.UIKit.UILineBreakMode mode, MonoTouch.UIKit.UITextAlignment alignment);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGSize DrawString(class MonoTouch.Foundation.NSString This, valuetype MonoTouch.CoreGraphics.CGRect rect, class MonoTouch.UIKit.UIFont font, valuetype MonoTouch.UIKit.UILineBreakMode mode, valuetype MonoTouch.UIKit.UITextAlignment alignment) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.SizeF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="rect" Type="System.Drawing.RectangleF" apistyle="classic" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="mode" Type="MonoTouch.UIKit.UILineBreakMode" />
          <Parameter Name="alignment" Type="MonoTouch.UIKit.UITextAlignment" />
          <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="rect">To be added.</param>
          <param name="font">To be added.</param>
          <param name="mode">To be added.</param>
          <param name="alignment">To be added.</param>
          <summary>Draws the string in the specified <param name="rect" />, using the <param name="font" />, with the specified <param name="alignment" /> and line-breaking <param name="mode" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.DrawString(MonoTouch.Foundation.NSString,MonoTouch.CoreGraphics.CGRect,MonoTouch.UIKit.UIFont,MonoTouch.UIKit.UILineBreakMode,MonoTouch.UIKit.UITextAlignment)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.String" />
      </Targets>
      <Member MemberName="DrawString">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF DrawString (this string This, System.Drawing.PointF point, MonoTouch.UIKit.UIFont font);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF DrawString(string This, valuetype System.Drawing.PointF point, class MonoTouch.UIKit.UIFont font) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGSize DrawString (this string This, MonoTouch.CoreGraphics.CGPoint point, MonoTouch.UIKit.UIFont font);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGSize DrawString(string This, valuetype MonoTouch.CoreGraphics.CGPoint point, class MonoTouch.UIKit.UIFont font) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.SizeF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="System.String" RefType="this" />
          <Parameter Name="point" Type="System.Drawing.PointF" apistyle="classic" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="point" Type="MonoTouch.CoreGraphics.CGPoint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="point">To be added.</param>
          <param name="font">To be added.</param>
          <summary>Draws the string at the specified <param name="point" />, using the <param name="font" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.DrawString(System.String,MonoTouch.CoreGraphics.CGPoint,MonoTouch.UIKit.UIFont)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.String" />
      </Targets>
      <Member MemberName="DrawString">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF DrawString (this string This, System.Drawing.PointF point, float width, MonoTouch.UIKit.UIFont font, MonoTouch.UIKit.UILineBreakMode breakMode);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF DrawString(string This, valuetype System.Drawing.PointF point, float32 width, class MonoTouch.UIKit.UIFont font, valuetype MonoTouch.UIKit.UILineBreakMode breakMode) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGSize DrawString (this string This, MonoTouch.CoreGraphics.CGPoint point, nfloat width, MonoTouch.UIKit.UIFont font, MonoTouch.UIKit.UILineBreakMode breakMode);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGSize DrawString(string This, valuetype MonoTouch.CoreGraphics.CGPoint point, valuetype System.nfloat width, class MonoTouch.UIKit.UIFont font, valuetype MonoTouch.UIKit.UILineBreakMode breakMode) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.SizeF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="System.String" RefType="this" />
          <Parameter Name="point" Type="System.Drawing.PointF" apistyle="classic" />
          <Parameter Name="width" Type="System.Single" apistyle="classic" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="breakMode" Type="MonoTouch.UIKit.UILineBreakMode" />
          <Parameter Name="point" Type="MonoTouch.CoreGraphics.CGPoint" apistyle="unified" />
          <Parameter Name="width" Type="System.nfloat" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="point">To be added.</param>
          <param name="width">To be added.</param>
          <param name="font">To be added.</param>
          <param name="breakMode">To be added.</param>
          <summary>Draws the string, starting at the specified <param name="point" /> and extending <param name="width" />, using the <param name="font" />, with the specified line-breaking <param name="breakMode" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.DrawString(System.String,MonoTouch.CoreGraphics.CGPoint,System.nfloat,MonoTouch.UIKit.UIFont,MonoTouch.UIKit.UILineBreakMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.String" />
      </Targets>
      <Member MemberName="DrawString">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF DrawString (this string This, System.Drawing.PointF point, float width, MonoTouch.UIKit.UIFont font, float fontSize, MonoTouch.UIKit.UILineBreakMode breakMode, MonoTouch.UIKit.UIBaselineAdjustment adjustment);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF DrawString(string This, valuetype System.Drawing.PointF point, float32 width, class MonoTouch.UIKit.UIFont font, float32 fontSize, valuetype MonoTouch.UIKit.UILineBreakMode breakMode, valuetype MonoTouch.UIKit.UIBaselineAdjustment adjustment) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGSize DrawString (this string This, MonoTouch.CoreGraphics.CGPoint point, nfloat width, MonoTouch.UIKit.UIFont font, nfloat fontSize, MonoTouch.UIKit.UILineBreakMode breakMode, MonoTouch.UIKit.UIBaselineAdjustment adjustment);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGSize DrawString(string This, valuetype MonoTouch.CoreGraphics.CGPoint point, valuetype System.nfloat width, class MonoTouch.UIKit.UIFont font, valuetype System.nfloat fontSize, valuetype MonoTouch.UIKit.UILineBreakMode breakMode, valuetype MonoTouch.UIKit.UIBaselineAdjustment adjustment) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.SizeF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="System.String" RefType="this" />
          <Parameter Name="point" Type="System.Drawing.PointF" apistyle="classic" />
          <Parameter Name="width" Type="System.Single" apistyle="classic" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="fontSize" Type="System.Single" apistyle="classic" />
          <Parameter Name="breakMode" Type="MonoTouch.UIKit.UILineBreakMode" />
          <Parameter Name="adjustment" Type="MonoTouch.UIKit.UIBaselineAdjustment" />
          <Parameter Name="point" Type="MonoTouch.CoreGraphics.CGPoint" apistyle="unified" />
          <Parameter Name="width" Type="System.nfloat" apistyle="unified" />
          <Parameter Name="fontSize" Type="System.nfloat" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="point">To be added.</param>
          <param name="width">To be added.</param>
          <param name="font">To be added.</param>
          <param name="fontSize">To be added.</param>
          <param name="breakMode">To be added.</param>
          <param name="adjustment">To be added.</param>
          <summary>Draws the string, starting at the specified <param name="point" /> with a baseline <param name="adjustment" /> and extending <param name="width" />, using the <param name="font" />, with the specified line-breaking <param name="mode" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.DrawString(System.String,MonoTouch.CoreGraphics.CGPoint,System.nfloat,MonoTouch.UIKit.UIFont,System.nfloat,MonoTouch.UIKit.UILineBreakMode,MonoTouch.UIKit.UIBaselineAdjustment)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.String" />
      </Targets>
      <Member MemberName="DrawString">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF DrawString (this string This, System.Drawing.PointF point, float width, MonoTouch.UIKit.UIFont font, float minFontSize, ref float actualFontSize, MonoTouch.UIKit.UILineBreakMode breakMode, MonoTouch.UIKit.UIBaselineAdjustment adjustment);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF DrawString(string This, valuetype System.Drawing.PointF point, float32 width, class MonoTouch.UIKit.UIFont font, float32 minFontSize, float32 actualFontSize, valuetype MonoTouch.UIKit.UILineBreakMode breakMode, valuetype MonoTouch.UIKit.UIBaselineAdjustment adjustment) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGSize DrawString (this string This, MonoTouch.CoreGraphics.CGPoint point, nfloat width, MonoTouch.UIKit.UIFont font, nfloat minFontSize, ref nfloat actualFontSize, MonoTouch.UIKit.UILineBreakMode breakMode, MonoTouch.UIKit.UIBaselineAdjustment adjustment);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGSize DrawString(string This, valuetype MonoTouch.CoreGraphics.CGPoint point, valuetype System.nfloat width, class MonoTouch.UIKit.UIFont font, valuetype System.nfloat minFontSize, valuetype System.nfloat actualFontSize, valuetype MonoTouch.UIKit.UILineBreakMode breakMode, valuetype MonoTouch.UIKit.UIBaselineAdjustment adjustment) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.SizeF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="System.String" RefType="this" />
          <Parameter Name="point" Type="System.Drawing.PointF" apistyle="classic" />
          <Parameter Name="width" Type="System.Single" apistyle="classic" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="minFontSize" Type="System.Single" apistyle="classic" />
          <Parameter Name="actualFontSize" Type="System.Single&amp;" RefType="ref" apistyle="classic" />
          <Parameter Name="breakMode" Type="MonoTouch.UIKit.UILineBreakMode" />
          <Parameter Name="adjustment" Type="MonoTouch.UIKit.UIBaselineAdjustment" />
          <Parameter Name="point" Type="MonoTouch.CoreGraphics.CGPoint" apistyle="unified" />
          <Parameter Name="width" Type="System.nfloat" apistyle="unified" />
          <Parameter Name="minFontSize" Type="System.nfloat" apistyle="unified" />
          <Parameter Name="actualFontSize" Type="System.nfloat&amp;" RefType="ref" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="point">To be added.</param>
          <param name="width">To be added.</param>
          <param name="font">To be added.</param>
          <param name="minFontSize">To be added.</param>
          <param name="actualFontSize">To be added.</param>
          <param name="breakMode">To be added.</param>
          <param name="adjustment">To be added.</param>
          <summary>Draws the string, starting at the specified <param name="point" /> with a baseline <param name="adjustment" /> and extending <param name="width" />, using the <param name="font" /> in the size range (outputting <param name="actualFontSize" />), with the specified line-breaking <param name="mode" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.DrawString(System.String,MonoTouch.CoreGraphics.CGPoint,System.nfloat,MonoTouch.UIKit.UIFont,System.nfloat,System.nfloat@,MonoTouch.UIKit.UILineBreakMode,MonoTouch.UIKit.UIBaselineAdjustment)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.String" />
      </Targets>
      <Member MemberName="DrawString">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF DrawString (this string This, System.Drawing.RectangleF rect, MonoTouch.UIKit.UIFont font);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF DrawString(string This, valuetype System.Drawing.RectangleF rect, class MonoTouch.UIKit.UIFont font) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGSize DrawString (this string This, MonoTouch.CoreGraphics.CGRect rect, MonoTouch.UIKit.UIFont font);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGSize DrawString(string This, valuetype MonoTouch.CoreGraphics.CGRect rect, class MonoTouch.UIKit.UIFont font) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.SizeF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="System.String" RefType="this" />
          <Parameter Name="rect" Type="System.Drawing.RectangleF" apistyle="classic" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="rect">To be added.</param>
          <param name="font">To be added.</param>
          <summary>Draws the string in the specified <param name="rect" />, using the <param name="font" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.DrawString(System.String,MonoTouch.CoreGraphics.CGRect,MonoTouch.UIKit.UIFont)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.String" />
      </Targets>
      <Member MemberName="DrawString">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF DrawString (this string This, System.Drawing.RectangleF rect, MonoTouch.UIKit.UIFont font, MonoTouch.UIKit.UILineBreakMode mode);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF DrawString(string This, valuetype System.Drawing.RectangleF rect, class MonoTouch.UIKit.UIFont font, valuetype MonoTouch.UIKit.UILineBreakMode mode) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGSize DrawString (this string This, MonoTouch.CoreGraphics.CGRect rect, MonoTouch.UIKit.UIFont font, MonoTouch.UIKit.UILineBreakMode mode);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGSize DrawString(string This, valuetype MonoTouch.CoreGraphics.CGRect rect, class MonoTouch.UIKit.UIFont font, valuetype MonoTouch.UIKit.UILineBreakMode mode) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.SizeF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="System.String" RefType="this" />
          <Parameter Name="rect" Type="System.Drawing.RectangleF" apistyle="classic" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="mode" Type="MonoTouch.UIKit.UILineBreakMode" />
          <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="rect">To be added.</param>
          <param name="font">To be added.</param>
          <param name="mode">To be added.</param>
          <summary>Draws the string in the specified <param name="rect" />, using the <param name="font" />, with the specified line-breaking <param name="mode" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.DrawString(System.String,MonoTouch.CoreGraphics.CGRect,MonoTouch.UIKit.UIFont,MonoTouch.UIKit.UILineBreakMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.String" />
      </Targets>
      <Member MemberName="DrawString">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF DrawString (this string This, System.Drawing.RectangleF rect, MonoTouch.UIKit.UIFont font, MonoTouch.UIKit.UILineBreakMode mode, MonoTouch.UIKit.UITextAlignment alignment);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF DrawString(string This, valuetype System.Drawing.RectangleF rect, class MonoTouch.UIKit.UIFont font, valuetype MonoTouch.UIKit.UILineBreakMode mode, valuetype MonoTouch.UIKit.UITextAlignment alignment) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGSize DrawString (this string This, MonoTouch.CoreGraphics.CGRect rect, MonoTouch.UIKit.UIFont font, MonoTouch.UIKit.UILineBreakMode mode, MonoTouch.UIKit.UITextAlignment alignment);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGSize DrawString(string This, valuetype MonoTouch.CoreGraphics.CGRect rect, class MonoTouch.UIKit.UIFont font, valuetype MonoTouch.UIKit.UILineBreakMode mode, valuetype MonoTouch.UIKit.UITextAlignment alignment) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.SizeF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="System.String" RefType="this" />
          <Parameter Name="rect" Type="System.Drawing.RectangleF" apistyle="classic" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="mode" Type="MonoTouch.UIKit.UILineBreakMode" />
          <Parameter Name="alignment" Type="MonoTouch.UIKit.UITextAlignment" />
          <Parameter Name="rect" Type="MonoTouch.CoreGraphics.CGRect" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="rect">To be added.</param>
          <param name="font">To be added.</param>
          <param name="mode">To be added.</param>
          <param name="alignment">To be added.</param>
          <summary>Draws the string in the specified <param name="rect" />, using the <param name="font" />, with the specified <param name="alignment" /> and line-breaking <param name="mode" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.DrawString(System.String,MonoTouch.CoreGraphics.CGRect,MonoTouch.UIKit.UIFont,MonoTouch.UIKit.UILineBreakMode,MonoTouch.UIKit.UITextAlignment)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="StringSize">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF StringSize (this MonoTouch.Foundation.NSString This, MonoTouch.UIKit.UIFont font);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF StringSize(class MonoTouch.Foundation.NSString This, class MonoTouch.UIKit.UIFont font) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGSize StringSize (this MonoTouch.Foundation.NSString This, MonoTouch.UIKit.UIFont font);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGSize StringSize(class MonoTouch.Foundation.NSString This, class MonoTouch.UIKit.UIFont font) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.SizeF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="font">To be added.</param>
          <summary>The calculated size of the string if rendered with the <param name="font" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.StringSize(MonoTouch.Foundation.NSString,MonoTouch.UIKit.UIFont)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="StringSize">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF StringSize (this MonoTouch.Foundation.NSString This, MonoTouch.UIKit.UIFont font, System.Drawing.SizeF constrainedToSize);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF StringSize(class MonoTouch.Foundation.NSString This, class MonoTouch.UIKit.UIFont font, valuetype System.Drawing.SizeF constrainedToSize) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGSize StringSize (this MonoTouch.Foundation.NSString This, MonoTouch.UIKit.UIFont font, MonoTouch.CoreGraphics.CGSize constrainedToSize);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGSize StringSize(class MonoTouch.Foundation.NSString This, class MonoTouch.UIKit.UIFont font, valuetype MonoTouch.CoreGraphics.CGSize constrainedToSize) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.SizeF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="constrainedToSize" Type="System.Drawing.SizeF" apistyle="classic" />
          <Parameter Name="constrainedToSize" Type="MonoTouch.CoreGraphics.CGSize" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="font">To be added.</param>
          <param name="constrainedToSize">To be added.</param>
          <summary>The calculated size of the string if rendered with the <param name="font" /> or <param name="constrainedToSize" />, whichever is smaller.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.StringSize(MonoTouch.Foundation.NSString,MonoTouch.UIKit.UIFont,MonoTouch.CoreGraphics.CGSize)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="StringSize">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF StringSize (this MonoTouch.Foundation.NSString This, MonoTouch.UIKit.UIFont font, System.Drawing.SizeF constrainedToSize, MonoTouch.UIKit.UILineBreakMode lineBreakMode);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF StringSize(class MonoTouch.Foundation.NSString This, class MonoTouch.UIKit.UIFont font, valuetype System.Drawing.SizeF constrainedToSize, valuetype MonoTouch.UIKit.UILineBreakMode lineBreakMode) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGSize StringSize (this MonoTouch.Foundation.NSString This, MonoTouch.UIKit.UIFont font, MonoTouch.CoreGraphics.CGSize constrainedToSize, MonoTouch.UIKit.UILineBreakMode lineBreakMode);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGSize StringSize(class MonoTouch.Foundation.NSString This, class MonoTouch.UIKit.UIFont font, valuetype MonoTouch.CoreGraphics.CGSize constrainedToSize, valuetype MonoTouch.UIKit.UILineBreakMode lineBreakMode) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.SizeF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="constrainedToSize" Type="System.Drawing.SizeF" apistyle="classic" />
          <Parameter Name="lineBreakMode" Type="MonoTouch.UIKit.UILineBreakMode" />
          <Parameter Name="constrainedToSize" Type="MonoTouch.CoreGraphics.CGSize" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="font">To be added.</param>
          <param name="constrainedToSize">To be added.</param>
          <param name="lineBreakMode">To be added.</param>
          <summary>The smaller of <param name="constrainedToSize" /> or the size of the string rendered in <param name="font" /> with <param name="lineBreakMode" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.StringSize(MonoTouch.Foundation.NSString,MonoTouch.UIKit.UIFont,MonoTouch.CoreGraphics.CGSize,MonoTouch.UIKit.UILineBreakMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="StringSize">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF StringSize (this MonoTouch.Foundation.NSString This, MonoTouch.UIKit.UIFont font, float forWidth, MonoTouch.UIKit.UILineBreakMode breakMode);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF StringSize(class MonoTouch.Foundation.NSString This, class MonoTouch.UIKit.UIFont font, float32 forWidth, valuetype MonoTouch.UIKit.UILineBreakMode breakMode) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGSize StringSize (this MonoTouch.Foundation.NSString This, MonoTouch.UIKit.UIFont font, nfloat forWidth, MonoTouch.UIKit.UILineBreakMode breakMode);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGSize StringSize(class MonoTouch.Foundation.NSString This, class MonoTouch.UIKit.UIFont font, valuetype System.nfloat forWidth, valuetype MonoTouch.UIKit.UILineBreakMode breakMode) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.SizeF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="forWidth" Type="System.Single" apistyle="classic" />
          <Parameter Name="breakMode" Type="MonoTouch.UIKit.UILineBreakMode" />
          <Parameter Name="forWidth" Type="System.nfloat" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="font">To be added.</param>
          <param name="forWidth">To be added.</param>
          <param name="breakMode">To be added.</param>
          <summary>The size of the string rendered in <param name="font" />, if constrained to <param name="forWidth" /> and with <param name="breakMode" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.StringSize(MonoTouch.Foundation.NSString,MonoTouch.UIKit.UIFont,System.nfloat,MonoTouch.UIKit.UILineBreakMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="StringSize">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF StringSize (this MonoTouch.Foundation.NSString This, MonoTouch.UIKit.UIFont font, float minFontSize, ref float actualFontSize, float forWidth, MonoTouch.UIKit.UILineBreakMode lineBreakMode);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF StringSize(class MonoTouch.Foundation.NSString This, class MonoTouch.UIKit.UIFont font, float32 minFontSize, float32 actualFontSize, float32 forWidth, valuetype MonoTouch.UIKit.UILineBreakMode lineBreakMode) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGSize StringSize (this MonoTouch.Foundation.NSString This, MonoTouch.UIKit.UIFont font, nfloat minFontSize, ref nfloat actualFontSize, nfloat forWidth, MonoTouch.UIKit.UILineBreakMode lineBreakMode);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGSize StringSize(class MonoTouch.Foundation.NSString This, class MonoTouch.UIKit.UIFont font, valuetype System.nfloat minFontSize, valuetype System.nfloat actualFontSize, valuetype System.nfloat forWidth, valuetype MonoTouch.UIKit.UILineBreakMode lineBreakMode) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.SizeF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="minFontSize" Type="System.Single" apistyle="classic" />
          <Parameter Name="actualFontSize" Type="System.Single&amp;" RefType="ref" apistyle="classic" />
          <Parameter Name="forWidth" Type="System.Single" apistyle="classic" />
          <Parameter Name="lineBreakMode" Type="MonoTouch.UIKit.UILineBreakMode" />
          <Parameter Name="minFontSize" Type="System.nfloat" apistyle="unified" />
          <Parameter Name="actualFontSize" Type="System.nfloat&amp;" RefType="ref" apistyle="unified" />
          <Parameter Name="forWidth" Type="System.nfloat" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="font">To be added.</param>
          <param name="minFontSize">To be added.</param>
          <param name="actualFontSize">To be added.</param>
          <param name="forWidth">To be added.</param>
          <param name="lineBreakMode">To be added.</param>
          <summary>The calculated size of the string rendered with the <param name="font" /> in the specified size range, with <param name="lineBreakMode" /> and for width <param name="forWidth" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.StringSize(MonoTouch.Foundation.NSString,MonoTouch.UIKit.UIFont,System.nfloat,System.nfloat@,System.nfloat,MonoTouch.UIKit.UILineBreakMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.String" />
      </Targets>
      <Member MemberName="StringSize">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF StringSize (this string This, MonoTouch.UIKit.UIFont font);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF StringSize(string This, class MonoTouch.UIKit.UIFont font) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGSize StringSize (this string This, MonoTouch.UIKit.UIFont font);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGSize StringSize(string This, class MonoTouch.UIKit.UIFont font) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.SizeF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="System.String" RefType="this" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="font">To be added.</param>
          <summary>The calculated size of the string if rendered with the <param name="font" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.StringSize(System.String,MonoTouch.UIKit.UIFont)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.String" />
      </Targets>
      <Member MemberName="StringSize">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF StringSize (this string This, MonoTouch.UIKit.UIFont font, System.Drawing.SizeF constrainedToSize);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF StringSize(string This, class MonoTouch.UIKit.UIFont font, valuetype System.Drawing.SizeF constrainedToSize) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGSize StringSize (this string This, MonoTouch.UIKit.UIFont font, MonoTouch.CoreGraphics.CGSize constrainedToSize);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGSize StringSize(string This, class MonoTouch.UIKit.UIFont font, valuetype MonoTouch.CoreGraphics.CGSize constrainedToSize) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.SizeF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="System.String" RefType="this" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="constrainedToSize" Type="System.Drawing.SizeF" apistyle="classic" />
          <Parameter Name="constrainedToSize" Type="MonoTouch.CoreGraphics.CGSize" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="font">To be added.</param>
          <param name="constrainedToSize">To be added.</param>
          <summary>The calculated size of the string if rendered with the <param name="font" /> or <param name="constrainedToSize" />, whichever is smaller.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.StringSize(System.String,MonoTouch.UIKit.UIFont,MonoTouch.CoreGraphics.CGSize)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.String" />
      </Targets>
      <Member MemberName="StringSize">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF StringSize (this string This, MonoTouch.UIKit.UIFont font, System.Drawing.SizeF constrainedToSize, MonoTouch.UIKit.UILineBreakMode lineBreakMode);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF StringSize(string This, class MonoTouch.UIKit.UIFont font, valuetype System.Drawing.SizeF constrainedToSize, valuetype MonoTouch.UIKit.UILineBreakMode lineBreakMode) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGSize StringSize (this string This, MonoTouch.UIKit.UIFont font, MonoTouch.CoreGraphics.CGSize constrainedToSize, MonoTouch.UIKit.UILineBreakMode lineBreakMode);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGSize StringSize(string This, class MonoTouch.UIKit.UIFont font, valuetype MonoTouch.CoreGraphics.CGSize constrainedToSize, valuetype MonoTouch.UIKit.UILineBreakMode lineBreakMode) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.SizeF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="System.String" RefType="this" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="constrainedToSize" Type="System.Drawing.SizeF" apistyle="classic" />
          <Parameter Name="lineBreakMode" Type="MonoTouch.UIKit.UILineBreakMode" />
          <Parameter Name="constrainedToSize" Type="MonoTouch.CoreGraphics.CGSize" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="font">To be added.</param>
          <param name="constrainedToSize">To be added.</param>
          <param name="lineBreakMode">To be added.</param>
          <summary>The smaller of <param name="constrainedToSize" /> or the calculated size of the string rendered in <param name="font" /> with <param name="lineBreakMode" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.StringSize(System.String,MonoTouch.UIKit.UIFont,MonoTouch.CoreGraphics.CGSize,MonoTouch.UIKit.UILineBreakMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.String" />
      </Targets>
      <Member MemberName="StringSize">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF StringSize (this string This, MonoTouch.UIKit.UIFont font, float forWidth, MonoTouch.UIKit.UILineBreakMode breakMode);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF StringSize(string This, class MonoTouch.UIKit.UIFont font, float32 forWidth, valuetype MonoTouch.UIKit.UILineBreakMode breakMode) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGSize StringSize (this string This, MonoTouch.UIKit.UIFont font, nfloat forWidth, MonoTouch.UIKit.UILineBreakMode breakMode);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGSize StringSize(string This, class MonoTouch.UIKit.UIFont font, valuetype System.nfloat forWidth, valuetype MonoTouch.UIKit.UILineBreakMode breakMode) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.SizeF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="System.String" RefType="this" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="forWidth" Type="System.Single" apistyle="classic" />
          <Parameter Name="breakMode" Type="MonoTouch.UIKit.UILineBreakMode" />
          <Parameter Name="forWidth" Type="System.nfloat" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="font">To be added.</param>
          <param name="forWidth">To be added.</param>
          <param name="breakMode">To be added.</param>
          <summary>The size of the string rendered with <param name="font" /> and <param name="breakMode" />, for the width <param name="forWidth" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.StringSize(System.String,MonoTouch.UIKit.UIFont,System.nfloat,MonoTouch.UIKit.UILineBreakMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:System.String" />
      </Targets>
      <Member MemberName="StringSize">
        <MemberSignature Language="C#" Value="public static System.Drawing.SizeF StringSize (this string This, MonoTouch.UIKit.UIFont font, float minFontSize, ref float actualFontSize, float forWidth, MonoTouch.UIKit.UILineBreakMode lineBreakMode);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF StringSize(string This, class MonoTouch.UIKit.UIFont font, float32 minFontSize, float32 actualFontSize, float32 forWidth, valuetype MonoTouch.UIKit.UILineBreakMode lineBreakMode) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGSize StringSize (this string This, MonoTouch.UIKit.UIFont font, nfloat minFontSize, ref nfloat actualFontSize, nfloat forWidth, MonoTouch.UIKit.UILineBreakMode lineBreakMode);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGSize StringSize(string This, class MonoTouch.UIKit.UIFont font, valuetype System.nfloat minFontSize, valuetype System.nfloat actualFontSize, valuetype System.nfloat forWidth, valuetype MonoTouch.UIKit.UILineBreakMode lineBreakMode) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.SizeF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGSize</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="System.String" RefType="this" />
          <Parameter Name="font" Type="MonoTouch.UIKit.UIFont" />
          <Parameter Name="minFontSize" Type="System.Single" apistyle="classic" />
          <Parameter Name="actualFontSize" Type="System.Single&amp;" RefType="ref" apistyle="classic" />
          <Parameter Name="forWidth" Type="System.Single" apistyle="classic" />
          <Parameter Name="lineBreakMode" Type="MonoTouch.UIKit.UILineBreakMode" />
          <Parameter Name="minFontSize" Type="System.nfloat" apistyle="unified" />
          <Parameter Name="actualFontSize" Type="System.nfloat&amp;" RefType="ref" apistyle="unified" />
          <Parameter Name="forWidth" Type="System.nfloat" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="font">To be added.</param>
          <param name="minFontSize">To be added.</param>
          <param name="actualFontSize">To be added.</param>
          <param name="forWidth">To be added.</param>
          <param name="lineBreakMode">To be added.</param>
          <summary>The calculated size of the string rendered with the <param name="font" /> in the specified size range (outputting <param name="actualFontSize" />), with <param name="lineBreakMode" /> and for width <param name="forWidth" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIStringDrawing" Member="M:MonoTouch.UIKit.UIStringDrawing.StringSize(System.String,MonoTouch.UIKit.UIFont,System.nfloat,System.nfloat@,System.nfloat,MonoTouch.UIKit.UILineBreakMode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITabBarControllerDelegate" />
      </Targets>
      <Member MemberName="FinishedCustomizingViewControllers">
        <MemberSignature Language="C#" Value="public static void FinishedCustomizingViewControllers (this MonoTouch.UIKit.IUITabBarControllerDelegate This, MonoTouch.UIKit.UITabBarController tabBarController, MonoTouch.UIKit.UIViewController[] viewControllers, bool changed);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FinishedCustomizingViewControllers(class MonoTouch.UIKit.IUITabBarControllerDelegate This, class MonoTouch.UIKit.UITabBarController tabBarController, class MonoTouch.UIKit.UIViewController[] viewControllers, bool changed) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITabBarControllerDelegate" RefType="this" />
          <Parameter Name="tabBarController" Type="MonoTouch.UIKit.UITabBarController" />
          <Parameter Name="viewControllers" Type="MonoTouch.UIKit.UIViewController[]" />
          <Parameter Name="changed" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tabBarController">To be added.</param>
          <param name="viewControllers">To be added.</param>
          <param name="changed">To be added.</param>
          <summary>Indicates that the customization sheet was dismissed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITabBarControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UITabBarControllerDelegate_Extensions.FinishedCustomizingViewControllers(MonoTouch.UIKit.IUITabBarControllerDelegate,MonoTouch.UIKit.UITabBarController,MonoTouch.UIKit.UIViewController[],System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITabBarControllerDelegate" />
      </Targets>
      <Member MemberName="GetAnimationControllerForTransition">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning GetAnimationControllerForTransition (this MonoTouch.UIKit.IUITabBarControllerDelegate This, MonoTouch.UIKit.UITabBarController tabBarController, MonoTouch.UIKit.UIViewController fromViewController, MonoTouch.UIKit.UIViewController toViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning GetAnimationControllerForTransition(class MonoTouch.UIKit.IUITabBarControllerDelegate This, class MonoTouch.UIKit.UITabBarController tabBarController, class MonoTouch.UIKit.UIViewController fromViewController, class MonoTouch.UIKit.UIViewController toViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITabBarControllerDelegate" RefType="this" />
          <Parameter Name="tabBarController" Type="MonoTouch.UIKit.UITabBarController" />
          <Parameter Name="fromViewController" Type="MonoTouch.UIKit.UIViewController" />
          <Parameter Name="toViewController" Type="MonoTouch.UIKit.UIViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tabBarController">To be added.</param>
          <param name="fromViewController">To be added.</param>
          <param name="toViewController">To be added.</param>
          <summary>Retrieves the UIViewControllerAnimatedTransitioning used during a non-interactive transition.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITabBarControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UITabBarControllerDelegate_Extensions.GetAnimationControllerForTransition(MonoTouch.UIKit.IUITabBarControllerDelegate,MonoTouch.UIKit.UITabBarController,MonoTouch.UIKit.UIViewController,MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITabBarControllerDelegate" />
      </Targets>
      <Member MemberName="GetInteractionControllerForAnimationController">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning GetInteractionControllerForAnimationController (this MonoTouch.UIKit.IUITabBarControllerDelegate This, MonoTouch.UIKit.UITabBarController tabBarController, MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning animationController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning GetInteractionControllerForAnimationController(class MonoTouch.UIKit.IUITabBarControllerDelegate This, class MonoTouch.UIKit.UITabBarController tabBarController, class MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning animationController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITabBarControllerDelegate" RefType="this" />
          <Parameter Name="tabBarController" Type="MonoTouch.UIKit.UITabBarController" />
          <Parameter Name="animationController" Type="MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tabBarController">To be added.</param>
          <param name="animationController">To be added.</param>
          <summary>Retrieves the UIViewControllerInteractiveTransitioning used during an interactive transition.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITabBarControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UITabBarControllerDelegate_Extensions.GetInteractionControllerForAnimationController(MonoTouch.UIKit.IUITabBarControllerDelegate,MonoTouch.UIKit.UITabBarController,MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITabBarControllerDelegate" />
      </Targets>
      <Member MemberName="GetPreferredInterfaceOrientation">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIInterfaceOrientation GetPreferredInterfaceOrientation (this MonoTouch.UIKit.IUITabBarControllerDelegate This, MonoTouch.UIKit.UITabBarController tabBarController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.UIKit.UIInterfaceOrientation GetPreferredInterfaceOrientation(class MonoTouch.UIKit.IUITabBarControllerDelegate This, class MonoTouch.UIKit.UITabBarController tabBarController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIInterfaceOrientation</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITabBarControllerDelegate" RefType="this" />
          <Parameter Name="tabBarController" Type="MonoTouch.UIKit.UITabBarController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tabBarController">To be added.</param>
          <summary>The preferred orientation for presentation of the tab bar controller.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITabBarControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UITabBarControllerDelegate_Extensions.GetPreferredInterfaceOrientation(MonoTouch.UIKit.IUITabBarControllerDelegate,MonoTouch.UIKit.UITabBarController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITabBarControllerDelegate" />
      </Targets>
      <Member MemberName="OnCustomizingViewControllers">
        <MemberSignature Language="C#" Value="public static void OnCustomizingViewControllers (this MonoTouch.UIKit.IUITabBarControllerDelegate This, MonoTouch.UIKit.UITabBarController tabBarController, MonoTouch.UIKit.UIViewController[] viewControllers);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OnCustomizingViewControllers(class MonoTouch.UIKit.IUITabBarControllerDelegate This, class MonoTouch.UIKit.UITabBarController tabBarController, class MonoTouch.UIKit.UIViewController[] viewControllers) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITabBarControllerDelegate" RefType="this" />
          <Parameter Name="tabBarController" Type="MonoTouch.UIKit.UITabBarController" />
          <Parameter Name="viewControllers" Type="MonoTouch.UIKit.UIViewController[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tabBarController">To be added.</param>
          <param name="viewControllers">To be added.</param>
          <summary>Indicates that the tab bar customization sheet is about to be displayed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITabBarControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UITabBarControllerDelegate_Extensions.OnCustomizingViewControllers(MonoTouch.UIKit.IUITabBarControllerDelegate,MonoTouch.UIKit.UITabBarController,MonoTouch.UIKit.UIViewController[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITabBarControllerDelegate" />
      </Targets>
      <Member MemberName="OnEndCustomizingViewControllers">
        <MemberSignature Language="C#" Value="public static void OnEndCustomizingViewControllers (this MonoTouch.UIKit.IUITabBarControllerDelegate This, MonoTouch.UIKit.UITabBarController tabBarController, MonoTouch.UIKit.UIViewController[] viewControllers, bool changed);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OnEndCustomizingViewControllers(class MonoTouch.UIKit.IUITabBarControllerDelegate This, class MonoTouch.UIKit.UITabBarController tabBarController, class MonoTouch.UIKit.UIViewController[] viewControllers, bool changed) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITabBarControllerDelegate" RefType="this" />
          <Parameter Name="tabBarController" Type="MonoTouch.UIKit.UITabBarController" />
          <Parameter Name="viewControllers" Type="MonoTouch.UIKit.UIViewController[]" />
          <Parameter Name="changed" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tabBarController">To be added.</param>
          <param name="viewControllers">To be added.</param>
          <param name="changed">To be added.</param>
          <summary>Indicates that the tab bar customization sheet is about to be dismissed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITabBarControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UITabBarControllerDelegate_Extensions.OnEndCustomizingViewControllers(MonoTouch.UIKit.IUITabBarControllerDelegate,MonoTouch.UIKit.UITabBarController,MonoTouch.UIKit.UIViewController[],System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITabBarControllerDelegate" />
      </Targets>
      <Member MemberName="ShouldSelectViewController">
        <MemberSignature Language="C#" Value="public static bool ShouldSelectViewController (this MonoTouch.UIKit.IUITabBarControllerDelegate This, MonoTouch.UIKit.UITabBarController tabBarController, MonoTouch.UIKit.UIViewController viewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldSelectViewController(class MonoTouch.UIKit.IUITabBarControllerDelegate This, class MonoTouch.UIKit.UITabBarController tabBarController, class MonoTouch.UIKit.UIViewController viewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITabBarControllerDelegate" RefType="this" />
          <Parameter Name="tabBarController" Type="MonoTouch.UIKit.UITabBarController" />
          <Parameter Name="viewController" Type="MonoTouch.UIKit.UIViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tabBarController">To be added.</param>
          <param name="viewController">To be added.</param>
          <summary>Whether the specified UIViewController should be made active.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITabBarControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UITabBarControllerDelegate_Extensions.ShouldSelectViewController(MonoTouch.UIKit.IUITabBarControllerDelegate,MonoTouch.UIKit.UITabBarController,MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITabBarControllerDelegate" />
      </Targets>
      <Member MemberName="SupportedInterfaceOrientations">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIInterfaceOrientationMask SupportedInterfaceOrientations (this MonoTouch.UIKit.IUITabBarControllerDelegate This, MonoTouch.UIKit.UITabBarController tabBarController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.UIKit.UIInterfaceOrientationMask SupportedInterfaceOrientations(class MonoTouch.UIKit.IUITabBarControllerDelegate This, class MonoTouch.UIKit.UITabBarController tabBarController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIInterfaceOrientationMask</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITabBarControllerDelegate" RefType="this" />
          <Parameter Name="tabBarController" Type="MonoTouch.UIKit.UITabBarController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tabBarController">To be added.</param>
          <summary>The supported orientations for presentation of the tab bar controller.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITabBarControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UITabBarControllerDelegate_Extensions.SupportedInterfaceOrientations(MonoTouch.UIKit.IUITabBarControllerDelegate,MonoTouch.UIKit.UITabBarController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITabBarControllerDelegate" />
      </Targets>
      <Member MemberName="ViewControllerSelected">
        <MemberSignature Language="C#" Value="public static void ViewControllerSelected (this MonoTouch.UIKit.IUITabBarControllerDelegate This, MonoTouch.UIKit.UITabBarController tabBarController, MonoTouch.UIKit.UIViewController viewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ViewControllerSelected(class MonoTouch.UIKit.IUITabBarControllerDelegate This, class MonoTouch.UIKit.UITabBarController tabBarController, class MonoTouch.UIKit.UIViewController viewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITabBarControllerDelegate" RefType="this" />
          <Parameter Name="tabBarController" Type="MonoTouch.UIKit.UITabBarController" />
          <Parameter Name="viewController" Type="MonoTouch.UIKit.UIViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tabBarController">To be added.</param>
          <param name="viewController">To be added.</param>
          <summary>Indicates that the app user selected an item from the tab bar.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITabBarControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UITabBarControllerDelegate_Extensions.ViewControllerSelected(MonoTouch.UIKit.IUITabBarControllerDelegate,MonoTouch.UIKit.UITabBarController,MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITabBarDelegate" />
      </Targets>
      <Member MemberName="DidBeginCustomizingItems">
        <MemberSignature Language="C#" Value="public static void DidBeginCustomizingItems (this MonoTouch.UIKit.IUITabBarDelegate This, MonoTouch.UIKit.UITabBar tabbar, MonoTouch.UIKit.UITabBarItem[] items);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidBeginCustomizingItems(class MonoTouch.UIKit.IUITabBarDelegate This, class MonoTouch.UIKit.UITabBar tabbar, class MonoTouch.UIKit.UITabBarItem[] items) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITabBarDelegate" RefType="this" />
          <Parameter Name="tabbar" Type="MonoTouch.UIKit.UITabBar" />
          <Parameter Name="items" Type="MonoTouch.UIKit.UITabBarItem[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tabbar">To be added.</param>
          <param name="items">To be added.</param>
          <summary>Indicates that customizing the specified UITabBarItems has begun.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITabBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UITabBarDelegate_Extensions.DidBeginCustomizingItems(MonoTouch.UIKit.IUITabBarDelegate,MonoTouch.UIKit.UITabBar,MonoTouch.UIKit.UITabBarItem[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITabBarDelegate" />
      </Targets>
      <Member MemberName="DidEndCustomizingItems">
        <MemberSignature Language="C#" Value="public static void DidEndCustomizingItems (this MonoTouch.UIKit.IUITabBarDelegate This, MonoTouch.UIKit.UITabBar tabbar, MonoTouch.UIKit.UITabBarItem[] items, bool changed);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidEndCustomizingItems(class MonoTouch.UIKit.IUITabBarDelegate This, class MonoTouch.UIKit.UITabBar tabbar, class MonoTouch.UIKit.UITabBarItem[] items, bool changed) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITabBarDelegate" RefType="this" />
          <Parameter Name="tabbar" Type="MonoTouch.UIKit.UITabBar" />
          <Parameter Name="items" Type="MonoTouch.UIKit.UITabBarItem[]" />
          <Parameter Name="changed" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tabbar">To be added.</param>
          <param name="items">To be added.</param>
          <param name="changed">To be added.</param>
          <summary>Indicates that customization of the specified items has ended.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITabBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UITabBarDelegate_Extensions.DidEndCustomizingItems(MonoTouch.UIKit.IUITabBarDelegate,MonoTouch.UIKit.UITabBar,MonoTouch.UIKit.UITabBarItem[],System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITabBarDelegate" />
      </Targets>
      <Member MemberName="ItemSelected">
        <MemberSignature Language="C#" Value="public static void ItemSelected (this MonoTouch.UIKit.IUITabBarDelegate This, MonoTouch.UIKit.UITabBar tabbar, MonoTouch.UIKit.UITabBarItem item);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ItemSelected(class MonoTouch.UIKit.IUITabBarDelegate This, class MonoTouch.UIKit.UITabBar tabbar, class MonoTouch.UIKit.UITabBarItem item) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITabBarDelegate" RefType="this" />
          <Parameter Name="tabbar" Type="MonoTouch.UIKit.UITabBar" />
          <Parameter Name="item" Type="MonoTouch.UIKit.UITabBarItem" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tabbar">To be added.</param>
          <param name="item">To be added.</param>
          <summary>Indicates that the specified UITabBarItem was selected.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITabBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UITabBarDelegate_Extensions.ItemSelected(MonoTouch.UIKit.IUITabBarDelegate,MonoTouch.UIKit.UITabBar,MonoTouch.UIKit.UITabBarItem)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITabBarDelegate" />
      </Targets>
      <Member MemberName="WillBeginCustomizingItems">
        <MemberSignature Language="C#" Value="public static void WillBeginCustomizingItems (this MonoTouch.UIKit.IUITabBarDelegate This, MonoTouch.UIKit.UITabBar tabbar, MonoTouch.UIKit.UITabBarItem[] items);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillBeginCustomizingItems(class MonoTouch.UIKit.IUITabBarDelegate This, class MonoTouch.UIKit.UITabBar tabbar, class MonoTouch.UIKit.UITabBarItem[] items) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITabBarDelegate" RefType="this" />
          <Parameter Name="tabbar" Type="MonoTouch.UIKit.UITabBar" />
          <Parameter Name="items" Type="MonoTouch.UIKit.UITabBarItem[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tabbar">To be added.</param>
          <param name="items">To be added.</param>
          <summary>Indicates that customization is about to begin on the specified UITabBarItems.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITabBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UITabBarDelegate_Extensions.WillBeginCustomizingItems(MonoTouch.UIKit.IUITabBarDelegate,MonoTouch.UIKit.UITabBar,MonoTouch.UIKit.UITabBarItem[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITabBarDelegate" />
      </Targets>
      <Member MemberName="WillEndCustomizingItems">
        <MemberSignature Language="C#" Value="public static void WillEndCustomizingItems (this MonoTouch.UIKit.IUITabBarDelegate This, MonoTouch.UIKit.UITabBar tabbar, MonoTouch.UIKit.UITabBarItem[] items, bool changed);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillEndCustomizingItems(class MonoTouch.UIKit.IUITabBarDelegate This, class MonoTouch.UIKit.UITabBar tabbar, class MonoTouch.UIKit.UITabBarItem[] items, bool changed) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITabBarDelegate" RefType="this" />
          <Parameter Name="tabbar" Type="MonoTouch.UIKit.UITabBar" />
          <Parameter Name="items" Type="MonoTouch.UIKit.UITabBarItem[]" />
          <Parameter Name="changed" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tabbar">To be added.</param>
          <param name="items">To be added.</param>
          <param name="changed">To be added.</param>
          <summary>Indicates that customization is about to end on the specified UITabBarItems.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITabBarDelegate_Extensions" Member="M:MonoTouch.UIKit.UITabBarDelegate_Extensions.WillEndCustomizingItems(MonoTouch.UIKit.IUITabBarDelegate,MonoTouch.UIKit.UITabBar,MonoTouch.UIKit.UITabBarItem[],System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDataSource" />
      </Targets>
      <Member MemberName="CanEditRow">
        <MemberSignature Language="C#" Value="public static bool CanEditRow (this MonoTouch.UIKit.IUITableViewDataSource This, MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanEditRow(class MonoTouch.UIKit.IUITableViewDataSource This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDataSource" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view containing the row.</param>
          <param name="indexPath">Location of the row.</param>
          <summary>Whether the row located at  should be editable.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDataSource_Extensions" Member="M:MonoTouch.UIKit.UITableViewDataSource_Extensions.CanEditRow(MonoTouch.UIKit.IUITableViewDataSource,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDataSource" />
      </Targets>
      <Member MemberName="CanMoveRow">
        <MemberSignature Language="C#" Value="public static bool CanMoveRow (this MonoTouch.UIKit.IUITableViewDataSource This, MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanMoveRow(class MonoTouch.UIKit.IUITableViewDataSource This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDataSource" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view containing the row.</param>
          <param name="indexPath">Location of the row.</param>
          <summary>Whether the row located at  can be moved to another location in the table view.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDataSource_Extensions" Member="M:MonoTouch.UIKit.UITableViewDataSource_Extensions.CanMoveRow(MonoTouch.UIKit.IUITableViewDataSource,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDataSource" />
      </Targets>
      <Member MemberName="CommitEditingStyle">
        <MemberSignature Language="C#" Value="public static void CommitEditingStyle (this MonoTouch.UIKit.IUITableViewDataSource This, MonoTouch.UIKit.UITableView tableView, MonoTouch.UIKit.UITableViewCellEditingStyle editingStyle, MonoTouch.Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CommitEditingStyle(class MonoTouch.UIKit.IUITableViewDataSource This, class MonoTouch.UIKit.UITableView tableView, valuetype MonoTouch.UIKit.UITableViewCellEditingStyle editingStyle, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDataSource" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="editingStyle" Type="MonoTouch.UIKit.UITableViewCellEditingStyle" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view requesting insertion or deletion.</param>
          <param name="editingStyle">Cell editing style requested for the row at , such as  or .</param>
          <param name="indexPath">Location of the row.</param>
          <summary>Commits the insertion or deletion of the specified row.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDataSource_Extensions" Member="M:MonoTouch.UIKit.UITableViewDataSource_Extensions.CommitEditingStyle(MonoTouch.UIKit.IUITableViewDataSource,MonoTouch.UIKit.UITableView,MonoTouch.UIKit.UITableViewCellEditingStyle,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDataSource" />
      </Targets>
      <Member MemberName="MoveRow">
        <MemberSignature Language="C#" Value="public static void MoveRow (this MonoTouch.UIKit.IUITableViewDataSource This, MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath sourceIndexPath, MonoTouch.Foundation.NSIndexPath destinationIndexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveRow(class MonoTouch.UIKit.IUITableViewDataSource This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath sourceIndexPath, class MonoTouch.Foundation.NSIndexPath destinationIndexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDataSource" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="sourceIndexPath" Type="MonoTouch.Foundation.NSIndexPath" />
          <Parameter Name="destinationIndexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view containing the row being moved.</param>
          <param name="sourceIndexPath">Location of the row to be moved.</param>
          <param name="destinationIndexPath">New location of the row.</param>
          <summary>Called when a row has been moved so that the data source can 'implement' the changed row position that has been performed in the user interface. This ensures the data is kept in-sync with what is being displayed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDataSource_Extensions" Member="M:MonoTouch.UIKit.UITableViewDataSource_Extensions.MoveRow(MonoTouch.UIKit.IUITableViewDataSource,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDataSource" />
      </Targets>
      <Member MemberName="NumberOfSections">
        <MemberSignature Language="C#" Value="public static int NumberOfSections (this MonoTouch.UIKit.IUITableViewDataSource This, MonoTouch.UIKit.UITableView tableView);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 NumberOfSections(class MonoTouch.UIKit.IUITableViewDataSource This, class MonoTouch.UIKit.UITableView tableView) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nint NumberOfSections (this MonoTouch.UIKit.IUITableViewDataSource This, MonoTouch.UIKit.UITableView tableView);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nint NumberOfSections(class MonoTouch.UIKit.IUITableViewDataSource This, class MonoTouch.UIKit.UITableView tableView) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Int32</ReturnType>
          <ReturnType apistyle="unified">System.nint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDataSource" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view displaying the sections.</param>
          <summary>Returns the number of sections that are required to display the data.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDataSource_Extensions" Member="M:MonoTouch.UIKit.UITableViewDataSource_Extensions.NumberOfSections(MonoTouch.UIKit.IUITableViewDataSource,MonoTouch.UIKit.UITableView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDataSource" />
      </Targets>
      <Member MemberName="SectionFor">
        <MemberSignature Language="C#" Value="public static int SectionFor (this MonoTouch.UIKit.IUITableViewDataSource This, MonoTouch.UIKit.UITableView tableView, string title, int atIndex);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SectionFor(class MonoTouch.UIKit.IUITableViewDataSource This, class MonoTouch.UIKit.UITableView tableView, string title, int32 atIndex) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nint SectionFor (this MonoTouch.UIKit.IUITableViewDataSource This, MonoTouch.UIKit.UITableView tableView, string title, nint atIndex);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nint SectionFor(class MonoTouch.UIKit.IUITableViewDataSource This, class MonoTouch.UIKit.UITableView tableView, string title, valuetype System.nint atIndex) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Int32</ReturnType>
          <ReturnType apistyle="unified">System.nint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDataSource" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="title" Type="System.String" />
          <Parameter Name="atIndex" Type="System.Int32" apistyle="classic" />
          <Parameter Name="atIndex" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view containing the section.</param>
          <param name="title">The title that's displayed in the table view's index.</param>
          <param name="atIndex">The index of the title in the array returned from the .</param>
          <summary>Returns the index of the section with the given  and .</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDataSource_Extensions" Member="M:MonoTouch.UIKit.UITableViewDataSource_Extensions.SectionFor(MonoTouch.UIKit.IUITableViewDataSource,MonoTouch.UIKit.UITableView,System.String,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDataSource" />
      </Targets>
      <Member MemberName="SectionIndexTitles">
        <MemberSignature Language="C#" Value="public static string[] SectionIndexTitles (this MonoTouch.UIKit.IUITableViewDataSource This, MonoTouch.UIKit.UITableView tableView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] SectionIndexTitles(class MonoTouch.UIKit.IUITableViewDataSource This, class MonoTouch.UIKit.UITableView tableView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDataSource" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view that is displaying the index.</param>
          <summary>Returns an array of titles to be displayed as an index on the table view.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDataSource_Extensions" Member="M:MonoTouch.UIKit.UITableViewDataSource_Extensions.SectionIndexTitles(MonoTouch.UIKit.IUITableViewDataSource,MonoTouch.UIKit.UITableView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDataSource" />
      </Targets>
      <Member MemberName="TitleForFooter">
        <MemberSignature Language="C#" Value="public static string TitleForFooter (this MonoTouch.UIKit.IUITableViewDataSource This, MonoTouch.UIKit.UITableView tableView, int section);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TitleForFooter(class MonoTouch.UIKit.IUITableViewDataSource This, class MonoTouch.UIKit.UITableView tableView, int32 section) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static string TitleForFooter (this MonoTouch.UIKit.IUITableViewDataSource This, MonoTouch.UIKit.UITableView tableView, nint section);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TitleForFooter(class MonoTouch.UIKit.IUITableViewDataSource This, class MonoTouch.UIKit.UITableView tableView, valuetype System.nint section) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDataSource" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="section" Type="System.Int32" apistyle="classic" />
          <Parameter Name="section" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view containing the section.</param>
          <param name="section">Index of the section displaying the footer.</param>
          <summary>Called to populate the footer for the specified section.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDataSource_Extensions" Member="M:MonoTouch.UIKit.UITableViewDataSource_Extensions.TitleForFooter(MonoTouch.UIKit.IUITableViewDataSource,MonoTouch.UIKit.UITableView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDataSource" />
      </Targets>
      <Member MemberName="TitleForHeader">
        <MemberSignature Language="C#" Value="public static string TitleForHeader (this MonoTouch.UIKit.IUITableViewDataSource This, MonoTouch.UIKit.UITableView tableView, int section);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TitleForHeader(class MonoTouch.UIKit.IUITableViewDataSource This, class MonoTouch.UIKit.UITableView tableView, int32 section) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static string TitleForHeader (this MonoTouch.UIKit.IUITableViewDataSource This, MonoTouch.UIKit.UITableView tableView, nint section);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TitleForHeader(class MonoTouch.UIKit.IUITableViewDataSource This, class MonoTouch.UIKit.UITableView tableView, valuetype System.nint section) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDataSource" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="section" Type="System.Int32" apistyle="classic" />
          <Parameter Name="section" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view containing the section.</param>
          <param name="section">Index of the section displaying the header.</param>
          <summary>Called to populate the header for the specified section.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDataSource_Extensions" Member="M:MonoTouch.UIKit.UITableViewDataSource_Extensions.TitleForHeader(MonoTouch.UIKit.IUITableViewDataSource,MonoTouch.UIKit.UITableView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDataSourcePrefetching" />
      </Targets>
      <Member MemberName="CancelPrefetching">
        <MemberSignature Language="C#" Value="public static void CancelPrefetching (this MonoTouch.UIKit.IUITableViewDataSourcePrefetching This, MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath[] indexPaths);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CancelPrefetching(class MonoTouch.UIKit.IUITableViewDataSourcePrefetching This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath[] indexPaths) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDataSourcePrefetching" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPaths" Type="MonoTouch.Foundation.NSIndexPath[]" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="tableView">To be added.</param>
          <param name="indexPaths">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDataSourcePrefetching_Extensions" Member="M:MonoTouch.UIKit.UITableViewDataSourcePrefetching_Extensions.CancelPrefetching(MonoTouch.UIKit.IUITableViewDataSourcePrefetching,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="AccessoryButtonTapped">
        <MemberSignature Language="C#" Value="public static void AccessoryButtonTapped (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AccessoryButtonTapped(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">The table view containing the row/cell accessory that has been tapped.</param>
          <param name="indexPath">The location of the row in the table view.</param>
          <summary>Indictes that the user has tapped the accessory / disclosure buttom at the specified indexPath.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.AccessoryButtonTapped(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="AccessoryForRow">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UITableViewCellAccessory AccessoryForRow (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.UIKit.UITableViewCellAccessory AccessoryForRow(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UITableViewCellAccessory</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view containing the rows.</param>
          <param name="indexPath">Location of the row.</param>
          <summary>The UITableViewCellAccessory for the specified indexPath.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.AccessoryForRow(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="CanFocusRow">
        <MemberSignature Language="C#" Value="public static bool CanFocusRow (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanFocusRow(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>Whether the row at the specified <paramref name="indexPath" /> may receive focus.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.CanFocusRow(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="CanPerformAction">
        <MemberSignature Language="C#" Value="public static bool CanPerformAction (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.ObjCRuntime.Selector action, MonoTouch.Foundation.NSIndexPath indexPath, MonoTouch.Foundation.NSObject sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanPerformAction(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.ObjCRuntime.Selector action, class MonoTouch.Foundation.NSIndexPath indexPath, class MonoTouch.Foundation.NSObject sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="action" Type="MonoTouch.ObjCRuntime.Selector" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view containing the row.</param>
          <param name="action">A selector identifying the Copy or Paste method (ie.  or ).</param>
          <param name="indexPath">Location of the row.</param>
          <param name="sender">Object that initially triggere the Copy or Paste.</param>
          <summary>Whether the cell at the specified indexPath can perform the specified Copy or Paste operation.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.CanPerformAction(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.ObjCRuntime.Selector,MonoTouch.Foundation.NSIndexPath,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="CellDisplayingEnded">
        <MemberSignature Language="C#" Value="public static void CellDisplayingEnded (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.UIKit.UITableViewCell cell, MonoTouch.Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CellDisplayingEnded(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.UIKit.UITableViewCell cell, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="cell" Type="MonoTouch.UIKit.UITableViewCell" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">The  being displayed.</param>
          <param name="cell">The  that has just been removed.</param>
          <param name="indexPath">The  specifying the .</param>
          <summary>Indicates that the cell has just been removed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.CellDisplayingEnded(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.UIKit.UITableViewCell,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="CustomizeMoveTarget">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSIndexPath CustomizeMoveTarget (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath sourceIndexPath, MonoTouch.Foundation.NSIndexPath proposedIndexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSIndexPath CustomizeMoveTarget(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath sourceIndexPath, class MonoTouch.Foundation.NSIndexPath proposedIndexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSIndexPath</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="sourceIndexPath" Type="MonoTouch.Foundation.NSIndexPath" />
          <Parameter Name="proposedIndexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view containing the row to be moved.</param>
          <param name="sourceIndexPath">The original location of the row being moved.</param>
          <param name="proposedIndexPath">The location in the table view where the row has been dropped. The location can be altered by this method.</param>
          <summary>Used to change a cell move destination, for example, to prevent dropping a cell in a certain position.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.CustomizeMoveTarget(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="DidEndEditing">
        <MemberSignature Language="C#" Value="public static void DidEndEditing (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidEndEditing(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view being edited.</param>
          <param name="indexPath">Location of the row.</param>
          <summary>Indicates that editing of the cell at the specified indexPath has finished.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.DidEndEditing(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="DidUpdateFocus">
        <MemberSignature Language="C#" Value="public static void DidUpdateFocus (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.UIKit.UITableViewFocusUpdateContext context, MonoTouch.UIKit.UIFocusAnimationCoordinator coordinator);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidUpdateFocus(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.UIKit.UITableViewFocusUpdateContext context, class MonoTouch.UIKit.UIFocusAnimationCoordinator coordinator) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="context" Type="MonoTouch.UIKit.UITableViewFocusUpdateContext" />
          <Parameter Name="coordinator" Type="MonoTouch.UIKit.UIFocusAnimationCoordinator" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">To be added.</param>
          <param name="context">A  object containing metadata.</param>
          <param name="coordinator">A  object containing metadata.</param>
          <summary>Indicates that the focus changed as detailed in the <paramref name="context" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.DidUpdateFocus(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.UIKit.UITableViewFocusUpdateContext,MonoTouch.UIKit.UIFocusAnimationCoordinator)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="EditActionsForRow">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UITableViewRowAction[] EditActionsForRow (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UITableViewRowAction[] EditActionsForRow(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UITableViewRowAction[]</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>Returns an array of row actions to display after the user swipes the row in the <paramref name="tableView" /> table view that is identified by <paramref name="indexPath" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.EditActionsForRow(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="EditingStyleForRow">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UITableViewCellEditingStyle EditingStyleForRow (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.UIKit.UITableViewCellEditingStyle EditingStyleForRow(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UITableViewCellEditingStyle</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view that is going to be editable.</param>
          <param name="indexPath">Location of the row.</param>
          <summary>The UITableViewCellEditingStyle for the specified indexPath.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.EditingStyleForRow(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="EstimatedHeight">
        <MemberSignature Language="C#" Value="public static float EstimatedHeight (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 EstimatedHeight(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nfloat EstimatedHeight (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat EstimatedHeight(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Single</ReturnType>
          <ReturnType apistyle="unified">System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">To be added.</param>
          <param name="indexPath">To be added.</param>
          <summary>An estimate of the height for the specified indexPath. Implementations should perform minimal calculation, as it is called repeatedly.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.EstimatedHeight(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="EstimatedHeightForFooter">
        <MemberSignature Language="C#" Value="public static float EstimatedHeightForFooter (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, int section);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 EstimatedHeightForFooter(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, int32 section) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nfloat EstimatedHeightForFooter (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, nint section);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat EstimatedHeightForFooter(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, valuetype System.nint section) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Single</ReturnType>
          <ReturnType apistyle="unified">System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="section" Type="System.Int32" apistyle="classic" />
          <Parameter Name="section" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">To be added.</param>
          <param name="section">To be added.</param>
          <summary>The estimated height of the footer of the specified section.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.EstimatedHeightForFooter(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="EstimatedHeightForHeader">
        <MemberSignature Language="C#" Value="public static float EstimatedHeightForHeader (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, int section);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 EstimatedHeightForHeader(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, int32 section) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nfloat EstimatedHeightForHeader (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, nint section);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat EstimatedHeightForHeader(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, valuetype System.nint section) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Single</ReturnType>
          <ReturnType apistyle="unified">System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="section" Type="System.Int32" apistyle="classic" />
          <Parameter Name="section" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">To be added.</param>
          <param name="section">To be added.</param>
          <summary>The estimated height of the header of the specified section.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.EstimatedHeightForHeader(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="FooterViewDisplayingEnded">
        <MemberSignature Language="C#" Value="public static void FooterViewDisplayingEnded (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.UIKit.UIView footerView, int section);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FooterViewDisplayingEnded(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.UIKit.UIView footerView, int32 section) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void FooterViewDisplayingEnded (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.UIKit.UIView footerView, nint section);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FooterViewDisplayingEnded(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.UIKit.UIView footerView, valuetype System.nint section) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="footerView" Type="MonoTouch.UIKit.UIView" />
          <Parameter Name="section" Type="System.Int32" apistyle="classic" />
          <Parameter Name="section" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table to which the footer view belongs.</param>
          <param name="footerView">The  being removed.</param>
          <param name="section">The index of the section to which the  belonged.</param>
          <summary>Indicates that the footerView of the specified section has been removed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.FooterViewDisplayingEnded(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.UIKit.UIView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="GetHeightForFooter">
        <MemberSignature Language="C#" Value="public static float GetHeightForFooter (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, int section);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 GetHeightForFooter(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, int32 section) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nfloat GetHeightForFooter (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, nint section);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat GetHeightForFooter(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, valuetype System.nint section) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Single</ReturnType>
          <ReturnType apistyle="unified">System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="section" Type="System.Int32" apistyle="classic" />
          <Parameter Name="section" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view.</param>
          <param name="section">Index of the section requiring a footer display.</param>
          <summary>The height of the footer for the specified section.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.GetHeightForFooter(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="GetHeightForHeader">
        <MemberSignature Language="C#" Value="public static float GetHeightForHeader (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, int section);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 GetHeightForHeader(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, int32 section) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nfloat GetHeightForHeader (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, nint section);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat GetHeightForHeader(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, valuetype System.nint section) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Single</ReturnType>
          <ReturnType apistyle="unified">System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="section" Type="System.Int32" apistyle="classic" />
          <Parameter Name="section" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view.</param>
          <param name="section">Index of the section requiring a header display.</param>
          <summary>The height of the header for the specified section.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.GetHeightForHeader(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="GetHeightForRow">
        <MemberSignature Language="C#" Value="public static float GetHeightForRow (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 GetHeightForRow(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nfloat GetHeightForRow (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat GetHeightForRow(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Single</ReturnType>
          <ReturnType apistyle="unified">System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view.</param>
          <param name="indexPath">Location of the row.</param>
          <summary>The height of the cell at the specified indexPath.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.GetHeightForRow(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="GetIndexPathForPreferredFocusedView">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSIndexPath GetIndexPathForPreferredFocusedView (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSIndexPath GetIndexPathForPreferredFocusedView(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSIndexPath</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">To be added.</param>
          <summary>The index path of the table's preferred focus view.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.GetIndexPathForPreferredFocusedView(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="GetViewForFooter">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIView GetViewForFooter (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, int section);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UIView GetViewForFooter(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, int32 section) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIView GetViewForFooter (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, nint section);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UIView GetViewForFooter(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, valuetype System.nint section) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIView</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="section" Type="System.Int32" apistyle="classic" />
          <Parameter Name="section" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view containing the section.</param>
          <param name="section">Section index where the footer will be added.</param>
          <summary>The view used for the footer of the specified section.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.GetViewForFooter(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="GetViewForHeader">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIView GetViewForHeader (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, int section);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UIView GetViewForHeader(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, int32 section) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIView GetViewForHeader (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, nint section);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UIView GetViewForHeader(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, valuetype System.nint section) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIView</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="section" Type="System.Int32" apistyle="classic" />
          <Parameter Name="section" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view containing the section.</param>
          <param name="section">Section index where the header will be added.</param>
          <summary>The view used for the header of the specified section.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.GetViewForHeader(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="HeaderViewDisplayingEnded">
        <MemberSignature Language="C#" Value="public static void HeaderViewDisplayingEnded (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.UIKit.UIView headerView, int section);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HeaderViewDisplayingEnded(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.UIKit.UIView headerView, int32 section) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void HeaderViewDisplayingEnded (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.UIKit.UIView headerView, nint section);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HeaderViewDisplayingEnded(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.UIKit.UIView headerView, valuetype System.nint section) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="headerView" Type="MonoTouch.UIKit.UIView" />
          <Parameter Name="section" Type="System.Int32" apistyle="classic" />
          <Parameter Name="section" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">The  to which the  belongs.</param>
          <param name="headerView">The  being removed.</param>
          <param name="section">An index indicating the section to which the  belongs.</param>
          <summary>Indicates that the header of the specified section has been removed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.HeaderViewDisplayingEnded(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.UIKit.UIView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="IndentationLevel">
        <MemberSignature Language="C#" Value="public static int IndentationLevel (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndentationLevel(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nint IndentationLevel (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nint IndentationLevel(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Int32</ReturnType>
          <ReturnType apistyle="unified">System.nint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view containing the row.</param>
          <param name="indexPath">Location of the row.</param>
          <summary>The indentation level for the cell at the specified indexPath.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.IndentationLevel(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="PerformAction">
        <MemberSignature Language="C#" Value="public static void PerformAction (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.ObjCRuntime.Selector action, MonoTouch.Foundation.NSIndexPath indexPath, MonoTouch.Foundation.NSObject sender);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformAction(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.ObjCRuntime.Selector action, class MonoTouch.Foundation.NSIndexPath indexPath, class MonoTouch.Foundation.NSObject sender) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="action" Type="MonoTouch.ObjCRuntime.Selector" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
          <Parameter Name="sender" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view containing the row.</param>
          <param name="action">A selector identifying the Copy or Paste method (ie.  or ).</param>
          <param name="indexPath">Location of the row where the copy or paste operation was selected.</param>
          <param name="sender">Object that triggered the copy or paste operation.</param>
          <summary>Performs the specified Copy or Paste action.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.PerformAction(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.ObjCRuntime.Selector,MonoTouch.Foundation.NSIndexPath,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="RowDeselected">
        <MemberSignature Language="C#" Value="public static void RowDeselected (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RowDeselected(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view containing the row.</param>
          <param name="indexPath">Location of the row that has become de-selected.</param>
          <summary>Indicates that the cell at the specified indexPath has been deselected.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.RowDeselected(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="RowHighlighted">
        <MemberSignature Language="C#" Value="public static void RowHighlighted (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath rowIndexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RowHighlighted(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath rowIndexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="rowIndexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">The  containing the row.</param>
          <param name="rowIndexPath">Location of the row being highlighted.</param>
          <summary>Indicates that the cell at the specified indexPath has been highlighted.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.RowHighlighted(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="RowSelected">
        <MemberSignature Language="C#" Value="public static void RowSelected (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RowSelected(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view containing the row.</param>
          <param name="indexPath">Location of the row that has become selected.</param>
          <summary>Indicates that the call at the specified indexPath has been selected.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.RowSelected(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="RowUnhighlighted">
        <MemberSignature Language="C#" Value="public static void RowUnhighlighted (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath rowIndexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RowUnhighlighted(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath rowIndexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="rowIndexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">The  containing the row.</param>
          <param name="rowIndexPath">The row being unhighlighted.</param>
          <summary>Indicates that the cell at the specified indexPath has been unhighlighted.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.RowUnhighlighted(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="ShouldHighlightRow">
        <MemberSignature Language="C#" Value="public static bool ShouldHighlightRow (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath rowIndexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldHighlightRow(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath rowIndexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="rowIndexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">The  in which the row is located.</param>
          <param name="rowIndexPath">The location of the row being highlighted.</param>
          <summary>Whether the cell at the specified indexPath should be highlighted.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.ShouldHighlightRow(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="ShouldIndentWhileEditing">
        <MemberSignature Language="C#" Value="public static bool ShouldIndentWhileEditing (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldIndentWhileEditing(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view that contains the row.</param>
          <param name="indexPath">Location of the row.</param>
          <summary>Whether the cell at the specified indexPath should be indented while it is being edited.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.ShouldIndentWhileEditing(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="ShouldShowMenu">
        <MemberSignature Language="C#" Value="public static bool ShouldShowMenu (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath rowAtindexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldShowMenu(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath rowAtindexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="rowAtindexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view containing the row.</param>
          <param name="rowAtindexPath">Location of the row that the user is selecting.</param>
          <summary>Whether the cell at the specified rowAtIndexPath should show an action menu.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.ShouldShowMenu(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="ShouldUpdateFocus">
        <MemberSignature Language="C#" Value="public static bool ShouldUpdateFocus (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.UIKit.UITableViewFocusUpdateContext context);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldUpdateFocus(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.UIKit.UITableViewFocusUpdateContext context) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="context" Type="MonoTouch.UIKit.UITableViewFocusUpdateContext" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">To be added.</param>
          <param name="context">To be added.</param>
          <summary>TCalled prior to the <paramref name="tableView" /> either losing or receiving focus. If either focus environment returns <see langword="false" />, the focus update is canceled.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.ShouldUpdateFocus(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.UIKit.UITableViewFocusUpdateContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="TitleForDeleteConfirmation">
        <MemberSignature Language="C#" Value="public static string TitleForDeleteConfirmation (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TitleForDeleteConfirmation(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view being edited.</param>
          <param name="indexPath">Location of the row that may be deleted.</param>
          <summary>When overridden, changes the default title of the delete confirmation button.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.TitleForDeleteConfirmation(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="WillBeginEditing">
        <MemberSignature Language="C#" Value="public static void WillBeginEditing (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillBeginEditing(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view about to be edited.</param>
          <param name="indexPath">Location of the row that has been swiped.</param>
          <summary>Indicates that the cell at the specified indexPath is about to be edited.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.WillBeginEditing(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="WillDeselectRow">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSIndexPath WillDeselectRow (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSIndexPath WillDeselectRow(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSIndexPath</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">The table involved.</param>
          <param name="indexPath">The index path of the row about to be de-selected.</param>
          <summary>Indicates that the cell at the specified indexPath is about to be deselected.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.WillDeselectRow(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="WillDisplay">
        <MemberSignature Language="C#" Value="public static void WillDisplay (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.UIKit.UITableViewCell cell, MonoTouch.Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillDisplay(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.UIKit.UITableViewCell cell, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="cell" Type="MonoTouch.UIKit.UITableViewCell" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view containing the row.</param>
          <param name="cell">Cell view that is going to be used to draw the row.</param>
          <param name="indexPath">Location of the row.</param>
          <summary>Indicates that the cell at the specified indexPath is about to be shown.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.WillDisplay(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.UIKit.UITableViewCell,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="WillDisplayFooterView">
        <MemberSignature Language="C#" Value="public static void WillDisplayFooterView (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.UIKit.UIView footerView, int section);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillDisplayFooterView(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.UIKit.UIView footerView, int32 section) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void WillDisplayFooterView (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.UIKit.UIView footerView, nint section);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillDisplayFooterView(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.UIKit.UIView footerView, valuetype System.nint section) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="footerView" Type="MonoTouch.UIKit.UIView" />
          <Parameter Name="section" Type="System.Int32" apistyle="classic" />
          <Parameter Name="section" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">The  involved.</param>
          <param name="footerView">The  that will be used as the footer view.</param>
          <param name="section">The table section to which the footer view belongs.</param>
          <summary>Indicates that the footer view for the specified section is about to be shown.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.WillDisplayFooterView(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.UIKit.UIView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="WillDisplayHeaderView">
        <MemberSignature Language="C#" Value="public static void WillDisplayHeaderView (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.UIKit.UIView headerView, int section);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillDisplayHeaderView(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.UIKit.UIView headerView, int32 section) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void WillDisplayHeaderView (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.UIKit.UIView headerView, nint section);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillDisplayHeaderView(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.UIKit.UIView headerView, valuetype System.nint section) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="headerView" Type="MonoTouch.UIKit.UIView" />
          <Parameter Name="section" Type="System.Int32" apistyle="classic" />
          <Parameter Name="section" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">The  involved.</param>
          <param name="headerView">The  that will be used as the header view.</param>
          <param name="section">The table section to which the header view belongs.</param>
          <summary>Indicates that the header view of the specified section is about to be shown.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.WillDisplayHeaderView(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.UIKit.UIView,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITableViewDelegate" />
      </Targets>
      <Member MemberName="WillSelectRow">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSIndexPath WillSelectRow (this MonoTouch.UIKit.IUITableViewDelegate This, MonoTouch.UIKit.UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSIndexPath WillSelectRow(class MonoTouch.UIKit.IUITableViewDelegate This, class MonoTouch.UIKit.UITableView tableView, class MonoTouch.Foundation.NSIndexPath indexPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSIndexPath</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITableViewDelegate" RefType="this" />
          <Parameter Name="tableView" Type="MonoTouch.UIKit.UITableView" />
          <Parameter Name="indexPath" Type="MonoTouch.Foundation.NSIndexPath" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="tableView">Table view containing the row.</param>
          <param name="indexPath">Location of the row about to be selected.</param>
          <summary>Indicates the the cell at the specified indexPath is about to be selected.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITableViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITableViewDelegate_Extensions.WillSelectRow(MonoTouch.UIKit.IUITableViewDelegate,MonoTouch.UIKit.UITableView,MonoTouch.Foundation.NSIndexPath)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextDocumentProxy" />
      </Targets>
      <Member MemberName="GetDocumentInputMode">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UITextInputMode GetDocumentInputMode (this MonoTouch.UIKit.IUITextDocumentProxy This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UITextInputMode GetDocumentInputMode(class MonoTouch.UIKit.IUITextDocumentProxy This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UITextInputMode</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextDocumentProxy" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextDocumentProxy_Extensions" Member="M:MonoTouch.UIKit.UITextDocumentProxy_Extensions.GetDocumentInputMode(MonoTouch.UIKit.IUITextDocumentProxy)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextFieldDelegate" />
      </Targets>
      <Member MemberName="EditingEnded">
        <MemberSignature Language="C#" Value="public static void EditingEnded (this MonoTouch.UIKit.IUITextFieldDelegate This, MonoTouch.UIKit.UITextField textField);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EditingEnded(class MonoTouch.UIKit.IUITextFieldDelegate This, class MonoTouch.UIKit.UITextField textField) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextFieldDelegate" RefType="this" />
          <Parameter Name="textField" Type="MonoTouch.UIKit.UITextField" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textField">To be added.</param>
          <summary>Indicates that editing has ended in the specified text field.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextFieldDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextFieldDelegate_Extensions.EditingEnded(MonoTouch.UIKit.IUITextFieldDelegate,MonoTouch.UIKit.UITextField)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextFieldDelegate" />
      </Targets>
      <Member MemberName="EditingStarted">
        <MemberSignature Language="C#" Value="public static void EditingStarted (this MonoTouch.UIKit.IUITextFieldDelegate This, MonoTouch.UIKit.UITextField textField);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EditingStarted(class MonoTouch.UIKit.IUITextFieldDelegate This, class MonoTouch.UIKit.UITextField textField) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextFieldDelegate" RefType="this" />
          <Parameter Name="textField" Type="MonoTouch.UIKit.UITextField" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textField">To be added.</param>
          <summary>Indicates that editing has begun on the specified text field.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextFieldDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextFieldDelegate_Extensions.EditingStarted(MonoTouch.UIKit.IUITextFieldDelegate,MonoTouch.UIKit.UITextField)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextFieldDelegate" />
      </Targets>
      <Member MemberName="ShouldBeginEditing">
        <MemberSignature Language="C#" Value="public static bool ShouldBeginEditing (this MonoTouch.UIKit.IUITextFieldDelegate This, MonoTouch.UIKit.UITextField textField);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldBeginEditing(class MonoTouch.UIKit.IUITextFieldDelegate This, class MonoTouch.UIKit.UITextField textField) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextFieldDelegate" RefType="this" />
          <Parameter Name="textField" Type="MonoTouch.UIKit.UITextField" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textField">To be added.</param>
          <summary>Whether editing should begin in the specified text field.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextFieldDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextFieldDelegate_Extensions.ShouldBeginEditing(MonoTouch.UIKit.IUITextFieldDelegate,MonoTouch.UIKit.UITextField)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextFieldDelegate" />
      </Targets>
      <Member MemberName="ShouldChangeCharacters">
        <MemberSignature Language="C#" Value="public static bool ShouldChangeCharacters (this MonoTouch.UIKit.IUITextFieldDelegate This, MonoTouch.UIKit.UITextField textField, MonoTouch.Foundation.NSRange range, string replacementString);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldChangeCharacters(class MonoTouch.UIKit.IUITextFieldDelegate This, class MonoTouch.UIKit.UITextField textField, valuetype MonoTouch.Foundation.NSRange range, string replacementString) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextFieldDelegate" RefType="this" />
          <Parameter Name="textField" Type="MonoTouch.UIKit.UITextField" />
          <Parameter Name="range" Type="MonoTouch.Foundation.NSRange" />
          <Parameter Name="replacementString" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textField">To be added.</param>
          <param name="range">To be added.</param>
          <param name="replacementString">To be added.</param>
          <summary>Whether the specified text should be changed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextFieldDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextFieldDelegate_Extensions.ShouldChangeCharacters(MonoTouch.UIKit.IUITextFieldDelegate,MonoTouch.UIKit.UITextField,MonoTouch.Foundation.NSRange,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextFieldDelegate" />
      </Targets>
      <Member MemberName="ShouldClear">
        <MemberSignature Language="C#" Value="public static bool ShouldClear (this MonoTouch.UIKit.IUITextFieldDelegate This, MonoTouch.UIKit.UITextField textField);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldClear(class MonoTouch.UIKit.IUITextFieldDelegate This, class MonoTouch.UIKit.UITextField textField) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextFieldDelegate" RefType="this" />
          <Parameter Name="textField" Type="MonoTouch.UIKit.UITextField" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textField">To be added.</param>
          <summary>Whether the specified text field's current contents should be removed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextFieldDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextFieldDelegate_Extensions.ShouldClear(MonoTouch.UIKit.IUITextFieldDelegate,MonoTouch.UIKit.UITextField)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextFieldDelegate" />
      </Targets>
      <Member MemberName="ShouldEndEditing">
        <MemberSignature Language="C#" Value="public static bool ShouldEndEditing (this MonoTouch.UIKit.IUITextFieldDelegate This, MonoTouch.UIKit.UITextField textField);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldEndEditing(class MonoTouch.UIKit.IUITextFieldDelegate This, class MonoTouch.UIKit.UITextField textField) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextFieldDelegate" RefType="this" />
          <Parameter Name="textField" Type="MonoTouch.UIKit.UITextField" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textField">To be added.</param>
          <summary>Whether editing should stop in the specified text field.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextFieldDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextFieldDelegate_Extensions.ShouldEndEditing(MonoTouch.UIKit.IUITextFieldDelegate,MonoTouch.UIKit.UITextField)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextFieldDelegate" />
      </Targets>
      <Member MemberName="ShouldReturn">
        <MemberSignature Language="C#" Value="public static bool ShouldReturn (this MonoTouch.UIKit.IUITextFieldDelegate This, MonoTouch.UIKit.UITextField textField);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldReturn(class MonoTouch.UIKit.IUITextFieldDelegate This, class MonoTouch.UIKit.UITextField textField) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextFieldDelegate" RefType="this" />
          <Parameter Name="textField" Type="MonoTouch.UIKit.UITextField" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textField">To be added.</param>
          <summary>Whether the text field should process the pressing of the return button.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextFieldDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextFieldDelegate_Extensions.ShouldReturn(MonoTouch.UIKit.IUITextFieldDelegate,MonoTouch.UIKit.UITextField)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInput" />
      </Targets>
      <Member MemberName="BeginFloatingCursor">
        <MemberSignature Language="C#" Value="public static void BeginFloatingCursor (this MonoTouch.UIKit.IUITextInput This, System.Drawing.PointF point);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BeginFloatingCursor(class MonoTouch.UIKit.IUITextInput This, valuetype System.Drawing.PointF point) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void BeginFloatingCursor (this MonoTouch.UIKit.IUITextInput This, MonoTouch.CoreGraphics.CGPoint point);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BeginFloatingCursor(class MonoTouch.UIKit.IUITextInput This, valuetype MonoTouch.CoreGraphics.CGPoint point) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInput" RefType="this" />
          <Parameter Name="point" Type="System.Drawing.PointF" apistyle="classic" />
          <Parameter Name="point" Type="MonoTouch.CoreGraphics.CGPoint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="point">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInput_Extensions" Member="M:MonoTouch.UIKit.UITextInput_Extensions.BeginFloatingCursor(MonoTouch.UIKit.IUITextInput,MonoTouch.CoreGraphics.CGPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInput" />
      </Targets>
      <Member MemberName="DictationRecognitionFailed">
        <MemberSignature Language="C#" Value="public static void DictationRecognitionFailed (this MonoTouch.UIKit.IUITextInput This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DictationRecognitionFailed(class MonoTouch.UIKit.IUITextInput This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInput" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>The recognition of dictation failed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInput_Extensions" Member="M:MonoTouch.UIKit.UITextInput_Extensions.DictationRecognitionFailed(MonoTouch.UIKit.IUITextInput)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInput" />
      </Targets>
      <Member MemberName="DictationRecordingDidEnd">
        <MemberSignature Language="C#" Value="public static void DictationRecordingDidEnd (this MonoTouch.UIKit.IUITextInput This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DictationRecordingDidEnd(class MonoTouch.UIKit.IUITextInput This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInput" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>The recording of dictation ended.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInput_Extensions" Member="M:MonoTouch.UIKit.UITextInput_Extensions.DictationRecordingDidEnd(MonoTouch.UIKit.IUITextInput)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInput" />
      </Targets>
      <Member MemberName="EndFloatingCursor">
        <MemberSignature Language="C#" Value="public static void EndFloatingCursor (this MonoTouch.UIKit.IUITextInput This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndFloatingCursor(class MonoTouch.UIKit.IUITextInput This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInput" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInput_Extensions" Member="M:MonoTouch.UIKit.UITextInput_Extensions.EndFloatingCursor(MonoTouch.UIKit.IUITextInput)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInput" />
      </Targets>
      <Member MemberName="GetCharacterOffsetOfPosition">
        <MemberSignature Language="C#" Value="public static int GetCharacterOffsetOfPosition (this MonoTouch.UIKit.IUITextInput This, MonoTouch.UIKit.UITextPosition position, MonoTouch.UIKit.UITextRange range);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetCharacterOffsetOfPosition(class MonoTouch.UIKit.IUITextInput This, class MonoTouch.UIKit.UITextPosition position, class MonoTouch.UIKit.UITextRange range) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nint GetCharacterOffsetOfPosition (this MonoTouch.UIKit.IUITextInput This, MonoTouch.UIKit.UITextPosition position, MonoTouch.UIKit.UITextRange range);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nint GetCharacterOffsetOfPosition(class MonoTouch.UIKit.IUITextInput This, class MonoTouch.UIKit.UITextPosition position, class MonoTouch.UIKit.UITextRange range) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Int32</ReturnType>
          <ReturnType apistyle="unified">System.nint</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInput" RefType="this" />
          <Parameter Name="position" Type="MonoTouch.UIKit.UITextPosition" />
          <Parameter Name="range" Type="MonoTouch.UIKit.UITextRange" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="position">To be added.</param>
          <param name="range">To be added.</param>
          <summary>Calculates and returns the offset into <paramref name="range" /> of the character that is in <paramref name="position" /> in the document.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInput_Extensions" Member="M:MonoTouch.UIKit.UITextInput_Extensions.GetCharacterOffsetOfPosition(MonoTouch.UIKit.IUITextInput,MonoTouch.UIKit.UITextPosition,MonoTouch.UIKit.UITextRange)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInput" />
      </Targets>
      <Member MemberName="GetFrameForDictationResultPlaceholder">
        <MemberSignature Language="C#" Value="public static System.Drawing.RectangleF GetFrameForDictationResultPlaceholder (this MonoTouch.UIKit.IUITextInput This, MonoTouch.Foundation.NSObject placeholder);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.RectangleF GetFrameForDictationResultPlaceholder(class MonoTouch.UIKit.IUITextInput This, class MonoTouch.Foundation.NSObject placeholder) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGRect GetFrameForDictationResultPlaceholder (this MonoTouch.UIKit.IUITextInput This, MonoTouch.Foundation.NSObject placeholder);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGRect GetFrameForDictationResultPlaceholder(class MonoTouch.UIKit.IUITextInput This, class MonoTouch.Foundation.NSObject placeholder) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.RectangleF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInput" RefType="this" />
          <Parameter Name="placeholder" Type="MonoTouch.Foundation.NSObject" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="placeholder">To be added.</param>
          <summary>Returns the rectangle in which to display the animated dictation result placeholder.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInput_Extensions" Member="M:MonoTouch.UIKit.UITextInput_Extensions.GetFrameForDictationResultPlaceholder(MonoTouch.UIKit.IUITextInput,MonoTouch.Foundation.NSObject)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInput" />
      </Targets>
      <Member MemberName="GetPosition">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UITextPosition GetPosition (this MonoTouch.UIKit.IUITextInput This, MonoTouch.UIKit.UITextRange withinRange, int atCharacterOffset);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UITextPosition GetPosition(class MonoTouch.UIKit.IUITextInput This, class MonoTouch.UIKit.UITextRange withinRange, int32 atCharacterOffset) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UITextPosition GetPosition (this MonoTouch.UIKit.IUITextInput This, MonoTouch.UIKit.UITextRange withinRange, nint atCharacterOffset);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UITextPosition GetPosition(class MonoTouch.UIKit.IUITextInput This, class MonoTouch.UIKit.UITextRange withinRange, valuetype System.nint atCharacterOffset) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UITextPosition</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInput" RefType="this" />
          <Parameter Name="withinRange" Type="MonoTouch.UIKit.UITextRange" />
          <Parameter Name="atCharacterOffset" Type="System.Int32" apistyle="classic" />
          <Parameter Name="atCharacterOffset" Type="System.nint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="withinRange">To be added.</param>
          <param name="atCharacterOffset">To be added.</param>
          <summary>Calculates and returns the absolute position in the document that is <paramref name="atCharacterOffset" /> characters into <paramref name="withinRange" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInput_Extensions" Member="M:MonoTouch.UIKit.UITextInput_Extensions.GetPosition(MonoTouch.UIKit.IUITextInput,MonoTouch.UIKit.UITextRange,System.nint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInput" />
      </Targets>
      <Member MemberName="GetSelectionAffinity">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UITextStorageDirection GetSelectionAffinity (this MonoTouch.UIKit.IUITextInput This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.UIKit.UITextStorageDirection GetSelectionAffinity(class MonoTouch.UIKit.IUITextInput This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UITextStorageDirection</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInput" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInput_Extensions" Member="M:MonoTouch.UIKit.UITextInput_Extensions.GetSelectionAffinity(MonoTouch.UIKit.IUITextInput)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInput" />
      </Targets>
      <Member MemberName="GetTextInputView">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIView GetTextInputView (this MonoTouch.UIKit.IUITextInput This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UIView GetTextInputView(class MonoTouch.UIKit.IUITextInput This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIView</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInput" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the input view that provides the coordinate system for geometric operations within the text input.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInput_Extensions" Member="M:MonoTouch.UIKit.UITextInput_Extensions.GetTextInputView(MonoTouch.UIKit.IUITextInput)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInput" />
      </Targets>
      <Member MemberName="GetTextStyling">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSDictionary GetTextStyling (this MonoTouch.UIKit.IUITextInput This, MonoTouch.UIKit.UITextPosition atPosition, MonoTouch.UIKit.UITextStorageDirection inDirection);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSDictionary GetTextStyling(class MonoTouch.UIKit.IUITextInput This, class MonoTouch.UIKit.UITextPosition atPosition, valuetype MonoTouch.UIKit.UITextStorageDirection inDirection) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSDictionary</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInput" RefType="this" />
          <Parameter Name="atPosition" Type="MonoTouch.UIKit.UITextPosition" />
          <Parameter Name="inDirection" Type="MonoTouch.UIKit.UITextStorageDirection" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="atPosition">To be added.</param>
          <param name="inDirection">To be added.</param>
          <summary>Returns a dictionary of style properties for text at the <paramref name="atPosition" /> position.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInput_Extensions" Member="M:MonoTouch.UIKit.UITextInput_Extensions.GetTextStyling(MonoTouch.UIKit.IUITextInput,MonoTouch.UIKit.UITextPosition,MonoTouch.UIKit.UITextStorageDirection)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInput" />
      </Targets>
      <Member MemberName="InsertDictationResult">
        <MemberSignature Language="C#" Value="public static void InsertDictationResult (this MonoTouch.UIKit.IUITextInput This, MonoTouch.Foundation.NSArray dictationResult);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InsertDictationResult(class MonoTouch.UIKit.IUITextInput This, class MonoTouch.Foundation.NSArray dictationResult) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInput" RefType="this" />
          <Parameter Name="dictationResult" Type="MonoTouch.Foundation.NSArray" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="dictationResult">To be added.</param>
          <summary>Inserts a dictation result at the current position.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInput_Extensions" Member="M:MonoTouch.UIKit.UITextInput_Extensions.InsertDictationResult(MonoTouch.UIKit.IUITextInput,MonoTouch.Foundation.NSArray)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInput" />
      </Targets>
      <Member MemberName="InsertDictationResultPlaceholder">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSObject InsertDictationResultPlaceholder (this MonoTouch.UIKit.IUITextInput This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSObject InsertDictationResultPlaceholder(class MonoTouch.UIKit.IUITextInput This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSObject</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInput" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the placeholder object to use before dictation results are finished being generated.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInput_Extensions" Member="M:MonoTouch.UIKit.UITextInput_Extensions.InsertDictationResultPlaceholder(MonoTouch.UIKit.IUITextInput)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInput" />
      </Targets>
      <Member MemberName="RemoveDictationResultPlaceholder">
        <MemberSignature Language="C#" Value="public static void RemoveDictationResultPlaceholder (this MonoTouch.UIKit.IUITextInput This, MonoTouch.Foundation.NSObject placeholder, bool willInsertResult);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveDictationResultPlaceholder(class MonoTouch.UIKit.IUITextInput This, class MonoTouch.Foundation.NSObject placeholder, bool willInsertResult) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInput" RefType="this" />
          <Parameter Name="placeholder" Type="MonoTouch.Foundation.NSObject" />
          <Parameter Name="willInsertResult" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="placeholder">To be added.</param>
          <param name="willInsertResult">To be added.</param>
          <summary>The <paramref name="placeholder" /> is no longer needed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInput_Extensions" Member="M:MonoTouch.UIKit.UITextInput_Extensions.RemoveDictationResultPlaceholder(MonoTouch.UIKit.IUITextInput,MonoTouch.Foundation.NSObject,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInput" />
      </Targets>
      <Member MemberName="SetSelectionAffinity">
        <MemberSignature Language="C#" Value="public static void SetSelectionAffinity (this MonoTouch.UIKit.IUITextInput This, MonoTouch.UIKit.UITextStorageDirection value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetSelectionAffinity(class MonoTouch.UIKit.IUITextInput This, valuetype MonoTouch.UIKit.UITextStorageDirection value) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInput" RefType="this" />
          <Parameter Name="value" Type="MonoTouch.UIKit.UITextStorageDirection" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="value">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInput_Extensions" Member="M:MonoTouch.UIKit.UITextInput_Extensions.SetSelectionAffinity(MonoTouch.UIKit.IUITextInput,MonoTouch.UIKit.UITextStorageDirection)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInput" />
      </Targets>
      <Member MemberName="ShouldChangeTextInRange">
        <MemberSignature Language="C#" Value="public static bool ShouldChangeTextInRange (this MonoTouch.UIKit.IUITextInput This, MonoTouch.UIKit.UITextRange inRange, string replacementText);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldChangeTextInRange(class MonoTouch.UIKit.IUITextInput This, class MonoTouch.UIKit.UITextRange inRange, string replacementText) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInput" RefType="this" />
          <Parameter Name="inRange" Type="MonoTouch.UIKit.UITextRange" />
          <Parameter Name="replacementText" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="inRange">To be added.</param>
          <param name="replacementText">To be added.</param>
          <summary>Asks whether the text in <paramref name="inRange" /> should be replaced with <paramref name="replacementText" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInput_Extensions" Member="M:MonoTouch.UIKit.UITextInput_Extensions.ShouldChangeTextInRange(MonoTouch.UIKit.IUITextInput,MonoTouch.UIKit.UITextRange,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInput" />
      </Targets>
      <Member MemberName="UpdateFloatingCursor">
        <MemberSignature Language="C#" Value="public static void UpdateFloatingCursor (this MonoTouch.UIKit.IUITextInput This, System.Drawing.PointF point);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateFloatingCursor(class MonoTouch.UIKit.IUITextInput This, valuetype System.Drawing.PointF point) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void UpdateFloatingCursor (this MonoTouch.UIKit.IUITextInput This, MonoTouch.CoreGraphics.CGPoint point);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateFloatingCursor(class MonoTouch.UIKit.IUITextInput This, valuetype MonoTouch.CoreGraphics.CGPoint point) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInput" RefType="this" />
          <Parameter Name="point" Type="System.Drawing.PointF" apistyle="classic" />
          <Parameter Name="point" Type="MonoTouch.CoreGraphics.CGPoint" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="point">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInput_Extensions" Member="M:MonoTouch.UIKit.UITextInput_Extensions.UpdateFloatingCursor(MonoTouch.UIKit.IUITextInput,MonoTouch.CoreGraphics.CGPoint)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInputTraits" />
      </Targets>
      <Member MemberName="GetTextContentType">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetTextContentType (this MonoTouch.UIKit.IUITextInputTraits This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetTextContentType(class MonoTouch.UIKit.IUITextInputTraits This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInputTraits" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInputTraits_Extensions" Member="M:MonoTouch.UIKit.UITextInputTraits_Extensions.GetTextContentType(MonoTouch.UIKit.IUITextInputTraits)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextInputTraits" />
      </Targets>
      <Member MemberName="SetTextContentType">
        <MemberSignature Language="C#" Value="public static void SetTextContentType (this MonoTouch.UIKit.IUITextInputTraits This, MonoTouch.Foundation.NSString value);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTextContentType(class MonoTouch.UIKit.IUITextInputTraits This, class MonoTouch.Foundation.NSString value) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextInputTraits" RefType="this" />
          <Parameter Name="value" Type="MonoTouch.Foundation.NSString" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="value">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextInputTraits_Extensions" Member="M:MonoTouch.UIKit.UITextInputTraits_Extensions.SetTextContentType(MonoTouch.UIKit.IUITextInputTraits,MonoTouch.Foundation.NSString)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextViewDelegate" />
      </Targets>
      <Member MemberName="Changed">
        <MemberSignature Language="C#" Value="public static void Changed (this MonoTouch.UIKit.IUITextViewDelegate This, MonoTouch.UIKit.UITextView textView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Changed(class MonoTouch.UIKit.IUITextViewDelegate This, class MonoTouch.UIKit.UITextView textView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextViewDelegate" RefType="this" />
          <Parameter Name="textView" Type="MonoTouch.UIKit.UITextView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textView">To be added.</param>
          <summary>Indicates the text or text attributes in the specified UITextView were changed by the app user.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextViewDelegate_Extensions.Changed(MonoTouch.UIKit.IUITextViewDelegate,MonoTouch.UIKit.UITextView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextViewDelegate" />
      </Targets>
      <Member MemberName="EditingEnded">
        <MemberSignature Language="C#" Value="public static void EditingEnded (this MonoTouch.UIKit.IUITextViewDelegate This, MonoTouch.UIKit.UITextView textView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EditingEnded(class MonoTouch.UIKit.IUITextViewDelegate This, class MonoTouch.UIKit.UITextView textView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextViewDelegate" RefType="this" />
          <Parameter Name="textView" Type="MonoTouch.UIKit.UITextView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textView">To be added.</param>
          <summary>Indicates that editing has ended in the specified UITextView.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextViewDelegate_Extensions.EditingEnded(MonoTouch.UIKit.IUITextViewDelegate,MonoTouch.UIKit.UITextView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextViewDelegate" />
      </Targets>
      <Member MemberName="EditingStarted">
        <MemberSignature Language="C#" Value="public static void EditingStarted (this MonoTouch.UIKit.IUITextViewDelegate This, MonoTouch.UIKit.UITextView textView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EditingStarted(class MonoTouch.UIKit.IUITextViewDelegate This, class MonoTouch.UIKit.UITextView textView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextViewDelegate" RefType="this" />
          <Parameter Name="textView" Type="MonoTouch.UIKit.UITextView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textView">To be added.</param>
          <summary>Indicates editing has begun in the specified UITextView.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextViewDelegate_Extensions.EditingStarted(MonoTouch.UIKit.IUITextViewDelegate,MonoTouch.UIKit.UITextView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextViewDelegate" />
      </Targets>
      <Member MemberName="SelectionChanged">
        <MemberSignature Language="C#" Value="public static void SelectionChanged (this MonoTouch.UIKit.IUITextViewDelegate This, MonoTouch.UIKit.UITextView textView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SelectionChanged(class MonoTouch.UIKit.IUITextViewDelegate This, class MonoTouch.UIKit.UITextView textView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextViewDelegate" RefType="this" />
          <Parameter Name="textView" Type="MonoTouch.UIKit.UITextView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textView">To be added.</param>
          <summary>Indicates the text selection has changed in the specified UITextView.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextViewDelegate_Extensions.SelectionChanged(MonoTouch.UIKit.IUITextViewDelegate,MonoTouch.UIKit.UITextView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextViewDelegate" />
      </Targets>
      <Member MemberName="ShouldBeginEditing">
        <MemberSignature Language="C#" Value="public static bool ShouldBeginEditing (this MonoTouch.UIKit.IUITextViewDelegate This, MonoTouch.UIKit.UITextView textView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldBeginEditing(class MonoTouch.UIKit.IUITextViewDelegate This, class MonoTouch.UIKit.UITextView textView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextViewDelegate" RefType="this" />
          <Parameter Name="textView" Type="MonoTouch.UIKit.UITextView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textView">To be added.</param>
          <summary>Whether editing should begin in the specified UITextView.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextViewDelegate_Extensions.ShouldBeginEditing(MonoTouch.UIKit.IUITextViewDelegate,MonoTouch.UIKit.UITextView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextViewDelegate" />
      </Targets>
      <Member MemberName="ShouldChangeText">
        <MemberSignature Language="C#" Value="public static bool ShouldChangeText (this MonoTouch.UIKit.IUITextViewDelegate This, MonoTouch.UIKit.UITextView textView, MonoTouch.Foundation.NSRange range, string text);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldChangeText(class MonoTouch.UIKit.IUITextViewDelegate This, class MonoTouch.UIKit.UITextView textView, valuetype MonoTouch.Foundation.NSRange range, string text) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextViewDelegate" RefType="this" />
          <Parameter Name="textView" Type="MonoTouch.UIKit.UITextView" />
          <Parameter Name="range" Type="MonoTouch.Foundation.NSRange" />
          <Parameter Name="text" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textView">To be added.</param>
          <param name="range">To be added.</param>
          <param name="text">To be added.</param>
          <summary>Whether the specified text should be replaced in the UITextView.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextViewDelegate_Extensions.ShouldChangeText(MonoTouch.UIKit.IUITextViewDelegate,MonoTouch.UIKit.UITextView,MonoTouch.Foundation.NSRange,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextViewDelegate" />
      </Targets>
      <Member MemberName="ShouldEndEditing">
        <MemberSignature Language="C#" Value="public static bool ShouldEndEditing (this MonoTouch.UIKit.IUITextViewDelegate This, MonoTouch.UIKit.UITextView textView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldEndEditing(class MonoTouch.UIKit.IUITextViewDelegate This, class MonoTouch.UIKit.UITextView textView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextViewDelegate" RefType="this" />
          <Parameter Name="textView" Type="MonoTouch.UIKit.UITextView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textView">To be added.</param>
          <summary>Whether editing should end in the specified UITextView.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextViewDelegate_Extensions.ShouldEndEditing(MonoTouch.UIKit.IUITextViewDelegate,MonoTouch.UIKit.UITextView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextViewDelegate" />
      </Targets>
      <Member MemberName="ShouldInteractWithTextAttachment">
        <MemberSignature Language="C#" Value="public static bool ShouldInteractWithTextAttachment (this MonoTouch.UIKit.IUITextViewDelegate This, MonoTouch.UIKit.UITextView textView, MonoTouch.UIKit.NSTextAttachment textAttachment, MonoTouch.Foundation.NSRange characterRange);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldInteractWithTextAttachment(class MonoTouch.UIKit.IUITextViewDelegate This, class MonoTouch.UIKit.UITextView textView, class MonoTouch.UIKit.NSTextAttachment textAttachment, valuetype MonoTouch.Foundation.NSRange characterRange) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextViewDelegate" RefType="this" />
          <Parameter Name="textView" Type="MonoTouch.UIKit.UITextView" />
          <Parameter Name="textAttachment" Type="MonoTouch.UIKit.NSTextAttachment" />
          <Parameter Name="characterRange" Type="MonoTouch.Foundation.NSRange" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textView">To be added.</param>
          <param name="textAttachment">To be added.</param>
          <param name="characterRange">To be added.</param>
          <summary>Whether the specified UITextView should allow user interaction with the specified text attachment in a given range of text.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextViewDelegate_Extensions.ShouldInteractWithTextAttachment(MonoTouch.UIKit.IUITextViewDelegate,MonoTouch.UIKit.UITextView,MonoTouch.UIKit.NSTextAttachment,MonoTouch.Foundation.NSRange)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUITextViewDelegate" />
      </Targets>
      <Member MemberName="ShouldInteractWithUrl">
        <MemberSignature Language="C#" Value="public static bool ShouldInteractWithUrl (this MonoTouch.UIKit.IUITextViewDelegate This, MonoTouch.UIKit.UITextView textView, MonoTouch.Foundation.NSUrl URL, MonoTouch.Foundation.NSRange characterRange);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldInteractWithUrl(class MonoTouch.UIKit.IUITextViewDelegate This, class MonoTouch.UIKit.UITextView textView, class MonoTouch.Foundation.NSUrl URL, valuetype MonoTouch.Foundation.NSRange characterRange) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUITextViewDelegate" RefType="this" />
          <Parameter Name="textView" Type="MonoTouch.UIKit.UITextView" />
          <Parameter Name="URL" Type="MonoTouch.Foundation.NSUrl" />
          <Parameter Name="characterRange" Type="MonoTouch.Foundation.NSRange" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="textView">To be added.</param>
          <param name="URL">To be added.</param>
          <param name="characterRange">To be added.</param>
          <summary>Whether the specified UITextView should allow user interaction with the specified URL in the given range of text.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UITextViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UITextViewDelegate_Extensions.ShouldInteractWithUrl(MonoTouch.UIKit.IUITextViewDelegate,MonoTouch.UIKit.UITextView,MonoTouch.Foundation.NSUrl,MonoTouch.Foundation.NSRange)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIVideoEditorControllerDelegate" />
      </Targets>
      <Member MemberName="Failed">
        <MemberSignature Language="C#" Value="public static void Failed (this MonoTouch.UIKit.IUIVideoEditorControllerDelegate This, MonoTouch.UIKit.UIVideoEditorController editor, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Failed(class MonoTouch.UIKit.IUIVideoEditorControllerDelegate This, class MonoTouch.UIKit.UIVideoEditorController editor, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIVideoEditorControllerDelegate" RefType="this" />
          <Parameter Name="editor" Type="MonoTouch.UIKit.UIVideoEditorController" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="editor">To be added.</param>
          <param name="error">To be added.</param>
          <summary>Called when the UIVideoEditorController failed to load or save a movie.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIVideoEditorControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIVideoEditorControllerDelegate_Extensions.Failed(MonoTouch.UIKit.IUIVideoEditorControllerDelegate,MonoTouch.UIKit.UIVideoEditorController,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIVideoEditorControllerDelegate" />
      </Targets>
      <Member MemberName="UserCancelled">
        <MemberSignature Language="C#" Value="public static void UserCancelled (this MonoTouch.UIKit.IUIVideoEditorControllerDelegate This, MonoTouch.UIKit.UIVideoEditorController editor);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UserCancelled(class MonoTouch.UIKit.IUIVideoEditorControllerDelegate This, class MonoTouch.UIKit.UIVideoEditorController editor) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIVideoEditorControllerDelegate" RefType="this" />
          <Parameter Name="editor" Type="MonoTouch.UIKit.UIVideoEditorController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="editor">To be added.</param>
          <summary>Indicates that the app user cancelled the movie editing.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIVideoEditorControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIVideoEditorControllerDelegate_Extensions.UserCancelled(MonoTouch.UIKit.IUIVideoEditorControllerDelegate,MonoTouch.UIKit.UIVideoEditorController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIVideoEditorControllerDelegate" />
      </Targets>
      <Member MemberName="VideoSaved">
        <MemberSignature Language="C#" Value="public static void VideoSaved (this MonoTouch.UIKit.IUIVideoEditorControllerDelegate This, MonoTouch.UIKit.UIVideoEditorController editor, string editedVideoPath);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VideoSaved(class MonoTouch.UIKit.IUIVideoEditorControllerDelegate This, class MonoTouch.UIKit.UIVideoEditorController editor, string editedVideoPath) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIVideoEditorControllerDelegate" RefType="this" />
          <Parameter Name="editor" Type="MonoTouch.UIKit.UIVideoEditorController" />
          <Parameter Name="editedVideoPath" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="editor">To be added.</param>
          <param name="editedVideoPath">To be added.</param>
          <summary>Called after the movie was successfully saved.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIVideoEditorControllerDelegate_Extensions" Member="M:MonoTouch.UIKit.UIVideoEditorControllerDelegate_Extensions.VideoSaved(MonoTouch.UIKit.IUIVideoEditorControllerDelegate,MonoTouch.UIKit.UIVideoEditorController,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.UIView" />
      </Targets>
      <Member MemberName="EndEditing">
        <MemberSignature Language="C#" Value="public static bool EndEditing (this MonoTouch.UIKit.UIView This, bool force);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool EndEditing(class MonoTouch.UIKit.UIView This, bool force) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.UIView" RefType="this" />
          <Parameter Name="force" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="force">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIView_UITextField" Member="M:MonoTouch.UIKit.UIView_UITextField.EndEditing(MonoTouch.UIKit.UIView,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning" />
      </Targets>
      <Member MemberName="AnimationEnded">
        <MemberSignature Language="C#" Value="public static void AnimationEnded (this MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning This, bool transitionCompleted);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AnimationEnded(class MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning This, bool transitionCompleted) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning" RefType="this" />
          <Parameter Name="transitionCompleted" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="transitionCompleted">To be added.</param>
          <summary>Indicates that the animation has ended.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIViewControllerAnimatedTransitioning_Extensions" Member="M:MonoTouch.UIKit.UIViewControllerAnimatedTransitioning_Extensions.AnimationEnded(MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning" />
      </Targets>
      <Member MemberName="GetCompletionCurve">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIViewAnimationCurve GetCompletionCurve (this MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.UIKit.UIViewAnimationCurve GetCompletionCurve(class MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIViewAnimationCurve</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the completion curve, which controls the speed of the animation as it progresses.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIViewControllerInteractiveTransitioning_Extensions" Member="M:MonoTouch.UIKit.UIViewControllerInteractiveTransitioning_Extensions.GetCompletionCurve(MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning" />
      </Targets>
      <Member MemberName="GetCompletionSpeed">
        <MemberSignature Language="C#" Value="public static float GetCompletionSpeed (this MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning This);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 GetCompletionSpeed(class MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning This) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static nfloat GetCompletionSpeed (this MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning This);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.nfloat GetCompletionSpeed(class MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning This) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Single</ReturnType>
          <ReturnType apistyle="unified">System.nfloat</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>Returns the overall relative speed of an animation. The default value is 1.0.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIViewControllerInteractiveTransitioning_Extensions" Member="M:MonoTouch.UIKit.UIViewControllerInteractiveTransitioning_Extensions.GetCompletionSpeed(MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIViewControllerTransitionCoordinatorContext" />
      </Targets>
      <Member MemberName="GetTransitionViewController">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIView GetTransitionViewController (this MonoTouch.UIKit.IUIViewControllerTransitionCoordinatorContext This, MonoTouch.UIKit.UITransitionViewControllerKind kind);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UIView GetTransitionViewController(class MonoTouch.UIKit.IUIViewControllerTransitionCoordinatorContext This, valuetype MonoTouch.UIKit.UITransitionViewControllerKind kind) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIView</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIViewControllerTransitionCoordinatorContext" RefType="this" />
          <Parameter Name="kind" Type="MonoTouch.UIKit.UITransitionViewControllerKind" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="kind">To be added.</param>
          <summary>Gets a view controller that controls a transition.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIViewControllerTransitionCoordinatorContext_Extensions" Member="M:MonoTouch.UIKit.UIViewControllerTransitionCoordinatorContext_Extensions.GetTransitionViewController(MonoTouch.UIKit.IUIViewControllerTransitionCoordinatorContext,MonoTouch.UIKit.UITransitionViewControllerKind)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIViewControllerTransitioningDelegate" />
      </Targets>
      <Member MemberName="GetAnimationControllerForDismissedController">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning GetAnimationControllerForDismissedController (this MonoTouch.UIKit.IUIViewControllerTransitioningDelegate This, MonoTouch.UIKit.UIViewController dismissed);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning GetAnimationControllerForDismissedController(class MonoTouch.UIKit.IUIViewControllerTransitioningDelegate This, class MonoTouch.UIKit.UIViewController dismissed) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIViewControllerTransitioningDelegate" RefType="this" />
          <Parameter Name="dismissed" Type="MonoTouch.UIKit.UIViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="dismissed">To be added.</param>
          <summary>When a dismissal animation is called, this method can be overridden to provide a custom UIViewControllerAnimatedTransitioning.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIViewControllerTransitioningDelegate_Extensions" Member="M:MonoTouch.UIKit.UIViewControllerTransitioningDelegate_Extensions.GetAnimationControllerForDismissedController(MonoTouch.UIKit.IUIViewControllerTransitioningDelegate,MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIViewControllerTransitioningDelegate" />
      </Targets>
      <Member MemberName="GetAnimationControllerForPresentedController" apistyle="unified">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning GetAnimationControllerForPresentedController (this MonoTouch.UIKit.IUIViewControllerTransitioningDelegate This, MonoTouch.UIKit.UIViewController presented, MonoTouch.UIKit.UIViewController presenting, MonoTouch.UIKit.UIViewController source);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning GetAnimationControllerForPresentedController(class MonoTouch.UIKit.IUIViewControllerTransitioningDelegate This, class MonoTouch.UIKit.UIViewController presented, class MonoTouch.UIKit.UIViewController presenting, class MonoTouch.UIKit.UIViewController source) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIViewControllerTransitioningDelegate" RefType="this" />
          <Parameter Name="presented" Type="MonoTouch.UIKit.UIViewController" />
          <Parameter Name="presenting" Type="MonoTouch.UIKit.UIViewController" />
          <Parameter Name="source" Type="MonoTouch.UIKit.UIViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="presented">To be added.</param>
          <param name="presenting">To be added.</param>
          <param name="source">To be added.</param>
          <summary>Returns the animation controller that is used when <paramref name="presenting" /> presents <paramref name="presented" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIViewControllerTransitioningDelegate_Extensions" Member="M:MonoTouch.UIKit.UIViewControllerTransitioningDelegate_Extensions.GetAnimationControllerForPresentedController(MonoTouch.UIKit.IUIViewControllerTransitioningDelegate,MonoTouch.UIKit.UIViewController,MonoTouch.UIKit.UIViewController,MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIViewControllerTransitioningDelegate" />
      </Targets>
      <Member MemberName="GetInteractionControllerForDismissal">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning GetInteractionControllerForDismissal (this MonoTouch.UIKit.IUIViewControllerTransitioningDelegate This, MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning animator);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning GetInteractionControllerForDismissal(class MonoTouch.UIKit.IUIViewControllerTransitioningDelegate This, class MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning animator) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIViewControllerTransitioningDelegate" RefType="this" />
          <Parameter Name="animator" Type="MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="animator">To be added.</param>
          <summary>When a controller is dismissed and an interaction is desired, this method can be overridden to provide a custom UIViewControllerInteractiveTransitioning.|When a dismissal interaction is called and an interaction animation is desired, t</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIViewControllerTransitioningDelegate_Extensions" Member="M:MonoTouch.UIKit.UIViewControllerTransitioningDelegate_Extensions.GetInteractionControllerForDismissal(MonoTouch.UIKit.IUIViewControllerTransitioningDelegate,MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIViewControllerTransitioningDelegate" />
      </Targets>
      <Member MemberName="GetInteractionControllerForPresentation">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning GetInteractionControllerForPresentation (this MonoTouch.UIKit.IUIViewControllerTransitioningDelegate This, MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning animator);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning GetInteractionControllerForPresentation(class MonoTouch.UIKit.IUIViewControllerTransitioningDelegate This, class MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning animator) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.IUIViewControllerInteractiveTransitioning</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIViewControllerTransitioningDelegate" RefType="this" />
          <Parameter Name="animator" Type="MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="animator">To be added.</param>
          <summary>When a controller is presented and an interaction desired, this method can be overridden to provide a custom UIViewControllerInteractiveTransitioning.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIViewControllerTransitioningDelegate_Extensions" Member="M:MonoTouch.UIKit.UIViewControllerTransitioningDelegate_Extensions.GetInteractionControllerForPresentation(MonoTouch.UIKit.IUIViewControllerTransitioningDelegate,MonoTouch.UIKit.IUIViewControllerAnimatedTransitioning)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIViewControllerTransitioningDelegate" />
      </Targets>
      <Member MemberName="GetPresentationControllerForPresentedViewController">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIPresentationController GetPresentationControllerForPresentedViewController (this MonoTouch.UIKit.IUIViewControllerTransitioningDelegate This, MonoTouch.UIKit.UIViewController presentedViewController, MonoTouch.UIKit.UIViewController presentingViewController, MonoTouch.UIKit.UIViewController sourceViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UIPresentationController GetPresentationControllerForPresentedViewController(class MonoTouch.UIKit.IUIViewControllerTransitioningDelegate This, class MonoTouch.UIKit.UIViewController presentedViewController, class MonoTouch.UIKit.UIViewController presentingViewController, class MonoTouch.UIKit.UIViewController sourceViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIPresentationController</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIViewControllerTransitioningDelegate" RefType="this" />
          <Parameter Name="presentedViewController" Type="MonoTouch.UIKit.UIViewController" />
          <Parameter Name="presentingViewController" Type="MonoTouch.UIKit.UIViewController" />
          <Parameter Name="sourceViewController" Type="MonoTouch.UIKit.UIViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="presentedViewController">To be added.</param>
          <param name="presentingViewController">To be added.</param>
          <param name="sourceViewController">To be added.</param>
          <summary>Returns the presentation controller that is used when <paramref name="presenting" /> presents <paramref name="presented" />.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIViewControllerTransitioningDelegate_Extensions" Member="M:MonoTouch.UIKit.UIViewControllerTransitioningDelegate_Extensions.GetPresentationControllerForPresentedViewController(MonoTouch.UIKit.IUIViewControllerTransitioningDelegate,MonoTouch.UIKit.UIViewController,MonoTouch.UIKit.UIViewController,MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIViewImplicitlyAnimating" />
      </Targets>
      <Member MemberName="AddAnimations">
        <MemberSignature Language="C#" Value="public static void AddAnimations (this MonoTouch.UIKit.IUIViewImplicitlyAnimating This, Action animation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddAnimations(class MonoTouch.UIKit.IUIViewImplicitlyAnimating This, class System.Action animation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIViewImplicitlyAnimating" RefType="this" />
          <Parameter Name="animation" Type="System.Action">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDAction))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="animation">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIViewImplicitlyAnimating_Extensions" Member="M:MonoTouch.UIKit.UIViewImplicitlyAnimating_Extensions.AddAnimations(MonoTouch.UIKit.IUIViewImplicitlyAnimating,System.Action)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIViewImplicitlyAnimating" />
      </Targets>
      <Member MemberName="AddAnimations">
        <MemberSignature Language="C#" Value="public static void AddAnimations (this MonoTouch.UIKit.IUIViewImplicitlyAnimating This, Action animation, float delayFactor);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddAnimations(class MonoTouch.UIKit.IUIViewImplicitlyAnimating This, class System.Action animation, float32 delayFactor) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void AddAnimations (this MonoTouch.UIKit.IUIViewImplicitlyAnimating This, Action animation, nfloat delayFactor);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddAnimations(class MonoTouch.UIKit.IUIViewImplicitlyAnimating This, class System.Action animation, valuetype System.nfloat delayFactor) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIViewImplicitlyAnimating" RefType="this" />
          <Parameter Name="animation" Type="System.Action">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDAction))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
          <Parameter Name="delayFactor" Type="System.Single" apistyle="classic" />
          <Parameter Name="delayFactor" Type="System.nfloat" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="animation">To be added.</param>
          <param name="delayFactor">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIViewImplicitlyAnimating_Extensions" Member="M:MonoTouch.UIKit.UIViewImplicitlyAnimating_Extensions.AddAnimations(MonoTouch.UIKit.IUIViewImplicitlyAnimating,System.Action,System.nfloat)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIViewImplicitlyAnimating" />
      </Targets>
      <Member MemberName="AddCompletion">
        <MemberSignature Language="C#" Value="public static void AddCompletion (this MonoTouch.UIKit.IUIViewImplicitlyAnimating This, Action&lt;MonoTouch.UIKit.UIViewAnimatingPosition&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddCompletion(class MonoTouch.UIKit.IUIViewImplicitlyAnimating This, class System.Action`1&lt;valuetype MonoTouch.UIKit.UIViewAnimatingPosition&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIViewImplicitlyAnimating" RefType="this" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.UIKit.UIViewAnimatingPosition&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V51))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIViewImplicitlyAnimating_Extensions" Member="M:MonoTouch.UIKit.UIViewImplicitlyAnimating_Extensions.AddCompletion(MonoTouch.UIKit.IUIViewImplicitlyAnimating,System.Action{MonoTouch.UIKit.UIViewAnimatingPosition})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIViewImplicitlyAnimating" />
      </Targets>
      <Member MemberName="ContinueAnimation">
        <MemberSignature Language="C#" Value="public static void ContinueAnimation (this MonoTouch.UIKit.IUIViewImplicitlyAnimating This, MonoTouch.UIKit.IUITimingCurveProvider parameters, float durationFactor);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ContinueAnimation(class MonoTouch.UIKit.IUIViewImplicitlyAnimating This, class MonoTouch.UIKit.IUITimingCurveProvider parameters, float32 durationFactor) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static void ContinueAnimation (this MonoTouch.UIKit.IUIViewImplicitlyAnimating This, MonoTouch.UIKit.IUITimingCurveProvider parameters, nfloat durationFactor);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ContinueAnimation(class MonoTouch.UIKit.IUIViewImplicitlyAnimating This, class MonoTouch.UIKit.IUITimingCurveProvider parameters, valuetype System.nfloat durationFactor) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIViewImplicitlyAnimating" RefType="this" />
          <Parameter Name="parameters" Type="MonoTouch.UIKit.IUITimingCurveProvider" />
          <Parameter Name="durationFactor" Type="System.Single" apistyle="classic" />
          <Parameter Name="durationFactor" Type="System.nfloat" apistyle="unified" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="parameters">To be added.</param>
          <param name="durationFactor">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIViewImplicitlyAnimating_Extensions" Member="M:MonoTouch.UIKit.UIViewImplicitlyAnimating_Extensions.ContinueAnimation(MonoTouch.UIKit.IUIViewImplicitlyAnimating,MonoTouch.UIKit.IUITimingCurveProvider,System.nfloat)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIWebViewDelegate" />
      </Targets>
      <Member MemberName="LoadFailed">
        <MemberSignature Language="C#" Value="public static void LoadFailed (this MonoTouch.UIKit.IUIWebViewDelegate This, MonoTouch.UIKit.UIWebView webView, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadFailed(class MonoTouch.UIKit.IUIWebViewDelegate This, class MonoTouch.UIKit.UIWebView webView, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIWebViewDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.UIKit.UIWebView" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <param name="error">To be added.</param>
          <summary>Indicates that the UIWebView's attempt to load data failed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIWebViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIWebViewDelegate_Extensions.LoadFailed(MonoTouch.UIKit.IUIWebViewDelegate,MonoTouch.UIKit.UIWebView,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIWebViewDelegate" />
      </Targets>
      <Member MemberName="LoadingFinished">
        <MemberSignature Language="C#" Value="public static void LoadingFinished (this MonoTouch.UIKit.IUIWebViewDelegate This, MonoTouch.UIKit.UIWebView webView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadingFinished(class MonoTouch.UIKit.IUIWebViewDelegate This, class MonoTouch.UIKit.UIWebView webView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIWebViewDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.UIKit.UIWebView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <summary>Indicates that loading has completed.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIWebViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIWebViewDelegate_Extensions.LoadingFinished(MonoTouch.UIKit.IUIWebViewDelegate,MonoTouch.UIKit.UIWebView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIWebViewDelegate" />
      </Targets>
      <Member MemberName="LoadStarted">
        <MemberSignature Language="C#" Value="public static void LoadStarted (this MonoTouch.UIKit.IUIWebViewDelegate This, MonoTouch.UIKit.UIWebView webView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadStarted(class MonoTouch.UIKit.IUIWebViewDelegate This, class MonoTouch.UIKit.UIWebView webView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIWebViewDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.UIKit.UIWebView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <summary>Indicates that loading has begun.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIWebViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIWebViewDelegate_Extensions.LoadStarted(MonoTouch.UIKit.IUIWebViewDelegate,MonoTouch.UIKit.UIWebView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UIKit.IUIWebViewDelegate" />
      </Targets>
      <Member MemberName="ShouldStartLoad">
        <MemberSignature Language="C#" Value="public static bool ShouldStartLoad (this MonoTouch.UIKit.IUIWebViewDelegate This, MonoTouch.UIKit.UIWebView webView, MonoTouch.Foundation.NSUrlRequest request, MonoTouch.UIKit.UIWebViewNavigationType navigationType);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldStartLoad(class MonoTouch.UIKit.IUIWebViewDelegate This, class MonoTouch.UIKit.UIWebView webView, class MonoTouch.Foundation.NSUrlRequest request, valuetype MonoTouch.UIKit.UIWebViewNavigationType navigationType) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UIKit.IUIWebViewDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.UIKit.UIWebView" />
          <Parameter Name="request" Type="MonoTouch.Foundation.NSUrlRequest" />
          <Parameter Name="navigationType" Type="MonoTouch.UIKit.UIWebViewNavigationType" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <param name="request">To be added.</param>
          <param name="navigationType">To be added.</param>
          <summary>Whether the UIWebView should begin loading data.</summary>
        </Docs>
        <Link Type="MonoTouch.UIKit.UIWebViewDelegate_Extensions" Member="M:MonoTouch.UIKit.UIWebViewDelegate_Extensions.ShouldStartLoad(MonoTouch.UIKit.IUIWebViewDelegate,MonoTouch.UIKit.UIWebView,MonoTouch.Foundation.NSUrlRequest,MonoTouch.UIKit.UIWebViewNavigationType)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSString" />
      </Targets>
      <Member MemberName="GetLocalizedUserNotificationString">
        <MemberSignature Language="C#" Value="public static string GetLocalizedUserNotificationString (this MonoTouch.Foundation.NSString This, string key, MonoTouch.Foundation.NSObject[] arguments);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetLocalizedUserNotificationString(class MonoTouch.Foundation.NSString This, string key, class MonoTouch.Foundation.NSObject[] arguments) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.String</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSString" RefType="this" />
          <Parameter Name="key" Type="System.String" />
          <Parameter Name="arguments" Type="MonoTouch.Foundation.NSObject[]" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="key">To be added.</param>
          <param name="arguments">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UserNotifications.NSString_UNUserNotificationCenterSupport" Member="M:MonoTouch.UserNotifications.NSString_UNUserNotificationCenterSupport.GetLocalizedUserNotificationString(MonoTouch.Foundation.NSString,System.String,MonoTouch.Foundation.NSObject[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UserNotifications.UNErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.UserNotifications.UNErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.UserNotifications.UNErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.UserNotifications.UNErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UserNotifications.UNErrorCodeExtensions" Member="M:MonoTouch.UserNotifications.UNErrorCodeExtensions.GetDomain(MonoTouch.UserNotifications.UNErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UserNotifications.IUNUserNotificationCenterDelegate" />
      </Targets>
      <Member MemberName="DidReceiveNotificationResponse">
        <MemberSignature Language="C#" Value="public static void DidReceiveNotificationResponse (this MonoTouch.UserNotifications.IUNUserNotificationCenterDelegate This, MonoTouch.UserNotifications.UNUserNotificationCenter center, MonoTouch.UserNotifications.UNNotificationResponse response, Action completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveNotificationResponse(class MonoTouch.UserNotifications.IUNUserNotificationCenterDelegate This, class MonoTouch.UserNotifications.UNUserNotificationCenter center, class MonoTouch.UserNotifications.UNNotificationResponse response, class System.Action completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UserNotifications.IUNUserNotificationCenterDelegate" RefType="this" />
          <Parameter Name="center" Type="MonoTouch.UserNotifications.UNUserNotificationCenter" />
          <Parameter Name="response" Type="MonoTouch.UserNotifications.UNNotificationResponse" />
          <Parameter Name="completionHandler" Type="System.Action">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDAction))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="center">To be added.</param>
          <param name="response">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UserNotifications.UNUserNotificationCenterDelegate_Extensions" Member="M:MonoTouch.UserNotifications.UNUserNotificationCenterDelegate_Extensions.DidReceiveNotificationResponse(MonoTouch.UserNotifications.IUNUserNotificationCenterDelegate,MonoTouch.UserNotifications.UNUserNotificationCenter,MonoTouch.UserNotifications.UNNotificationResponse,System.Action)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UserNotifications.IUNUserNotificationCenterDelegate" />
      </Targets>
      <Member MemberName="WillPresentNotification">
        <MemberSignature Language="C#" Value="public static void WillPresentNotification (this MonoTouch.UserNotifications.IUNUserNotificationCenterDelegate This, MonoTouch.UserNotifications.UNUserNotificationCenter center, MonoTouch.UserNotifications.UNNotification notification, Action&lt;MonoTouch.UserNotifications.UNNotificationPresentationOptions&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WillPresentNotification(class MonoTouch.UserNotifications.IUNUserNotificationCenterDelegate This, class MonoTouch.UserNotifications.UNUserNotificationCenter center, class MonoTouch.UserNotifications.UNNotification notification, class System.Action`1&lt;valuetype MonoTouch.UserNotifications.UNNotificationPresentationOptions&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UserNotifications.IUNUserNotificationCenterDelegate" RefType="this" />
          <Parameter Name="center" Type="MonoTouch.UserNotifications.UNUserNotificationCenter" />
          <Parameter Name="notification" Type="MonoTouch.UserNotifications.UNNotification" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.UserNotifications.UNNotificationPresentationOptions&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V57))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="center">To be added.</param>
          <param name="notification">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UserNotifications.UNUserNotificationCenterDelegate_Extensions" Member="M:MonoTouch.UserNotifications.UNUserNotificationCenterDelegate_Extensions.WillPresentNotification(MonoTouch.UserNotifications.IUNUserNotificationCenterDelegate,MonoTouch.UserNotifications.UNUserNotificationCenter,MonoTouch.UserNotifications.UNNotification,System.Action{MonoTouch.UserNotifications.UNNotificationPresentationOptions})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSExtensionContext" />
      </Targets>
      <Member MemberName="MediaPlayingPaused">
        <MemberSignature Language="C#" Value="public static void MediaPlayingPaused (this MonoTouch.Foundation.NSExtensionContext This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MediaPlayingPaused(class MonoTouch.Foundation.NSExtensionContext This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSExtensionContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UserNotificationsUI.NSExtensionContext_UNNotificationContentExtension" Member="M:MonoTouch.UserNotificationsUI.NSExtensionContext_UNNotificationContentExtension.MediaPlayingPaused(MonoTouch.Foundation.NSExtensionContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.Foundation.NSExtensionContext" />
      </Targets>
      <Member MemberName="MediaPlayingStarted">
        <MemberSignature Language="C#" Value="public static void MediaPlayingStarted (this MonoTouch.Foundation.NSExtensionContext This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MediaPlayingStarted(class MonoTouch.Foundation.NSExtensionContext This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.Foundation.NSExtensionContext" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UserNotificationsUI.NSExtensionContext_UNNotificationContentExtension" Member="M:MonoTouch.UserNotificationsUI.NSExtensionContext_UNNotificationContentExtension.MediaPlayingStarted(MonoTouch.Foundation.NSExtensionContext)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UserNotificationsUI.IUNNotificationContentExtension" />
      </Targets>
      <Member MemberName="DidReceiveNotificationResponse">
        <MemberSignature Language="C#" Value="public static void DidReceiveNotificationResponse (this MonoTouch.UserNotificationsUI.IUNNotificationContentExtension This, MonoTouch.UserNotifications.UNNotificationResponse response, Action&lt;MonoTouch.UserNotificationsUI.UNResponseOption&gt; completion);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveNotificationResponse(class MonoTouch.UserNotificationsUI.IUNNotificationContentExtension This, class MonoTouch.UserNotifications.UNNotificationResponse response, class System.Action`1&lt;valuetype MonoTouch.UserNotificationsUI.UNResponseOption&gt; completion) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UserNotificationsUI.IUNNotificationContentExtension" RefType="this" />
          <Parameter Name="response" Type="MonoTouch.UserNotifications.UNNotificationResponse" />
          <Parameter Name="completion" Type="System.Action&lt;MonoTouch.UserNotificationsUI.UNResponseOption&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V58))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="response">To be added.</param>
          <param name="completion">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UserNotificationsUI.UNNotificationContentExtension_Extensions" Member="M:MonoTouch.UserNotificationsUI.UNNotificationContentExtension_Extensions.DidReceiveNotificationResponse(MonoTouch.UserNotificationsUI.IUNNotificationContentExtension,MonoTouch.UserNotifications.UNNotificationResponse,System.Action{MonoTouch.UserNotificationsUI.UNResponseOption})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UserNotificationsUI.IUNNotificationContentExtension" />
      </Targets>
      <Member MemberName="GetMediaPlayPauseButtonFrame">
        <MemberSignature Language="C#" Value="public static System.Drawing.RectangleF GetMediaPlayPauseButtonFrame (this MonoTouch.UserNotificationsUI.IUNNotificationContentExtension This);" apistyle="classic" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.RectangleF GetMediaPlayPauseButtonFrame(class MonoTouch.UserNotificationsUI.IUNNotificationContentExtension This) cil managed" apistyle="classic" />
        <MemberSignature Language="C#" Value="public static MonoTouch.CoreGraphics.CGRect GetMediaPlayPauseButtonFrame (this MonoTouch.UserNotificationsUI.IUNNotificationContentExtension This);" apistyle="unified" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.CoreGraphics.CGRect GetMediaPlayPauseButtonFrame(class MonoTouch.UserNotificationsUI.IUNNotificationContentExtension This) cil managed" apistyle="unified" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType apistyle="classic">System.Drawing.RectangleF</ReturnType>
          <ReturnType apistyle="unified">MonoTouch.CoreGraphics.CGRect</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UserNotificationsUI.IUNNotificationContentExtension" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UserNotificationsUI.UNNotificationContentExtension_Extensions" Member="M:MonoTouch.UserNotificationsUI.UNNotificationContentExtension_Extensions.GetMediaPlayPauseButtonFrame(MonoTouch.UserNotificationsUI.IUNNotificationContentExtension)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UserNotificationsUI.IUNNotificationContentExtension" />
      </Targets>
      <Member MemberName="GetMediaPlayPauseButtonTintColor">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIColor GetMediaPlayPauseButtonTintColor (this MonoTouch.UserNotificationsUI.IUNNotificationContentExtension This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UIColor GetMediaPlayPauseButtonTintColor(class MonoTouch.UserNotificationsUI.IUNNotificationContentExtension This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIColor</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UserNotificationsUI.IUNNotificationContentExtension" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UserNotificationsUI.UNNotificationContentExtension_Extensions" Member="M:MonoTouch.UserNotificationsUI.UNNotificationContentExtension_Extensions.GetMediaPlayPauseButtonTintColor(MonoTouch.UserNotificationsUI.IUNNotificationContentExtension)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UserNotificationsUI.IUNNotificationContentExtension" />
      </Targets>
      <Member MemberName="GetMediaPlayPauseButtonType">
        <MemberSignature Language="C#" Value="public static MonoTouch.UserNotificationsUI.UNMediaPlayPauseButtonType GetMediaPlayPauseButtonType (this MonoTouch.UserNotificationsUI.IUNNotificationContentExtension This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.UserNotificationsUI.UNMediaPlayPauseButtonType GetMediaPlayPauseButtonType(class MonoTouch.UserNotificationsUI.IUNNotificationContentExtension This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UserNotificationsUI.UNMediaPlayPauseButtonType</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UserNotificationsUI.IUNNotificationContentExtension" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UserNotificationsUI.UNNotificationContentExtension_Extensions" Member="M:MonoTouch.UserNotificationsUI.UNNotificationContentExtension_Extensions.GetMediaPlayPauseButtonType(MonoTouch.UserNotificationsUI.IUNNotificationContentExtension)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UserNotificationsUI.IUNNotificationContentExtension" />
      </Targets>
      <Member MemberName="PauseMedia">
        <MemberSignature Language="C#" Value="public static void PauseMedia (this MonoTouch.UserNotificationsUI.IUNNotificationContentExtension This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PauseMedia(class MonoTouch.UserNotificationsUI.IUNNotificationContentExtension This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UserNotificationsUI.IUNNotificationContentExtension" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UserNotificationsUI.UNNotificationContentExtension_Extensions" Member="M:MonoTouch.UserNotificationsUI.UNNotificationContentExtension_Extensions.PauseMedia(MonoTouch.UserNotificationsUI.IUNNotificationContentExtension)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.UserNotificationsUI.IUNNotificationContentExtension" />
      </Targets>
      <Member MemberName="PlayMedia">
        <MemberSignature Language="C#" Value="public static void PlayMedia (this MonoTouch.UserNotificationsUI.IUNNotificationContentExtension This);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PlayMedia(class MonoTouch.UserNotificationsUI.IUNNotificationContentExtension This) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.UserNotificationsUI.IUNNotificationContentExtension" RefType="this" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.UserNotificationsUI.UNNotificationContentExtension_Extensions" Member="M:MonoTouch.UserNotificationsUI.UNNotificationContentExtension_Extensions.PlayMedia(MonoTouch.UserNotificationsUI.IUNNotificationContentExtension)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.VideoSubscriberAccount.VSErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.VideoSubscriberAccount.VSErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.VideoSubscriberAccount.VSErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.VideoSubscriberAccount.VSErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.VideoSubscriberAccount.VSErrorCodeExtensions" Member="M:MonoTouch.VideoSubscriberAccount.VSErrorCodeExtensions.GetDomain(MonoTouch.VideoSubscriberAccount.VSErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.CoreVideo.CVPixelBuffer" />
      </Targets>
      <Member MemberName="ToCGImage">
        <MemberSignature Language="C#" Value="public static MonoTouch.VideoToolbox.VTStatus ToCGImage (this MonoTouch.CoreVideo.CVPixelBuffer pixelBuffer, out MonoTouch.CoreGraphics.CGImage image);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype MonoTouch.VideoToolbox.VTStatus ToCGImage(class MonoTouch.CoreVideo.CVPixelBuffer pixelBuffer, class MonoTouch.CoreGraphics.CGImage image) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.VideoToolbox.VTStatus</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="pixelBuffer" Type="MonoTouch.CoreVideo.CVPixelBuffer" RefType="this" />
          <Parameter Name="image" Type="MonoTouch.CoreGraphics.CGImage&amp;" RefType="out" />
        </Parameters>
        <Docs>
          <param name="pixelBuffer">To be added.</param>
          <param name="image">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.VideoToolbox.VTUtilities" Member="M:MonoTouch.VideoToolbox.VTUtilities.ToCGImage(MonoTouch.CoreVideo.CVPixelBuffer,MonoTouch.CoreGraphics.CGImage@)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchConnectivity.IWCSessionDelegate" />
      </Targets>
      <Member MemberName="ActivationDidComplete">
        <MemberSignature Language="C#" Value="public static void ActivationDidComplete (this MonoTouch.WatchConnectivity.IWCSessionDelegate This, MonoTouch.WatchConnectivity.WCSession session, MonoTouch.WatchConnectivity.WCSessionActivationState activationState, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ActivationDidComplete(class MonoTouch.WatchConnectivity.IWCSessionDelegate This, class MonoTouch.WatchConnectivity.WCSession session, valuetype MonoTouch.WatchConnectivity.WCSessionActivationState activationState, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchConnectivity.IWCSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.WatchConnectivity.WCSession" />
          <Parameter Name="activationState" Type="MonoTouch.WatchConnectivity.WCSessionActivationState" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="activationState">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions" Member="M:MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions.ActivationDidComplete(MonoTouch.WatchConnectivity.IWCSessionDelegate,MonoTouch.WatchConnectivity.WCSession,MonoTouch.WatchConnectivity.WCSessionActivationState,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchConnectivity.IWCSessionDelegate" />
      </Targets>
      <Member MemberName="DidBecomeInactive">
        <MemberSignature Language="C#" Value="public static void DidBecomeInactive (this MonoTouch.WatchConnectivity.IWCSessionDelegate This, MonoTouch.WatchConnectivity.WCSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidBecomeInactive(class MonoTouch.WatchConnectivity.IWCSessionDelegate This, class MonoTouch.WatchConnectivity.WCSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchConnectivity.IWCSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.WatchConnectivity.WCSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions" Member="M:MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions.DidBecomeInactive(MonoTouch.WatchConnectivity.IWCSessionDelegate,MonoTouch.WatchConnectivity.WCSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchConnectivity.IWCSessionDelegate" />
      </Targets>
      <Member MemberName="DidDeactivate">
        <MemberSignature Language="C#" Value="public static void DidDeactivate (this MonoTouch.WatchConnectivity.IWCSessionDelegate This, MonoTouch.WatchConnectivity.WCSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDeactivate(class MonoTouch.WatchConnectivity.IWCSessionDelegate This, class MonoTouch.WatchConnectivity.WCSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchConnectivity.IWCSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.WatchConnectivity.WCSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions" Member="M:MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions.DidDeactivate(MonoTouch.WatchConnectivity.IWCSessionDelegate,MonoTouch.WatchConnectivity.WCSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchConnectivity.IWCSessionDelegate" />
      </Targets>
      <Member MemberName="DidFinishFileTransfer">
        <MemberSignature Language="C#" Value="public static void DidFinishFileTransfer (this MonoTouch.WatchConnectivity.IWCSessionDelegate This, MonoTouch.WatchConnectivity.WCSession session, MonoTouch.WatchConnectivity.WCSessionFileTransfer fileTransfer, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinishFileTransfer(class MonoTouch.WatchConnectivity.IWCSessionDelegate This, class MonoTouch.WatchConnectivity.WCSession session, class MonoTouch.WatchConnectivity.WCSessionFileTransfer fileTransfer, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchConnectivity.IWCSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.WatchConnectivity.WCSession" />
          <Parameter Name="fileTransfer" Type="MonoTouch.WatchConnectivity.WCSessionFileTransfer" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="fileTransfer">To be added.</param>
          <param name="error">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions" Member="M:MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions.DidFinishFileTransfer(MonoTouch.WatchConnectivity.IWCSessionDelegate,MonoTouch.WatchConnectivity.WCSession,MonoTouch.WatchConnectivity.WCSessionFileTransfer,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchConnectivity.IWCSessionDelegate" />
      </Targets>
      <Member MemberName="DidFinishUserInfoTransfer">
        <MemberSignature Language="C#" Value="public static void DidFinishUserInfoTransfer (this MonoTouch.WatchConnectivity.IWCSessionDelegate This, MonoTouch.WatchConnectivity.WCSession session, MonoTouch.WatchConnectivity.WCSessionUserInfoTransfer userInfoTransfer, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinishUserInfoTransfer(class MonoTouch.WatchConnectivity.IWCSessionDelegate This, class MonoTouch.WatchConnectivity.WCSession session, class MonoTouch.WatchConnectivity.WCSessionUserInfoTransfer userInfoTransfer, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchConnectivity.IWCSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.WatchConnectivity.WCSession" />
          <Parameter Name="userInfoTransfer" Type="MonoTouch.WatchConnectivity.WCSessionUserInfoTransfer" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="userInfoTransfer">To be added.</param>
          <param name="error">To be added.This parameter can be .</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions" Member="M:MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions.DidFinishUserInfoTransfer(MonoTouch.WatchConnectivity.IWCSessionDelegate,MonoTouch.WatchConnectivity.WCSession,MonoTouch.WatchConnectivity.WCSessionUserInfoTransfer,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchConnectivity.IWCSessionDelegate" />
      </Targets>
      <Member MemberName="DidReceiveApplicationContext" apistyle="unified">
        <MemberSignature Language="C#" Value="public static void DidReceiveApplicationContext (this MonoTouch.WatchConnectivity.IWCSessionDelegate This, MonoTouch.WatchConnectivity.WCSession session, MonoTouch.Foundation.NSDictionary&lt;MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSObject&gt; applicationContext);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveApplicationContext(class MonoTouch.WatchConnectivity.IWCSessionDelegate This, class MonoTouch.WatchConnectivity.WCSession session, class MonoTouch.Foundation.NSDictionary`2&lt;class MonoTouch.Foundation.NSString, class MonoTouch.Foundation.NSObject&gt; applicationContext) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchConnectivity.IWCSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.WatchConnectivity.WCSession" />
          <Parameter Name="applicationContext" Type="MonoTouch.Foundation.NSDictionary&lt;MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSObject&gt;" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="applicationContext">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions" Member="M:MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions.DidReceiveApplicationContext(MonoTouch.WatchConnectivity.IWCSessionDelegate,MonoTouch.WatchConnectivity.WCSession,MonoTouch.Foundation.NSDictionary{MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSObject})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchConnectivity.IWCSessionDelegate" />
      </Targets>
      <Member MemberName="DidReceiveFile">
        <MemberSignature Language="C#" Value="public static void DidReceiveFile (this MonoTouch.WatchConnectivity.IWCSessionDelegate This, MonoTouch.WatchConnectivity.WCSession session, MonoTouch.WatchConnectivity.WCSessionFile file);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveFile(class MonoTouch.WatchConnectivity.IWCSessionDelegate This, class MonoTouch.WatchConnectivity.WCSession session, class MonoTouch.WatchConnectivity.WCSessionFile file) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchConnectivity.IWCSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.WatchConnectivity.WCSession" />
          <Parameter Name="file" Type="MonoTouch.WatchConnectivity.WCSessionFile" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="file">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions" Member="M:MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions.DidReceiveFile(MonoTouch.WatchConnectivity.IWCSessionDelegate,MonoTouch.WatchConnectivity.WCSession,MonoTouch.WatchConnectivity.WCSessionFile)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchConnectivity.IWCSessionDelegate" />
      </Targets>
      <Member MemberName="DidReceiveMessage" apistyle="unified">
        <MemberSignature Language="C#" Value="public static void DidReceiveMessage (this MonoTouch.WatchConnectivity.IWCSessionDelegate This, MonoTouch.WatchConnectivity.WCSession session, MonoTouch.Foundation.NSDictionary&lt;MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSObject&gt; message);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveMessage(class MonoTouch.WatchConnectivity.IWCSessionDelegate This, class MonoTouch.WatchConnectivity.WCSession session, class MonoTouch.Foundation.NSDictionary`2&lt;class MonoTouch.Foundation.NSString, class MonoTouch.Foundation.NSObject&gt; message) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchConnectivity.IWCSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.WatchConnectivity.WCSession" />
          <Parameter Name="message" Type="MonoTouch.Foundation.NSDictionary&lt;MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSObject&gt;" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="message">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions" Member="M:MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions.DidReceiveMessage(MonoTouch.WatchConnectivity.IWCSessionDelegate,MonoTouch.WatchConnectivity.WCSession,MonoTouch.Foundation.NSDictionary{MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSObject})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchConnectivity.IWCSessionDelegate" />
      </Targets>
      <Member MemberName="DidReceiveMessage" apistyle="unified">
        <MemberSignature Language="C#" Value="public static void DidReceiveMessage (this MonoTouch.WatchConnectivity.IWCSessionDelegate This, MonoTouch.WatchConnectivity.WCSession session, MonoTouch.Foundation.NSDictionary&lt;MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSObject&gt; message, MonoTouch.WatchConnectivity.WCSessionReplyHandler replyHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveMessage(class MonoTouch.WatchConnectivity.IWCSessionDelegate This, class MonoTouch.WatchConnectivity.WCSession session, class MonoTouch.Foundation.NSDictionary`2&lt;class MonoTouch.Foundation.NSString, class MonoTouch.Foundation.NSObject&gt; message, class MonoTouch.WatchConnectivity.WCSessionReplyHandler replyHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchConnectivity.IWCSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.WatchConnectivity.WCSession" />
          <Parameter Name="message" Type="MonoTouch.Foundation.NSDictionary&lt;MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSObject&gt;" />
          <Parameter Name="replyHandler" Type="MonoTouch.WatchConnectivity.WCSessionReplyHandler">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDWCSessionReplyHandler))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="message">To be added.</param>
          <param name="replyHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions" Member="M:MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions.DidReceiveMessage(MonoTouch.WatchConnectivity.IWCSessionDelegate,MonoTouch.WatchConnectivity.WCSession,MonoTouch.Foundation.NSDictionary{MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSObject},MonoTouch.WatchConnectivity.WCSessionReplyHandler)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchConnectivity.IWCSessionDelegate" />
      </Targets>
      <Member MemberName="DidReceiveMessageData">
        <MemberSignature Language="C#" Value="public static void DidReceiveMessageData (this MonoTouch.WatchConnectivity.IWCSessionDelegate This, MonoTouch.WatchConnectivity.WCSession session, MonoTouch.Foundation.NSData messageData);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveMessageData(class MonoTouch.WatchConnectivity.IWCSessionDelegate This, class MonoTouch.WatchConnectivity.WCSession session, class MonoTouch.Foundation.NSData messageData) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchConnectivity.IWCSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.WatchConnectivity.WCSession" />
          <Parameter Name="messageData" Type="MonoTouch.Foundation.NSData" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="messageData">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions" Member="M:MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions.DidReceiveMessageData(MonoTouch.WatchConnectivity.IWCSessionDelegate,MonoTouch.WatchConnectivity.WCSession,MonoTouch.Foundation.NSData)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchConnectivity.IWCSessionDelegate" />
      </Targets>
      <Member MemberName="DidReceiveMessageData">
        <MemberSignature Language="C#" Value="public static void DidReceiveMessageData (this MonoTouch.WatchConnectivity.IWCSessionDelegate This, MonoTouch.WatchConnectivity.WCSession session, MonoTouch.Foundation.NSData messageData, MonoTouch.WatchConnectivity.WCSessionReplyDataHandler replyHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveMessageData(class MonoTouch.WatchConnectivity.IWCSessionDelegate This, class MonoTouch.WatchConnectivity.WCSession session, class MonoTouch.Foundation.NSData messageData, class MonoTouch.WatchConnectivity.WCSessionReplyDataHandler replyHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchConnectivity.IWCSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.WatchConnectivity.WCSession" />
          <Parameter Name="messageData" Type="MonoTouch.Foundation.NSData" />
          <Parameter Name="replyHandler" Type="MonoTouch.WatchConnectivity.WCSessionReplyDataHandler">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDWCSessionReplyDataHandler))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="messageData">To be added.</param>
          <param name="replyHandler">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions" Member="M:MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions.DidReceiveMessageData(MonoTouch.WatchConnectivity.IWCSessionDelegate,MonoTouch.WatchConnectivity.WCSession,MonoTouch.Foundation.NSData,MonoTouch.WatchConnectivity.WCSessionReplyDataHandler)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchConnectivity.IWCSessionDelegate" />
      </Targets>
      <Member MemberName="DidReceiveUserInfo" apistyle="unified">
        <MemberSignature Language="C#" Value="public static void DidReceiveUserInfo (this MonoTouch.WatchConnectivity.IWCSessionDelegate This, MonoTouch.WatchConnectivity.WCSession session, MonoTouch.Foundation.NSDictionary&lt;MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSObject&gt; userInfo);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveUserInfo(class MonoTouch.WatchConnectivity.IWCSessionDelegate This, class MonoTouch.WatchConnectivity.WCSession session, class MonoTouch.Foundation.NSDictionary`2&lt;class MonoTouch.Foundation.NSString, class MonoTouch.Foundation.NSObject&gt; userInfo) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchConnectivity.IWCSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.WatchConnectivity.WCSession" />
          <Parameter Name="userInfo" Type="MonoTouch.Foundation.NSDictionary&lt;MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSObject&gt;" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <param name="userInfo">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions" Member="M:MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions.DidReceiveUserInfo(MonoTouch.WatchConnectivity.IWCSessionDelegate,MonoTouch.WatchConnectivity.WCSession,MonoTouch.Foundation.NSDictionary{MonoTouch.Foundation.NSString,MonoTouch.Foundation.NSObject})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchConnectivity.IWCSessionDelegate" />
      </Targets>
      <Member MemberName="SessionReachabilityDidChange">
        <MemberSignature Language="C#" Value="public static void SessionReachabilityDidChange (this MonoTouch.WatchConnectivity.IWCSessionDelegate This, MonoTouch.WatchConnectivity.WCSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SessionReachabilityDidChange(class MonoTouch.WatchConnectivity.IWCSessionDelegate This, class MonoTouch.WatchConnectivity.WCSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchConnectivity.IWCSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.WatchConnectivity.WCSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions" Member="M:MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions.SessionReachabilityDidChange(MonoTouch.WatchConnectivity.IWCSessionDelegate,MonoTouch.WatchConnectivity.WCSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchConnectivity.IWCSessionDelegate" />
      </Targets>
      <Member MemberName="SessionWatchStateDidChange">
        <MemberSignature Language="C#" Value="public static void SessionWatchStateDidChange (this MonoTouch.WatchConnectivity.IWCSessionDelegate This, MonoTouch.WatchConnectivity.WCSession session);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SessionWatchStateDidChange(class MonoTouch.WatchConnectivity.IWCSessionDelegate This, class MonoTouch.WatchConnectivity.WCSession session) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchConnectivity.IWCSessionDelegate" RefType="this" />
          <Parameter Name="session" Type="MonoTouch.WatchConnectivity.WCSession" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="session">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions" Member="M:MonoTouch.WatchConnectivity.WCSessionDelegate_Extensions.SessionWatchStateDidChange(MonoTouch.WatchConnectivity.IWCSessionDelegate,MonoTouch.WatchConnectivity.WCSession)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchKit.WKInterfaceObject" />
      </Targets>
      <Member MemberName="SetAccessibilityHint">
        <MemberSignature Language="C#" Value="public static void SetAccessibilityHint (this MonoTouch.WatchKit.WKInterfaceObject This, string accessibilityHint);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAccessibilityHint(class MonoTouch.WatchKit.WKInterfaceObject This, string accessibilityHint) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchKit.WKInterfaceObject" RefType="this" />
          <Parameter Name="accessibilityHint" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="accessibilityHint">
            <para>To be added.</para>
            <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
          </param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchKit.WKAccessibility" Member="M:MonoTouch.WatchKit.WKAccessibility.SetAccessibilityHint(MonoTouch.WatchKit.WKInterfaceObject,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchKit.WKInterfaceObject" />
      </Targets>
      <Member MemberName="SetAccessibilityIdentifier">
        <MemberSignature Language="C#" Value="public static void SetAccessibilityIdentifier (this MonoTouch.WatchKit.WKInterfaceObject This, string accessibilityIdentifier);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAccessibilityIdentifier(class MonoTouch.WatchKit.WKInterfaceObject This, string accessibilityIdentifier) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchKit.WKInterfaceObject" RefType="this" />
          <Parameter Name="accessibilityIdentifier" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="accessibilityIdentifier">
            <para>To be added.</para>
            <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
          </param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchKit.WKAccessibility" Member="M:MonoTouch.WatchKit.WKAccessibility.SetAccessibilityIdentifier(MonoTouch.WatchKit.WKInterfaceObject,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchKit.WKInterfaceObject" />
      </Targets>
      <Member MemberName="SetAccessibilityImageRegions">
        <MemberSignature Language="C#" Value="public static void SetAccessibilityImageRegions (this MonoTouch.WatchKit.WKInterfaceObject This, MonoTouch.WatchKit.WKAccessibilityImageRegion[] accessibilityImageRegions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAccessibilityImageRegions(class MonoTouch.WatchKit.WKInterfaceObject This, class MonoTouch.WatchKit.WKAccessibilityImageRegion[] accessibilityImageRegions) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchKit.WKInterfaceObject" RefType="this" />
          <Parameter Name="accessibilityImageRegions" Type="MonoTouch.WatchKit.WKAccessibilityImageRegion[]" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="accessibilityImageRegions">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchKit.WKAccessibility" Member="M:MonoTouch.WatchKit.WKAccessibility.SetAccessibilityImageRegions(MonoTouch.WatchKit.WKInterfaceObject,MonoTouch.WatchKit.WKAccessibilityImageRegion[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchKit.WKInterfaceObject" />
      </Targets>
      <Member MemberName="SetAccessibilityLabel">
        <MemberSignature Language="C#" Value="public static void SetAccessibilityLabel (this MonoTouch.WatchKit.WKInterfaceObject This, string accessibilityLabel);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAccessibilityLabel(class MonoTouch.WatchKit.WKInterfaceObject This, string accessibilityLabel) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchKit.WKInterfaceObject" RefType="this" />
          <Parameter Name="accessibilityLabel" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="accessibilityLabel">
            <para>To be added.</para>
            <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
          </param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchKit.WKAccessibility" Member="M:MonoTouch.WatchKit.WKAccessibility.SetAccessibilityLabel(MonoTouch.WatchKit.WKInterfaceObject,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchKit.WKInterfaceObject" />
      </Targets>
      <Member MemberName="SetAccessibilityTraits">
        <MemberSignature Language="C#" Value="public static void SetAccessibilityTraits (this MonoTouch.WatchKit.WKInterfaceObject This, MonoTouch.UIKit.UIAccessibilityTrait accessibilityTraits);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAccessibilityTraits(class MonoTouch.WatchKit.WKInterfaceObject This, valuetype MonoTouch.UIKit.UIAccessibilityTrait accessibilityTraits) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchKit.WKInterfaceObject" RefType="this" />
          <Parameter Name="accessibilityTraits" Type="MonoTouch.UIKit.UIAccessibilityTrait" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="accessibilityTraits">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchKit.WKAccessibility" Member="M:MonoTouch.WatchKit.WKAccessibility.SetAccessibilityTraits(MonoTouch.WatchKit.WKInterfaceObject,MonoTouch.UIKit.UIAccessibilityTrait)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchKit.WKInterfaceObject" />
      </Targets>
      <Member MemberName="SetAccessibilityValue">
        <MemberSignature Language="C#" Value="public static void SetAccessibilityValue (this MonoTouch.WatchKit.WKInterfaceObject This, string accessibilityValue);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAccessibilityValue(class MonoTouch.WatchKit.WKInterfaceObject This, string accessibilityValue) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchKit.WKInterfaceObject" RefType="this" />
          <Parameter Name="accessibilityValue" Type="System.String" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="accessibilityValue">
            <para>To be added.</para>
            <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
          </param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchKit.WKAccessibility" Member="M:MonoTouch.WatchKit.WKAccessibility.SetAccessibilityValue(MonoTouch.WatchKit.WKInterfaceObject,System.String)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchKit.WKInterfaceObject" />
      </Targets>
      <Member MemberName="SetIsAccessibilityElement">
        <MemberSignature Language="C#" Value="public static void SetIsAccessibilityElement (this MonoTouch.WatchKit.WKInterfaceObject This, bool isAccessibilityElement);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsAccessibilityElement(class MonoTouch.WatchKit.WKInterfaceObject This, bool isAccessibilityElement) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WatchKit.WKInterfaceObject" RefType="this" />
          <Parameter Name="isAccessibilityElement" Type="System.Boolean" />
        </Parameters>
        <Docs>
          <param name="This">To be added.</param>
          <param name="isAccessibilityElement">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.WatchKit.WKAccessibility" Member="M:MonoTouch.WatchKit.WKAccessibility.SetIsAccessibilityElement(MonoTouch.WatchKit.WKInterfaceObject,System.Boolean)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WatchKit.WKErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.WatchKit.WKErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.WatchKit.WKErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.WatchKit.WKErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.WatchKit.WKErrorCode value</summary>
        </Docs>
        <Link Type="MonoTouch.WatchKit.WKErrorCodeExtensions" Member="M:MonoTouch.WatchKit.WKErrorCodeExtensions.GetDomain(MonoTouch.WatchKit.WKErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.WKErrorCode" />
      </Targets>
      <Member MemberName="GetDomain">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this MonoTouch.WebKit.WKErrorCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype MonoTouch.WebKit.WKErrorCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="MonoTouch.WebKit.WKErrorCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">The enumeration value</param>
          <summary>Returns the error domain associated with the MonoTouch.WebKit.WKErrorCode value</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKErrorCodeExtensions" Member="M:MonoTouch.WebKit.WKErrorCodeExtensions.GetDomain(MonoTouch.WebKit.WKErrorCode)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKNavigationDelegate" />
      </Targets>
      <Member MemberName="ContentProcessDidTerminate">
        <MemberSignature Language="C#" Value="public static void ContentProcessDidTerminate (this MonoTouch.WebKit.IWKNavigationDelegate This, MonoTouch.WebKit.WKWebView webView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ContentProcessDidTerminate(class MonoTouch.WebKit.IWKNavigationDelegate This, class MonoTouch.WebKit.WKWebView webView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKNavigationDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.WebKit.WKWebView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKNavigationDelegate_Extensions" Member="M:MonoTouch.WebKit.WKNavigationDelegate_Extensions.ContentProcessDidTerminate(MonoTouch.WebKit.IWKNavigationDelegate,MonoTouch.WebKit.WKWebView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKNavigationDelegate" />
      </Targets>
      <Member MemberName="DecidePolicy">
        <MemberSignature Language="C#" Value="public static void DecidePolicy (this MonoTouch.WebKit.IWKNavigationDelegate This, MonoTouch.WebKit.WKWebView webView, MonoTouch.WebKit.WKNavigationAction navigationAction, Action&lt;MonoTouch.WebKit.WKNavigationActionPolicy&gt; decisionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DecidePolicy(class MonoTouch.WebKit.IWKNavigationDelegate This, class MonoTouch.WebKit.WKWebView webView, class MonoTouch.WebKit.WKNavigationAction navigationAction, class System.Action`1&lt;valuetype MonoTouch.WebKit.WKNavigationActionPolicy&gt; decisionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKNavigationDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.WebKit.WKWebView" />
          <Parameter Name="navigationAction" Type="MonoTouch.WebKit.WKNavigationAction" />
          <Parameter Name="decisionHandler" Type="System.Action&lt;MonoTouch.WebKit.WKNavigationActionPolicy&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V31))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <param name="navigationAction">To be added.</param>
          <param name="decisionHandler">To be added.</param>
          <summary>Assigns an action to be taken after the specified <paramref name="navigationAction" /> has been either canceled or allowed.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKNavigationDelegate_Extensions" Member="M:MonoTouch.WebKit.WKNavigationDelegate_Extensions.DecidePolicy(MonoTouch.WebKit.IWKNavigationDelegate,MonoTouch.WebKit.WKWebView,MonoTouch.WebKit.WKNavigationAction,System.Action{MonoTouch.WebKit.WKNavigationActionPolicy})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKNavigationDelegate" />
      </Targets>
      <Member MemberName="DecidePolicy">
        <MemberSignature Language="C#" Value="public static void DecidePolicy (this MonoTouch.WebKit.IWKNavigationDelegate This, MonoTouch.WebKit.WKWebView webView, MonoTouch.WebKit.WKNavigationResponse navigationResponse, Action&lt;MonoTouch.WebKit.WKNavigationResponsePolicy&gt; decisionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DecidePolicy(class MonoTouch.WebKit.IWKNavigationDelegate This, class MonoTouch.WebKit.WKWebView webView, class MonoTouch.WebKit.WKNavigationResponse navigationResponse, class System.Action`1&lt;valuetype MonoTouch.WebKit.WKNavigationResponsePolicy&gt; decisionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKNavigationDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.WebKit.WKWebView" />
          <Parameter Name="navigationResponse" Type="MonoTouch.WebKit.WKNavigationResponse" />
          <Parameter Name="decisionHandler" Type="System.Action&lt;MonoTouch.WebKit.WKNavigationResponsePolicy&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V32))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <param name="navigationResponse">To be added.</param>
          <param name="decisionHandler">To be added.</param>
          <summary>Assigns an action to be taken after the specified <paramref name="navigationResponse" /> has been either canceled or allowed.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKNavigationDelegate_Extensions" Member="M:MonoTouch.WebKit.WKNavigationDelegate_Extensions.DecidePolicy(MonoTouch.WebKit.IWKNavigationDelegate,MonoTouch.WebKit.WKWebView,MonoTouch.WebKit.WKNavigationResponse,System.Action{MonoTouch.WebKit.WKNavigationResponsePolicy})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKNavigationDelegate" />
      </Targets>
      <Member MemberName="DidCommitNavigation">
        <MemberSignature Language="C#" Value="public static void DidCommitNavigation (this MonoTouch.WebKit.IWKNavigationDelegate This, MonoTouch.WebKit.WKWebView webView, MonoTouch.WebKit.WKNavigation navigation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidCommitNavigation(class MonoTouch.WebKit.IWKNavigationDelegate This, class MonoTouch.WebKit.WKWebView webView, class MonoTouch.WebKit.WKNavigation navigation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKNavigationDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.WebKit.WKWebView" />
          <Parameter Name="navigation" Type="MonoTouch.WebKit.WKNavigation" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <param name="navigation">To be added.</param>
          <summary>Method that is called when content begins to load.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKNavigationDelegate_Extensions" Member="M:MonoTouch.WebKit.WKNavigationDelegate_Extensions.DidCommitNavigation(MonoTouch.WebKit.IWKNavigationDelegate,MonoTouch.WebKit.WKWebView,MonoTouch.WebKit.WKNavigation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKNavigationDelegate" />
      </Targets>
      <Member MemberName="DidFailNavigation">
        <MemberSignature Language="C#" Value="public static void DidFailNavigation (this MonoTouch.WebKit.IWKNavigationDelegate This, MonoTouch.WebKit.WKWebView webView, MonoTouch.WebKit.WKNavigation navigation, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFailNavigation(class MonoTouch.WebKit.IWKNavigationDelegate This, class MonoTouch.WebKit.WKWebView webView, class MonoTouch.WebKit.WKNavigation navigation, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKNavigationDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.WebKit.WKWebView" />
          <Parameter Name="navigation" Type="MonoTouch.WebKit.WKNavigation" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <param name="navigation">To be added.</param>
          <param name="error">To be added.</param>
          <summary>Method that is called when a committed navigation fails.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKNavigationDelegate_Extensions" Member="M:MonoTouch.WebKit.WKNavigationDelegate_Extensions.DidFailNavigation(MonoTouch.WebKit.IWKNavigationDelegate,MonoTouch.WebKit.WKWebView,MonoTouch.WebKit.WKNavigation,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKNavigationDelegate" />
      </Targets>
      <Member MemberName="DidFailProvisionalNavigation">
        <MemberSignature Language="C#" Value="public static void DidFailProvisionalNavigation (this MonoTouch.WebKit.IWKNavigationDelegate This, MonoTouch.WebKit.WKWebView webView, MonoTouch.WebKit.WKNavigation navigation, MonoTouch.Foundation.NSError error);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFailProvisionalNavigation(class MonoTouch.WebKit.IWKNavigationDelegate This, class MonoTouch.WebKit.WKWebView webView, class MonoTouch.WebKit.WKNavigation navigation, class MonoTouch.Foundation.NSError error) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKNavigationDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.WebKit.WKWebView" />
          <Parameter Name="navigation" Type="MonoTouch.WebKit.WKNavigation" />
          <Parameter Name="error" Type="MonoTouch.Foundation.NSError" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <param name="navigation">To be added.</param>
          <param name="error">To be added.</param>
          <summary>Method that is called when a committed navigation fails after data has begun to load.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKNavigationDelegate_Extensions" Member="M:MonoTouch.WebKit.WKNavigationDelegate_Extensions.DidFailProvisionalNavigation(MonoTouch.WebKit.IWKNavigationDelegate,MonoTouch.WebKit.WKWebView,MonoTouch.WebKit.WKNavigation,MonoTouch.Foundation.NSError)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKNavigationDelegate" />
      </Targets>
      <Member MemberName="DidFinishNavigation">
        <MemberSignature Language="C#" Value="public static void DidFinishNavigation (this MonoTouch.WebKit.IWKNavigationDelegate This, MonoTouch.WebKit.WKWebView webView, MonoTouch.WebKit.WKNavigation navigation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidFinishNavigation(class MonoTouch.WebKit.IWKNavigationDelegate This, class MonoTouch.WebKit.WKWebView webView, class MonoTouch.WebKit.WKNavigation navigation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKNavigationDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.WebKit.WKWebView" />
          <Parameter Name="navigation" Type="MonoTouch.WebKit.WKNavigation" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <param name="navigation">To be added.</param>
          <summary>Method that is called when all the data is loaded.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKNavigationDelegate_Extensions" Member="M:MonoTouch.WebKit.WKNavigationDelegate_Extensions.DidFinishNavigation(MonoTouch.WebKit.IWKNavigationDelegate,MonoTouch.WebKit.WKWebView,MonoTouch.WebKit.WKNavigation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKNavigationDelegate" />
      </Targets>
      <Member MemberName="DidReceiveAuthenticationChallenge">
        <MemberSignature Language="C#" Value="public static void DidReceiveAuthenticationChallenge (this MonoTouch.WebKit.IWKNavigationDelegate This, MonoTouch.WebKit.WKWebView webView, MonoTouch.Foundation.NSUrlAuthenticationChallenge challenge, Action&lt;MonoTouch.Foundation.NSUrlSessionAuthChallengeDisposition,MonoTouch.Foundation.NSUrlCredential&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveAuthenticationChallenge(class MonoTouch.WebKit.IWKNavigationDelegate This, class MonoTouch.WebKit.WKWebView webView, class MonoTouch.Foundation.NSUrlAuthenticationChallenge challenge, class System.Action`2&lt;valuetype MonoTouch.Foundation.NSUrlSessionAuthChallengeDisposition, class MonoTouch.Foundation.NSUrlCredential&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKNavigationDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.WebKit.WKWebView" />
          <Parameter Name="challenge" Type="MonoTouch.Foundation.NSUrlAuthenticationChallenge" />
          <Parameter Name="completionHandler" Type="System.Action&lt;MonoTouch.Foundation.NSUrlSessionAuthChallengeDisposition,MonoTouch.Foundation.NSUrlCredential&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity2V33))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <param name="challenge">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>Method that is called when an authentication challenge is issued.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKNavigationDelegate_Extensions" Member="M:MonoTouch.WebKit.WKNavigationDelegate_Extensions.DidReceiveAuthenticationChallenge(MonoTouch.WebKit.IWKNavigationDelegate,MonoTouch.WebKit.WKWebView,MonoTouch.Foundation.NSUrlAuthenticationChallenge,System.Action{MonoTouch.Foundation.NSUrlSessionAuthChallengeDisposition,MonoTouch.Foundation.NSUrlCredential})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKNavigationDelegate" />
      </Targets>
      <Member MemberName="DidReceiveServerRedirectForProvisionalNavigation">
        <MemberSignature Language="C#" Value="public static void DidReceiveServerRedirectForProvisionalNavigation (this MonoTouch.WebKit.IWKNavigationDelegate This, MonoTouch.WebKit.WKWebView webView, MonoTouch.WebKit.WKNavigation navigation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidReceiveServerRedirectForProvisionalNavigation(class MonoTouch.WebKit.IWKNavigationDelegate This, class MonoTouch.WebKit.WKWebView webView, class MonoTouch.WebKit.WKNavigation navigation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKNavigationDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.WebKit.WKWebView" />
          <Parameter Name="navigation" Type="MonoTouch.WebKit.WKNavigation" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <param name="navigation">To be added.</param>
          <summary>Method that is called when a server redirect is received.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKNavigationDelegate_Extensions" Member="M:MonoTouch.WebKit.WKNavigationDelegate_Extensions.DidReceiveServerRedirectForProvisionalNavigation(MonoTouch.WebKit.IWKNavigationDelegate,MonoTouch.WebKit.WKWebView,MonoTouch.WebKit.WKNavigation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKNavigationDelegate" />
      </Targets>
      <Member MemberName="DidStartProvisionalNavigation">
        <MemberSignature Language="C#" Value="public static void DidStartProvisionalNavigation (this MonoTouch.WebKit.IWKNavigationDelegate This, MonoTouch.WebKit.WKWebView webView, MonoTouch.WebKit.WKNavigation navigation);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidStartProvisionalNavigation(class MonoTouch.WebKit.IWKNavigationDelegate This, class MonoTouch.WebKit.WKWebView webView, class MonoTouch.WebKit.WKNavigation navigation) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKNavigationDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.WebKit.WKWebView" />
          <Parameter Name="navigation" Type="MonoTouch.WebKit.WKNavigation" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <param name="navigation">To be added.</param>
          <summary>Method that is called when data begins to load.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKNavigationDelegate_Extensions" Member="M:MonoTouch.WebKit.WKNavigationDelegate_Extensions.DidStartProvisionalNavigation(MonoTouch.WebKit.IWKNavigationDelegate,MonoTouch.WebKit.WKWebView,MonoTouch.WebKit.WKNavigation)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKUIDelegate" />
      </Targets>
      <Member MemberName="CommitPreviewingViewController">
        <MemberSignature Language="C#" Value="public static void CommitPreviewingViewController (this MonoTouch.WebKit.IWKUIDelegate This, MonoTouch.WebKit.WKWebView webView, MonoTouch.UIKit.UIViewController previewingViewController);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CommitPreviewingViewController(class MonoTouch.WebKit.IWKUIDelegate This, class MonoTouch.WebKit.WKWebView webView, class MonoTouch.UIKit.UIViewController previewingViewController) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKUIDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.WebKit.WKWebView" />
          <Parameter Name="previewingViewController" Type="MonoTouch.UIKit.UIViewController" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <param name="previewingViewController">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKUIDelegate_Extensions" Member="M:MonoTouch.WebKit.WKUIDelegate_Extensions.CommitPreviewingViewController(MonoTouch.WebKit.IWKUIDelegate,MonoTouch.WebKit.WKWebView,MonoTouch.UIKit.UIViewController)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKUIDelegate" />
      </Targets>
      <Member MemberName="CreateWebView">
        <MemberSignature Language="C#" Value="public static MonoTouch.WebKit.WKWebView CreateWebView (this MonoTouch.WebKit.IWKUIDelegate This, MonoTouch.WebKit.WKWebView webView, MonoTouch.WebKit.WKWebViewConfiguration configuration, MonoTouch.WebKit.WKNavigationAction navigationAction, MonoTouch.WebKit.WKWindowFeatures windowFeatures);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.WebKit.WKWebView CreateWebView(class MonoTouch.WebKit.IWKUIDelegate This, class MonoTouch.WebKit.WKWebView webView, class MonoTouch.WebKit.WKWebViewConfiguration configuration, class MonoTouch.WebKit.WKNavigationAction navigationAction, class MonoTouch.WebKit.WKWindowFeatures windowFeatures) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.WebKit.WKWebView</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKUIDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.WebKit.WKWebView" />
          <Parameter Name="configuration" Type="MonoTouch.WebKit.WKWebViewConfiguration" />
          <Parameter Name="navigationAction" Type="MonoTouch.WebKit.WKNavigationAction" />
          <Parameter Name="windowFeatures" Type="MonoTouch.WebKit.WKWindowFeatures" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <param name="configuration">To be added.</param>
          <param name="navigationAction">To be added.</param>
          <param name="windowFeatures">To be added.</param>
          <summary>Creates and configures a new <see cref="T:MonoTouch.WebKit.WKWebView" />.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKUIDelegate_Extensions" Member="M:MonoTouch.WebKit.WKUIDelegate_Extensions.CreateWebView(MonoTouch.WebKit.IWKUIDelegate,MonoTouch.WebKit.WKWebView,MonoTouch.WebKit.WKWebViewConfiguration,MonoTouch.WebKit.WKNavigationAction,MonoTouch.WebKit.WKWindowFeatures)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKUIDelegate" />
      </Targets>
      <Member MemberName="DidClose">
        <MemberSignature Language="C#" Value="public static void DidClose (this MonoTouch.WebKit.IWKUIDelegate This, MonoTouch.WebKit.WKWebView webView);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidClose(class MonoTouch.WebKit.IWKUIDelegate This, class MonoTouch.WebKit.WKWebView webView) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKUIDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.WebKit.WKWebView" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKUIDelegate_Extensions" Member="M:MonoTouch.WebKit.WKUIDelegate_Extensions.DidClose(MonoTouch.WebKit.IWKUIDelegate,MonoTouch.WebKit.WKWebView)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKUIDelegate" />
      </Targets>
      <Member MemberName="GetPreviewingViewController">
        <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIViewController GetPreviewingViewController (this MonoTouch.WebKit.IWKUIDelegate This, MonoTouch.WebKit.WKWebView webView, MonoTouch.WebKit.WKPreviewElementInfo elementInfo, MonoTouch.WebKit.IWKPreviewActionItem[] previewActions);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UIViewController GetPreviewingViewController(class MonoTouch.WebKit.IWKUIDelegate This, class MonoTouch.WebKit.WKWebView webView, class MonoTouch.WebKit.WKPreviewElementInfo elementInfo, class MonoTouch.WebKit.IWKPreviewActionItem[] previewActions) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.UIKit.UIViewController</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKUIDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.WebKit.WKWebView" />
          <Parameter Name="elementInfo" Type="MonoTouch.WebKit.WKPreviewElementInfo" />
          <Parameter Name="previewActions" Type="MonoTouch.WebKit.IWKPreviewActionItem[]" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <param name="elementInfo">To be added.</param>
          <param name="previewActions">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKUIDelegate_Extensions" Member="M:MonoTouch.WebKit.WKUIDelegate_Extensions.GetPreviewingViewController(MonoTouch.WebKit.IWKUIDelegate,MonoTouch.WebKit.WKWebView,MonoTouch.WebKit.WKPreviewElementInfo,MonoTouch.WebKit.IWKPreviewActionItem[])" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKUIDelegate" />
      </Targets>
      <Member MemberName="RunJavaScriptAlertPanel">
        <MemberSignature Language="C#" Value="public static void RunJavaScriptAlertPanel (this MonoTouch.WebKit.IWKUIDelegate This, MonoTouch.WebKit.WKWebView webView, string message, MonoTouch.WebKit.WKFrameInfo frame, Action completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RunJavaScriptAlertPanel(class MonoTouch.WebKit.IWKUIDelegate This, class MonoTouch.WebKit.WKWebView webView, string message, class MonoTouch.WebKit.WKFrameInfo frame, class System.Action completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKUIDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.WebKit.WKWebView" />
          <Parameter Name="message" Type="System.String" />
          <Parameter Name="frame" Type="MonoTouch.WebKit.WKFrameInfo" />
          <Parameter Name="completionHandler" Type="System.Action">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDAction))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <param name="message">To be added.</param>
          <param name="frame">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>Shows a JavaScript alert to the user.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKUIDelegate_Extensions" Member="M:MonoTouch.WebKit.WKUIDelegate_Extensions.RunJavaScriptAlertPanel(MonoTouch.WebKit.IWKUIDelegate,MonoTouch.WebKit.WKWebView,System.String,MonoTouch.WebKit.WKFrameInfo,System.Action)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKUIDelegate" />
      </Targets>
      <Member MemberName="RunJavaScriptConfirmPanel">
        <MemberSignature Language="C#" Value="public static void RunJavaScriptConfirmPanel (this MonoTouch.WebKit.IWKUIDelegate This, MonoTouch.WebKit.WKWebView webView, string message, MonoTouch.WebKit.WKFrameInfo frame, Action&lt;bool&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RunJavaScriptConfirmPanel(class MonoTouch.WebKit.IWKUIDelegate This, class MonoTouch.WebKit.WKWebView webView, string message, class MonoTouch.WebKit.WKFrameInfo frame, class System.Action`1&lt;bool&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKUIDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.WebKit.WKWebView" />
          <Parameter Name="message" Type="System.String" />
          <Parameter Name="frame" Type="MonoTouch.WebKit.WKFrameInfo" />
          <Parameter Name="completionHandler" Type="System.Action&lt;System.Boolean&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V12))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <param name="message">To be added.</param>
          <param name="frame">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>Shows a JavaScript confirmation dialog to the user.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKUIDelegate_Extensions" Member="M:MonoTouch.WebKit.WKUIDelegate_Extensions.RunJavaScriptConfirmPanel(MonoTouch.WebKit.IWKUIDelegate,MonoTouch.WebKit.WKWebView,System.String,MonoTouch.WebKit.WKFrameInfo,System.Action{System.Boolean})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKUIDelegate" />
      </Targets>
      <Member MemberName="RunJavaScriptTextInputPanel">
        <MemberSignature Language="C#" Value="public static void RunJavaScriptTextInputPanel (this MonoTouch.WebKit.IWKUIDelegate This, MonoTouch.WebKit.WKWebView webView, string prompt, string defaultText, MonoTouch.WebKit.WKFrameInfo frame, Action&lt;string&gt; completionHandler);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RunJavaScriptTextInputPanel(class MonoTouch.WebKit.IWKUIDelegate This, class MonoTouch.WebKit.WKWebView webView, string prompt, string defaultText, class MonoTouch.WebKit.WKFrameInfo frame, class System.Action`1&lt;string&gt; completionHandler) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Void</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKUIDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.WebKit.WKWebView" />
          <Parameter Name="prompt" Type="System.String" />
          <Parameter Name="defaultText" Type="System.String" />
          <Parameter Name="frame" Type="MonoTouch.WebKit.WKFrameInfo" />
          <Parameter Name="completionHandler" Type="System.Action&lt;System.String&gt;">
            <Attributes>
              <Attribute>
                <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V28))</AttributeName>
              </Attribute>
            </Attributes>
          </Parameter>
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <param name="prompt">To be added.</param>
          <param name="defaultText">To be added.This parameter can be .</param>
          <param name="frame">To be added.</param>
          <param name="completionHandler">To be added.</param>
          <summary>Shows a JavaScript text input box to the user.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKUIDelegate_Extensions" Member="M:MonoTouch.WebKit.WKUIDelegate_Extensions.RunJavaScriptTextInputPanel(MonoTouch.WebKit.IWKUIDelegate,MonoTouch.WebKit.WKWebView,System.String,System.String,MonoTouch.WebKit.WKFrameInfo,System.Action{System.String})" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:MonoTouch.WebKit.IWKUIDelegate" />
      </Targets>
      <Member MemberName="ShouldPreviewElement">
        <MemberSignature Language="C#" Value="public static bool ShouldPreviewElement (this MonoTouch.WebKit.IWKUIDelegate This, MonoTouch.WebKit.WKWebView webView, MonoTouch.WebKit.WKPreviewElementInfo elementInfo);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldPreviewElement(class MonoTouch.WebKit.IWKUIDelegate This, class MonoTouch.WebKit.WKWebView webView, class MonoTouch.WebKit.WKPreviewElementInfo elementInfo) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>System.Boolean</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="This" Type="MonoTouch.WebKit.IWKUIDelegate" RefType="this" />
          <Parameter Name="webView" Type="MonoTouch.WebKit.WKWebView" />
          <Parameter Name="elementInfo" Type="MonoTouch.WebKit.WKPreviewElementInfo" />
        </Parameters>
        <Docs>
          <param name="This">The instance on which this extension method operates on.</param>
          <param name="webView">To be added.</param>
          <param name="elementInfo">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="MonoTouch.WebKit.WKUIDelegate_Extensions" Member="M:MonoTouch.WebKit.WKUIDelegate_Extensions.ShouldPreviewElement(MonoTouch.WebKit.IWKUIDelegate,MonoTouch.WebKit.WKWebView,MonoTouch.WebKit.WKPreviewElementInfo)" />
      </Member>
    </ExtensionMethod>
    <ExtensionMethod>
      <Targets>
        <Target Type="T:SystemConfiguration.StatusCode" />
      </Targets>
      <Member MemberName="GetDomain" apistyle="unified">
        <MemberSignature Language="C#" Value="public static MonoTouch.Foundation.NSString GetDomain (this SystemConfiguration.StatusCode self);" />
        <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.Foundation.NSString GetDomain(valuetype SystemConfiguration.StatusCode self) cil managed" />
        <MemberType>ExtensionMethod</MemberType>
        <ReturnValue>
          <ReturnType>MonoTouch.Foundation.NSString</ReturnType>
        </ReturnValue>
        <Parameters>
          <Parameter Name="self" Type="SystemConfiguration.StatusCode" RefType="this" />
        </Parameters>
        <Docs>
          <param name="self">To be added.</param>
          <summary>To be added.</summary>
        </Docs>
        <Link Type="SystemConfiguration.StatusCodeExtensions" Member="M:SystemConfiguration.StatusCodeExtensions.GetDomain(SystemConfiguration.StatusCode)" />
      </Member>
    </ExtensionMethod>
  </ExtensionMethods>
</Overview>
