<Type Name="IMKReverseGeocoderDelegate" FullName="MapKit.IMKReverseGeocoderDelegate">
  <TypeSignature Language="C#" Value="public interface IMKReverseGeocoderDelegate : IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMKReverseGeocoderDelegate implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:MapKit.IMKReverseGeocoderDelegate" />
  <TypeSignature Language="F#" Value="type IMKReverseGeocoderDelegate = interface&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="MKReverseGeocoderDelegate", WrapperType=typeof(MapKit.MKReverseGeocoderDelegateWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="FailedWithError", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(MapKit.MKReverseGeocoder), typeof(Foundation.NSError) }, Selector="reverseGeocoder:didFailWithError:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="FoundWithPlacemark", ParameterByRef=new System.Boolean[] { false, false }, ParameterType=new System.Type[] { typeof(MapKit.MKReverseGeocoder), typeof(MapKit.MKPlacemark) }, Selector="reverseGeocoder:didFindPlacemark:")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface representing the required methods (if any) of the protocol <see cref="T:MapKit.MKReverseGeocoderDelegate" />.</summary>
    <remarks>
      <para>This interface contains the required methods (if any) from the protocol defined by <see cref="T:MapKit.MKReverseGeocoderDelegate" />.</para>
      <para>If developers create classes that implement this interface, the implementation methods will automatically be exported to Objective-C with the matching signature from the method defined in the <see cref="T:MapKit.MKReverseGeocoderDelegate" /> protocol.</para>
      <para>Optional methods (if any) are provided by the <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=Map%20Kit%20MKReverse%20Geocoder%20Delegate_%20Extensions&amp;scope=Xamarin" title="T:MapKit.MKReverseGeocoderDelegate_Extensions">T:MapKit.MKReverseGeocoderDelegate_Extensions</a></format> class as extension methods to the interface, allowing developers to invoke any optional methods on the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FailedWithError">
      <MemberSignature Language="C#" Value="public void FailedWithError (MapKit.MKReverseGeocoder geocoder, Foundation.NSError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FailedWithError(class MapKit.MKReverseGeocoder geocoder, class Foundation.NSError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:MapKit.IMKReverseGeocoderDelegate.FailedWithError(MapKit.MKReverseGeocoder,Foundation.NSError)" />
      <MemberSignature Language="F#" Value="abstract member FailedWithError : MapKit.MKReverseGeocoder * Foundation.NSError -&gt; unit" Usage="iMKReverseGeocoderDelegate.FailedWithError (geocoder, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("reverseGeocoder:didFailWithError:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geocoder" Type="MapKit.MKReverseGeocoder" />
        <Parameter Name="error" Type="Foundation.NSError" />
      </Parameters>
      <Docs>
        <param name="geocoder">To be added.</param>
        <param name="error">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FoundWithPlacemark">
      <MemberSignature Language="C#" Value="public void FoundWithPlacemark (MapKit.MKReverseGeocoder geocoder, MapKit.MKPlacemark placemark);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FoundWithPlacemark(class MapKit.MKReverseGeocoder geocoder, class MapKit.MKPlacemark placemark) cil managed" />
      <MemberSignature Language="DocId" Value="M:MapKit.IMKReverseGeocoderDelegate.FoundWithPlacemark(MapKit.MKReverseGeocoder,MapKit.MKPlacemark)" />
      <MemberSignature Language="F#" Value="abstract member FoundWithPlacemark : MapKit.MKReverseGeocoder * MapKit.MKPlacemark -&gt; unit" Usage="iMKReverseGeocoderDelegate.FoundWithPlacemark (geocoder, placemark)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("reverseGeocoder:didFindPlacemark:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geocoder" Type="MapKit.MKReverseGeocoder" />
        <Parameter Name="placemark" Type="MapKit.MKPlacemark" />
      </Parameters>
      <Docs>
        <param name="geocoder">To be added.</param>
        <param name="placemark">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
