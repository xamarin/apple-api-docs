<Type Name="INFCTag" FullName="CoreNFC.INFCTag">
  <TypeSignature Language="C#" Value="public interface INFCTag : Foundation.INSCopying, Foundation.INSSecureCoding, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INFCTag implements class Foundation.INSCoding, class Foundation.INSCopying, class Foundation.INSSecureCoding, class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:CoreNFC.INFCTag" />
  <TypeSignature Language="F#" Value="type INFCTag = interface&#xA;    interface INativeObject&#xA;    interface IDisposable&#xA;    interface INSCoding&#xA;    interface INSCopying&#xA;    interface INSSecureCoding" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Foundation.INSCoding</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Foundation.INSCopying</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Foundation.INSSecureCoding</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Protocol(Name="NFCTag", WrapperType=typeof(CoreNFC.NFCTagWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.UnsafeUnretained, GetterSelector="type", IsProperty=true, IsRequired=true, IsStatic=false, Name="Type", PropertyType=typeof(CoreNFC.NFCTagType), Selector="type")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.Weak, GetterSelector="session", IsProperty=true, IsRequired=true, IsStatic=false, Name="Session", PropertyType=typeof(CoreNFC.NFCReaderSession), Selector="session")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Foundation.ProtocolMember(ArgumentSemantic=ObjCRuntime.ArgumentSemantic.None, GetterSelector="isAvailable", IsProperty=true, IsRequired=true, IsStatic=false, Name="Available", PropertyType=typeof(System.Boolean), Selector="available")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 11, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface defining the common features of all NFC tags.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Available">
      <MemberSignature Language="C#" Value="public bool Available { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Available" />
      <MemberSignature Language="DocId" Value="P:CoreNFC.INFCTag.Available" />
      <MemberSignature Language="F#" Value="member this.Available : bool" Usage="CoreNFC.INFCTag.Available" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("isAvailable")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the tag is available for reading.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public CoreNFC.NFCReaderSession Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CoreNFC.NFCReaderSession Session" />
      <MemberSignature Language="DocId" Value="P:CoreNFC.INFCTag.Session" />
      <MemberSignature Language="F#" Value="member this.Session : CoreNFC.NFCReaderSession" Usage="CoreNFC.INFCTag.Session" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("session", ObjCRuntime.ArgumentSemantic.Weak)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreNFC.NFCReaderSession</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:CoreNFC.NFCReaderSession" /> that provided the tag.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public CoreNFC.NFCTagType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CoreNFC.NFCTagType Type" />
      <MemberSignature Language="DocId" Value="P:CoreNFC.INFCTag.Type" />
      <MemberSignature Language="F#" Value="member this.Type : CoreNFC.NFCTagType" Usage="CoreNFC.INFCTag.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.iOS</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("type", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CoreNFC.NFCTagType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the kind of NFC tag.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
