<Type Name="CXProviderDelegate" FullName="MonoTouch.CallKit.CXProviderDelegate">
  <TypeSignature Language="C#" Value="public abstract class CXProviderDelegate : MonoTouch.Foundation.NSObject, IDisposable, MonoTouch.CallKit.ICXProviderDelegate" apistyle="unified" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CXProviderDelegate extends MonoTouch.Foundation.NSObject implements class MonoTouch.CallKit.ICXProviderDelegate, class MonoTouch.ObjCRuntime.INativeObject, class System.IDisposable" apistyle="unified" />
  <AssemblyInfo apistyle="unified">
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>MonoTouch.CallKit.ICXProviderDelegate</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Model</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Protocol</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Register("CXProviderDelegate", false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 10, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
    <related type="PlatformDocAPI" href="https://developer.apple.com/reference/CallKit/CXProviderDelegate">Apple documentation for <c>CXProviderDelegate</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor" apistyle="unified">
      <MemberSignature Language="C#" Value="protected CXProviderDelegate ();" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" apistyle="unified" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Delegate object for receiving system messages and performing call actions.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor" apistyle="unified">
      <MemberSignature Language="C#" Value="protected CXProviderDelegate (MonoTouch.Foundation.NSObjectFlag t);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" apistyle="unified" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor" apistyle="unified">
      <MemberSignature Language="C#" Value="protected CXProviderDelegate (IntPtr handle);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" apistyle="unified" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidActivateAudioSession" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void DidActivateAudioSession (MonoTouch.CallKit.CXProvider provider, MonoTouch.AVFoundation.AVAudioSession audioSession);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidActivateAudioSession(class MonoTouch.CallKit.CXProvider provider, class MonoTouch.AVFoundation.AVAudioSession audioSession) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("provider:didActivateAudioSession:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
        <Parameter Name="audioSession" Type="MonoTouch.AVFoundation.AVAudioSession" />
      </Parameters>
      <Docs>
        <param name="provider">The provider to which the <paramref name="This" /> provider delegate belongs.</param>
        <param name="audioSession">To be added.</param>
        <summary>The system activated a telephony-priority audio session for the call.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidBegin" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void DidBegin (MonoTouch.CallKit.CXProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidBegin(class MonoTouch.CallKit.CXProvider provider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("providerDidBegin:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
      </Parameters>
      <Docs>
        <param name="provider">The provider to which the provider delegate belongs.</param>
        <summary>The system began a call for the app.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidDeactivateAudioSession" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void DidDeactivateAudioSession (MonoTouch.CallKit.CXProvider provider, MonoTouch.AVFoundation.AVAudioSession audioSession);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidDeactivateAudioSession(class MonoTouch.CallKit.CXProvider provider, class MonoTouch.AVFoundation.AVAudioSession audioSession) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("provider:didDeactivateAudioSession:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
        <Parameter Name="audioSession" Type="MonoTouch.AVFoundation.AVAudioSession" />
      </Parameters>
      <Docs>
        <param name="provider">The provider to which the provider delegate belongs.</param>
        <param name="audioSession">The audio session that was deactivated.</param>
        <summary>The system deactivated an audio session that the app had been using for a call.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidReset" apistyle="unified">
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DidReset(class MonoTouch.CallKit.CXProvider provider) cil managed" />
      <MemberSignature Language="C#" Value="public abstract void DidReset (MonoTouch.CallKit.CXProvider provider);" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("providerDidReset:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
      </Parameters>
      <Docs>
        <param name="provider">The provider to which the provider delegate belongs.</param>
        <summary>The provider reset.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteTransaction" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual bool ExecuteTransaction (MonoTouch.CallKit.CXProvider provider, MonoTouch.CallKit.CXTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ExecuteTransaction(class MonoTouch.CallKit.CXProvider provider, class MonoTouch.CallKit.CXTransaction transaction) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("provider:executeTransaction:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
        <Parameter Name="transaction" Type="MonoTouch.CallKit.CXTransaction" />
      </Parameters>
      <Docs>
        <param name="provider">The provider to which the provider delegate belongs.</param>
        <param name="transaction">The transaction to run.</param>
        <summary>Atomically runs the actions that are contained in the <paramref name="transaction" />.</summary>
        <returns>
          <see langword="true" /> if the transaction succeeded. Otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformAnswerCallAction" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void PerformAnswerCallAction (MonoTouch.CallKit.CXProvider provider, MonoTouch.CallKit.CXAnswerCallAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformAnswerCallAction(class MonoTouch.CallKit.CXProvider provider, class MonoTouch.CallKit.CXAnswerCallAction action) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("provider:performAnswerCallAction:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
        <Parameter Name="action" Type="MonoTouch.CallKit.CXAnswerCallAction" />
      </Parameters>
      <Docs>
        <param name="provider">The provider to which the provider delegate belongs.</param>
        <param name="action">The answer call action to perform.</param>
        <summary>Performs an answer call action.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformEndCallAction" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void PerformEndCallAction (MonoTouch.CallKit.CXProvider provider, MonoTouch.CallKit.CXEndCallAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformEndCallAction(class MonoTouch.CallKit.CXProvider provider, class MonoTouch.CallKit.CXEndCallAction action) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("provider:performEndCallAction:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
        <Parameter Name="action" Type="MonoTouch.CallKit.CXEndCallAction" />
      </Parameters>
      <Docs>
        <param name="provider">The provider to which the provider delegate belongs.</param>
        <param name="action">The end call action to perform.</param>
        <summary>Performs an end call action.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformPlayDtmfCallAction" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void PerformPlayDtmfCallAction (MonoTouch.CallKit.CXProvider provider, MonoTouch.CallKit.CXPlayDtmfCallAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformPlayDtmfCallAction(class MonoTouch.CallKit.CXProvider provider, class MonoTouch.CallKit.CXPlayDtmfCallAction action) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("provider:performPlayDTMFCallAction:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
        <Parameter Name="action" Type="MonoTouch.CallKit.CXPlayDtmfCallAction" />
      </Parameters>
      <Docs>
        <param name="provider">The provider to which the provider delegate belongs.</param>
        <param name="action">The DTMF play call action to perform.</param>
        <summary>Performs a DTMF play call action.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformSetGroupCallAction" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void PerformSetGroupCallAction (MonoTouch.CallKit.CXProvider provider, MonoTouch.CallKit.CXSetGroupCallAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformSetGroupCallAction(class MonoTouch.CallKit.CXProvider provider, class MonoTouch.CallKit.CXSetGroupCallAction action) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("provider:performSetGroupCallAction:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
        <Parameter Name="action" Type="MonoTouch.CallKit.CXSetGroupCallAction" />
      </Parameters>
      <Docs>
        <param name="provider">The provider to which the provider delegate belongs.</param>
        <param name="action">The set group call action to perform.</param>
        <summary>Performs a set group call action.</summary>
        <remarks>This method can also be used to unset a group call.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformSetHeldCallAction" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void PerformSetHeldCallAction (MonoTouch.CallKit.CXProvider provider, MonoTouch.CallKit.CXSetHeldCallAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformSetHeldCallAction(class MonoTouch.CallKit.CXProvider provider, class MonoTouch.CallKit.CXSetHeldCallAction action) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("provider:performSetHeldCallAction:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
        <Parameter Name="action" Type="MonoTouch.CallKit.CXSetHeldCallAction" />
      </Parameters>
      <Docs>
        <param name="provider">The provider to which the provider delegate belongs.</param>
        <param name="action">The hold call action to perform.</param>
        <summary>Performs a hold call action.</summary>
        <remarks>This method can also be used to resume, or unhold, a call.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformSetMutedCallAction" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void PerformSetMutedCallAction (MonoTouch.CallKit.CXProvider provider, MonoTouch.CallKit.CXSetMutedCallAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformSetMutedCallAction(class MonoTouch.CallKit.CXProvider provider, class MonoTouch.CallKit.CXSetMutedCallAction action) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("provider:performSetMutedCallAction:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
        <Parameter Name="action" Type="MonoTouch.CallKit.CXSetMutedCallAction" />
      </Parameters>
      <Docs>
        <param name="provider">The provider to which the provider delegate belongs.</param>
        <param name="action">The set muted call action to perform.</param>
        <summary>Performs a set muted call action.</summary>
        <remarks>This method can also be used to unmute a call.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformStartCallAction" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void PerformStartCallAction (MonoTouch.CallKit.CXProvider provider, MonoTouch.CallKit.CXStartCallAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformStartCallAction(class MonoTouch.CallKit.CXProvider provider, class MonoTouch.CallKit.CXStartCallAction action) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("provider:performStartCallAction:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
        <Parameter Name="action" Type="MonoTouch.CallKit.CXStartCallAction" />
      </Parameters>
      <Docs>
        <param name="provider">The provider to which the provider delegate belongs.</param>
        <param name="action">The start call action to perform.</param>
        <summary>Performs a start call action.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimedOutPerformingAction" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void TimedOutPerformingAction (MonoTouch.CallKit.CXProvider provider, MonoTouch.CallKit.CXAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TimedOutPerformingAction(class MonoTouch.CallKit.CXProvider provider, class MonoTouch.CallKit.CXAction action) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("provider:timedOutPerformingAction:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="MonoTouch.CallKit.CXProvider" />
        <Parameter Name="action" Type="MonoTouch.CallKit.CXAction" />
      </Parameters>
      <Docs>
        <param name="provider">The provider to which the provider delegate belongs.</param>
        <param name="action">The action that timed out.</param>
        <summary>Method that is called when a timeout is hit before an action is finished performing.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
