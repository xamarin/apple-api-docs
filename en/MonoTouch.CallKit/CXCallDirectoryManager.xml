<Type Name="CXCallDirectoryManager" FullName="MonoTouch.CallKit.CXCallDirectoryManager">
  <TypeSignature Language="C#" Value="public class CXCallDirectoryManager : MonoTouch.Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CXCallDirectoryManager extends MonoTouch.Foundation.NSObject" />
  <AssemblyInfo apistyle="unified">
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoTouch.Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Register("CXCallDirectoryManager", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.ObjCRuntime.Introduced(MonoTouch.ObjCRuntime.PlatformName.iOS, 10, 0, MonoTouch.ObjCRuntime.PlatformArchitecture.None, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Manages a call directory extension.</summary>
    <remarks>To be added.</remarks>
    <related type="PlatformDocAPI" href="https://developer.apple.com/reference/CallKit/CXCallDirectoryManager">Apple documentation for <c>CXCallDirectoryManager</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor" apistyle="unified">
      <MemberSignature Language="C#" Value="public CXCallDirectoryManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("init")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor" apistyle="unified">
      <MemberSignature Language="C#" Value="protected CXCallDirectoryManager (MonoTouch.Foundation.NSObjectFlag t);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class MonoTouch.Foundation.NSObjectFlag t) cil managed" apistyle="unified" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="MonoTouch.Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor" apistyle="unified">
      <MemberSignature Language="C#" Value="protected CXCallDirectoryManager (IntPtr handle);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" apistyle="unified" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle" apistyle="unified">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnabledStatusForExtension" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void GetEnabledStatusForExtension (string identifier, Action&lt;MonoTouch.CallKit.CXCallDirectoryEnabledStatus,MonoTouch.Foundation.NSError&gt; completion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetEnabledStatusForExtension(string identifier, class System.Action`2&lt;valuetype MonoTouch.CallKit.CXCallDirectoryEnabledStatus, class MonoTouch.Foundation.NSError&gt; completion) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("getEnabledStatusForExtensionWithIdentifier:completionHandler:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
        <Parameter Name="completion" Type="System.Action&lt;MonoTouch.CallKit.CXCallDirectoryEnabledStatus,MonoTouch.Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity2V3))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="identifier">The unique id of the directory extension to check.</param>
        <param name="completion">An action that returns <see langword="void" /> and takes a <see cref="T:MonoTouch.CallKit.CXCallDirectoryEnabledStatus" /> and a <see cref="T:MonoTouch.Foundation.NSError" />.</param>
        <summary>Passe the enabled status of the identified extension, along with an error (if present), to <paramref name="completion" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnabledStatusForExtensionAsync" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;MonoTouch.CallKit.CXCallDirectoryEnabledStatus&gt; GetEnabledStatusForExtensionAsync (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype MonoTouch.CallKit.CXCallDirectoryEnabledStatus&gt; GetEnabledStatusForExtensionAsync(string identifier) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;MonoTouch.CallKit.CXCallDirectoryEnabledStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier">The unique id of the directory extension to check.</param>
        <summary>Passes the enabled status of the identified directory extension to the task that it returns</summary>
        <returns>A task that processes the enabled status of the extension.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReloadExtension" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual void ReloadExtension (string identifier, Action&lt;MonoTouch.Foundation.NSError&gt; completion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReloadExtension(string identifier, class System.Action`1&lt;class MonoTouch.Foundation.NSError&gt; completion) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("reloadExtensionWithIdentifier:completionHandler:")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
        <Parameter Name="completion" Type="System.Action&lt;MonoTouch.Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>MonoTouch.ObjCRuntime.BlockProxy(typeof(MonoTouch.ObjCRuntime.Trampolines/NIDActionArity1V8))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="identifier">The unique id of the directory extension to check.</param>
        <param name="completion">An action that returns <see langword="void" /> and takes a <see cref="T:MonoTouch.CallKit.CXCallDirectoryEnabledStatus" /> and a <see cref="T:MonoTouch.Foundation.NSError" />.</param>
        <summary>Reloads the identified directory extension and passes an error (if present) to <paramref name="completion" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReloadExtensionAsync" apistyle="unified">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ReloadExtensionAsync (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ReloadExtensionAsync(string identifier) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier">The unique id of the directory extension to check.</param>
        <summary>Asynchronously reloads the identified directory extension.</summary>
        <returns>A task that reloads the extension.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SharedInstance" apistyle="unified">
      <MemberSignature Language="C#" Value="public static MonoTouch.CallKit.CXCallDirectoryManager SharedInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class MonoTouch.CallKit.CXCallDirectoryManager SharedInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("sharedInstance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.CallKit.CXCallDirectoryManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the shared call directory.</summary>
        <value>The shared call directory.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
