<Type Name="CXProviderDelegate_Extensions" FullName="CallKit.CXProviderDelegate_Extensions">
  <TypeSignature Language="C#" Value="public static class CXProviderDelegate_Extensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CXProviderDelegate_Extensions extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>Extension methods to the <see cref="T:CallKit.ICXProviderDelegate" /> interface to support all the methods from the <see cref="T:CallKit.CXProviderDelegate" /> protocol.</para>
    </summary>
    <remarks>
      <para>The extension methods for <see cref="T:CallKit.ICXProviderDelegate" /> allow developers to treat instances of the interface as having all the optional methods of the original <see cref="T:CallKit.CXProviderDelegate" /> protocol.   Since the interface only contains the required members, these extension methods allow developers to call the optional members of the protocol.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DidActivateAudioSession">
      <MemberSignature Language="C#" Value="public static void DidActivateAudioSession (this CallKit.ICXProviderDelegate This, CallKit.CXProvider provider, AVFoundation.AVAudioSession audioSession);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidActivateAudioSession(class CallKit.ICXProviderDelegate This, class CallKit.CXProvider provider, class AVFoundation.AVAudioSession audioSession) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="CallKit.ICXProviderDelegate" RefType="this" />
        <Parameter Name="provider" Type="CallKit.CXProvider" />
        <Parameter Name="audioSession" Type="AVFoundation.AVAudioSession" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="provider">The provider to which the <paramref name="This" /> provider delegate belongs.</param>
        <param name="audioSession">To be added.</param>
        <summary>The system activated a telephony-priority audio session for the call.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidBegin">
      <MemberSignature Language="C#" Value="public static void DidBegin (this CallKit.ICXProviderDelegate This, CallKit.CXProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidBegin(class CallKit.ICXProviderDelegate This, class CallKit.CXProvider provider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="CallKit.ICXProviderDelegate" RefType="this" />
        <Parameter Name="provider" Type="CallKit.CXProvider" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="provider">The provider to which the provider delegate belongs.</param>
        <summary>The system began a call for the app.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DidDeactivateAudioSession">
      <MemberSignature Language="C#" Value="public static void DidDeactivateAudioSession (this CallKit.ICXProviderDelegate This, CallKit.CXProvider provider, AVFoundation.AVAudioSession audioSession);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DidDeactivateAudioSession(class CallKit.ICXProviderDelegate This, class CallKit.CXProvider provider, class AVFoundation.AVAudioSession audioSession) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="CallKit.ICXProviderDelegate" RefType="this" />
        <Parameter Name="provider" Type="CallKit.CXProvider" />
        <Parameter Name="audioSession" Type="AVFoundation.AVAudioSession" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="provider">The provider to which the provider delegate belongs.</param>
        <param name="audioSession">The audio session that was deactivated.</param>
        <summary>The system deactivated an audio session that the app had been using for a call.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteTransaction">
      <MemberSignature Language="C#" Value="public static bool ExecuteTransaction (this CallKit.ICXProviderDelegate This, CallKit.CXProvider provider, CallKit.CXTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ExecuteTransaction(class CallKit.ICXProviderDelegate This, class CallKit.CXProvider provider, class CallKit.CXTransaction transaction) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="CallKit.ICXProviderDelegate" RefType="this" />
        <Parameter Name="provider" Type="CallKit.CXProvider" />
        <Parameter Name="transaction" Type="CallKit.CXTransaction" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="provider">The provider to which the provider delegate belongs.</param>
        <param name="transaction">The transaction to run.</param>
        <summary>Atomically runs the actions that are contained in the <paramref name="transaction" />.</summary>
        <returns>
          <see langword="true" /> if the transaction succeeded. Otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformAnswerCallAction">
      <MemberSignature Language="C#" Value="public static void PerformAnswerCallAction (this CallKit.ICXProviderDelegate This, CallKit.CXProvider provider, CallKit.CXAnswerCallAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformAnswerCallAction(class CallKit.ICXProviderDelegate This, class CallKit.CXProvider provider, class CallKit.CXAnswerCallAction action) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="CallKit.ICXProviderDelegate" RefType="this" />
        <Parameter Name="provider" Type="CallKit.CXProvider" />
        <Parameter Name="action" Type="CallKit.CXAnswerCallAction" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="provider">The provider to which the provider delegate belongs.</param>
        <param name="action">The answer call action to perform.</param>
        <summary>Performs an answer call action.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformEndCallAction">
      <MemberSignature Language="C#" Value="public static void PerformEndCallAction (this CallKit.ICXProviderDelegate This, CallKit.CXProvider provider, CallKit.CXEndCallAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformEndCallAction(class CallKit.ICXProviderDelegate This, class CallKit.CXProvider provider, class CallKit.CXEndCallAction action) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="CallKit.ICXProviderDelegate" RefType="this" />
        <Parameter Name="provider" Type="CallKit.CXProvider" />
        <Parameter Name="action" Type="CallKit.CXEndCallAction" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="provider">The provider to which the provider delegate belongs.</param>
        <param name="action">The end call action to perform.</param>
        <summary>Performs an end call action.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformPlayDtmfCallAction">
      <MemberSignature Language="C#" Value="public static void PerformPlayDtmfCallAction (this CallKit.ICXProviderDelegate This, CallKit.CXProvider provider, CallKit.CXPlayDtmfCallAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformPlayDtmfCallAction(class CallKit.ICXProviderDelegate This, class CallKit.CXProvider provider, class CallKit.CXPlayDtmfCallAction action) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="CallKit.ICXProviderDelegate" RefType="this" />
        <Parameter Name="provider" Type="CallKit.CXProvider" />
        <Parameter Name="action" Type="CallKit.CXPlayDtmfCallAction" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="provider">The provider to which the provider delegate belongs.</param>
        <param name="action">The DTMF play call action to perform.</param>
        <summary>Performs a DTMF play call action.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformSetGroupCallAction">
      <MemberSignature Language="C#" Value="public static void PerformSetGroupCallAction (this CallKit.ICXProviderDelegate This, CallKit.CXProvider provider, CallKit.CXSetGroupCallAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformSetGroupCallAction(class CallKit.ICXProviderDelegate This, class CallKit.CXProvider provider, class CallKit.CXSetGroupCallAction action) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="CallKit.ICXProviderDelegate" RefType="this" />
        <Parameter Name="provider" Type="CallKit.CXProvider" />
        <Parameter Name="action" Type="CallKit.CXSetGroupCallAction" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="provider">The provider to which the provider delegate belongs.</param>
        <param name="action">The set group call action to perform.</param>
        <summary>Performs a set group call action.</summary>
        <remarks>This method can also be used to unset a group call.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformSetHeldCallAction">
      <MemberSignature Language="C#" Value="public static void PerformSetHeldCallAction (this CallKit.ICXProviderDelegate This, CallKit.CXProvider provider, CallKit.CXSetHeldCallAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformSetHeldCallAction(class CallKit.ICXProviderDelegate This, class CallKit.CXProvider provider, class CallKit.CXSetHeldCallAction action) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="CallKit.ICXProviderDelegate" RefType="this" />
        <Parameter Name="provider" Type="CallKit.CXProvider" />
        <Parameter Name="action" Type="CallKit.CXSetHeldCallAction" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="provider">The provider to which the provider delegate belongs.</param>
        <param name="action">The hold call action to perform.</param>
        <summary>Performs a hold call action.</summary>
        <remarks>This method can also be used to resume, or unhold, a call.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformSetMutedCallAction">
      <MemberSignature Language="C#" Value="public static void PerformSetMutedCallAction (this CallKit.ICXProviderDelegate This, CallKit.CXProvider provider, CallKit.CXSetMutedCallAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformSetMutedCallAction(class CallKit.ICXProviderDelegate This, class CallKit.CXProvider provider, class CallKit.CXSetMutedCallAction action) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="CallKit.ICXProviderDelegate" RefType="this" />
        <Parameter Name="provider" Type="CallKit.CXProvider" />
        <Parameter Name="action" Type="CallKit.CXSetMutedCallAction" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="provider">The provider to which the provider delegate belongs.</param>
        <param name="action">The set muted call action to perform.</param>
        <summary>Performs a set muted call action.</summary>
        <remarks>This method can also be used to unmute a call.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformStartCallAction">
      <MemberSignature Language="C#" Value="public static void PerformStartCallAction (this CallKit.ICXProviderDelegate This, CallKit.CXProvider provider, CallKit.CXStartCallAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerformStartCallAction(class CallKit.ICXProviderDelegate This, class CallKit.CXProvider provider, class CallKit.CXStartCallAction action) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="CallKit.ICXProviderDelegate" RefType="this" />
        <Parameter Name="provider" Type="CallKit.CXProvider" />
        <Parameter Name="action" Type="CallKit.CXStartCallAction" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="provider">The provider to which the provider delegate belongs.</param>
        <param name="action">The start call action to perform.</param>
        <summary>Performs a start call action.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimedOutPerformingAction">
      <MemberSignature Language="C#" Value="public static void TimedOutPerformingAction (this CallKit.ICXProviderDelegate This, CallKit.CXProvider provider, CallKit.CXAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TimedOutPerformingAction(class CallKit.ICXProviderDelegate This, class CallKit.CXProvider provider, class CallKit.CXAction action) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="This" Type="CallKit.ICXProviderDelegate" RefType="this" />
        <Parameter Name="provider" Type="CallKit.CXProvider" />
        <Parameter Name="action" Type="CallKit.CXAction" />
      </Parameters>
      <Docs>
        <param name="This">The instance on which this extension method operates.</param>
        <param name="provider">The provider to which the provider delegate belongs.</param>
        <param name="action">The action that timed out.</param>
        <summary>Method that is called when a timeout is hit before an action is finished performing.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
