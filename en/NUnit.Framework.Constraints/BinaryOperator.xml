<Type Name="BinaryOperator" FullName="NUnit.Framework.Constraints.BinaryOperator">
  <TypeSignature Language="C#" Value="public abstract class BinaryOperator : NUnit.Framework.Constraints.ConstraintOperator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BinaryOperator extends NUnit.Framework.Constraints.ConstraintOperator" />
  <TypeSignature Language="DocId" Value="T:NUnit.Framework.Constraints.BinaryOperator" />
  <TypeSignature Language="F#" Value="type BinaryOperator = class&#xA;    inherit ConstraintOperator" />
  <AssemblyInfo>
    <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
    <AssemblyVersion>0.6.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>NUnit.Framework.Constraints.ConstraintOperator</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Abstract base class for all binary operators
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BinaryOperator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.BinaryOperator.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyOperator">
      <MemberSignature Language="C#" Value="public abstract NUnit.Framework.Constraints.Constraint ApplyOperator (NUnit.Framework.Constraints.Constraint left, NUnit.Framework.Constraints.Constraint right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class NUnit.Framework.Constraints.Constraint ApplyOperator(class NUnit.Framework.Constraints.Constraint left, class NUnit.Framework.Constraints.Constraint right) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.BinaryOperator.ApplyOperator(NUnit.Framework.Constraints.Constraint,NUnit.Framework.Constraints.Constraint)" />
      <MemberSignature Language="F#" Value="abstract member ApplyOperator : NUnit.Framework.Constraints.Constraint * NUnit.Framework.Constraints.Constraint -&gt; NUnit.Framework.Constraints.Constraint" Usage="binaryOperator.ApplyOperator (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.Constraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="NUnit.Framework.Constraints.Constraint" />
        <Parameter Name="right" Type="NUnit.Framework.Constraints.Constraint" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
            Abstract method that produces a constraint by applying
            the operator to its left and right constraint arguments.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeftPrecedence">
      <MemberSignature Language="C#" Value="public override int LeftPrecedence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LeftPrecedence" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Constraints.BinaryOperator.LeftPrecedence" />
      <MemberSignature Language="F#" Value="member this.LeftPrecedence : int" Usage="NUnit.Framework.Constraints.BinaryOperator.LeftPrecedence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the left precedence of the operator
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reduce">
      <MemberSignature Language="C#" Value="public override void Reduce (NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack stack);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reduce(class NUnit.Framework.Constraints.ConstraintBuilder/ConstraintStack stack) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.BinaryOperator.Reduce(NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack)" />
      <MemberSignature Language="F#" Value="override this.Reduce : NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack -&gt; unit" Usage="binaryOperator.Reduce stack" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stack" Type="NUnit.Framework.Constraints.ConstraintBuilder+ConstraintStack" />
      </Parameters>
      <Docs>
        <param name="stack"></param>
        <summary>
            Reduce produces a constraint from the operator and
            any arguments. It takes the arguments from the constraint
            stack and pushes the resulting constraint on it.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightPrecedence">
      <MemberSignature Language="C#" Value="public override int RightPrecedence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RightPrecedence" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Constraints.BinaryOperator.RightPrecedence" />
      <MemberSignature Language="F#" Value="member this.RightPrecedence : int" Usage="NUnit.Framework.Constraints.BinaryOperator.RightPrecedence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the right precedence of the operator
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
