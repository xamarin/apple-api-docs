<Type Name="ContainsConstraint" FullName="NUnit.Framework.Constraints.ContainsConstraint">
  <TypeSignature Language="C#" Value="public class ContainsConstraint : NUnit.Framework.Constraints.Constraint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContainsConstraint extends NUnit.Framework.Constraints.Constraint" />
  <TypeSignature Language="DocId" Value="T:NUnit.Framework.Constraints.ContainsConstraint" />
  <TypeSignature Language="F#" Value="type ContainsConstraint = class&#xA;    inherit Constraint" />
  <AssemblyInfo>
    <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
    <AssemblyVersion>0.6.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>NUnit.Framework.Constraints.Constraint</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            ContainsConstraint tests a whether a string contains a substring
            or a collection contains an object. It postpones the decision of
            which test to use until the type of the actual argument is known.
            This allows testing whether a string is contained in a collection
            or as a substring of another string using the same syntax.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContainsConstraint (object expected);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object expected) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.ContainsConstraint.#ctor(System.Object)" />
      <MemberSignature Language="F#" Value="new NUnit.Framework.Constraints.ContainsConstraint : obj -&gt; NUnit.Framework.Constraints.ContainsConstraint" Usage="new NUnit.Framework.Constraints.ContainsConstraint expected" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expected" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expected">The expected.</param>
        <summary>
            Initializes a new instance of the <see cref="T:ContainsConstraint" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreCase">
      <MemberSignature Language="C#" Value="public NUnit.Framework.Constraints.ContainsConstraint IgnoreCase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class NUnit.Framework.Constraints.ContainsConstraint IgnoreCase" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Constraints.ContainsConstraint.IgnoreCase" />
      <MemberSignature Language="F#" Value="member this.IgnoreCase : NUnit.Framework.Constraints.ContainsConstraint" Usage="NUnit.Framework.Constraints.ContainsConstraint.IgnoreCase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.ContainsConstraint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Flag the constraint to ignore case and return self.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public override bool Matches (object actual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Matches(object actual) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.ContainsConstraint.Matches(System.Object)" />
      <MemberSignature Language="F#" Value="override this.Matches : obj -&gt; bool" Usage="containsConstraint.Matches actual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actual" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="actual">The value to be tested</param>
        <summary>
            Test whether the constraint is satisfied by a given value
            </summary>
        <returns>True for success, false for failure</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Using">
      <MemberSignature Language="C#" Value="public NUnit.Framework.Constraints.ContainsConstraint Using (System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class NUnit.Framework.Constraints.ContainsConstraint Using(class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.ContainsConstraint.Using(System.Collections.IComparer)" />
      <MemberSignature Language="F#" Value="member this.Using : System.Collections.IComparer -&gt; NUnit.Framework.Constraints.ContainsConstraint" Usage="containsConstraint.Using comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.ContainsConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Using">
      <MemberSignature Language="C#" Value="public NUnit.Framework.Constraints.ContainsConstraint Using (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class NUnit.Framework.Constraints.ContainsConstraint Using(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.ContainsConstraint.Using(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="F#" Value="member this.Using : System.Collections.IEqualityComparer -&gt; NUnit.Framework.Constraints.ContainsConstraint" Usage="containsConstraint.Using comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.ContainsConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Using&lt;T&gt;">
      <MemberSignature Language="C#" Value="public NUnit.Framework.Constraints.ContainsConstraint Using&lt;T&gt; (System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class NUnit.Framework.Constraints.ContainsConstraint Using&lt;T&gt;(class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.ContainsConstraint.Using``1(System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="F#" Value="member this.Using : System.Collections.Generic.IComparer&lt;'T&gt; -&gt; NUnit.Framework.Constraints.ContainsConstraint" Usage="containsConstraint.Using comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.ContainsConstraint</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="comparer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Using&lt;T&gt;">
      <MemberSignature Language="C#" Value="public NUnit.Framework.Constraints.ContainsConstraint Using&lt;T&gt; (System.Collections.Generic.IEqualityComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class NUnit.Framework.Constraints.ContainsConstraint Using&lt;T&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.ContainsConstraint.Using``1(System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="F#" Value="member this.Using : System.Collections.Generic.IEqualityComparer&lt;'T&gt; -&gt; NUnit.Framework.Constraints.ContainsConstraint" Usage="containsConstraint.Using comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.ContainsConstraint</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="comparer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Using&lt;T&gt;">
      <MemberSignature Language="C#" Value="public NUnit.Framework.Constraints.ContainsConstraint Using&lt;T&gt; (Comparison&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class NUnit.Framework.Constraints.ContainsConstraint Using&lt;T&gt;(class System.Comparison`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.ContainsConstraint.Using``1(System.Comparison{``0})" />
      <MemberSignature Language="F#" Value="member this.Using : Comparison&lt;'T&gt; -&gt; NUnit.Framework.Constraints.ContainsConstraint" Usage="containsConstraint.Using comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.ContainsConstraint</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="comparer" Type="System.Comparison&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="comparer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteDescriptionTo">
      <MemberSignature Language="C#" Value="public override void WriteDescriptionTo (NUnit.Framework.Constraints.MessageWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteDescriptionTo(class NUnit.Framework.Constraints.MessageWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.ContainsConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)" />
      <MemberSignature Language="F#" Value="override this.WriteDescriptionTo : NUnit.Framework.Constraints.MessageWriter -&gt; unit" Usage="containsConstraint.WriteDescriptionTo writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="NUnit.Framework.Constraints.MessageWriter" />
      </Parameters>
      <Docs>
        <param name="writer">The writer on which the description is displayed</param>
        <summary>
            Write the constraint description to a MessageWriter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
