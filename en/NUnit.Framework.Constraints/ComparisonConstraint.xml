<Type Name="ComparisonConstraint" FullName="NUnit.Framework.Constraints.ComparisonConstraint">
  <TypeSignature Language="C#" Value="public abstract class ComparisonConstraint : NUnit.Framework.Constraints.Constraint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ComparisonConstraint extends NUnit.Framework.Constraints.Constraint" />
  <TypeSignature Language="DocId" Value="T:NUnit.Framework.Constraints.ComparisonConstraint" />
  <TypeSignature Language="F#" Value="type ComparisonConstraint = class&#xA;    inherit Constraint" />
  <AssemblyInfo>
    <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
    <AssemblyVersion>0.6.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>NUnit.Framework.Constraints.Constraint</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Abstract base class for constraints that compare values to
            determine if one is greater than, equal to or less than
            the other.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComparisonConstraint (object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.ComparisonConstraint.#ctor(System.Object)" />
      <MemberSignature Language="F#" Value="new NUnit.Framework.Constraints.ComparisonConstraint : obj -&gt; NUnit.Framework.Constraints.ComparisonConstraint" Usage="new NUnit.Framework.Constraints.ComparisonConstraint arg" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="arg">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComparisonConstraint (object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.ComparisonConstraint.#ctor(System.Object,System.Object)" />
      <MemberSignature Language="F#" Value="new NUnit.Framework.Constraints.ComparisonConstraint : obj * obj -&gt; NUnit.Framework.Constraints.ComparisonConstraint" Usage="new NUnit.Framework.Constraints.ComparisonConstraint (arg1, arg2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="arg1">To be added.</param>
        <param name="arg2">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="comparer">
      <MemberSignature Language="C#" Value="protected NUnit.Framework.Constraints.ComparisonAdapter comparer;" />
      <MemberSignature Language="ILAsm" Value=".field family class NUnit.Framework.Constraints.ComparisonAdapter comparer" />
      <MemberSignature Language="DocId" Value="F:NUnit.Framework.Constraints.ComparisonConstraint.comparer" />
      <MemberSignature Language="F#" Value="val mutable comparer : NUnit.Framework.Constraints.ComparisonAdapter" Usage="NUnit.Framework.Constraints.ComparisonConstraint.comparer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.ComparisonAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Using">
      <MemberSignature Language="C#" Value="public NUnit.Framework.Constraints.ComparisonConstraint Using (System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class NUnit.Framework.Constraints.ComparisonConstraint Using(class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.ComparisonConstraint.Using(System.Collections.IComparer)" />
      <MemberSignature Language="F#" Value="member this.Using : System.Collections.IComparer -&gt; NUnit.Framework.Constraints.ComparisonConstraint" Usage="comparisonConstraint.Using comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.ComparisonConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">To be added.</param>
        <summary>
            Modifies the constraint to use an IComparer and returns self
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Using&lt;T&gt;">
      <MemberSignature Language="C#" Value="public NUnit.Framework.Constraints.ComparisonConstraint Using&lt;T&gt; (System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class NUnit.Framework.Constraints.ComparisonConstraint Using&lt;T&gt;(class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.ComparisonConstraint.Using``1(System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="F#" Value="member this.Using : System.Collections.Generic.IComparer&lt;'T&gt; -&gt; NUnit.Framework.Constraints.ComparisonConstraint" Usage="comparisonConstraint.Using comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.ComparisonConstraint</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="comparer">To be added.</param>
        <summary>
            Modifies the constraint to use an IComparer&lt;T&gt; and returns self
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Using&lt;T&gt;">
      <MemberSignature Language="C#" Value="public NUnit.Framework.Constraints.ComparisonConstraint Using&lt;T&gt; (Comparison&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class NUnit.Framework.Constraints.ComparisonConstraint Using&lt;T&gt;(class System.Comparison`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.ComparisonConstraint.Using``1(System.Comparison{``0})" />
      <MemberSignature Language="F#" Value="member this.Using : Comparison&lt;'T&gt; -&gt; NUnit.Framework.Constraints.ComparisonConstraint" Usage="comparisonConstraint.Using comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.ComparisonConstraint</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="comparer" Type="System.Comparison&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="comparer">To be added.</param>
        <summary>
            Modifies the constraint to use a Comparison&lt;T&gt; and returns self
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
