<Type Name="ThrowsConstraint" FullName="NUnit.Framework.Constraints.ThrowsConstraint">
  <TypeSignature Language="C#" Value="public class ThrowsConstraint : NUnit.Framework.Constraints.PrefixConstraint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ThrowsConstraint extends NUnit.Framework.Constraints.PrefixConstraint" />
  <TypeSignature Language="DocId" Value="T:NUnit.Framework.Constraints.ThrowsConstraint" />
  <TypeSignature Language="F#" Value="type ThrowsConstraint = class&#xA;    inherit PrefixConstraint" />
  <AssemblyInfo>
    <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
    <AssemblyVersion>0.6.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>NUnit.Framework.Constraints.PrefixConstraint</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            ThrowsConstraint is used to test the exception thrown by
            a delegate by applying a constraint to it.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThrowsConstraint (NUnit.Framework.Constraints.Constraint baseConstraint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class NUnit.Framework.Constraints.Constraint baseConstraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.ThrowsConstraint.#ctor(NUnit.Framework.Constraints.Constraint)" />
      <MemberSignature Language="F#" Value="new NUnit.Framework.Constraints.ThrowsConstraint : NUnit.Framework.Constraints.Constraint -&gt; NUnit.Framework.Constraints.ThrowsConstraint" Usage="new NUnit.Framework.Constraints.ThrowsConstraint baseConstraint" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseConstraint" Type="NUnit.Framework.Constraints.Constraint" />
      </Parameters>
      <Docs>
        <param name="baseConstraint">A constraint to apply to the caught exception.</param>
        <summary>
            Initializes a new instance of the <see cref="T:ThrowsConstraint" /> class,
            using a constraint to be applied to the exception.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActualException">
      <MemberSignature Language="C#" Value="public Exception ActualException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception ActualException" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Constraints.ThrowsConstraint.ActualException" />
      <MemberSignature Language="F#" Value="member this.ActualException : Exception" Usage="NUnit.Framework.Constraints.ThrowsConstraint.ActualException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the actual exception thrown - used by Assert.Throws.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStringRepresentation">
      <MemberSignature Language="C#" Value="protected override string GetStringRepresentation ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetStringRepresentation() cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.ThrowsConstraint.GetStringRepresentation" />
      <MemberSignature Language="F#" Value="override this.GetStringRepresentation : unit -&gt; string" Usage="throwsConstraint.GetStringRepresentation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public override bool Matches (object actual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Matches(object actual) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.ThrowsConstraint.Matches(System.Object)" />
      <MemberSignature Language="F#" Value="override this.Matches : obj -&gt; bool" Usage="throwsConstraint.Matches actual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actual" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="actual">A delegate representing the code to be tested</param>
        <summary>
            Executes the code of the delegate and captures any exception.
            If a non-null base constraint was provided, it applies that
            constraint to the exception.
            </summary>
        <returns>True if an exception is thrown and the constraint succeeds, otherwise false</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Matches&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override bool Matches&lt;T&gt; (NUnit.Framework.Constraints.ActualValueDelegate&lt;T&gt; del);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Matches&lt;T&gt;(class NUnit.Framework.Constraints.ActualValueDelegate`1&lt;!!T&gt; del) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.ThrowsConstraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})" />
      <MemberSignature Language="F#" Value="override this.Matches : NUnit.Framework.Constraints.ActualValueDelegate&lt;'T&gt; -&gt; bool" Usage="throwsConstraint.Matches del" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="del" Type="NUnit.Framework.Constraints.ActualValueDelegate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="del">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteActualValueTo">
      <MemberSignature Language="C#" Value="public override void WriteActualValueTo (NUnit.Framework.Constraints.MessageWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteActualValueTo(class NUnit.Framework.Constraints.MessageWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.ThrowsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)" />
      <MemberSignature Language="F#" Value="override this.WriteActualValueTo : NUnit.Framework.Constraints.MessageWriter -&gt; unit" Usage="throwsConstraint.WriteActualValueTo writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="NUnit.Framework.Constraints.MessageWriter" />
      </Parameters>
      <Docs>
        <param name="writer">The writer on which the actual value is displayed</param>
        <summary>
            Write the actual value for a failing constraint test to a
            MessageWriter. The default implementation simply writes
            the raw value of actual, leaving it to the writer to
            perform any formatting.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteDescriptionTo">
      <MemberSignature Language="C#" Value="public override void WriteDescriptionTo (NUnit.Framework.Constraints.MessageWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteDescriptionTo(class NUnit.Framework.Constraints.MessageWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.ThrowsConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)" />
      <MemberSignature Language="F#" Value="override this.WriteDescriptionTo : NUnit.Framework.Constraints.MessageWriter -&gt; unit" Usage="throwsConstraint.WriteDescriptionTo writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="NUnit.Framework.Constraints.MessageWriter" />
      </Parameters>
      <Docs>
        <param name="writer">The writer on which the description is displayed</param>
        <summary>
            Write the constraint description to a MessageWriter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
