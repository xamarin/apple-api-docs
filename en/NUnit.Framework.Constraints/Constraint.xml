<Type Name="Constraint" FullName="NUnit.Framework.Constraints.Constraint">
  <TypeSignature Language="C#" Value="public abstract class Constraint : NUnit.Framework.Constraints.IResolveConstraint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Constraint extends System.Object implements class NUnit.Framework.Constraints.IResolveConstraint" />
  <TypeSignature Language="DocId" Value="T:NUnit.Framework.Constraints.Constraint" />
  <TypeSignature Language="F#" Value="type Constraint = class&#xA;    interface IResolveConstraint" />
  <AssemblyInfo>
    <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
    <AssemblyVersion>0.6.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>NUnit.Framework.Constraints.IResolveConstraint</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            The Constraint class is the base of all built-in constraints
            within NUnit. It provides the operator overloads used to combine
            constraints.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Constraint ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.Constraint.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Construct a constraint with no arguments
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Constraint (object arg);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.Constraint.#ctor(System.Object)" />
      <MemberSignature Language="F#" Value="new NUnit.Framework.Constraints.Constraint : obj -&gt; NUnit.Framework.Constraints.Constraint" Usage="new NUnit.Framework.Constraints.Constraint arg" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="arg">To be added.</param>
        <summary>
            Construct a constraint with one argument
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Constraint (object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.Constraint.#ctor(System.Object,System.Object)" />
      <MemberSignature Language="F#" Value="new NUnit.Framework.Constraints.Constraint : obj * obj -&gt; NUnit.Framework.Constraints.Constraint" Usage="new NUnit.Framework.Constraints.Constraint (arg1, arg2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="arg1">To be added.</param>
        <param name="arg2">To be added.</param>
        <summary>
            Construct a constraint with two arguments
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="actual">
      <MemberSignature Language="C#" Value="protected object actual;" />
      <MemberSignature Language="ILAsm" Value=".field family object actual" />
      <MemberSignature Language="DocId" Value="F:NUnit.Framework.Constraints.Constraint.actual" />
      <MemberSignature Language="F#" Value="val mutable actual : obj" Usage="NUnit.Framework.Constraints.Constraint.actual" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The actual value being tested against a constraint
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="After">
      <MemberSignature Language="C#" Value="public NUnit.Framework.Constraints.DelayedConstraint After (int delayInMilliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class NUnit.Framework.Constraints.DelayedConstraint After(int32 delayInMilliseconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.Constraint.After(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.After : int -&gt; NUnit.Framework.Constraints.DelayedConstraint" Usage="constraint.After delayInMilliseconds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.DelayedConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delayInMilliseconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="delayInMilliseconds">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="After">
      <MemberSignature Language="C#" Value="public NUnit.Framework.Constraints.DelayedConstraint After (int delayInMilliseconds, int pollingInterval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class NUnit.Framework.Constraints.DelayedConstraint After(int32 delayInMilliseconds, int32 pollingInterval) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.Constraint.After(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.After : int * int -&gt; NUnit.Framework.Constraints.DelayedConstraint" Usage="constraint.After (delayInMilliseconds, pollingInterval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.DelayedConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delayInMilliseconds" Type="System.Int32" />
        <Parameter Name="pollingInterval" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="delayInMilliseconds">To be added.</param>
        <param name="pollingInterval">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public NUnit.Framework.Constraints.ConstraintExpression And { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class NUnit.Framework.Constraints.ConstraintExpression And" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Constraints.Constraint.And" />
      <MemberSignature Language="F#" Value="member this.And : NUnit.Framework.Constraints.ConstraintExpression" Usage="NUnit.Framework.Constraints.Constraint.And" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.ConstraintExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns a ConstraintExpression by appending And
            to the current constraint.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="protected string DisplayName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Constraints.Constraint.DisplayName" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string with get, set" Usage="NUnit.Framework.Constraints.Constraint.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The display name of this Constraint for use by ToString().
            The default value is the name of the constraint with
            trailing "Constraint" removed. Derived classes may set
            this to another name in their constructors.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStringRepresentation">
      <MemberSignature Language="C#" Value="protected virtual string GetStringRepresentation ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetStringRepresentation() cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.Constraint.GetStringRepresentation" />
      <MemberSignature Language="F#" Value="abstract member GetStringRepresentation : unit -&gt; string&#xA;override this.GetStringRepresentation : unit -&gt; string" Usage="constraint.GetStringRepresentation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public abstract bool Matches (object actual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Matches(object actual) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.Constraint.Matches(System.Object)" />
      <MemberSignature Language="F#" Value="abstract member Matches : obj -&gt; bool" Usage="constraint.Matches actual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actual" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="actual">The value to be tested</param>
        <summary>
            Test whether the constraint is satisfied by a given value
            </summary>
        <returns>True for success, false for failure</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Matches&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual bool Matches&lt;T&gt; (NUnit.Framework.Constraints.ActualValueDelegate&lt;T&gt; del);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Matches&lt;T&gt;(class NUnit.Framework.Constraints.ActualValueDelegate`1&lt;!!T&gt; del) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.Constraint.Matches``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})" />
      <MemberSignature Language="F#" Value="abstract member Matches : NUnit.Framework.Constraints.ActualValueDelegate&lt;'T&gt; -&gt; bool&#xA;override this.Matches : NUnit.Framework.Constraints.ActualValueDelegate&lt;'T&gt; -&gt; bool" Usage="constraint.Matches del" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="del" Type="NUnit.Framework.Constraints.ActualValueDelegate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="del">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Matches&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual bool Matches&lt;T&gt; (ref T actual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Matches&lt;T&gt;(!!T&amp; actual) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.Constraint.Matches``1(``0@)" />
      <MemberSignature Language="F#" Value="abstract member Matches :  -&gt; bool&#xA;override this.Matches :  -&gt; bool" Usage="constraint.Matches actual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="actual" Type="T" RefType="ref" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="actual">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NUnit.Framework.Constraints.IResolveConstraint.Resolve">
      <MemberSignature Language="C#" Value="NUnit.Framework.Constraints.Constraint IResolveConstraint.Resolve ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class NUnit.Framework.Constraints.Constraint NUnit.Framework.Constraints.IResolveConstraint.Resolve() cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.Constraint.NUnit#Framework#Constraints#IResolveConstraint#Resolve" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:NUnit.Framework.Constraints.IResolveConstraint.Resolve</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.Constraint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_BitwiseAnd">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.Constraint operator &amp; (NUnit.Framework.Constraints.Constraint left, NUnit.Framework.Constraints.Constraint right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class NUnit.Framework.Constraints.Constraint op_BitwiseAnd(class NUnit.Framework.Constraints.Constraint left, class NUnit.Framework.Constraints.Constraint right) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.Constraint.op_BitwiseAnd(NUnit.Framework.Constraints.Constraint,NUnit.Framework.Constraints.Constraint)" />
      <MemberSignature Language="F#" Value="static member ( &amp;&amp;&amp; ) : NUnit.Framework.Constraints.Constraint * NUnit.Framework.Constraints.Constraint -&gt; NUnit.Framework.Constraints.Constraint" Usage="left &amp;&amp;&amp; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.Constraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="NUnit.Framework.Constraints.Constraint" />
        <Parameter Name="right" Type="NUnit.Framework.Constraints.Constraint" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
            This operator creates a constraint that is satisfied only if both
            argument constraints are satisfied.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_BitwiseOr">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.Constraint operator | (NUnit.Framework.Constraints.Constraint left, NUnit.Framework.Constraints.Constraint right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class NUnit.Framework.Constraints.Constraint op_BitwiseOr(class NUnit.Framework.Constraints.Constraint left, class NUnit.Framework.Constraints.Constraint right) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.Constraint.op_BitwiseOr(NUnit.Framework.Constraints.Constraint,NUnit.Framework.Constraints.Constraint)" />
      <MemberSignature Language="F#" Value="static member ( ||| ) : NUnit.Framework.Constraints.Constraint * NUnit.Framework.Constraints.Constraint -&gt; NUnit.Framework.Constraints.Constraint" Usage="left ||| right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.Constraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="NUnit.Framework.Constraints.Constraint" />
        <Parameter Name="right" Type="NUnit.Framework.Constraints.Constraint" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
            This operator creates a constraint that is satisfied if either
            of the argument constraints is satisfied.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LogicalNot">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.Constraint operator ! (NUnit.Framework.Constraints.Constraint constraint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class NUnit.Framework.Constraints.Constraint op_LogicalNot(class NUnit.Framework.Constraints.Constraint constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.Constraint.op_LogicalNot(NUnit.Framework.Constraints.Constraint)" />
      <MemberSignature Language="F#" Value="static member ( ~~~ ) : NUnit.Framework.Constraints.Constraint -&gt; NUnit.Framework.Constraints.Constraint" Usage="~~~ constraint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.Constraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="NUnit.Framework.Constraints.Constraint" />
      </Parameters>
      <Docs>
        <param name="constraint">To be added.</param>
        <summary>
            This operator creates a constraint that is satisfied if the
            argument constraint is not satisfied.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public NUnit.Framework.Constraints.ConstraintExpression Or { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class NUnit.Framework.Constraints.ConstraintExpression Or" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Constraints.Constraint.Or" />
      <MemberSignature Language="F#" Value="member this.Or : NUnit.Framework.Constraints.ConstraintExpression" Usage="NUnit.Framework.Constraints.Constraint.Or" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.ConstraintExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns a ConstraintExpression by appending Or
            to the current constraint.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.Constraint.ToString" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="constraint.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Default override of ToString returns the constraint DisplayName
            followed by any arguments within angle brackets.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UNSET">
      <MemberSignature Language="C#" Value="protected static object UNSET;" />
      <MemberSignature Language="ILAsm" Value=".field family static object UNSET" />
      <MemberSignature Language="DocId" Value="F:NUnit.Framework.Constraints.Constraint.UNSET" />
      <MemberSignature Language="F#" Value=" staticval mutable UNSET : obj" Usage="NUnit.Framework.Constraints.Constraint.UNSET" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Static UnsetObject used to detect derived constraints
            failing to set the actual value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public NUnit.Framework.Constraints.ConstraintExpression With { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class NUnit.Framework.Constraints.ConstraintExpression With" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Constraints.Constraint.With" />
      <MemberSignature Language="F#" Value="member this.With : NUnit.Framework.Constraints.ConstraintExpression" Usage="NUnit.Framework.Constraints.Constraint.With" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.ConstraintExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns a ConstraintExpression by appending And
            to the current constraint.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteActualValueTo">
      <MemberSignature Language="C#" Value="public virtual void WriteActualValueTo (NUnit.Framework.Constraints.MessageWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteActualValueTo(class NUnit.Framework.Constraints.MessageWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.Constraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)" />
      <MemberSignature Language="F#" Value="abstract member WriteActualValueTo : NUnit.Framework.Constraints.MessageWriter -&gt; unit&#xA;override this.WriteActualValueTo : NUnit.Framework.Constraints.MessageWriter -&gt; unit" Usage="constraint.WriteActualValueTo writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="NUnit.Framework.Constraints.MessageWriter" />
      </Parameters>
      <Docs>
        <param name="writer">The writer on which the actual value is displayed</param>
        <summary>
            Write the actual value for a failing constraint test to a
            MessageWriter. The default implementation simply writes
            the raw value of actual, leaving it to the writer to
            perform any formatting.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteDescriptionTo">
      <MemberSignature Language="C#" Value="public abstract void WriteDescriptionTo (NUnit.Framework.Constraints.MessageWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteDescriptionTo(class NUnit.Framework.Constraints.MessageWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.Constraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)" />
      <MemberSignature Language="F#" Value="abstract member WriteDescriptionTo : NUnit.Framework.Constraints.MessageWriter -&gt; unit" Usage="constraint.WriteDescriptionTo writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="NUnit.Framework.Constraints.MessageWriter" />
      </Parameters>
      <Docs>
        <param name="writer">The writer on which the description is displayed</param>
        <summary>
            Write the constraint description to a MessageWriter
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteMessageTo">
      <MemberSignature Language="C#" Value="public virtual void WriteMessageTo (NUnit.Framework.Constraints.MessageWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteMessageTo(class NUnit.Framework.Constraints.MessageWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Constraints.Constraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)" />
      <MemberSignature Language="F#" Value="abstract member WriteMessageTo : NUnit.Framework.Constraints.MessageWriter -&gt; unit&#xA;override this.WriteMessageTo : NUnit.Framework.Constraints.MessageWriter -&gt; unit" Usage="constraint.WriteMessageTo writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="NUnit.Framework.Constraints.MessageWriter" />
      </Parameters>
      <Docs>
        <param name="writer">The MessageWriter on which to display the message</param>
        <summary>
            Write the failure message to the MessageWriter provided
            as an argument. The default implementation simply passes
            the constraint and the actual value to the writer, which
            then displays the constraint description and the value.
            Constraints that need to provide additional details,
            such as where the error occured can override this.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
