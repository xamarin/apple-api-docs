<Type Name="ResolvableConstraintExpression" FullName="NUnit.Framework.Constraints.ResolvableConstraintExpression">
  <TypeSignature Language="C#" Value="public class ResolvableConstraintExpression : NUnit.Framework.Constraints.ConstraintExpression, NUnit.Framework.Constraints.IResolveConstraint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResolvableConstraintExpression extends NUnit.Framework.Constraints.ConstraintExpression implements class NUnit.Framework.Constraints.IResolveConstraint" />
  <AssemblyInfo>
    <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
    <AssemblyVersion>0.6.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>NUnit.Framework.Constraints.ConstraintExpression</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>NUnit.Framework.Constraints.IResolveConstraint</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            ResolvableConstraintExpression is used to represent a compound
            constraint being constructed at a point where the last operator
            may either terminate the expression or may have additional
            qualifying constraints added to it.
            It is used, for example, for a Property element or for
            an Exception element, either of which may be optionally
            followed by constraints that apply to the property or
            exception.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResolvableConstraintExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Create a new instance of ResolvableConstraintExpression
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResolvableConstraintExpression (NUnit.Framework.Constraints.ConstraintBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class NUnit.Framework.Constraints.ConstraintBuilder builder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="NUnit.Framework.Constraints.ConstraintBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <summary>
            Create a new instance of ResolvableConstraintExpression,
            passing in a pre-populated ConstraintBuilder.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public NUnit.Framework.Constraints.ConstraintExpression And { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class NUnit.Framework.Constraints.ConstraintExpression And" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.ConstraintExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Appends an And Operator to the expression
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NUnit.Framework.Constraints.IResolveConstraint.Resolve">
      <MemberSignature Language="C#" Value="NUnit.Framework.Constraints.Constraint IResolveConstraint.Resolve ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class NUnit.Framework.Constraints.Constraint NUnit.Framework.Constraints.IResolveConstraint.Resolve() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.Constraint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Resolve the current expression to a Constraint
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_BitwiseAnd">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.Constraint op_BitwiseAnd (NUnit.Framework.Constraints.Constraint left, NUnit.Framework.Constraints.ResolvableConstraintExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class NUnit.Framework.Constraints.Constraint op_BitwiseAnd(class NUnit.Framework.Constraints.Constraint left, class NUnit.Framework.Constraints.ResolvableConstraintExpression right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.Constraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="NUnit.Framework.Constraints.Constraint" />
        <Parameter Name="right" Type="NUnit.Framework.Constraints.ResolvableConstraintExpression" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_BitwiseAnd">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.Constraint op_BitwiseAnd (NUnit.Framework.Constraints.ResolvableConstraintExpression left, NUnit.Framework.Constraints.Constraint right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class NUnit.Framework.Constraints.Constraint op_BitwiseAnd(class NUnit.Framework.Constraints.ResolvableConstraintExpression left, class NUnit.Framework.Constraints.Constraint right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.Constraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="NUnit.Framework.Constraints.ResolvableConstraintExpression" />
        <Parameter Name="right" Type="NUnit.Framework.Constraints.Constraint" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_BitwiseAnd">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.Constraint op_BitwiseAnd (NUnit.Framework.Constraints.ResolvableConstraintExpression left, NUnit.Framework.Constraints.ResolvableConstraintExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class NUnit.Framework.Constraints.Constraint op_BitwiseAnd(class NUnit.Framework.Constraints.ResolvableConstraintExpression left, class NUnit.Framework.Constraints.ResolvableConstraintExpression right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.Constraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="NUnit.Framework.Constraints.ResolvableConstraintExpression" />
        <Parameter Name="right" Type="NUnit.Framework.Constraints.ResolvableConstraintExpression" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_BitwiseOr">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.Constraint op_BitwiseOr (NUnit.Framework.Constraints.Constraint left, NUnit.Framework.Constraints.ResolvableConstraintExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class NUnit.Framework.Constraints.Constraint op_BitwiseOr(class NUnit.Framework.Constraints.Constraint left, class NUnit.Framework.Constraints.ResolvableConstraintExpression right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.Constraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="NUnit.Framework.Constraints.Constraint" />
        <Parameter Name="right" Type="NUnit.Framework.Constraints.ResolvableConstraintExpression" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_BitwiseOr">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.Constraint op_BitwiseOr (NUnit.Framework.Constraints.ResolvableConstraintExpression left, NUnit.Framework.Constraints.Constraint right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class NUnit.Framework.Constraints.Constraint op_BitwiseOr(class NUnit.Framework.Constraints.ResolvableConstraintExpression left, class NUnit.Framework.Constraints.Constraint right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.Constraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="NUnit.Framework.Constraints.ResolvableConstraintExpression" />
        <Parameter Name="right" Type="NUnit.Framework.Constraints.Constraint" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_BitwiseOr">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.Constraint op_BitwiseOr (NUnit.Framework.Constraints.ResolvableConstraintExpression left, NUnit.Framework.Constraints.ResolvableConstraintExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class NUnit.Framework.Constraints.Constraint op_BitwiseOr(class NUnit.Framework.Constraints.ResolvableConstraintExpression left, class NUnit.Framework.Constraints.ResolvableConstraintExpression right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.Constraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="NUnit.Framework.Constraints.ResolvableConstraintExpression" />
        <Parameter Name="right" Type="NUnit.Framework.Constraints.ResolvableConstraintExpression" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LogicalNot">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Constraints.Constraint op_LogicalNot (NUnit.Framework.Constraints.ResolvableConstraintExpression constraint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class NUnit.Framework.Constraints.Constraint op_LogicalNot(class NUnit.Framework.Constraints.ResolvableConstraintExpression constraint) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.Constraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="NUnit.Framework.Constraints.ResolvableConstraintExpression" />
      </Parameters>
      <Docs>
        <param name="constraint">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public NUnit.Framework.Constraints.ConstraintExpression Or { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class NUnit.Framework.Constraints.ConstraintExpression Or" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Constraints.ConstraintExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Appends an Or operator to the expression.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
