<Type Name="AudioContext" FullName="OpenTK.Audio.AudioContext">
  <TypeSignature Language="C#" Value="public sealed class AudioContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed AudioContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:OpenTK.Audio.AudioContext" />
  <TypeSignature Language="F#" Value="type AudioContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>OpenTK-1.0</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Provides methods to instantiate, use and destroy an audio context for playback.
            Static methods are provided to list available devices known by the driver.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AudioContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.AudioContext.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Runs before the actual class constructor, to load available devices.
            </summary>
        <remarks>To be added.</remarks>
        <!--
		<private />
        <static />
-->
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AudioContext (string device);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string device) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.AudioContext.#ctor(System.String)" />
      <MemberSignature Language="F#" Value="new OpenTK.Audio.AudioContext : string -&gt; OpenTK.Audio.AudioContext" Usage="new OpenTK.Audio.AudioContext device" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="device" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="device">The device name that will host this instance.</param>
        <summary>
            Constructs a new AudioContext instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AudioContext (string device, int freq);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string device, int32 freq) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.AudioContext.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="F#" Value="new OpenTK.Audio.AudioContext : string * int -&gt; OpenTK.Audio.AudioContext" Usage="new OpenTK.Audio.AudioContext (device, freq)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="device" Type="System.String" />
        <Parameter Name="freq" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="device">The name of the audio device to use.</param>
        <param name="freq">Frequency for mixing output buffer, in units of Hz. Pass 0 for driver default.</param>
        <summary>Constructs a new AudioContext, using the specified audio device and device parameters.</summary>
        <remarks>
            Use AudioContext.AvailableDevices to obtain a list of all available audio devices.
            devices.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AudioContext (string device, int freq, int refresh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string device, int32 freq, int32 refresh) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.AudioContext.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="new OpenTK.Audio.AudioContext : string * int * int -&gt; OpenTK.Audio.AudioContext" Usage="new OpenTK.Audio.AudioContext (device, freq, refresh)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="device" Type="System.String" />
        <Parameter Name="freq" Type="System.Int32" />
        <Parameter Name="refresh" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="device">The name of the audio device to use.</param>
        <param name="freq">Frequency for mixing output buffer, in units of Hz. Pass 0 for driver default.</param>
        <param name="refresh">Refresh intervals, in units of Hz. Pass 0 for driver default.</param>
        <summary>Constructs a new AudioContext, using the specified audio device and device parameters.</summary>
        <remarks>
            Use AudioContext.AvailableDevices to obtain a list of all available audio devices.
            devices.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AudioContext (string device, int freq, int refresh, bool sync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string device, int32 freq, int32 refresh, bool sync) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.AudioContext.#ctor(System.String,System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="F#" Value="new OpenTK.Audio.AudioContext : string * int * int * bool -&gt; OpenTK.Audio.AudioContext" Usage="new OpenTK.Audio.AudioContext (device, freq, refresh, sync)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="device" Type="System.String" />
        <Parameter Name="freq" Type="System.Int32" />
        <Parameter Name="refresh" Type="System.Int32" />
        <Parameter Name="sync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="device">The name of the audio device to use.</param>
        <param name="freq">Frequency for mixing output buffer, in units of Hz. Pass 0 for driver default.</param>
        <param name="refresh">Refresh intervals, in units of Hz. Pass 0 for driver default.</param>
        <param name="sync">Flag, indicating a synchronous context.</param>
        <summary>Constructs a new AudioContext, using the specified audio device and device parameters.</summary>
        <remarks>
            Use AudioContext.AvailableDevices to obtain a list of all available audio devices.
            devices.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AudioContext (string device, int freq, int refresh, bool sync, bool enableEfx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string device, int32 freq, int32 refresh, bool sync, bool enableEfx) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.AudioContext.#ctor(System.String,System.Int32,System.Int32,System.Boolean,System.Boolean)" />
      <MemberSignature Language="F#" Value="new OpenTK.Audio.AudioContext : string * int * int * bool * bool -&gt; OpenTK.Audio.AudioContext" Usage="new OpenTK.Audio.AudioContext (device, freq, refresh, sync, enableEfx)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="device" Type="System.String" />
        <Parameter Name="freq" Type="System.Int32" />
        <Parameter Name="refresh" Type="System.Int32" />
        <Parameter Name="sync" Type="System.Boolean" />
        <Parameter Name="enableEfx" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="device">The device descriptor obtained through AudioContext.AvailableDevices.</param>
        <param name="freq">Frequency for mixing output buffer, in units of Hz. Pass 0 for driver default.</param>
        <param name="refresh">Refresh intervals, in units of Hz. Pass 0 for driver default.</param>
        <param name="sync">Flag, indicating a synchronous context.</param>
        <param name="enableEfx">Indicates whether the EFX extension should be initialized, if present.</param>
        <summary>Creates the audio context using the specified device and device parameters.</summary>
        <remarks>
          <para>For maximum compatibility, you are strongly recommended to use the default constructor.</para>
          <para>Multiple AudioContexts are not supported at this point.</para>
          <para>
            The number of auxilliary EFX sends depends on the audio hardware and drivers. Most Realtek devices, as well
            as the Creative SB Live!, support 1 auxilliary send. Creative's Audigy and X-Fi series support 4 sends.
            Values higher than supported will be clamped by the driver.
            </para>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Occurs when the device string is invalid.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Occurs when a specified parameter is invalid.</exception>
        <exception cref="T:OpenTK.Audio.AudioDeviceException">
            Occurs when the specified device is not available, or is in use by another program.
            </exception>
        <exception cref="T:OpenTK.Audio.AudioContextException">
            Occurs when an audio context could not be created with the specified parameters.
            </exception>
        <exception cref="T:System.NotSupportedException">
            Occurs when an AudioContext already exists.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AudioContext (string device, int freq, int refresh, bool sync, bool enableEfx, OpenTK.Audio.AudioContext.MaxAuxiliarySends efxMaxAuxSends);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string device, int32 freq, int32 refresh, bool sync, bool enableEfx, valuetype OpenTK.Audio.AudioContext/MaxAuxiliarySends efxMaxAuxSends) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.AudioContext.#ctor(System.String,System.Int32,System.Int32,System.Boolean,System.Boolean,OpenTK.Audio.AudioContext.MaxAuxiliarySends)" />
      <MemberSignature Language="F#" Value="new OpenTK.Audio.AudioContext : string * int * int * bool * bool * OpenTK.Audio.AudioContext.MaxAuxiliarySends -&gt; OpenTK.Audio.AudioContext" Usage="new OpenTK.Audio.AudioContext (device, freq, refresh, sync, enableEfx, efxMaxAuxSends)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="device" Type="System.String" />
        <Parameter Name="freq" Type="System.Int32" />
        <Parameter Name="refresh" Type="System.Int32" />
        <Parameter Name="sync" Type="System.Boolean" />
        <Parameter Name="enableEfx" Type="System.Boolean" />
        <Parameter Name="efxMaxAuxSends" Type="OpenTK.Audio.AudioContext+MaxAuxiliarySends" />
      </Parameters>
      <Docs>
        <param name="device">To be added.</param>
        <param name="freq">To be added.</param>
        <param name="refresh">To be added.</param>
        <param name="sync">To be added.</param>
        <param name="enableEfx">To be added.</param>
        <param name="efxMaxAuxSends">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AvailableDevices">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;string&gt; AvailableDevices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;string&gt; AvailableDevices" />
      <MemberSignature Language="DocId" Value="P:OpenTK.Audio.AudioContext.AvailableDevices" />
      <MemberSignature Language="F#" Value="member this.AvailableDevices : System.Collections.Generic.IList&lt;string&gt;" Usage="OpenTK.Audio.AudioContext.AvailableDevices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns a list of strings containing all known playback devices.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckErrors">
      <MemberSignature Language="C#" Value="public void CheckErrors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckErrors() cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.AudioContext.CheckErrors" />
      <MemberSignature Language="F#" Value="member this.CheckErrors : unit -&gt; unit" Usage="audioContext.CheckErrors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Checks for ALC error conditions.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OutOfMemoryException">Raised when an out of memory error is detected.</exception>
        <exception cref="T:OpenTK.Audio.AudioValueException">Raised when an invalid value is detected.</exception>
        <exception cref="T:OpenTK.Audio.AudioDeviceException">Raised when an invalid device is detected.</exception>
        <exception cref="T:OpenTK.Audio.AudioContextException">Raised when an invalid context is detected.</exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentContext">
      <MemberSignature Language="C#" Value="public static OpenTK.Audio.AudioContext CurrentContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class OpenTK.Audio.AudioContext CurrentContext" />
      <MemberSignature Language="DocId" Value="P:OpenTK.Audio.AudioContext.CurrentContext" />
      <MemberSignature Language="F#" Value="member this.CurrentContext : OpenTK.Audio.AudioContext" Usage="OpenTK.Audio.AudioContext.CurrentContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>OpenTK.Audio.AudioContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the OpenTK.Audio.AudioContext which is current in the application.
            </summary>
        <value>To be added.</value>
        <remarks>
            Only one AudioContext can be current in the application at any time,
            <format type="text/html"><b>regardless of the number of threads</b></format>.
       	</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentDevice">
      <MemberSignature Language="C#" Value="public string CurrentDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentDevice" />
      <MemberSignature Language="DocId" Value="P:OpenTK.Audio.AudioContext.CurrentDevice" />
      <MemberSignature Language="F#" Value="member this.CurrentDevice : string" Usage="OpenTK.Audio.AudioContext.CurrentDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a System.String with the name of the device used in this context.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentError">
      <MemberSignature Language="C#" Value="public OpenTK.Audio.OpenAL.AlcError CurrentError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype OpenTK.Audio.OpenAL.AlcError CurrentError" />
      <MemberSignature Language="DocId" Value="P:OpenTK.Audio.AudioContext.CurrentError" />
      <MemberSignature Language="F#" Value="member this.CurrentError : OpenTK.Audio.OpenAL.AlcError" Usage="OpenTK.Audio.AudioContext.CurrentError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>OpenTK.Audio.OpenAL.AlcError</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the ALC error code for this instance.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultDevice">
      <MemberSignature Language="C#" Value="public static string DefaultDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string DefaultDevice" />
      <MemberSignature Language="DocId" Value="P:OpenTK.Audio.AudioContext.DefaultDevice" />
      <MemberSignature Language="F#" Value="member this.DefaultDevice : string" Usage="OpenTK.Audio.AudioContext.DefaultDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the name of the device that will be used as playback default.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.AudioContext.Dispose" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="audioContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Disposes of the AudioContext, cleaning up all resources consumed by it.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.AudioContext.Equals(System.Object)" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="audioContext.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The instance to compare to.</param>
        <summary>
            Compares this instance with another.
            </summary>
        <returns>True, if obj refers to this instance; false otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~AudioContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.AudioContext.Finalize" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="audioContext.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Finalizes this instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.AudioContext.GetHashCode" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="audioContext.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Calculates the hash code for this instance.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsProcessing">
      <MemberSignature Language="C#" Value="public bool IsProcessing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsProcessing" />
      <MemberSignature Language="DocId" Value="P:OpenTK.Audio.AudioContext.IsProcessing" />
      <MemberSignature Language="F#" Value="member this.IsProcessing : bool" Usage="OpenTK.Audio.AudioContext.IsProcessing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a System.Boolean indicating whether the AudioContext is
            currently processing audio events.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Diagnostics.Process" />
        <altmember cref="M:OpenTK.Audio.AudioContext.Suspend" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:OpenTK.Audio.AudioContext.IsSynchronized" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="OpenTK.Audio.AudioContext.IsSynchronized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a System.Boolean indicating whether the AudioContext is
            synchronized.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Diagnostics.Process" />
      </Docs>
    </Member>
    <Member MemberName="MakeCurrent">
      <MemberSignature Language="C#" Value="public void MakeCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.AudioContext.MakeCurrent" />
      <MemberSignature Language="F#" Value="member this.MakeCurrent : unit -&gt; unit" Usage="audioContext.MakeCurrent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Makes the AudioContext current in the calling thread.</summary>
        <remarks>
            Only one AudioContext can be current in the application at any time,
            <format type="text/html"><b>regardless of the number of threads</b></format>.
            </remarks>
        <exception cref="T:System.ObjectDisposedException">
            Occurs if this function is called after the AudioContext has been disposed.
            </exception>
        <exception cref="T:OpenTK.Audio.AudioContextException">
            Occurs when the AudioContext could not be made current.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Process">
      <MemberSignature Language="C#" Value="public void Process ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Process() cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.AudioContext.Process" />
      <MemberSignature Language="F#" Value="member this.Process : unit -&gt; unit" Usage="audioContext.Process " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Processes queued audio events.
            </summary>
        <remarks>
          <para>
            If AudioContext.IsSynchronized is true, this function will resume
            the internal audio processing thread. If AudioContext.IsSynchronized is false,
            you will need to call this function multiple times per second to process
            audio events.
            </para>
          <para>
            In some implementations this function may have no effect.
            </para>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Occurs when this function is called after the AudioContext had been disposed.</exception>
        <altmember cref="M:OpenTK.Audio.AudioContext.Suspend" />
        <altmember cref="P:OpenTK.Audio.AudioContext.IsProcessing" />
        <altmember cref="P:OpenTK.Audio.AudioContext.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="SupportsExtension">
      <MemberSignature Language="C#" Value="public bool SupportsExtension (string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SupportsExtension(string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.AudioContext.SupportsExtension(System.String)" />
      <MemberSignature Language="F#" Value="member this.SupportsExtension : string -&gt; bool" Usage="audioContext.SupportsExtension extension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extension">The name of the extension to check (e.g. "ALC_EXT_EFX").</param>
        <summary>
            Checks whether the specified OpenAL extension is supported.
            </summary>
        <returns>true if the extension is supported; false otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Suspend">
      <MemberSignature Language="C#" Value="public void Suspend ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Suspend() cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.AudioContext.Suspend" />
      <MemberSignature Language="F#" Value="member this.Suspend : unit -&gt; unit" Usage="audioContext.Suspend " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Suspends processing of audio events.
            </summary>
        <remarks>
          <para>
            To avoid audio artifacts when calling this function, set audio gain to zero before
            suspending an AudioContext.
            </para>
          <para>
            In some implementations, it can be faster to suspend processing before changing
            AudioContext state.
            </para>
          <para>
            In some implementations this function may have no effect.
            </para>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Occurs when this function is called after the AudioContext had been disposed.</exception>
        <altmember cref="T:System.Diagnostics.Process" />
        <altmember cref="P:OpenTK.Audio.AudioContext.IsProcessing" />
        <altmember cref="P:OpenTK.Audio.AudioContext.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:OpenTK.Audio.AudioContext.ToString" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="audioContext.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>OpenTK-1.0</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns a <see cref="T:System.String" /> that desrcibes this instance.
            </summary>
        <returns>A <see cref="T:System.String" /> that desrcibes this instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
