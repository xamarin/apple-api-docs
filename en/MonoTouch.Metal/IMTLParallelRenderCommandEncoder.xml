<Type Name="IMTLParallelRenderCommandEncoder" FullName="MonoTouch.Metal.IMTLParallelRenderCommandEncoder">
  <TypeSignature Language="C#" Value="public interface IMTLParallelRenderCommandEncoder : IDisposable, MonoTouch.Metal.IMTLCommandEncoder" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMTLParallelRenderCommandEncoder implements class MonoTouch.Metal.IMTLCommandEncoder, class MonoTouch.ObjCRuntime.INativeObject, class System.IDisposable" />
  <AssemblyInfo apistyle="classic">
    <AssemblyName>monotouch</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo apistyle="unified">
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>MonoTouch.Metal.IMTLCommandEncoder</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Protocol(Name="MTLParallelRenderCommandEncoder", WrapperType=typeof(MonoTouch.Metal.MTLParallelRenderCommandEncoderWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="CreateRenderCommandEncoder", ReturnType=typeof(MonoTouch.Metal.IMTLRenderCommandEncoder), Selector="renderCommandEncoder")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.ObjCRuntime.Availability(Introduced=MonoTouch.ObjCRuntime.Platform.iOS_8_0)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.ObjCRuntime.Availability(Introduced=Platform.Mac_10_11 | Platform.Mac_Arch64)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>System protocol for breaking a single rendering pass into parallel command sets.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateRenderCommandEncoder">
      <MemberSignature Language="C#" Value="public MonoTouch.Metal.IMTLRenderCommandEncoder CreateRenderCommandEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.Metal.IMTLRenderCommandEncoder CreateRenderCommandEncoder() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("renderCommandEncoder")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Metal.IMTLRenderCommandEncoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
