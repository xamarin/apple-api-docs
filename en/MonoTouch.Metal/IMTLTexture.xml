<Type Name="IMTLTexture" FullName="MonoTouch.Metal.IMTLTexture">
  <TypeSignature Language="C#" Value="public interface IMTLTexture : IDisposable, MonoTouch.Metal.IMTLResource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMTLTexture implements class MonoTouch.Metal.IMTLResource, class MonoTouch.ObjCRuntime.INativeObject, class System.IDisposable" />
  <AssemblyInfo apistyle="classic">
    <AssemblyName>monotouch</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo apistyle="unified">
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>MonoTouch.Metal.IMTLResource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Protocol(Name="MTLTexture", WrapperType=typeof(MonoTouch.Metal.MTLTextureWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="CreateTextureView", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(MonoTouch.Metal.IMTLTexture), Selector="newTextureViewWithPixelFormat:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="CreateTextureView", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], ReturnType=typeof(MonoTouch.Metal.IMTLTexture), Selector="newTextureViewWithPixelFormat:textureType:levels:slices:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="GetBytes", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="GetBytes", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="getBytes:bytesPerRow:fromRegion:mipmapLevel:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="ReplaceRegion", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(IsProperty=false, IsRequired=true, IsStatic=false, Name="ReplaceRegion", ParameterByRef=Mono.Cecil.CustomAttributeArgument[], ParameterType=Mono.Cecil.CustomAttributeArgument[], Selector="replaceRegion:mipmapLevel:withBytes:bytesPerRow:")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(ArgumentSemantic=MonoTouch.ObjCRuntime.ArgumentSemantic.None, GetterSelector="rootResource", IsProperty=true, IsRequired=true, IsStatic=false, Name="RootResource", PropertyType=typeof(MonoTouch.Metal.IMTLResource), Selector="rootResource")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(ArgumentSemantic=MonoTouch.ObjCRuntime.ArgumentSemantic.None, GetterSelector="parentTexture", IsProperty=true, IsRequired=false, IsStatic=false, Name="ParentTexture", PropertyType=typeof(MonoTouch.Metal.IMTLTexture), Selector="parentTexture")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(ArgumentSemantic=MonoTouch.ObjCRuntime.ArgumentSemantic.None, GetterSelector="parentRelativeLevel", IsProperty=true, IsRequired=false, IsStatic=false, Name="ParentRelativeLevel", PropertyType=typeof(System.nuint), Selector="parentRelativeLevel")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(ArgumentSemantic=MonoTouch.ObjCRuntime.ArgumentSemantic.None, GetterSelector="parentRelativeSlice", IsProperty=true, IsRequired=false, IsStatic=false, Name="ParentRelativeSlice", PropertyType=typeof(System.nuint), Selector="parentRelativeSlice")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(ArgumentSemantic=MonoTouch.ObjCRuntime.ArgumentSemantic.None, GetterSelector="buffer", IsProperty=true, IsRequired=false, IsStatic=false, Name="Buffer", PropertyType=typeof(MonoTouch.Metal.IMTLBuffer), Selector="buffer")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(ArgumentSemantic=MonoTouch.ObjCRuntime.ArgumentSemantic.None, GetterSelector="bufferOffset", IsProperty=true, IsRequired=false, IsStatic=false, Name="BufferOffset", PropertyType=typeof(System.nuint), Selector="bufferOffset")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(ArgumentSemantic=MonoTouch.ObjCRuntime.ArgumentSemantic.None, GetterSelector="bufferBytesPerRow", IsProperty=true, IsRequired=false, IsStatic=false, Name="BufferBytesPerRow", PropertyType=typeof(System.nuint), Selector="bufferBytesPerRow")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(ArgumentSemantic=MonoTouch.ObjCRuntime.ArgumentSemantic.None, GetterSelector="textureType", IsProperty=true, IsRequired=true, IsStatic=false, Name="TextureType", PropertyType=typeof(MonoTouch.Metal.MTLTextureType), Selector="textureType")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(ArgumentSemantic=MonoTouch.ObjCRuntime.ArgumentSemantic.None, GetterSelector="pixelFormat", IsProperty=true, IsRequired=true, IsStatic=false, Name="PixelFormat", PropertyType=typeof(MonoTouch.Metal.MTLPixelFormat), Selector="pixelFormat")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(ArgumentSemantic=MonoTouch.ObjCRuntime.ArgumentSemantic.None, GetterSelector="width", IsProperty=true, IsRequired=true, IsStatic=false, Name="Width", PropertyType=typeof(System.nuint), Selector="width")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(ArgumentSemantic=MonoTouch.ObjCRuntime.ArgumentSemantic.None, GetterSelector="height", IsProperty=true, IsRequired=true, IsStatic=false, Name="Height", PropertyType=typeof(System.nuint), Selector="height")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(ArgumentSemantic=MonoTouch.ObjCRuntime.ArgumentSemantic.None, GetterSelector="depth", IsProperty=true, IsRequired=true, IsStatic=false, Name="Depth", PropertyType=typeof(System.nuint), Selector="depth")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(ArgumentSemantic=MonoTouch.ObjCRuntime.ArgumentSemantic.None, GetterSelector="mipmapLevelCount", IsProperty=true, IsRequired=true, IsStatic=false, Name="MipmapLevelCount", PropertyType=typeof(System.nuint), Selector="mipmapLevelCount")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(ArgumentSemantic=MonoTouch.ObjCRuntime.ArgumentSemantic.None, GetterSelector="sampleCount", IsProperty=true, IsRequired=true, IsStatic=false, Name="SampleCount", PropertyType=typeof(System.nuint), Selector="sampleCount")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(ArgumentSemantic=MonoTouch.ObjCRuntime.ArgumentSemantic.None, GetterSelector="arrayLength", IsProperty=true, IsRequired=true, IsStatic=false, Name="ArrayLength", PropertyType=typeof(System.nuint), Selector="arrayLength")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.ProtocolMember(ArgumentSemantic=MonoTouch.ObjCRuntime.ArgumentSemantic.None, GetterSelector="isFramebufferOnly", IsProperty=true, IsRequired=true, IsStatic=false, Name="FramebufferOnly", PropertyType=typeof(System.Boolean), Selector="framebufferOnly")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.ObjCRuntime.Availability(Introduced=MonoTouch.ObjCRuntime.Platform.iOS_8_0)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.ObjCRuntime.Availability(Introduced=Platform.Mac_10_11 | Platform.Mac_Arch64)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>System protocol for image data that is used by vertex shaders, fragment shaders, and compute kernels.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ArrayLength">
      <MemberSignature Language="C#" Value="public uint ArrayLength { get; }" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 ArrayLength" apistyle="classic" />
      <MemberSignature Language="C#" Value="public nuint ArrayLength { get; }" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint ArrayLength" apistyle="unified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("arrayLength")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType apistyle="classic">System.UInt32</ReturnType>
        <ReturnType apistyle="unified">System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTextureView">
      <MemberSignature Language="C#" Value="public MonoTouch.Metal.IMTLTexture CreateTextureView (MonoTouch.Metal.MTLPixelFormat pixelFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.Metal.IMTLTexture CreateTextureView(valuetype MonoTouch.Metal.MTLPixelFormat pixelFormat) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("newTextureViewWithPixelFormat:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Metal.IMTLTexture</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pixelFormat" Type="MonoTouch.Metal.MTLPixelFormat" />
      </Parameters>
      <Docs>
        <param name="pixelFormat">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTextureView">
      <MemberSignature Language="C#" Value="public MonoTouch.Metal.IMTLTexture CreateTextureView (MonoTouch.Metal.MTLPixelFormat pixelFormat, MonoTouch.Metal.MTLTextureType textureType, MonoTouch.Foundation.NSRange levelRange, MonoTouch.Foundation.NSRange sliceRange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MonoTouch.Metal.IMTLTexture CreateTextureView(valuetype MonoTouch.Metal.MTLPixelFormat pixelFormat, valuetype MonoTouch.Metal.MTLTextureType textureType, valuetype MonoTouch.Foundation.NSRange levelRange, valuetype MonoTouch.Foundation.NSRange sliceRange) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("newTextureViewWithPixelFormat:textureType:levels:slices:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Metal.IMTLTexture</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pixelFormat" Type="MonoTouch.Metal.MTLPixelFormat" />
        <Parameter Name="textureType" Type="MonoTouch.Metal.MTLTextureType" />
        <Parameter Name="levelRange" Type="MonoTouch.Foundation.NSRange" />
        <Parameter Name="sliceRange" Type="MonoTouch.Foundation.NSRange" />
      </Parameters>
      <Docs>
        <param name="pixelFormat">To be added.</param>
        <param name="textureType">To be added.</param>
        <param name="levelRange">To be added.</param>
        <param name="sliceRange">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public uint Depth { get; }" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 Depth" apistyle="classic" />
      <MemberSignature Language="C#" Value="public nuint Depth { get; }" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint Depth" apistyle="unified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("depth")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType apistyle="classic">System.UInt32</ReturnType>
        <ReturnType apistyle="unified">System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FramebufferOnly">
      <MemberSignature Language="C#" Value="public bool FramebufferOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FramebufferOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("isFramebufferOnly")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes" apistyle="unified">
      <MemberSignature Language="C#" Value="public void GetBytes (IntPtr pixelBytes, nuint bytesPerRow, MonoTouch.Metal.MTLRegion region, nuint level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetBytes(native int pixelBytes, valuetype System.nuint bytesPerRow, valuetype MonoTouch.Metal.MTLRegion region, valuetype System.nuint level) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("getBytes:bytesPerRow:fromRegion:mipmapLevel:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pixelBytes" Type="System.IntPtr" />
        <Parameter Name="bytesPerRow" Type="System.nuint" />
        <Parameter Name="region" Type="MonoTouch.Metal.MTLRegion" />
        <Parameter Name="level" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="pixelBytes">To be added.</param>
        <param name="bytesPerRow">To be added.</param>
        <param name="region">To be added.</param>
        <param name="level">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes" apistyle="unified">
      <MemberSignature Language="C#" Value="public void GetBytes (IntPtr pixelBytes, nuint bytesPerRow, nuint bytesPerImage, MonoTouch.Metal.MTLRegion region, nuint level, nuint slice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetBytes(native int pixelBytes, valuetype System.nuint bytesPerRow, valuetype System.nuint bytesPerImage, valuetype MonoTouch.Metal.MTLRegion region, valuetype System.nuint level, valuetype System.nuint slice) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pixelBytes" Type="System.IntPtr" />
        <Parameter Name="bytesPerRow" Type="System.nuint" />
        <Parameter Name="bytesPerImage" Type="System.nuint" />
        <Parameter Name="region" Type="MonoTouch.Metal.MTLRegion" />
        <Parameter Name="level" Type="System.nuint" />
        <Parameter Name="slice" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="pixelBytes">To be added.</param>
        <param name="bytesPerRow">To be added.</param>
        <param name="bytesPerImage">To be added.</param>
        <param name="region">To be added.</param>
        <param name="level">To be added.</param>
        <param name="slice">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public uint Height { get; }" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 Height" apistyle="classic" />
      <MemberSignature Language="C#" Value="public nuint Height { get; }" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint Height" apistyle="unified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("height")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType apistyle="classic">System.UInt32</ReturnType>
        <ReturnType apistyle="unified">System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MipmapLevelCount">
      <MemberSignature Language="C#" Value="public uint MipmapLevelCount { get; }" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 MipmapLevelCount" apistyle="classic" />
      <MemberSignature Language="C#" Value="public nuint MipmapLevelCount { get; }" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint MipmapLevelCount" apistyle="unified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("mipmapLevelCount")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType apistyle="classic">System.UInt32</ReturnType>
        <ReturnType apistyle="unified">System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelFormat">
      <MemberSignature Language="C#" Value="public MonoTouch.Metal.MTLPixelFormat PixelFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoTouch.Metal.MTLPixelFormat PixelFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("pixelFormat")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Metal.MTLPixelFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceRegion" apistyle="unified">
      <MemberSignature Language="C#" Value="public void ReplaceRegion (MonoTouch.Metal.MTLRegion region, nuint level, IntPtr pixelBytes, nuint bytesPerRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplaceRegion(valuetype MonoTouch.Metal.MTLRegion region, valuetype System.nuint level, native int pixelBytes, valuetype System.nuint bytesPerRow) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("replaceRegion:mipmapLevel:withBytes:bytesPerRow:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="MonoTouch.Metal.MTLRegion" />
        <Parameter Name="level" Type="System.nuint" />
        <Parameter Name="pixelBytes" Type="System.IntPtr" />
        <Parameter Name="bytesPerRow" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="region">To be added.</param>
        <param name="level">To be added.</param>
        <param name="pixelBytes">To be added.</param>
        <param name="bytesPerRow">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceRegion" apistyle="unified">
      <MemberSignature Language="C#" Value="public void ReplaceRegion (MonoTouch.Metal.MTLRegion region, nuint level, nuint slice, IntPtr pixelBytes, nuint bytesPerRow, nuint bytesPerImage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplaceRegion(valuetype MonoTouch.Metal.MTLRegion region, valuetype System.nuint level, valuetype System.nuint slice, native int pixelBytes, valuetype System.nuint bytesPerRow, valuetype System.nuint bytesPerImage) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="MonoTouch.Metal.MTLRegion" />
        <Parameter Name="level" Type="System.nuint" />
        <Parameter Name="slice" Type="System.nuint" />
        <Parameter Name="pixelBytes" Type="System.IntPtr" />
        <Parameter Name="bytesPerRow" Type="System.nuint" />
        <Parameter Name="bytesPerImage" Type="System.nuint" />
      </Parameters>
      <Docs>
        <param name="region">To be added.</param>
        <param name="level">To be added.</param>
        <param name="slice">To be added.</param>
        <param name="pixelBytes">To be added.</param>
        <param name="bytesPerRow">To be added.</param>
        <param name="bytesPerImage">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootResource">
      <MemberSignature Language="C#" Value="public MonoTouch.Metal.IMTLResource RootResource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MonoTouch.Metal.IMTLResource RootResource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("rootResource")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Metal.IMTLResource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SampleCount">
      <MemberSignature Language="C#" Value="public uint SampleCount { get; }" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 SampleCount" apistyle="classic" />
      <MemberSignature Language="C#" Value="public nuint SampleCount { get; }" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint SampleCount" apistyle="unified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("sampleCount")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType apistyle="classic">System.UInt32</ReturnType>
        <ReturnType apistyle="unified">System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextureType">
      <MemberSignature Language="C#" Value="public MonoTouch.Metal.MTLTextureType TextureType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MonoTouch.Metal.MTLTextureType TextureType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("textureType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>MonoTouch.Metal.MTLTextureType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public uint Width { get; }" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 Width" apistyle="classic" />
      <MemberSignature Language="C#" Value="public nuint Width { get; }" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.nuint Width" apistyle="unified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: MonoTouch.Foundation.Export("width")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType apistyle="classic">System.UInt32</ReturnType>
        <ReturnType apistyle="unified">System.nuint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
