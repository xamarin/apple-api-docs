<Type Name="IMTLComputeCommandEncoder" FullName="MonoTouch.Metal.IMTLComputeCommandEncoder">
  <TypeSignature Language="C#" Value="public interface IMTLComputeCommandEncoder : IDisposable, MonoTouch.Metal.IMTLCommandEncoder" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMTLComputeCommandEncoder implements class MonoTouch.Metal.IMTLCommandEncoder, class MonoTouch.ObjCRuntime.INativeObject, class System.IDisposable" />
  <AssemblyInfo apistyle="old">
    <AssemblyName>monotouch</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo apistyle="new">
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>MonoTouch.Metal.IMTLCommandEncoder</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>MonoTouch.Foundation.Protocol(Name="MTLComputeCommandEncoder", WrapperType=typeof(MonoTouch.Metal.MTLComputeCommandEncoderWrapper))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>MonoTouch.ObjCRuntime.Availability(Introduced=MonoTouch.ObjCRuntime.Platform.iOS_8_0)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ExecuteBarrier">
      <MemberSignature Language="C#" Value="public void ExecuteBarrier ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExecuteBarrier() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("executeBarrier")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBuffer">
      <MemberSignature Language="C#" Value="public void SetBuffer (MonoTouch.Metal.IMTLBuffer buffer, uint offset, uint index);" apistyle="old" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBuffer(class MonoTouch.Metal.IMTLBuffer buffer, unsigned int32 offset, unsigned int32 index) cil managed" apistyle="old" />
      <MemberSignature Language="C#" Value="public void SetBuffer (MonoTouch.Metal.IMTLBuffer buffer, nuint offset, nuint index);" apistyle="new" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBuffer(class MonoTouch.Metal.IMTLBuffer buffer, valuetype System.nuint offset, valuetype System.nuint index) cil managed" apistyle="new" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("setBuffer:offset:atIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="MonoTouch.Metal.IMTLBuffer" />
        <Parameter Name="offset" Type="System.UInt32" apistyle="old" />
        <Parameter Name="index" Type="System.UInt32" apistyle="old" />
        <Parameter Name="offset" Type="System.nuint" apistyle="new" />
        <Parameter Name="index" Type="System.nuint" apistyle="new" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetComputePipelineState">
      <MemberSignature Language="C#" Value="public void SetComputePipelineState (MonoTouch.Metal.IMTLComputePipelineState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetComputePipelineState(class MonoTouch.Metal.IMTLComputePipelineState state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("setComputePipelineState:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="MonoTouch.Metal.IMTLComputePipelineState" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSamplerState">
      <MemberSignature Language="C#" Value="public void SetSamplerState (MonoTouch.Metal.IMTLSamplerState sampler, uint index);" apistyle="old" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSamplerState(class MonoTouch.Metal.IMTLSamplerState sampler, unsigned int32 index) cil managed" apistyle="old" />
      <MemberSignature Language="C#" Value="public void SetSamplerState (MonoTouch.Metal.IMTLSamplerState sampler, nuint index);" apistyle="new" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSamplerState(class MonoTouch.Metal.IMTLSamplerState sampler, valuetype System.nuint index) cil managed" apistyle="new" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("setSamplerState:atIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sampler" Type="MonoTouch.Metal.IMTLSamplerState" />
        <Parameter Name="index" Type="System.UInt32" apistyle="old" />
        <Parameter Name="index" Type="System.nuint" apistyle="new" />
      </Parameters>
      <Docs>
        <param name="sampler">To be added.</param>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSamplerState">
      <MemberSignature Language="C#" Value="public void SetSamplerState (MonoTouch.Metal.IMTLSamplerState sampler, float lodMinClamp, float lodMaxClamp, uint index);" apistyle="old" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSamplerState(class MonoTouch.Metal.IMTLSamplerState sampler, float32 lodMinClamp, float32 lodMaxClamp, unsigned int32 index) cil managed" apistyle="old" />
      <MemberSignature Language="C#" Value="public void SetSamplerState (MonoTouch.Metal.IMTLSamplerState sampler, float lodMinClamp, float lodMaxClamp, nuint index);" apistyle="new" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSamplerState(class MonoTouch.Metal.IMTLSamplerState sampler, float32 lodMinClamp, float32 lodMaxClamp, valuetype System.nuint index) cil managed" apistyle="new" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("setSamplerState:lodMinClamp:lodMaxClamp:atIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sampler" Type="MonoTouch.Metal.IMTLSamplerState" />
        <Parameter Name="lodMinClamp" Type="System.Single" />
        <Parameter Name="lodMaxClamp" Type="System.Single" />
        <Parameter Name="index" Type="System.UInt32" apistyle="old" />
        <Parameter Name="index" Type="System.nuint" apistyle="new" />
      </Parameters>
      <Docs>
        <param name="sampler">To be added.</param>
        <param name="lodMinClamp">To be added.</param>
        <param name="lodMaxClamp">To be added.</param>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTexture">
      <MemberSignature Language="C#" Value="public void SetTexture (MonoTouch.Metal.IMTLTexture texture, uint index);" apistyle="old" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTexture(class MonoTouch.Metal.IMTLTexture texture, unsigned int32 index) cil managed" apistyle="old" />
      <MemberSignature Language="C#" Value="public void SetTexture (MonoTouch.Metal.IMTLTexture texture, nuint index);" apistyle="new" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTexture(class MonoTouch.Metal.IMTLTexture texture, valuetype System.nuint index) cil managed" apistyle="new" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("setTexture:atIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="texture" Type="MonoTouch.Metal.IMTLTexture" />
        <Parameter Name="index" Type="System.UInt32" apistyle="old" />
        <Parameter Name="index" Type="System.nuint" apistyle="new" />
      </Parameters>
      <Docs>
        <param name="texture">To be added.</param>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetThreadgroupMemoryLength">
      <MemberSignature Language="C#" Value="public void SetThreadgroupMemoryLength (uint length, uint index);" apistyle="old" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetThreadgroupMemoryLength(unsigned int32 length, unsigned int32 index) cil managed" apistyle="old" />
      <MemberSignature Language="C#" Value="public void SetThreadgroupMemoryLength (nuint length, nuint index);" apistyle="new" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetThreadgroupMemoryLength(valuetype System.nuint length, valuetype System.nuint index) cil managed" apistyle="new" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("setThreadgroupMemoryLength:atIndex:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.UInt32" apistyle="old" />
        <Parameter Name="index" Type="System.UInt32" apistyle="old" />
        <Parameter Name="length" Type="System.nuint" apistyle="new" />
        <Parameter Name="index" Type="System.nuint" apistyle="new" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SispatchThreadgroups">
      <MemberSignature Language="C#" Value="public void SispatchThreadgroups (MonoTouch.Metal.MTLSize threadgroupsPerGrid, MonoTouch.Metal.MTLSize threadsPerThreadgroup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SispatchThreadgroups(valuetype MonoTouch.Metal.MTLSize threadgroupsPerGrid, valuetype MonoTouch.Metal.MTLSize threadsPerThreadgroup) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="old">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo apistyle="new">
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Export("dispatchThreadgroups:threadsPerThreadgroup:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>MonoTouch.Foundation.Preserve(Conditional=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threadgroupsPerGrid" Type="MonoTouch.Metal.MTLSize" />
        <Parameter Name="threadsPerThreadgroup" Type="MonoTouch.Metal.MTLSize" />
      </Parameters>
      <Docs>
        <param name="threadgroupsPerGrid">To be added.</param>
        <param name="threadsPerThreadgroup">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
