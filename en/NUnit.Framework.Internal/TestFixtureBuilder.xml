<Type Name="TestFixtureBuilder" FullName="NUnit.Framework.Internal.TestFixtureBuilder">
  <TypeSignature Language="C#" Value="public class TestFixtureBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TestFixtureBuilder extends System.Object" />
  <AssemblyInfo apistyle="classic">
    <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
    <AssemblyVersion>0.7.0.0</AssemblyVersion>
    <AssemblyVersion>0.8.0.0</AssemblyVersion>
    <AssemblyVersion>0.9.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo apistyle="unified">
    <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            TestFixtureBuilder contains static methods for building
            TestFixtures from types. It uses builtin SuiteBuilders
            and any installed extensions to do it.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BuildFrom" apistyle="classic">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Internal.Test BuildFrom (object fixture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Internal.Test BuildFrom(object fixture) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
        <AssemblyVersion>0.8.0.0</AssemblyVersion>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Internal.Test</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixture" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixture">The object to be used for the fixture</param>
        <summary>
            Build a fixture from an object.
            </summary>
        <returns>A TestSuite if fixture type can be built, null if not</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildFrom" apistyle="classic">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Internal.Test BuildFrom (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Internal.Test BuildFrom(class System.Type type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
        <AssemblyVersion>0.8.0.0</AssemblyVersion>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Internal.Test</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">The type to be used for the fixture</param>
        <summary>
            Build a test fixture from a given type.
            </summary>
        <returns>A TestSuite if the fixture can be built, null if not</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBuildFrom">
      <MemberSignature Language="C#" Value="public static bool CanBuildFrom (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanBuildFrom(class System.Type type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
        <AssemblyVersion>0.8.0.0</AssemblyVersion>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">The type.</param>
        <summary>
            Determines whether this instance [can build from] the specified type.
            </summary>
        <returns>
          <c>true</c> if this instance [can build from] the specified type; otherwise, <c>false</c>.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
