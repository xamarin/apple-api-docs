<Type Name="TestListener" FullName="NUnit.Framework.Internal.TestListener">
  <TypeSignature Language="C#" Value="public class TestListener : Xamarin.iOS.dll=NUnit.Framework.Api.ITestListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TestListener extends System.Object implements class Xamarin.iOS.dll=NUnit.Framework.Api.ITestListener" />
  <AssemblyInfo>
    <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>NUnit.Framework.Api.ITestListener</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            TestListener provides an implementation of ITestListener that
            does nothing. It is used only throught its NULL property.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="NULL">
      <MemberSignature Language="C#" Value="public static Xamarin.iOS.dll=NUnit.Framework.Api.ITestListener NULL { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Xamarin.iOS.dll=NUnit.Framework.Api.ITestListener NULL" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.iOS.dll=NUnit.Framework.Api.ITestListener</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get a listener that does nothing
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestFinished">
      <MemberSignature Language="C#" Value="public void TestFinished (Xamarin.iOS.dll=NUnit.Framework.Api.ITestResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TestFinished(class Xamarin.iOS.dll=NUnit.Framework.Api.ITestResult result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="Xamarin.iOS.dll=NUnit.Framework.Api.ITestResult" />
      </Parameters>
      <Docs>
        <param name="result">The result of the test</param>
        <summary>
            Called when a test case has finished
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestOutput">
      <MemberSignature Language="C#" Value="public void TestOutput (Xamarin.iOS.dll=NUnit.Framework.Api.TestOutput testOutput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TestOutput(class Xamarin.iOS.dll=NUnit.Framework.Api.TestOutput testOutput) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="testOutput" Type="Xamarin.iOS.dll=NUnit.Framework.Api.TestOutput" />
      </Parameters>
      <Docs>
        <param name="testOutput">A console message</param>
        <summary>
            Called when the test creates text output.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestStarted">
      <MemberSignature Language="C#" Value="public void TestStarted (Xamarin.iOS.dll=NUnit.Framework.Api.ITest test);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TestStarted(class Xamarin.iOS.dll=NUnit.Framework.Api.ITest test) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="test" Type="Xamarin.iOS.dll=NUnit.Framework.Api.ITest" />
      </Parameters>
      <Docs>
        <param name="test">The test that is starting</param>
        <summary>
            Called when a test has just started
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>