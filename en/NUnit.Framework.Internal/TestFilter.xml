<Type Name="TestFilter" FullName="NUnit.Framework.Internal.TestFilter">
  <TypeSignature Language="C#" Value="public abstract class TestFilter : NUnit.Framework.Api.ITestFilter" apistyle="classic" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit TestFilter extends System.Object implements class NUnit.Framework.Api.ITestFilter" apistyle="classic" />
  <TypeSignature Language="C#" Value="public abstract class TestFilter : Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Api.ITestFilter" apistyle="unified" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit TestFilter extends System.Object implements class Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Api.ITestFilter" apistyle="unified" />
  <AssemblyInfo apistyle="classic">
    <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
    <AssemblyVersion>0.7.0.0</AssemblyVersion>
    <AssemblyVersion>0.8.0.0</AssemblyVersion>
    <AssemblyVersion>0.9.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo apistyle="unified">
    <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>NUnit.Framework.Api.ITestFilter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Interface to be implemented by filters applied to tests.
            The filter applies when running the test, after it has been
            loaded, since this is the only time an ITest exists.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TestFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
        <AssemblyVersion>0.8.0.0</AssemblyVersion>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Internal.TestFilter Empty;" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".field public static class NUnit.Framework.Internal.TestFilter Empty" apistyle="classic" />
      <MemberSignature Language="C#" Value="public static Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Internal.TestFilter Empty;" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".field public static class Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Internal.TestFilter Empty" apistyle="unified" />
      <MemberType>Field</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
        <AssemblyVersion>0.8.0.0</AssemblyVersion>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType apistyle="classic">NUnit.Framework.Internal.TestFilter</ReturnType>
        <ReturnType apistyle="unified">Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Internal.TestFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Unique Empty filter.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public abstract bool Match (NUnit.Framework.Api.ITest test);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(class NUnit.Framework.Api.ITest test) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public abstract bool Match (Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Api.ITest test);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(class Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Api.ITest test) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
        <AssemblyVersion>0.8.0.0</AssemblyVersion>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="test" Type="NUnit.Framework.Api.ITest" apistyle="classic" />
        <Parameter Name="test" Type="Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Api.ITest" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="test">The test to which the filter is applied</param>
        <summary>
            Determine whether the test itself matches the filter criteria, without
            examining either parents or descendants.
            </summary>
        <returns>True if the filter matches the any parent of the test</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchDescendant">
      <MemberSignature Language="C#" Value="protected virtual bool MatchDescendant (NUnit.Framework.Api.ITest test);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool MatchDescendant(class NUnit.Framework.Api.ITest test) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="protected virtual bool MatchDescendant (Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Api.ITest test);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool MatchDescendant(class Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Api.ITest test) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
        <AssemblyVersion>0.8.0.0</AssemblyVersion>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="test" Type="NUnit.Framework.Api.ITest" apistyle="classic" />
        <Parameter Name="test" Type="Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Api.ITest" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="test">The test to be matched</param>
        <summary>
            Determine whether any descendant of the test matches the filter criteria.
            </summary>
        <returns>True if at least one descendant matches the filter criteria</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchParent">
      <MemberSignature Language="C#" Value="protected virtual bool MatchParent (NUnit.Framework.Api.ITest test);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool MatchParent(class NUnit.Framework.Api.ITest test) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="protected virtual bool MatchParent (Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Api.ITest test);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool MatchParent(class Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Api.ITest test) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
        <AssemblyVersion>0.8.0.0</AssemblyVersion>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="test" Type="NUnit.Framework.Api.ITest" apistyle="classic" />
        <Parameter Name="test" Type="Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Api.ITest" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="test">The test to which the filter is applied</param>
        <summary>
            Determine whether any ancestor of the test mateches the filter criteria
            </summary>
        <returns>True if the filter matches the an ancestor of the test</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pass">
      <MemberSignature Language="C#" Value="public virtual bool Pass (NUnit.Framework.Api.ITest test);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Pass(class NUnit.Framework.Api.ITest test) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public virtual bool Pass (Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Api.ITest test);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Pass(class Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Api.ITest test) cil managed" apistyle="unified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
        <AssemblyVersion>0.8.0.0</AssemblyVersion>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="test" Type="NUnit.Framework.Api.ITest" apistyle="classic" />
        <Parameter Name="test" Type="Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Api.ITest" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="test">The test to which the filter is applied</param>
        <summary>
            Determine if a particular test passes the filter criteria. The default
            implementation checks the test itself, its parents and any descendants.
            Derived classes may override this method or any of the Match methods
            to change the behavior of the filter.
            </summary>
        <returns>True if the test passes the filter, otherwise false</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
