<Type Name="IApplyToTest" FullName="NUnit.Framework.Internal.IApplyToTest">
  <TypeSignature Language="C#" Value="public interface IApplyToTest" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IApplyToTest" />
  <TypeSignature Language="DocId" Value="T:NUnit.Framework.Internal.IApplyToTest" />
  <TypeSignature Language="F#" Value="type IApplyToTest = interface" />
  <AssemblyInfo>
    <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ApplyToTest">
      <MemberSignature Language="C#" Value="public void ApplyToTest (NUnit.Framework.Internal.Test test);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyToTest(class NUnit.Framework.Internal.Test test) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.IApplyToTest.ApplyToTest(NUnit.Framework.Internal.Test)" />
      <MemberSignature Language="F#" Value="abstract member ApplyToTest : NUnit.Framework.Internal.Test -&gt; unit" Usage="iApplyToTest.ApplyToTest test" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="test" Type="NUnit.Framework.Internal.Test" />
      </Parameters>
      <Docs>
        <param name="test">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
