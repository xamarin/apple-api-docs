<Type Name="Test" FullName="NUnit.Framework.Internal.Test">
  <TypeSignature Language="C#" Value="public abstract class Test : IComparable, NUnit.Framework.Api.ITest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Test extends System.Object implements class NUnit.Framework.Api.ITest, class NUnit.Framework.Api.IXmlNodeBuilder, class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:NUnit.Framework.Internal.Test" />
  <TypeSignature Language="F#" Value="type Test = class&#xA;    interface ITest&#xA;    interface IXmlNodeBuilder&#xA;    interface IComparable" />
  <AssemblyInfo>
    <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>NUnit.Framework.Api.ITest</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>NUnit.Framework.Api.IXmlNodeBuilder</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Test (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.Test.#ctor(System.String)" />
      <MemberSignature Language="F#" Value="new NUnit.Framework.Internal.Test : string -&gt; NUnit.Framework.Internal.Test" Usage="new NUnit.Framework.Internal.Test name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Test (Type fixtureType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Type fixtureType) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.Test.#ctor(System.Type)" />
      <MemberSignature Language="F#" Value="new NUnit.Framework.Internal.Test : Type -&gt; NUnit.Framework.Internal.Test" Usage="new NUnit.Framework.Internal.Test fixtureType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fixtureType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="fixtureType">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Test (string pathName, string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string pathName, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.Test.#ctor(System.String,System.String)" />
      <MemberSignature Language="F#" Value="new NUnit.Framework.Internal.Test : string * string -&gt; NUnit.Framework.Internal.Test" Usage="new NUnit.Framework.Internal.Test (pathName, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pathName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pathName">To be added.</param>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToXml">
      <MemberSignature Language="C#" Value="public abstract NUnit.Framework.Api.XmlNode AddToXml (NUnit.Framework.Api.XmlNode parentNode, bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class NUnit.Framework.Api.XmlNode AddToXml(class NUnit.Framework.Api.XmlNode parentNode, bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.Test.AddToXml(NUnit.Framework.Api.XmlNode,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member AddToXml : NUnit.Framework.Api.XmlNode * bool -&gt; NUnit.Framework.Api.XmlNode" Usage="test.AddToXml (parentNode, recursive)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:NUnit.Framework.Api.IXmlNodeBuilder.AddToXml(NUnit.Framework.Api.XmlNode,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Api.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentNode" Type="NUnit.Framework.Api.XmlNode" />
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parentNode">To be added.</param>
        <param name="recursive">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAttributesToTest">
      <MemberSignature Language="C#" Value="public void ApplyAttributesToTest (System.Reflection.ICustomAttributeProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyAttributesToTest(class System.Reflection.ICustomAttributeProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.Test.ApplyAttributesToTest(System.Reflection.ICustomAttributeProvider)" />
      <MemberSignature Language="F#" Value="member this.ApplyAttributesToTest : System.Reflection.ICustomAttributeProvider -&gt; unit" Usage="test.ApplyAttributesToTest provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Reflection.ICustomAttributeProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.Test.CompareTo(System.Object)" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="test.CompareTo obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWorkItem">
      <MemberSignature Language="C#" Value="public abstract NUnit.Framework.Internal.WorkItems.WorkItem CreateWorkItem (NUnit.Framework.Api.ITestFilter childFilter, NUnit.Framework.Internal.FinallyDelegate finD);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class NUnit.Framework.Internal.WorkItems.WorkItem CreateWorkItem(class NUnit.Framework.Api.ITestFilter childFilter, class NUnit.Framework.Internal.FinallyDelegate finD) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.Test.CreateWorkItem(NUnit.Framework.Api.ITestFilter,NUnit.Framework.Internal.FinallyDelegate)" />
      <MemberSignature Language="F#" Value="abstract member CreateWorkItem : NUnit.Framework.Api.ITestFilter * NUnit.Framework.Internal.FinallyDelegate -&gt; NUnit.Framework.Internal.WorkItems.WorkItem" Usage="test.CreateWorkItem (childFilter, finD)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Internal.WorkItems.WorkItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childFilter" Type="NUnit.Framework.Api.ITestFilter" />
        <Parameter Name="finD" Type="NUnit.Framework.Internal.FinallyDelegate" />
      </Parameters>
      <Docs>
        <param name="childFilter">To be added.</param>
        <param name="finD">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fixture">
      <MemberSignature Language="C#" Value="public object Fixture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Fixture" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Internal.Test.Fixture" />
      <MemberSignature Language="F#" Value="member this.Fixture : obj with get, set" Usage="NUnit.Framework.Internal.Test.Fixture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FixtureType">
      <MemberSignature Language="C#" Value="public Type FixtureType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type FixtureType" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Internal.Test.FixtureType" />
      <MemberSignature Language="F#" Value="member this.FixtureType : Type" Usage="NUnit.Framework.Internal.Test.FixtureType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:NUnit.Framework.Api.ITest.FixtureType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public string FullName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Internal.Test.FullName" />
      <MemberSignature Language="F#" Value="member this.FullName : string with get, set" Usage="NUnit.Framework.Internal.Test.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasChildren">
      <MemberSignature Language="C#" Value="public abstract bool HasChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChildren" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Internal.Test.HasChildren" />
      <MemberSignature Language="F#" Value="member this.HasChildren : bool" Usage="NUnit.Framework.Internal.Test.HasChildren" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:NUnit.Framework.Api.ITest.HasChildren</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public int Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Id" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Internal.Test.Id" />
      <MemberSignature Language="F#" Value="member this.Id : int with get, set" Usage="NUnit.Framework.Internal.Test.Id" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:NUnit.Framework.Api.ITest.Id</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSuite">
      <MemberSignature Language="C#" Value="public bool IsSuite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSuite" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Internal.Test.IsSuite" />
      <MemberSignature Language="F#" Value="member this.IsSuite : bool" Usage="NUnit.Framework.Internal.Test.IsSuite" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:NUnit.Framework.Api.ITest.IsSuite</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeTestResult">
      <MemberSignature Language="C#" Value="public abstract NUnit.Framework.Internal.TestResult MakeTestResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class NUnit.Framework.Internal.TestResult MakeTestResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.Test.MakeTestResult" />
      <MemberSignature Language="F#" Value="abstract member MakeTestResult : unit -&gt; NUnit.Framework.Internal.TestResult" Usage="test.MakeTestResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Internal.TestResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Internal.Test.Name" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="NUnit.Framework.Internal.Test.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public NUnit.Framework.Api.ITest Parent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class NUnit.Framework.Api.ITest Parent" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Internal.Test.Parent" />
      <MemberSignature Language="F#" Value="member this.Parent : NUnit.Framework.Api.ITest with get, set" Usage="NUnit.Framework.Internal.Test.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Api.ITest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopulateTestNode">
      <MemberSignature Language="C#" Value="protected void PopulateTestNode (NUnit.Framework.Api.XmlNode thisNode, bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void PopulateTestNode(class NUnit.Framework.Api.XmlNode thisNode, bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.Test.PopulateTestNode(NUnit.Framework.Api.XmlNode,System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.PopulateTestNode : NUnit.Framework.Api.XmlNode * bool -&gt; unit" Usage="test.PopulateTestNode (thisNode, recursive)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="thisNode" Type="NUnit.Framework.Api.XmlNode" />
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="thisNode">To be added.</param>
        <param name="recursive">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public NUnit.Framework.Api.IPropertyBag Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class NUnit.Framework.Api.IPropertyBag Properties" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Internal.Test.Properties" />
      <MemberSignature Language="F#" Value="member this.Properties : NUnit.Framework.Api.IPropertyBag" Usage="NUnit.Framework.Internal.Test.Properties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:NUnit.Framework.Api.ITest.Properties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Api.IPropertyBag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RunState">
      <MemberSignature Language="C#" Value="public NUnit.Framework.Api.RunState RunState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype NUnit.Framework.Api.RunState RunState" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Internal.Test.RunState" />
      <MemberSignature Language="F#" Value="member this.RunState : NUnit.Framework.Api.RunState with get, set" Usage="NUnit.Framework.Internal.Test.RunState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:NUnit.Framework.Api.ITest.RunState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Api.RunState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Seed">
      <MemberSignature Language="C#" Value="public int Seed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Seed" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Internal.Test.Seed" />
      <MemberSignature Language="F#" Value="member this.Seed : int with get, set" Usage="NUnit.Framework.Internal.Test.Seed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="setUpMethods">
      <MemberSignature Language="C#" Value="protected System.Reflection.MethodInfo[] setUpMethods;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Reflection.MethodInfo[] setUpMethods" />
      <MemberSignature Language="DocId" Value="F:NUnit.Framework.Internal.Test.setUpMethods" />
      <MemberSignature Language="F#" Value="val mutable setUpMethods : System.Reflection.MethodInfo[]" Usage="NUnit.Framework.Internal.Test.setUpMethods" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="tearDownMethods">
      <MemberSignature Language="C#" Value="protected System.Reflection.MethodInfo[] tearDownMethods;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Reflection.MethodInfo[] tearDownMethods" />
      <MemberSignature Language="DocId" Value="F:NUnit.Framework.Internal.Test.tearDownMethods" />
      <MemberSignature Language="F#" Value="val mutable tearDownMethods : System.Reflection.MethodInfo[]" Usage="NUnit.Framework.Internal.Test.tearDownMethods" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestCaseCount">
      <MemberSignature Language="C#" Value="public virtual int TestCaseCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TestCaseCount" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Internal.Test.TestCaseCount" />
      <MemberSignature Language="F#" Value="member this.TestCaseCount : int" Usage="NUnit.Framework.Internal.Test.TestCaseCount" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:NUnit.Framework.Api.ITest.TestCaseCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tests">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;NUnit.Framework.Api.ITest&gt; Tests { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class NUnit.Framework.Api.ITest&gt; Tests" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Internal.Test.Tests" />
      <MemberSignature Language="F#" Value="member this.Tests : System.Collections.Generic.IList&lt;NUnit.Framework.Api.ITest&gt;" Usage="NUnit.Framework.Internal.Test.Tests" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:NUnit.Framework.Api.ITest.Tests</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;NUnit.Framework.Api.ITest&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestType">
      <MemberSignature Language="C#" Value="public virtual string TestType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TestType" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Internal.Test.TestType" />
      <MemberSignature Language="F#" Value="member this.TestType : string" Usage="NUnit.Framework.Internal.Test.TestType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public NUnit.Framework.Api.XmlNode ToXml (bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class NUnit.Framework.Api.XmlNode ToXml(bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.Test.ToXml(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member ToXml : bool -&gt; NUnit.Framework.Api.XmlNode&#xA;override this.ToXml : bool -&gt; NUnit.Framework.Api.XmlNode" Usage="test.ToXml recursive" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:NUnit.Framework.Api.IXmlNodeBuilder.ToXml(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Api.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="recursive">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlElementName">
      <MemberSignature Language="C#" Value="public abstract string XmlElementName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlElementName" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Internal.Test.XmlElementName" />
      <MemberSignature Language="F#" Value="member this.XmlElementName : string" Usage="NUnit.Framework.Internal.Test.XmlElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
