<Type Name="TestMethod" FullName="NUnit.Framework.Internal.TestMethod">
  <TypeSignature Language="C#" Value="public class TestMethod : NUnit.Framework.Internal.Test" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TestMethod extends NUnit.Framework.Internal.Test" />
  <TypeSignature Language="DocId" Value="T:NUnit.Framework.Internal.TestMethod" />
  <TypeSignature Language="F#" Value="type TestMethod = class&#xA;    inherit Test" />
  <AssemblyInfo>
    <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>NUnit.Framework.Internal.Test</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TestMethod (System.Reflection.MethodInfo method, NUnit.Framework.Internal.Test parentSuite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.MethodInfo method, class NUnit.Framework.Internal.Test parentSuite) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.TestMethod.#ctor(System.Reflection.MethodInfo,NUnit.Framework.Internal.Test)" />
      <MemberSignature Language="F#" Value="new NUnit.Framework.Internal.TestMethod : System.Reflection.MethodInfo * NUnit.Framework.Internal.Test -&gt; NUnit.Framework.Internal.TestMethod" Usage="new NUnit.Framework.Internal.TestMethod (method, parentSuite)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="parentSuite" Type="NUnit.Framework.Internal.Test" />
      </Parameters>
      <Docs>
        <param name="method">To be added.</param>
        <param name="parentSuite">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToXml">
      <MemberSignature Language="C#" Value="public override NUnit.Framework.Api.XmlNode AddToXml (NUnit.Framework.Api.XmlNode parentNode, bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class NUnit.Framework.Api.XmlNode AddToXml(class NUnit.Framework.Api.XmlNode parentNode, bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.TestMethod.AddToXml(NUnit.Framework.Api.XmlNode,System.Boolean)" />
      <MemberSignature Language="F#" Value="override this.AddToXml : NUnit.Framework.Api.XmlNode * bool -&gt; NUnit.Framework.Api.XmlNode" Usage="testMethod.AddToXml (parentNode, recursive)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Api.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentNode" Type="NUnit.Framework.Api.XmlNode" />
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parentNode">To be added.</param>
        <param name="recursive">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWorkItem">
      <MemberSignature Language="C#" Value="public override NUnit.Framework.Internal.WorkItems.WorkItem CreateWorkItem (NUnit.Framework.Api.ITestFilter childFilter, NUnit.Framework.Internal.FinallyDelegate fd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class NUnit.Framework.Internal.WorkItems.WorkItem CreateWorkItem(class NUnit.Framework.Api.ITestFilter childFilter, class NUnit.Framework.Internal.FinallyDelegate fd) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.TestMethod.CreateWorkItem(NUnit.Framework.Api.ITestFilter,NUnit.Framework.Internal.FinallyDelegate)" />
      <MemberSignature Language="F#" Value="override this.CreateWorkItem : NUnit.Framework.Api.ITestFilter * NUnit.Framework.Internal.FinallyDelegate -&gt; NUnit.Framework.Internal.WorkItems.WorkItem" Usage="testMethod.CreateWorkItem (childFilter, fd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Internal.WorkItems.WorkItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childFilter" Type="NUnit.Framework.Api.ITestFilter" />
        <Parameter Name="fd" Type="NUnit.Framework.Internal.FinallyDelegate" />
      </Parameters>
      <Docs>
        <param name="childFilter">To be added.</param>
        <param name="fd">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomDecorators">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;NUnit.Framework.Internal.Commands.ICommandDecorator&gt; CustomDecorators { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class NUnit.Framework.Internal.Commands.ICommandDecorator&gt; CustomDecorators" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Internal.TestMethod.CustomDecorators" />
      <MemberSignature Language="F#" Value="member this.CustomDecorators : System.Collections.Generic.IList&lt;NUnit.Framework.Internal.Commands.ICommandDecorator&gt;" Usage="NUnit.Framework.Internal.TestMethod.CustomDecorators" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;NUnit.Framework.Internal.Commands.ICommandDecorator&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasChildren">
      <MemberSignature Language="C#" Value="public override bool HasChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChildren" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Internal.TestMethod.HasChildren" />
      <MemberSignature Language="F#" Value="member this.HasChildren : bool" Usage="NUnit.Framework.Internal.TestMethod.HasChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeTestCommand">
      <MemberSignature Language="C#" Value="public virtual NUnit.Framework.Internal.Commands.TestCommand MakeTestCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class NUnit.Framework.Internal.Commands.TestCommand MakeTestCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.TestMethod.MakeTestCommand" />
      <MemberSignature Language="F#" Value="abstract member MakeTestCommand : unit -&gt; NUnit.Framework.Internal.Commands.TestCommand&#xA;override this.MakeTestCommand : unit -&gt; NUnit.Framework.Internal.Commands.TestCommand" Usage="testMethod.MakeTestCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Internal.Commands.TestCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeTestResult">
      <MemberSignature Language="C#" Value="public override NUnit.Framework.Internal.TestResult MakeTestResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class NUnit.Framework.Internal.TestResult MakeTestResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.TestMethod.MakeTestResult" />
      <MemberSignature Language="F#" Value="override this.MakeTestResult : unit -&gt; NUnit.Framework.Internal.TestResult" Usage="testMethod.MakeTestResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Internal.TestResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo Method { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo Method" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Internal.TestMethod.Method" />
      <MemberSignature Language="F#" Value="member this.Method : System.Reflection.MethodInfo" Usage="NUnit.Framework.Internal.TestMethod.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tests">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;NUnit.Framework.Api.ITest&gt; Tests { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class NUnit.Framework.Api.ITest&gt; Tests" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Internal.TestMethod.Tests" />
      <MemberSignature Language="F#" Value="member this.Tests : System.Collections.Generic.IList&lt;NUnit.Framework.Api.ITest&gt;" Usage="NUnit.Framework.Internal.TestMethod.Tests" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;NUnit.Framework.Api.ITest&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlElementName">
      <MemberSignature Language="C#" Value="public override string XmlElementName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlElementName" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Internal.TestMethod.XmlElementName" />
      <MemberSignature Language="F#" Value="member this.XmlElementName : string" Usage="NUnit.Framework.Internal.TestMethod.XmlElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
