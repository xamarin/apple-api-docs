<Type Name="TestMethod" FullName="NUnit.Framework.Internal.TestMethod">
  <TypeSignature Language="C#" Value="public class TestMethod : NUnit.Framework.Internal.Test" apistyle="classic" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TestMethod extends NUnit.Framework.Internal.Test" apistyle="classic" />
  <TypeSignature Language="C#" Value="public class TestMethod : Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Internal.Test" apistyle="unified" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TestMethod extends Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Internal.Test" apistyle="unified" />
  <AssemblyInfo apistyle="classic">
    <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
    <AssemblyVersion>0.7.0.0</AssemblyVersion>
    <AssemblyVersion>0.8.0.0</AssemblyVersion>
    <AssemblyVersion>0.9.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo apistyle="unified">
    <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>NUnit.Framework.Internal.Test</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The TestMethod class represents a Test implemented as a method.
            Because of how exceptions are handled internally, this class
            must incorporate processing of expected exceptions. A change to
            the Test interface might make it easier to process exceptions
            in an object that aggregates a TestMethod in the future.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TestMethod (System.Reflection.MethodInfo method, NUnit.Framework.Internal.Test parentSuite);" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.MethodInfo method, class NUnit.Framework.Internal.Test parentSuite) cil managed" apistyle="classic" />
      <MemberSignature Language="C#" Value="public TestMethod (System.Reflection.MethodInfo method, Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Internal.Test parentSuite);" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.MethodInfo method, class Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Internal.Test parentSuite) cil managed" apistyle="unified" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
        <AssemblyVersion>0.8.0.0</AssemblyVersion>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="parentSuite" Type="NUnit.Framework.Internal.Test" apistyle="classic" />
        <Parameter Name="parentSuite" Type="Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Internal.Test" apistyle="unified" />
      </Parameters>
      <Docs>
        <param name="method">The method to be used as a test.</param>
        <param name="parentSuite">The suite or fixture to which the new test will be added</param>
        <summary>
            Initializes a new instance of the <see cref="T:NUnit.Framework.Internal.TestMethod" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToXml" apistyle="classic">
      <MemberSignature Language="C#" Value="public override NUnit.Framework.Api.XmlNode AddToXml (NUnit.Framework.Api.XmlNode parentNode, bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class NUnit.Framework.Api.XmlNode AddToXml(class NUnit.Framework.Api.XmlNode parentNode, bool recursive) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.8.0.0</AssemblyVersion>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Api.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentNode" Type="NUnit.Framework.Api.XmlNode" />
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parentNode">To be added.</param>
        <param name="recursive">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWorkItem" apistyle="classic">
      <MemberSignature Language="C#" Value="public override NUnit.Framework.Internal.WorkItems.WorkItem CreateWorkItem (NUnit.Framework.Api.ITestFilter childFilter, NUnit.Framework.Internal.FinallyDelegate fd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class NUnit.Framework.Internal.WorkItems.WorkItem CreateWorkItem(class NUnit.Framework.Api.ITestFilter childFilter, class NUnit.Framework.Internal.FinallyDelegate fd) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="classic">
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Internal.WorkItems.WorkItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childFilter" Type="NUnit.Framework.Api.ITestFilter" />
        <Parameter Name="fd" Type="NUnit.Framework.Internal.FinallyDelegate" />
      </Parameters>
      <Docs>
        <param name="childFilter">To be added.</param>
        <param name="fd">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomDecorators">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;NUnit.Framework.Internal.Commands.ICommandDecorator&gt; CustomDecorators { get; }" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class NUnit.Framework.Internal.Commands.ICommandDecorator&gt; CustomDecorators" apistyle="classic" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Internal.Commands.ICommandDecorator&gt; CustomDecorators { get; }" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Internal.Commands.ICommandDecorator&gt; CustomDecorators" apistyle="unified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
        <AssemblyVersion>0.8.0.0</AssemblyVersion>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType apistyle="classic">System.Collections.Generic.IList&lt;NUnit.Framework.Internal.Commands.ICommandDecorator&gt;</ReturnType>
        <ReturnType apistyle="unified">System.Collections.Generic.IList&lt;Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Internal.Commands.ICommandDecorator&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a list of custom decorators for this test.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasChildren">
      <MemberSignature Language="C#" Value="public override bool HasChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
        <AssemblyVersion>0.8.0.0</AssemblyVersion>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a bool indicating whether the current test
            has any descendant tests.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeTestCommand" apistyle="classic">
      <MemberSignature Language="C#" Value="public virtual NUnit.Framework.Internal.Commands.TestCommand MakeTestCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class NUnit.Framework.Internal.Commands.TestCommand MakeTestCommand() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.8.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Internal.Commands.TestCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeTestResult" apistyle="classic">
      <MemberSignature Language="C#" Value="public override NUnit.Framework.Internal.TestResult MakeTestResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class NUnit.Framework.Internal.TestResult MakeTestResult() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
        <AssemblyVersion>0.8.0.0</AssemblyVersion>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Internal.TestResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Overridden to return a TestCaseResult.
            </summary>
        <returns>A TestResult for this test.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo Method { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
        <AssemblyVersion>0.8.0.0</AssemblyVersion>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the method.
            </summary>
        <value>The method that performs the test.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tests">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;NUnit.Framework.Api.ITest&gt; Tests { get; }" apistyle="classic" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class NUnit.Framework.Api.ITest&gt; Tests" apistyle="classic" />
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Api.ITest&gt; Tests { get; }" apistyle="unified" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Api.ITest&gt; Tests" apistyle="unified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
        <AssemblyVersion>0.8.0.0</AssemblyVersion>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType apistyle="classic">System.Collections.Generic.IList&lt;NUnit.Framework.Api.ITest&gt;</ReturnType>
        <ReturnType apistyle="unified">System.Collections.Generic.IList&lt;Xamarin.iOS.dll=MonoTouch.NUnit.Framework.Api.ITest&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets this test's child tests
            </summary>
        <value>A list of child tests</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlElementName">
      <MemberSignature Language="C#" Value="public override string XmlElementName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo apistyle="classic">
        <AssemblyVersion>0.7.0.0</AssemblyVersion>
        <AssemblyVersion>0.8.0.0</AssemblyVersion>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo apistyle="unified">
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name used for the top-level element in the
            XML representation of this test
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
