<Type Name="TypeHelper" FullName="NUnit.Framework.Internal.TypeHelper">
  <TypeSignature Language="C#" Value="public class TypeHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:NUnit.Framework.Internal.TypeHelper" />
  <TypeSignature Language="F#" Value="type TypeHelper = class" />
  <AssemblyInfo>
    <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeHelper ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.TypeHelper.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BestCommonType">
      <MemberSignature Language="C#" Value="public static Type BestCommonType (Type type1, Type type2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type BestCommonType(class System.Type type1, class System.Type type2) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.TypeHelper.BestCommonType(System.Type,System.Type)" />
      <MemberSignature Language="F#" Value="static member BestCommonType : Type * Type -&gt; Type" Usage="NUnit.Framework.Internal.TypeHelper.BestCommonType (type1, type2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type1" Type="System.Type" />
        <Parameter Name="type2" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type1">To be added.</param>
        <param name="type2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDeduceTypeArgsFromArgs">
      <MemberSignature Language="C#" Value="public static bool CanDeduceTypeArgsFromArgs (Type type, object[] arglist, ref Type[] typeArgsOut);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanDeduceTypeArgsFromArgs(class System.Type type, object[] arglist, class System.Type[]&amp; typeArgsOut) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.TypeHelper.CanDeduceTypeArgsFromArgs(System.Type,System.Object[],System.Type[]@)" />
      <MemberSignature Language="F#" Value="static member CanDeduceTypeArgsFromArgs : Type * obj[] *  -&gt; bool" Usage="NUnit.Framework.Internal.TypeHelper.CanDeduceTypeArgsFromArgs (type, arglist, typeArgsOut)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="arglist" Type="System.Object[]" />
        <Parameter Name="typeArgsOut" Type="System.Type[]" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="arglist">To be added.</param>
        <param name="typeArgsOut">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertArgumentList">
      <MemberSignature Language="C#" Value="public static void ConvertArgumentList (object[] arglist, System.Reflection.ParameterInfo[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertArgumentList(object[] arglist, class System.Reflection.ParameterInfo[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.TypeHelper.ConvertArgumentList(System.Object[],System.Reflection.ParameterInfo[])" />
      <MemberSignature Language="F#" Value="static member ConvertArgumentList : obj[] * System.Reflection.ParameterInfo[] -&gt; unit" Usage="NUnit.Framework.Internal.TypeHelper.ConvertArgumentList (arglist, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arglist" Type="System.Object[]" />
        <Parameter Name="parameters" Type="System.Reflection.ParameterInfo[]" />
      </Parameters>
      <Docs>
        <param name="arglist">To be added.</param>
        <param name="parameters">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDisplayName">
      <MemberSignature Language="C#" Value="public static string GetDisplayName (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDisplayName(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.TypeHelper.GetDisplayName(System.Type)" />
      <MemberSignature Language="F#" Value="static member GetDisplayName : Type -&gt; string" Usage="NUnit.Framework.Internal.TypeHelper.GetDisplayName type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDisplayName">
      <MemberSignature Language="C#" Value="public static string GetDisplayName (Type type, object[] arglist);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDisplayName(class System.Type type, object[] arglist) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.TypeHelper.GetDisplayName(System.Type,System.Object[])" />
      <MemberSignature Language="F#" Value="static member GetDisplayName : Type * obj[] -&gt; string" Usage="NUnit.Framework.Internal.TypeHelper.GetDisplayName (type, arglist)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="arglist" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="arglist">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumNames">
      <MemberSignature Language="C#" Value="public static string[] GetEnumNames (Type enumType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetEnumNames(class System.Type enumType) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.TypeHelper.GetEnumNames(System.Type)" />
      <MemberSignature Language="F#" Value="static member GetEnumNames : Type -&gt; string[]" Usage="NUnit.Framework.Internal.TypeHelper.GetEnumNames enumType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="enumType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumValues">
      <MemberSignature Language="C#" Value="public static Array GetEnumValues (Type enumType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array GetEnumValues(class System.Type enumType) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.TypeHelper.GetEnumValues(System.Type)" />
      <MemberSignature Language="F#" Value="static member GetEnumValues : Type -&gt; Array" Usage="NUnit.Framework.Internal.TypeHelper.GetEnumValues enumType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="enumType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNumeric">
      <MemberSignature Language="C#" Value="public static bool IsNumeric (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNumeric(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.TypeHelper.IsNumeric(System.Type)" />
      <MemberSignature Language="F#" Value="static member IsNumeric : Type -&gt; bool" Usage="NUnit.Framework.Internal.TypeHelper.IsNumeric type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeGenericType">
      <MemberSignature Language="C#" Value="public static Type MakeGenericType (Type type, Type[] typeArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type MakeGenericType(class System.Type type, class System.Type[] typeArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.TypeHelper.MakeGenericType(System.Type,System.Type[])" />
      <MemberSignature Language="F#" Value="static member MakeGenericType : Type * Type[] -&gt; Type" Usage="NUnit.Framework.Internal.TypeHelper.MakeGenericType (type, typeArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="typeArgs" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="typeArgs">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
