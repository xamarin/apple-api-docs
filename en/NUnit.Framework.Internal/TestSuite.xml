<Type Name="TestSuite" FullName="NUnit.Framework.Internal.TestSuite">
  <TypeSignature Language="C#" Value="public class TestSuite : NUnit.Framework.Internal.Test" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TestSuite extends NUnit.Framework.Internal.Test" />
  <TypeSignature Language="DocId" Value="T:NUnit.Framework.Internal.TestSuite" />
  <TypeSignature Language="F#" Value="type TestSuite = class&#xA;    inherit Test" />
  <AssemblyInfo>
    <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>NUnit.Framework.Internal.Test</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TestSuite (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.TestSuite.#ctor(System.String)" />
      <MemberSignature Language="F#" Value="new NUnit.Framework.Internal.TestSuite : string -&gt; NUnit.Framework.Internal.TestSuite" Usage="new NUnit.Framework.Internal.TestSuite name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TestSuite (Type fixtureType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type fixtureType) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.TestSuite.#ctor(System.Type)" />
      <MemberSignature Language="F#" Value="new NUnit.Framework.Internal.TestSuite : Type -&gt; NUnit.Framework.Internal.TestSuite" Usage="new NUnit.Framework.Internal.TestSuite fixtureType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fixtureType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="fixtureType">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TestSuite (string parentSuiteName, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parentSuiteName, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.TestSuite.#ctor(System.String,System.String)" />
      <MemberSignature Language="F#" Value="new NUnit.Framework.Internal.TestSuite : string * string -&gt; NUnit.Framework.Internal.TestSuite" Usage="new NUnit.Framework.Internal.TestSuite (parentSuiteName, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parentSuiteName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parentSuiteName">To be added.</param>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TestSuite (Type fixtureType, object[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type fixtureType, object[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.TestSuite.#ctor(System.Type,System.Object[])" />
      <MemberSignature Language="F#" Value="new NUnit.Framework.Internal.TestSuite : Type * obj[] -&gt; NUnit.Framework.Internal.TestSuite" Usage="new NUnit.Framework.Internal.TestSuite (fixtureType, arguments)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fixtureType" Type="System.Type" />
        <Parameter Name="arguments" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="fixtureType">To be added.</param>
        <param name="arguments">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (NUnit.Framework.Internal.Test test);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class NUnit.Framework.Internal.Test test) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.TestSuite.Add(NUnit.Framework.Internal.Test)" />
      <MemberSignature Language="F#" Value="member this.Add : NUnit.Framework.Internal.Test -&gt; unit" Usage="testSuite.Add test" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="test" Type="NUnit.Framework.Internal.Test" />
      </Parameters>
      <Docs>
        <param name="test">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToXml">
      <MemberSignature Language="C#" Value="public override NUnit.Framework.Api.XmlNode AddToXml (NUnit.Framework.Api.XmlNode parentNode, bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class NUnit.Framework.Api.XmlNode AddToXml(class NUnit.Framework.Api.XmlNode parentNode, bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.TestSuite.AddToXml(NUnit.Framework.Api.XmlNode,System.Boolean)" />
      <MemberSignature Language="F#" Value="override this.AddToXml : NUnit.Framework.Api.XmlNode * bool -&gt; NUnit.Framework.Api.XmlNode" Usage="testSuite.AddToXml (parentNode, recursive)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Api.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentNode" Type="NUnit.Framework.Api.XmlNode" />
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parentNode">To be added.</param>
        <param name="recursive">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWorkItem">
      <MemberSignature Language="C#" Value="public override NUnit.Framework.Internal.WorkItems.WorkItem CreateWorkItem (NUnit.Framework.Api.ITestFilter childFilter, NUnit.Framework.Internal.FinallyDelegate finD);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class NUnit.Framework.Internal.WorkItems.WorkItem CreateWorkItem(class NUnit.Framework.Api.ITestFilter childFilter, class NUnit.Framework.Internal.FinallyDelegate finD) cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.TestSuite.CreateWorkItem(NUnit.Framework.Api.ITestFilter,NUnit.Framework.Internal.FinallyDelegate)" />
      <MemberSignature Language="F#" Value="override this.CreateWorkItem : NUnit.Framework.Api.ITestFilter * NUnit.Framework.Internal.FinallyDelegate -&gt; NUnit.Framework.Internal.WorkItems.WorkItem" Usage="testSuite.CreateWorkItem (childFilter, finD)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Internal.WorkItems.WorkItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childFilter" Type="NUnit.Framework.Api.ITestFilter" />
        <Parameter Name="finD" Type="NUnit.Framework.Internal.FinallyDelegate" />
      </Parameters>
      <Docs>
        <param name="childFilter">To be added.</param>
        <param name="finD">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOneTimeSetUpCommand">
      <MemberSignature Language="C#" Value="public virtual NUnit.Framework.Internal.Commands.TestCommand GetOneTimeSetUpCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class NUnit.Framework.Internal.Commands.TestCommand GetOneTimeSetUpCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.TestSuite.GetOneTimeSetUpCommand" />
      <MemberSignature Language="F#" Value="abstract member GetOneTimeSetUpCommand : unit -&gt; NUnit.Framework.Internal.Commands.TestCommand&#xA;override this.GetOneTimeSetUpCommand : unit -&gt; NUnit.Framework.Internal.Commands.TestCommand" Usage="testSuite.GetOneTimeSetUpCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Internal.Commands.TestCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOneTimeTearDownCommand">
      <MemberSignature Language="C#" Value="public virtual NUnit.Framework.Internal.Commands.TestCommand GetOneTimeTearDownCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class NUnit.Framework.Internal.Commands.TestCommand GetOneTimeTearDownCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.TestSuite.GetOneTimeTearDownCommand" />
      <MemberSignature Language="F#" Value="abstract member GetOneTimeTearDownCommand : unit -&gt; NUnit.Framework.Internal.Commands.TestCommand&#xA;override this.GetOneTimeTearDownCommand : unit -&gt; NUnit.Framework.Internal.Commands.TestCommand" Usage="testSuite.GetOneTimeTearDownCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Internal.Commands.TestCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasChildren">
      <MemberSignature Language="C#" Value="public override bool HasChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChildren" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Internal.TestSuite.HasChildren" />
      <MemberSignature Language="F#" Value="member this.HasChildren : bool" Usage="NUnit.Framework.Internal.TestSuite.HasChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="maintainTestOrder">
      <MemberSignature Language="C#" Value="protected bool maintainTestOrder;" />
      <MemberSignature Language="ILAsm" Value=".field family bool maintainTestOrder" />
      <MemberSignature Language="DocId" Value="F:NUnit.Framework.Internal.TestSuite.maintainTestOrder" />
      <MemberSignature Language="F#" Value="val mutable maintainTestOrder : bool" Usage="NUnit.Framework.Internal.TestSuite.maintainTestOrder" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeTestResult">
      <MemberSignature Language="C#" Value="public override NUnit.Framework.Internal.TestResult MakeTestResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class NUnit.Framework.Internal.TestResult MakeTestResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.TestSuite.MakeTestResult" />
      <MemberSignature Language="F#" Value="override this.MakeTestResult : unit -&gt; NUnit.Framework.Internal.TestResult" Usage="testSuite.MakeTestResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Internal.TestResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:NUnit.Framework.Internal.TestSuite.Sort" />
      <MemberSignature Language="F#" Value="member this.Sort : unit -&gt; unit" Usage="testSuite.Sort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TestCaseCount">
      <MemberSignature Language="C#" Value="public override int TestCaseCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TestCaseCount" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Internal.TestSuite.TestCaseCount" />
      <MemberSignature Language="F#" Value="member this.TestCaseCount : int" Usage="NUnit.Framework.Internal.TestSuite.TestCaseCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tests">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;NUnit.Framework.Api.ITest&gt; Tests { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class NUnit.Framework.Api.ITest&gt; Tests" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Internal.TestSuite.Tests" />
      <MemberSignature Language="F#" Value="member this.Tests : System.Collections.Generic.IList&lt;NUnit.Framework.Api.ITest&gt;" Usage="NUnit.Framework.Internal.TestSuite.Tests" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;NUnit.Framework.Api.ITest&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlElementName">
      <MemberSignature Language="C#" Value="public override string XmlElementName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlElementName" />
      <MemberSignature Language="DocId" Value="P:NUnit.Framework.Internal.TestSuite.XmlElementName" />
      <MemberSignature Language="F#" Value="member this.XmlElementName : string" Usage="NUnit.Framework.Internal.TestSuite.XmlElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
