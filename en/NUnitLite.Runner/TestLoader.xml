<Type Name="TestLoader" FullName="NUnitLite.Runner.TestLoader">
  <TypeSignature Language="C#" Value="public class TestLoader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TestLoader extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>MonoTouch.NUnitLite</AssemblyName>
    <AssemblyVersion>0.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TestLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static NUnitLite.ITest Load (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnitLite.ITest Load(class System.Reflection.Assembly assembly) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnitLite.ITest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly">The assembly to be loaded</param>
        <summary>
            Loads all the test fixtures in an assembly
            </summary>
        <returns>A Test containing all fixtures found</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static NUnitLite.ITest Load (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnitLite.ITest Load(class System.Type type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnitLite.ITest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">The type to be loaded</param>
        <summary>
            Loads a type as a test using either the test suite
            mechansm or the fixture mechanism.
            </summary>
        <returns>A test constructed on that type</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static NUnitLite.ITest Load (System.Reflection.Assembly assembly, string className);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnitLite.ITest Load(class System.Reflection.Assembly assembly, string className) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnitLite.ITest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="className" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assembly">The assembly</param>
        <param name="className">The name of the test fixture class</param>
        <summary>
            Load a named fixture class from an assembly
            </summary>
        <returns>A test representing the named fixture</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static NUnitLite.ITest Load (System.Reflection.Assembly assembly, string[] tests);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnitLite.ITest Load(class System.Reflection.Assembly assembly, string[] tests) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnitLite.ITest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="tests" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="assembly">To be added.</param>
        <param name="tests">String array containing the names of the test classes to load</param>
        <summary>
            Loads a test suite containing multiple tests from an assembly
            </summary>
        <returns>A suite containing all the tests</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadAsSuite">
      <MemberSignature Language="C#" Value="public static NUnitLite.ITest LoadAsSuite (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnitLite.ITest LoadAsSuite(class System.Type type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnitLite.ITest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">The type to load</param>
        <summary>
            Loads a type as a suite if possible
            </summary>
        <returns>A test constructed from the type</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
