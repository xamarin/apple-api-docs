<Type Name="CFHTTPStream" FullName="CoreServices.CFHTTPStream">
  <TypeSignature Language="C#" Value="public class CFHTTPStream : CoreFoundation.CFReadStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CFHTTPStream extends CoreFoundation.CFReadStream" />
  <TypeSignature Language="DocId" Value="T:CoreServices.CFHTTPStream" />
  <TypeSignature Language="F#" Value="type CFHTTPStream = class&#xA;    inherit CFReadStream" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>CoreFoundation.CFReadStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'NSUrlSession'.")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarin-ios-sdk-12">
      <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.None, "Use 'NSUrlSession'.")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A <see cref="T:CoreFoundation.CFReadStream" /> that reads HTTP stream data.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AttemptPersistentConnection">
      <MemberSignature Language="C#" Value="public bool AttemptPersistentConnection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AttemptPersistentConnection" />
      <MemberSignature Language="DocId" Value="P:CoreServices.CFHTTPStream.AttemptPersistentConnection" />
      <MemberSignature Language="F#" Value="member this.AttemptPersistentConnection : bool with get, set" Usage="CoreServices.CFHTTPStream.AttemptPersistentConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinalURL">
      <MemberSignature Language="C#" Value="public Uri FinalURL { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri FinalURL" />
      <MemberSignature Language="DocId" Value="P:CoreServices.CFHTTPStream.FinalURL" />
      <MemberSignature Language="F#" Value="member this.FinalURL : Uri" Usage="CoreServices.CFHTTPStream.FinalURL" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFinalRequest">
      <MemberSignature Language="C#" Value="public CoreServices.CFHTTPMessage GetFinalRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreServices.CFHTTPMessage GetFinalRequest() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.CFHTTPStream.GetFinalRequest" />
      <MemberSignature Language="F#" Value="member this.GetFinalRequest : unit -&gt; CoreServices.CFHTTPMessage" Usage="cFHTTPStream.GetFinalRequest " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreServices.CFHTTPMessage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResponseHeader">
      <MemberSignature Language="C#" Value="public CoreServices.CFHTTPMessage GetResponseHeader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class CoreServices.CFHTTPMessage GetResponseHeader() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.CFHTTPStream.GetResponseHeader" />
      <MemberSignature Language="F#" Value="member this.GetResponseHeader : unit -&gt; CoreServices.CFHTTPMessage" Usage="cFHTTPStream.GetResponseHeader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreServices.CFHTTPMessage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestBytesWrittenCount">
      <MemberSignature Language="C#" Value="public int RequestBytesWrittenCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RequestBytesWrittenCount" />
      <MemberSignature Language="DocId" Value="P:CoreServices.CFHTTPStream.RequestBytesWrittenCount" />
      <MemberSignature Language="F#" Value="member this.RequestBytesWrittenCount : int" Usage="CoreServices.CFHTTPStream.RequestBytesWrittenCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProxy">
      <MemberSignature Language="C#" Value="public void SetProxy (CoreFoundation.CFProxySettings proxySettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetProxy(class CoreFoundation.CFProxySettings proxySettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.CFHTTPStream.SetProxy(CoreFoundation.CFProxySettings)" />
      <MemberSignature Language="F#" Value="member this.SetProxy : CoreFoundation.CFProxySettings -&gt; unit" Usage="cFHTTPStream.SetProxy proxySettings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="proxySettings" Type="CoreFoundation.CFProxySettings" />
      </Parameters>
      <Docs>
        <param name="proxySettings">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldAutoredirect">
      <MemberSignature Language="C#" Value="public bool ShouldAutoredirect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShouldAutoredirect" />
      <MemberSignature Language="DocId" Value="P:CoreServices.CFHTTPStream.ShouldAutoredirect" />
      <MemberSignature Language="F#" Value="member this.ShouldAutoredirect : bool with get, set" Usage="CoreServices.CFHTTPStream.ShouldAutoredirect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
