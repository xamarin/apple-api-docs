<Type Name="CFHTTPMessage" FullName="CoreServices.CFHTTPMessage">
  <TypeSignature Language="C#" Value="public class CFHTTPMessage : CoreFoundation.CFType, IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CFHTTPMessage extends CoreFoundation.CFType implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:CoreServices.CFHTTPMessage" />
  <TypeSignature Language="F#" Value="type CFHTTPMessage = class&#xA;    inherit CFType&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>CoreFoundation.CFType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>An HTTP message.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddAuthentication">
      <MemberSignature Language="C#" Value="public bool AddAuthentication (CoreServices.CFHTTPMessage failureResponse, Foundation.NSString username, Foundation.NSString password, CoreServices.CFHTTPMessage.AuthenticationScheme scheme, bool forProxy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool AddAuthentication(class CoreServices.CFHTTPMessage failureResponse, class Foundation.NSString username, class Foundation.NSString password, valuetype CoreServices.CFHTTPMessage/AuthenticationScheme scheme, bool forProxy) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.CFHTTPMessage.AddAuthentication(CoreServices.CFHTTPMessage,Foundation.NSString,Foundation.NSString,CoreServices.CFHTTPMessage.AuthenticationScheme,System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.AddAuthentication : CoreServices.CFHTTPMessage * Foundation.NSString * Foundation.NSString * CoreServices.CFHTTPMessage.AuthenticationScheme * bool -&gt; bool" Usage="cFHTTPMessage.AddAuthentication (failureResponse, username, password, scheme, forProxy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="failureResponse" Type="CoreServices.CFHTTPMessage" />
        <Parameter Name="username" Type="Foundation.NSString" />
        <Parameter Name="password" Type="Foundation.NSString" />
        <Parameter Name="scheme" Type="CoreServices.CFHTTPMessage+AuthenticationScheme" />
        <Parameter Name="forProxy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="failureResponse">To be added.</param>
        <param name="username">To be added.</param>
        <param name="password">To be added.</param>
        <param name="scheme">To be added.</param>
        <param name="forProxy">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendBytes">
      <MemberSignature Language="C#" Value="public bool AppendBytes (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool AppendBytes(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.CFHTTPMessage.AppendBytes(System.Byte[])" />
      <MemberSignature Language="F#" Value="member this.AppendBytes : byte[] -&gt; bool" Usage="cFHTTPMessage.AppendBytes bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendBytes">
      <MemberSignature Language="C#" Value="public bool AppendBytes (byte[] bytes, nint count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool AppendBytes(unsigned int8[] bytes, valuetype System.nint count) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.CFHTTPMessage.AppendBytes(System.Byte[],System.nint)" />
      <MemberSignature Language="F#" Value="member this.AppendBytes : byte[] * nint -&gt; bool" Usage="cFHTTPMessage.AppendBytes (bytes, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="count" Type="System.nint" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyCredentialDictionary">
      <MemberSignature Language="C#" Value="public void ApplyCredentialDictionary (CoreServices.CFHTTPAuthentication auth, System.Net.NetworkCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyCredentialDictionary(class CoreServices.CFHTTPAuthentication auth, class System.Net.NetworkCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.CFHTTPMessage.ApplyCredentialDictionary(CoreServices.CFHTTPAuthentication,System.Net.NetworkCredential)" />
      <MemberSignature Language="F#" Value="member this.ApplyCredentialDictionary : CoreServices.CFHTTPAuthentication * System.Net.NetworkCredential -&gt; unit" Usage="cFHTTPMessage.ApplyCredentialDictionary (auth, credential)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="auth" Type="CoreServices.CFHTTPAuthentication" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
      </Parameters>
      <Docs>
        <param name="auth">To be added.</param>
        <param name="credential">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyCredentials">
      <MemberSignature Language="C#" Value="public void ApplyCredentials (CoreServices.CFHTTPAuthentication auth, System.Net.NetworkCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyCredentials(class CoreServices.CFHTTPAuthentication auth, class System.Net.NetworkCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.CFHTTPMessage.ApplyCredentials(CoreServices.CFHTTPAuthentication,System.Net.NetworkCredential)" />
      <MemberSignature Language="F#" Value="member this.ApplyCredentials : CoreServices.CFHTTPAuthentication * System.Net.NetworkCredential -&gt; unit" Usage="cFHTTPMessage.ApplyCredentials (auth, credential)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="auth" Type="CoreServices.CFHTTPAuthentication" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
      </Parameters>
      <Docs>
        <param name="auth">To be added.</param>
        <param name="credential">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckHandle">
      <MemberSignature Language="C#" Value="protected void CheckHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.CFHTTPMessage.CheckHandle" />
      <MemberSignature Language="F#" Value="member this.CheckHandle : unit -&gt; unit" Usage="cFHTTPMessage.CheckHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEmpty">
      <MemberSignature Language="C#" Value="public static CoreServices.CFHTTPMessage CreateEmpty (bool request);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreServices.CFHTTPMessage CreateEmpty(bool request) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.CFHTTPMessage.CreateEmpty(System.Boolean)" />
      <MemberSignature Language="F#" Value="static member CreateEmpty : bool -&gt; CoreServices.CFHTTPMessage" Usage="CoreServices.CFHTTPMessage.CreateEmpty request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreServices.CFHTTPMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRequest">
      <MemberSignature Language="C#" Value="public static CoreServices.CFHTTPMessage CreateRequest (Uri uri, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreServices.CFHTTPMessage CreateRequest(class System.Uri uri, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.CFHTTPMessage.CreateRequest(System.Uri,System.String)" />
      <MemberSignature Language="F#" Value="static member CreateRequest : Uri * string -&gt; CoreServices.CFHTTPMessage" Usage="CoreServices.CFHTTPMessage.CreateRequest (uri, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreServices.CFHTTPMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <param name="method">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRequest">
      <MemberSignature Language="C#" Value="public static CoreServices.CFHTTPMessage CreateRequest (CoreFoundation.CFUrl url, Foundation.NSString method, Version version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreServices.CFHTTPMessage CreateRequest(class CoreFoundation.CFUrl url, class Foundation.NSString method, class System.Version version) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.CFHTTPMessage.CreateRequest(CoreFoundation.CFUrl,Foundation.NSString,System.Version)" />
      <MemberSignature Language="F#" Value="static member CreateRequest : CoreFoundation.CFUrl * Foundation.NSString * Version -&gt; CoreServices.CFHTTPMessage" Usage="CoreServices.CFHTTPMessage.CreateRequest (url, method, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreServices.CFHTTPMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="CoreFoundation.CFUrl" />
        <Parameter Name="method" Type="Foundation.NSString" />
        <Parameter Name="version" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <param name="method">To be added.</param>
        <param name="version">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRequest">
      <MemberSignature Language="C#" Value="public static CoreServices.CFHTTPMessage CreateRequest (Uri uri, string method, Version version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreServices.CFHTTPMessage CreateRequest(class System.Uri uri, string method, class System.Version version) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.CFHTTPMessage.CreateRequest(System.Uri,System.String,System.Version)" />
      <MemberSignature Language="F#" Value="static member CreateRequest : Uri * string * Version -&gt; CoreServices.CFHTTPMessage" Usage="CoreServices.CFHTTPMessage.CreateRequest (uri, method, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreServices.CFHTTPMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="version" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <param name="method">To be added.</param>
        <param name="version">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.CFHTTPMessage.Dispose" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cFHTTPMessage.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the resources used by the CFHTTPMessage object.</summary>
        <remarks>
          <para>The Dispose method releases the resources used by the CFHTTPMessage class.</para>
          <para>Calling the Dispose method when the application is finished using the CFHTTPMessage ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.  For more information on releasing resources see ``Cleaning up Unmananaged Resources'' at http://msdn.microsoft.com/en-us/library/498928w2.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.CFHTTPMessage.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="cFHTTPMessage.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the CFHTTPMessage object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the CFHTTPMessage class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the CFHTTPMessage ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at http://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CFHTTPMessage ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.CFHTTPMessage.Finalize" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="cFHTTPMessage.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finalizer for the CFHTTPMessage object</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllHeaderFields">
      <MemberSignature Language="C#" Value="public Foundation.NSDictionary GetAllHeaderFields ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Foundation.NSDictionary GetAllHeaderFields() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.CFHTTPMessage.GetAllHeaderFields" />
      <MemberSignature Language="F#" Value="member this.GetAllHeaderFields : unit -&gt; Foundation.NSDictionary" Usage="cFHTTPMessage.GetAllHeaderFields " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Foundation.NSDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeID">
      <MemberSignature Language="C#" Value="public static nint GetTypeID ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig pinvokeimpl (&quot;/System/Library/Frameworks/CFNetwork.framework/CFNetwork&quot; as &quot;CFHTTPMessageGetTypeID&quot; winapi)valuetype System.nint GetTypeID() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.CFHTTPMessage.GetTypeID" />
      <MemberSignature Language="F#" Value="static member GetTypeID : unit -&gt; nint" Usage="CoreServices.CFHTTPMessage.GetTypeID " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Type identifier for the CoreServices.CFHTTPMessage type.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>The returned token is the CoreFoundation type identifier (CFType) that has been assigned to this class.</para>
          <para>This can be used to determine type identity between different CoreFoundation objects.</para>
          <para>You can retrieve the type of a CoreFoundation object by invoking the <see cref="M:CoreFoundation.CFType.GetTypeID" /> on the native handle of the object</para>
          <example>
            <code lang="C#"><![CDATA[bool isCFHTTPMessage = (CFType.GetTypeID (foo.Handle) == CFHTTPMessage.GetTypeID ());]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:CoreServices.CFHTTPMessage.Handle" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="CoreServices.CFHTTPMessage.Handle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:ObjCRuntime.INativeObject.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Handle (pointer) to the unmanaged object representation.</summary>
        <value>A pointer</value>
        <remarks>This IntPtr is a handle to the underlying unmanaged representation for this object.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHeaderComplete">
      <MemberSignature Language="C#" Value="public bool IsHeaderComplete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHeaderComplete" />
      <MemberSignature Language="DocId" Value="P:CoreServices.CFHTTPMessage.IsHeaderComplete" />
      <MemberSignature Language="F#" Value="member this.IsHeaderComplete : bool" Usage="CoreServices.CFHTTPMessage.IsHeaderComplete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRequest">
      <MemberSignature Language="C#" Value="public bool IsRequest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRequest" />
      <MemberSignature Language="DocId" Value="P:CoreServices.CFHTTPMessage.IsRequest" />
      <MemberSignature Language="F#" Value="member this.IsRequest : bool" Usage="CoreServices.CFHTTPMessage.IsRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseStatusCode">
      <MemberSignature Language="C#" Value="public System.Net.HttpStatusCode ResponseStatusCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.HttpStatusCode ResponseStatusCode" />
      <MemberSignature Language="DocId" Value="P:CoreServices.CFHTTPMessage.ResponseStatusCode" />
      <MemberSignature Language="F#" Value="member this.ResponseStatusCode : System.Net.HttpStatusCode" Usage="CoreServices.CFHTTPMessage.ResponseStatusCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpStatusCode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseStatusLine">
      <MemberSignature Language="C#" Value="public string ResponseStatusLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResponseStatusLine" />
      <MemberSignature Language="DocId" Value="P:CoreServices.CFHTTPMessage.ResponseStatusLine" />
      <MemberSignature Language="F#" Value="member this.ResponseStatusLine : string" Usage="CoreServices.CFHTTPMessage.ResponseStatusLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBody">
      <MemberSignature Language="C#" Value="public void SetBody (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBody(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.CFHTTPMessage.SetBody(System.Byte[])" />
      <MemberSignature Language="F#" Value="member this.SetBody : byte[] -&gt; unit" Usage="cFHTTPMessage.SetBody buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHeaderFieldValue">
      <MemberSignature Language="C#" Value="public void SetHeaderFieldValue (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetHeaderFieldValue(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.CFHTTPMessage.SetHeaderFieldValue(System.String,System.String)" />
      <MemberSignature Language="F#" Value="member this.SetHeaderFieldValue : string * string -&gt; unit" Usage="cFHTTPMessage.SetHeaderFieldValue (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public Version Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version Version" />
      <MemberSignature Language="DocId" Value="P:CoreServices.CFHTTPMessage.Version" />
      <MemberSignature Language="F#" Value="member this.Version : Version" Usage="CoreServices.CFHTTPMessage.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
