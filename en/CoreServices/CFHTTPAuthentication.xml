<Type Name="CFHTTPAuthentication" FullName="CoreServices.CFHTTPAuthentication">
  <TypeSignature Language="C#" Value="public class CFHTTPAuthentication : CoreFoundation.CFType, IDisposable, ObjCRuntime.INativeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CFHTTPAuthentication extends CoreFoundation.CFType implements class ObjCRuntime.INativeObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:CoreServices.CFHTTPAuthentication" />
  <TypeSignature Language="F#" Value="type CFHTTPAuthentication = class&#xA;    inherit CFType&#xA;    interface INativeObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>CoreFoundation.CFType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>ObjCRuntime.INativeObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Represents HTTP authentication information for use with <see cref="T:CoreServices.CFHttpMessage" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AppliesToRequest">
      <MemberSignature Language="C#" Value="public bool AppliesToRequest (CoreServices.CFHTTPMessage request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool AppliesToRequest(class CoreServices.CFHTTPMessage request) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.CFHTTPAuthentication.AppliesToRequest(CoreServices.CFHTTPMessage)" />
      <MemberSignature Language="F#" Value="member this.AppliesToRequest : CoreServices.CFHTTPMessage -&gt; bool" Usage="cFHTTPAuthentication.AppliesToRequest request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="CoreServices.CFHTTPMessage" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckHandle">
      <MemberSignature Language="C#" Value="protected void CheckHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.CFHTTPAuthentication.CheckHandle" />
      <MemberSignature Language="F#" Value="member this.CheckHandle : unit -&gt; unit" Usage="cFHTTPAuthentication.CheckHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromResponse">
      <MemberSignature Language="C#" Value="public static CoreServices.CFHTTPAuthentication CreateFromResponse (CoreServices.CFHTTPMessage response);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CoreServices.CFHTTPAuthentication CreateFromResponse(class CoreServices.CFHTTPMessage response) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.CFHTTPAuthentication.CreateFromResponse(CoreServices.CFHTTPMessage)" />
      <MemberSignature Language="F#" Value="static member CreateFromResponse : CoreServices.CFHTTPMessage -&gt; CoreServices.CFHTTPAuthentication" Usage="CoreServices.CFHTTPAuthentication.CreateFromResponse response" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CoreServices.CFHTTPAuthentication</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="CoreServices.CFHTTPMessage" />
      </Parameters>
      <Docs>
        <param name="response">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.CFHTTPAuthentication.Dispose" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cFHTTPAuthentication.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the resources used by the CFHTTPAuthentication object.</summary>
        <remarks>
          <para>The Dispose method releases the resources used by the CFHTTPAuthentication class.</para>
          <para>Calling the Dispose method when the application is finished using the CFHTTPAuthentication ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.  For more information on releasing resources see ``Cleaning up Unmananaged Resources'' at http://msdn.microsoft.com/en-us/library/498928w2.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.CFHTTPAuthentication.Dispose(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="cFHTTPAuthentication.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <para>If set to <see langword="true" />, the method is invoked directly and will dispose manage and unmanaged resources;   If set to <see langword="false" /> the method is being called by the garbage collector finalizer and should only release unmanaged resources.</para>
        </param>
        <summary>Releases the resources used by the CFHTTPAuthentication object.</summary>
        <remarks>
          <para>This Dispose method releases the resources used by the CFHTTPAuthentication class.</para>
          <para>This method is called by both the Dispose() method and the object finalizer (Finalize).    When invoked by the Dispose method, the parameter disposing <paramref name="disposing" /> is set to <see langword="true" /> and any managed object references that this object holds are also disposed or released;  when invoked by the object finalizer, on the finalizer thread the value is set to <see langword="false" />. </para>
          <para>Calling the Dispose method when the application is finished using the CFHTTPAuthentication ensures that all external resources used by this managed object are released as soon as possible.  Once developers have invoked the Dispose method, the object is no longer useful and developers should no longer make any calls to it.</para>
          <para>  For more information on how to override this method and on the Dispose/IDisposable pattern, read the ``Implementing a Dispose Method'' document at http://msdn.microsoft.com/en-us/library/fs2xkftw.aspx</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CFHTTPAuthentication ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.CFHTTPAuthentication.Finalize" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="cFHTTPAuthentication.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finalizer for the CFHTTPAuthentication object</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public string GetMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.CFHTTPAuthentication.GetMethod" />
      <MemberSignature Language="F#" Value="member this.GetMethod : unit -&gt; string" Usage="cFHTTPAuthentication.GetMethod " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeID">
      <MemberSignature Language="C#" Value="public static nint GetTypeID ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig pinvokeimpl (&quot;/System/Library/Frameworks/CFNetwork.framework/CFNetwork&quot; as &quot;CFHTTPAuthenticationGetTypeID&quot; winapi)valuetype System.nint GetTypeID() cil managed" />
      <MemberSignature Language="DocId" Value="M:CoreServices.CFHTTPAuthentication.GetTypeID" />
      <MemberSignature Language="F#" Value="static member GetTypeID : unit -&gt; nint" Usage="CoreServices.CFHTTPAuthentication.GetTypeID " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.nint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Type identifier for the CoreServices.CFHTTPAuthentication type.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>The returned token is the CoreFoundation type identifier (CFType) that has been assigned to this class.</para>
          <para>This can be used to determine type identity between different CoreFoundation objects.</para>
          <para>You can retrieve the type of a CoreFoundation object by invoking the <see cref="M:CoreFoundation.CFType.GetTypeID" /> on the native handle of the object</para>
          <example>
            <code lang="C#"><![CDATA[bool isCFHTTPAuthentication = (CFType.GetTypeID (foo.Handle) == CFHTTPAuthentication.GetTypeID ());]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:CoreServices.CFHTTPAuthentication.Handle" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="CoreServices.CFHTTPAuthentication.Handle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:ObjCRuntime.INativeObject.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Handle (pointer) to the unmanaged object representation.</summary>
        <value>A pointer</value>
        <remarks>This IntPtr is a handle to the underlying unmanaged representation for this object.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:CoreServices.CFHTTPAuthentication.IsValid" />
      <MemberSignature Language="F#" Value="member this.IsValid : bool" Usage="CoreServices.CFHTTPAuthentication.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresAccountDomain">
      <MemberSignature Language="C#" Value="public bool RequiresAccountDomain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresAccountDomain" />
      <MemberSignature Language="DocId" Value="P:CoreServices.CFHTTPAuthentication.RequiresAccountDomain" />
      <MemberSignature Language="F#" Value="member this.RequiresAccountDomain : bool" Usage="CoreServices.CFHTTPAuthentication.RequiresAccountDomain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresOrderedRequests">
      <MemberSignature Language="C#" Value="public bool RequiresOrderedRequests { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresOrderedRequests" />
      <MemberSignature Language="DocId" Value="P:CoreServices.CFHTTPAuthentication.RequiresOrderedRequests" />
      <MemberSignature Language="F#" Value="member this.RequiresOrderedRequests : bool" Usage="CoreServices.CFHTTPAuthentication.RequiresOrderedRequests" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUserNameAndPassword">
      <MemberSignature Language="C#" Value="public bool RequiresUserNameAndPassword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUserNameAndPassword" />
      <MemberSignature Language="DocId" Value="P:CoreServices.CFHTTPAuthentication.RequiresUserNameAndPassword" />
      <MemberSignature Language="F#" Value="member this.RequiresUserNameAndPassword : bool" Usage="CoreServices.CFHTTPAuthentication.RequiresUserNameAndPassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
