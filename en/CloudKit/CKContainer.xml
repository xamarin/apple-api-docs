<Type Name="CKContainer" FullName="CloudKit.CKContainer">
  <TypeSignature Language="C#" Value="public class CKContainer : Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CKContainer extends Foundation.NSObject" />
  <TypeSignature Language="DocId" Value="T:CloudKit.CKContainer" />
  <TypeSignature Language="F#" Value="type CKContainer = class&#xA;    inherit NSObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("CKContainer", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 3, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Encapsulates content associated with an app, including shared and per-user private data.</summary>
    <remarks>
      <para>The <see cref="T:CloudKit.CKContainer" /> class is the highest-level class in the <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=Cloud%20Kit&amp;scope=Xamarin" title="N:CloudKit">N:CloudKit</a></format> namespace. A CloudKit Container (sometimes referred to in Apple documentation as a "Ubiquity container") is an information store identified with a particular name. Apple advises using a name of the form "iCloud.{reverse DNS}.{appName}", for instance, "iCloud.com.mycompany.MyApp". Developers must create and configure their containers using the iCloud Dashboard, available by way of the Apple developer portal. To retrieve a container, developers use the static <see cref="M:CloudKit.CKContainer.FromIdentifier(System.String)" /> method.</para>
      <para>A single <see cref="T:CloudKit.CKContainer" /> may contain both public data, which is shared between all instances of the app (see <see cref="P:CloudKit.CKContainer.PublicCloudDatabase" />), and private data, which contains user-specific data (see <see cref="P:CloudKit.CKContainer.PrivateCloudDatabase" />). Within iCloud, public data is stored in the app's iCloud storage while private data is stored in the user's private iCloud storage. The public <see cref="T:CloudKit.CKDatabase" /> is available to all connected users of the app, whether or not they are logged in to iCloud. The private <see cref="T:CloudKit.CKDatabase" /> is only if the user is logged in to iCloud. Developers must write their code such that it reacts gracefully to changes in the user's login or connection status.</para>
    </remarks>
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/CloudKit/Reference/CKContainer_class/index.html">Apple documentation for <c>CKContainer</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CKContainer (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new CloudKit.CKContainer : Foundation.NSObjectFlag -&gt; CloudKit.CKContainer" Usage="new CloudKit.CKContainer t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal CKContainer (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new CloudKit.CKContainer : nativeint -&gt; CloudKit.CKContainer" Usage="new CloudKit.CKContainer handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptShareMetadata">
      <MemberSignature Language="C#" Value="public virtual void AcceptShareMetadata (CloudKit.CKShareMetadata metadata, Action&lt;CloudKit.CKShare,Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AcceptShareMetadata(class CloudKit.CKShareMetadata metadata, class System.Action`2&lt;class CloudKit.CKShare, class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.AcceptShareMetadata(CloudKit.CKShareMetadata,System.Action{CloudKit.CKShare,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member AcceptShareMetadata : CloudKit.CKShareMetadata * Action&lt;CloudKit.CKShare, Foundation.NSError&gt; -&gt; unit&#xA;override this.AcceptShareMetadata : CloudKit.CKShareMetadata * Action&lt;CloudKit.CKShare, Foundation.NSError&gt; -&gt; unit" Usage="cKContainer.AcceptShareMetadata (metadata, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("acceptShareMetadata:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="CloudKit.CKShareMetadata" />
        <Parameter Name="completionHandler" Type="System.Action&lt;CloudKit.CKShare,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V13))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="metadata">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptShareMetadataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CloudKit.CKShare&gt; AcceptShareMetadataAsync (CloudKit.CKShareMetadata metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class CloudKit.CKShare&gt; AcceptShareMetadataAsync(class CloudKit.CKShareMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.AcceptShareMetadataAsync(CloudKit.CKShareMetadata)" />
      <MemberSignature Language="F#" Value="abstract member AcceptShareMetadataAsync : CloudKit.CKShareMetadata -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKShare&gt;&#xA;override this.AcceptShareMetadataAsync : CloudKit.CKShareMetadata -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKShare&gt;" Usage="cKContainer.AcceptShareMetadataAsync metadata" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CloudKit.CKShare&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="CloudKit.CKShareMetadata" />
      </Parameters>
      <Docs>
        <param name="metadata">To be added.</param>
        <summary>To be added.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous AcceptShareMetadata operation.  The value of the TResult parameter is of type System.Action&lt;CloudKit.CKShare,Foundation.NSError&gt;.</para>
        </returns>
        <remarks>
          <para copied="true">The AcceptShareMetadataAsync method is suitable to be used with C# async by returning control to the caller with a Task representing the operation.</para>
          <para copied="true">To be added.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccountChangedNotification">
      <MemberSignature Language="C#" Value="public static Foundation.NSString AccountChangedNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString AccountChangedNotification" />
      <MemberSignature Language="DocId" Value="P:CloudKit.CKContainer.AccountChangedNotification" />
      <MemberSignature Language="F#" Value="member this.AccountChangedNotification : Foundation.NSString" Usage="CloudKit.CKContainer.AccountChangedNotification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Advice("Use CKContainer.Notifications.ObserveAccountChanged helper method instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Foundation.Field("CKAccountChangedNotification", "CloudKit")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Notification constant for AccountChanged</summary>
        <value>NSString constant, should be used as a token to NSNotificationCenter.</value>
        <remarks>
          <para id="tool-remark">This constant can be used with the <see cref="T:Foundation.NSNotificationCenter" /> to register a listener for this notification.   This is an NSString instead of a string, because these values can be used as tokens in some native libraries instead of being used purely for their actual string content.    The 'notification' parameter to the callback contains extra information that is specific to the notification type.</para>
          <example>
            <code lang="C#"><![CDATA[
// Lambda style
NSNotificationCenter.DefaultCenter.AddObserver (
        CKContainer.AccountChangedNotification, (notification) => {Console.WriteLine ("Received the notification CKContainer", notification); }


// Method style
void Callback (NSNotification notification)
{
    Console.WriteLine ("Received a notification CKContainer", notification);
}

void Setup ()
{
    NSNotificationCenter.DefaultCenter.AddObserver (CKContainer.AccountChangedNotification, Callback);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOperation">
      <MemberSignature Language="C#" Value="public virtual void AddOperation (CloudKit.CKOperation operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddOperation(class CloudKit.CKOperation operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.AddOperation(CloudKit.CKOperation)" />
      <MemberSignature Language="F#" Value="abstract member AddOperation : CloudKit.CKOperation -&gt; unit&#xA;override this.AddOperation : CloudKit.CKOperation -&gt; unit" Usage="cKContainer.AddOperation operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("addOperation:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="CloudKit.CKOperation" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>Adds and enqueues the <paramref name="operation" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:CloudKit.CKContainer.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="CloudKit.CKContainer.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerIdentifier">
      <MemberSignature Language="C#" Value="public virtual string ContainerIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContainerIdentifier" />
      <MemberSignature Language="DocId" Value="P:CloudKit.CKContainer.ContainerIdentifier" />
      <MemberSignature Language="F#" Value="member this.ContainerIdentifier : string" Usage="CloudKit.CKContainer.ContainerIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("containerIdentifier")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The container's identifier, generally of the form "iCloud.{reverse DNS}.{app name}".</summary>
        <value>
          <para>This value should be unique and Apple suggests that it be of the form "iCloud.{reverse DNS}.{app name or name for group}" (for instance, "iCloud.com.mycompany.myapp"). It should be noted that multiple apps from a company may access a single container.</para>
          <para tool="nullallowed">This value can be <see langword="null" />.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentUserDefaultName">
      <MemberSignature Language="C#" Value="public static Foundation.NSString CurrentUserDefaultName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString CurrentUserDefaultName" />
      <MemberSignature Language="DocId" Value="P:CloudKit.CKContainer.CurrentUserDefaultName" />
      <MemberSignature Language="F#" Value="member this.CurrentUserDefaultName : Foundation.NSString" Usage="CloudKit.CKContainer.CurrentUserDefaultName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("CKCurrentUserDefaultName", "CloudKit")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The current user of the database.</summary>
        <value>The default value is "defaultOwner".</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultContainer">
      <MemberSignature Language="C#" Value="public static CloudKit.CKContainer DefaultContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class CloudKit.CKContainer DefaultContainer" />
      <MemberSignature Language="DocId" Value="P:CloudKit.CKContainer.DefaultContainer" />
      <MemberSignature Language="F#" Value="member this.DefaultContainer : CloudKit.CKContainer" Usage="CloudKit.CKContainer.DefaultContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("defaultContainer")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CloudKit.CKContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a <see cref="T:CloudKit.CKContainer" /> specific to this particular app (in contrast to <see cref="M:CloudKit.CKContainer.FromIdentifier(System.String)" />).</summary>
        <value>To be added.</value>
        <remarks>
          <para>This method always returns a valid container, even if the developer has not configured the container via the CloudKit Dashboard. Most storage use-cases require the developer to have configured the container, though.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscoverAllContactUserInfos">
      <MemberSignature Language="C#" Value="public virtual void DiscoverAllContactUserInfos (Action&lt;CloudKit.CKDiscoveredUserInfo[],Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DiscoverAllContactUserInfos(class System.Action`2&lt;class CloudKit.CKDiscoveredUserInfo[], class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.DiscoverAllContactUserInfos(System.Action{CloudKit.CKDiscoveredUserInfo[],Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member DiscoverAllContactUserInfos : Action&lt;CloudKit.CKDiscoveredUserInfo[], Foundation.NSError&gt; -&gt; unit&#xA;override this.DiscoverAllContactUserInfos : Action&lt;CloudKit.CKDiscoveredUserInfo[], Foundation.NSError&gt; -&gt; unit" Usage="cKContainer.DiscoverAllContactUserInfos completionHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("discoverAllContactUserInfosWithCompletionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'DiscoverAllIdentities' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.None, "Use 'DiscoverAllIdentities' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completionHandler" Type="System.Action&lt;CloudKit.CKDiscoveredUserInfo[],Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V14))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="completionHandler">To be added.</param>
        <summary>Developers should not use this deprecated method.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscoverAllContactUserInfosAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CloudKit.CKDiscoveredUserInfo[]&gt; DiscoverAllContactUserInfosAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class CloudKit.CKDiscoveredUserInfo[]&gt; DiscoverAllContactUserInfosAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.DiscoverAllContactUserInfosAsync" />
      <MemberSignature Language="F#" Value="abstract member DiscoverAllContactUserInfosAsync : unit -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKDiscoveredUserInfo[]&gt;&#xA;override this.DiscoverAllContactUserInfosAsync : unit -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKDiscoveredUserInfo[]&gt;" Usage="cKContainer.DiscoverAllContactUserInfosAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'DiscoverAllIdentities' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.None, "Use 'DiscoverAllIdentities' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CloudKit.CKDiscoveredUserInfo[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Developers should not use this deprecated method.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous DiscoverAllContactUserInfos operation.  The value of the TResult parameter is of type System.Action&lt;CloudKit.CKDiscoveredUserInfo[],Foundation.NSError&gt;.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscoverAllIdentities">
      <MemberSignature Language="C#" Value="public virtual void DiscoverAllIdentities (Action&lt;CloudKit.CKUserIdentity[],Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DiscoverAllIdentities(class System.Action`2&lt;class CloudKit.CKUserIdentity[], class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.DiscoverAllIdentities(System.Action{CloudKit.CKUserIdentity[],Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member DiscoverAllIdentities : Action&lt;CloudKit.CKUserIdentity[], Foundation.NSError&gt; -&gt; unit&#xA;override this.DiscoverAllIdentities : Action&lt;CloudKit.CKUserIdentity[], Foundation.NSError&gt; -&gt; unit" Usage="cKContainer.DiscoverAllIdentities completionHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("discoverAllIdentitiesWithCompletionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completionHandler" Type="System.Action&lt;CloudKit.CKUserIdentity[],Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V15))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="completionHandler">To be added.</param>
        <summary>Fetches all user records in the <see cref="T:CloudKit.CKContainer" /> that correspond to an entry in the user's address book.</summary>
        <remarks>
          <para>The "identity discovery" methods in <see cref="T:CloudKit.CKContainer" /> allow the developer to implement "friends who also use" functionality in their apps. These methods can be used to find user records in the CloudKit container that correspond to entries in the user's address book. No information about the user, beyond the fact that they use the app and agreed to share that status, is available from the <see cref="T:CloudKit.CKContainer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscoverAllIdentitiesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CloudKit.CKUserIdentity[]&gt; DiscoverAllIdentitiesAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class CloudKit.CKUserIdentity[]&gt; DiscoverAllIdentitiesAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.DiscoverAllIdentitiesAsync" />
      <MemberSignature Language="F#" Value="abstract member DiscoverAllIdentitiesAsync : unit -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKUserIdentity[]&gt;&#xA;override this.DiscoverAllIdentitiesAsync : unit -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKUserIdentity[]&gt;" Usage="cKContainer.DiscoverAllIdentitiesAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CloudKit.CKUserIdentity[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fetches all user records in the <see cref="T:CloudKit.CKContainer" /> that correspond to an entry in the user's address book.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous DiscoverAllIdentities operation.  The value of the TResult parameter is of type System.Action&lt;CloudKit.CKUserIdentity[],Foundation.NSError&gt;.</para>
        </returns>
        <remarks>
          <para>The "identity discovery" methods in <see cref="T:CloudKit.CKContainer" /> allow the developer to implement "friends who also use" functionality in their apps. These methods can be used to find user records in the CloudKit container that correspond to entries in the user's address book. No information about the user, beyond the fact that they use the app and agreed to share that status, is available from the <see cref="T:CloudKit.CKContainer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscoverUserIdentity">
      <MemberSignature Language="C#" Value="public virtual void DiscoverUserIdentity (CloudKit.CKRecordID userRecordID, Action&lt;CloudKit.CKUserIdentity,Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DiscoverUserIdentity(class CloudKit.CKRecordID userRecordID, class System.Action`2&lt;class CloudKit.CKUserIdentity, class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.DiscoverUserIdentity(CloudKit.CKRecordID,System.Action{CloudKit.CKUserIdentity,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member DiscoverUserIdentity : CloudKit.CKRecordID * Action&lt;CloudKit.CKUserIdentity, Foundation.NSError&gt; -&gt; unit&#xA;override this.DiscoverUserIdentity : CloudKit.CKRecordID * Action&lt;CloudKit.CKUserIdentity, Foundation.NSError&gt; -&gt; unit" Usage="cKContainer.DiscoverUserIdentity (userRecordID, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("discoverUserIdentityWithUserRecordID:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userRecordID" Type="CloudKit.CKRecordID" />
        <Parameter Name="completionHandler" Type="System.Action&lt;CloudKit.CKUserIdentity,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V16))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="userRecordID">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Retrieves the <see cref="T:CloudKit.CKUserIdentity" /> data for the record with specified <paramref name="userRecordID" />.</summary>
        <remarks>
          <para>The "identity discovery" methods in <see cref="T:CloudKit.CKContainer" /> allow the developer to implement "friends who also use" functionality in their apps. These methods can be used to find user records in the CloudKit container that correspond to entries in the user's address book. No information about the user, beyond the fact that they use the app and agreed to share that status, is available from the <see cref="T:CloudKit.CKContainer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscoverUserIdentityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CloudKit.CKUserIdentity&gt; DiscoverUserIdentityAsync (CloudKit.CKRecordID userRecordID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class CloudKit.CKUserIdentity&gt; DiscoverUserIdentityAsync(class CloudKit.CKRecordID userRecordID) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.DiscoverUserIdentityAsync(CloudKit.CKRecordID)" />
      <MemberSignature Language="F#" Value="abstract member DiscoverUserIdentityAsync : CloudKit.CKRecordID -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKUserIdentity&gt;&#xA;override this.DiscoverUserIdentityAsync : CloudKit.CKRecordID -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKUserIdentity&gt;" Usage="cKContainer.DiscoverUserIdentityAsync userRecordID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CloudKit.CKUserIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userRecordID" Type="CloudKit.CKRecordID" />
      </Parameters>
      <Docs>
        <param name="userRecordID">To be added.</param>
        <summary>Retrieves the <see cref="T:CloudKit.CKUserIdentity" /> data for the record with specified <paramref name="userRecordID" />.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous DiscoverUserIdentity operation.  The value of the TResult parameter is of type System.Action&lt;CloudKit.CKUserIdentity,Foundation.NSError&gt;.</para>
        </returns>
        <remarks>
          <para>The "identity discovery" methods in <see cref="T:CloudKit.CKContainer" /> allow the developer to implement "friends who also use" functionality in their apps. These methods can be used to find user records in the CloudKit container that correspond to entries in the user's address book. No information about the user, beyond the fact that they use the app and agreed to share that status, is available from the <see cref="T:CloudKit.CKContainer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscoverUserIdentityWithEmailAddress">
      <MemberSignature Language="C#" Value="public virtual void DiscoverUserIdentityWithEmailAddress (string email, Action&lt;CloudKit.CKUserIdentity,Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DiscoverUserIdentityWithEmailAddress(string email, class System.Action`2&lt;class CloudKit.CKUserIdentity, class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.DiscoverUserIdentityWithEmailAddress(System.String,System.Action{CloudKit.CKUserIdentity,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member DiscoverUserIdentityWithEmailAddress : string * Action&lt;CloudKit.CKUserIdentity, Foundation.NSError&gt; -&gt; unit&#xA;override this.DiscoverUserIdentityWithEmailAddress : string * Action&lt;CloudKit.CKUserIdentity, Foundation.NSError&gt; -&gt; unit" Usage="cKContainer.DiscoverUserIdentityWithEmailAddress (email, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("discoverUserIdentityWithEmailAddress:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="completionHandler" Type="System.Action&lt;CloudKit.CKUserIdentity,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V16))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="email">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Retrieves the <see cref="T:CloudKit.CKUserIdentity" /> data for the record with specified <paramref name="email" />.</summary>
        <remarks>
          <para>The "identity discovery" methods in <see cref="T:CloudKit.CKContainer" /> allow the developer to implement "friends who also use" functionality in their apps. These methods can be used to find user records in the CloudKit container that correspond to entries in the user's address book. No information about the user, beyond the fact that they use the app and agreed to share that status, is available from the <see cref="T:CloudKit.CKContainer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscoverUserIdentityWithEmailAddressAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CloudKit.CKUserIdentity&gt; DiscoverUserIdentityWithEmailAddressAsync (string email);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class CloudKit.CKUserIdentity&gt; DiscoverUserIdentityWithEmailAddressAsync(string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.DiscoverUserIdentityWithEmailAddressAsync(System.String)" />
      <MemberSignature Language="F#" Value="abstract member DiscoverUserIdentityWithEmailAddressAsync : string -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKUserIdentity&gt;&#xA;override this.DiscoverUserIdentityWithEmailAddressAsync : string -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKUserIdentity&gt;" Usage="cKContainer.DiscoverUserIdentityWithEmailAddressAsync email" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CloudKit.CKUserIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email">To be added.</param>
        <summary>Retrieves the <see cref="T:CloudKit.CKUserIdentity" /> data for the record with specified <paramref name="email" />.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous DiscoverUserIdentityWithEmailAddress operation.  The value of the TResult parameter is of type System.Action&lt;CloudKit.CKUserIdentity,Foundation.NSError&gt;.</para>
        </returns>
        <remarks>
          <para>The "identity discovery" methods in <see cref="T:CloudKit.CKContainer" /> allow the developer to implement "friends who also use" functionality in their apps. These methods can be used to find user records in the CloudKit container that correspond to entries in the user's address book. No information about the user, beyond the fact that they use the app and agreed to share that status, is available from the <see cref="T:CloudKit.CKContainer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscoverUserIdentityWithPhoneNumber">
      <MemberSignature Language="C#" Value="public virtual void DiscoverUserIdentityWithPhoneNumber (string phoneNumber, Action&lt;CloudKit.CKUserIdentity,Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DiscoverUserIdentityWithPhoneNumber(string phoneNumber, class System.Action`2&lt;class CloudKit.CKUserIdentity, class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.DiscoverUserIdentityWithPhoneNumber(System.String,System.Action{CloudKit.CKUserIdentity,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member DiscoverUserIdentityWithPhoneNumber : string * Action&lt;CloudKit.CKUserIdentity, Foundation.NSError&gt; -&gt; unit&#xA;override this.DiscoverUserIdentityWithPhoneNumber : string * Action&lt;CloudKit.CKUserIdentity, Foundation.NSError&gt; -&gt; unit" Usage="cKContainer.DiscoverUserIdentityWithPhoneNumber (phoneNumber, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("discoverUserIdentityWithPhoneNumber:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phoneNumber" Type="System.String" />
        <Parameter Name="completionHandler" Type="System.Action&lt;CloudKit.CKUserIdentity,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V16))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="phoneNumber">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Retrieves the <see cref="T:CloudKit.CKUserIdentity" /> data for the record with specified <paramref name="phoneNumber" />.</summary>
        <remarks>
          <para>The "identity discovery" methods in <see cref="T:CloudKit.CKContainer" /> allow the developer to implement "friends who also use" functionality in their apps. These methods can be used to find user records in the CloudKit container that correspond to entries in the user's address book. No information about the user, beyond the fact that they use the app and agreed to share that status, is available from the <see cref="T:CloudKit.CKContainer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscoverUserIdentityWithPhoneNumberAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CloudKit.CKUserIdentity&gt; DiscoverUserIdentityWithPhoneNumberAsync (string phoneNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class CloudKit.CKUserIdentity&gt; DiscoverUserIdentityWithPhoneNumberAsync(string phoneNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.DiscoverUserIdentityWithPhoneNumberAsync(System.String)" />
      <MemberSignature Language="F#" Value="abstract member DiscoverUserIdentityWithPhoneNumberAsync : string -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKUserIdentity&gt;&#xA;override this.DiscoverUserIdentityWithPhoneNumberAsync : string -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKUserIdentity&gt;" Usage="cKContainer.DiscoverUserIdentityWithPhoneNumberAsync phoneNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CloudKit.CKUserIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phoneNumber" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="phoneNumber">To be added.</param>
        <summary>Retrieves the <see cref="T:CloudKit.CKUserIdentity" /> data for the record with specified <paramref name="phoneNumber" />.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous DiscoverUserIdentityWithPhoneNumber operation.  The value of the TResult parameter is of type System.Action&lt;CloudKit.CKUserIdentity,Foundation.NSError&gt;.</para>
        </returns>
        <remarks>
          <para>The "identity discovery" methods in <see cref="T:CloudKit.CKContainer" /> allow the developer to implement "friends who also use" functionality in their apps. These methods can be used to find user records in the CloudKit container that correspond to entries in the user's address book. No information about the user, beyond the fact that they use the app and agreed to share that status, is available from the <see cref="T:CloudKit.CKContainer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscoverUserInfo">
      <MemberSignature Language="C#" Value="public virtual void DiscoverUserInfo (CloudKit.CKRecordID userRecordId, Action&lt;CloudKit.CKDiscoveredUserInfo,Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DiscoverUserInfo(class CloudKit.CKRecordID userRecordId, class System.Action`2&lt;class CloudKit.CKDiscoveredUserInfo, class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.DiscoverUserInfo(CloudKit.CKRecordID,System.Action{CloudKit.CKDiscoveredUserInfo,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member DiscoverUserInfo : CloudKit.CKRecordID * Action&lt;CloudKit.CKDiscoveredUserInfo, Foundation.NSError&gt; -&gt; unit&#xA;override this.DiscoverUserInfo : CloudKit.CKRecordID * Action&lt;CloudKit.CKDiscoveredUserInfo, Foundation.NSError&gt; -&gt; unit" Usage="cKContainer.DiscoverUserInfo (userRecordId, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("discoverUserInfoWithUserRecordID:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'DiscoverUserIdentity' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.None, "Use 'DiscoverUserIdentity' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userRecordId" Type="CloudKit.CKRecordID" />
        <Parameter Name="completionHandler" Type="System.Action&lt;CloudKit.CKDiscoveredUserInfo,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V17))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="userRecordId">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Developers should not use this deprecated method.</summary>
        <remarks>
          <para>The "identity discovery" methods in <see cref="T:CloudKit.CKContainer" /> allow the developer to implement "friends who also use" functionality in their apps. These methods can be used to find user records in the CloudKit container that correspond to entries in the user's address book. No information about the user, beyond the fact that they use the app and agreed to share that status, is available from the <see cref="T:CloudKit.CKContainer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscoverUserInfo">
      <MemberSignature Language="C#" Value="public virtual void DiscoverUserInfo (string email, Action&lt;CloudKit.CKDiscoveredUserInfo,Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DiscoverUserInfo(string email, class System.Action`2&lt;class CloudKit.CKDiscoveredUserInfo, class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.DiscoverUserInfo(System.String,System.Action{CloudKit.CKDiscoveredUserInfo,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member DiscoverUserInfo : string * Action&lt;CloudKit.CKDiscoveredUserInfo, Foundation.NSError&gt; -&gt; unit&#xA;override this.DiscoverUserInfo : string * Action&lt;CloudKit.CKDiscoveredUserInfo, Foundation.NSError&gt; -&gt; unit" Usage="cKContainer.DiscoverUserInfo (email, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("discoverUserInfoWithEmailAddress:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'DiscoverUserIdentityWithEmailAddress' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.None, "Use 'DiscoverUserIdentityWithEmailAddress' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="completionHandler" Type="System.Action&lt;CloudKit.CKDiscoveredUserInfo,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V17))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="email">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Developers should not use this deprecated method.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscoverUserInfoAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CloudKit.CKDiscoveredUserInfo&gt; DiscoverUserInfoAsync (CloudKit.CKRecordID userRecordId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class CloudKit.CKDiscoveredUserInfo&gt; DiscoverUserInfoAsync(class CloudKit.CKRecordID userRecordId) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.DiscoverUserInfoAsync(CloudKit.CKRecordID)" />
      <MemberSignature Language="F#" Value="abstract member DiscoverUserInfoAsync : CloudKit.CKRecordID -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKDiscoveredUserInfo&gt;&#xA;override this.DiscoverUserInfoAsync : CloudKit.CKRecordID -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKDiscoveredUserInfo&gt;" Usage="cKContainer.DiscoverUserInfoAsync userRecordId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'DiscoverUserIdentity' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.None, "Use 'DiscoverUserIdentity' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CloudKit.CKDiscoveredUserInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userRecordId" Type="CloudKit.CKRecordID" />
      </Parameters>
      <Docs>
        <param name="userRecordId">To be added.</param>
        <summary>Developers should not use this deprecated method.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous DiscoverUserInfo operation.  The value of the TResult parameter is of type System.Action&lt;CloudKit.CKDiscoveredUserInfo,Foundation.NSError&gt;.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscoverUserInfoAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CloudKit.CKDiscoveredUserInfo&gt; DiscoverUserInfoAsync (string email);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class CloudKit.CKDiscoveredUserInfo&gt; DiscoverUserInfoAsync(string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.DiscoverUserInfoAsync(System.String)" />
      <MemberSignature Language="F#" Value="abstract member DiscoverUserInfoAsync : string -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKDiscoveredUserInfo&gt;&#xA;override this.DiscoverUserInfoAsync : string -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKDiscoveredUserInfo&gt;" Usage="cKContainer.DiscoverUserInfoAsync email" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'DiscoverUserIdentityWithEmailAddress' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.None, "Use 'DiscoverUserIdentityWithEmailAddress' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CloudKit.CKDiscoveredUserInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email">To be added.</param>
        <summary>Developers should not use this deprecated method.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous DiscoverUserInfo operation.  The value of the TResult parameter is of type System.Action&lt;CloudKit.CKDiscoveredUserInfo,Foundation.NSError&gt;.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchAllLongLivedOperationIDs">
      <MemberSignature Language="C#" Value="public virtual void FetchAllLongLivedOperationIDs (Action&lt;Foundation.NSDictionary&lt;Foundation.NSString,Foundation.NSOperation&gt;,Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FetchAllLongLivedOperationIDs(class System.Action`2&lt;class Foundation.NSDictionary`2&lt;class Foundation.NSString, class Foundation.NSOperation&gt;, class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.FetchAllLongLivedOperationIDs(System.Action{Foundation.NSDictionary{Foundation.NSString,Foundation.NSOperation},Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member FetchAllLongLivedOperationIDs : Action&lt;Foundation.NSDictionary&lt;Foundation.NSString, Foundation.NSOperation&gt;, Foundation.NSError&gt; -&gt; unit&#xA;override this.FetchAllLongLivedOperationIDs : Action&lt;Foundation.NSDictionary&lt;Foundation.NSString, Foundation.NSOperation&gt;, Foundation.NSError&gt; -&gt; unit" Usage="cKContainer.FetchAllLongLivedOperationIDs completionHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("fetchAllLongLivedOperationIDsWithCompletionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, 4, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completionHandler" Type="System.Action&lt;Foundation.NSDictionary&lt;Foundation.NSString,Foundation.NSOperation&gt;,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V18))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="completionHandler">A handler that takes an array of IDs for all of the currently active long-lived operations and an error, which may be <see langword="null" /> to indicate success.</param>
        <summary>Returns an array that contains the identifiers for all the currently active long-lived operations.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchAllLongLivedOperationIDsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Foundation.NSDictionary&lt;Foundation.NSString,Foundation.NSOperation&gt;&gt; FetchAllLongLivedOperationIDsAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Foundation.NSDictionary`2&lt;class Foundation.NSString, class Foundation.NSOperation&gt;&gt; FetchAllLongLivedOperationIDsAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.FetchAllLongLivedOperationIDsAsync" />
      <MemberSignature Language="F#" Value="abstract member FetchAllLongLivedOperationIDsAsync : unit -&gt; System.Threading.Tasks.Task&lt;Foundation.NSDictionary&lt;Foundation.NSString, Foundation.NSOperation&gt;&gt;&#xA;override this.FetchAllLongLivedOperationIDsAsync : unit -&gt; System.Threading.Tasks.Task&lt;Foundation.NSDictionary&lt;Foundation.NSString, Foundation.NSOperation&gt;&gt;" Usage="cKContainer.FetchAllLongLivedOperationIDsAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, 4, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Foundation.NSDictionary&lt;Foundation.NSString,Foundation.NSOperation&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an array that contains the identifiers for all the currently active long-lived operations.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous FetchAllLongLivedOperationIDs operation.  The value of the TResult parameter is of type System.Action&lt;Foundation.NSDictionary&lt;Foundation.NSString,Foundation.NSOperation&gt;,Foundation.NSError&gt;.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchLongLivedOperation">
      <MemberSignature Language="C#" Value="public virtual void FetchLongLivedOperation (string[] operationID, Action&lt;Foundation.NSDictionary&lt;Foundation.NSString,Foundation.NSOperation&gt;,Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FetchLongLivedOperation(string[] operationID, class System.Action`2&lt;class Foundation.NSDictionary`2&lt;class Foundation.NSString, class Foundation.NSOperation&gt;, class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.FetchLongLivedOperation(System.String[],System.Action{Foundation.NSDictionary{Foundation.NSString,Foundation.NSOperation},Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member FetchLongLivedOperation : string[] * Action&lt;Foundation.NSDictionary&lt;Foundation.NSString, Foundation.NSOperation&gt;, Foundation.NSError&gt; -&gt; unit&#xA;override this.FetchLongLivedOperation : string[] * Action&lt;Foundation.NSDictionary&lt;Foundation.NSString, Foundation.NSOperation&gt;, Foundation.NSError&gt; -&gt; unit" Usage="cKContainer.FetchLongLivedOperation (operationID, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("fetchLongLivedOperationWithID:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, 4, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationID" Type="System.String[]" />
        <Parameter Name="completionHandler" Type="System.Action&lt;Foundation.NSDictionary&lt;Foundation.NSString,Foundation.NSOperation&gt;,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V18))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="operationID">The ID of the long-lived operation to fetch.</param>
        <param name="completionHandler">A handler that receives the outstanding operation and an error that may be <see langword="null" /> to indicate success.</param>
        <summary>Fetches the long-lived operation that is identified by <paramref name="operationID" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchLongLivedOperationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Foundation.NSDictionary&lt;Foundation.NSString,Foundation.NSOperation&gt;&gt; FetchLongLivedOperationAsync (string[] operationID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Foundation.NSDictionary`2&lt;class Foundation.NSString, class Foundation.NSOperation&gt;&gt; FetchLongLivedOperationAsync(string[] operationID) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.FetchLongLivedOperationAsync(System.String[])" />
      <MemberSignature Language="F#" Value="abstract member FetchLongLivedOperationAsync : string[] -&gt; System.Threading.Tasks.Task&lt;Foundation.NSDictionary&lt;Foundation.NSString, Foundation.NSOperation&gt;&gt;&#xA;override this.FetchLongLivedOperationAsync : string[] -&gt; System.Threading.Tasks.Task&lt;Foundation.NSDictionary&lt;Foundation.NSString, Foundation.NSOperation&gt;&gt;" Usage="cKContainer.FetchLongLivedOperationAsync operationID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 9, 3, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 11, 4, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.TvOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Foundation.NSDictionary&lt;Foundation.NSString,Foundation.NSOperation&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationID" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="operationID">The ID of the long-lived operation to fetch.</param>
        <summary>Fetches the long-lived operation that is identified by <paramref name="operationID" />.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous FetchLongLivedOperation operation.  The value of the TResult parameter is of type System.Action&lt;Foundation.NSDictionary&lt;Foundation.NSString,Foundation.NSOperation&gt;,Foundation.NSError&gt;.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchShareMetadata">
      <MemberSignature Language="C#" Value="public virtual void FetchShareMetadata (Foundation.NSUrl url, Action&lt;CloudKit.CKShareMetadata,Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FetchShareMetadata(class Foundation.NSUrl url, class System.Action`2&lt;class CloudKit.CKShareMetadata, class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.FetchShareMetadata(Foundation.NSUrl,System.Action{CloudKit.CKShareMetadata,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member FetchShareMetadata : Foundation.NSUrl * Action&lt;CloudKit.CKShareMetadata, Foundation.NSError&gt; -&gt; unit&#xA;override this.FetchShareMetadata : Foundation.NSUrl * Action&lt;CloudKit.CKShareMetadata, Foundation.NSError&gt; -&gt; unit" Usage="cKContainer.FetchShareMetadata (url, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("fetchShareMetadataWithURL:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Foundation.NSUrl" />
        <Parameter Name="completionHandler" Type="System.Action&lt;CloudKit.CKShareMetadata,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V19))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchShareMetadataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CloudKit.CKShareMetadata&gt; FetchShareMetadataAsync (Foundation.NSUrl url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class CloudKit.CKShareMetadata&gt; FetchShareMetadataAsync(class Foundation.NSUrl url) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.FetchShareMetadataAsync(Foundation.NSUrl)" />
      <MemberSignature Language="F#" Value="abstract member FetchShareMetadataAsync : Foundation.NSUrl -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKShareMetadata&gt;&#xA;override this.FetchShareMetadataAsync : Foundation.NSUrl -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKShareMetadata&gt;" Usage="cKContainer.FetchShareMetadataAsync url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CloudKit.CKShareMetadata&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Foundation.NSUrl" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <summary>To be added.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous FetchShareMetadata operation.  The value of the TResult parameter is of type System.Action&lt;CloudKit.CKShareMetadata,Foundation.NSError&gt;.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchShareParticipant">
      <MemberSignature Language="C#" Value="public virtual void FetchShareParticipant (CloudKit.CKRecordID userRecordID, Action&lt;CloudKit.CKShareParticipant,Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FetchShareParticipant(class CloudKit.CKRecordID userRecordID, class System.Action`2&lt;class CloudKit.CKShareParticipant, class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.FetchShareParticipant(CloudKit.CKRecordID,System.Action{CloudKit.CKShareParticipant,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member FetchShareParticipant : CloudKit.CKRecordID * Action&lt;CloudKit.CKShareParticipant, Foundation.NSError&gt; -&gt; unit&#xA;override this.FetchShareParticipant : CloudKit.CKRecordID * Action&lt;CloudKit.CKShareParticipant, Foundation.NSError&gt; -&gt; unit" Usage="cKContainer.FetchShareParticipant (userRecordID, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("fetchShareParticipantWithUserRecordID:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userRecordID" Type="CloudKit.CKRecordID" />
        <Parameter Name="completionHandler" Type="System.Action&lt;CloudKit.CKShareParticipant,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V20))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="userRecordID">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Retrieves the <see cref="T:CloudKit.CKShareParticipant" /> information for the user who accepted a shared record.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchShareParticipantAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CloudKit.CKShareParticipant&gt; FetchShareParticipantAsync (CloudKit.CKRecordID userRecordID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class CloudKit.CKShareParticipant&gt; FetchShareParticipantAsync(class CloudKit.CKRecordID userRecordID) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.FetchShareParticipantAsync(CloudKit.CKRecordID)" />
      <MemberSignature Language="F#" Value="abstract member FetchShareParticipantAsync : CloudKit.CKRecordID -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKShareParticipant&gt;&#xA;override this.FetchShareParticipantAsync : CloudKit.CKRecordID -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKShareParticipant&gt;" Usage="cKContainer.FetchShareParticipantAsync userRecordID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CloudKit.CKShareParticipant&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userRecordID" Type="CloudKit.CKRecordID" />
      </Parameters>
      <Docs>
        <param name="userRecordID">To be added.</param>
        <summary>Retrieves the <see cref="T:CloudKit.CKShareParticipant" /> information for the user who accepted a shared record.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous FetchShareParticipant operation.  The value of the TResult parameter is of type System.Action&lt;CloudKit.CKShareParticipant,Foundation.NSError&gt;.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchShareParticipantWithEmailAddress">
      <MemberSignature Language="C#" Value="public virtual void FetchShareParticipantWithEmailAddress (string emailAddress, Action&lt;CloudKit.CKShareParticipant,Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FetchShareParticipantWithEmailAddress(string emailAddress, class System.Action`2&lt;class CloudKit.CKShareParticipant, class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.FetchShareParticipantWithEmailAddress(System.String,System.Action{CloudKit.CKShareParticipant,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member FetchShareParticipantWithEmailAddress : string * Action&lt;CloudKit.CKShareParticipant, Foundation.NSError&gt; -&gt; unit&#xA;override this.FetchShareParticipantWithEmailAddress : string * Action&lt;CloudKit.CKShareParticipant, Foundation.NSError&gt; -&gt; unit" Usage="cKContainer.FetchShareParticipantWithEmailAddress (emailAddress, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("fetchShareParticipantWithEmailAddress:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailAddress" Type="System.String" />
        <Parameter Name="completionHandler" Type="System.Action&lt;CloudKit.CKShareParticipant,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V20))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="emailAddress">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Retrieves the <see cref="T:CloudKit.CKShareParticipant" /> information for the user who accepted a shared record..</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchShareParticipantWithEmailAddressAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CloudKit.CKShareParticipant&gt; FetchShareParticipantWithEmailAddressAsync (string emailAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class CloudKit.CKShareParticipant&gt; FetchShareParticipantWithEmailAddressAsync(string emailAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.FetchShareParticipantWithEmailAddressAsync(System.String)" />
      <MemberSignature Language="F#" Value="abstract member FetchShareParticipantWithEmailAddressAsync : string -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKShareParticipant&gt;&#xA;override this.FetchShareParticipantWithEmailAddressAsync : string -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKShareParticipant&gt;" Usage="cKContainer.FetchShareParticipantWithEmailAddressAsync emailAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CloudKit.CKShareParticipant&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="emailAddress">To be added.</param>
        <summary>Retrieves the <see cref="T:CloudKit.CKShareParticipant" /> information for the user who accepted a shared record..</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous FetchShareParticipantWithEmailAddress operation.  The value of the TResult parameter is of type System.Action&lt;CloudKit.CKShareParticipant,Foundation.NSError&gt;.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchShareParticipantWithPhoneNumber">
      <MemberSignature Language="C#" Value="public virtual void FetchShareParticipantWithPhoneNumber (string phoneNumber, Action&lt;CloudKit.CKShareParticipant,Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FetchShareParticipantWithPhoneNumber(string phoneNumber, class System.Action`2&lt;class CloudKit.CKShareParticipant, class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.FetchShareParticipantWithPhoneNumber(System.String,System.Action{CloudKit.CKShareParticipant,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member FetchShareParticipantWithPhoneNumber : string * Action&lt;CloudKit.CKShareParticipant, Foundation.NSError&gt; -&gt; unit&#xA;override this.FetchShareParticipantWithPhoneNumber : string * Action&lt;CloudKit.CKShareParticipant, Foundation.NSError&gt; -&gt; unit" Usage="cKContainer.FetchShareParticipantWithPhoneNumber (phoneNumber, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("fetchShareParticipantWithPhoneNumber:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phoneNumber" Type="System.String" />
        <Parameter Name="completionHandler" Type="System.Action&lt;CloudKit.CKShareParticipant,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V20))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="phoneNumber">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Retrieves the <see cref="T:CloudKit.CKShareParticipant" /> information for the user who accepted a shared record.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchShareParticipantWithPhoneNumberAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CloudKit.CKShareParticipant&gt; FetchShareParticipantWithPhoneNumberAsync (string phoneNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class CloudKit.CKShareParticipant&gt; FetchShareParticipantWithPhoneNumberAsync(string phoneNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.FetchShareParticipantWithPhoneNumberAsync(System.String)" />
      <MemberSignature Language="F#" Value="abstract member FetchShareParticipantWithPhoneNumberAsync : string -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKShareParticipant&gt;&#xA;override this.FetchShareParticipantWithPhoneNumberAsync : string -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKShareParticipant&gt;" Usage="cKContainer.FetchShareParticipantWithPhoneNumberAsync phoneNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CloudKit.CKShareParticipant&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phoneNumber" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="phoneNumber">To be added.</param>
        <summary>Retrieves the <see cref="T:CloudKit.CKShareParticipant" /> information for the user who accepted a shared record.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous FetchShareParticipantWithPhoneNumber operation.  The value of the TResult parameter is of type System.Action&lt;CloudKit.CKShareParticipant,Foundation.NSError&gt;.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchUserRecordId">
      <MemberSignature Language="C#" Value="public virtual void FetchUserRecordId (Action&lt;CloudKit.CKRecordID,Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FetchUserRecordId(class System.Action`2&lt;class CloudKit.CKRecordID, class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.FetchUserRecordId(System.Action{CloudKit.CKRecordID,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member FetchUserRecordId : Action&lt;CloudKit.CKRecordID, Foundation.NSError&gt; -&gt; unit&#xA;override this.FetchUserRecordId : Action&lt;CloudKit.CKRecordID, Foundation.NSError&gt; -&gt; unit" Usage="cKContainer.FetchUserRecordId completionHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("fetchUserRecordIDWithCompletionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completionHandler" Type="System.Action&lt;CloudKit.CKRecordID,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V21))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="completionHandler">To be added.</param>
        <summary>Retrieves the <see cref="T:CloudKit.CKRecordID" /> of the current user.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchUserRecordIdAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CloudKit.CKRecordID&gt; FetchUserRecordIdAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class CloudKit.CKRecordID&gt; FetchUserRecordIdAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.FetchUserRecordIdAsync" />
      <MemberSignature Language="F#" Value="abstract member FetchUserRecordIdAsync : unit -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKRecordID&gt;&#xA;override this.FetchUserRecordIdAsync : unit -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKRecordID&gt;" Usage="cKContainer.FetchUserRecordIdAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CloudKit.CKRecordID&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves the <see cref="T:CloudKit.CKRecordID" /> of the current user.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous FetchUserRecordId operation.  The value of the TResult parameter is of type System.Action&lt;CloudKit.CKRecordID,Foundation.NSError&gt;.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromIdentifier">
      <MemberSignature Language="C#" Value="public static CloudKit.CKContainer FromIdentifier (string containerIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CloudKit.CKContainer FromIdentifier(string containerIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.FromIdentifier(System.String)" />
      <MemberSignature Language="F#" Value="static member FromIdentifier : string -&gt; CloudKit.CKContainer" Usage="CloudKit.CKContainer.FromIdentifier containerIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("containerWithIdentifier:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CloudKit.CKContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containerIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="containerIdentifier">To be added.</param>
        <summary>Static method that retrieves the <see cref="T:CloudKit.CKContainer" /> identified by <paramref name="containerIdentifier" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccountStatus">
      <MemberSignature Language="C#" Value="public virtual void GetAccountStatus (Action&lt;CloudKit.CKAccountStatus,Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetAccountStatus(class System.Action`2&lt;valuetype CloudKit.CKAccountStatus, class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.GetAccountStatus(System.Action{CloudKit.CKAccountStatus,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member GetAccountStatus : Action&lt;CloudKit.CKAccountStatus, Foundation.NSError&gt; -&gt; unit&#xA;override this.GetAccountStatus : Action&lt;CloudKit.CKAccountStatus, Foundation.NSError&gt; -&gt; unit" Usage="cKContainer.GetAccountStatus completionHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("accountStatusWithCompletionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completionHandler" Type="System.Action&lt;CloudKit.CKAccountStatus,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V22))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="completionHandler">To be added.</param>
        <summary>Retrieves the current user's <see cref="T:CloudKit.CKAccountStatus" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccountStatusAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CloudKit.CKAccountStatus&gt; GetAccountStatusAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype CloudKit.CKAccountStatus&gt; GetAccountStatusAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.GetAccountStatusAsync" />
      <MemberSignature Language="F#" Value="abstract member GetAccountStatusAsync : unit -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKAccountStatus&gt;&#xA;override this.GetAccountStatusAsync : unit -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKAccountStatus&gt;" Usage="cKContainer.GetAccountStatusAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CloudKit.CKAccountStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves the current user's <see cref="T:CloudKit.CKAccountStatus" />.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous GetAccountStatus operation.  The value of the TResult parameter is of type System.Action&lt;CloudKit.CKAccountStatus,Foundation.NSError&gt;.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDatabase">
      <MemberSignature Language="C#" Value="public virtual CloudKit.CKDatabase GetDatabase (CloudKit.CKDatabaseScope databaseScope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class CloudKit.CKDatabase GetDatabase(valuetype CloudKit.CKDatabaseScope databaseScope) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.GetDatabase(CloudKit.CKDatabaseScope)" />
      <MemberSignature Language="F#" Value="abstract member GetDatabase : CloudKit.CKDatabaseScope -&gt; CloudKit.CKDatabase&#xA;override this.GetDatabase : CloudKit.CKDatabaseScope -&gt; CloudKit.CKDatabase" Usage="cKContainer.GetDatabase databaseScope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("databaseWithDatabaseScope:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CloudKit.CKDatabase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseScope" Type="CloudKit.CKDatabaseScope" />
      </Parameters>
      <Docs>
        <param name="databaseScope">To be added.</param>
        <summary>Retrieves the database with the specified <paramref name="databaseScope" />.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerDefaultName">
      <MemberSignature Language="C#" Value="public static Foundation.NSString OwnerDefaultName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Foundation.NSString OwnerDefaultName" />
      <MemberSignature Language="DocId" Value="P:CloudKit.CKContainer.OwnerDefaultName" />
      <MemberSignature Language="F#" Value="member this.OwnerDefaultName : Foundation.NSString" Usage="CloudKit.CKContainer.OwnerDefaultName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Field("CKOwnerDefaultName", "CloudKit")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'CurrentUserDefaultName' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.None, "Use 'CurrentUserDefaultName' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.None, "Use 'CurrentUserDefaultName' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Deprecated(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.None, "Use 'CurrentUserDefaultName' instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Foundation.NSString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Developers should not use this deprecated property. Developers should use 'CurrentUserDefaultName' instead.</summary>
        <value>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrivateCloudDatabase">
      <MemberSignature Language="C#" Value="public virtual CloudKit.CKDatabase PrivateCloudDatabase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CloudKit.CKDatabase PrivateCloudDatabase" />
      <MemberSignature Language="DocId" Value="P:CloudKit.CKContainer.PrivateCloudDatabase" />
      <MemberSignature Language="F#" Value="member this.PrivateCloudDatabase : CloudKit.CKDatabase" Usage="CloudKit.CKContainer.PrivateCloudDatabase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("privateCloudDatabase")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CloudKit.CKDatabase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <see cref="T:CloudKit.CKDatabase" /> that contains the user's private data.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PublicCloudDatabase">
      <MemberSignature Language="C#" Value="public virtual CloudKit.CKDatabase PublicCloudDatabase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CloudKit.CKDatabase PublicCloudDatabase" />
      <MemberSignature Language="DocId" Value="P:CloudKit.CKContainer.PublicCloudDatabase" />
      <MemberSignature Language="F#" Value="member this.PublicCloudDatabase : CloudKit.CKDatabase" Usage="CloudKit.CKContainer.PublicCloudDatabase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("publicCloudDatabase")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CloudKit.CKDatabase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <see cref="T:CloudKit.CKDatabase" /> that contais the application's public data.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestApplicationPermission">
      <MemberSignature Language="C#" Value="public virtual void RequestApplicationPermission (CloudKit.CKApplicationPermissions applicationPermission, Action&lt;CloudKit.CKApplicationPermissionStatus,Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestApplicationPermission(valuetype CloudKit.CKApplicationPermissions applicationPermission, class System.Action`2&lt;valuetype CloudKit.CKApplicationPermissionStatus, class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.RequestApplicationPermission(CloudKit.CKApplicationPermissions,System.Action{CloudKit.CKApplicationPermissionStatus,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member RequestApplicationPermission : CloudKit.CKApplicationPermissions * Action&lt;CloudKit.CKApplicationPermissionStatus, Foundation.NSError&gt; -&gt; unit&#xA;override this.RequestApplicationPermission : CloudKit.CKApplicationPermissions * Action&lt;CloudKit.CKApplicationPermissionStatus, Foundation.NSError&gt; -&gt; unit" Usage="cKContainer.RequestApplicationPermission (applicationPermission, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("requestApplicationPermission:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationPermission" Type="CloudKit.CKApplicationPermissions" />
        <Parameter Name="completionHandler" Type="System.Action&lt;CloudKit.CKApplicationPermissionStatus,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V23))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="applicationPermission">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Triggers the system UX for asking the user's permission for the requested <paramref name="applicationPermission" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestApplicationPermissionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CloudKit.CKApplicationPermissionStatus&gt; RequestApplicationPermissionAsync (CloudKit.CKApplicationPermissions applicationPermission);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype CloudKit.CKApplicationPermissionStatus&gt; RequestApplicationPermissionAsync(valuetype CloudKit.CKApplicationPermissions applicationPermission) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.RequestApplicationPermissionAsync(CloudKit.CKApplicationPermissions)" />
      <MemberSignature Language="F#" Value="abstract member RequestApplicationPermissionAsync : CloudKit.CKApplicationPermissions -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKApplicationPermissionStatus&gt;&#xA;override this.RequestApplicationPermissionAsync : CloudKit.CKApplicationPermissions -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKApplicationPermissionStatus&gt;" Usage="cKContainer.RequestApplicationPermissionAsync applicationPermission" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CloudKit.CKApplicationPermissionStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationPermission" Type="CloudKit.CKApplicationPermissions" />
      </Parameters>
      <Docs>
        <param name="applicationPermission">To be added.</param>
        <summary>Triggers the system UX for asking the user's permission for the requested <paramref name="applicationPermission" />.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous RequestApplicationPermission operation.  The value of the TResult parameter is of type System.Action&lt;CloudKit.CKApplicationPermissionStatus,Foundation.NSError&gt;.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SharedCloudDatabase">
      <MemberSignature Language="C#" Value="public virtual CloudKit.CKDatabase SharedCloudDatabase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class CloudKit.CKDatabase SharedCloudDatabase" />
      <MemberSignature Language="DocId" Value="P:CloudKit.CKContainer.SharedCloudDatabase" />
      <MemberSignature Language="F#" Value="member this.SharedCloudDatabase : CloudKit.CKDatabase" Usage="CloudKit.CKContainer.SharedCloudDatabase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("sharedCloudDatabase")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CloudKit.CKDatabase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <see cref="T:CloudKit.CKDatabase" /> that contains the app's shared data.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatusForApplicationPermission">
      <MemberSignature Language="C#" Value="public virtual void StatusForApplicationPermission (CloudKit.CKApplicationPermissions applicationPermission, Action&lt;CloudKit.CKApplicationPermissionStatus,Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StatusForApplicationPermission(valuetype CloudKit.CKApplicationPermissions applicationPermission, class System.Action`2&lt;valuetype CloudKit.CKApplicationPermissionStatus, class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.StatusForApplicationPermission(CloudKit.CKApplicationPermissions,System.Action{CloudKit.CKApplicationPermissionStatus,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member StatusForApplicationPermission : CloudKit.CKApplicationPermissions * Action&lt;CloudKit.CKApplicationPermissionStatus, Foundation.NSError&gt; -&gt; unit&#xA;override this.StatusForApplicationPermission : CloudKit.CKApplicationPermissions * Action&lt;CloudKit.CKApplicationPermissionStatus, Foundation.NSError&gt; -&gt; unit" Usage="cKContainer.StatusForApplicationPermission (applicationPermission, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("statusForApplicationPermission:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationPermission" Type="CloudKit.CKApplicationPermissions" />
        <Parameter Name="completionHandler" Type="System.Action&lt;CloudKit.CKApplicationPermissionStatus,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V23))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="applicationPermission">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Requests the current <see cref="T:CloudKit.CKApplicationPermissionStatus" /> for the specified <see cref="T:CloudKit.CKApplicationPermissions" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatusForApplicationPermissionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CloudKit.CKApplicationPermissionStatus&gt; StatusForApplicationPermissionAsync (CloudKit.CKApplicationPermissions applicationPermission);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype CloudKit.CKApplicationPermissionStatus&gt; StatusForApplicationPermissionAsync(valuetype CloudKit.CKApplicationPermissions applicationPermission) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKContainer.StatusForApplicationPermissionAsync(CloudKit.CKApplicationPermissions)" />
      <MemberSignature Language="F#" Value="abstract member StatusForApplicationPermissionAsync : CloudKit.CKApplicationPermissions -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKApplicationPermissionStatus&gt;&#xA;override this.StatusForApplicationPermissionAsync : CloudKit.CKApplicationPermissions -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKApplicationPermissionStatus&gt;" Usage="cKContainer.StatusForApplicationPermissionAsync applicationPermission" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CloudKit.CKApplicationPermissionStatus&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationPermission" Type="CloudKit.CKApplicationPermissions" />
      </Parameters>
      <Docs>
        <param name="applicationPermission">To be added.</param>
        <summary>Requests the current <see cref="T:CloudKit.CKApplicationPermissionStatus" /> for the specified <see cref="T:CloudKit.CKApplicationPermissions" />.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous StatusForApplicationPermission operation.  The value of the TResult parameter is of type System.Action&lt;CloudKit.CKApplicationPermissionStatus,Foundation.NSError&gt;.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
