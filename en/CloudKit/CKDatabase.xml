<Type Name="CKDatabase" FullName="CloudKit.CKDatabase">
  <TypeSignature Language="C#" Value="public class CKDatabase : Foundation.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CKDatabase extends Foundation.NSObject" />
  <TypeSignature Language="DocId" Value="T:CloudKit.CKDatabase" />
  <TypeSignature Language="F#" Value="type CKDatabase = class&#xA;    inherit NSObject" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.iOS</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Foundation.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Foundation.Register("CKDatabase", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.WatchOS, 3, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 8, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 10, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Contains data within a <see cref="T:CloudKit.CKContainer" />. A public <see cref="T:CloudKit.CKDatabase" /> provides shared data, a private db holds the current user's data.</summary>
    <remarks>To be added.</remarks>
    <related type="externalDocumentation" href="https://developer.apple.com/library/ios/documentation/CloudKit/Reference/CKDatabase_class/index.html">Apple documentation for <c>CKDatabase</c></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CKDatabase (Foundation.NSObjectFlag t);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Foundation.NSObjectFlag t) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKDatabase.#ctor(Foundation.NSObjectFlag)" />
      <MemberSignature Language="F#" Value="new CloudKit.CKDatabase : Foundation.NSObjectFlag -&gt; CloudKit.CKDatabase" Usage="new CloudKit.CKDatabase t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="t" Type="Foundation.NSObjectFlag" />
      </Parameters>
      <Docs>
        <param name="t">Unused sentinel value, pass NSObjectFlag.Empty.</param>
        <summary>Constructor to call on derived classes to skip initialization and merely allocate the object.</summary>
        <remarks>
          <para>This constructor should be called by derived classes when they completely construct the object in managed code and merely want the runtime to allocate and initialize the NSObject.   This is required to implement the two-step initialization process that Objective-C uses, the first step is to perform the object allocation, the second step is to initialize the object.   When developers invoke the constructor that takes the NSObjectFlag.Empty they take advantage of a direct path that goes all the way up to NSObject to merely allocate the object's memory and bind the Objective-C and C# objects together.    The actual initialization of the object is up to the developer.</para>
          <para>This constructor is typically used by the binding generator to allocate the object, but prevent the actual initialization to take place.   Once the allocation has taken place, the constructor has to initialize the object.   With constructors generated by the binding generator this means that it manually invokes one of the "init" methods to initialize the object.</para>
          <para>It is the developer's responsibility to completely initialize the object if they chain up using the NSObjectFlag.Empty path.</para>
          <para>In general, if the developer's constructor invokes the NSObjectFlag.Empty base implementation, then it should be calling an Objective-C init method.   If this is not the case, developers should instead chain to the proper constructor in their class. </para>
          <para>The argument value is ignored and merely ensures that the only code that is executed is the construction phase is the basic NSObject allocation and runtime type registration.  Typically the chaining would look like this:</para>
          <example>
            <code lang="C#"><![CDATA[
//
// The NSObjectFlag merely allocates the object and registers the
// C# class with the Objective-C runtime if necessary, but no actual
// initXxx method is invoked, that is done later in the constructor
//
// This is taken from Xamarin.iOS's source code:
//
[Export ("initWithFrame:")]
public UIView (System.Drawing.RectangleF frame) : base (NSObjectFlag.Empty)
{
// Invoke the init method now.
	var initWithFrame = new Selector ("initWithFrame:").Handle;
	if (IsDirectBinding)
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSend_CGRect (this.Handle, initWithFrame, frame);
	else
		Handle = ObjCRuntime.Messaging.IntPtr_objc_msgSendSuper_CGRect (this.SuperHandle, initWithFrame, frame);
}
]]></code>
          </example>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal CKDatabase (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKDatabase.#ctor(System.IntPtr)" />
      <MemberSignature Language="F#" Value="new CloudKit.CKDatabase : nativeint -&gt; CloudKit.CKDatabase" Usage="new CloudKit.CKDatabase handle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">Pointer (handle) to the unmanaged object.</param>
        <summary>A constructor used when creating managed representations of unmanaged objects;  Called by the runtime.</summary>
        <remarks>
          <para>This constructor is invoked by the runtime infrastructure (<see cref="M:ObjCRuntime.Runtime.GetNSObject(System.IntPtr)" />) to create a new managed representation for a pointer to an unmanaged Objective-C object.    Developers should not invoke this method directly, instead they should call the GetNSObject method as it will prevent two instances of a managed object to point to the same native object.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOperation">
      <MemberSignature Language="C#" Value="public virtual void AddOperation (CloudKit.CKDatabaseOperation operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddOperation(class CloudKit.CKDatabaseOperation operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKDatabase.AddOperation(CloudKit.CKDatabaseOperation)" />
      <MemberSignature Language="F#" Value="abstract member AddOperation : CloudKit.CKDatabaseOperation -&gt; unit&#xA;override this.AddOperation : CloudKit.CKDatabaseOperation -&gt; unit" Usage="cKDatabase.AddOperation operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("addOperation:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="CloudKit.CKDatabaseOperation" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassHandle">
      <MemberSignature Language="C#" Value="public override IntPtr ClassHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ClassHandle" />
      <MemberSignature Language="DocId" Value="P:CloudKit.CKDatabase.ClassHandle" />
      <MemberSignature Language="F#" Value="member this.ClassHandle : nativeint" Usage="CloudKit.CKDatabase.ClassHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The handle for this class.</summary>
        <value>The pointer to the Objective-C class.</value>
        <remarks>Each Xamarin.iOS class mirrors an unmanaged Objective-C class.   This value contains the pointer to the Objective-C class, it is similar to calling objc_getClass with the object name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DatabaseScope">
      <MemberSignature Language="C#" Value="public virtual CloudKit.CKDatabaseScope DatabaseScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype CloudKit.CKDatabaseScope DatabaseScope" />
      <MemberSignature Language="DocId" Value="P:CloudKit.CKDatabase.DatabaseScope" />
      <MemberSignature Language="F#" Value="member this.DatabaseScope : CloudKit.CKDatabaseScope" Usage="CloudKit.CKDatabase.DatabaseScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.iOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.TvOS, 10, 0, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: ObjCRuntime.Introduced(ObjCRuntime.PlatformName.MacOSX, 10, 12, ObjCRuntime.PlatformArchitecture.Arch64, null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Foundation.Export("databaseScope", ObjCRuntime.ArgumentSemantic.UnsafeUnretained)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>CloudKit.CKDatabaseScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the current database contains public, private, or shared data.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteRecord">
      <MemberSignature Language="C#" Value="public virtual void DeleteRecord (CloudKit.CKRecordID recordId, Action&lt;CloudKit.CKRecordID,Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteRecord(class CloudKit.CKRecordID recordId, class System.Action`2&lt;class CloudKit.CKRecordID, class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKDatabase.DeleteRecord(CloudKit.CKRecordID,System.Action{CloudKit.CKRecordID,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member DeleteRecord : CloudKit.CKRecordID * Action&lt;CloudKit.CKRecordID, Foundation.NSError&gt; -&gt; unit&#xA;override this.DeleteRecord : CloudKit.CKRecordID * Action&lt;CloudKit.CKRecordID, Foundation.NSError&gt; -&gt; unit" Usage="cKDatabase.DeleteRecord (recordId, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("deleteRecordWithID:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordId" Type="CloudKit.CKRecordID" />
        <Parameter Name="completionHandler" Type="System.Action&lt;CloudKit.CKRecordID,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V21))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="recordId">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Deletes the record with the <paramref name="recordId" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteRecordAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CloudKit.CKRecordID&gt; DeleteRecordAsync (CloudKit.CKRecordID recordId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class CloudKit.CKRecordID&gt; DeleteRecordAsync(class CloudKit.CKRecordID recordId) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKDatabase.DeleteRecordAsync(CloudKit.CKRecordID)" />
      <MemberSignature Language="F#" Value="abstract member DeleteRecordAsync : CloudKit.CKRecordID -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKRecordID&gt;&#xA;override this.DeleteRecordAsync : CloudKit.CKRecordID -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKRecordID&gt;" Usage="cKDatabase.DeleteRecordAsync recordId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CloudKit.CKRecordID&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordId" Type="CloudKit.CKRecordID" />
      </Parameters>
      <Docs>
        <param name="recordId">To be added.</param>
        <summary>Deletes the record with the <paramref name="recordId" />.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous DeleteRecord operation.  The value of the TResult parameter is of type System.Action&lt;CloudKit.CKRecordID,Foundation.NSError&gt;.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteRecordZone">
      <MemberSignature Language="C#" Value="public virtual void DeleteRecordZone (CloudKit.CKRecordZoneID zoneId, Action&lt;CloudKit.CKRecordZoneID,Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteRecordZone(class CloudKit.CKRecordZoneID zoneId, class System.Action`2&lt;class CloudKit.CKRecordZoneID, class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKDatabase.DeleteRecordZone(CloudKit.CKRecordZoneID,System.Action{CloudKit.CKRecordZoneID,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member DeleteRecordZone : CloudKit.CKRecordZoneID * Action&lt;CloudKit.CKRecordZoneID, Foundation.NSError&gt; -&gt; unit&#xA;override this.DeleteRecordZone : CloudKit.CKRecordZoneID * Action&lt;CloudKit.CKRecordZoneID, Foundation.NSError&gt; -&gt; unit" Usage="cKDatabase.DeleteRecordZone (zoneId, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("deleteRecordZoneWithID:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zoneId" Type="CloudKit.CKRecordZoneID" />
        <Parameter Name="completionHandler" Type="System.Action&lt;CloudKit.CKRecordZoneID,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V24))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="zoneId">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Deletes the zone at the specified <paramref name="zoneId" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteRecordZoneAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CloudKit.CKRecordZoneID&gt; DeleteRecordZoneAsync (CloudKit.CKRecordZoneID zoneId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class CloudKit.CKRecordZoneID&gt; DeleteRecordZoneAsync(class CloudKit.CKRecordZoneID zoneId) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKDatabase.DeleteRecordZoneAsync(CloudKit.CKRecordZoneID)" />
      <MemberSignature Language="F#" Value="abstract member DeleteRecordZoneAsync : CloudKit.CKRecordZoneID -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKRecordZoneID&gt;&#xA;override this.DeleteRecordZoneAsync : CloudKit.CKRecordZoneID -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKRecordZoneID&gt;" Usage="cKDatabase.DeleteRecordZoneAsync zoneId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CloudKit.CKRecordZoneID&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zoneId" Type="CloudKit.CKRecordZoneID" />
      </Parameters>
      <Docs>
        <param name="zoneId">To be added.</param>
        <summary>Deletes the zone at the specified <paramref name="zoneId" />.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous DeleteRecordZone operation.  The value of the TResult parameter is of type System.Action&lt;CloudKit.CKRecordZoneID,Foundation.NSError&gt;.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteSubscription">
      <MemberSignature Language="C#" Value="public virtual void DeleteSubscription (string subscriptionID, CloudKit.CKDatabaseDeleteSubscriptionHandler completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteSubscription(string subscriptionID, class CloudKit.CKDatabaseDeleteSubscriptionHandler completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKDatabase.DeleteSubscription(System.String,CloudKit.CKDatabaseDeleteSubscriptionHandler)" />
      <MemberSignature Language="F#" Value="abstract member DeleteSubscription : string * CloudKit.CKDatabaseDeleteSubscriptionHandler -&gt; unit&#xA;override this.DeleteSubscription : string * CloudKit.CKDatabaseDeleteSubscriptionHandler -&gt; unit" Usage="cKDatabase.DeleteSubscription (subscriptionID, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("deleteSubscriptionWithID:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionID" Type="System.String" />
        <Parameter Name="completionHandler" Type="CloudKit.CKDatabaseDeleteSubscriptionHandler">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDCKDatabaseDeleteSubscriptionHandler))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="subscriptionID">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Deletes the <see cref="T:CloudKit.CKSubscription" /> with the specified <paramref name="subscriptionID" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteSubscriptionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; DeleteSubscriptionAsync (string subscriptionID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; DeleteSubscriptionAsync(string subscriptionID) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKDatabase.DeleteSubscriptionAsync(System.String)" />
      <MemberSignature Language="F#" Value="abstract member DeleteSubscriptionAsync : string -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.DeleteSubscriptionAsync : string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="cKDatabase.DeleteSubscriptionAsync subscriptionID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionID">To be added.</param>
        <summary>Deletes the <see cref="T:CloudKit.CKSubscription" /> with the specified <paramref name="subscriptionID" />.</summary>
        <returns>
          <para>A task that represents the asynchronous DeleteSubscription operation.   The value of the TResult parameter is a CloudKit.CKDatabaseDeleteSubscriptionHandler.</para>
        </returns>
        <remarks>
          <para copied="true">The DeleteSubscriptionAsync method is suitable to be used with C# async by returning control to the caller with a Task representing the operation.</para>
          <para copied="true">To be added.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchAllRecordZones">
      <MemberSignature Language="C#" Value="public virtual void FetchAllRecordZones (Action&lt;CloudKit.CKRecordZone[],Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FetchAllRecordZones(class System.Action`2&lt;class CloudKit.CKRecordZone[], class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKDatabase.FetchAllRecordZones(System.Action{CloudKit.CKRecordZone[],Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member FetchAllRecordZones : Action&lt;CloudKit.CKRecordZone[], Foundation.NSError&gt; -&gt; unit&#xA;override this.FetchAllRecordZones : Action&lt;CloudKit.CKRecordZone[], Foundation.NSError&gt; -&gt; unit" Usage="cKDatabase.FetchAllRecordZones completionHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("fetchAllRecordZonesWithCompletionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completionHandler" Type="System.Action&lt;CloudKit.CKRecordZone[],Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V25))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="completionHandler">To be added.</param>
        <summary>Retrieves all record zones, with low priority.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchAllRecordZonesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CloudKit.CKRecordZone[]&gt; FetchAllRecordZonesAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class CloudKit.CKRecordZone[]&gt; FetchAllRecordZonesAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKDatabase.FetchAllRecordZonesAsync" />
      <MemberSignature Language="F#" Value="abstract member FetchAllRecordZonesAsync : unit -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKRecordZone[]&gt;&#xA;override this.FetchAllRecordZonesAsync : unit -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKRecordZone[]&gt;" Usage="cKDatabase.FetchAllRecordZonesAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CloudKit.CKRecordZone[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves all record zones, with low priority.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous FetchAllRecordZones operation.  The value of the TResult parameter is of type System.Action&lt;CloudKit.CKRecordZone[],Foundation.NSError&gt;.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchAllSubscriptions">
      <MemberSignature Language="C#" Value="public virtual void FetchAllSubscriptions (Action&lt;CloudKit.CKSubscription[],Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FetchAllSubscriptions(class System.Action`2&lt;class CloudKit.CKSubscription[], class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKDatabase.FetchAllSubscriptions(System.Action{CloudKit.CKSubscription[],Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member FetchAllSubscriptions : Action&lt;CloudKit.CKSubscription[], Foundation.NSError&gt; -&gt; unit&#xA;override this.FetchAllSubscriptions : Action&lt;CloudKit.CKSubscription[], Foundation.NSError&gt; -&gt; unit" Usage="cKDatabase.FetchAllSubscriptions completionHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("fetchAllSubscriptionsWithCompletionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completionHandler" Type="System.Action&lt;CloudKit.CKSubscription[],Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V26))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="completionHandler">To be added.</param>
        <summary>Retrieves all the <see cref="T:CloudKit.CKSubscription" /> objects from the database.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchAllSubscriptionsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CloudKit.CKSubscription[]&gt; FetchAllSubscriptionsAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class CloudKit.CKSubscription[]&gt; FetchAllSubscriptionsAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKDatabase.FetchAllSubscriptionsAsync" />
      <MemberSignature Language="F#" Value="abstract member FetchAllSubscriptionsAsync : unit -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKSubscription[]&gt;&#xA;override this.FetchAllSubscriptionsAsync : unit -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKSubscription[]&gt;" Usage="cKDatabase.FetchAllSubscriptionsAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CloudKit.CKSubscription[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves all the <see cref="T:CloudKit.CKSubscription" /> objects from the database.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous FetchAllSubscriptions operation.  The value of the TResult parameter is of type System.Action&lt;CloudKit.CKSubscription[],Foundation.NSError&gt;.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchRecord">
      <MemberSignature Language="C#" Value="public virtual void FetchRecord (CloudKit.CKRecordID recordId, Action&lt;CloudKit.CKRecord,Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FetchRecord(class CloudKit.CKRecordID recordId, class System.Action`2&lt;class CloudKit.CKRecord, class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKDatabase.FetchRecord(CloudKit.CKRecordID,System.Action{CloudKit.CKRecord,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member FetchRecord : CloudKit.CKRecordID * Action&lt;CloudKit.CKRecord, Foundation.NSError&gt; -&gt; unit&#xA;override this.FetchRecord : CloudKit.CKRecordID * Action&lt;CloudKit.CKRecord, Foundation.NSError&gt; -&gt; unit" Usage="cKDatabase.FetchRecord (recordId, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("fetchRecordWithID:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordId" Type="CloudKit.CKRecordID" />
        <Parameter Name="completionHandler" Type="System.Action&lt;CloudKit.CKRecord,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V27))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="recordId">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Fetches the <see cref="T:CloudKit.CKRecord" /> with the specified <paramref name="recordId" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchRecordAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CloudKit.CKRecord&gt; FetchRecordAsync (CloudKit.CKRecordID recordId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class CloudKit.CKRecord&gt; FetchRecordAsync(class CloudKit.CKRecordID recordId) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKDatabase.FetchRecordAsync(CloudKit.CKRecordID)" />
      <MemberSignature Language="F#" Value="abstract member FetchRecordAsync : CloudKit.CKRecordID -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKRecord&gt;&#xA;override this.FetchRecordAsync : CloudKit.CKRecordID -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKRecord&gt;" Usage="cKDatabase.FetchRecordAsync recordId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CloudKit.CKRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordId" Type="CloudKit.CKRecordID" />
      </Parameters>
      <Docs>
        <param name="recordId">To be added.</param>
        <summary>Fetches the <see cref="T:CloudKit.CKRecord" /> with the specified <paramref name="recordId" />.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous FetchRecord operation.  The value of the TResult parameter is of type System.Action&lt;CloudKit.CKRecord,Foundation.NSError&gt;.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchRecordZone">
      <MemberSignature Language="C#" Value="public virtual void FetchRecordZone (CloudKit.CKRecordZoneID zoneId, Action&lt;CloudKit.CKRecordZone,Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FetchRecordZone(class CloudKit.CKRecordZoneID zoneId, class System.Action`2&lt;class CloudKit.CKRecordZone, class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKDatabase.FetchRecordZone(CloudKit.CKRecordZoneID,System.Action{CloudKit.CKRecordZone,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member FetchRecordZone : CloudKit.CKRecordZoneID * Action&lt;CloudKit.CKRecordZone, Foundation.NSError&gt; -&gt; unit&#xA;override this.FetchRecordZone : CloudKit.CKRecordZoneID * Action&lt;CloudKit.CKRecordZone, Foundation.NSError&gt; -&gt; unit" Usage="cKDatabase.FetchRecordZone (zoneId, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("fetchRecordZoneWithID:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zoneId" Type="CloudKit.CKRecordZoneID" />
        <Parameter Name="completionHandler" Type="System.Action&lt;CloudKit.CKRecordZone,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V28))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="zoneId">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Fetches the <see cref="T:CloudKit.CKRecordZone" /> with the specified <paramref name="zoneId" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchRecordZoneAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CloudKit.CKRecordZone&gt; FetchRecordZoneAsync (CloudKit.CKRecordZoneID zoneId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class CloudKit.CKRecordZone&gt; FetchRecordZoneAsync(class CloudKit.CKRecordZoneID zoneId) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKDatabase.FetchRecordZoneAsync(CloudKit.CKRecordZoneID)" />
      <MemberSignature Language="F#" Value="abstract member FetchRecordZoneAsync : CloudKit.CKRecordZoneID -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKRecordZone&gt;&#xA;override this.FetchRecordZoneAsync : CloudKit.CKRecordZoneID -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKRecordZone&gt;" Usage="cKDatabase.FetchRecordZoneAsync zoneId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CloudKit.CKRecordZone&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zoneId" Type="CloudKit.CKRecordZoneID" />
      </Parameters>
      <Docs>
        <param name="zoneId">To be added.</param>
        <summary>Fetches the <see cref="T:CloudKit.CKRecordZone" /> with the specified <paramref name="zoneId" />.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous FetchRecordZone operation.  The value of the TResult parameter is of type System.Action&lt;CloudKit.CKRecordZone,Foundation.NSError&gt;.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchSubscription">
      <MemberSignature Language="C#" Value="public virtual void FetchSubscription (string subscriptionId, Action&lt;CloudKit.CKSubscription,Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FetchSubscription(string subscriptionId, class System.Action`2&lt;class CloudKit.CKSubscription, class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKDatabase.FetchSubscription(System.String,System.Action{CloudKit.CKSubscription,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member FetchSubscription : string * Action&lt;CloudKit.CKSubscription, Foundation.NSError&gt; -&gt; unit&#xA;override this.FetchSubscription : string * Action&lt;CloudKit.CKSubscription, Foundation.NSError&gt; -&gt; unit" Usage="cKDatabase.FetchSubscription (subscriptionId, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("fetchSubscriptionWithID:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="completionHandler" Type="System.Action&lt;CloudKit.CKSubscription,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V29))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="subscriptionId">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Fetches the <see cref="T:CloudKit.CKSubscription" /> with the specified <paramref name="subscriptionId" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchSubscriptionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CloudKit.CKSubscription&gt; FetchSubscriptionAsync (string subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class CloudKit.CKSubscription&gt; FetchSubscriptionAsync(string subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKDatabase.FetchSubscriptionAsync(System.String)" />
      <MemberSignature Language="F#" Value="abstract member FetchSubscriptionAsync : string -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKSubscription&gt;&#xA;override this.FetchSubscriptionAsync : string -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKSubscription&gt;" Usage="cKDatabase.FetchSubscriptionAsync subscriptionId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CloudKit.CKSubscription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">To be added.</param>
        <summary>Fetches the <see cref="T:CloudKit.CKSubscription" /> with the specified <paramref name="subscriptionId" />.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous FetchSubscription operation.  The value of the TResult parameter is of type System.Action&lt;CloudKit.CKSubscription,Foundation.NSError&gt;.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformQuery">
      <MemberSignature Language="C#" Value="public virtual void PerformQuery (CloudKit.CKQuery query, CloudKit.CKRecordZoneID zoneId, Action&lt;CloudKit.CKRecord[],Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformQuery(class CloudKit.CKQuery query, class CloudKit.CKRecordZoneID zoneId, class System.Action`2&lt;class CloudKit.CKRecord[], class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKDatabase.PerformQuery(CloudKit.CKQuery,CloudKit.CKRecordZoneID,System.Action{CloudKit.CKRecord[],Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member PerformQuery : CloudKit.CKQuery * CloudKit.CKRecordZoneID * Action&lt;CloudKit.CKRecord[], Foundation.NSError&gt; -&gt; unit&#xA;override this.PerformQuery : CloudKit.CKQuery * CloudKit.CKRecordZoneID * Action&lt;CloudKit.CKRecord[], Foundation.NSError&gt; -&gt; unit" Usage="cKDatabase.PerformQuery (query, zoneId, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("performQuery:inZoneWithID:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="CloudKit.CKQuery" />
        <Parameter Name="zoneId" Type="CloudKit.CKRecordZoneID" />
        <Parameter Name="completionHandler" Type="System.Action&lt;CloudKit.CKRecord[],Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V30))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="query">To be added.</param>
        <param name="zoneId">
          <para>To be added.</para>
          <para tool="nullallowed">This parameter can be <see langword="null" />.</para>
        </param>
        <param name="completionHandler">To be added.</param>
        <summary>Executes the <paramref name="query" /> on the zone identified by <paramref name="zoneId" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformQueryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CloudKit.CKRecord[]&gt; PerformQueryAsync (CloudKit.CKQuery query, CloudKit.CKRecordZoneID zoneId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class CloudKit.CKRecord[]&gt; PerformQueryAsync(class CloudKit.CKQuery query, class CloudKit.CKRecordZoneID zoneId) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKDatabase.PerformQueryAsync(CloudKit.CKQuery,CloudKit.CKRecordZoneID)" />
      <MemberSignature Language="F#" Value="abstract member PerformQueryAsync : CloudKit.CKQuery * CloudKit.CKRecordZoneID -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKRecord[]&gt;&#xA;override this.PerformQueryAsync : CloudKit.CKQuery * CloudKit.CKRecordZoneID -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKRecord[]&gt;" Usage="cKDatabase.PerformQueryAsync (query, zoneId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CloudKit.CKRecord[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="CloudKit.CKQuery" />
        <Parameter Name="zoneId" Type="CloudKit.CKRecordZoneID" />
      </Parameters>
      <Docs>
        <param name="query">To be added.</param>
        <param name="zoneId">To be added.This parameter can be .</param>
        <summary>Executes the <paramref name="query" /> on the zone identified by <paramref name="zoneId" />.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous PerformQuery operation.  The value of the TResult parameter is of type System.Action&lt;CloudKit.CKRecord[],Foundation.NSError&gt;.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveRecord">
      <MemberSignature Language="C#" Value="public virtual void SaveRecord (CloudKit.CKRecord record, Action&lt;CloudKit.CKRecord,Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveRecord(class CloudKit.CKRecord record, class System.Action`2&lt;class CloudKit.CKRecord, class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKDatabase.SaveRecord(CloudKit.CKRecord,System.Action{CloudKit.CKRecord,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member SaveRecord : CloudKit.CKRecord * Action&lt;CloudKit.CKRecord, Foundation.NSError&gt; -&gt; unit&#xA;override this.SaveRecord : CloudKit.CKRecord * Action&lt;CloudKit.CKRecord, Foundation.NSError&gt; -&gt; unit" Usage="cKDatabase.SaveRecord (record, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("saveRecord:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="CloudKit.CKRecord" />
        <Parameter Name="completionHandler" Type="System.Action&lt;CloudKit.CKRecord,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V27))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="record">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Saves the specified <see cref="T:CloudKit.CKRecord" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveRecordAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CloudKit.CKRecord&gt; SaveRecordAsync (CloudKit.CKRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class CloudKit.CKRecord&gt; SaveRecordAsync(class CloudKit.CKRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKDatabase.SaveRecordAsync(CloudKit.CKRecord)" />
      <MemberSignature Language="F#" Value="abstract member SaveRecordAsync : CloudKit.CKRecord -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKRecord&gt;&#xA;override this.SaveRecordAsync : CloudKit.CKRecord -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKRecord&gt;" Usage="cKDatabase.SaveRecordAsync record" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CloudKit.CKRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="CloudKit.CKRecord" />
      </Parameters>
      <Docs>
        <param name="record">To be added.</param>
        <summary>Saves the specified <see cref="T:CloudKit.CKRecord" />.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous SaveRecord operation.  The value of the TResult parameter is of type System.Action&lt;CloudKit.CKRecord,Foundation.NSError&gt;.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveRecordZone">
      <MemberSignature Language="C#" Value="public virtual void SaveRecordZone (CloudKit.CKRecordZone zone, Action&lt;CloudKit.CKRecordZone,Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveRecordZone(class CloudKit.CKRecordZone zone, class System.Action`2&lt;class CloudKit.CKRecordZone, class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKDatabase.SaveRecordZone(CloudKit.CKRecordZone,System.Action{CloudKit.CKRecordZone,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member SaveRecordZone : CloudKit.CKRecordZone * Action&lt;CloudKit.CKRecordZone, Foundation.NSError&gt; -&gt; unit&#xA;override this.SaveRecordZone : CloudKit.CKRecordZone * Action&lt;CloudKit.CKRecordZone, Foundation.NSError&gt; -&gt; unit" Usage="cKDatabase.SaveRecordZone (zone, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("saveRecordZone:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zone" Type="CloudKit.CKRecordZone" />
        <Parameter Name="completionHandler" Type="System.Action&lt;CloudKit.CKRecordZone,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V28))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="zone">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Saves the specified <paramref name="zone" /> to the current database.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveRecordZoneAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CloudKit.CKRecordZone&gt; SaveRecordZoneAsync (CloudKit.CKRecordZone zone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class CloudKit.CKRecordZone&gt; SaveRecordZoneAsync(class CloudKit.CKRecordZone zone) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKDatabase.SaveRecordZoneAsync(CloudKit.CKRecordZone)" />
      <MemberSignature Language="F#" Value="abstract member SaveRecordZoneAsync : CloudKit.CKRecordZone -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKRecordZone&gt;&#xA;override this.SaveRecordZoneAsync : CloudKit.CKRecordZone -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKRecordZone&gt;" Usage="cKDatabase.SaveRecordZoneAsync zone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CloudKit.CKRecordZone&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zone" Type="CloudKit.CKRecordZone" />
      </Parameters>
      <Docs>
        <param name="zone">To be added.</param>
        <summary>Saves the specified <paramref name="zone" /> to the current database.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous SaveRecordZone operation.  The value of the TResult parameter is of type System.Action&lt;CloudKit.CKRecordZone,Foundation.NSError&gt;.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveSubscription">
      <MemberSignature Language="C#" Value="public virtual void SaveSubscription (CloudKit.CKSubscription subscription, Action&lt;CloudKit.CKSubscription,Foundation.NSError&gt; completionHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveSubscription(class CloudKit.CKSubscription subscription, class System.Action`2&lt;class CloudKit.CKSubscription, class Foundation.NSError&gt; completionHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKDatabase.SaveSubscription(CloudKit.CKSubscription,System.Action{CloudKit.CKSubscription,Foundation.NSError})" />
      <MemberSignature Language="F#" Value="abstract member SaveSubscription : CloudKit.CKSubscription * Action&lt;CloudKit.CKSubscription, Foundation.NSError&gt; -&gt; unit&#xA;override this.SaveSubscription : CloudKit.CKSubscription * Action&lt;CloudKit.CKSubscription, Foundation.NSError&gt; -&gt; unit" Usage="cKDatabase.SaveSubscription (subscription, completionHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Foundation.Export("saveSubscription:completionHandler:")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="CloudKit.CKSubscription" />
        <Parameter Name="completionHandler" Type="System.Action&lt;CloudKit.CKSubscription,Foundation.NSError&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>ObjCRuntime.BlockProxy(typeof(ObjCRuntime.Trampolines/NIDActionArity2V29))</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="subscription">To be added.</param>
        <param name="completionHandler">To be added.</param>
        <summary>Saves the specified <paramref name="subscription" /> to the current database.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveSubscriptionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;CloudKit.CKSubscription&gt; SaveSubscriptionAsync (CloudKit.CKSubscription subscription);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class CloudKit.CKSubscription&gt; SaveSubscriptionAsync(class CloudKit.CKSubscription subscription) cil managed" />
      <MemberSignature Language="DocId" Value="M:CloudKit.CKDatabase.SaveSubscriptionAsync(CloudKit.CKSubscription)" />
      <MemberSignature Language="F#" Value="abstract member SaveSubscriptionAsync : CloudKit.CKSubscription -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKSubscription&gt;&#xA;override this.SaveSubscriptionAsync : CloudKit.CKSubscription -&gt; System.Threading.Tasks.Task&lt;CloudKit.CKSubscription&gt;" Usage="cKDatabase.SaveSubscriptionAsync subscription" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Xamarin.iOS</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>ObjCRuntime.BindingImpl(ObjCRuntime.BindingImplOptions.GeneratedCode | ObjCRuntime.BindingImplOptions.Optimizable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>ObjCRuntime.Unavailable(ObjCRuntime.PlatformName.WatchOS, ObjCRuntime.PlatformArchitecture.All, null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;CloudKit.CKSubscription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="CloudKit.CKSubscription" />
      </Parameters>
      <Docs>
        <param name="subscription">To be added.</param>
        <summary>Saves the specified <paramref name="subscription" /> to the current database.</summary>
        <returns>
          <para class="improve-task-t-return-type-description">A task that represents the asynchronous SaveSubscription operation.  The value of the TResult parameter is of type System.Action&lt;CloudKit.CKSubscription,Foundation.NSError&gt;.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
